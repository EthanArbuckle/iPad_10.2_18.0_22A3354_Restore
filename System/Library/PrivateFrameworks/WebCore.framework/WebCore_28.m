uint64_t WebCore::jsHTMLAreaElement_target(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::targetAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLAreaElement_target(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::targetAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::targetAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLAreaElement_download(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::downloadAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::downloadAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::downloadAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLAreaElement_download(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::downloadAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::downloadAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::downloadAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::downloadAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLAreaElement_referrerPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLAnchorElement::referrerPolicyForBindings(*(WebCore::HTMLAnchorElement **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLAreaElement_referrerPolicy(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::referrerpolicyAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::referrerpolicyAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::referrerpolicyAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::referrerpolicyAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLAreaElement_relList(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WTF *)WebCore::HTMLAnchorElement::relList(*(WebCore::HTMLAnchorElement **)(a2 + 24));
  return WebCore::wrap<WebCore::DOMTokenList>(a1, v3, v4);
}

BOOL WebCore::setJSHTMLAreaElement_relList(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLAreaElement::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

uint64_t WebCore::jsHTMLAreaElement_href(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  WTF::StringImpl **v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  uint64_t *v13;
  int v14;
  uint64_t v15;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  char v22;
  char v23;
  char **v24;
  char *v25;

  v6 = *(WebCore::Element **)(a2 + 24);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  v8 = &v21;
  WebCore::Element::getURLAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::hrefAttr, a3, a4, (WTF::URL *)&v21, a5);
  if ((v22 & 2) == 0)
  {
    v8 = &v21;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v21))
    {
      v20 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v20 != -1)
      {
        v25 = &v23;
        v24 = &v25;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v8 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v10 = *v8;
  if (v10)
    *(_DWORD *)v10 += 2;
  v11 = v21;
  v21 = 0;
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v9);
    else
      *(_DWORD *)v11 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v9);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v12 = *(_QWORD *)(a1 + 56);
  v13 = (uint64_t *)(v12 + 41968);
  if (!v10)
    return *v13;
  v14 = *((_DWORD *)v10 + 1);
  if (v14)
  {
    if (v14 != 1)
    {
LABEL_12:
      v15 = *(_QWORD *)(v12 + 64760);
      if (!v15 || v10 != *(WTF::StringImpl **)(v15 + 8))
        v15 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_15;
    }
    v17 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
    if ((*((_BYTE *)v10 + 16) & 4) != 0)
    {
      v18 = *v17;
    }
    else
    {
      v19 = *(unsigned __int16 *)v17;
      if (v19 > 0xFF)
        goto LABEL_12;
      v18 = v19;
    }
    v15 = *(_QWORD *)(v12 + 8 * v18 + 42216);
  }
  else
  {
    v15 = *v13;
  }
LABEL_15:
  if (*(_DWORD *)v10 == 2)
    WTF::StringImpl::destroy(v10, v9);
  else
    *(_DWORD *)v10 -= 2;
  return v15;
}

BOOL WebCore::setJSHTMLAreaElement_href(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::hrefAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::hrefAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::hrefAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::hrefAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLAreaElement_origin(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLAnchorElement::origin(*(WebCore::HTMLAnchorElement **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsHTMLAreaElement_protocol(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::URLDecomposition::protocol((WebCore::URLDecomposition *)(*(_QWORD *)(a2 + 24) + 112), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLAreaElement_protocol(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::HTMLAnchorElement *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v14;
  int v15;
  char v16;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::HTMLAnchorElement **)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v14);
  v9 = v15;
  v10 = v15 == 0;
  if (!v15)
  {
    v11 = v14;
    v14 = 0;
    if (v11)
    {
      WebCore::HTMLAnchorElement::setProtocol(v8);
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v12);
      else
        *(_DWORD *)v11 -= 2;
    }
    else
    {
      WebCore::HTMLAnchorElement::setProtocol(v8);
    }
    v9 = v15;
  }
  if (v9 != -1)
    ((void (*)(char *, WTF::StringImpl **))off_1E328A618[v9])(&v16, &v14);
  return v10;
}

uint64_t WebCore::jsHTMLAreaElement_username(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15[5];

  (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 16))(v15, *(_QWORD *)(a2 + 24) + 112);
  WTF::URL::encodedUser((WTF::URL *)v15);
  if ((v3 & 0xFF00000000) != 0)
    WTF::String::String();
  else
    WTF::String::String();
  v5 = v15[0];
  v15[0] = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v4);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v14;
  if (!v14 || (v8 = *((_DWORD *)v14 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_12:
    if (!v7)
      return v9;
    goto LABEL_22;
  }
  if (v8 != 1)
    goto LABEL_9;
  v10 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
  if ((*((_BYTE *)v14 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_21:
    v9 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_22;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_21;
  }
LABEL_9:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v14 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v14;
    goto LABEL_12;
  }
LABEL_22:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
  return v9;
}

BOOL WebCore::setJSHTMLAreaElement_username(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  int v18;
  WTF::StringImpl *v19[5];

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v17);
  v9 = v18;
  v10 = v18 == 0;
  if (!v18)
  {
    v11 = v8 + 112;
    v12 = v17;
    v17 = 0;
    if (v12)
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v11 + 16))(v19, v11);
      WTF::URL::host((WTF::URL *)v19);
      if ((_DWORD)v13 && (WTF::URL::protocolIs() & 1) == 0)
      {
        WTF::URL::setUser();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v11 + 24))(v11, v19);
      }
      v14 = v19[0];
      v19[0] = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v13);
        else
          *(_DWORD *)v14 -= 2;
      }
      if (*(_DWORD *)v12 != 2)
      {
        *(_DWORD *)v12 -= 2;
LABEL_22:
        v9 = v18;
        goto LABEL_23;
      }
      v16 = v12;
    }
    else
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v11 + 16))(v19, v11);
      WTF::URL::host((WTF::URL *)v19);
      if ((_DWORD)v13 && (WTF::URL::protocolIs() & 1) == 0)
      {
        WTF::URL::setUser();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v11 + 24))(v11, v19);
      }
      v16 = v19[0];
      v19[0] = 0;
      if (!v16)
        goto LABEL_22;
      if (*(_DWORD *)v16 != 2)
      {
        *(_DWORD *)v16 -= 2;
        goto LABEL_22;
      }
    }
    WTF::StringImpl::destroy(v16, v13);
    goto LABEL_22;
  }
LABEL_23:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328A618[v9])(v19, &v17);
  return v10;
}

uint64_t WebCore::jsHTMLAreaElement_password(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15[5];

  (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 16))(v15, *(_QWORD *)(a2 + 24) + 112);
  WTF::URL::encodedPassword((WTF::URL *)v15);
  if ((v3 & 0xFF00000000) != 0)
    WTF::String::String();
  else
    WTF::String::String();
  v5 = v15[0];
  v15[0] = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v4);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v14;
  if (!v14 || (v8 = *((_DWORD *)v14 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_12:
    if (!v7)
      return v9;
    goto LABEL_22;
  }
  if (v8 != 1)
    goto LABEL_9;
  v10 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
  if ((*((_BYTE *)v14 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_21:
    v9 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_22;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_21;
  }
LABEL_9:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v14 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v14;
    goto LABEL_12;
  }
LABEL_22:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
  return v9;
}

BOOL WebCore::setJSHTMLAreaElement_password(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  int v18;
  WTF::StringImpl *v19[5];

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v17);
  v9 = v18;
  v10 = v18 == 0;
  if (!v18)
  {
    v11 = v8 + 112;
    v12 = v17;
    v17 = 0;
    if (v12)
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v11 + 16))(v19, v11);
      WTF::URL::host((WTF::URL *)v19);
      if ((_DWORD)v13 && (WTF::URL::protocolIs() & 1) == 0)
      {
        WTF::URL::setPassword();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v11 + 24))(v11, v19);
      }
      v14 = v19[0];
      v19[0] = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v13);
        else
          *(_DWORD *)v14 -= 2;
      }
      if (*(_DWORD *)v12 != 2)
      {
        *(_DWORD *)v12 -= 2;
LABEL_22:
        v9 = v18;
        goto LABEL_23;
      }
      v16 = v12;
    }
    else
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v11 + 16))(v19, v11);
      WTF::URL::host((WTF::URL *)v19);
      if ((_DWORD)v13 && (WTF::URL::protocolIs() & 1) == 0)
      {
        WTF::URL::setPassword();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v11 + 24))(v11, v19);
      }
      v16 = v19[0];
      v19[0] = 0;
      if (!v16)
        goto LABEL_22;
      if (*(_DWORD *)v16 != 2)
      {
        *(_DWORD *)v16 -= 2;
        goto LABEL_22;
      }
    }
    WTF::StringImpl::destroy(v16, v13);
    goto LABEL_22;
  }
LABEL_23:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328A618[v9])(v19, &v17);
  return v10;
}

uint64_t WebCore::jsHTMLAreaElement_host(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::URLDecomposition::host((WebCore::URLDecomposition *)(*(_QWORD *)(a2 + 24) + 112));
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    if (!v4)
      return v6;
    goto LABEL_15;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLAreaElement_host(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v15;
  int v16;
  char v17;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v15);
  v9 = v16;
  v10 = v16 == 0;
  if (!v16)
  {
    v11 = v8 + 112;
    v12 = v15;
    v15 = 0;
    if (v12)
    {
      WebCore::URLDecomposition::setHost(v11, *(_QWORD *)(v12 + 8), *(_DWORD *)(v12 + 4));
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v12, v13);
      else
        *(_DWORD *)v12 -= 2;
    }
    else
    {
      WebCore::URLDecomposition::setHost(v11, 0, 0);
    }
    v9 = v16;
  }
  if (v9 != -1)
    ((void (*)(char *, uint64_t *))off_1E328A618[v9])(&v17, &v15);
  return v10;
}

uint64_t WebCore::jsHTMLAreaElement_hostname(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15[5];

  (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 16))(v15, *(_QWORD *)(a2 + 24) + 112);
  WTF::URL::host((WTF::URL *)v15);
  if ((v3 & 0xFF00000000) != 0)
    WTF::String::String();
  else
    WTF::String::String();
  v5 = v15[0];
  v15[0] = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v4);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v14;
  if (!v14 || (v8 = *((_DWORD *)v14 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_12:
    if (!v7)
      return v9;
    goto LABEL_22;
  }
  if (v8 != 1)
    goto LABEL_9;
  v10 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
  if ((*((_BYTE *)v14 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_21:
    v9 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_22;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_21;
  }
LABEL_9:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v14 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v14;
    goto LABEL_12;
  }
LABEL_22:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
  return v9;
}

BOOL WebCore::setJSHTMLAreaElement_hostname(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v15;
  int v16;
  char v17;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v15);
  v9 = v16;
  v10 = v16 == 0;
  if (!v16)
  {
    v11 = v8 + 112;
    v12 = v15;
    v15 = 0;
    if (v12)
    {
      WebCore::URLDecomposition::setHostname(v11, *(_QWORD *)(v12 + 8), *(_DWORD *)(v12 + 4));
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v12, v13);
      else
        *(_DWORD *)v12 -= 2;
    }
    else
    {
      WebCore::URLDecomposition::setHostname(v11, 0, 0);
    }
    v9 = v16;
  }
  if (v9 != -1)
    ((void (*)(char *, uint64_t *))off_1E328A618[v9])(&v17, &v15);
  return v10;
}

uint64_t WebCore::jsHTMLAreaElement_port(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  int v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14[5];

  (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 16))(v14, *(_QWORD *)(a2 + 24) + 112);
  v4 = WTF::URL::port((WTF::URL *)v14);
  v5 = v14[0];
  v14[0] = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v3);
    else
      *(_DWORD *)v5 -= 2;
  }
  if ((v4 & 0xFF0000) != 0)
  {
    WTF::String::number((WTF::String *)(unsigned __int16)v4);
    v6 = v14[0];
  }
  else
  {
    v6 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v6 += 2;
    v14[0] = v6;
  }
  v7 = *(_QWORD *)(a1 + 56);
  if (!v6 || (v8 = *((_DWORD *)v6 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v7 + 41968);
LABEL_15:
    v14[0] = 0;
    if (!v6)
      return v9;
    goto LABEL_25;
  }
  if (v8 != 1)
    goto LABEL_12;
  v10 = (unsigned __int8 *)*((_QWORD *)v6 + 1);
  if ((*((_BYTE *)v6 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_23:
    v9 = *(_QWORD *)(v7 + 8 * v11 + 42216);
    goto LABEL_24;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_23;
  }
LABEL_12:
  v9 = *(_QWORD *)(v7 + 64760);
  if (!v9 || v6 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v6 = v14[0];
    goto LABEL_15;
  }
LABEL_24:
  v14[0] = 0;
LABEL_25:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v6);
  else
    *(_DWORD *)v6 -= 2;
  return v9;
}

BOOL WebCore::setJSHTMLAreaElement_port(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v15;
  int v16;
  char v17;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v15);
  v9 = v16;
  v10 = v16 == 0;
  if (!v16)
  {
    v11 = v8 + 112;
    v12 = v15;
    v15 = 0;
    if (v12)
    {
      WebCore::URLDecomposition::setPort(v11, *(unsigned __int16 **)(v12 + 8), *(unsigned int *)(v12 + 4) | ((unint64_t)((*(_DWORD *)(v12 + 16) >> 2) & 1) << 32));
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v12, v13);
      else
        *(_DWORD *)v12 -= 2;
    }
    else
    {
      WebCore::URLDecomposition::setPort(v11, 0, 0x100000000);
    }
    v9 = v16;
  }
  if (v9 != -1)
    ((void (*)(char *, uint64_t *))off_1E328A618[v9])(&v17, &v15);
  return v10;
}

uint64_t WebCore::jsHTMLAreaElement_pathname(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15[5];

  (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 16))(v15, *(_QWORD *)(a2 + 24) + 112);
  WTF::URL::path((WTF::URL *)v15);
  if ((v3 & 0xFF00000000) != 0)
    WTF::String::String();
  else
    WTF::String::String();
  v5 = v15[0];
  v15[0] = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v4);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v14;
  if (!v14 || (v8 = *((_DWORD *)v14 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_12:
    if (!v7)
      return v9;
    goto LABEL_22;
  }
  if (v8 != 1)
    goto LABEL_9;
  v10 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
  if ((*((_BYTE *)v14 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_21:
    v9 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_22;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_21;
  }
LABEL_9:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v14 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v14;
    goto LABEL_12;
  }
LABEL_22:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
  return v9;
}

BOOL WebCore::setJSHTMLAreaElement_pathname(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v17);
  v9 = v18;
  v10 = v18 == 0;
  if (!v18)
  {
    v11 = v8 + 112;
    v12 = v17;
    v17 = 0;
    if (v12)
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v11 + 16))(&v19, v11);
      if ((v20 & 4) == 0)
      {
        WTF::URL::setPath();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v11 + 24))(v11, &v19);
      }
      v14 = v19;
      v19 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v13);
        else
          *(_DWORD *)v14 -= 2;
      }
      if (*(_DWORD *)v12 != 2)
      {
        *(_DWORD *)v12 -= 2;
LABEL_21:
        v9 = v18;
        goto LABEL_22;
      }
      v16 = v12;
    }
    else
    {
      (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t))(*(_QWORD *)v11 + 16))(&v19, v11);
      if ((v20 & 4) == 0)
      {
        WTF::URL::setPath();
        (*(void (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v11 + 24))(v11, &v19);
      }
      v16 = v19;
      v19 = 0;
      if (!v16)
        goto LABEL_21;
      if (*(_DWORD *)v16 != 2)
      {
        *(_DWORD *)v16 -= 2;
        goto LABEL_21;
      }
    }
    WTF::StringImpl::destroy(v16, v13);
    goto LABEL_21;
  }
LABEL_22:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328A618[v9])(&v19, &v17);
  return v10;
}

uint64_t WebCore::jsHTMLAreaElement_search(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::URLDecomposition::search((WebCore::URLDecomposition *)(*(_QWORD *)(a2 + 24) + 112), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLAreaElement_search(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  WebCore::URLDecomposition *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v15;
  int v16;
  WTF::StringImpl *v17;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v15);
  v9 = v16;
  v10 = v16 == 0;
  if (!v16)
  {
    v11 = (WebCore::URLDecomposition *)(v8 + 112);
    v12 = v15;
    v15 = 0;
    v17 = v12;
    WebCore::URLDecomposition::setSearch(v11, (const WTF::String *)&v17);
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v13);
      else
        *(_DWORD *)v12 -= 2;
    }
    v9 = v16;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328A618[v9])(&v17, &v15);
  return v10;
}

uint64_t WebCore::jsHTMLAreaElement_hash(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::URLDecomposition::hash((WebCore::URLDecomposition *)(*(_QWORD *)(a2 + 24) + 112), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLAreaElement_hash(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v15;
  uint64_t v16;
  int v17;
  _QWORD v18[5];

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAreaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v16);
  v9 = v17;
  v10 = v17 == 0;
  if (!v17)
  {
    v11 = v8 + 112;
    v12 = v16;
    v16 = 0;
    if (v12)
    {
      WebCore::URLDecomposition::setHash(v11, *(WTF::StringImpl **)(v12 + 8), *(unsigned int *)(v12 + 4) | ((unint64_t)((*(_DWORD *)(v12 + 16) >> 2) & 1) << 32));
      if (*(_DWORD *)v12 != 2)
      {
        *(_DWORD *)v12 -= 2;
LABEL_16:
        v9 = v17;
        goto LABEL_17;
      }
      v15 = (WTF::StringImpl *)v12;
    }
    else
    {
      (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v11 + 16))(v18, v11);
      WTF::URL::removeFragmentIdentifier((WTF::URL *)v18);
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v11 + 24))(v11, v18);
      v15 = (WTF::StringImpl *)v18[0];
      v18[0] = 0;
      if (!v15)
        goto LABEL_16;
      if (*(_DWORD *)v15 != 2)
      {
        *(_DWORD *)v15 -= 2;
        goto LABEL_16;
      }
    }
    WTF::StringImpl::destroy(v15, v13);
    goto LABEL_16;
  }
LABEL_17:
  if (v9 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E328A618[v9])(v18, &v16);
  return v10;
}

uint64_t WebCore::JSHTMLAreaElement::subspaceForImpl(WebCore::JSHTMLAreaElement *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4176);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 4176);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 40, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 4176);
    *(_QWORD *)(v8 + 4176) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 4176);
  *(_QWORD *)(v3 + 4176) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSHTMLAttachmentElement::prototype(WebCore::JSHTMLAttachmentElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSHTMLAttachmentElement::s_info
      + ~((_QWORD)&WebCore::JSHTMLAttachmentElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLAttachmentElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLAttachmentElement::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSHTMLAttachmentElement::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSHTMLAttachmentElement::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    v14 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
    Structure = WebCore::JSHTMLAttachmentElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSHTMLAttachmentElementPrototype::create(this, a2, Structure, v16);
    v18 = WebCore::JSHTMLAttachmentElement::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSHTMLAttachmentElement::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

uint64_t WebCore::JSHTMLAttachmentElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLAttachmentElement::JSHTMLAttachmentElement(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t WebCore::JSHTMLAttachmentElement::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_DWORD *)(v2 + 24) += 2;
  *a2 = v2;
  return this;
}

unint64_t WebCore::JSHTMLAttachmentElement::createPrototype(WebCore::JSHTMLAttachmentElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  Structure = WebCore::JSHTMLAttachmentElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSHTMLAttachmentElementPrototype::create(this, a2, Structure, v7);
}

uint64_t WebCore::JSHTMLAttachmentElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLAttachmentElementPrototype::create(WebCore::JSHTMLAttachmentElementPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSHTMLAttachmentElement::s_info, &WebCore::JSHTMLAttachmentElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAttachmentElement>,(WebCore::DOMConstructorID)511>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  unint64_t v22;
  unint64_t v23;
  WTF::StringImpl *v24;
  unint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4088);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v24) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v22 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v22);
    v5[2] = SlowCase + (int)v22;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v24, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAttachmentElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v23 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v23);
    v10[2848] = v2 + (int)v23;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v24 = 0;
  v25 = v2;
  v26 = -1;
  v27 = 0x1000000;
  v28 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v24);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v24);
  v14 = v24;
  v24 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v24 = 0;
  v25 = v2;
  v26 = -1;
  v27 = 0x1000000;
  v28 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v24);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSHTMLAttachmentElement::prototype((WebCore::JSHTMLAttachmentElement *)a1, (JSC::VM *)a2, v17);
  v24 = 0;
  v25 = v2;
  v26 = -1;
  v27 = 0x1000000;
  v28 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v24);
  if ((*(_BYTE *)((16 * *(unsigned int *)v2) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v2, (JSC::VM *)a1);
  WTF::AtomStringImpl::addLiteral();
  v19 = v24;
  JSC::reifyStaticProperty((JSC::VM *)a1, (uint64_t)&WebCore::JSHTMLAttachmentElement::s_info, (unint64_t *)&v24, (uint64_t)&WebCore::JSHTMLAttachmentElementConstructorTableValues, (unsigned __int8 *)v2);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4088) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLAttachmentElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLAttachmentElementPrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAttachmentElement>,(WebCore::DOMConstructorID)511>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLAttachmentElement_file(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 120);
  if (v2)
    return WebCore::wrap<WebCore::File>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::setJSHTMLAttachmentElement_file(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v12;
  _BOOL4 v13;
  char **v14;
  BOOL v15;
  _DWORD *v17;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLAttachmentElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLAttachmentElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v9 = 0;
  }
  else
  {
    v17 = *(_DWORD **)(a1 + 56);
    if ((a3 & 0xFFFE000000000002) != 0)
      goto LABEL_29;
    v12 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
    v13 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
    v14 = (char **)(16 * v12);
    if ((_DWORD)v12)
      v15 = v14 == &WebCore::JSFile::s_info;
    else
      v15 = 1;
    if (!v15)
    {
      do
      {
        v14 = (char **)v14[2];
        v13 = v14 != 0;
      }
      while (v14 != &WebCore::JSFile::s_info && v14 != 0);
    }
    if (!v13 || (v9 = *(_DWORD **)(a3 + 24)) == 0)
    {
LABEL_29:
      WebCore::throwAttributeTypeError(a1, (int)&v17, "HTMLAttachmentElement", 22, "file", 5, "File", 5);
      return 0;
    }
    ++v9[4];
  }
  v17 = v9;
  WebCore::HTMLAttachmentElement::setFile(v8, (WTF::StringImpl *)&v17, 0);
  v10 = v17;
  v17 = 0;
  if (v10)
  {
    if (v10[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v10 + 8))(v10);
    else
      --v10[4];
  }
  return 1;
}

uint64_t WebCore::jsHTMLAttachmentElement_uniqueIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 128);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsHTMLAttachmentElement_saveButtonClientRect(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  bmalloc::api *v17;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v3 = WebCore::HTMLAttachmentElement::saveButtonClientRect(*(WebCore::HTMLAttachmentElement **)(a2 + 24));
  if (!v3)
    return 2;
  v4 = *(_QWORD *)(v2 + 3320);
  if (!*(_DWORD *)(v4 + 48))
  {
    v5 = *(_QWORD *)v3;
    if (*(_QWORD *)v3)
      goto LABEL_4;
LABEL_6:
    ++*(_DWORD *)(v3 + 8);
    v17 = (bmalloc::api *)v3;
    v6 = WebCore::createWrapper<WebCore::DOMRectReadOnly,WebCore::DOMRectReadOnly>(v2, (uint64_t *)&v17);
    WTF::Ref<WebCore::DOMRectReadOnly,WTF::RawPtrTraits<WebCore::DOMRectReadOnly>,WTF::DefaultRefDerefTraits<WebCore::DOMRectReadOnly>>::~Ref(&v17, v7);
    return v6;
  }
  v9 = *(_QWORD *)(v4 + 32);
  if (!v9)
    goto LABEL_6;
  v10 = *(_DWORD *)(v9 - 8);
  v11 = (~(v3 << 32) + v3) ^ ((unint64_t)(~(v3 << 32) + v3) >> 22);
  v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
  v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
  v14 = v10 & ((v13 >> 31) ^ v13);
  v15 = *(_QWORD *)(v9 + 16 * v14);
  if (v15 != v3)
  {
    v16 = 1;
    while (v15)
    {
      v14 = ((_DWORD)v14 + v16) & v10;
      v15 = *(_QWORD *)(v9 + 16 * v14);
      ++v16;
      if (v15 == v3)
        goto LABEL_14;
    }
    goto LABEL_6;
  }
LABEL_14:
  v5 = *(_QWORD *)(v9 + 16 * v14 + 8);
  if (!v5)
    goto LABEL_6;
LABEL_4:
  if ((*(_BYTE *)(v5 + 8) & 3) != 0)
    goto LABEL_6;
  v6 = *(_QWORD *)v5;
  if (!*(_QWORD *)v5)
    goto LABEL_6;
  return v6;
}

uint64_t WebCore::JSHTMLAttachmentElement::subspaceForImpl(WebCore::JSHTMLAttachmentElement *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4184);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 4184);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 40, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 4184);
    *(_QWORD *)(v8 + 4184) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 4184);
  *(_QWORD *)(v3 + 4184) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSHTMLAttachmentElement::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSHTMLAttachmentElement::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSHTMLAttachmentElement::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

JSCell *WebCore::JSDOMLegacyFactoryFunction<WebCore::JSHTMLAudioElement>::construct(JSC *a1, uint64_t a2)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  int v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WebCore::Node *v12;
  JSC::VM *v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char **v20;
  int v21;
  unint64_t v22;
  WebCore::JSHTMLMediaElement *v23;
  uint64_t v24;
  unint64_t v25;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  JSCell *v29;
  void *v30;
  JSC::JSCell *v31;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v33;
  JSC::JSGlobalObject *v34;
  JSC::VM *v35;
  JSC::Structure *v36;
  JSC::VM *FunctionRealm;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char **v44;
  int v45;
  JSC::JSObject *v46;
  uint64_t v47;
  unint64_t Structure;
  JSC::Structure *v49;
  JSC::JSCell *v50;
  uint64_t v51;
  unint64_t SubclassStructure;
  WebCore::Node *v53;
  WTF::StringImpl *v55;
  WebCore::Node *v56;
  WTF::StringImpl *v57;
  int v58;
  JSC::VM *v59;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v59 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(a1, &v59, (uint64_t)"HTMLAudioElement", 17);
  v7 = v6;
  if (*(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194BC1B14);
  }
  if (*(_DWORD *)(a2 + 32) == 1 || *(_QWORD *)(a2 + 48) == 10)
  {
    v8 = (WTF::StringImpl *)*MEMORY[0x1E0CBF2F8];
    if (*MEMORY[0x1E0CBF2F8])
      *(_DWORD *)v8 += 2;
    v58 = 0;
LABEL_10:
    v57 = 0;
    v55 = v8;
    WebCore::HTMLAudioElement::createForLegacyFactoryFunction((WebCore::HTMLAudioElement *)(v7 - 192), &v55, &v56);
    v11 = v55;
    v55 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
    v12 = v56;
    if (*(uint64_t (***)(WebCore::Node *__hidden))v56 != off_1E33B6158)
    {
      __break(0xC471u);
      JUMPOUT(0x194BC1B3CLL);
    }
    v13 = *(JSC::VM **)(v5 + 40);
    v14 = *((_QWORD *)v13 + 412);
    if (v14)
    {
      v15 = *(_DWORD *)(v14 - 8);
      v16 = ((unint64_t)&WebCore::JSHTMLAudioElement::s_info
           + ~((_QWORD)&WebCore::JSHTMLAudioElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLAudioElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLAudioElement::s_info << 32)) >> 22);
      v17 = 9 * ((v16 + ~(v16 << 13)) ^ ((v16 + ~(v16 << 13)) >> 8));
      v18 = (v17 ^ (v17 >> 15)) + ~((v17 ^ (v17 >> 15)) << 27);
      v19 = v15 & ((v18 >> 31) ^ v18);
      v20 = *(char ***)(v14 + 16 * v19);
      if (v20 == &WebCore::JSHTMLAudioElement::s_info)
      {
LABEL_19:
        v22 = *(_QWORD *)(v14 + 16 * v19 + 8);
        if (v22)
        {
LABEL_21:
          v29 = (JSCell *)WebCore::JSHTMLAudioElement::create(v22, v13, (uint64_t *)&v56);
          WebCore::cacheWrapper<WebCore::HTMLAudioElement,WebCore::JSHTMLAudioElement>(*((_QWORD *)v13 + 415), (uint64_t)v12, (uint64_t)v29);
          v31 = *(JSC::JSCell **)(a2 + 40);
          if (((unint64_t)v31 & 0xFFFE000000000002) != 0
            || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v31)) == 0
            || (v34 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
            || (v35 = (JSC::VM *)*((_QWORD *)a1 + 7),
                FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v33),
                *((_DWORD *)v35 + 20))
            && (JSC::VM::hasExceptionsAfterHandlingTraps(v35) & 1) != 0)
          {
LABEL_34:
            if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
              v29 = 0;
            v53 = v56;
            v56 = 0;
            if (v53)
            {
              if (*((_DWORD *)v53 + 6) == 2)
              {
                if ((*((_WORD *)v53 + 15) & 0x400) == 0)
                  WebCore::Node::removedLastRef(v53, v30);
              }
              else
              {
                *((_DWORD *)v53 + 6) -= 2;
              }
            }
            v9 = v58;
            goto LABEL_39;
          }
          v38 = *((_QWORD *)FunctionRealm + 412);
          if (v38)
          {
            v39 = *(_DWORD *)(v38 - 8);
            v40 = ((unint64_t)&WebCore::JSHTMLAudioElement::s_info
                 + ~((_QWORD)&WebCore::JSHTMLAudioElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLAudioElement::s_info
                                                                            + ~((_QWORD)&WebCore::JSHTMLAudioElement::s_info << 32)) >> 22);
            v41 = 9 * ((v40 + ~(v40 << 13)) ^ ((v40 + ~(v40 << 13)) >> 8));
            v42 = (v41 ^ (v41 >> 15)) + ~((v41 ^ (v41 >> 15)) << 27);
            v43 = v39 & ((v42 >> 31) ^ v42);
            v44 = *(char ***)(v38 + 16 * v43);
            if (v44 == &WebCore::JSHTMLAudioElement::s_info)
            {
LABEL_30:
              v46 = *(JSC::JSObject **)(v38 + 16 * v43 + 8);
              if (v46)
              {
LABEL_32:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v34, v46, v36);
                if (!*((_DWORD *)v35 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v35) & 1) == 0)
                  JSC::JSObject::setStructure(v29, v35, SubclassStructure);
                goto LABEL_34;
              }
            }
            else
            {
              v45 = 1;
              while (v44)
              {
                v43 = ((_DWORD)v43 + v45) & v39;
                v44 = *(char ***)(v38 + 16 * v43);
                ++v45;
                if (v44 == &WebCore::JSHTMLAudioElement::s_info)
                  goto LABEL_30;
              }
            }
          }
          v47 = WebCore::getDOMStructure<WebCore::JSHTMLMediaElement>(v35, FunctionRealm);
          Structure = WebCore::JSHTMLAudioElementPrototype::createStructure((uint64_t *)v35, (uint64_t)FunctionRealm, *(JSC::JSCell **)(v47 + 48));
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v50 = (JSC::JSCell *)WebCore::JSHTMLAudioElementPrototype::create(v35, FunctionRealm, Structure, v49);
          v51 = WebCore::JSHTMLAudioElement::createStructure((uint64_t *)v35, (uint64_t)FunctionRealm, v50);
          v46 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v51, (uint64_t)&WebCore::JSHTMLAudioElement::s_info);
          goto LABEL_32;
        }
      }
      else
      {
        v21 = 1;
        while (v20)
        {
          v19 = ((_DWORD)v19 + v21) & v15;
          v20 = *(char ***)(v14 + 16 * v19);
          ++v21;
          if (v20 == &WebCore::JSHTMLAudioElement::s_info)
            goto LABEL_19;
        }
      }
    }
    v23 = (WebCore::JSHTMLMediaElement *)*((_QWORD *)v13 + 7);
    v24 = WebCore::getDOMStructure<WebCore::JSHTMLMediaElement>(v23, v13);
    v25 = WebCore::JSHTMLAudioElementPrototype::createStructure((uint64_t *)v23, (uint64_t)v13, *(JSC::JSCell **)(v24 + 48));
    *(_DWORD *)(v25 + 16) |= 0x80000u;
    v27 = (JSC::JSCell *)WebCore::JSHTMLAudioElementPrototype::create(v23, v13, v25, v26);
    v28 = WebCore::JSHTMLAudioElement::createStructure((uint64_t *)v23, (uint64_t)v13, v27);
    v22 = WebCore::cacheDOMStructure((JSCell *)v13, v28, (uint64_t)&WebCore::JSHTMLAudioElement::s_info);
    goto LABEL_21;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v57);
  v9 = v58;
  if (!v58)
  {
    v8 = v57;
    goto LABEL_10;
  }
  v29 = 0;
LABEL_39:
  if (v9 != -1)
    ((void (*)(WebCore::Node **, WTF::StringImpl **))off_1E328B3D8[v9])(&v56, &v57);
  return v29;
}

uint64_t WebCore::JSHTMLAudioElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLMediaElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLMediaElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLMediaElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAudioElement>,(WebCore::DOMConstructorID)512>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4096);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMediaElement>,(WebCore::DOMConstructorID)550>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAudioElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSHTMLAudioElement::prototype((WebCore::JSHTMLAudioElement *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4096) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMLegacyFactoryFunction<WebCore::JSHTMLAudioElement>,(WebCore::DOMConstructorID)513>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4104);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v21) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v21, &WebCore::JSDOMLegacyFactoryFunction<WebCore::JSHTMLAudioElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v20);
    v9[2848] = v2 + (int)v20;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(*(_QWORD *)(a2 + 56) + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v21);
  v13 = v21;
  v21 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v21);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v17 = WebCore::JSHTMLAudioElement::prototype((WebCore::JSHTMLAudioElement *)a1, (JSC::VM *)a2, v16);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4104) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLAudioElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLAudioElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAudioElement>,(WebCore::DOMConstructorID)512>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSHTMLAudioElementOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v10 = v9[15];
  if (!v10)
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  v11 = *(_QWORD *)(v10 + 8);
  if (!v11 || *(_BYTE *)(v11 + 180) || !v9[16] && !(*(unsigned int (**)(_QWORD *))(v9[14] + 64))(v9 + 14))
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  if (a5)
  {
    *a5 = "ActiveDOMObject with pending activity";
    a5[1] = 38;
  }
  return 1;
}

WTF::StringImpl *WebCore::JSHTMLBRElementPrototype::finishCreation(WebCore::JSHTMLBRElementPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(a2, (uint64_t)&WebCore::JSHTMLBRElement::s_info, (uint64_t)&WebCore::JSHTMLBRElementPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLBRElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLBRElement::createPrototype(WebCore::JSHTMLBRElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t v6;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, (int)a2, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLBRElementPrototype::create(this, a2, v6, v7);
}

unint64_t WebCore::JSHTMLBRElementPrototype::create(WebCore::JSHTMLBRElementPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)v6 = a3 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLBRElementPrototype::finishCreation((WebCore::JSHTMLBRElementPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBRElement>,(WebCore::DOMConstructorID)514>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4112);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBRElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLBRElement>((WebCore::JSHTMLBRElement *)a1, (JSC::VM *)a2, v17)+ 48);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4112) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLBRElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLBRElementPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBRElement>,(WebCore::DOMConstructorID)514>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLBRElement_clear(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::clearAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::clearAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::clearAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLBRElement_clear(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLBRElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLBRElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::clearAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::clearAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::clearAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::clearAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLBRElement::subspaceForImpl(WebCore::JSHTMLBRElement *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  WTF *v11;
  void *v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4200);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v20 = *(_QWORD *)(v9 + 4200);
  if (!v20)
  {
    v14 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v14, &v22, (char *)this + 192, (char *)this + 1872, 40, 8, &v21);
    v16 = v21;
    v21 = 0;
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v22;
    v22 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 1)
        WTF::fastFree(v17, v15);
      else
        --*(_DWORD *)v17;
    }
    v20 = v14;
    v18 = *(_QWORD *)(v9 + 4200);
    *(_QWORD *)(v9 + 4200) = v14;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v19 == *(_DWORD *)(v7 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v7 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v19) = v14;
      *(_DWORD *)(v7 + 2844) = v19 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v10 = *(_QWORD *)(v3 + 4200);
  *(_QWORD *)(v3 + 4200) = v4;
  if (v10)
  {
    v11 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v11, v12);
  }
  v13 = __ldxr((unsigned __int8 *)v7);
  if (v13 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSHTMLBaseElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLBaseElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLBaseElementPrototype::create(WebCore::JSHTMLBaseElementPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSHTMLBaseElement::s_info, &WebCore::JSHTMLBaseElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBaseElement>,(WebCore::DOMConstructorID)515>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4120);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBaseElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLBaseElement::s_info + ~((_QWORD)&WebCore::JSHTMLBaseElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLBaseElement::s_info + ~((_QWORD)&WebCore::JSHTMLBaseElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLBaseElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLBaseElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLBaseElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSHTMLBaseElementPrototype::create((WebCore::JSHTMLBaseElementPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSHTMLBaseElement::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSHTMLBaseElement::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4120) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLBaseElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLBaseElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBaseElement>,(WebCore::DOMConstructorID)515>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLBaseElement_href(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLBaseElement::href(*(WebCore::HTMLBaseElement **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLBaseElement_href(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLBaseElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLBaseElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::hrefAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::hrefAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::hrefAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::hrefAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLBaseElement_target(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::targetAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLBaseElement_target(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLBaseElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLBaseElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::targetAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::targetAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLBaseElement::subspaceForImpl(WebCore::JSHTMLBaseElement *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4208);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 4208);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 40, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 4208);
    *(_QWORD *)(v8 + 4208) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 4208);
  *(_QWORD *)(v3 + 4208) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBodyElement>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  WebCore::JSDOMGlobalObject *v11;
  uint64_t v12;
  WTF::StringImpl *v14;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v14);
  v9 = v14;
  v14 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v12 = WebCore::getDOMStructure<WebCore::JSHTMLBodyElement>((WebCore::JSHTMLElement *)a2, a3, v11);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v12 + 48), 14);
}

uint64_t WebCore::JSHTMLBodyElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLBodyElement::createPrototype(WebCore::JSHTMLBodyElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  Structure = WebCore::JSHTMLBodyElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSHTMLBodyElementPrototype::create(this, a2, Structure, v7);
}

uint64_t WebCore::JSHTMLBodyElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLBodyElementPrototype::create(WebCore::JSHTMLBodyElementPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<38u>(this, (uint64_t)&WebCore::JSHTMLBodyElement::s_info, (uint64_t)&WebCore::JSHTMLBodyElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBodyElement>,(WebCore::DOMConstructorID)516>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4128);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBodyElement>::createStructure((uint64_t *)a1, a2, v5);
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBodyElement>::create(a1, Structure, (JSC::VM *)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4128) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v7 = (JSC::Heap *)(a1 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)a2);
        return v8;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsHTMLBodyElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLBodyElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBodyElement>,(WebCore::DOMConstructorID)516>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLBodyElement_aLink(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alinkAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alinkAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alinkAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLBodyElement_aLink(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLBodyElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::alinkAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alinkAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alinkAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alinkAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E328D378[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E328B3D8[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLBodyElement_background(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::backgroundAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::backgroundAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::backgroundAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLBodyElement_background(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLBodyElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::backgroundAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::backgroundAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::backgroundAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::backgroundAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLBodyElement_bgColor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::bgcolorAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLBodyElement_bgColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLBodyElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::bgcolorAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::bgcolorAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E328D378[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E328B3D8[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLBodyElement_link(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::linkAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::linkAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::linkAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLBodyElement_link(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLBodyElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::linkAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::linkAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::linkAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::linkAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E328D378[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E328B3D8[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLBodyElement_text(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::textAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::textAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::textAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLBodyElement_text(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLBodyElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::textAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::textAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::textAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::textAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E328D378[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E328B3D8[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLBodyElement_vLink(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::vlinkAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::vlinkAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::vlinkAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLBodyElement_vLink(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLBodyElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::vlinkAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::vlinkAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::vlinkAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::vlinkAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E328D378[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E328B3D8[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLBodyElement_onblur(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 304), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onblur(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 304), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onerror(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 784), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onerror(WebCore *a1, unint64_t a2, WebCore::JSErrorHandler *a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::InspectorInstrumentation *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::InspectorInstrumentation **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSErrorHandler>(v15, (WTF::StringImpl **)(v14 + 784), a3, *(JSC::JSObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3
    && ((unint64_t)a3 & 0xFFFE000000000002) == 0
    && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
  {
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  }
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onfocus(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 816), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onfocus(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 816), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onload(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1104), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onload(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1104), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onresize(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1696), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onresize(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1696), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onscroll(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1736), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onscroll(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1736), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onfocusin(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 824), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onfocusin(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 824), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onfocusout(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 832), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onfocusout(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 832), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onwebkitmouseforcechanged(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 2416), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onwebkitmouseforcechanged(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 2416), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onwebkitmouseforcedown(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 2424), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onwebkitmouseforcedown(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 2424), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onwebkitmouseforcewillbegin(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 2440), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onwebkitmouseforcewillbegin(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 2440), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onwebkitmouseforceup(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 2432), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onwebkitmouseforceup(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 2432), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onorientationchange(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1384), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onorientationchange(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1384), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onafterprint(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 112), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onafterprint(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 112), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onbeforeprint(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 264), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onbeforeprint(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 264), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onbeforeunload(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 280), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onbeforeunload(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 280), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onhashchange(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 960), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onhashchange(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 960), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onlanguagechange(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1080), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onlanguagechange(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1080), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onmessage(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1192), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onmessage(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1192), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onmessageerror(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1200), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onmessageerror(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1200), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onoffline(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1360), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onoffline(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1360), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_ononline(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1368), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_ononline(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1368), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onpagehide(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1400), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onpagehide(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1400), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onpageshow(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1408), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onpageshow(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1408), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onpopstate(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1560), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onpopstate(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1560), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onrejectionhandled(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1640), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onrejectionhandled(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1640), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onstorage(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 2000), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onstorage(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 2000), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onunhandledrejection(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 2160), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onunhandledrejection(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 2160), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_onunload(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 2168), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_onunload(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 2168), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_ongamepadconnected(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 864), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_ongamepadconnected(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 864), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLBodyElement_ongamepaddisconnected(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 872), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLBodyElement_ongamepaddisconnected(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLBodyElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLBodyElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 872), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::JSHTMLBodyElement::subspaceForImpl(WebCore::JSHTMLBodyElement *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  WTF *v11;
  void *v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4216);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v20 = *(_QWORD *)(v9 + 4216);
  if (!v20)
  {
    v14 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v14, &v22, (char *)this + 192, (char *)this + 1872, 40, 8, &v21);
    v16 = v21;
    v21 = 0;
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v22;
    v22 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 1)
        WTF::fastFree(v17, v15);
      else
        --*(_DWORD *)v17;
    }
    v20 = v14;
    v18 = *(_QWORD *)(v9 + 4216);
    *(_QWORD *)(v9 + 4216) = v14;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v19 == *(_DWORD *)(v7 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v7 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v19) = v14;
      *(_DWORD *)(v7 + 2844) = v19 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v10 = *(_QWORD *)(v3 + 4216);
  *(_QWORD *)(v3 + 4216) = v4;
  if (v10)
  {
    v11 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v11, v12);
  }
  v13 = __ldxr((unsigned __int8 *)v7);
  if (v13 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSHTMLButtonElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLButtonElement::createPrototype(WebCore::JSHTMLButtonElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  Structure = WebCore::JSHTMLButtonElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSHTMLButtonElementPrototype::create(this, a2, Structure, v7);
}

uint64_t WebCore::JSHTMLButtonElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLButtonElementPrototype::create(WebCore::JSHTMLButtonElementPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  JSC::Structure *v32;
  int v33;
  WTF::StringImpl *v35;
  int v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  int v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  int v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  WTF::StringImpl *v45[6];
  int v46;
  int v47;
  JSC::Structure *v48;
  int v49;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v44 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v44);
    *((_QWORD *)this + 4865) = SlowCase + (int)v44;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<22u>(this, (uint64_t)&WebCore::JSHTMLButtonElement::s_info, (uint64_t)&WebCore::JSHTMLButtonElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194BCAB0CLL);
  }
  v10 = (int *)((char *)this + 93124);
  v11 = v9 - 192;
  if (!v9)
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 680) + 680);
  v13 = (v12 & 0x20000000) == 0;
  if ((v12 & 0x20000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v35 = v45[0];
    v36 = *v10;
    *v10 = 1;
    LODWORD(v45[0]) = -1;
    WORD2(v45[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v36;
    if (v35)
    {
      if (*(_DWORD *)v35 == 2)
        WTF::StringImpl::destroy(v35, v37);
      else
        *(_DWORD *)v35 -= 2;
    }
  }
  v14 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v14 && *(_BYTE *)(v14 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194BCAB2CLL);
  }
  v15 = v14 - 192;
  if (!v14)
    v15 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v15 + 680) + 680) & 0x80000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v16 = v45[0];
    v17 = *v10;
    v13 = 1;
    *v10 = 1;
    LODWORD(v45[0]) = -1;
    WORD2(v45[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v17;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v18);
      else
        *(_DWORD *)v16 -= 2;
    }
  }
  v19 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v19 && *(_BYTE *)(v19 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194BCAB4CLL);
  }
  v20 = v19 - 192;
  if (!v19)
    v20 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v20 + 680) + 680) & 0x80000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v21 = v45[0];
    v22 = *v10;
    v13 = 1;
    *v10 = 1;
    LODWORD(v45[0]) = -1;
    WORD2(v45[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v22;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v23);
      else
        *(_DWORD *)v21 -= 2;
    }
  }
  v24 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v24 && *(_BYTE *)(v24 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194BCAB6CLL);
  }
  v25 = v24 - 192;
  if (!v24)
    v25 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v25 + 680) + 688) & 0x20000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v38 = v45[0];
    v39 = *v10;
    v13 = 1;
    *v10 = 1;
    LODWORD(v45[0]) = -1;
    WORD2(v45[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v39;
    if (v38)
    {
      if (*(_DWORD *)v38 == 2)
        WTF::StringImpl::destroy(v38, v40);
      else
        *(_DWORD *)v38 -= 2;
    }
  }
  v26 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v26 && *(_BYTE *)(v26 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194BCAB8CLL);
  }
  v27 = v26 - 192;
  if (!v26)
    v27 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v27 + 680) + 688) & 0x20000000) != 0)
  {
    if (!v13)
      goto LABEL_39;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v41 = v45[0];
    v42 = *v10;
    *v10 = 1;
    LODWORD(v45[0]) = -1;
    WORD2(v45[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v42;
    if (v41)
    {
      if (*(_DWORD *)v41 == 2)
        WTF::StringImpl::destroy(v41, v43);
      else
        *(_DWORD *)v41 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
LABEL_39:
  v28 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v30 = JSC::JSString::create((uint64_t)this, v45);
  v31 = v45[0];
  v45[0] = 0;
  if (v31)
  {
    if (*(_DWORD *)v31 == 2)
      WTF::StringImpl::destroy(v31, v29);
    else
      *(_DWORD *)v31 -= 2;
  }
  v32 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v49 = *(_DWORD *)SlowCase;
  v48 = v32;
  v33 = JSC::Structure::outOfLineCapacity(v32);
  v46 = 0;
  v47 = v33;
  v45[0] = (WTF::StringImpl *)&v47;
  v45[1] = (WTF::StringImpl *)SlowCase;
  v45[2] = this;
  v45[3] = (WTF::StringImpl *)&v49;
  v45[4] = (WTF::StringImpl *)&v48;
  v45[5] = (WTF::StringImpl *)&v46;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v32, this, v28, 6, (uint64_t)v45);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v46, v30);
  *((_DWORD *)v32 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLButtonElement>,(WebCore::DOMConstructorID)517>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char **v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4136);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v8 = v7;
  LODWORD(v36) = 67099;
  if ((v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v34);
    v6[2] = SlowCase + (int)v34;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v8, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLButtonElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v6[165];
  v2 = v11[2846];
  if (v2 < v11[2847])
    goto LABEL_11;
  v2 = v11[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v35);
    v11[2848] = v2 + (int)v35;
LABEL_11:
    v11[2846] = v2 + 48;
    goto LABEL_12;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v6[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v36);
  v15 = v36;
  v36 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v6[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v36);
  v18 = *(_QWORD *)(v6[227] + 2160);
  v19 = *(_QWORD *)(a2 + 3296);
  if (v19)
  {
    v20 = *(_DWORD *)(v19 - 8);
    v21 = ((unint64_t)&WebCore::JSHTMLButtonElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLButtonElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLButtonElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLButtonElement::s_info << 32)) >> 22);
    v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
    v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
    v24 = v20 & ((v23 >> 31) ^ v23);
    v25 = *(char ***)(v19 + 16 * v24);
    if (v25 == &WebCore::JSHTMLButtonElement::s_info)
    {
LABEL_18:
      v26 = *(_QWORD *)(v19 + 16 * v24 + 8);
      if (v26)
        goto LABEL_20;
    }
    else
    {
      v33 = 1;
      while (v25)
      {
        v24 = ((_DWORD)v24 + v33) & v20;
        v25 = *(char ***)(v19 + 16 * v24);
        ++v33;
        if (v25 == &WebCore::JSHTMLButtonElement::s_info)
          goto LABEL_18;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v17);
  Structure = WebCore::JSHTMLButtonElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSHTMLButtonElementPrototype::create((WebCore::JSHTMLButtonElementPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSHTMLButtonElement::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSHTMLButtonElement::s_info);
LABEL_20:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v18, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4136) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLButtonElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLButtonElementPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLButtonElement>,(WebCore::DOMConstructorID)517>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLButtonElement_disabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
  }
  if (!(_DWORD)v5)
    return 6;
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::disabledAttr)
      break;
    if (*(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 32))
    {
      return 7;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLButtonElement_disabled(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl **v10;
  double v11;
  int v12;
  JSC::VM *v15;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLButtonElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WTF::StringImpl ***)(a2 + 24);
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = a3 != 0;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      a4.n128_u64[0] = a3 - 0x2000000000000;
      v12 = v11 > 0.0 || v11 < 0.0;
    }
    else if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
    }
    else
    {
      v15 = v5;
      v12 = JSC::JSCell::toBoolean(a3, a1);
      v5 = v15;
    }
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v10, (const WebCore::QualifiedName *)&WebCore::HTMLNames::disabledAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLButtonElement_form(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  uint64_t v4;
  WebCore::JSDOMGlobalObject *v6;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 120);
  if (v4 && (v6 = *(WebCore::JSDOMGlobalObject **)(v4 + 8)) != 0)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v6, a4);
  else
    return 2;
}

uint64_t WebCore::jsHTMLButtonElement_formAction(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v13;

  WebCore::HTMLFormControlElement::formAction(*(WTF::StringImpl **)(a2 + 24), &v13);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = v13;
  if (!v13)
    return *v5;
  v7 = *((_DWORD *)v13 + 1);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_4:
      v8 = *(_QWORD *)(v4 + 64760);
      if (!v8 || v13 != *(WTF::StringImpl **)(v8 + 8))
        v8 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v10 = (unsigned __int8 *)*((_QWORD *)v13 + 1);
    if ((*((_BYTE *)v13 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_4;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v4 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v5;
  }
LABEL_7:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v3);
  else
    *(_DWORD *)v6 -= 2;
  return v8;
}

BOOL WebCore::setJSHTMLButtonElement_formAction(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLButtonElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::formactionAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::formactionAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::formactionAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::formactionAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLButtonElement_formEnctype(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v16;
  WTF::StringImpl *v17;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::formenctypeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::formenctypeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::formenctypeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  if (*v7)
  {
    WebCore::FormSubmission::Attributes::parseEncodingType(v7, (uint64_t *)&v17);
    v9 = v17;
  }
  else
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v9 += 2;
    v17 = v9;
  }
  v10 = *(_QWORD *)(a1 + 56);
  if (!v9 || (v11 = *((_DWORD *)v9 + 1)) == 0)
  {
    v12 = *(_QWORD *)(v10 + 41968);
LABEL_24:
    v17 = 0;
    if (!v9)
      return v12;
    goto LABEL_31;
  }
  if (v11 != 1)
    goto LABEL_21;
  v13 = (unsigned __int8 *)*((_QWORD *)v9 + 1);
  if ((*((_BYTE *)v9 + 16) & 4) != 0)
  {
    v14 = *v13;
LABEL_29:
    v12 = *(_QWORD *)(v10 + 8 * v14 + 42216);
    goto LABEL_30;
  }
  v16 = *(unsigned __int16 *)v13;
  if (v16 <= 0xFF)
  {
    v14 = v16;
    goto LABEL_29;
  }
LABEL_21:
  v12 = *(_QWORD *)(v10 + 64760);
  if (!v12 || v9 != *(WTF::StringImpl **)(v12 + 8))
  {
    v12 = JSC::jsStringWithCacheSlowCase();
    v9 = v17;
    goto LABEL_24;
  }
LABEL_30:
  v17 = 0;
LABEL_31:
  if (*(_DWORD *)v9 == 2)
    WTF::StringImpl::destroy(v9, v9);
  else
    *(_DWORD *)v9 -= 2;
  return v12;
}

BOOL WebCore::setJSHTMLButtonElement_formEnctype(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLButtonElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::formenctypeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::formenctypeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::formenctypeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::formenctypeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLButtonElement_formMethod(uint64_t a1, WebCore::HTMLFormControlElement **a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v13;

  WebCore::HTMLFormControlElement::formMethod(a2[3], (const WTF::String *)a2, &v13);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = v13;
  if (!v13)
    return *v5;
  v7 = *((_DWORD *)v13 + 1);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_4:
      v8 = *(_QWORD *)(v4 + 64760);
      if (!v8 || v13 != *(WTF::StringImpl **)(v8 + 8))
        v8 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v10 = (unsigned __int8 *)*((_QWORD *)v13 + 1);
    if ((*((_BYTE *)v13 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_4;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v4 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v5;
  }
LABEL_7:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v3);
  else
    *(_DWORD *)v6 -= 2;
  return v8;
}

BOOL WebCore::setJSHTMLButtonElement_formMethod(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLButtonElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::formmethodAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::formmethodAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::formmethodAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::formmethodAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLButtonElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 328))(*(_QWORD *)(a2 + 24) + 112);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSHTMLButtonElement_type(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLButtonElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::typeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::typeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLButtonElement_formNoValidate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::formnovalidateAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::formnovalidateAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::formnovalidateAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLButtonElement_formNoValidate(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLButtonElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::formnovalidateAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLButtonElement_formTarget(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::formtargetAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::formtargetAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::formtargetAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLButtonElement_formTarget(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLButtonElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::formtargetAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::formtargetAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::formtargetAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::formtargetAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLButtonElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_24;
      }
    }
    else
    {
LABEL_24:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLButtonElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLButtonElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLButtonElement_value(uint64_t a1, uint64_t a2)
{
  return WebCore::jsHTMLButtonElement_valueGetter(a1, *(_QWORD *)(a2 + 24));
}

BOOL WebCore::setJSHTMLButtonElement_value(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLButtonElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::valueAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::valueAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLButtonElement_willValidate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v5;
  char v6;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_BYTE *)(v2 + 160);
  if ((v3 & 4) == 0 || (*(_BYTE *)(v2 + 162) & 3) == 2)
  {
    *(_BYTE *)(v2 + 160) = v3 | 4;
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 112) + 336))(v2 + 112);
    v3 = *(_BYTE *)(v2 + 160);
    if (((v5 ^ ((v3 & 2) == 0)) & 1) == 0)
    {
      if (v5)
        v6 = 2;
      else
        v6 = 0;
      v3 = v3 & 0xFD | v6;
      *(_BYTE *)(v2 + 160) = v3;
    }
  }
  if ((v3 & 2) != 0)
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsHTMLButtonElement_validity(uint64_t a1, uint64_t a2)
{
  return WebCore::toJS(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WTF *)(*(_QWORD *)(a2 + 24) + 112));
}

uint64_t WebCore::jsHTMLButtonElement_validationMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v3 + 112) + 272))(v3 + 112))
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v5 = *(_QWORD *)(v3 + 144);
  if (!v5)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  v8 = *(_QWORD *)(a1 + 56);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_5:
      v9 = *(_QWORD *)(v8 + 64760);
      if (!v9 || v5 != *(_QWORD *)(v9 + 8))
      {
        v9 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_8;
    }
    v11 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_5;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v8 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *(_QWORD *)(v8 + 41968);
  }
LABEL_8:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, v4);
  return v9;
}

uint64_t WebCore::jsHTMLButtonElement_labels(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t Wrapper;
  uint64_t v17;
  _DWORD *v18;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLElement::labels(*(WebCore::HTMLElement **)(a2 + 24), &v17);
  v3 = (_DWORD *)v17;
  if (!v17)
    return 2;
  v5 = *(_QWORD *)(v2 + 3320);
  if (!*(_DWORD *)(v5 + 48))
  {
    v6 = *(_QWORD *)(v17 + 8);
    if (v6)
      goto LABEL_5;
LABEL_7:
    ++*(_DWORD *)(v17 + 16);
    v18 = v3;
    Wrapper = WebCore::createWrapper(v2, (uint64_t *)&v18);
    v7 = v18;
    v18 = 0;
    if (v7)
    {
      if (v7[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
      else
        --v7[4];
    }
    v3 = (_DWORD *)v17;
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(v5 + 32);
  if (!v8)
    goto LABEL_7;
  v9 = *(_DWORD *)(v8 - 8);
  v10 = (~(v17 << 32) + v17) ^ ((unint64_t)(~(v17 << 32) + v17) >> 22);
  v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
  v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
  v13 = v9 & ((v12 >> 31) ^ v12);
  v14 = *(_QWORD *)(v8 + 16 * v13);
  if (v14 != v17)
  {
    v15 = 1;
    while (v14)
    {
      v13 = ((_DWORD)v13 + v15) & v9;
      v14 = *(_QWORD *)(v8 + 16 * v13);
      ++v15;
      if (v14 == v17)
        goto LABEL_22;
    }
    goto LABEL_7;
  }
LABEL_22:
  v6 = *(_QWORD *)(v8 + 16 * v13 + 8);
  if (!v6)
    goto LABEL_7;
LABEL_5:
  if ((*(_BYTE *)(v6 + 8) & 3) != 0)
    goto LABEL_7;
  Wrapper = *(_QWORD *)v6;
  if (!*(_QWORD *)v6)
    goto LABEL_7;
LABEL_11:
  v17 = 0;
  if (v3)
  {
    if (v3[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
    else
      --v3[4];
  }
  return Wrapper;
}

uint64_t WebCore::jsHTMLButtonElement_invokeTargetElement(WebCore *a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::Element *v4;
  void *v5;
  unint64_t v6;
  WebCore::Node *v7;
  WebCore::Node *v9;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Element::getElementAttribute(*(WebCore::Element **)(a2 + 24), (WebCore::QualifiedName::QualifiedNameImpl **)&WebCore::HTMLNames::invoketargetAttr, (uint64_t *)&v9);
  if (!v9)
    return 2;
  v6 = WebCore::toJS(a1, v3, v9, v4);
  v7 = v9;
  v9 = 0;
  if (v7)
  {
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v7, v5);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
  }
  return v6;
}

uint64_t WebCore::setJSHTMLButtonElement_invokeTargetElement(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::Element *v9;
  WebCore::Element *v10;
  uint64_t v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLButtonElement::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::Element **)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
  }
  else
  {
    v12 = *(_QWORD *)(a1 + 56);
    if ((a3 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(a3 + 5) != 241
      || (v10 = *(WebCore::Element **)(a3 + 24)) == 0)
    {
      WebCore::throwAttributeTypeError(a1, (int)&v12, "HTMLButtonElement", 18, "invokeTargetElement", 20, "Element", 8);
      return 0;
    }
  }
  WebCore::Element::setElementAttribute(v9, (const WebCore::QualifiedName *)&WebCore::HTMLNames::invoketargetAttr, v10, a4);
  return 1;
}

uint64_t WebCore::jsHTMLButtonElement_invokeAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::invokeactionAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::invokeactionAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::invokeactionAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLButtonElement_invokeAction(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLButtonElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::invokeactionAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::invokeactionAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::invokeactionAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::invokeactionAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLButtonElement_popoverTargetElement(WebCore *a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::Element *v4;
  void *v5;
  unint64_t v6;
  WebCore::Node *v7;
  WebCore::Node *v9;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Element::getElementAttribute(*(WebCore::Element **)(a2 + 24), (WebCore::QualifiedName::QualifiedNameImpl **)&WebCore::HTMLNames::popovertargetAttr, (uint64_t *)&v9);
  if (!v9)
    return 2;
  v6 = WebCore::toJS(a1, v3, v9, v4);
  v7 = v9;
  v9 = 0;
  if (v7)
  {
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v7, v5);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
  }
  return v6;
}

uint64_t WebCore::setJSHTMLButtonElement_popoverTargetElement(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::Element *v9;
  WebCore::Element *v10;
  uint64_t v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLButtonElement::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::Element **)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
  }
  else
  {
    v12 = *(_QWORD *)(a1 + 56);
    if ((a3 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(a3 + 5) != 241
      || (v10 = *(WebCore::Element **)(a3 + 24)) == 0)
    {
      WebCore::throwAttributeTypeError(a1, (int)&v12, "HTMLButtonElement", 18, "popoverTargetElement", 21, "Element", 8);
      return 0;
    }
  }
  WebCore::Element::setElementAttribute(v9, (const WebCore::QualifiedName *)&WebCore::HTMLNames::popovertargetAttr, v10, a4);
  return 1;
}

uint64_t WebCore::jsHTMLButtonElement_popoverTargetAction(uint64_t a1, uint64_t a2, const WTF::StringImpl *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;

  v4 = WebCore::HTMLFormControlElement::popoverTargetAction(*(WebCore::HTMLFormControlElement **)(a2 + 24), a2, a3);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *v4;
  if (!*v4)
    return *(_QWORD *)(v5 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v5 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v11 = *(unsigned __int16 *)v10;
      if (v11 > 0xFF)
        goto LABEL_4;
      v11 = v11;
    }
    return *(_QWORD *)(v5 + 8 * v11 + 42216);
  }
LABEL_4:
  v8 = *(_QWORD *)(v5 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLButtonElement_popoverTargetAction(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLButtonElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::popovertargetactionAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::popovertargetactionAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::popovertargetactionAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::popovertargetactionAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328B3D8[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLCanvasElement::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  WebCore::JSEventTarget::visitOutputConstraints<JSC::AbstractSlotVisitor>(a1, a2);
  WebCore::JSNode::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  return WebCore::JSHTMLCanvasElement::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
}

uint64_t WebCore::JSHTMLCanvasElement::visitOutputConstraints<JSC::SlotVisitor>(uint64_t a1, uint64_t a2)
{
  WebCore::JSEventTarget::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
  WebCore::JSNode::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  return WebCore::JSHTMLCanvasElement::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
}

uint64_t WebCore::JSHTMLCanvasElement::prototype(WebCore::JSHTMLCanvasElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSHTMLCanvasElement::s_info + ~((_QWORD)&WebCore::JSHTMLCanvasElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLCanvasElement::s_info + ~((_QWORD)&WebCore::JSHTMLCanvasElement::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSHTMLCanvasElement::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSHTMLCanvasElement::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    v14 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
    Structure = WebCore::JSHTMLCanvasElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSHTMLCanvasElementPrototype::create(this, a2, Structure, v16);
    v18 = WebCore::JSHTMLCanvasElement::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSHTMLCanvasElement::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

uint64_t WebCore::JSHTMLCanvasElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLCanvasElement::estimatedSize(WebCore::JSHTMLCanvasElement *this, JSC::JSCell *a2, JSC::VM *a3)
{
  return *(_QWORD *)(*((_QWORD *)this + 3) + 136) + JSC::JSObject::estimatedSize(this, a2, a3);
}

uint64_t WebCore::JSHTMLCanvasElement::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  WebCore::JSHTMLElement::visitChildren(a1, a2);
  result = WebCore::JSHTMLCanvasElement::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 136);
  if (*(_BYTE *)(a2 + 184))
  {
    *(_QWORD *)(a2 + 144) += v5;
    v6 = *(_QWORD *)(a2 + 160);
    v7 = __CFADD__(v6, v5);
    v8 = v6 + v5;
    if (v7)
      *(_BYTE *)(a2 + 152) = 1;
    else
      *(_QWORD *)(a2 + 160) = v8;
    return JSC::Heap::reportExternalMemoryVisited(*(JSC::Heap **)(a2 + 80));
  }
  return result;
}

uint64_t WebCore::JSHTMLCanvasElement::visitChildren(WebCore::JSHTMLCanvasElement *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    WebCore::JSHTMLElement::visitChildren(this, a2, a3);
    WebCore::JSHTMLCanvasElement::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    (*(void (**)(JSC::JSCell *, _QWORD))(*(_QWORD *)a2 + 96))(a2, *(_QWORD *)(*((_QWORD *)this + 3) + 136));
    result = (*(uint64_t (**)(JSC::JSCell *, _QWORD))(*(_QWORD *)a2 + 104))(a2, *(_QWORD *)(*((_QWORD *)this + 3) + 136));
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSHTMLCanvasElement::JSHTMLCanvasElement(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t WebCore::JSHTMLCanvasElement::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_DWORD *)(v2 + 24) += 2;
  *a2 = v2;
  return this;
}

uint64_t WebCore::JSHTMLCanvasElement::finishCreation(uint64_t this, JSC::VM *a2)
{
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  if (*(_QWORD *)(*(_QWORD *)(this + 24) + 136) >= 0x101uLL)
    return JSC::Heap::reportExtraMemoryAllocatedSlowCase();
  return this;
}

unint64_t WebCore::JSHTMLCanvasElement::createPrototype(WebCore::JSHTMLCanvasElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  Structure = WebCore::JSHTMLCanvasElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSHTMLCanvasElementPrototype::create(this, a2, Structure, v7);
}

uint64_t WebCore::JSHTMLCanvasElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLCanvasElementPrototype::create(WebCore::JSHTMLCanvasElementPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  WTF::StringImpl *v22[6];
  int v23;
  int v24;
  JSC::Structure *v25;
  int v26;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v21 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v21);
    *((_QWORD *)this + 4865) = SlowCase + (int)v21;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<8u>(this, (uint64_t)&WebCore::JSHTMLCanvasElement::s_info, (uint64_t)&WebCore::JSHTMLCanvasElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194BCDB74);
  }
  v10 = v9 - 192;
  if (!v9)
    v10 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v10 + 680) + 712) & 0x1000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v18 = v22[0];
    v19 = *((_DWORD *)this + 23281);
    *((_DWORD *)this + 23281) = 1;
    LODWORD(v22[0]) = -1;
    WORD2(v22[0]) = 1;
    JSC::JSObject::deleteProperty();
    *((_DWORD *)this + 23281) = v19;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v20);
      else
        *(_DWORD *)v18 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v22);
  v14 = v22[0];
  v22[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v26 = *(_DWORD *)SlowCase;
  v25 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v23 = 0;
  v24 = v16;
  v22[0] = (WTF::StringImpl *)&v24;
  v22[1] = (WTF::StringImpl *)SlowCase;
  v22[2] = this;
  v22[3] = (WTF::StringImpl *)&v26;
  v22[4] = (WTF::StringImpl *)&v25;
  v22[5] = (WTF::StringImpl *)&v23;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v22);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v23, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCanvasElement>,(WebCore::DOMConstructorID)518>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4144);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCanvasElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSHTMLCanvasElement::prototype((WebCore::JSHTMLCanvasElement *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4144) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLCanvasElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLCanvasElementPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCanvasElement>,(WebCore::DOMConstructorID)518>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLCanvasElement_width(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  _QWORD v8[2];
  WTF::StringImpl *v9;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 112) + 88))(v2 + 112);
  if (v3)
  {
    if (*(_BYTE *)(v3 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v8[0] = 0;
      v8[1] = 0;
      WebCore::InspectorCanvasCallTracer::recordAction(v2 + 112, (const WTF::StringImpl *)&v9, v8);
      v7 = v9;
      v9 = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, v6);
        else
          *(_DWORD *)v7 -= 2;
      }
    }
  }
  v4 = *(unsigned int *)(v2 + 120);
  if ((v4 & 0x80000000) != 0)
    return COERCE__INT64((double)v4) + 0x2000000000000;
  else
    return v4 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLCanvasElement_width(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  unsigned int v19;
  int v20;
  JSC::VM *v21;
  _BYTE *v22;
  WTF::StringImpl *v23;
  _BYTE v24[8];
  WTF::StringImpl *v25;
  char v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLCanvasElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLCanvasElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v21 = (JSC::VM *)*((_QWORD *)a1 + 7);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v19);
  v10 = v20 == 0;
  if (!v20)
  {
    v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v9 + 112) + 88))(v9 + 112);
    if (v11)
    {
      if (*(_BYTE *)(v11 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        WebCore::InspectorCanvasCallTracer::processArgument((WebCore::InspectorCanvasCallTracer *)(v9 + 112), (const WebCore::CanvasBase *)v19, v24);
        v22 = v24;
        v23 = (WTF::StringImpl *)1;
        WebCore::InspectorCanvasCallTracer::recordAction(v9 + 112, (const WTF::StringImpl *)&v18, &v22);
        std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v24);
        v16 = v18;
        v18 = 0;
        if (v16)
        {
          if (*(_DWORD *)v16 == 2)
            WTF::StringImpl::destroy(v16, v15);
          else
            *(_DWORD *)v16 -= 2;
        }
      }
    }
    WebCore::HTMLCanvasElement::setWidth((WebCore::HTMLCanvasElement *)v9, v19, (uint64_t)v24);
    if (v26)
    {
      LOBYTE(v22) = v24[0];
      v17 = v25;
      v23 = v25;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v21, (unsigned __int8 *)&v22);
        v17 = v23;
      }
      v23 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v12);
        else
          *(_DWORD *)v17 -= 2;
      }
    }
  }
  return v10;
}

unint64_t WebCore::jsHTMLCanvasElement_height(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  _QWORD v8[2];
  WTF::StringImpl *v9;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 112) + 88))(v2 + 112);
  if (v3)
  {
    if (*(_BYTE *)(v3 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v8[0] = 0;
      v8[1] = 0;
      WebCore::InspectorCanvasCallTracer::recordAction(v2 + 112, (const WTF::StringImpl *)&v9, v8);
      v7 = v9;
      v9 = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, v6);
        else
          *(_DWORD *)v7 -= 2;
      }
    }
  }
  v4 = *(unsigned int *)(v2 + 124);
  if ((v4 & 0x80000000) != 0)
    return COERCE__INT64((double)v4) + 0x2000000000000;
  else
    return v4 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLCanvasElement_height(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  unsigned int v19;
  int v20;
  JSC::VM *v21;
  _BYTE *v22;
  WTF::StringImpl *v23;
  _BYTE v24[8];
  WTF::StringImpl *v25;
  char v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLCanvasElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLCanvasElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v21 = (JSC::VM *)*((_QWORD *)a1 + 7);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v19);
  v10 = v20 == 0;
  if (!v20)
  {
    v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v9 + 112) + 88))(v9 + 112);
    if (v11)
    {
      if (*(_BYTE *)(v11 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        WebCore::InspectorCanvasCallTracer::processArgument((WebCore::InspectorCanvasCallTracer *)(v9 + 112), (const WebCore::CanvasBase *)v19, v24);
        v22 = v24;
        v23 = (WTF::StringImpl *)1;
        WebCore::InspectorCanvasCallTracer::recordAction(v9 + 112, (const WTF::StringImpl *)&v18, &v22);
        std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v24);
        v16 = v18;
        v18 = 0;
        if (v16)
        {
          if (*(_DWORD *)v16 == 2)
            WTF::StringImpl::destroy(v16, v15);
          else
            *(_DWORD *)v16 -= 2;
        }
      }
    }
    WebCore::HTMLCanvasElement::setHeight((WebCore::HTMLCanvasElement *)v9, v19, (uint64_t)v24);
    if (v26)
    {
      LOBYTE(v22) = v24[0];
      v17 = v25;
      v23 = v25;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v21, (unsigned __int8 *)&v22);
        v17 = v23;
      }
      v23 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v12);
        else
          *(_DWORD *)v17 -= 2;
      }
    }
  }
  return v10;
}

uint64_t WebCore::JSHTMLCanvasElement::subspaceForImpl(WebCore::JSHTMLCanvasElement *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  WTF *v11;
  void *v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4232);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v20 = *(_QWORD *)(v9 + 4232);
  if (!v20)
  {
    v14 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v14, &v22, (char *)this + 192, (char *)this + 1872, 40, 8, &v21);
    v16 = v21;
    v21 = 0;
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v22;
    v22 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 1)
        WTF::fastFree(v17, v15);
      else
        --*(_DWORD *)v17;
    }
    v20 = v14;
    v18 = *(_QWORD *)(v9 + 4232);
    *(_QWORD *)(v9 + 4232) = v14;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v19 == *(_DWORD *)(v7 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v7 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v19) = v14;
      *(_DWORD *)(v7 + 2844) = v19 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v10 = *(_QWORD *)(v3 + 4232);
  *(_QWORD *)(v3 + 4232) = v4;
  if (v10)
  {
    v11 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v11, v12);
  }
  v13 = __ldxr((unsigned __int8 *)v7);
  if (v13 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSHTMLCanvasElementOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v10 = v9[29];
  if (!v10)
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  v11 = *(_QWORD *)(v10 + 8);
  if (!v11 || *(_BYTE *)(v11 + 180) || !v9[30] && !(*(unsigned int (**)(_QWORD *))(v9[28] + 64))(v9 + 28))
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  if (a5)
  {
    *a5 = "ActiveDOMObject with pending activity";
    a5[1] = 38;
  }
  return 1;
}

unint64_t WebCore::JSHTMLCanvasElement::toWrapped(uint64_t a1, unint64_t a2)
{
  unint64_t result;

  result = JSC::jsDynamicCast<WebCore::JSHTMLCanvasElement *>(a2);
  if (result)
    return *(_QWORD *)(result + 24);
  return result;
}

unint64_t JSC::jsDynamicCast<WebCore::JSHTMLCanvasElement *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSHTMLCanvasElement::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSHTMLCanvasElement::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

void WebCore::JSGPURenderPassEncoderOwner::~JSGPURenderPassEncoderOwner(WebCore::JSGPURenderPassEncoderOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGPURenderPipelineOwner::~JSGPURenderPipelineOwner(WebCore::JSGPURenderPipelineOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGPUSamplerOwner::~JSGPUSamplerOwner(WebCore::JSGPUSamplerOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGPUShaderModuleOwner::~JSGPUShaderModuleOwner(WebCore::JSGPUShaderModuleOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGPUSupportedFeaturesOwner::~JSGPUSupportedFeaturesOwner(WebCore::JSGPUSupportedFeaturesOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGPUSupportedLimitsOwner::~JSGPUSupportedLimitsOwner(WebCore::JSGPUSupportedLimitsOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGPUTextureOwner::~JSGPUTextureOwner(WebCore::JSGPUTextureOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGPUTextureViewOwner::~JSGPUTextureViewOwner(WebCore::JSGPUTextureViewOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGPUValidationErrorOwner::~JSGPUValidationErrorOwner(WebCore::JSGPUValidationErrorOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGamepadOwner::~JSGamepadOwner(WebCore::JSGamepadOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGamepadButtonOwner::~JSGamepadButtonOwner(WebCore::JSGamepadButtonOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGamepadHapticActuatorOwner::~JSGamepadHapticActuatorOwner(WebCore::JSGamepadHapticActuatorOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGeolocationOwner::~JSGeolocationOwner(WebCore::JSGeolocationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGeolocationCoordinatesOwner::~JSGeolocationCoordinatesOwner(WebCore::JSGeolocationCoordinatesOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGeolocationPositionOwner::~JSGeolocationPositionOwner(WebCore::JSGeolocationPositionOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSGeolocationPositionErrorOwner::~JSGeolocationPositionErrorOwner(WebCore::JSGeolocationPositionErrorOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSHTMLAllCollectionOwner::~JSHTMLAllCollectionOwner(WebCore::JSHTMLAllCollectionOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSHTMLAudioElementOwner::~JSHTMLAudioElementOwner(WebCore::JSHTMLAudioElementOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSHTMLCanvasElementOwner::~JSHTMLCanvasElementOwner(WebCore::JSHTMLCanvasElementOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_setViewport(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  JSValue v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  JSC::VM *v44;
  JSC::VM *v45;
  unint64_t v46;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v44 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "GPURenderPassEncoder", "setViewport");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSGPURenderPassEncoder::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "GPURenderPassEncoder", "setViewport");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v37);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v45 = v4;
  v46 = v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v46, this);
    v14 = v38;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v14 < -3.40282347e38 || v14 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  v45 = v16;
  v46 = v15;
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v46, this);
    v17 = v39;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v17 < -3.40282347e38 || v17 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  v45 = v19;
  v46 = v18;
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v46, this);
    v20 = v40;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v20 < -3.40282347e38 || v20 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v21 = *((_QWORD *)a2 + 9);
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  v45 = v22;
  v46 = v21;
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v46, this);
    v23 = v41;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v23 < -3.40282347e38 || v23 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v24 = *((_QWORD *)a2 + 10);
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  v45 = v25;
  v46 = v24;
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v46, this);
    v26 = v42;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v26 < -3.40282347e38 || v26 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v27 = *((_QWORD *)a2 + 11);
  v28 = (JSC::VM *)*((_QWORD *)this + 7);
  v45 = v28;
  v46 = v27;
  if (v27 >= 0xFFFE000000000000)
  {
    v29 = (double)(int)v27;
  }
  else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v46, this);
    v29 = v43;
  }
  else
  {
    *(_QWORD *)&v29 = v27 - 0x2000000000000;
  }
  if (!*((_DWORD *)v28 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) == 0)
  {
    if ((*(_QWORD *)&v29 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && v29 >= -3.40282347e38
      && v29 <= 3.40282347e38)
    {
      v30 = v14;
      v31 = v17;
      v32 = v20;
      v33 = v23;
      v34 = v26;
      v35 = v29;
      (*(void (**)(_QWORD, float, float, float, float, float, float))(**(_QWORD **)(v12 + 8) + 112))(*(_QWORD *)(v12 + 8), v30, v31, v32, v33, v34, v35);
      return 10;
    }
    JSC::throwTypeError();
  }
  return 0;
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_setScissorRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  JSValue v17;
  JSC::VM *v18;
  unint64_t v19;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v18 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "GPURenderPassEncoder", "setScissorRect");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSGPURenderPassEncoder::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "GPURenderPassEncoder", "setScissorRect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v17);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), &v19);
    v13 = v19;
    if (HIDWORD(v19))
    {
      return 0;
    }
    else
    {
      WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), &v19);
      v14 = v19;
      if (HIDWORD(v19))
      {
        return 0;
      }
      else
      {
        WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), &v19);
        v15 = v19;
        if (HIDWORD(v19))
        {
          return 0;
        }
        else
        {
          WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 9), &v19);
          if (HIDWORD(v19))
          {
            return 0;
          }
          else
          {
            (*(void (**)(_QWORD, unint64_t, unint64_t, unint64_t))(**(_QWORD **)(v12 + 8)
                                                                                                 + 120))(*(_QWORD *)(v12 + 8), v13, v14, v15);
            return 10;
          }
        }
      }
    }
  }
}

_BYTE *WebCore::jsGPURenderPassEncoderPrototypeFunction_setBlendConstant(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  JSValue v18;
  JSC::VM *v19;
  _BYTE v20[32];
  int v21;
  _QWORD v22[4];
  int v23;
  char v24;
  char *v25;
  _BYTE v26[8];
  _BYTE v27[32];
  unsigned int v28;
  int v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v19 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v19, "GPURenderPassEncoder", "setBlendConstant");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGPURenderPassEncoder::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v19, "GPURenderPassEncoder", "setBlendConstant");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v18);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLSequence<WebCore::IDLDouble>,WebCore::IDLDictionary<WebCore::GPUColorDict>>>::convert(*((JSC::JSCell **)a2 + 6), this, a3, (uint64_t)v26);
  v12 = v29;
  if (v29)
  {
    v15 = 0;
  }
  else
  {
    v20[0] = 0;
    v21 = -1;
    v13 = v28;
    if (v28 == -1)
      std::__throw_bad_variant_access[abi:sn180100]();
    ((void (*)(_QWORD *, _BYTE *, _BYTE *))off_1E328A5C8[v28])(v22, v20, v27);
    v21 = v13;
    v14 = *(_QWORD *)(v11 + 8);
    v25 = &v24;
    ((void (*)(_QWORD *__return_ptr, char **, _BYTE *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore16convertToBackingERKNS_7variantIJNS6_6VectorIdLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENS8_12GPUColorDictEEEEEUlRKSD_E_JZNS8_16convertToBackingESH_EUlRKSE_E_EEEEEJRKNS0_6__implIJSD_SE_EEEEEEDcOT_DpOT0____fmatrix[v13])(v22, &v25, v20);
    (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v14 + 128))(v14, v22);
    if (v23 != -1)
      ((void (*)(char **, _QWORD *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIdLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEEN7WebCore6WebGPU9ColorDictEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSG_EEEDcOSH_DpOT0____fmatrix[v23])(&v25, v22);
    if (v21 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_1E328A5B8[v21])(v22, v20);
    v12 = v29;
    v15 = 10;
  }
  if (v12 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E328A5D8[v12])(v22, v27);
  return (_BYTE *)v15;
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_setStencilReference(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSValue v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v14 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "GPURenderPassEncoder", "setStencilReference");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGPURenderPassEncoder::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "GPURenderPassEncoder", "setStencilReference");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), &v15);
    if (HIDWORD(v15))
    {
      return 0;
    }
    else
    {
      (*(void (**)(_QWORD))(**(_QWORD **)(v11 + 8) + 136))(*(_QWORD *)(v11 + 8));
      return 10;
    }
  }
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_beginOcclusionQuery(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSValue v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v14 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "GPURenderPassEncoder", "beginOcclusionQuery");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGPURenderPassEncoder::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "GPURenderPassEncoder", "beginOcclusionQuery");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), &v15);
    if (HIDWORD(v15))
    {
      return 0;
    }
    else
    {
      (*(void (**)(_QWORD))(**(_QWORD **)(v11 + 8) + 144))(*(_QWORD *)(v11 + 8));
      return 10;
    }
  }
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_endOcclusionQuery(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "GPURenderPassEncoder", "endOcclusionQuery");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSGPURenderPassEncoder::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "GPURenderPassEncoder", "endOcclusionQuery");
  (*(void (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(v3 + 24) + 8) + 152))(*(_QWORD *)(*(_QWORD *)(v3 + 24)
                                                                                                 + 8));
  return 10;
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_executeBundles(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  JSValue v14;
  int i;
  unsigned int v16;
  uint64_t IndexQuickly;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  int v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  WTF *v27;
  uint64_t v28;
  uint64_t v29;
  WTF *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  WTF *v34;
  WTF *v35;
  WTF *v36;
  _DWORD *v37;
  JSValue v39;
  void *v40;
  uint64_t v41;
  WTF *v42;
  WTF *v43;
  _DWORD *v44;
  uint64_t v45;
  WTF::StringImpl *v46[2];
  int v47;
  uint64_t v48;
  WTF *v49;
  uint64_t v50;

  v4 = *((_QWORD *)this + 7);
  v45 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v45, "GPURenderPassEncoder", "executeBundles");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGPURenderPassEncoder::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v45, "GPURenderPassEncoder", "executeBundles");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v39.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException((JSC::VM *)v4, this, v39);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v48 = v4;
  if ((v12 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v12 + 5) <= 0x16u)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    v19 = v46[0];
    v46[0] = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v20 = 0;
    v21 = 1;
    v47 = 1;
    goto LABEL_32;
  }
  v49 = 0;
  v50 = 0;
  result = JSC::getIterationMode();
  if ((_DWORD)result == 2)
  {
    for (i = 1; ; ++i)
    {
      v16 = (*(_BYTE *)(v12 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v12 + 8) - 8) : 0;
      if (i - 1 >= v16)
        break;
      IndexQuickly = JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v12, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = JSC::JSObject::get((JSC::JSObject *)v12, this, (i - 1));
      if (*(_DWORD *)(v4 + 80))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        if ((result & 1) != 0)
          break;
      }
      result = (uint64_t)WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLInterface<WebCore::GPURenderBundle>>::convert((char *)this, IndexQuickly, (uint64_t)&v49);
      if (*(_QWORD *)(v4 + 16))
      {
        v25 = JSC::JSArrayIterator::create();
        v26 = i | 0xFFFE000000000000;
        if (i < 0)
          v26 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v25 + 16) = v26;
        goto LABEL_48;
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(this, (JSC::JSGlobalObject *)v12, v14);
    if (!*(_DWORD *)(v4 + 80) || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4), (result & 1) == 0))
    {
      while (1)
      {
        result = JSC::iteratorStep();
        if (*(_QWORD *)(v4 + 16) || result == 6)
          break;
        v23 = JSC::iteratorValue();
        if (*(_DWORD *)(v4 + 80))
        {
          v24 = v23;
          result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
          v23 = v24;
          if ((result & 1) != 0)
            break;
        }
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLInterface<WebCore::GPURenderBundle>>::convert((char *)this, v23, (uint64_t)&v49);
        if (*(_QWORD *)(v4 + 16))
        {
LABEL_48:
          result = JSC::iteratorClose();
          break;
        }
      }
    }
  }
  if (!*(_DWORD *)(v4 + 80))
  {
    v27 = v49;
    goto LABEL_51;
  }
  result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
  v27 = v49;
  if ((_DWORD)result)
  {
    v47 = 1;
    if (HIDWORD(v50))
    {
      v41 = 8 * HIDWORD(v50);
      v42 = v49;
      do
      {
        v43 = *(WTF **)v42;
        *(_QWORD *)v42 = 0;
        if (v43)
        {
          if (*(_DWORD *)v43 == 1)
          {
            v44 = (_DWORD *)*((_QWORD *)v43 + 1);
            *((_QWORD *)v43 + 1) = 0;
            if (v44)
            {
              if (v44[2] == 1)
                (*(void (**)(_DWORD *))(*(_QWORD *)v44 + 8))(v44);
              else
                --v44[2];
            }
            WTF::fastFree(v43, v40);
          }
          else
          {
            --*(_DWORD *)v43;
          }
        }
        v42 = (WTF *)((char *)v42 + 8);
        v41 -= 8;
      }
      while (v41);
    }
    if (v27)
      WTF::fastFree(v27, v40);
    v20 = 0;
    v21 = 1;
LABEL_32:
    ((void (*)(WTF **, WTF::StringImpl **))off_1E328A5E8[v21])(&v49, v46);
    return v20;
  }
LABEL_51:
  v28 = HIDWORD(v50);
  v47 = 0;
  v46[0] = 0;
  v46[1] = 0;
  v49 = 0;
  v50 = 0;
  v29 = 8 * v28;
  if (!(_DWORD)v28)
    goto LABEL_56;
  if (!(v28 >> 29))
  {
    v30 = (WTF *)WTF::fastMalloc((WTF *)(8 * v28));
    v31 = 0;
    LODWORD(v50) = v28;
    v49 = v30;
    v32 = 8 * v28;
    do
    {
      *((_QWORD *)v30 + v31) = *(_QWORD *)(*((_QWORD *)v27 + v31) + 8);
      ++v31;
      v32 -= 8;
    }
    while (v32);
    HIDWORD(v50) = v31;
LABEL_56:
    (*(void (**)(_QWORD, WTF **))(**(_QWORD **)(v11 + 8) + 160))(*(_QWORD *)(v11 + 8), &v49);
    v34 = v49;
    if (v49)
    {
      v49 = 0;
      LODWORD(v50) = 0;
      WTF::fastFree(v34, v33);
    }
    if ((_DWORD)v28)
    {
      v35 = v27;
      do
      {
        v36 = *(WTF **)v35;
        *(_QWORD *)v35 = 0;
        if (v36)
        {
          if (*(_DWORD *)v36 == 1)
          {
            v37 = (_DWORD *)*((_QWORD *)v36 + 1);
            *((_QWORD *)v36 + 1) = 0;
            if (v37)
            {
              if (v37[2] == 1)
                (*(void (**)(_DWORD *))(*(_QWORD *)v37 + 8))(v37);
              else
                --v37[2];
            }
            WTF::fastFree(v36, v33);
          }
          else
          {
            --*(_DWORD *)v36;
          }
        }
        v35 = (WTF *)((char *)v35 + 8);
        v29 -= 8;
      }
      while (v29);
    }
    if (v27)
    {
      WTF::fastFree(v27, v33);
      v21 = v47;
      v20 = 10;
      if (v47 == -1)
        return v20;
    }
    else
    {
      v21 = 0;
      v20 = 10;
    }
    goto LABEL_32;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_end(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "GPURenderPassEncoder", "end");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSGPURenderPassEncoder::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "GPURenderPassEncoder", "end");
  (*(void (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(v3 + 24) + 8) + 168))(*(_QWORD *)(*(_QWORD *)(v3 + 24)
                                                                                                 + 8));
  return 10;
}

_BYTE *WebCore::jsGPURenderPassEncoderPrototypeFunction_pushDebugGroup(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  int v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  JSValue v19;
  JSC::VM *v20;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "GPURenderPassEncoder", "pushDebugGroup");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGPURenderPassEncoder::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "GPURenderPassEncoder", "pushDebugGroup");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v19);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v21);
  v12 = v22;
  if (v22)
  {
    v16 = 0;
  }
  else
  {
    v13 = v21;
    v21 = 0;
    v23 = v13;
    (*(void (**)(_QWORD, WTF::StringImpl **))(**(_QWORD **)(v11 + 8) + 88))(*(_QWORD *)(v11 + 8), &v23);
    v15 = v23;
    v23 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v14);
      else
        *(_DWORD *)v15 -= 2;
    }
    v12 = v22;
    v16 = 10;
  }
  if (v12 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328A618[v12])(&v23, &v21);
  return (_BYTE *)v16;
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_popDebugGroup(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "GPURenderPassEncoder", "popDebugGroup");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSGPURenderPassEncoder::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "GPURenderPassEncoder", "popDebugGroup");
  (*(void (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(v3 + 24) + 8) + 96))(*(_QWORD *)(*(_QWORD *)(v3 + 24)
                                                                                                + 8));
  return 10;
}

_BYTE *WebCore::jsGPURenderPassEncoderPrototypeFunction_insertDebugMarker(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  int v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  JSValue v19;
  JSC::VM *v20;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "GPURenderPassEncoder", "insertDebugMarker");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGPURenderPassEncoder::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "GPURenderPassEncoder", "insertDebugMarker");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v19);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v21);
  v12 = v22;
  if (v22)
  {
    v16 = 0;
  }
  else
  {
    v13 = v21;
    v21 = 0;
    v23 = v13;
    (*(void (**)(_QWORD, WTF::StringImpl **))(**(_QWORD **)(v11 + 8) + 104))(*(_QWORD *)(v11 + 8), &v23);
    v15 = v23;
    v23 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v14);
      else
        *(_DWORD *)v15 -= 2;
    }
    v12 = v22;
    v16 = 10;
  }
  if (v12 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328A618[v12])(&v23, &v21);
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsGPURenderPassEncoderPrototypeFunction_setBindGroup(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSGPURenderPassEncoder *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL4 v22;
  char **v23;
  BOOL v24;
  JSValue v26;
  uint64_t v27;
  JSC::JSArrayBufferView *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)();
  uint64_t v34;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  JSValue v38;
  WTF::StringImpl *v39;
  _QWORD v40[2];
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  unint64_t v45;
  WTF::StringImpl *v46;
  unint64_t v47;
  WTF::StringImpl *v48;
  char v49;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v40[0] = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)v40, "GPURenderPassEncoder", "setBindGroup");
  v7 = a2;
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSGPURenderPassEncoder::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)v40, "GPURenderPassEncoder", "setBindGroup");
  v40[1] = v5;
  v13 = *((int *)a2 + 8) - 1;
  if (v13 >= 5)
    v13 = 5;
  if (v13 != 5)
  {
    if (v13 == 3 || v13 == 2)
      return (_BYTE *)WebCore::jsGPURenderPassEncoderPrototypeFunction_setBindGroup1Body((WTF::StringImpl **)this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
    if (v13 > 1)
      return (_BYTE *)JSC::throwTypeError();
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v26);
  }
  v16 = *(_QWORD *)(v6 + 24);
  WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), &v47);
  v18 = v47;
  if (HIDWORD(v47))
    return 0;
  v19 = *((_QWORD *)v7 + 7);
  v20 = *((_QWORD *)this + 7);
  v47 = v20;
  if ((v19 & 0xFFFE000000000002) != 0)
    goto LABEL_31;
  v21 = *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C);
  v22 = *(_DWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C) != 0;
  v23 = (char **)(16 * v21);
  if ((_DWORD)v21)
    v24 = v23 == &WebCore::JSGPUBindGroup::s_info;
  else
    v24 = 1;
  if (!v24)
  {
    do
    {
      v23 = (char **)v23[2];
      v22 = v23 != 0;
    }
    while (v23 != &WebCore::JSGPUBindGroup::s_info && v23 != 0);
  }
  if (v22 && (v27 = *(_QWORD *)(v19 + 24)) != 0)
  {
    v28 = (JSC::JSArrayBufferView *)*((_QWORD *)v7 + 8);
    v45 = v20;
    if (((unint64_t)v28 & 0xFFFE000000000002) == 0 && *((_BYTE *)v28 + 5) == 45)
    {
      JSC::JSGenericTypedArrayView<JSC::Uint32Adaptor>::possiblySharedTypedImpl(v28, (uint64_t *)&v47);
      v29 = v47;
      if (v47)
      {
        v30 = *(_QWORD *)(v47 + 32);
        if (!v30)
          goto LABEL_49;
        v31 = *(_QWORD *)(v30 + 16);
        if (!v31)
          goto LABEL_49;
        v32 = *(_QWORD *)(MEMORY[0x1E0CC10F8] + 56);
        if (v32)
        {
          if (!*(_BYTE *)(MEMORY[0x1E0CC10F8] + 34))
            goto LABEL_81;
          goto LABEL_43;
        }
LABEL_44:
        if (*(_QWORD *)(v30 + 32))
          v33 = WTF::RefPtr<JSC::SharedArrayBufferContents,WTF::RawPtrTraits<JSC::SharedArrayBufferContents>,WTF::DefaultRefDerefTraits<JSC::SharedArrayBufferContents>>::unspecifiedBoolTypeInstance;
        else
          v33 = 0;
        if (!v33)
        {
          while (1)
          {
LABEL_49:
            if ((*(_BYTE *)(v29 + 6) & 3) != 0)
              goto LABEL_50;
            v43 = v29;
            v44 = 0;
            WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLongLong>(this, *((_QWORD *)v7 + 9), (uint64_t)&v41);
            if (v42)
              break;
            v7 = (JSC::JSGlobalObject *)*((_QWORD *)v7 + 10);
            WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, (unint64_t)v7, &v47);
            if (HIDWORD(v47))
              goto LABEL_79;
            v43 = 0;
            if (!v42)
            {
              WebCore::GPURenderBundleEncoder::setBindGroup(v16, v18, v27, v29, v41, v47, (uint64_t)&v47);
              if (*(_DWORD *)v29 == 1)
                JSC::ArrayBufferView::operator delete();
              else
                --*(_DWORD *)v29;
              if (v49)
              {
                v36 = (WTF::StringImpl *)v47;
                LOBYTE(v45) = v47;
                v37 = v48;
                v48 = 0;
                v46 = v37;
                if (!*((_QWORD *)v5 + 2))
                {
                  v38.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v47, (JSC::JSGlobalObject *)&v46);
                  JSC::VM::throwException(v5, this, v38);
                  v37 = v46;
                }
                v46 = 0;
                if (v37)
                {
                  if (*(_DWORD *)v37 == 2)
                    WTF::StringImpl::destroy(v37, v36);
                  else
                    *(_DWORD *)v37 -= 2;
                }
                if (v49)
                {
                  v39 = v48;
                  v48 = 0;
                  if (v39)
                  {
                    if (*(_DWORD *)v39 != 2)
                    {
                      v15 = 0;
                      *(_DWORD *)v39 -= 2;
                      goto LABEL_62;
                    }
                    WTF::StringImpl::destroy(v39, v36);
                  }
                }
LABEL_79:
                v15 = 0;
                goto LABEL_62;
              }
              v15 = 10;
LABEL_62:
              v34 = 0;
              goto LABEL_53;
            }
            std::__throw_bad_variant_access[abi:sn180100]();
LABEL_81:
            if (*MEMORY[0x1E0CC10F0])
              goto LABEL_44;
LABEL_43:
            if ((v31 & 0x3FFFFFFFFLL) + v32)
              goto LABEL_44;
          }
          v15 = 0;
          goto LABEL_62;
        }
        v47 = 0;
LABEL_50:
        if (*(_DWORD *)v29 == 1)
          JSC::ArrayBufferView::operator delete();
        else
          --*(_DWORD *)v29;
      }
    }
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v45, 2, "dynamicOffsetsData", 19, "GPURenderPassEncoder", 21, v17, "setBindGroup", 13, "Uint32Array", 12);
    v15 = 0;
    v34 = 1;
    v44 = 1;
LABEL_53:
    ((void (*)(unint64_t *, uint64_t *))off_1E328A608[v34])(&v47, &v43);
  }
  else
  {
LABEL_31:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v47, 1, "bindGroup", 10, "GPURenderPassEncoder", 21, v17, "setBindGroup", 13, "GPUBindGroup", 13);
    return 0;
  }
  return (_BYTE *)v15;
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_setPipeline(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v24;
  JSValue v25;
  JSC::VM *v26;
  JSC::VM *v27;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "GPURenderPassEncoder", "setPipeline");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSGPURenderPassEncoder::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "GPURenderPassEncoder", "setPipeline");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v25);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    v27 = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_24;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSGPURenderPipeline::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSGPURenderPipeline::s_info && v20 != 0);
    }
    if (v19 && (v24 = *(_QWORD *)(v17 + 24)) != 0)
    {
      (*(void (**)(_QWORD, _QWORD, JSC::CallFrame *))(**(_QWORD **)(v16 + 8) + 16))(*(_QWORD *)(v16 + 8), *(_QWORD *)(v24 + 8), a3);
      return 10;
    }
    else
    {
LABEL_24:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v27, 0, "pipeline", 9, "GPURenderPassEncoder", 21, a8, "setPipeline", 12, "GPURenderPipeline", 18);
      return 0;
    }
  }
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_setIndexBuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned __int16 v28;
  uint64_t v29;
  unint64_t v30;
  JSValue v31;
  JSC::VM *v32;
  JSC::VM *v33;
  int v34;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v32 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "GPURenderPassEncoder", "setIndexBuffer");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSGPURenderPassEncoder::s_info && v14 != 0);
  }
  if (!v13)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "GPURenderPassEncoder", "setIndexBuffer");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v31);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  v33 = v9;
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSGPUBuffer::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSGPUBuffer::s_info && v21 != 0);
  }
  if (!v20 || (v25 = *(_QWORD *)(v18 + 24)) == 0)
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v33, 0, "buffer", 7, "GPURenderPassEncoder", 21, a8, "setIndexBuffer", 15, "GPUBuffer", 10);
    return 0;
  }
  v26 = *((_QWORD *)a2 + 7);
  v33 = v9;
  v28 = WebCore::parseEnumeration<WebCore::GPUIndexFormat>(this, v26);
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  if (v28 <= 0xFFu)
  {
    WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v33, 1, "indexFormat", 12, "GPURenderPassEncoder", 21, v27, "setIndexBuffer", 15, "\"uint16\", \"uint32\"", 19);
    return 0;
  }
  v29 = *((int *)a2 + 8);
  if ((unint64_t)(v29 - 4) <= 0xFFFFFFFFFFFFFFFCLL && *((_QWORD *)a2 + 8) != 10)
  {
    WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLongLong>(this, *((_QWORD *)a2 + 8), (uint64_t)&v33);
    if (v34)
      return 0;
    v29 = *((int *)a2 + 8);
  }
  if ((unint64_t)(v29 - 5) <= 0xFFFFFFFFFFFFFFFBLL)
  {
    v30 = *((_QWORD *)a2 + 9);
    if (v30 != 10)
    {
      WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLongLong>(this, v30, (uint64_t)&v33);
      if (v34)
        return 0;
    }
  }
  if (v28 >= 2u)
  {
    result = 46;
    __break(0xC471u);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(**(_QWORD **)(v17 + 8) + 24))(*(_QWORD *)(v17 + 8), *(_QWORD *)(v25 + 16));
    return 10;
  }
  return result;
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_setVertexBuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL4 v18;
  char **v19;
  BOOL v20;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  JSValue v30;
  JSC::VM *v31;
  unint64_t v32;
  int v33;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v31, "GPURenderPassEncoder", "setVertexBuffer");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSGPURenderPassEncoder::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v31, "GPURenderPassEncoder", "setVertexBuffer");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v30);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), &v32);
    v14 = v32;
    if (HIDWORD(v32))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      if ((v15 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v16 = 0;
      }
      else
      {
        v32 = *((_QWORD *)this + 7);
        if ((v15 & 0xFFFE000000000002) != 0)
          goto LABEL_27;
        v17 = *(unsigned int *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x4C);
        v18 = *(_DWORD *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x4C) != 0;
        v19 = (char **)(16 * v17);
        if ((_DWORD)v17)
          v20 = v19 == &WebCore::JSGPUBuffer::s_info;
        else
          v20 = 1;
        if (!v20)
        {
          do
          {
            v19 = (char **)v19[2];
            v18 = v19 != 0;
          }
          while (v19 != &WebCore::JSGPUBuffer::s_info && v19 != 0);
        }
        if (!v18 || (v16 = *(_QWORD *)(v15 + 24)) == 0)
        {
LABEL_27:
          WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v32, 1, "buffer", 7, "GPURenderPassEncoder", 21, v13, "setVertexBuffer", 16, "GPUBuffer", 10);
          return 0;
        }
      }
      v23 = *((int *)a2 + 8);
      if ((unint64_t)(v23 - 4) > 0xFFFFFFFFFFFFFFFCLL)
      {
        v24 = 0;
        v25 = 0;
      }
      else if (*((_QWORD *)a2 + 8) == 10)
      {
        v24 = 0;
        v25 = 0;
      }
      else
      {
        WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLongLong>(this, *((_QWORD *)a2 + 8), (uint64_t)&v32);
        if (v33)
          return 0;
        v24 = v32;
        v23 = *((int *)a2 + 8);
        v25 = 1;
      }
      if ((unint64_t)(v23 - 5) > 0xFFFFFFFFFFFFFFFBLL)
      {
        v27 = 0;
        v28 = 0;
      }
      else
      {
        v26 = *((_QWORD *)a2 + 9);
        if (v26 == 10)
        {
          v27 = 0;
          v28 = 0;
        }
        else
        {
          WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLongLong>(this, v26, (uint64_t)&v32);
          if (v33)
            return 0;
          v27 = v32;
          v28 = 1;
        }
      }
      if (v16)
        v29 = *(_QWORD *)(v16 + 16);
      else
        v29 = 0;
      (*(void (**)(_QWORD, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))(**(_QWORD **)(v12 + 8) + 32))(*(_QWORD *)(v12 + 8), v14, v29, v24, v25, v27, v28);
      return 10;
    }
  }
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_draw(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  JSValue v20;
  JSC::VM *v21;
  unint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "GPURenderPassEncoder", "draw");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSGPURenderPassEncoder::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "GPURenderPassEncoder", "draw");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v20);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), &v22);
    v13 = v22;
    if (HIDWORD(v22))
    {
      return 0;
    }
    else
    {
      v14 = *((int *)a2 + 8);
      if ((unint64_t)(v14 - 3) > 0xFFFFFFFFFFFFFFFDLL)
      {
        v15 = 0;
      }
      else if (*((_QWORD *)a2 + 7) == 10)
      {
        v15 = 0;
      }
      else
      {
        WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), &v22);
        if (HIDWORD(v22))
          return 0;
        v15 = v22 | 0x100000000;
        v14 = *((int *)a2 + 8);
      }
      if ((unint64_t)(v14 - 4) > 0xFFFFFFFFFFFFFFFCLL)
      {
        v16 = 0;
      }
      else if (*((_QWORD *)a2 + 8) == 10)
      {
        v16 = 0;
      }
      else
      {
        WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), &v22);
        if (HIDWORD(v22))
          return 0;
        v16 = v22 | 0x100000000;
        v14 = *((int *)a2 + 8);
      }
      if ((unint64_t)(v14 - 5) > 0xFFFFFFFFFFFFFFFBLL)
      {
        v18 = 0;
        goto LABEL_32;
      }
      v17 = *((_QWORD *)a2 + 9);
      if (v17 == 10)
      {
        v18 = 0;
LABEL_32:
        (*(void (**)(_QWORD, unint64_t, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(v12 + 8) + 40))(*(_QWORD *)(v12 + 8), v13, v15, v16, v18);
        return 10;
      }
      WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, v17, &v22);
      if (!HIDWORD(v22))
      {
        v18 = v22 | 0x100000000;
        goto LABEL_32;
      }
      return 0;
    }
  }
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_drawIndexed(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  JSValue v24;
  uint64_t v25;
  uint64_t v26;
  JSC::VM *v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  JSC::VM *v32;
  unint64_t v33;
  unint64_t v34;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v32 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "GPURenderPassEncoder", "drawIndexed");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSGPURenderPassEncoder::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "GPURenderPassEncoder", "drawIndexed");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v24);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), &v34);
    v13 = v34;
    if (HIDWORD(v34))
    {
      return 0;
    }
    else
    {
      v14 = *((int *)a2 + 8);
      if ((unint64_t)(v14 - 3) > 0xFFFFFFFFFFFFFFFDLL)
      {
        v15 = 0;
      }
      else if (*((_QWORD *)a2 + 7) == 10)
      {
        v15 = 0;
      }
      else
      {
        WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), &v34);
        if (HIDWORD(v34))
          return 0;
        v15 = v34 | 0x100000000;
        v14 = *((int *)a2 + 8);
      }
      if ((unint64_t)(v14 - 4) > 0xFFFFFFFFFFFFFFFCLL)
      {
        v16 = 0;
      }
      else if (*((_QWORD *)a2 + 8) == 10)
      {
        v16 = 0;
      }
      else
      {
        v17 = v15;
        WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), &v34);
        if (HIDWORD(v34))
          return 0;
        v16 = v34 | 0x100000000;
        v14 = *((int *)a2 + 8);
        v15 = v17;
      }
      if ((unint64_t)(v14 - 5) > 0xFFFFFFFFFFFFFFFBLL)
      {
        v19 = 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 9);
        if (v18 == 10)
        {
          v19 = 0;
        }
        else
        {
          v34 = *((_QWORD *)a2 + 9);
          if (v18 < 0xFFFE000000000000)
          {
            v25 = v16;
            v31 = v15;
            v26 = v12;
            v27 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v34, this);
              v28 = v29;
            }
            else
            {
              *(_QWORD *)&v28 = v18 - 0x2000000000000;
            }
            if (*((_DWORD *)v27 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v27))
              HIDWORD(v33) = 1;
            else
              WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v33, (uint64_t)this, v28);
            v12 = v26;
            v15 = v31;
            v16 = v25;
          }
          else
          {
            v33 = v18;
          }
          if (HIDWORD(v33))
            return 0;
          v19 = v33 | 0x100000000;
          v14 = *((int *)a2 + 8);
        }
      }
      if ((unint64_t)(v14 - 6) > 0xFFFFFFFFFFFFFFFALL)
      {
        v21 = 0;
        goto LABEL_40;
      }
      v20 = *((_QWORD *)a2 + 10);
      if (v20 == 10)
      {
        v21 = 0;
LABEL_40:
        (*(void (**)(_QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(v12 + 8)
                                                                                             + 48))(*(_QWORD *)(v12 + 8), v13, v15, v16, v19, v21);
        return 10;
      }
      v30 = v16;
      v22 = v15;
      WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, v20, &v34);
      if (!HIDWORD(v34))
      {
        v21 = v34 | 0x100000000;
        v15 = v22;
        v16 = v30;
        goto LABEL_40;
      }
      return 0;
    }
  }
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_drawIndirect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v24;
  JSValue v25;
  JSC::VM *v26;
  JSC::VM *v27;
  int v28;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "GPURenderPassEncoder", "drawIndirect");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSGPURenderPassEncoder::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "GPURenderPassEncoder", "drawIndirect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v25);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    v27 = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_24;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSGPUBuffer::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSGPUBuffer::s_info && v20 != 0);
    }
    if (v19 && (v24 = *(_QWORD *)(v17 + 24)) != 0)
    {
      WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLongLong>(this, *((_QWORD *)a2 + 7), (uint64_t)&v27);
      if (v28)
      {
        return 0;
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD, JSC::VM *))(**(_QWORD **)(v16 + 8) + 56))(*(_QWORD *)(v16 + 8), *(_QWORD *)(v24 + 16), v27);
        return 10;
      }
    }
    else
    {
LABEL_24:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v27, 0, "indirectBuffer", 15, "GPURenderPassEncoder", 21, a8, "drawIndirect", 13, "GPUBuffer", 10);
      return 0;
    }
  }
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_drawIndexedIndirect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v24;
  JSValue v25;
  JSC::VM *v26;
  JSC::VM *v27;
  int v28;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "GPURenderPassEncoder", "drawIndexedIndirect");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSGPURenderPassEncoder::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSGPURenderPassEncoder::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "GPURenderPassEncoder", "drawIndexedIndirect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v25);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    v27 = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_24;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSGPUBuffer::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSGPUBuffer::s_info && v20 != 0);
    }
    if (v19 && (v24 = *(_QWORD *)(v17 + 24)) != 0)
    {
      WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLongLong>(this, *((_QWORD *)a2 + 7), (uint64_t)&v27);
      if (v28)
      {
        return 0;
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD, JSC::VM *))(**(_QWORD **)(v16 + 8) + 64))(*(_QWORD *)(v16 + 8), *(_QWORD *)(v24 + 16), v27);
        return 10;
      }
    }
    else
    {
LABEL_24:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v27, 0, "indirectBuffer", 15, "GPURenderPassEncoder", 21, a8, "drawIndexedIndirect", 20, "GPUBuffer", 10);
      return 0;
    }
  }
}

char *WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLInterface<WebCore::GPURenderBundle>>::convert(char *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  WTF *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  WTF *v15;
  _DWORD *v16;
  WTF *v17;

  v17 = (WTF *)*((_QWORD *)result + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return (char *)JSC::throwTypeError();
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSGPURenderBundle::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSGPURenderBundle::s_info && v6 != 0);
  }
  if (!v5)
    return (char *)JSC::throwTypeError();
  v9 = *(WTF **)(a2 + 24);
  if (!v9)
    return (char *)JSC::throwTypeError();
  ++*(_DWORD *)v9;
  v17 = v9;
  v10 = *(unsigned int *)(a3 + 12);
  if ((_DWORD)v10 == *(_DWORD *)(a3 + 8))
  {
    result = WTF::Vector<WTF::Ref<WebCore::AcceleratedEffect,WTF::RawPtrTraits<WebCore::AcceleratedEffect>,WTF::DefaultRefDerefTraits<WebCore::AcceleratedEffect>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((char **)a3, v10 + 1, (unint64_t)&v17);
    v12 = *(unsigned int *)(a3 + 12);
    v13 = *(char **)a3;
    v14 = *(_QWORD *)result;
    *(_QWORD *)result = 0;
    *(_QWORD *)&v13[8 * v12] = v14;
    v15 = v17;
    *(_DWORD *)(a3 + 12) = v12 + 1;
    v17 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 1)
      {
        v16 = (_DWORD *)*((_QWORD *)v15 + 1);
        *((_QWORD *)v15 + 1) = 0;
        if (v16)
        {
          if (v16[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v16 + 8))(v16);
          else
            --v16[2];
        }
        return (char *)WTF::fastFree(v15, v11);
      }
      else
      {
        --*(_DWORD *)v15;
      }
    }
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)a3 + 8 * v10) = v9;
    *(_DWORD *)(a3 + 12) = v10 + 1;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS8_3RefIN7WebCore15GPURenderBundleENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSK_SL_EEEEEEDcSP_DpT0_(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  WTF **v4;
  uint64_t v5;
  WTF *v6;
  _DWORD *v7;
  WTF *result;

  v3 = a2[3];
  if ((_DWORD)v3)
  {
    v4 = *(WTF ***)a2;
    v5 = 8 * v3;
    do
    {
      v6 = *v4;
      *v4 = 0;
      if (v6)
      {
        if (*(_DWORD *)v6 == 1)
        {
          v7 = (_DWORD *)*((_QWORD *)v6 + 1);
          *((_QWORD *)v6 + 1) = 0;
          if (v7)
          {
            if (v7[2] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
            else
              --v7[2];
          }
          WTF::fastFree(v6, a2);
        }
        else
        {
          --*(_DWORD *)v6;
        }
      }
      ++v4;
      v5 -= 8;
    }
    while (v5);
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    a2[2] = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

uint64_t WebCore::jsGPURenderPassEncoderPrototypeFunction_setBindGroup1Body(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSGPURenderPassEncoder *a4)
{
  uint64_t v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  void *v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  void *v27;
  WTF::StringImpl *v28;
  _QWORD v29[2];
  int v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  char v33;
  WTF::StringImpl *v34;
  WTF::StringImpl **v35;

  WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>((WTF::StringImpl *)this, *((_QWORD *)a2 + 6), &v31);
  v8 = v31;
  if ((unint64_t)v31 >> 32)
    return 0;
  v9 = *((_QWORD *)a2 + 7);
  v10 = this[7];
  v31 = v10;
  if ((v9 & 0xFFFE000000000002) == 0)
  {
    v11 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSGPUBindGroup::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSGPUBindGroup::s_info && v13 != 0);
    }
    if (v12)
    {
      v17 = *(_QWORD *)(v9 + 24);
      if (v17)
      {
        if ((unint64_t)(*((int *)a2 + 8) - 4) >= 0xFFFFFFFFFFFFFFFDLL
          || (v18 = *((_QWORD *)a2 + 8), v18 == 10))
        {
          v19 = 0;
          v30 = 0;
          v20 = 0;
        }
        else
        {
          v34 = v10;
          if ((v18 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v18 + 5) <= 0x16u)
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            JSC::throwTypeError();
            v26 = v31;
            v31 = 0;
            if (v26)
            {
              if (*(_DWORD *)v26 == 2)
                WTF::StringImpl::destroy(v26, v25);
              else
                *(_DWORD *)v26 -= 2;
            }
            v16 = 0;
            v23 = 1;
            v30 = 1;
            goto LABEL_22;
          }
          v31 = 0;
          v32 = 0;
          v35 = &v31;
          JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLEnforceRangeAdaptor<WebCore::IDLUnsignedLong>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<unsigned int,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>((JSC::JSGlobalObject *)this, v18, (uint64_t *)&v35);
          if (*((_DWORD *)v10 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v10))
          {
            v28 = v31;
            v30 = 1;
            if (v31)
            {
              v31 = 0;
              LODWORD(v32) = 0;
              WTF::fastFree(v28, v27);
            }
            v16 = 0;
            v23 = 1;
            goto LABEL_22;
          }
          v19 = v31;
          v20 = v32;
          v30 = 0;
        }
        v29[0] = 0;
        v29[1] = 0;
        v31 = v19;
        v32 = v20;
        v33 = 1;
        (*(void (**)(_QWORD, WTF::StringImpl *, _QWORD, WTF::StringImpl **))(**((_QWORD **)a3 + 1) + 72))(*((_QWORD *)a3 + 1), v8, *(_QWORD *)(v17 + 8), &v31);
        if (v33)
        {
          v22 = v31;
          if (v31)
          {
            v31 = 0;
            LODWORD(v32) = 0;
            WTF::fastFree(v22, v21);
          }
        }
        v23 = 0;
        v16 = 10;
LABEL_22:
        ((void (*)(WTF::StringImpl **, _QWORD *))off_1E328A5F8[v23])(&v31, v29);
        return v16;
      }
    }
  }
  WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v31, 1, "bindGroup", 10, "GPURenderPassEncoder", 21, v7, "setBindGroup", 13, "GPUBindGroup", 13);
  return 0;
}

_BYTE *WebCore::jsGPURenderPipelinePrototypeFunction_getBindGroupLayout(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF *v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  _DWORD *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  JSValue v24;
  JSC::VM *v25;
  _DWORD v26[2];
  uint64_t v27;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "GPURenderPipeline", "getBindGroupLayout");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGPURenderPipeline::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGPURenderPipeline::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "GPURenderPipeline", "getBindGroupLayout");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v24);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v26);
  if (v26[1])
    return 0;
  v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  (*(void (**)(uint64_t *__return_ptr, _QWORD, _QWORD))(**(_QWORD **)(v11 + 8) + 16))(&v27, *(_QWORD *)(v11 + 8), v26[0]);
  v13 = (WTF *)WTF::fastMalloc((WTF *)0x18);
  *(_DWORD *)v13 = 1;
  v14 = v27;
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = v14;
  v16 = WebCore::wrap<WebCore::GPUBindGroupLayout>((uint64_t)this, v12, v13);
  if (*(_DWORD *)v13 == 1)
  {
    v18 = (_DWORD *)*((_QWORD *)v13 + 2);
    *((_QWORD *)v13 + 2) = 0;
    if (v18)
    {
      if (v18[2] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v18 + 8))(v18);
      else
        --v18[2];
    }
    v19 = *((_QWORD *)v13 + 1);
    if (v19)
    {
      *(_QWORD *)(v19 + 8) = 0;
      v20 = (unsigned int *)*((_QWORD *)v13 + 1);
      *((_QWORD *)v13 + 1) = 0;
      if (v20)
      {
        do
        {
          v21 = __ldaxr(v20);
          v22 = v21 - 1;
        }
        while (__stlxr(v22, v20));
        if (!v22)
        {
          atomic_store(1u, v20);
          WTF::fastFree((WTF *)v20, v15);
        }
      }
    }
    else
    {
      *((_QWORD *)v13 + 1) = 0;
    }
    WTF::fastFree(v13, v15);
  }
  else
  {
    --*(_DWORD *)v13;
  }
  return (_BYTE *)v16;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore16GPUFragmentStateENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(int a1, WebCore::GPUFragmentState *this)
{
  WebCore::GPUFragmentState::~GPUFragmentState(this, this);
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore14GPUVertexStateENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(int a1, WebCore::GPUVertexState *this)
{
  WebCore::GPUVertexState::~GPUVertexState(this, this);
}

unint64_t WebCore::jsGPUShaderModulePrototypeFunction_getCompilationInfo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::DOMGuardedObject *v24;
  WebCore::DOMGuardedObject *v25;
  void (*v26)(void);
  uint64_t v27;
  objc_class *v29;
  WebCore::DOMGuardedObject *v30;
  WebCore::DOMGuardedObject *v31;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194BD2014);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_31;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSGPUShaderModule::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSGPUShaderModule::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_31:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"GPUShaderModule", "getCompilationInfo", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_27;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(v17 + 24) + 16);
  v24 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x10);
  *(_QWORD *)v24 = &off_1E334F220;
  *((_QWORD *)v24 + 1) = v14;
  v31 = v24;
  (*(void (**)(uint64_t, WebCore::DOMGuardedObject **))(*(_QWORD *)v23 + 16))(v23, &v31);
  v25 = v31;
  v31 = 0;
  if (v25)
  {
    v26 = *(void (**)(void))(*(_QWORD *)v25 + 8);
LABEL_27:
    v26();
  }
LABEL_28:
  v27 = *(_QWORD *)(v10 + 16);
  if (v27)
  {
    if (*(_QWORD *)(v10 + 24) != v27)
    {
      v29 = *(objc_class **)(v27 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v31);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v31, v29, 0);
      v30 = v31;
      v31 = 0;
      if (v30)
      {
        if (*((_DWORD *)v30 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v30 + 16))(v30);
        else
          --*((_DWORD *)v30 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS8_12KeyValuePairINS8_6StringEN7WebCore30GPUShaderModuleCompilationHintEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSK_1EJSH_SI_EEEEEEDcSM_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  WTF *result;
  char v9;

  v3 = *((unsigned int *)a2 + 3);
  if ((_DWORD)v3)
  {
    v4 = 24 * v3;
    v5 = *(_QWORD *)a2 + 8;
    do
    {
      v6 = *(unsigned int *)(v5 + 8);
      if ((_DWORD)v6 != -1)
        ((void (*)(char *, uint64_t))off_1E328A6A0[v6])(&v9, v5);
      *(_DWORD *)(v5 + 8) = -1;
      v7 = *(WTF::StringImpl **)(v5 - 8);
      *(_QWORD *)(v5 - 8) = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, a2);
        else
          *(_DWORD *)v7 -= 2;
      }
      v5 += 24;
      v4 -= 24;
    }
    while (v4);
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

_BYTE *WebCore::jsGPUSupportedFeaturesPrototypeFunction_has(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  JSC::JSGlobalObject *v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  char BackingSet;
  WTF::StringImpl *v16;
  const JSC::Identifier *v17;
  JSC::CallFrame *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  JSValue v30;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v32;
  JSC::VM *v33;
  uint64_t v34;
  int v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v33 = v4;
  v5 = (JSC::JSGlobalObject *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "GPUSupportedFeatures", "has");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSGPUSupportedFeatures::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSGPUSupportedFeatures::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "GPUSupportedFeatures", "has");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v30);
  }
  v12 = *((_QWORD *)a2 + 6);
  v37[0] = (WTF::StringImpl *)v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v36 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v37, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v36;
    if (hasExceptionsAfterHandlingTraps)
    {
      v35 = 1;
      v36 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v32);
        else
          *(_DWORD *)v14 -= 2;
      }
      v25 = 0;
      v27 = 1;
      goto LABEL_31;
    }
  }
  else
  {
    v14 = v36;
  }
  v35 = 0;
  v34 = 0;
  BackingSet = WebCore::getBackingSet((unint64_t)this, v5, a3);
  v18 = v16;
  if (BackingSet)
  {
    v37[0] = this;
    v37[1] = v16;
    v19 = *(_QWORD *)(*((_QWORD *)v5 + 3) + 8);
    v20 = *(unsigned int *)(v19 + 20);
    if ((_DWORD)v20)
    {
      v21 = *(uint64_t **)(v19 + 8);
      v22 = 8 * v20;
      do
      {
        WebCore::DOMSetAdapter::add<WebCore::IDLDOMString>(v37, v21++);
        v22 -= 8;
      }
      while (v22);
    }
  }
  v23 = (WTF::StringImpl *)MEMORY[0x1E0CBEBB0];
  *MEMORY[0x1E0CBEBB0] += 2;
  v37[0] = v23;
  v25 = WebCore::forwardFunctionCallToBackingSet((unint64_t)this, (JSCell *)a2, v18, (JSC::JSObject *)v37, v17);
  v26 = v37[0];
  v37[0] = 0;
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
    {
      WTF::StringImpl::destroy(v26, v24);
      if (!v14)
        goto LABEL_38;
      goto LABEL_29;
    }
    *(_DWORD *)v26 -= 2;
  }
  if (!v14)
  {
LABEL_38:
    v27 = 0;
    goto LABEL_31;
  }
LABEL_29:
  if (*(_DWORD *)v14 == 2)
  {
    WTF::StringImpl::destroy(v14, v24);
    goto LABEL_38;
  }
  v27 = 0;
  *(_DWORD *)v14 -= 2;
LABEL_31:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E328A618[v27])(v37, &v34);
  return (_BYTE *)v25;
}

_BYTE *WebCore::jsGPUSupportedFeaturesPrototypeFunction_entries(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  char BackingSet;
  WTF::StringImpl *v12;
  const JSC::Identifier *v13;
  JSC::CallFrame *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  uint64_t v24;
  WTF::StringImpl *v25[2];

  v24 = *((_QWORD *)this + 7);
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "GPUSupportedFeatures", "entries");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGPUSupportedFeatures::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGPUSupportedFeatures::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "GPUSupportedFeatures", "entries");
  BackingSet = WebCore::getBackingSet((unint64_t)this, *((JSC::JSGlobalObject **)a2 + 5), a3);
  v14 = v12;
  if (BackingSet)
  {
    v25[0] = this;
    v25[1] = v12;
    v15 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 8);
    v16 = *(unsigned int *)(v15 + 20);
    if ((_DWORD)v16)
    {
      v17 = *(uint64_t **)(v15 + 8);
      v18 = 8 * v16;
      do
      {
        WebCore::DOMSetAdapter::add<WebCore::IDLDOMString>(v25, v17++);
        v18 -= 8;
      }
      while (v18);
    }
  }
  v19 = (WTF::StringImpl *)MEMORY[0x1E0CBEBF8];
  *MEMORY[0x1E0CBEBF8] += 2;
  v25[0] = v19;
  v21 = WebCore::forwardFunctionCallToBackingSet((unint64_t)this, (JSCell *)a2, v14, (JSC::JSObject *)v25, v13);
  v22 = v25[0];
  v25[0] = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v20);
    else
      *(_DWORD *)v22 -= 2;
  }
  return (_BYTE *)v21;
}

_BYTE *WebCore::jsGPUSupportedFeaturesPrototypeFunction_keys(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  char BackingSet;
  WTF::StringImpl *v12;
  const JSC::Identifier *v13;
  JSC::CallFrame *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  uint64_t v24;
  WTF::StringImpl *v25[2];

  v24 = *((_QWORD *)this + 7);
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "GPUSupportedFeatures", "keys");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGPUSupportedFeatures::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGPUSupportedFeatures::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "GPUSupportedFeatures", "keys");
  BackingSet = WebCore::getBackingSet((unint64_t)this, *((JSC::JSGlobalObject **)a2 + 5), a3);
  v14 = v12;
  if (BackingSet)
  {
    v25[0] = this;
    v25[1] = v12;
    v15 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 8);
    v16 = *(unsigned int *)(v15 + 20);
    if ((_DWORD)v16)
    {
      v17 = *(uint64_t **)(v15 + 8);
      v18 = 8 * v16;
      do
      {
        WebCore::DOMSetAdapter::add<WebCore::IDLDOMString>(v25, v17++);
        v18 -= 8;
      }
      while (v18);
    }
  }
  v19 = (WTF::StringImpl *)MEMORY[0x1E0CBEBC0];
  *MEMORY[0x1E0CBEBC0] += 2;
  v25[0] = v19;
  v21 = WebCore::forwardFunctionCallToBackingSet((unint64_t)this, (JSCell *)a2, v14, (JSC::JSObject *)v25, v13);
  v22 = v25[0];
  v25[0] = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v20);
    else
      *(_DWORD *)v22 -= 2;
  }
  return (_BYTE *)v21;
}

_BYTE *WebCore::jsGPUSupportedFeaturesPrototypeFunction_values(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  char BackingSet;
  WTF::StringImpl *v12;
  const JSC::Identifier *v13;
  JSC::CallFrame *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  uint64_t v24;
  WTF::StringImpl *v25[2];

  v24 = *((_QWORD *)this + 7);
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "GPUSupportedFeatures", "values");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGPUSupportedFeatures::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGPUSupportedFeatures::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "GPUSupportedFeatures", "values");
  BackingSet = WebCore::getBackingSet((unint64_t)this, *((JSC::JSGlobalObject **)a2 + 5), a3);
  v14 = v12;
  if (BackingSet)
  {
    v25[0] = this;
    v25[1] = v12;
    v15 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 8);
    v16 = *(unsigned int *)(v15 + 20);
    if ((_DWORD)v16)
    {
      v17 = *(uint64_t **)(v15 + 8);
      v18 = 8 * v16;
      do
      {
        WebCore::DOMSetAdapter::add<WebCore::IDLDOMString>(v25, v17++);
        v18 -= 8;
      }
      while (v18);
    }
  }
  v19 = (WTF::StringImpl *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  v25[0] = v19;
  v21 = WebCore::forwardFunctionCallToBackingSet((unint64_t)this, (JSCell *)a2, v14, (JSC::JSObject *)v25, v13);
  v22 = v25[0];
  v25[0] = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v20);
    else
      *(_DWORD *)v22 -= 2;
  }
  return (_BYTE *)v21;
}

_BYTE *WebCore::jsGPUSupportedFeaturesPrototypeFunction_forEach(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  JSC::JSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  JSValue v19;
  JSC::VM *v20;
  WTF::StringImpl *v21[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "GPUSupportedFeatures", "forEach");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSGPUSupportedFeatures::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSGPUSupportedFeatures::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "GPUSupportedFeatures", "forEach");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v19);
  }
  else
  {
    if (WebCore::getBackingSet((unint64_t)this, *((JSC::JSGlobalObject **)a2 + 5), a3))
    {
      v21[0] = this;
      v21[1] = v12;
      v14 = *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8);
      v15 = *(unsigned int *)(v14 + 20);
      if ((_DWORD)v15)
      {
        v16 = *(uint64_t **)(v14 + 8);
        v17 = 8 * v15;
        do
        {
          WebCore::DOMSetAdapter::add<WebCore::IDLDOMString>(v21, v16++);
          v17 -= 8;
        }
        while (v17);
      }
    }
    return (_BYTE *)WebCore::forwardForEachCallToBackingSet(this, a2, (JSC::CallFrame *)v5, v13);
  }
}

_BYTE *WebCore::jsGPUTexturePrototypeFunction_createView(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unsigned int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  JSC::JSCell *v13;
  uint64_t Object;
  JSC::Structure *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  int v18;
  char v19;
  char v20;
  char v21;
  WTF::StringImpl *v22;
  int v23;
  __int16 v24;
  __int16 v25;
  char v26;
  int v27;
  unsigned int v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  unint64_t v31;
  unsigned int v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unsigned __int16 v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  unint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  unint64_t v47;
  WTF::StringImpl *v48;
  unsigned __int16 v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  unint64_t v52;
  WTF::StringImpl *v53;
  unsigned __int16 v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  WTF *v60;
  uint64_t v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  WTF *v67;
  int v68;
  uint64_t v69;
  unint64_t SlowCase;
  uint64_t v71;
  unsigned int v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char **v77;
  int v78;
  unint64_t v79;
  uint64_t *v80;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v82;
  JSC::Structure *v83;
  JSC::JSCell *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  WTF *v96;
  uint64_t v97;
  uint64_t v98;
  WTF *v99;
  void *v100;
  int v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  _QWORD *Allocator;
  WTF::StringImpl *v106;
  uint64_t v107;
  _DWORD *v109;
  uint64_t v110;
  unsigned int *v111;
  unsigned int v112;
  unsigned int v113;
  WTF::StringImpl *v114;
  JSValue v115;
  unint64_t v116;
  WebCore *v117;
  JSC::JSGlobalObject *v118;
  JSC::CallFrame *v119;
  char v120;
  unsigned int v121;
  char v122;
  uint64_t v123;
  WTF::StringImpl *v124;
  uint64_t v125;
  WTF::StringImpl *v126;
  unsigned int v127[8];
  char v128;
  WTF *v129;
  WTF::StringImpl *v130;
  int v131;
  uint64_t v132;
  _BYTE v133[29];
  int v134;
  char v135;
  WTF *v136;
  WTF::StringImpl *v137;
  uint64_t v138[2];

  v5 = *((_QWORD *)this + 7);
  v125 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v125, "GPUTexture", "createView");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSGPUTexture::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSGPUTexture::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v125, "GPUTexture", "createView");
  v12 = *(_QWORD *)(v6 + 24);
  if (*((_DWORD *)a2 + 8) == 1
    || (v13 = (JSC::JSCell *)*((_QWORD *)a2 + 6), v129 = (WTF *)v5, ((unint64_t)v13 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    goto LABEL_83;
  }
  if (((unint64_t)v13 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v13)) == 0)
  {
    JSC::throwTypeError();
    SlowCase = 0;
    v107 = 1;
    v134 = 1;
LABEL_143:
    ((void (*)(WTF::StringImpl **, uint64_t *))off_1E328B130[v107])(&v126, &v132);
    return (_BYTE *)SlowCase;
  }
  v15 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v17 = JSC::JSObject::get(v15, this, (unint64_t)v126);
  if (v126)
  {
    if (*(_DWORD *)v126 == 2)
      WTF::StringImpl::destroy(v126, v16);
    else
      *(_DWORD *)v126 -= 2;
  }
  if (*(_DWORD *)(v5 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5))
  {
    v134 = 1;
LABEL_205:
    SlowCase = 0;
    v107 = 1;
    goto LABEL_143;
  }
  v123 = v12;
  if (v17 == 10)
  {
    v124 = 0;
  }
  else
  {
    WebCore::valueToUSVString(this, v17, (uint64_t)&v126);
    if (v127[0])
    {
      v134 = 1;
      if (v127[0] != -1)
        ((void (*)(char *, WTF::StringImpl **))off_1E328A618[v127[0]])(&v135, &v126);
      goto LABEL_205;
    }
    v124 = v126;
  }
  WTF::AtomStringImpl::addLiteral();
  v29 = v126;
  v31 = JSC::JSObject::get(v15, this, (unint64_t)v126);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v30);
    else
      *(_DWORD *)v29 -= 2;
  }
  v32 = *(_DWORD *)(v5 + 80);
  if (v32 && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
  {
LABEL_202:
    v134 = 1;
    if (v124)
    {
      if (*(_DWORD *)v124 == 2)
        WTF::StringImpl::destroy(v124, v33);
      else
        *(_DWORD *)v124 -= 2;
    }
    goto LABEL_205;
  }
  if (v31 == 10)
  {
    v122 = 0;
    v20 = 0;
    v121 = v32;
  }
  else
  {
    WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, v31, &v126);
    v20 = (char)v126;
    if ((unint64_t)v126 >> 32)
      goto LABEL_202;
    v121 = v126 >> 8;
    v122 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v34 = v126;
  v36 = JSC::JSObject::get(v15, this, (unint64_t)v126);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    goto LABEL_202;
  if (v36 == 10)
  {
    v120 = 0;
  }
  else
  {
    v126 = (WTF::StringImpl *)*((_QWORD *)this + 7);
    v37 = v126;
    v38 = WebCore::parseEnumeration<WebCore::GPUTextureAspect>(this, v36);
    if (*((_DWORD *)v37 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v37) & 1) != 0)
      goto LABEL_202;
    if (v38 <= 0xFFu)
      goto LABEL_178;
    v120 = v38;
  }
  WTF::AtomStringImpl::addLiteral();
  v39 = v126;
  v41 = JSC::JSObject::get(v15, this, (unint64_t)v126);
  if (v39)
  {
    if (*(_DWORD *)v39 == 2)
      WTF::StringImpl::destroy(v39, v40);
    else
      *(_DWORD *)v39 -= 2;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    goto LABEL_202;
  if (v41 == 10)
  {
    v23 = 0;
  }
  else
  {
    WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, v41, &v126);
    v23 = (int)v126;
    if ((unint64_t)v126 >> 32)
      goto LABEL_202;
  }
  WTF::AtomStringImpl::addLiteral();
  v42 = v126;
  v44 = JSC::JSObject::get(v15, this, (unint64_t)v126);
  if (v42)
  {
    if (*(_DWORD *)v42 == 2)
      WTF::StringImpl::destroy(v42, v43);
    else
      *(_DWORD *)v42 -= 2;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    goto LABEL_202;
  if (v44 == 10)
  {
    v18 = 0;
  }
  else
  {
    WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, v44, &v126);
    v18 = (int)v126;
    if ((unint64_t)v126 >> 32)
      goto LABEL_202;
  }
  WTF::AtomStringImpl::addLiteral();
  v45 = v126;
  v47 = JSC::JSObject::get(v15, this, (unint64_t)v126);
  if (v45)
  {
    if (*(_DWORD *)v45 == 2)
      WTF::StringImpl::destroy(v45, v46);
    else
      *(_DWORD *)v45 -= 2;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    goto LABEL_202;
  if (v47 == 10)
  {
    v24 = 0;
  }
  else
  {
    v126 = (WTF::StringImpl *)*((_QWORD *)this + 7);
    v48 = v126;
    v49 = WebCore::parseEnumeration<WebCore::GPUTextureViewDimension>(this, v47);
    if (*((_DWORD *)v48 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v48) & 1) != 0)
      goto LABEL_202;
    if (v49 <= 0xFFu)
      goto LABEL_178;
    v24 = v49 | 0x100;
  }
  WTF::AtomStringImpl::addLiteral();
  v50 = v126;
  v52 = JSC::JSObject::get(v15, this, (unint64_t)v126);
  if (v50)
  {
    if (*(_DWORD *)v50 == 2)
      WTF::StringImpl::destroy(v50, v51);
    else
      *(_DWORD *)v50 -= 2;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    goto LABEL_202;
  if (v52 != 10)
  {
    v126 = (WTF::StringImpl *)*((_QWORD *)this + 7);
    v53 = v126;
    v54 = WebCore::parseEnumeration<WebCore::GPUTextureFormat>(this, v52);
    if (*((_DWORD *)v53 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v53) & 1) != 0)
      goto LABEL_202;
    if (v54 > 0xFFu)
    {
      v25 = v54 | 0x100;
      goto LABEL_74;
    }
LABEL_178:
    JSC::throwTypeError();
    goto LABEL_202;
  }
  v25 = 0;
LABEL_74:
  WTF::AtomStringImpl::addLiteral();
  v55 = v126;
  v57 = JSC::JSObject::get(v15, this, (unint64_t)v126);
  if (v55)
  {
    if (*(_DWORD *)v55 == 2)
      WTF::StringImpl::destroy(v55, v56);
    else
      *(_DWORD *)v55 -= 2;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    goto LABEL_202;
  if (v57 == 10)
  {
    v26 = 0;
    v27 = 0;
    v28 = 0;
  }
  else
  {
    WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, v57, &v126);
    if ((unint64_t)v126 >> 32)
      goto LABEL_202;
    v28 = v126 & 0xFFFFFF00;
    v27 = v126;
    v26 = 1;
  }
  v12 = v123;
  v22 = v124;
  v21 = v122;
  v3 = v121;
  v19 = v120;
LABEL_83:
  *(_WORD *)v133 = v25;
  *(_WORD *)&v133[2] = v24;
  v133[4] = v19;
  *(_WORD *)&v133[5] = (_WORD)v136;
  v133[7] = BYTE2(v136);
  *(_DWORD *)&v133[8] = v18;
  *(_DWORD *)&v133[12] = v28 | v27;
  v133[16] = v26;
  *(_WORD *)&v133[17] = v138[0];
  v133[19] = BYTE2(v138[0]);
  *(_DWORD *)&v133[20] = v23;
  v133[24] = v20;
  v133[25] = v3;
  v133[26] = BYTE1(v3);
  v133[27] = BYTE2(v3);
  v133[28] = v21;
  v134 = 0;
  v58 = *(_QWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x28);
  v132 = 0;
  *(_OWORD *)v127 = *(_OWORD *)v133;
  *(_OWORD *)((char *)&v127[3] + 1) = *(_OWORD *)&v133[13];
  v126 = v22;
  v128 = 1;
  WebCore::GPUTexture::createView(v12, (uint64_t)&v126, (uint64_t)&v129);
  if (!v131)
  {
    v60 = v129;
    v129 = 0;
    v61 = *(_QWORD *)(*(_QWORD *)(v58 + 3320) + 32);
    if (v61)
    {
      v62 = *(_DWORD *)(v61 - 8);
      v63 = ((unint64_t)v60 + ~((_QWORD)v60 << 32)) ^ (((unint64_t)v60 + ~((_QWORD)v60 << 32)) >> 22);
      v64 = 9 * ((v63 + ~(v63 << 13)) ^ ((v63 + ~(v63 << 13)) >> 8));
      v65 = (v64 ^ (v64 >> 15)) + ~((v64 ^ (v64 >> 15)) << 27);
      v66 = v62 & ((v65 >> 31) ^ v65);
      v67 = *(WTF **)(v61 + 16 * v66);
      if (v67 == v60)
      {
LABEL_89:
        v69 = *(_QWORD *)(v61 + 16 * v66 + 8);
        if (v69)
        {
          if ((*(_BYTE *)(v69 + 8) & 3) == 0)
          {
            SlowCase = *(_QWORD *)v69;
            if (*(_QWORD *)v69)
            {
LABEL_134:
              if (*(_DWORD *)v60 == 1)
              {
                v109 = (_DWORD *)*((_QWORD *)v60 + 2);
                *((_QWORD *)v60 + 2) = 0;
                if (v109)
                {
                  if (v109[2] == 1)
                    (*(void (**)(_DWORD *))(*(_QWORD *)v109 + 8))(v109);
                  else
                    --v109[2];
                }
                v110 = *((_QWORD *)v60 + 1);
                if (v110)
                {
                  *(_QWORD *)(v110 + 8) = 0;
                  v111 = (unsigned int *)*((_QWORD *)v60 + 1);
                  *((_QWORD *)v60 + 1) = 0;
                  if (v111)
                  {
                    do
                    {
                      v112 = __ldaxr(v111);
                      v113 = v112 - 1;
                    }
                    while (__stlxr(v113, v111));
                    if (!v113)
                    {
                      atomic_store(1u, v111);
                      WTF::fastFree((WTF *)v111, (void *)v59);
                    }
                  }
                }
                else
                {
                  *((_QWORD *)v60 + 1) = 0;
                }
                WTF::fastFree(v60, (void *)v59);
              }
              else
              {
                --*(_DWORD *)v60;
              }
LABEL_136:
              if (v131 != -1)
                ((void (*)(WTF **, WTF **))off_1E328B120[v131])(&v136, &v129);
              v131 = -1;
              if (v128)
              {
                v106 = v126;
                v126 = 0;
                if (v106)
                {
                  if (*(_DWORD *)v106 == 2)
                    WTF::StringImpl::destroy(v106, (WTF::StringImpl *)v59);
                  else
                    *(_DWORD *)v106 -= 2;
                }
              }
              v107 = 0;
              goto LABEL_143;
            }
          }
        }
      }
      else
      {
        v68 = 1;
        while (v67)
        {
          v66 = ((_DWORD)v66 + v68) & v62;
          v67 = *(WTF **)(v61 + 16 * v66);
          ++v68;
          if (v67 == v60)
            goto LABEL_89;
        }
      }
    }
    ++*(_DWORD *)v60;
    v71 = *(_QWORD *)(v58 + 3296);
    if (v71)
    {
      v72 = *(_DWORD *)(v71 - 8);
      v73 = ((unint64_t)&WebCore::JSGPUTextureView::s_info + ~((_QWORD)&WebCore::JSGPUTextureView::s_info << 32)) ^ (((unint64_t)&WebCore::JSGPUTextureView::s_info + ~((_QWORD)&WebCore::JSGPUTextureView::s_info << 32)) >> 22);
      v74 = 9 * ((v73 + ~(v73 << 13)) ^ ((v73 + ~(v73 << 13)) >> 8));
      v75 = (v74 ^ (v74 >> 15)) + ~((v74 ^ (v74 >> 15)) << 27);
      v76 = v72 & ((v75 >> 31) ^ v75);
      v77 = *(char ***)(v71 + 16 * v76);
      if (v77 == &WebCore::JSGPUTextureView::s_info)
      {
LABEL_97:
        v79 = *(_QWORD *)(v71 + 16 * v76 + 8);
        if (v79)
          goto LABEL_99;
      }
      else
      {
        v78 = 1;
        while (v77)
        {
          v76 = ((_DWORD)v76 + v78) & v72;
          v77 = *(char ***)(v71 + 16 * v76);
          ++v78;
          if (v77 == &WebCore::JSGPUTextureView::s_info)
            goto LABEL_97;
        }
      }
    }
    v80 = *(uint64_t **)(v58 + 56);
    Structure = WebCore::JSGPUTextureViewPrototype::createStructure(v80, v58, *(JSC::JSCell **)(v58 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v84 = (JSC::JSCell *)WebCore::JSGPUTextureViewPrototype::create((WebCore::JSGPUTextureViewPrototype *)v80, Structure, v82, v83);
    v85 = WebCore::JSGPUTextureView::createStructure(v80, v58, v84);
    v79 = WebCore::cacheDOMStructure((JSCell *)v58, v85, (uint64_t)&WebCore::JSGPUTextureView::s_info);
LABEL_99:
    v86 = *(_QWORD *)(v58 + 56);
    v87 = *(_QWORD *)(v86 + 41456);
    v88 = *(_QWORD *)(v87 + 23536);
    v89 = *(_QWORD **)(v88 + 344);
    if (v89)
      goto LABEL_119;
    v90 = *(_QWORD *)(v87 + 22648);
    if (__ldaxr((unsigned __int8 *)v90))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v90))
    {
      goto LABEL_104;
    }
    MEMORY[0x19AEA534C](v90);
LABEL_104:
    v92 = *(_QWORD *)(v90 + 2824);
    if (!*(_QWORD *)(v92 + 344))
    {
      v93 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v136, "IsoSpace T");
      v138[0] = 0;
      MEMORY[0x19AEA3204](v93, &v136, v86 + 192, v86 + 1872, 32, 8, v138);
      v95 = v138[0];
      v138[0] = 0;
      if (v95)
        (*(void (**)(uint64_t))(*(_QWORD *)v95 + 8))(v95);
      v96 = v136;
      v136 = 0;
      if (v96)
      {
        if (*(_DWORD *)v96 == 1)
          WTF::fastFree(v96, v94);
        else
          --*(_DWORD *)v96;
      }
      v97 = *(_QWORD *)(v92 + 344);
      *(_QWORD *)(v92 + 344) = v93;
      if (v97)
        (*(void (**)(uint64_t))(*(_QWORD *)v97 + 8))(v97);
    }
    v89 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v98 = *(_QWORD *)(v88 + 344);
    *(_QWORD *)(v88 + 344) = v89;
    if (v98)
    {
      v99 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v99, v100);
    }
    v101 = __ldxr((unsigned __int8 *)v90);
    if (v101 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v90))
      {
LABEL_119:
        SlowCase = v89[3];
        if (SlowCase >= v89[4])
        {
          SlowCase = v89[5];
          if ((SlowCase & 1) != 0)
          {
            JSC::sanitizeStackForVM();
            SlowCase = JSC::LocalAllocator::allocateSlowCase();
            goto LABEL_121;
          }
          v116 = *(_QWORD *)(SlowCase + 8) ^ v89[6];
          v89[4] = SlowCase + HIDWORD(v116);
          v89[5] = SlowCase + (int)v116;
        }
        v89[3] = SlowCase + 32;
LABEL_121:
        *(_DWORD *)SlowCase = 0;
        WebCore::JSDOMObject::JSDOMObject(SlowCase, v79);
        *(_QWORD *)(SlowCase + 24) = v60;
        if (*(_BYTE *)(v86 + 755))
          __dmb(0xAu);
        v102 = *(_QWORD *)(v58 + 3320);
        if ((byte_1EE335968 & 1) == 0)
        {
          qword_1EE335960 = (uint64_t)&off_1E328A0D0;
          byte_1EE335968 = 1;
        }
        v136 = v60;
        if ((SlowCase & 8) != 0)
          v103 = (SlowCase - 112) | 1;
        else
          v103 = SlowCase & 0xFFFFFFFFFFFFC000;
        if ((v103 & 1) != 0)
          v104 = v103 + 47;
        else
          v104 = *(_QWORD *)v103 + 32;
        Allocator = *(_QWORD **)(v104 + 16);
        if (!Allocator)
          Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
        *(_QWORD *)(v104 + 16) = *Allocator;
        *Allocator = SlowCase;
        Allocator[1] = &qword_1EE335960;
        Allocator[2] = v102;
        v138[0] = (uint64_t)Allocator;
        JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v102 + 32), (uint64_t *)&v136, v138);
        if (v138[0])
          *(_QWORD *)(v138[0] + 8) = 3;
        goto LABEL_134;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v90);
    goto LABEL_119;
  }
  if (v131 == 1)
  {
    v59 = v129;
    LOBYTE(v136) = (_BYTE)v129;
    v114 = v130;
    v130 = 0;
    v137 = v114;
    if (!*(_QWORD *)(v5 + 16))
    {
      v115.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v129, (JSC::JSGlobalObject *)&v137);
      JSC::VM::throwException((JSC::VM *)v5, this, v115);
      v114 = v137;
    }
    v137 = 0;
    if (v114)
    {
      if (*(_DWORD *)v114 == 2)
        WTF::StringImpl::destroy(v114, (WTF::StringImpl *)v59);
      else
        *(_DWORD *)v114 -= 2;
    }
    SlowCase = 0;
    goto LABEL_136;
  }
  v117 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsGPUTexturePrototypeFunction_destroy(v117, v118, v119);
}

uint64_t WebCore::jsGPUTexturePrototypeFunction_destroy(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v11;

  v3 = *((_QWORD *)a2 + 5);
  v11 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "GPUTexture", "destroy");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSGPUTexture::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSGPUTexture::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "GPUTexture", "destroy");
  v9 = *(_QWORD *)(v3 + 24);
  *(_BYTE *)(v9 + 72) = 1;
  (*(void (**)(_QWORD))(**(_QWORD **)(v9 + 24) + 24))(*(_QWORD *)(v9 + 24));
  return 10;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14GPUTextureViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *v2;
  _DWORD *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (v3[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
        else
          --v3[2];
      }
      v4 = *((_QWORD *)v2 + 1);
      if (v4)
      {
        *(_QWORD *)(v4 + 8) = 0;
        v5 = (unsigned int *)*((_QWORD *)v2 + 1);
        *((_QWORD *)v2 + 1) = 0;
        if (v5)
        {
          do
          {
            v6 = __ldaxr(v5);
            v7 = v6 - 1;
          }
          while (__stlxr(v7, v5));
          if (!v7)
          {
            atomic_store(1u, v5);
            WTF::fastFree((WTF *)v5, a2);
          }
        }
      }
      else
      {
        *((_QWORD *)v2 + 1) = 0;
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14GPUTextureViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore24GPUTextureViewDescriptorENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6VectorIjLm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEN7WebCore15GPUExtent3DDictEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISF_LNS0_6_TraitE1EEEEEvOT_EUlRSL_OT0_E_JRNS0_6__baseILSJ_1EJSC_SE_EEEOST_EEEDcSL_DpT0_(WTF *result, _DWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 16);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5)
  {
    result = (WTF *)((uint64_t (*)(char *, uint64_t))off_1E328B140[v5])(&v9, v4);
LABEL_7:
    *(_DWORD *)(v4 + 16) = -1;
    *(_QWORD *)v4 = 0;
    *(_QWORD *)(v4 + 8) = 0;
    v8 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v8;
    LODWORD(v8) = *((_DWORD *)a3 + 2);
    *((_DWORD *)a3 + 2) = 0;
    *(_DWORD *)(v4 + 8) = v8;
    LODWORD(v8) = *((_DWORD *)a3 + 3);
    *((_DWORD *)a3 + 3) = 0;
    *(_QWORD *)(v4 + 12) = v8;
    return result;
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    a2[2] = 0;
    result = (WTF *)WTF::fastFree(result, a2);
  }
  v7 = *a3;
  *a3 = 0;
  *(_QWORD *)a2 = v7;
  LODWORD(v7) = *((_DWORD *)a3 + 2);
  *((_DWORD *)a3 + 2) = 0;
  a2[2] = v7;
  LODWORD(v7) = *((_DWORD *)a3 + 3);
  *((_DWORD *)a3 + 3) = 0;
  a2[3] = v7;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6VectorIjLm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEN7WebCore15GPUExtent3DDictEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISF_LNS0_6_TraitE1EEEEEvOT_EUlRSL_OT0_E_JRNS0_6__baseILSJ_1EJSC_SE_EEEOST_EEEDcSL_DpT0_(uint64_t result, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 16);
  if ((_DWORD)v5 != -1)
  {
    if ((_DWORD)v5 == 1)
    {
      v6 = *a3;
      *(_DWORD *)(a2 + 8) = *((_DWORD *)a3 + 2);
      *(_QWORD *)a2 = v6;
      return result;
    }
    result = ((uint64_t (*)(char *, uint64_t))off_1E328B140[v5])(&v8, v4);
  }
  *(_DWORD *)(v4 + 16) = -1;
  v7 = *a3;
  *(_DWORD *)(v4 + 8) = *((_DWORD *)a3 + 2);
  *(_QWORD *)v4 = v7;
  *(_DWORD *)(v4 + 16) = 1;
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore19GPUOutOfMemoryErrorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_18GPUValidationErrorENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUInternalErrorENSC_ISL_EENSE_ISL_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSG_SK_SO_EEEEEEDcSS_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *v2;
  WTF *v3;
  WTF::StringImpl *v4;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (WTF *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 1)
          WTF::fastFree(v3, a2);
        else
          --*(_DWORD *)v3;
      }
      v4 = (WTF::StringImpl *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, (WTF::StringImpl *)a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore19GPUOutOfMemoryErrorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_18GPUValidationErrorENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUInternalErrorENSC_ISL_EENSE_ISL_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSG_SK_SO_EEEEEEDcSS_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF *result;

  result = *(WTF **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
    return WTF::RefCounted<WebCore::GPUInternalError>::deref(result, a2);
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore19GPUOutOfMemoryErrorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_18GPUValidationErrorENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUInternalErrorENSC_ISL_EENSE_ISL_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSG_SK_SO_EEEEEEDcSS_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF *result;

  result = *(WTF **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
    return WTF::RefCounted<WebCore::GPUInternalError>::deref(result, a2);
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore19GPUOutOfMemoryErrorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_18GPUValidationErrorENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUInternalErrorENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSW_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS14_EEEDcSW_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore19GPUOutOfMemoryErrorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_18GPUValidationErrorENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUInternalErrorENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSW_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS14_EEEDcSW_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore19GPUOutOfMemoryErrorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_18GPUValidationErrorENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUInternalErrorENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSW_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS14_EEEDcSW_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore27GPUUncapturedErrorEventInitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 16);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E328B398[v3])(&v5, a2 + 8);
  *(_DWORD *)(a2 + 16) = -1;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore19GPUOutOfMemoryErrorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_18GPUValidationErrorENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUInternalErrorENSC_ISL_EENSE_ISL_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISP_LNS0_6_TraitE1EEEEEvOT_EUlRSV_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS13_EEEDcSV_DpT0_(uint64_t result, WTF **a2, WTF **a3)
{
  uint64_t v4;
  uint64_t v5;
  WTF *v6;
  WTF *v7;
  WTF *v8;
  WTF *v9;
  WTF::StringImpl *v10;
  char v11;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5)
  {
    result = ((uint64_t (*)(char *, uint64_t))off_1E328B398[v5])(&v11, v4);
LABEL_7:
    v8 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v8;
    *(_DWORD *)(v4 + 8) = 0;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  v7 = *a2;
  *a2 = v6;
  if (v7)
  {
    if (*(_DWORD *)v7 == 1)
    {
      v9 = (WTF *)*((_QWORD *)v7 + 2);
      *((_QWORD *)v7 + 2) = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 1)
          WTF::fastFree(v9, a2);
        else
          --*(_DWORD *)v9;
      }
      v10 = (WTF::StringImpl *)*((_QWORD *)v7 + 1);
      *((_QWORD *)v7 + 1) = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, (WTF::StringImpl *)a2);
        else
          *(_DWORD *)v10 -= 2;
      }
      return WTF::fastFree(v7, a2);
    }
    else
    {
      --*(_DWORD *)v7;
    }
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore19GPUOutOfMemoryErrorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_18GPUValidationErrorENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUInternalErrorENSC_ISL_EENSE_ISL_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISP_LNS0_6_TraitE1EEEEEvOT_EUlRSV_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS13_EEEDcSV_DpT0_(WTF *result, WTF::StringImpl *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_6;
  if ((_DWORD)v5 != 1)
  {
    result = (WTF *)((uint64_t (*)(char *, uint64_t))off_1E328B398[v5])(&v8, v4);
LABEL_6:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 1;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *(WTF **)a2;
  *(_QWORD *)a2 = v6;
  if (result)
    return WTF::RefCounted<WebCore::GPUInternalError>::deref(result, a2);
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore19GPUOutOfMemoryErrorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_18GPUValidationErrorENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUInternalErrorENSC_ISL_EENSE_ISL_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISP_LNS0_6_TraitE1EEEEEvOT_EUlRSV_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS13_EEEDcSV_DpT0_(WTF *result, WTF::StringImpl *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_6;
  if ((_DWORD)v5 != 2)
  {
    result = (WTF *)((uint64_t (*)(char *, uint64_t))off_1E328B398[v5])(&v8, v4);
LABEL_6:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 2;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *(WTF **)a2;
  *(_QWORD *)a2 = v6;
  if (result)
    return WTF::RefCounted<WebCore::GPUInternalError>::deref(result, a2);
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore19GPUOutOfMemoryErrorENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENSA_INSB_18GPUValidationErrorENSD_ISI_EENSF_ISI_EEEENSA_INSB_16GPUInternalErrorENSD_ISM_EENSF_ISM_EEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILST_1EJSQ_SR_EEEEEEDcSV_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E328B398[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore18GPUVertexAttributeELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *result;

  result = *a2;
  if (*a2)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS_8optionalIN7WebCore21GPUVertexBufferLayoutEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  WTF *result;
  uint64_t v5;
  char *v6;
  WTF *v7;

  v3 = a2[3];
  result = *(WTF **)a2;
  if ((_DWORD)v3)
  {
    v5 = 40 * v3;
    v6 = (char *)result + 16;
    do
    {
      if (v6[16])
      {
        v7 = *(WTF **)v6;
        if (*(_QWORD *)v6)
        {
          *(_QWORD *)v6 = 0;
          *((_DWORD *)v6 + 2) = 0;
          WTF::fastFree(v7, a2);
        }
      }
      v6 += 40;
      v5 -= 40;
    }
    while (v5);
    result = *(WTF **)a2;
  }
  if (result)
  {
    *(_QWORD *)a2 = 0;
    a2[2] = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

WebCore::Gamepad *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore12GamepadEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, _QWORD *a2)
{
  WebCore::Gamepad *result;
  WTF *v3;
  void *v4;

  result = (WebCore::Gamepad *)a2[1];
  a2[1] = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::Gamepad::~Gamepad(result, a2);
      return (WebCore::Gamepad *)WTF::fastFree(v3, v4);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::jsGamepadHapticActuatorPrototypeFunction_canPlayEffectType(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned __int16 v14;
  JSValue v16;
  JSC::VM *v17;
  JSC::VM *v18;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v17 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "GamepadHapticActuator", "canPlayEffectType");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGamepadHapticActuator::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGamepadHapticActuator::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "GamepadHapticActuator", "canPlayEffectType");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v16);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v18 = v4;
  v14 = WebCore::parseEnumeration<WebCore::GamepadHapticEffectType>(this, v12);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if (v14 <= 0xFFu)
  {
    WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v18, 0, "type", 5, "GamepadHapticActuator", 22, v13, "canPlayEffectType", 18, "\"dual-rumble\", \"trigger-rumble\"", 32);
    return 0;
  }
  if (WebCore::GamepadHapticActuator::canPlayEffectType(v11, v14))
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsGamepadHapticActuatorPrototypeFunction_playEffect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned __int16 v28;
  JSC::JSCell *v29;
  WebCore::DOMGuardedObject *v30;
  double v31;
  uint64_t Object;
  JSC::Structure *v33;
  WTF::StringImpl *v34;
  WebCore::DOMGuardedObject *v35;
  double v36;
  JSC::VM *v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  WebCore::DOMGuardedObject *v40;
  JSC::VM *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  WebCore::DOMGuardedObject *v44;
  double v45;
  JSC::VM *v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  WebCore::DOMGuardedObject *v49;
  double v50;
  JSC::VM *v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  WebCore::DOMGuardedObject *v54;
  double v55;
  JSC::VM *v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  WebCore::DOMGuardedObject *v59;
  double v60;
  uint64_t v61;
  JSC::VM *v63;
  JSValue v64;
  objc_class *v65;
  WebCore::DOMGuardedObject *v66;
  char hasExceptionsAfterHandlingTraps;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  uint64_t v74;
  WebCore::DOMGuardedObject *v75;
  WebCore::DOMGuardedObject *v76[7];
  JSC::VM *v77;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194BD46C0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v75 = v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_117;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSGamepadHapticActuator::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSGamepadHapticActuator::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_117:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"GamepadHapticActuator", "playEffect", v17);
  }
  else
  {
    v24 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v25 = *(_QWORD *)(v18 + 24);
      v26 = *((_QWORD *)a2 + 6);
      v76[0] = *((WebCore::DOMGuardedObject **)this + 7);
      v28 = WebCore::parseEnumeration<WebCore::GamepadHapticEffectType>(this, v26);
      if (*((_DWORD *)v24 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v24) & 1) != 0)
        goto LABEL_91;
      if (v28 <= 0xFFu)
      {
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)v76, 0, "type", 5, "GamepadHapticActuator", 22, v27, "playEffect", 11, "\"dual-rumble\", \"trigger-rumble\"", 32);
        goto LABEL_91;
      }
      if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL)
      {
        v31 = 0.0;
      }
      else
      {
        v29 = (JSC::JSCell *)*((_QWORD *)a2 + 7);
        v30 = (WebCore::DOMGuardedObject *)*((_QWORD *)this + 7);
        v76[6] = v30;
        v31 = 0.0;
        if (((unint64_t)v29 & 0xFFFFFFFFFFFFFFF7) != 2)
        {
          if (((unint64_t)v29 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v29)) == 0)
          {
            JSC::throwTypeError();
            goto LABEL_91;
          }
          v33 = (JSC::Structure *)Object;
          v74 = v25;
          WTF::AtomStringImpl::addLiteral();
          v35 = (WebCore::DOMGuardedObject *)JSC::JSObject::get(v33, this, (unint64_t)v76[0]);
          if (v76[0])
          {
            if (*(_DWORD *)v76[0] == 2)
              WTF::StringImpl::destroy(v76[0], v34);
            else
              *(_DWORD *)v76[0] -= 2;
          }
          if (*((_DWORD *)v30 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
          {
LABEL_91:
            v14 = v75;
            v75 = 0;
            if (!v14)
              goto LABEL_94;
            goto LABEL_92;
          }
          v36 = 0.0;
          if (v35 == (WebCore::DOMGuardedObject *)10)
            goto LABEL_81;
          v76[0] = v35;
          v37 = (JSC::VM *)*((_QWORD *)this + 7);
          v77 = v37;
          if ((unint64_t)v35 >= 0xFFFE000000000000)
          {
            v36 = (double)(int)v35;
          }
          else if ((unint64_t)v35 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
            v36 = v68;
          }
          else
          {
            *(_QWORD *)&v36 = (char *)v35 - 0x2000000000000;
          }
          if (*((_DWORD *)v37 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v37) & 1) != 0)
            goto LABEL_91;
          if ((*(_QWORD *)&v36 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
          {
LABEL_81:
            WTF::AtomStringImpl::addLiteral();
            v38 = v76[0];
            v40 = (WebCore::DOMGuardedObject *)JSC::JSObject::get(v33, this, (unint64_t)v76[0]);
            if (v38)
            {
              if (*(_DWORD *)v38 == 2)
                WTF::StringImpl::destroy(v38, v39);
              else
                *(_DWORD *)v38 -= 2;
            }
            if (*((_DWORD *)v30 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
              goto LABEL_91;
            if (v40 == (WebCore::DOMGuardedObject *)10)
              goto LABEL_164;
            v76[0] = v40;
            v41 = (JSC::VM *)*((_QWORD *)this + 7);
            v77 = v41;
            if ((unint64_t)v40 >= 0xFFFE000000000000)
            {
              v31 = (double)(int)v40;
            }
            else if ((unint64_t)v40 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
              v31 = v69;
            }
            else
            {
              *(_QWORD *)&v31 = (char *)v40 - 0x2000000000000;
            }
            if (*((_DWORD *)v41 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v41) & 1) != 0)
              goto LABEL_91;
            if ((*(_QWORD *)&v31 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
            {
LABEL_164:
              WTF::AtomStringImpl::addLiteral();
              v42 = v76[0];
              v44 = (WebCore::DOMGuardedObject *)JSC::JSObject::get(v33, this, (unint64_t)v76[0]);
              if (v42)
              {
                if (*(_DWORD *)v42 == 2)
                  WTF::StringImpl::destroy(v42, v43);
                else
                  *(_DWORD *)v42 -= 2;
              }
              if (*((_DWORD *)v30 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
                goto LABEL_91;
              v45 = 0.0;
              if (v44 == (WebCore::DOMGuardedObject *)10)
                goto LABEL_165;
              v76[0] = v44;
              v46 = (JSC::VM *)*((_QWORD *)this + 7);
              v77 = v46;
              if ((unint64_t)v44 >= 0xFFFE000000000000)
              {
                v45 = (double)(int)v44;
              }
              else if ((unint64_t)v44 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
                v45 = v70;
              }
              else
              {
                *(_QWORD *)&v45 = (char *)v44 - 0x2000000000000;
              }
              if (*((_DWORD *)v46 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v46) & 1) != 0)
                goto LABEL_91;
              if ((*(_QWORD *)&v45 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
              {
LABEL_165:
                WTF::AtomStringImpl::addLiteral();
                v47 = v76[0];
                v49 = (WebCore::DOMGuardedObject *)JSC::JSObject::get(v33, this, (unint64_t)v76[0]);
                if (v47)
                {
                  if (*(_DWORD *)v47 == 2)
                    WTF::StringImpl::destroy(v47, v48);
                  else
                    *(_DWORD *)v47 -= 2;
                }
                if (*((_DWORD *)v30 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
                  goto LABEL_91;
                v50 = 0.0;
                if (v49 == (WebCore::DOMGuardedObject *)10)
                  goto LABEL_166;
                v76[0] = v49;
                v51 = (JSC::VM *)*((_QWORD *)this + 7);
                v77 = v51;
                if ((unint64_t)v49 >= 0xFFFE000000000000)
                {
                  v50 = (double)(int)v49;
                }
                else if ((unint64_t)v49 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                {
                  JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
                  v50 = v71;
                }
                else
                {
                  *(_QWORD *)&v50 = (char *)v49 - 0x2000000000000;
                }
                if (*((_DWORD *)v51 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v51) & 1) != 0)
                  goto LABEL_91;
                if ((*(_QWORD *)&v50 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
                {
LABEL_166:
                  WTF::AtomStringImpl::addLiteral();
                  v52 = v76[0];
                  v54 = (WebCore::DOMGuardedObject *)JSC::JSObject::get(v33, this, (unint64_t)v76[0]);
                  if (v52)
                  {
                    if (*(_DWORD *)v52 == 2)
                      WTF::StringImpl::destroy(v52, v53);
                    else
                      *(_DWORD *)v52 -= 2;
                  }
                  if (*((_DWORD *)v30 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
                    goto LABEL_91;
                  v55 = 0.0;
                  if (v54 == (WebCore::DOMGuardedObject *)10)
                    goto LABEL_82;
                  v76[0] = v54;
                  v56 = (JSC::VM *)*((_QWORD *)this + 7);
                  v77 = v56;
                  if ((unint64_t)v54 >= 0xFFFE000000000000)
                  {
                    v55 = (double)(int)v54;
                  }
                  else if ((unint64_t)v54 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                  {
                    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
                    v55 = v72;
                  }
                  else
                  {
                    *(_QWORD *)&v55 = (char *)v54 - 0x2000000000000;
                  }
                  if (*((_DWORD *)v56 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v56) & 1) != 0)
                    goto LABEL_91;
                  if ((*(_QWORD *)&v55 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
                  {
LABEL_82:
                    WTF::AtomStringImpl::addLiteral();
                    v57 = v76[0];
                    v59 = (WebCore::DOMGuardedObject *)JSC::JSObject::get(v33, this, (unint64_t)v76[0]);
                    if (v57)
                    {
                      if (*(_DWORD *)v57 == 2)
                        WTF::StringImpl::destroy(v57, v58);
                      else
                        *(_DWORD *)v57 -= 2;
                    }
                    if (*((_DWORD *)v30 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
                      goto LABEL_91;
                    v60 = 0.0;
                    if (v59 == (WebCore::DOMGuardedObject *)10)
                    {
                      v25 = v74;
                      goto LABEL_90;
                    }
                    v76[0] = v59;
                    v63 = (JSC::VM *)*((_QWORD *)this + 7);
                    v77 = v63;
                    v25 = v74;
                    if ((unint64_t)v59 >= 0xFFFE000000000000)
                    {
                      v60 = (double)(int)v59;
                    }
                    else if ((unint64_t)v59 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                    {
                      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
                    }
                    else
                    {
                      *(_QWORD *)&v60 = (char *)v59 - 0x2000000000000;
                    }
                    if (*((_DWORD *)v63 + 20))
                    {
                      v73 = v60;
                      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v63);
                      v60 = v73;
                      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
                        goto LABEL_91;
                    }
                    if ((*(_QWORD *)&v60 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
                    {
LABEL_90:
                      v76[0] = *(WebCore::DOMGuardedObject **)&v36;
                      v76[1] = *(WebCore::DOMGuardedObject **)&v50;
                      v76[2] = *(WebCore::DOMGuardedObject **)&v55;
                      v76[3] = *(WebCore::DOMGuardedObject **)&v60;
                      v76[4] = *(WebCore::DOMGuardedObject **)&v31;
                      v76[5] = *(WebCore::DOMGuardedObject **)&v45;
                      WebCore::GamepadHapticActuator::playEffect(v25, v28, (double *)v76, (uint64_t *)&v75);
                      goto LABEL_91;
                    }
                  }
                }
              }
            }
          }
          JSC::throwTypeError();
          goto LABEL_91;
        }
      }
      v60 = 0.0;
      v55 = 0.0;
      v50 = 0.0;
      v36 = 0.0;
      v45 = 0.0;
      goto LABEL_90;
    }
    v64.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v64);
  }
  v75 = 0;
LABEL_92:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_94:
  v61 = *(_QWORD *)(v10 + 16);
  if (v61)
  {
    if (*(_QWORD *)(v10 + 24) != v61)
    {
      v65 = *(objc_class **)(v61 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, v76);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v76[0], v65, 0);
      v66 = v76[0];
      v76[0] = 0;
      if (v66)
      {
        if (*((_DWORD *)v66 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v66 + 16))(v66);
        else
          --*((_DWORD *)v66 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsGamepadHapticActuatorPrototypeFunction_reset(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194BD4AB8);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v27 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSGamepadHapticActuator::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSGamepadHapticActuator::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_32:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"GamepadHapticActuator", "reset", v16);
  }
  else
  {
    WebCore::GamepadHapticActuator::reset(*(_QWORD *)(v17 + 24), (uint64_t *)&v27);
    v14 = v27;
    if (!v27)
      goto LABEL_28;
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_28:
  v23 = *(_QWORD *)(v10 + 16);
  if (v23)
  {
    if (*(_QWORD *)(v10 + 24) != v23)
    {
      v25 = *(objc_class **)(v23 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v27);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v27, v25, 0);
      v26 = v27;
      v27 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t WebCore::jsGamepadHapticActuatorPrototypeFunction_canPlay(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned __int16 v14;
  JSValue v16;
  JSC::VM *v17;
  JSC::VM *v18;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v17 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "GamepadHapticActuator", "canPlay");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGamepadHapticActuator::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGamepadHapticActuator::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "GamepadHapticActuator", "canPlay");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v16);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v18 = v4;
  v14 = WebCore::parseEnumeration<WebCore::GamepadHapticEffectType>(this, v12);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if (v14 <= 0xFFu)
  {
    WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v18, 0, "type", 5, "GamepadHapticActuator", 22, v13, "canPlay", 8, "\"dual-rumble\", \"trigger-rumble\"", 32);
    return 0;
  }
  if (WebCore::GamepadHapticActuator::canPlayEffectType(v11, v14))
    return 7;
  else
    return 6;
}

_BYTE *WebCore::jsGeolocationPrototypeFunction_getCurrentPosition(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  unint64_t v18;
  WebCore::JSDOMGlobalObject *v19;
  unsigned int v20;
  WebCore::JSPositionCallback *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  WebCore::JSDOMGlobalObject *v25;
  unsigned int v26;
  WebCore::JSPositionErrorCallback *v27;
  int v28;
  int v29;
  uint64_t v30;
  WebCore::JSDOMGlobalObject *v31;
  WebCore::JSPositionCallback *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  JSValue v38;
  JSC::VM *v39;
  JSC::VM *v40;
  int v41;
  WebCore::JSPositionCallback *v42;
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  WebCore::JSDOMGlobalObject *v49;
  WebCore::JSPositionCallback *v50;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v39 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v39, "Geolocation", "getCurrentPosition");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSGeolocation::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSGeolocation::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v39, "Geolocation", "getCurrentPosition");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v38.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v38);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  v19 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v40 = v9;
  if ((v18 & 0xFFFE000000000002) != 0
    || (v20 = *(unsigned __int8 *)(v18 + 5), v20 < 0x17)
    || (v20 & 0xFE) != 0x1A
    && ((*(_BYTE *)(v18 + 6) & 4) == 0
     || ((*(void (**)(uint64_t *__return_ptr, unint64_t))(16
                                                                         * *(unsigned int *)(16
                                                                                           * (*(_DWORD *)v18 & 0xFFFFFFFE)
                                                                                           + 0x4C)
                                                                         + 0x38))(&v44, v18), !(_BYTE)v44)))
  {
    WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)&v40, 0, "successCallback", 16, "Geolocation", 12, a8, "getCurrentPosition", 19);
    v33 = 0;
    v35 = 1;
    v43 = 1;
    goto LABEL_38;
  }
  v21 = (WebCore::JSPositionCallback *)WTF::fastMalloc((WTF *)0x20);
  v42 = WebCore::JSPositionCallback::JSPositionCallback(v21, v18, v19);
  v43 = 0;
  v23 = *((int *)a2 + 8);
  if ((unint64_t)(v23 - 3) >= 0xFFFFFFFFFFFFFFFELL
    || (v24 = *((_QWORD *)a2 + 7), (v24 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    v19 = 0;
    v40 = 0;
    v41 = 0;
    goto LABEL_25;
  }
  v25 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v47 = *((_QWORD *)this + 7);
  if ((v24 & 0xFFFE000000000002) == 0
    && (v26 = *(unsigned __int8 *)(v24 + 5), v26 >= 0x17)
    && ((v26 & 0xFE) == 0x1A
     || (*(_BYTE *)(v24 + 6) & 4) != 0
     && ((*(void (**)(uint64_t *__return_ptr, unint64_t))(16
                                                                         * *(unsigned int *)(16
                                                                                           * (*(_DWORD *)v24 & 0xFFFFFFFE)
                                                                                           + 0x4C)
                                                                         + 0x38))(&v44, v24), (_BYTE)v44)))
  {
    v19 = (WebCore::JSDOMGlobalObject *)WTF::fastMalloc((WTF *)0x20);
    v27 = WebCore::JSPositionErrorCallback::JSPositionErrorCallback(v19, v24, v25);
    v28 = 0;
    v45 = 0;
    v44 = 0;
    v29 = 1;
    v40 = v27;
  }
  else
  {
    v28 = 1;
    WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)&v47, 1, "errorCallback", 14, "Geolocation", 12, v22, "getCurrentPosition", 19);
    v29 = 0;
    v45 = 1;
  }
  v41 = v28;
  ((void (*)(uint64_t *, uint64_t *))off_1E328B938[v28])(&v47, &v44);
  if (v29)
  {
    v23 = *((int *)a2 + 8);
LABEL_25:
    if ((unint64_t)(v23 - 4) > 0xFFFFFFFFFFFFFFFCLL)
      v30 = 10;
    else
      v30 = *((_QWORD *)a2 + 8);
    WebCore::convertDictionary<WebCore::PositionOptions>((JSC::JSCell *)v30, (unint64_t)this, (uint64_t)&v44);
    if (v46)
    {
      v33 = 0;
    }
    else
    {
      v42 = 0;
      v49 = v19;
      v50 = v21;
      v40 = 0;
      v47 = v44;
      v48 = v45;
      WebCore::Geolocation::getCurrentPosition(v17, (uint64_t *)&v50, (uint64_t *)&v49, &v47);
      v31 = v49;
      v49 = 0;
      if (v31)
      {
        if (*((_DWORD *)v31 + 4) == 1)
          (*(void (**)(WebCore::JSDOMGlobalObject *))(*(_QWORD *)v31 + 16))(v31);
        else
          --*((_DWORD *)v31 + 4);
      }
      v32 = v50;
      v50 = 0;
      if (v32)
      {
        if (*((_DWORD *)v32 + 4) == 1)
          (*(void (**)(WebCore::JSPositionCallback *))(*(_QWORD *)v32 + 16))(v32);
        else
          --*((_DWORD *)v32 + 4);
      }
      v33 = 10;
    }
    v34 = 0;
    goto LABEL_37;
  }
  v33 = 0;
  v34 = 1;
LABEL_37:
  ((void (*)(uint64_t *, JSC::VM **))off_1E328B948[v34])(&v44, &v40);
  v35 = 0;
LABEL_38:
  ((void (*)(uint64_t *, WebCore::JSPositionCallback **))off_1E328B958[v35])(&v44, &v42);
  return (_BYTE *)v33;
}

_BYTE *WebCore::jsGeolocationPrototypeFunction_watchPosition(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  unint64_t v18;
  WebCore::JSDOMGlobalObject *v19;
  unsigned int v20;
  WebCore::JSPositionCallback *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  WebCore::JSDOMGlobalObject *v25;
  unsigned int v26;
  WebCore::JSPositionErrorCallback *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  WebCore::JSDOMGlobalObject *v32;
  unint64_t v33;
  WebCore::JSPositionCallback *v34;
  uint64_t v35;
  uint64_t v36;
  JSValue v39;
  JSC::VM *v40;
  uint64_t v41;
  int v42;
  WebCore::JSDOMGlobalObject *v43;
  WebCore::JSPositionCallback *v44;
  JSC::VM *v45;
  int v46;
  WebCore::JSPositionCallback *v47;
  int v48;
  uint64_t v49;
  int v50;
  int v51;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v40 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v40, "Geolocation", "watchPosition");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSGeolocation::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSGeolocation::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v40, "Geolocation", "watchPosition");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v39.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v39);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  v19 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v45 = v9;
  if ((v18 & 0xFFFE000000000002) != 0
    || (v20 = *(unsigned __int8 *)(v18 + 5), v20 < 0x17)
    || (v20 & 0xFE) != 0x1A
    && ((*(_BYTE *)(v18 + 6) & 4) == 0
     || ((*(void (**)(uint64_t *__return_ptr, unint64_t))(16
                                                                         * *(unsigned int *)(16
                                                                                           * (*(_DWORD *)v18 & 0xFFFFFFFE)
                                                                                           + 0x4C)
                                                                         + 0x38))(&v49, v18), !(_BYTE)v49)))
  {
    WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)&v45, 0, "successCallback", 16, "Geolocation", 12, a8, "watchPosition", 14);
    v33 = 0;
    v36 = 1;
    v48 = 1;
    goto LABEL_37;
  }
  v21 = (WebCore::JSPositionCallback *)WTF::fastMalloc((WTF *)0x20);
  v47 = WebCore::JSPositionCallback::JSPositionCallback(v21, v18, v19);
  v48 = 0;
  v23 = *((int *)a2 + 8);
  if ((unint64_t)(v23 - 3) >= 0xFFFFFFFFFFFFFFFELL
    || (v24 = *((_QWORD *)a2 + 7), (v24 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    v19 = 0;
    v45 = 0;
    v46 = 0;
    goto LABEL_25;
  }
  v25 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v41 = *((_QWORD *)this + 7);
  if ((v24 & 0xFFFE000000000002) == 0
    && (v26 = *(unsigned __int8 *)(v24 + 5), v26 >= 0x17)
    && ((v26 & 0xFE) == 0x1A
     || (*(_BYTE *)(v24 + 6) & 4) != 0
     && ((*(void (**)(uint64_t *__return_ptr, unint64_t))(16
                                                                         * *(unsigned int *)(16
                                                                                           * (*(_DWORD *)v24 & 0xFFFFFFFE)
                                                                                           + 0x4C)
                                                                         + 0x38))(&v49, v24), (_BYTE)v49)))
  {
    v19 = (WebCore::JSDOMGlobalObject *)WTF::fastMalloc((WTF *)0x20);
    v27 = WebCore::JSPositionErrorCallback::JSPositionErrorCallback(v19, v24, v25);
    v28 = 0;
    v50 = 0;
    v49 = 0;
    v29 = 1;
    v45 = v27;
  }
  else
  {
    v28 = 1;
    WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)&v41, 1, "errorCallback", 14, "Geolocation", 12, v22, "watchPosition", 14);
    v29 = 0;
    v50 = 1;
  }
  v46 = v28;
  ((void (*)(uint64_t *, uint64_t *))off_1E328B938[v28])(&v41, &v49);
  if (v29)
  {
    v23 = *((int *)a2 + 8);
LABEL_25:
    if ((unint64_t)(v23 - 4) > 0xFFFFFFFFFFFFFFFCLL)
      v30 = 10;
    else
      v30 = *((_QWORD *)a2 + 8);
    WebCore::convertDictionary<WebCore::PositionOptions>((JSC::JSCell *)v30, (unint64_t)this, (uint64_t)&v49);
    if (v51)
    {
      v33 = 0;
    }
    else
    {
      v47 = 0;
      v44 = v21;
      v45 = 0;
      v43 = v19;
      v41 = v49;
      v42 = v50;
      v31 = WebCore::Geolocation::watchPosition(v17, (uint64_t *)&v44, (uint64_t *)&v43, &v41);
      v32 = v43;
      v43 = 0;
      if (v32)
      {
        if (*((_DWORD *)v32 + 4) == 1)
          (*(void (**)(WebCore::JSDOMGlobalObject *))(*(_QWORD *)v32 + 16))(v32);
        else
          --*((_DWORD *)v32 + 4);
      }
      v33 = v31 | 0xFFFE000000000000;
      v34 = v44;
      v44 = 0;
      if (v34)
      {
        if (*((_DWORD *)v34 + 4) == 1)
          (*(void (**)(WebCore::JSPositionCallback *))(*(_QWORD *)v34 + 16))(v34);
        else
          --*((_DWORD *)v34 + 4);
      }
    }
    v35 = 0;
    goto LABEL_36;
  }
  v33 = 0;
  v35 = 1;
LABEL_36:
  ((void (*)(uint64_t *, JSC::VM **))off_1E328B948[v35])(&v49, &v45);
  v36 = 0;
LABEL_37:
  ((void (*)(uint64_t *, WebCore::JSPositionCallback **))off_1E328B958[v36])(&v49, &v47);
  return (_BYTE *)v33;
}

uint64_t WebCore::jsGeolocationPrototypeFunction_clearWatch(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  JSValue v19;
  unint64_t v20;
  JSC::VM *v21;
  unint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "Geolocation", "clearWatch");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSGeolocation::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSGeolocation::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "Geolocation", "clearWatch");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v19);
  }
  else
  {
    v11 = *(uint64_t **)(v5 + 24);
    v12 = *((_QWORD *)a2 + 6);
    v22 = v12;
    if (v12 < 0xFFFE000000000000)
    {
      v15 = v12 - 0x2000000000000;
      if (v12 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v22, this);
        v15 = v20;
      }
      v16 = (v15 >> 52) & 0x7FF;
      if ((v16 - 1023) <= 0x53)
      {
        v17 = v15 >> (51 - (v15 >> 52));
        if (v16 > 0x433)
          LODWORD(v17) = v15 << ((v15 >> 52) - 51);
        if (v16 >= 0x41F)
          v18 = v17;
        else
          v18 = (((1 << ((v15 >> 52) + 1)) - 1) & v17) + (1 << ((v15 >> 52) + 1));
        if ((v15 & 0x8000000000000000) == 0)
          v13 = v18;
        else
          v13 = -v18;
      }
      else
      {
        v13 = 0;
      }
    }
    else
    {
      v13 = v12;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      WebCore::Geolocation::clearWatch(v11, v13);
      return 10;
    }
  }
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore23JSPositionErrorCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore23JSPositionErrorCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore18JSPositionCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_BYTE *WebCore::jsGeolocationCoordinatesPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t SlowCase;
  double v14;
  uint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  double v24;
  uint64_t v25;
  unint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  double v29;
  uint64_t v30;
  unint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  double v34;
  uint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  double v39;
  uint64_t v40;
  unint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  double v44;
  uint64_t v45;
  unint64_t v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  unint64_t v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  unint64_t v57;
  WebCore *v58;
  WebCore *v59;
  uint64_t v60;
  WTF::StringImpl *v61;
  unint64_t v62;
  int v63;
  int v64;
  uint64_t v65;

  v3 = *((_QWORD *)a2 + 5);
  v4 = *((_QWORD *)this + 7);
  v60 = v4;
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v60, "GeolocationCoordinates", "toJSON");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSGeolocationCoordinates::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSGeolocationCoordinates::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v60, "GeolocationCoordinates", "toJSON");
  v10 = *(_QWORD *)(v3 + 24);
  v11 = *(_QWORD *)(v4 + 15056);
  if (v11)
  {
    v12 = *(unsigned int *)(v11 + 60);
    SlowCase = *(_QWORD *)(v11 + 24);
    if (SlowCase < *(_QWORD *)(v11 + 32))
    {
LABEL_14:
      *(_QWORD *)(v11 + 24) = SlowCase + v12;
      goto LABEL_15;
    }
    SlowCase = *(_QWORD *)(v11 + 40);
    if ((SlowCase & 1) == 0)
    {
      v57 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v11 + 48);
      *(_QWORD *)(v11 + 32) = SlowCase + HIDWORD(v57);
      *(_QWORD *)(v11 + 40) = SlowCase + (int)v57;
      goto LABEL_14;
    }
    v59 = this;
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
    this = v59;
  }
  else
  {
    v58 = this;
    SlowCase = JSC::CompleteSubspace::allocateSlow();
    this = v58;
  }
LABEL_15:
  *(_DWORD *)SlowCase = 0;
  *(_DWORD *)SlowCase = *((_DWORD *)this + 212);
  *(_DWORD *)(SlowCase + 4) = 16783360;
  *(_OWORD *)(SlowCase + 8) = 0u;
  *(_OWORD *)(SlowCase + 24) = 0u;
  *(_OWORD *)(SlowCase + 40) = 0u;
  *(_QWORD *)(SlowCase + 56) = 0;
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  v14 = *(double *)(v10 + 16);
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v15 = (int)v14, v14 == (double)(int)v15)
    && ((_DWORD)v15 || (*(_QWORD *)&v14 & 0x8000000000000000) == 0))
  {
    v16 = v15 | 0xFFFE000000000000;
  }
  else
  {
    v16 = *(_QWORD *)&v14 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v17 = v61;
  v61 = 0;
  v62 = SlowCase;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v17, v16, 0, (uint64_t)&v61);
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v18);
    else
      *(_DWORD *)v17 -= 2;
  }
  v19 = *(double *)(v10 + 24);
  if ((*(_QWORD *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v20 = (int)v19, v19 == (double)(int)v20)
    && ((_DWORD)v20 || (*(_QWORD *)&v19 & 0x8000000000000000) == 0))
  {
    v21 = v20 | 0xFFFE000000000000;
  }
  else
  {
    v21 = *(_QWORD *)&v19 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v22 = v61;
  v61 = 0;
  v62 = SlowCase;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v22, v21, 0, (uint64_t)&v61);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  if (*(_BYTE *)(v10 + 48))
  {
    v24 = *(double *)(v10 + 40);
    if ((*(_QWORD *)&v24 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v25 = (int)v24, v24 == (double)(int)v25)
      && ((_DWORD)v25 || (*(_QWORD *)&v24 & 0x8000000000000000) == 0))
    {
      v26 = v25 | 0xFFFE000000000000;
    }
    else
    {
      v26 = *(_QWORD *)&v24 + 0x2000000000000;
    }
  }
  else
  {
    v26 = 2;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v27 = v61;
  v61 = 0;
  v62 = SlowCase;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v27, v26, 0, (uint64_t)&v61);
  if (v27)
  {
    if (*(_DWORD *)v27 == 2)
      WTF::StringImpl::destroy(v27, v28);
    else
      *(_DWORD *)v27 -= 2;
  }
  v29 = *(double *)(v10 + 32);
  if ((*(_QWORD *)&v29 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v30 = (int)v29, v29 == (double)(int)v30)
    && ((_DWORD)v30 || (*(_QWORD *)&v29 & 0x8000000000000000) == 0))
  {
    v31 = v30 | 0xFFFE000000000000;
  }
  else
  {
    v31 = *(_QWORD *)&v29 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v32 = v61;
  v61 = 0;
  v62 = SlowCase;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v32, v31, 0, (uint64_t)&v61);
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, v33);
    else
      *(_DWORD *)v32 -= 2;
  }
  if (*(_BYTE *)(v10 + 64))
  {
    v34 = *(double *)(v10 + 56);
    if ((*(_QWORD *)&v34 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v35 = (int)v34, v34 == (double)(int)v35)
      && ((_DWORD)v35 || (*(_QWORD *)&v34 & 0x8000000000000000) == 0))
    {
      v36 = v35 | 0xFFFE000000000000;
    }
    else
    {
      v36 = *(_QWORD *)&v34 + 0x2000000000000;
    }
  }
  else
  {
    v36 = 2;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v37 = v61;
  v61 = 0;
  v62 = SlowCase;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v37, v36, 0, (uint64_t)&v61);
  if (v37)
  {
    if (*(_DWORD *)v37 == 2)
      WTF::StringImpl::destroy(v37, v38);
    else
      *(_DWORD *)v37 -= 2;
  }
  if (*(_BYTE *)(v10 + 80))
  {
    v39 = *(double *)(v10 + 72);
    if ((*(_QWORD *)&v39 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v40 = (int)v39, v39 == (double)(int)v40)
      && ((_DWORD)v40 || (*(_QWORD *)&v39 & 0x8000000000000000) == 0))
    {
      v41 = v40 | 0xFFFE000000000000;
    }
    else
    {
      v41 = *(_QWORD *)&v39 + 0x2000000000000;
    }
  }
  else
  {
    v41 = 2;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v42 = v61;
  v61 = 0;
  v62 = SlowCase;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v42, v41, 0, (uint64_t)&v61);
  if (v42)
  {
    if (*(_DWORD *)v42 == 2)
      WTF::StringImpl::destroy(v42, v43);
    else
      *(_DWORD *)v42 -= 2;
  }
  if (*(_BYTE *)(v10 + 96))
  {
    v44 = *(double *)(v10 + 88);
    if ((*(_QWORD *)&v44 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v45 = (int)v44, v44 == (double)(int)v45)
      && ((_DWORD)v45 || (*(_QWORD *)&v44 & 0x8000000000000000) == 0))
    {
      v46 = v45 | 0xFFFE000000000000;
    }
    else
    {
      v46 = *(_QWORD *)&v44 + 0x2000000000000;
    }
  }
  else
  {
    v46 = 2;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v47 = v61;
  v61 = 0;
  v62 = SlowCase;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v47, v46, 0, (uint64_t)&v61);
  if (v47)
  {
    if (*(_DWORD *)v47 == 2)
      WTF::StringImpl::destroy(v47, v48);
    else
      *(_DWORD *)v47 -= 2;
  }
  v49 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v3 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v49 && *(_BYTE *)(v49 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194BD5FC8);
  }
  v50 = v49 - 192;
  if (!v49)
    v50 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v50 + 680) + 680) & 0x1000) != 0)
  {
    if (*(_BYTE *)(v10 + 112))
    {
      v51 = *(double *)(v10 + 104);
      if ((*(_QWORD *)&v51 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
        && (v52 = (int)v51, v51 == (double)(int)v52)
        && ((_DWORD)v52 || (*(_QWORD *)&v51 & 0x8000000000000000) == 0))
      {
        v53 = v52 | 0xFFFE000000000000;
      }
      else
      {
        v53 = *(_QWORD *)&v51 + 0x2000000000000;
      }
    }
    else
    {
      v53 = 2;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v54 = v61;
    v61 = 0;
    v62 = SlowCase;
    v63 = -1;
    v64 = 0x1000000;
    v65 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v54, v53, 0, (uint64_t)&v61);
    if (v54)
    {
      if (*(_DWORD *)v54 == 2)
        WTF::StringImpl::destroy(v54, v55);
      else
        *(_DWORD *)v54 -= 2;
    }
  }
  return (_BYTE *)SlowCase;
}

_BYTE *WebCore::jsGeolocationPositionPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t Slow;
  unint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  unint64_t v17;
  unint64_t v18;
  double v19;
  unint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  unint64_t v25;
  WebCore *v26;
  WebCore *v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  unint64_t v30;
  int v31;
  int v32;
  uint64_t v33;

  v3 = *((_QWORD *)a2 + 5);
  v4 = *((_QWORD *)this + 7);
  v28 = v4;
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "GeolocationPosition", "toJSON");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSGeolocationPosition::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSGeolocationPosition::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "GeolocationPosition", "toJSON");
  v10 = *(_QWORD *)(v3 + 24);
  v11 = *(_QWORD *)(v4 + 15056);
  if (!v11)
  {
    v26 = this;
    Slow = JSC::CompleteSubspace::allocateSlow();
    this = v26;
    goto LABEL_15;
  }
  v12 = *(unsigned int *)(v11 + 60);
  Slow = *(_QWORD *)(v11 + 24);
  if (Slow >= *(_QWORD *)(v11 + 32))
  {
    Slow = *(_QWORD *)(v11 + 40);
    if ((Slow & 1) != 0)
    {
      v27 = this;
      JSC::sanitizeStackForVM();
      Slow = JSC::LocalAllocator::allocateSlowCase();
      this = v27;
      goto LABEL_15;
    }
    v25 = *(_QWORD *)(Slow + 8) ^ *(_QWORD *)(v11 + 48);
    *(_QWORD *)(v11 + 32) = Slow + HIDWORD(v25);
    *(_QWORD *)(v11 + 40) = Slow + (int)v25;
  }
  *(_QWORD *)(v11 + 24) = Slow + v12;
LABEL_15:
  *(_DWORD *)Slow = 0;
  *(_DWORD *)Slow = *((_DWORD *)this + 212);
  *(_DWORD *)(Slow + 4) = 16783360;
  *(_OWORD *)(Slow + 8) = 0u;
  *(_OWORD *)(Slow + 24) = 0u;
  *(_OWORD *)(Slow + 40) = 0u;
  *(_QWORD *)(Slow + 56) = 0;
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  v14 = WebCore::wrap<WebCore::GeolocationCoordinates>(*(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28), *(WTF **)(v10 + 8));
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v15 = v29;
  v29 = 0;
  v30 = Slow;
  v31 = -1;
  v32 = 0x1000000;
  v33 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v15, v14, 0, (uint64_t)&v29);
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v16);
    else
      *(_DWORD *)v15 -= 2;
  }
  v17 = *(_QWORD *)(v10 + 16);
  v18 = HIDWORD(v17);
  v19 = (double)v17;
  v20 = (v17 & 0x80000000) != 0
      ? COERCE__INT64((double)v17) + 0x2000000000000
      : v17 | 0xFFFE000000000000;
  v21 = v18 ? *(_QWORD *)&v19 + 0x2000000000000 : v20;
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v22 = v29;
  v29 = 0;
  v30 = Slow;
  v31 = -1;
  v32 = 0x1000000;
  v33 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v22, v21, 0, (uint64_t)&v29);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  return (_BYTE *)Slow;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS8_3RefIN7WebCore10ShadowRootENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSK_SL_EEEEEEDcSP_DpT0_(uint64_t a1, _DWORD *a2)
{
  uint64_t v2;
  WTF *result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;

  v2 = a2[3];
  if ((_DWORD)v2)
  {
    v4 = *(uint64_t **)a2;
    v5 = 8 * v2;
    v7 = a2;
    do
    {
      v6 = *v4;
      *v4 = 0;
      if (v6)
      {
        if (*(_DWORD *)(v6 + 24) == 2)
        {
          if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v6, a2);
        }
        else
        {
          *(_DWORD *)(v6 + 24) -= 2;
        }
      }
      ++v4;
      v5 -= 8;
      a2 = v7;
    }
    while (v5);
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    a2[2] = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

_BYTE *WebCore::jsHTMLAllCollectionPrototypeFunction_namedItem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLAllCollection *v11;
  JSC::JSRopeString *v12;
  JSC::JSRopeString *v13;
  WTF::AtomStringImpl *v14;
  uint64_t *v15;
  WTF::StringImpl *v16;
  WebCore::Element *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  WTF::StringImpl *v21;
  JSValue v24;
  WebCore *v25;
  JSC::JSGlobalObject *v26;
  JSC::CallFrame *v27;
  JSC::VM *v28;
  WTF::StringImpl *v29;
  char v30[8];
  unsigned int v31;
  char v32;
  char v33[8];
  int v34;
  _QWORD v35[5];
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39[5];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v28 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "HTMLAllCollection", "namedItem");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLAllCollection::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLAllCollection::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "HTMLAllCollection", "namedItem");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v24);
  }
  v11 = *(WebCore::HTMLAllCollection **)(v5 + 24);
  v12 = (JSC::JSRopeString *)*((_QWORD *)a2 + 6);
  v35[0] = v12;
  if (((unint64_t)v12 & 0xFFFE000000000002) != 0 || (v13 = v12, *((_BYTE *)v12 + 5) != 2))
    v13 = (JSC::JSRopeString *)JSC::JSValue::toStringSlowCase((JSC::JSValue *)v35, this);
  v14 = (WTF::AtomStringImpl *)*((_QWORD *)v13 + 1);
  if ((v14 & 1) != 0)
  {
    JSC::JSRopeString::resolveRopeToExistingAtomString(v13, this);
LABEL_17:
    v14 = (WTF::AtomStringImpl *)v39[0];
    goto LABEL_20;
  }
  if ((*((_BYTE *)v14 + 16) & 0x10) == 0)
  {
    WTF::AtomStringImpl::lookUpSlowCase(v14, a2);
    goto LABEL_17;
  }
  *(_DWORD *)v14 += 2;
LABEL_20:
  v15 = *(uint64_t **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v29 = v14;
  WebCore::HTMLAllCollection::namedItemOrItems(v11, (const WTF::AtomString *)&v29, (uint64_t)v30);
  if (!v32)
  {
    v19 = 2;
LABEL_32:
    v21 = v29;
    v29 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v16);
      else
        *(_DWORD *)v21 -= 2;
    }
    return (_BYTE *)v19;
  }
  v33[0] = 0;
  v34 = -1;
  v18 = v31;
  if (v31 == -1)
  {
    v18 = -1;
  }
  else
  {
    ((void (*)(uint64_t **, char *, char *))off_1E328BDC0[v31])(v39, v33, v30);
    v34 = v18;
  }
  LOBYTE(v36) = 0;
  v37 = 0;
  v38 = v18;
  v39[0] = &v38;
  v39[1] = &v36;
  v39[2] = (uint64_t *)this;
  v39[3] = v15;
  v39[4] = (uint64_t *)v33;
  v20 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_14HTMLCollectionEEENS4_INS_7ElementEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSI_12RawPtrTraitsIS5_EENSI_21DefaultRefDerefTraitsIS5_EEEENSJ_IS7_NSK_IS7_EENSM_IS7_EEEEEEEEUlTyvE_JNSG_17integral_constantIlLl0EEENSW_IlLl1EEEEEET_SZ_(v39, v17, (uint64_t)v35);
  if (v37)
  {
    v19 = v36;
    if (v34 != -1)
      ((void (*)(uint64_t **, char *, __n128))off_1E328BDB0[v34])(v39, v33, v20);
    if (v32)
    {
      if (v31 != -1)
        ((void (*)(uint64_t **, char *))off_1E328BDB0[v31])(v39, v30);
      v31 = -1;
    }
    goto LABEL_32;
  }
  v25 = (WebCore *)std::__throw_bad_optional_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsHTMLAllCollectionPrototypeFunction_item(v25, v26, v27);
}

double WebCore::jsHTMLAllCollectionPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLAllCollection *v11;
  WTF::StringImpl *v12;
  __n128 v13;
  int v14;
  uint64_t *v15;
  WTF::StringImpl *v16;
  WebCore::Element *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  uint64_t **v20;
  WebCore::Element *v21;
  uint64_t v22;
  uint64_t v24;
  WTF::StringImpl *v25;
  _BYTE v26[8];
  unsigned int v27;
  char v28;
  WTF::StringImpl *v29;
  int v30;
  _BYTE v31[8];
  int v32;
  _BYTE v33[40];
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t *v37[5];

  v24 = *((_QWORD *)this + 7);
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    goto LABEL_39;
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLAllCollection::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLAllCollection::s_info && v8 != 0);
  }
  if (!v7)
  {
LABEL_39:
    WebCore::throwThisTypeError((int)this, (int)&v24, "HTMLAllCollection", "item");
    return v13.n128_f64[0];
  }
  v11 = *(WebCore::HTMLAllCollection **)(v4 + 24);
  if (*((_DWORD *)a2 + 8) == 1 || *((_QWORD *)a2 + 6) == 10)
  {
    v12 = (WTF::StringImpl *)*MEMORY[0x1E0CBF2F8];
    if (*MEMORY[0x1E0CBF2F8])
      *(_DWORD *)v12 += 2;
    v30 = 0;
    goto LABEL_19;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v29);
  v14 = v30;
  if (!v30)
  {
    v12 = v29;
    v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
LABEL_19:
    v15 = *(uint64_t **)(v5 + 40);
    v29 = 0;
    v25 = v12;
    WebCore::HTMLAllCollection::namedOrIndexedItemOrItems(v11, (const WTF::AtomString *)&v25, (uint64_t)v26);
    if (v28)
    {
      v31[0] = 0;
      v32 = -1;
      v18 = v27;
      if (v27 == -1)
      {
        v18 = -1;
      }
      else
      {
        ((void (*)(uint64_t **, _BYTE *, _BYTE *))off_1E328BDC0[v27])(v37, v31, v26);
        v32 = v18;
      }
      LOBYTE(v34) = 0;
      v35 = 0;
      v36 = v18;
      v37[0] = &v36;
      v37[1] = &v34;
      v37[2] = (uint64_t *)this;
      v37[3] = v15;
      v37[4] = (uint64_t *)v31;
      v13 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_14HTMLCollectionEEENS4_INS_7ElementEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSI_12RawPtrTraitsIS5_EENSI_21DefaultRefDerefTraitsIS5_EEEENSJ_IS7_NSK_IS7_EENSM_IS7_EEEEEEEEUlTyvE_JNSG_17integral_constantIlLl0EEENSW_IlLl1EEEEEET_SZ_(v37, v17, (uint64_t)v33);
      if (!v35)
      {
        v20 = (uint64_t **)std::__throw_bad_optional_access[abi:sn180100]();
        v13.n128_u64[0] = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_14HTMLCollectionEEENS4_INS_7ElementEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSI_12RawPtrTraitsIS5_EENSI_21DefaultRefDerefTraitsIS5_EEEENSJ_IS7_NSK_IS7_EENSM_IS7_EEEEEEEEUlTyvE_JNSG_17integral_constantIlLl0EEENSW_IlLl1EEEEEET_SZ_(v20, v21, v22).n128_u64[0];
        return v13.n128_f64[0];
      }
      if (v32 != -1)
        ((void (*)(uint64_t **, _BYTE *, __n128))off_1E328BDB0[v32])(v37, v31, v13);
      if (v28)
      {
        if (v27 != -1)
          ((void (*)(uint64_t **, _BYTE *))off_1E328BDB0[v27])(v37, v26);
        v27 = -1;
      }
    }
    v19 = v25;
    v25 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v16);
      else
        *(_DWORD *)v19 -= 2;
    }
    v14 = v30;
  }
  if (v14 != -1)
    ((void (*)(uint64_t **, WTF::StringImpl **))off_1E328B3D8[v14])(v37, &v29);
  return v13.n128_f64[0];
}

__n128 _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_14HTMLCollectionEEENS4_INS_7ElementEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSI_12RawPtrTraitsIS5_EENSI_21DefaultRefDerefTraitsIS5_EEEENSJ_IS7_NSK_IS7_EENSM_IS7_EEEEEEEEUlTyvE_JNSG_17integral_constantIlLl0EEENSW_IlLl1EEEEEET_SZ_@<Q0>(uint64_t **a1@<X0>, WebCore::Element *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  WebCore::JSDOMGlobalObject *v10;
  unint64_t v11;
  uint64_t *v12;
  __n128 result;
  __int128 v14;

  v5 = **a1;
  if (!v5)
  {
    v6 = a1[4];
    if (*((_DWORD *)v6 + 2))
    {
LABEL_17:
      std::__throw_bad_variant_access[abi:sn180100]();
      goto LABEL_18;
    }
    if (*v6)
      v7 = WebCore::wrap<WebCore::HTMLCollection>((int)a1[2], (JSC::VM *)a1[3], *v6);
    else
      v7 = 2;
    v8 = a1[1];
    if (!*((_BYTE *)v8 + 8))
      *((_BYTE *)v8 + 8) = 1;
    *v8 = v7;
    v5 = **a1;
  }
  if (v5 != 1)
    goto LABEL_16;
  v9 = a1[4];
  if (*((_DWORD *)v9 + 2) != 1)
    goto LABEL_17;
  v10 = (WebCore::JSDOMGlobalObject *)*v9;
  if (*v9)
  {
LABEL_18:
    v11 = WebCore::toJS((WebCore *)a1[2], (JSC::JSGlobalObject *)a1[3], v10, a2);
    goto LABEL_13;
  }
  v11 = 2;
LABEL_13:
  v12 = a1[1];
  if (!*((_BYTE *)v12 + 8))
    *((_BYTE *)v12 + 8) = 1;
  *v12 = v11;
LABEL_16:
  result = *(__n128 *)a1;
  v14 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v14;
  *(_QWORD *)(a3 + 32) = a1[4];
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore14HTMLCollectionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore14HTMLCollectionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore14HTMLCollectionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSU_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEERKS12_EEEDcSU_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  if (*a3)
    ++*(_DWORD *)(v3 + 16);
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore14HTMLCollectionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSU_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEERKS12_EEEDcSU_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  if (*a3)
    *(_DWORD *)(v3 + 24) += 2;
  *a2 = v3;
}

_BYTE *WebCore::jsHTMLAnchorElementPrototypeFunction_toString(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  const WTF::String *v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v15;
  WTF::StringImpl *v16[5];

  v4 = *((_QWORD *)a2 + 5);
  v15 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v15, "HTMLAnchorElement", "toString");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLAnchorElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLAnchorElement::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v15, "HTMLAnchorElement", "toString");
  WebCore::HTMLAnchorElement::href(*(WebCore::HTMLAnchorElement **)(v4 + 24), (WTF::URL *)v16);
  v12 = JSC::jsOwnedString(*((JSC **)this + 7), (JSC::VM *)v16, v10);
  v13 = v16[0];
  v16[0] = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  return (_BYTE *)v12;
}

unint64_t WebCore::castThisValue<WebCore::JSHTMLAnchorElement>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSHTMLAnchorElement::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSHTMLAnchorElement::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

_BYTE *WebCore::jsHTMLAreaElementPrototypeFunction_toString(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  const WTF::String *v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v15;
  WTF::StringImpl *v16[5];

  v4 = *((_QWORD *)a2 + 5);
  v15 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v15, "HTMLAreaElement", "toString");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLAreaElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLAreaElement::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v15, "HTMLAreaElement", "toString");
  WebCore::HTMLAnchorElement::href(*(WebCore::HTMLAnchorElement **)(v4 + 24), (WTF::URL *)v16);
  v12 = JSC::jsOwnedString(*((JSC **)this + 7), (JSC::VM *)v16, v10);
  v13 = v16[0];
  v16[0] = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  return (_BYTE *)v12;
}

uint64_t WebCore::jsHTMLAttachmentElementConstructorFunction_getAttachmentIdentifier(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  WebCore::HTMLAttachmentElement *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  int v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  unsigned int v24;
  JSValue v25;
  WTF::StringImpl *v26;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v25);
  }
  v10 = *((_QWORD *)a2 + 6);
  v26 = (WTF::StringImpl *)*((_QWORD *)this + 7);
  if ((v10 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSHTMLElement::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSHTMLElement::s_info && v13 != 0);
  }
  if (!v12 || (v16 = *(WebCore::HTMLAttachmentElement **)(v10 + 24)) == 0)
  {
LABEL_33:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v26, 0, "associatedElement", 18, "HTMLAttachmentElement", 22, a8, "getAttachmentIdentifier", 24, "HTMLElement", 12);
    return 0;
  }
  WebCore::HTMLAttachmentElement::getAttachmentIdentifier(v16, a2, (const WTF::String *)&v26);
  v17 = *((_QWORD *)this + 7);
  v18 = v26;
  if (!v26 || (v19 = *((_DWORD *)v26 + 1)) == 0)
  {
    v20 = *(_QWORD *)(v17 + 41968);
LABEL_20:
    v26 = 0;
    if (!v18)
      return v20;
    goto LABEL_27;
  }
  if (v19 != 1)
    goto LABEL_17;
  v21 = (unsigned __int8 *)*((_QWORD *)v26 + 1);
  if ((*((_BYTE *)v26 + 16) & 4) != 0)
  {
    v22 = *v21;
LABEL_25:
    v20 = *(_QWORD *)(v17 + 8 * v22 + 42216);
    goto LABEL_26;
  }
  v24 = *(unsigned __int16 *)v21;
  if (v24 <= 0xFF)
  {
    v22 = v24;
    goto LABEL_25;
  }
LABEL_17:
  v20 = *(_QWORD *)(v17 + 64760);
  if (!v20 || v26 != *(WTF::StringImpl **)(v20 + 8))
  {
    v20 = JSC::jsStringWithCacheSlowCase();
    v18 = v26;
    goto LABEL_20;
  }
LABEL_26:
  v26 = 0;
LABEL_27:
  if (*(_DWORD *)v18 == 2)
    WTF::StringImpl::destroy(v18, v18);
  else
    *(_DWORD *)v18 -= 2;
  return v20;
}

uint64_t WebCore::jsHTMLButtonElementPrototypeFunction_checkValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLButtonElement", "checkValidity");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLButtonElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLButtonElement", "checkValidity");
  if (WebCore::ValidatedFormListedElement::checkValidity((_BYTE *)(*(_QWORD *)(v3 + 24) + 112), 0))
    return 7;
  return 6;
}

uint64_t WebCore::jsHTMLButtonElementPrototypeFunction_reportValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLButtonElement", "reportValidity");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLButtonElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLButtonElement", "reportValidity");
  if (WebCore::ValidatedFormListedElement::reportValidity((WebCore::ValidatedFormListedElement *)(*(_QWORD *)(v3 + 24) + 112)))
    return 7;
  return 6;
}

_BYTE *WebCore::jsHTMLButtonElementPrototypeFunction_setCustomValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  JSValue v21;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v23;
  uint64_t v24;
  int v25;
  WTF::StringImpl *v26;
  uint64_t v27;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "HTMLButtonElement", "setCustomValidity");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLButtonElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLButtonElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "HTMLButtonElement", "setCustomValidity");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v21);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v27 = v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v26 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v27, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v26;
    if (hasExceptionsAfterHandlingTraps)
    {
      v25 = 1;
      v26 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, a2);
        else
          *(_DWORD *)v14 -= 2;
      }
      v18 = 0;
      v17 = 1;
      goto LABEL_30;
    }
  }
  else
  {
    v14 = v26;
  }
  v25 = 0;
  v24 = 0;
  if (v14)
    *(_DWORD *)v14 += 2;
  v15 = *(WTF::StringImpl **)(v11 + 144);
  *(_QWORD *)(v11 + 144) = v14;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, a2);
    else
      *(_DWORD *)v15 -= 2;
  }
  WebCore::ValidatedFormListedElement::updateValidity(v11 + 112);
  if (!v14)
    goto LABEL_36;
  if (*(_DWORD *)v14 == 2)
  {
    WTF::StringImpl::destroy(v14, v16);
LABEL_36:
    v17 = 0;
    goto LABEL_29;
  }
  v17 = 0;
  *(_DWORD *)v14 -= 2;
LABEL_29:
  v18 = 10;
LABEL_30:
  ((void (*)(uint64_t *, uint64_t *))off_1E328A618[v17])(&v27, &v24);
  return (_BYTE *)v18;
}

_BYTE *WebCore::jsHTMLCanvasElementPrototypeFunction_getContext(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF *v16;
  JSC::VM **v17;
  WTF::StringImpl *v18;
  WebCore::WebGLRenderingContext *v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int v31;
  JSValue v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  JSValue v36;
  void *v37;
  JSC::VM *v38;
  WebCore *v39;
  JSC::JSGlobalObject *v40;
  JSC::CallFrame *v41;
  uint64_t v42;
  WTF::StringImpl *v43;
  WTF *v44;
  WTF::StringImpl *v45;
  int v46;
  WTF *v47;
  int v48;
  char v49;
  char v50[8];
  int v51;
  WTF::StringImpl *v52[5];
  uint64_t v53;
  char v54;
  uint64_t v55;
  WebCore *v56;
  JSC::JSGlobalObject *v57;
  WTF::StringImpl **v58;
  JSC::VM **v59;
  char *v60;
  JSC::VM *v61;
  char v62[8];
  WTF::StringImpl *v63;
  char v64;
  int v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)this + 7);
  v42 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "HTMLCanvasElement", "getContext");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLCanvasElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLCanvasElement::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "HTMLCanvasElement", "getContext");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v33.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v33);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v56 = (WebCore *)v12;
  if ((v12 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v12 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v56, this);
  }
  else
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
    if (v13)
      *(_DWORD *)v13 += 2;
    v52[0] = v13;
  }
  if (*(_DWORD *)(v4 + 80))
  {
    v14 = v52[0];
    if (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    {
      v46 = 1;
      v52[0] = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v34);
        else
          *(_DWORD *)v14 -= 2;
      }
      v20 = 0;
      v31 = 1;
LABEL_54:
      ((void (*)(WebCore **, WTF::StringImpl **))off_1E328A618[v31])(&v56, &v45);
      return (_BYTE *)v20;
    }
  }
  else
  {
    v14 = v52[0];
  }
  v45 = v14;
  v46 = 0;
  v52[0] = (WTF::StringImpl *)1;
  v61 = (JSC::VM *)*((_QWORD *)this + 7);
  v15 = *((int *)a2 + 8);
  if ((unint64_t)(v15 - 3) < 0xFFFFFFFFFFFFFFFELL)
  {
    v56 = this;
    v57 = a2;
    v58 = v52;
    v59 = &v61;
    WTF::FixedVector<JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>::createWithSizeFromGenerator<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLAny>::Item> WebCore::convertVariadicArguments<WebCore::IDLAny>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>(v15 - 2, (uint64_t)&v56, &v47);
    v38 = v61;
    if (*((_DWORD *)v61 + 20))
      goto LABEL_81;
    goto LABEL_78;
  }
  v16 = 0;
  v44 = 0;
  while (1)
  {
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    {
      v20 = 0;
      goto LABEL_43;
    }
    v17 = *(JSC::VM ***)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v45 = 0;
    v43 = v14;
    v14 = (WTF::StringImpl *)&v61;
    WebCore::HTMLCanvasElement::getContext((WebCore::HTMLCanvasElement *)v11, this, (uint64_t *)&v43, (uint64_t *)&v44, (uint64_t)&v61);
    if (v65)
      break;
    LOBYTE(v47) = 0;
    v49 = 0;
    if (!v64)
    {
      v20 = 2;
      goto LABEL_37;
    }
    v11 = 0xFFFFFFFFLL;
    v48 = -1;
    v4 = v63;
    if ((_DWORD)v63 == -1)
    {
      v49 = 1;
      v50[0] = 0;
      v51 = -1;
      v4 = -1;
    }
    else
    {
      ((void (*)(WebCore **, WTF **, char *))off_1E328D2C0[v63])(&v56, &v47, v62);
      v48 = v4;
      v49 = 1;
      v50[0] = 0;
      v51 = -1;
      ((void (*)(WebCore **, char *, WTF **))off_1E328D298[v4])(&v56, v50, &v47);
      v51 = v4;
    }
    v55 = v4;
    LOBYTE(v53) = 0;
    v54 = 0;
    v56 = (WebCore *)&v55;
    v57 = (JSC::JSGlobalObject *)&v53;
    v58 = (WTF::StringImpl **)this;
    v59 = v17;
    v60 = v50;
    _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_21WebGLRenderingContextEEENS4_INS_22WebGL2RenderingContextEEENS4_INS_16GPUCanvasContextEEENS4_INS_27ImageBitmapRenderingContextEEENS4_INS_24CanvasRenderingContext2DEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSO_12RawPtrTraitsIS5_EENSO_21DefaultRefDerefTraitsIS5_EEEENSP_IS7_NSQ_IS7_EENSS_IS7_EEEENSP_IS9_NSQ_IS9_EENSS_IS9_EEEENSP_ISB_NSQ_ISB_EENSS_ISB_EEEENSP_ISD_NSQ_ISD_EENSS_ISD_EEEEEEEEUlTyvE_JNSM_17integral_constantIlLl0EEENS1B_IlLl1EEENS1B_IlLl2EEENS1B_IlLl3EEENS1B_IlLl4EEEEEET_S1H_((uint64_t)&v56, v19, (uint64_t)v52);
    if (v54)
    {
      v20 = v53;
      if (v51 != -1)
        ((void (*)(WebCore **, char *))off_1E328D270[v51])(&v56, v50);
      if (v49 && v48 != -1)
        ((void (*)(WebCore **, WTF **))off_1E328D270[v48])(&v56, &v47);
      goto LABEL_37;
    }
    v38 = (JSC::VM *)std::__throw_bad_optional_access[abi:sn180100]();
LABEL_81:
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v38) & 1) != 0)
    {
      v16 = 0;
    }
    else
    {
LABEL_78:
      v16 = v47;
      v47 = 0;
    }
    v44 = v16;
    WTF::FixedVector<JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>::~FixedVector(&v47, v37);
  }
  if (v65 != 1)
  {
    v39 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
    return (_BYTE *)WebCore::jsHTMLCanvasElementPrototypeFunction_toDataURL(v39, v40, v41);
  }
  v18 = (WTF::StringImpl *)v62[0];
  LOBYTE(v56) = v62[0];
  v35 = v63;
  v63 = 0;
  v57 = v35;
  if (!*(_QWORD *)(v4 + 16))
  {
    v36.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v62[0], (JSC::JSGlobalObject *)&v57);
    JSC::VM::throwException((JSC::VM *)v4, this, v36);
    v35 = v57;
  }
  v57 = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v18);
    else
      *(_DWORD *)v35 -= 2;
  }
  v20 = 0;
LABEL_37:
  if (v65 != -1)
    ((void (*)(WebCore **, char *))off_1E328D2E8[v65])(&v56, v62);
  v65 = -1;
  v22 = v43;
  v43 = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v18);
    else
      *(_DWORD *)v22 -= 2;
  }
  v16 = v44;
LABEL_43:
  v44 = 0;
  if (!v16)
  {
    v31 = 0;
    goto LABEL_54;
  }
  v23 = (uint64_t *)((char *)v16 + 8);
  v24 = *(unsigned int *)v16;
  if ((_DWORD)v24)
  {
    v25 = 8 * v24;
    do
    {
      v26 = *v23;
      if (*v23)
      {
        v27 = (uint64_t *)(v26 - 16);
        v28 = *(_QWORD *)(((v26 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
        v29 = *(uint64_t **)(v26 - 8);
        if (v29)
        {
          v30 = *v27;
          *v29 = *v27;
          *(_QWORD *)(v30 + 8) = v29;
          *v27 = 0;
          v27[1] = 0;
        }
        *v27 = *(_QWORD *)(v28 + 40);
        *(_QWORD *)(v28 + 40) = v27;
        *v23 = 0;
      }
      ++v23;
      v25 -= 8;
    }
    while (v25);
  }
  WTF::fastFree(v16, v18);
  v31 = v46;
  if (v46 != -1)
    goto LABEL_54;
  return (_BYTE *)v20;
}

_BYTE *WebCore::jsHTMLCanvasElementPrototypeFunction_toDataURL(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  unsigned __int8 *v27;
  unsigned int v28;
  WTF::StringImpl *v29;
  JSValue v30;
  WTF::StringImpl *v31;
  int hasExceptionsAfterHandlingTraps;
  WebCore *v33;
  JSC::JSGlobalObject *v34;
  JSC::CallFrame *v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  int v38[2];
  WTF::StringImpl *v39;
  int v40;
  uint64_t v41;
  int v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;

  v4 = *((_QWORD *)this + 7);
  v36 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "HTMLCanvasElement", "toDataURL");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLCanvasElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLCanvasElement::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "HTMLCanvasElement", "toDataURL");
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_DWORD *)a2 + 8);
  if (v13 == 1 || (v14 = *((_QWORD *)a2 + 6), v14 == 10))
  {
    v15 = 0;
    v42 = 0;
    goto LABEL_24;
  }
  *(_QWORD *)v38 = *((_QWORD *)a2 + 6);
  if ((v14 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v14 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v38, this);
    goto LABEL_21;
  }
  v16 = *(WTF::StringImpl **)(v14 + 8);
  if ((v16 & 1) != 0)
  {
    v16 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v14, this);
    if (!v16)
      goto LABEL_20;
    goto LABEL_19;
  }
  if (v16)
LABEL_19:
    *(_DWORD *)v16 += 2;
LABEL_20:
  v43 = v16;
LABEL_21:
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v15 = v43;
    if (hasExceptionsAfterHandlingTraps)
    {
      v42 = 1;
      v43 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v31);
        else
          *(_DWORD *)v15 -= 2;
      }
      v22 = 0;
      v25 = 1;
      goto LABEL_40;
    }
  }
  else
  {
    v15 = v43;
  }
  v42 = 0;
  v13 = *((_DWORD *)a2 + 8);
LABEL_24:
  if ((unint64_t)(v13 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v17 = 10;
  else
    v17 = *((_QWORD *)a2 + 7);
  v41 = 0;
  v37 = v15;
  WebCore::HTMLCanvasElement::toDataURL(v12, (WTF::String *)&v37, v17, (uint64_t)v38);
  if (!v40)
  {
    v19 = *(_QWORD *)v38;
    *(_QWORD *)v38 = 0;
    v20 = *((_QWORD *)this + 7);
    if (!v19)
    {
      v22 = *(_QWORD *)(v20 + 41968);
LABEL_34:
      if (v40 != -1)
        ((void (*)(WTF::StringImpl **, int *))off_1E328D2F8[v40])(&v43, v38);
      v40 = -1;
      v24 = v37;
      v37 = 0;
      if (v24)
      {
        if (*(_DWORD *)v24 == 2)
          WTF::StringImpl::destroy(v24, v18);
        else
          *(_DWORD *)v24 -= 2;
      }
      v25 = 0;
LABEL_40:
      ((void (*)(int *, uint64_t *))off_1E328A618[v25])(v38, &v41);
      return (_BYTE *)v22;
    }
    v21 = *(_DWORD *)(v19 + 4);
    if (v21 == 1)
    {
      v27 = *(unsigned __int8 **)(v19 + 8);
      if ((*(_BYTE *)(v19 + 16) & 4) != 0)
      {
        v28 = *v27;
      }
      else
      {
        v28 = *(unsigned __int16 *)v27;
        if (v28 > 0xFF)
        {
LABEL_31:
          *(_DWORD *)v19 += 2;
          v43 = (WTF::StringImpl *)v19;
          v22 = JSC::JSString::create(v20, &v43);
          v23 = v43;
          v43 = 0;
          if (v23)
          {
            if (*(_DWORD *)v23 == 2)
              WTF::StringImpl::destroy(v23, v18);
            else
              *(_DWORD *)v23 -= 2;
          }
          goto LABEL_32;
        }
        v28 = v28;
      }
      v22 = *(_QWORD *)(v20 + 8 * v28 + 42216);
    }
    else
    {
      if (v21)
        goto LABEL_31;
      v22 = *(_QWORD *)(v20 + 41968);
    }
LABEL_32:
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v19, v18);
    else
      *(_DWORD *)v19 -= 2;
    goto LABEL_34;
  }
  if (v40 == 1)
  {
    v18 = (WTF::StringImpl *)LOBYTE(v38[0]);
    LOBYTE(v43) = v38[0];
    v29 = v39;
    v39 = 0;
    v44 = v29;
    if (!*(_QWORD *)(v4 + 16))
    {
      v30.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v38[0]), (JSC::JSGlobalObject *)&v44);
      JSC::VM::throwException((JSC::VM *)v4, this, v30);
      v29 = v44;
    }
    v44 = 0;
    if (v29)
    {
      if (*(_DWORD *)v29 == 2)
        WTF::StringImpl::destroy(v29, v18);
      else
        *(_DWORD *)v29 -= 2;
    }
    v22 = 0;
    goto LABEL_34;
  }
  v33 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsHTMLCanvasElementPrototypeFunction_toBlob(v33, v34, v35);
}

_BYTE *WebCore::jsHTMLCanvasElementPrototypeFunction_toBlob(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  WTF::StringImpl *v17;
  unint64_t v18;
  WebCore::JSDOMGlobalObject *v19;
  unsigned int v20;
  WebCore::JSBlobCallback *v21;
  uint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  JSValue v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  JSValue v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v43;
  uint64_t v44;
  int v45;
  WebCore::JSBlobCallback *v46;
  int v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  int v50[2];
  WTF::StringImpl *v51;
  char v52;
  WTF::StringImpl *v53;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v43 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "HTMLCanvasElement", "toBlob");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSHTMLCanvasElement::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSHTMLCanvasElement::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "HTMLCanvasElement", "toBlob");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v36);
  }
  v17 = *(WTF::StringImpl **)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  v19 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v48 = v9;
  if ((v18 & 0xFFFE000000000002) != 0
    || (v20 = *(unsigned __int8 *)(v18 + 5), v20 < 0x17)
    || (v20 & 0xFE) != 0x1A
    && ((*(_BYTE *)(v18 + 6) & 4) == 0
     || ((*(void (**)(int *__return_ptr, unint64_t))(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)v18 & 0xFFFFFFFE)
                                                                                       + 0x4C)
                                                                     + 0x38))(v50, v18), !LOBYTE(v50[0]))))
  {
    WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)&v48, 0, "callback", 9, "HTMLCanvasElement", 18, a8, "toBlob", 7);
    v31 = 0;
    v33 = 1;
    v47 = 1;
    goto LABEL_41;
  }
  v21 = (WebCore::JSBlobCallback *)WTF::fastMalloc((WTF *)0x20);
  v46 = WebCore::JSBlobCallback::JSBlobCallback(v21, v18, v19);
  v47 = 0;
  v22 = *((int *)a2 + 8);
  if ((unint64_t)(v22 - 3) >= 0xFFFFFFFFFFFFFFFELL || (v23 = *((_QWORD *)a2 + 7), v23 == 10))
  {
    v24 = 0;
    v45 = 0;
    goto LABEL_28;
  }
  *(_QWORD *)v50 = *((_QWORD *)a2 + 7);
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v23 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v23 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v50, this);
    goto LABEL_25;
  }
  v26 = *(WTF::StringImpl **)(v23 + 8);
  if ((v26 & 1) != 0)
  {
    v26 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v23, this);
    if (!v26)
      goto LABEL_24;
    goto LABEL_23;
  }
  if (v26)
LABEL_23:
    *(_DWORD *)v26 += 2;
LABEL_24:
  v48 = v26;
LABEL_25:
  if (*((_DWORD *)v25 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
    v24 = v48;
    if (hasExceptionsAfterHandlingTraps)
    {
      v45 = 1;
      v48 = 0;
      if (v24)
      {
        if (*(_DWORD *)v24 == 2)
          WTF::StringImpl::destroy(v24, v41);
        else
          *(_DWORD *)v24 -= 2;
      }
      v31 = 0;
      v32 = 1;
      goto LABEL_40;
    }
  }
  else
  {
    v24 = v48;
  }
  v45 = 0;
  v22 = *((int *)a2 + 8);
LABEL_28:
  if ((unint64_t)(v22 - 4) > 0xFFFFFFFFFFFFFFFCLL)
    v27 = 10;
  else
    v27 = *((_QWORD *)a2 + 8);
  v46 = 0;
  v48 = v21;
  v44 = 0;
  v53 = v24;
  WebCore::HTMLCanvasElement::toBlob((WTF::ASCIICaseInsensitiveHash *)&v53, v17, (uint64_t *)&v48, v27, (uint64_t)v50);
  v29 = v53;
  v53 = 0;
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v28);
    else
      *(_DWORD *)v29 -= 2;
  }
  v30 = v48;
  v48 = 0;
  if (v30)
  {
    if (*((_DWORD *)v30 + 4) == 1)
      (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v30 + 16))(v30);
    else
      --*((_DWORD *)v30 + 4);
  }
  if (v52)
  {
    v37 = (WTF::StringImpl *)LOBYTE(v50[0]);
    LOBYTE(v48) = v50[0];
    v38 = v51;
    v51 = 0;
    v49 = v38;
    if (!*((_QWORD *)v9 + 2))
    {
      v39.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v50[0]), (JSC::JSGlobalObject *)&v49);
      JSC::VM::throwException(v9, this, v39);
      v38 = v49;
    }
    v49 = 0;
    if (v38)
    {
      if (*(_DWORD *)v38 == 2)
        WTF::StringImpl::destroy(v38, v37);
      else
        *(_DWORD *)v38 -= 2;
    }
    if (v52)
    {
      v40 = v51;
      v51 = 0;
      if (v40)
      {
        if (*(_DWORD *)v40 != 2)
        {
          v31 = 0;
          *(_DWORD *)v40 -= 2;
          goto LABEL_39;
        }
        WTF::StringImpl::destroy(v40, v37);
      }
    }
    v31 = 0;
    goto LABEL_39;
  }
  v31 = 10;
LABEL_39:
  v32 = 0;
LABEL_40:
  ((void (*)(int *, uint64_t *))off_1E328A618[v32])(v50, &v44);
  v33 = 0;
LABEL_41:
  ((void (*)(int *, WebCore::JSBlobCallback **))off_1E328D308[v33])(v50, &v46);
  return (_BYTE *)v31;
}

_BYTE *WebCore::jsHTMLCanvasElementPrototypeFunction_transferControlToOffscreen(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WebCore::OffscreenCanvas *v13;
  uint64_t v14;
  WebCore::OffscreenCanvas *v15;
  bmalloc::api *v17;
  void *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WebCore *v22;
  JSC::JSGlobalObject *v23;
  JSC::CallFrame *v24;
  JSC::VM *v25;
  int v26[2];
  WTF::StringImpl *v27;
  unsigned int v28;
  WebCore::OffscreenCanvas *v29;
  WTF::StringImpl *v30;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "HTMLCanvasElement", "transferControlToOffscreen");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLCanvasElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLCanvasElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "HTMLCanvasElement", "transferControlToOffscreen");
  v11 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLCanvasElement::transferControlToOffscreen(*(WebCore::PlaceholderRenderingContext **)(v4 + 24), (uint64_t)v26);
  v12 = v28;
  if (!v28)
  {
    v13 = *(WebCore::OffscreenCanvas **)v26;
    *(_QWORD *)v26 = 0;
    v29 = v13;
    v14 = WebCore::toJSNewlyCreated((uint64_t)this, v11, (uint64_t *)&v29);
    v15 = v29;
    v29 = 0;
    if (v15)
    {
      if (*((_DWORD *)v15 + 6) == 1)
      {
        WebCore::OffscreenCanvas::~OffscreenCanvas(v15);
        bmalloc::api::isoDeallocate(v17, v18);
      }
      else
      {
        --*((_DWORD *)v15 + 6);
      }
    }
LABEL_16:
    ((void (*)(WebCore::OffscreenCanvas **, int *))off_1E328D318[v12])(&v29, v26);
    return (_BYTE *)v14;
  }
  if (v28 == 1)
  {
    v19 = (WTF::StringImpl *)LOBYTE(v26[0]);
    LOBYTE(v29) = v26[0];
    v20 = v27;
    v27 = 0;
    v30 = v20;
    if (!*((_QWORD *)v5 + 2))
    {
      v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v26[0]), (JSC::JSGlobalObject *)&v30);
      JSC::VM::throwException(v5, this, v21);
      v20 = v30;
    }
    v30 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v19);
      else
        *(_DWORD *)v20 -= 2;
    }
    v14 = 0;
    goto LABEL_16;
  }
  v22 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsHTMLCanvasElementPrototypeFunction_captureStream(v22, v23, v24);
}

void WebCore::jsHTMLCanvasElementPrototypeFunction_captureStream(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  JSC::VM *v16;
  WebCore::MediaStream *v17;
  WebCore::MediaStream *v18;
  bmalloc::api *v19;
  void *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  JSValue v23;
  char hasExceptionsAfterHandlingTraps;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  double v28;
  uint64_t v29;
  _QWORD v30[2];
  int v31[2];
  WTF::StringImpl *v32;
  int v33;
  WebCore::MediaStream *v34;
  WTF::StringImpl *v35;

  v4 = *((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    goto LABEL_31;
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLCanvasElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLCanvasElement::s_info && v9 != 0);
  }
  if (!v8)
  {
LABEL_31:
    WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLCanvasElement", "captureStream");
    return;
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = 0.0;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15 = 0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    if (v14 == 10)
    {
      v15 = 0;
    }
    else
    {
      *(_QWORD *)v31 = *((_QWORD *)a2 + 6);
      v34 = (WebCore::MediaStream *)v4;
      if (v14 >= 0xFFFE000000000000)
      {
        v13 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v31, this);
      }
      else
      {
        *(_QWORD *)&v13 = v14 - 0x2000000000000;
      }
      if (*(_DWORD *)(v4 + 80))
      {
        v28 = v13;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        v13 = v28;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          return;
      }
      if ((*(_QWORD *)&v13 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
      {
        JSC::throwTypeError();
        return;
      }
      v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
      v15 = 1;
    }
  }
  v16 = *(JSC::VM **)(v6 + 40);
  *(double *)v30 = v13;
  v30[1] = v15;
  WebCore::HTMLCanvasElement::captureStream(v12, (uint64_t)v30, (uint64_t)v31);
  if (v33)
  {
    if (v33 != 1)
    {
      v25 = std::__throw_bad_variant_access[abi:sn180100]();
      _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS14_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEEOS1C_EEEDcS14_DpT0_(v25, v26, v27);
      return;
    }
    v21 = (WTF::StringImpl *)LOBYTE(v31[0]);
    LOBYTE(v34) = v31[0];
    v22 = v32;
    v32 = 0;
    v35 = v22;
    if (!*(_QWORD *)(v4 + 16))
    {
      v23.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v31[0]), (JSC::JSGlobalObject *)&v35);
      JSC::VM::throwException((JSC::VM *)v4, this, v23);
      v22 = v35;
    }
    v35 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v21);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  else
  {
    v17 = *(WebCore::MediaStream **)v31;
    *(_QWORD *)v31 = 0;
    v34 = v17;
    WebCore::toJSNewlyCreated((int)this, v16, &v34);
    v18 = v34;
    v34 = 0;
    if (v18)
    {
      if (*((_DWORD *)v18 + 22) == 1)
      {
        WebCore::MediaStream::~MediaStream(v18);
        bmalloc::api::isoDeallocate(v19, v20);
      }
      else
      {
        --*((_DWORD *)v18 + 22);
      }
    }
  }
  if (v33 != -1)
    ((void (*)(WebCore::MediaStream **, int *))off_1E328D328[v33])(&v34, v31);
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS14_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEEOS1C_EEEDcS14_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS14_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEEOS1C_EEEDcS14_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS14_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEEOS1C_EEEDcS14_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS14_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEEOS1C_EEEDcS14_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4ELm4EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS14_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEEOS1C_EEEDcS14_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalINS_7variantIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENSA_12RawPtrTraitsISD_EENSA_21DefaultRefDerefTraitsISD_EEEENSB_INSC_22WebGL2RenderingContextENSE_ISJ_EENSG_ISJ_EEEENSB_INSC_16GPUCanvasContextENSE_ISN_EENSG_ISN_EEEENSB_INSC_27ImageBitmapRenderingContextENSE_ISR_EENSG_ISR_EEEENSB_INSC_24CanvasRenderingContext2DENSE_ISV_EENSG_ISV_EEEEEEEEENSC_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS13_1EJS10_S11_EEEEEEDcS15_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  if (*(_BYTE *)(a2 + 16))
  {
    v3 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E328D270[v3])(&v5, a2);
    *(_DWORD *)(a2 + 8) = -1;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalINS_7variantIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENSA_12RawPtrTraitsISD_EENSA_21DefaultRefDerefTraitsISD_EEEENSB_INSC_22WebGL2RenderingContextENSE_ISJ_EENSG_ISJ_EEEENSB_INSC_16GPUCanvasContextENSE_ISN_EENSG_ISN_EEEENSB_INSC_27ImageBitmapRenderingContextENSE_ISR_EENSG_ISR_EEEENSB_INSC_24CanvasRenderingContext2DENSE_ISV_EENSG_ISV_EEEEEEEEENSC_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS13_1EJS10_S11_EEEEEEDcS15_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore14UncachedStringENS8_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore14UncachedStringENS8_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14JSBlobCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

WebCore::OffscreenCanvas *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15OffscreenCanvasENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::OffscreenCanvas **a2)
{
  WebCore::OffscreenCanvas *result;
  bmalloc::api *v3;
  void *v4;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::OffscreenCanvas::~OffscreenCanvas(result);
      return (WebCore::OffscreenCanvas *)bmalloc::api::isoDeallocate(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15OffscreenCanvasENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::MediaStream *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11MediaStreamENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::MediaStream **a2)
{
  WebCore::MediaStream *result;
  bmalloc::api *v3;
  void *v4;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 22) == 1)
    {
      WebCore::MediaStream::~MediaStream(result);
      return (WebCore::MediaStream *)bmalloc::api::isoDeallocate(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 22);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11MediaStreamENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSGPURenderPassEncoder::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGPURenderPipeline::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGPUSampler::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGPUShaderModule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WTF::Vector<WTF::KeyValuePair<WTF::String,WebCore::GPUShaderModuleCompilationHint>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(unsigned int *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 24 * (unint64_t)a1[3] <= a3)
  {
    v9 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v9 >= 0x10)
      v10 = v9 + 1;
    else
      v10 = 16;
    if (v10 > a2)
      a2 = v10;
    WTF::Vector<WTF::KeyValuePair<WTF::String,WebCore::GPUShaderModuleCompilationHint>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    v7 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v7 >= 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    if (v8 > a2)
      a2 = v8;
    WTF::Vector<WTF::KeyValuePair<WTF::String,WebCore::GPUShaderModuleCompilationHint>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

unsigned int *WTF::Vector<WTF::KeyValuePair<WTF::String,WebCore::GPUShaderModuleCompilationHint>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(unsigned int *result, unint64_t a2)
{
  unsigned int *v2;
  WTF *v3;
  uint64_t v4;
  int v5;
  WTF::StringImpl *v6;
  unsigned int *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  char v16;
  char v17;

  if (result[2] < a2)
  {
    if (a2 >= 0xAAAAAAB)
    {
      __break(0xC471u);
    }
    else
    {
      v2 = result;
      v3 = *(WTF **)result;
      v4 = result[3];
      v5 = 24 * a2;
      result = (unsigned int *)WTF::fastMalloc((WTF *)(24 * a2));
      v2[2] = (v5 & 0xFFFFFFF8) / 0x18;
      v15 = v2;
      *(_QWORD *)v2 = result;
      if ((_DWORD)v4)
      {
        v7 = result;
        v8 = 0;
        v9 = 24 * v4;
        do
        {
          v10 = &v7[v8 / 4];
          v11 = (char *)v3 + v8;
          v12 = *(_QWORD *)((char *)v3 + v8);
          *(_QWORD *)((char *)v3 + v8) = 0;
          *(_QWORD *)v10 = v12;
          LOBYTE(v7[v8 / 4 + 2]) = 0;
          v6 = (WTF::StringImpl *)&v7[v8 / 4 + 2];
          v10[4] = -1;
          v13 = *(unsigned int *)((char *)v3 + v8 + 16);
          if ((_DWORD)v13 != -1)
          {
            ((void (*)(char *, WTF::StringImpl *, char *))off_1E328A6B0[v13])(&v16, v6, v11 + 8);
            v10[4] = v13;
            v14 = *((unsigned int *)v11 + 4);
            if ((_DWORD)v14 != -1)
              ((void (*)(char *, char *))off_1E328A6A0[v14])(&v17, v11 + 8);
          }
          *((_DWORD *)v11 + 4) = -1;
          result = *(unsigned int **)((char *)v3 + v8);
          *(_QWORD *)((char *)v3 + v8) = 0;
          if (result)
          {
            if (*result == 2)
              result = (unsigned int *)WTF::StringImpl::destroy((WTF::StringImpl *)result, v6);
            else
              *result -= 2;
          }
          v8 += 24;
        }
        while (v9 != v8);
      }
      if (v3)
      {
        if (*(WTF **)v15 == v3)
        {
          *(_QWORD *)v15 = 0;
          v15[2] = 0;
        }
        return (unsigned int *)WTF::fastFree(v3, v6);
      }
    }
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore30GPUShaderModuleCompilationHintENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E328A6A0[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

uint64_t WebCore::JSGPUSupportedFeatures::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGPUSupportedLimits::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGPUTexture::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGPUTextureView::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_19GPUOutOfMemoryErrorEEENS4_INS_18GPUValidationErrorEEENS4_INS_16GPUInternalErrorEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSK_12RawPtrTraitsIS5_EENSK_21DefaultRefDerefTraitsIS5_EEEENSL_IS7_NSM_IS7_EENSO_IS7_EEEENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENS11_IlLl1EEENS11_IlLl2EEEEEET_S15_@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t *v12;
  uint64_t v13;
  JSC::JSCell *v14;

  v2 = result;
  v4 = **(_QWORD **)result;
  if (!v4)
  {
    v5 = *(_QWORD *)(result + 32);
    if (*(_DWORD *)(v5 + 8))
      goto LABEL_26;
    if (*(_QWORD *)v5)
      result = WebCore::wrap<WebCore::GPUOutOfMemoryError>(*(_QWORD *)(result + 16), *(_QWORD *)(result + 24), *(WTF **)v5);
    else
      result = 2;
    v6 = *(_QWORD *)(v2 + 8);
    if (!*(_BYTE *)(v6 + 8))
      *(_BYTE *)(v6 + 8) = 1;
    *(_QWORD *)v6 = result;
    v4 = **(_QWORD **)v2;
  }
  if (v4 == 1)
  {
    v7 = *(_QWORD *)(v2 + 32);
    if (*(_DWORD *)(v7 + 8) != 1)
      goto LABEL_26;
    if (*(_QWORD *)v7)
      result = WebCore::toJS(result, *(_QWORD *)(v2 + 24), *(WTF **)v7);
    else
      result = 2;
    v8 = *(_QWORD *)(v2 + 8);
    if (!*(_BYTE *)(v8 + 8))
      *(_BYTE *)(v8 + 8) = 1;
    *(_QWORD *)v8 = result;
    v4 = **(_QWORD **)v2;
  }
  if (v4 != 2)
  {
LABEL_25:
    v11 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v2;
    *(_OWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(v2 + 32);
    return result;
  }
  v9 = *(_QWORD *)(v2 + 32);
  if (*(_DWORD *)(v9 + 8) == 2)
  {
    if (*(_QWORD *)v9)
      result = WebCore::toJS(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(WTF **)v9);
    else
      result = 2;
    v10 = *(_QWORD *)(v2 + 8);
    if (!*(_BYTE *)(v10 + 8))
      *(_BYTE *)(v10 + 8) = 1;
    *(_QWORD *)v10 = result;
    goto LABEL_25;
  }
LABEL_26:
  v12 = (uint64_t *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSGPUValidationError::createStructure(v12, v13, v14);
}

uint64_t WebCore::JSGPUValidationError::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLNullable<WebCore::IDLDictionary<WebCore::GPUVertexBufferLayout>>>::convert(JSC::VM **a1, JSC::JSCell *this, unsigned int *a3)
{
  unsigned int v3;
  WTF *v4;
  unsigned int v5;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t Object;
  JSC::Structure *v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  char *v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  WTF *v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  int v32;
  JSC::VM *v34;
  JSValue v35;
  unsigned int v36;
  unsigned int i;
  unsigned int v38;
  JSC::JSCell *IndexQuickly;
  char *v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  char *v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  WTF *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  JSC::JSCell *v53;
  int v54;
  char *v55;
  char *v56;
  uint64_t v57;
  __int128 v58;
  char *v59;
  unsigned int v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  uint64_t v63;
  char v64;
  JSC::VM *v65;
  WTF *v66;
  int v67;
  const char *v68;
  int v69;
  int v70;
  char **v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  void *v77;
  WTF::StringImpl *v79;
  WTF *v80;
  WTF::StringImpl *v81;
  char v82;
  WTF *v83;
  unint64_t v84;
  int v85;
  WTF::StringImpl *v86;
  int v87;
  JSC::VM *v88;
  JSC::VM *v89;
  WTF *v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  WTF::StringImpl *v94[2];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  int v99;
  uint64_t v100;

  v100 = *MEMORY[0x1E0C80C00];
  v7 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    LOBYTE(v94[1]) = 0;
    v98 = 0;
    v99 = 0;
    LOBYTE(v81) = 0;
    LOBYTE(v85) = 0;
    goto LABEL_3;
  }
  v88 = a1[7];
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    JSC::throwTypeError();
    goto LABEL_29;
  }
  v17 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v19 = JSC::JSObject::get(v17, (JSC::JSGlobalObject *)a1, (unint64_t)v94[0]);
  if (v94[0])
  {
    if (*(_DWORD *)v94[0] == 2)
      WTF::StringImpl::destroy(v94[0], v18);
    else
      *(_DWORD *)v94[0] -= 2;
  }
  if (*((_DWORD *)v88 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v88))
    goto LABEL_29;
  if (v19 == 10)
  {
    v20 = "arrayStride";
    v21 = "unsigned long long";
    v22 = (int)a1;
    v23 = 12;
    v24 = 19;
LABEL_28:
    WebCore::throwRequiredMemberTypeError(v22, (int)&v88, v20, v23, "GPUVertexBufferLayout", 22, v21, v24);
LABEL_29:
    v85 = 1;
    v32 = 1;
    v99 = 1;
LABEL_30:
    ((void (*)(__int128 *, WTF::StringImpl **))off_1E328D348[v32])(&v92, &v81);
    v27 = 1;
    return ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328D358[v27])(&v81, &v94[1]);
  }
  WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLongLong>((WTF::StringImpl *)a1, v19, (uint64_t)&v86);
  if (v87)
    goto LABEL_29;
  v28 = v86;
  WTF::AtomStringImpl::addLiteral();
  v29 = v94[0];
  v31 = JSC::JSObject::get(v17, (JSC::JSGlobalObject *)a1, (unint64_t)v94[0]);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v30);
    else
      *(_DWORD *)v29 -= 2;
  }
  if (*((_DWORD *)v88 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v88) & 1) != 0)
    goto LABEL_29;
  if (v31 == 10)
  {
    v20 = "attributes";
    v21 = "sequence";
    v22 = (int)a1;
    v23 = 11;
    v24 = 9;
    goto LABEL_28;
  }
  v34 = a1[7];
  v89 = v34;
  if ((v31 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v31 + 5) <= 0x16u)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    v46 = v94[0];
    v94[0] = 0;
    if (v46)
    {
      if (*(_DWORD *)v46 == 2)
        WTF::StringImpl::destroy(v46, v45);
      else
        *(_DWORD *)v46 -= 2;
    }
    LODWORD(v95) = 1;
    goto LABEL_56;
  }
  v90 = 0;
  v91 = 0;
  if (JSC::getIterationMode() == 2)
  {
    v79 = v28;
    v80 = 0;
    v36 = 0;
    for (i = 1; ; ++i)
    {
      if ((*(_BYTE *)(v31 + 4) & 0xE) != 0)
        v38 = *(_DWORD *)(*(_QWORD *)(v31 + 8) - 8);
      else
        v38 = 0;
      if (i - 1 >= v38)
        goto LABEL_75;
      IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v31, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)v31, (JSC::JSGlobalObject *)a1, i - 1);
      if (*((_DWORD *)v34 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v34) & 1) != 0)
      {
LABEL_75:
        LODWORD(v49) = v36;
        goto LABEL_76;
      }
      WebCore::convertDictionary<WebCore::GPUVertexAttribute>((uint64_t)v94, a1, IndexQuickly);
      if (!(_DWORD)v96)
      {
        v92 = *(_OWORD *)v94;
        v93 = v95;
        if (v36 == (_DWORD)v91)
        {
          v40 = WTF::Vector<std::optional<std::pair<WTF::ObjectIdentifierGeneric<WebCore::AttributedStringTextTableBlockIDType,WTF::ObjectIdentifierMainThreadAccessTraits<unsigned long long>,unsigned long long>,WTF::ObjectIdentifierGeneric<WebCore::AttributedStringTextTableIDType,WTF::ObjectIdentifierMainThreadAccessTraits<unsigned long long>,unsigned long long>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v90, v36 + 1, (unint64_t)&v92);
          v36 = HIDWORD(v91);
          v80 = v90;
          v41 = (char *)v90 + 24 * HIDWORD(v91);
          v42 = *((_QWORD *)v40 + 2);
          *(_OWORD *)v41 = *(_OWORD *)v40;
          *((_QWORD *)v41 + 2) = v42;
        }
        else
        {
          v43 = *(_OWORD *)v94;
          v44 = (char *)v80 + 24 * v36;
          *((_QWORD *)v44 + 2) = v95;
          *(_OWORD *)v44 = v43;
        }
        HIDWORD(v91) = ++v36;
      }
      if (*((_QWORD *)v34 + 2))
        break;
    }
    v74 = JSC::JSArrayIterator::create();
    if ((i & 0x80000000) != 0)
      v75 = COERCE__INT64((double)i) + 0x2000000000000;
    else
      v75 = i | 0xFFFE000000000000;
    *(_QWORD *)(v74 + 16) = v75;
LABEL_130:
    JSC::iteratorClose();
    LODWORD(v49) = v36;
LABEL_76:
    v28 = v79;
  }
  else
  {
    JSC::iteratorForIterable((JSC *)a1, (JSC::JSGlobalObject *)v31, v35);
    if (*((_DWORD *)v34 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v34) & 1) != 0)
    {
      LODWORD(v49) = 0;
      v80 = 0;
    }
    else
    {
      v80 = 0;
      v49 = 0;
      while (1)
      {
        v50 = JSC::iteratorStep();
        if (*((_QWORD *)v34 + 2) || v50 == 6)
          break;
        v52 = v49;
        v53 = (JSC::JSCell *)JSC::iteratorValue();
        if (*((_DWORD *)v34 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v34) & 1) != 0)
        {
          LODWORD(v49) = v52;
          break;
        }
        WebCore::convertDictionary<WebCore::GPUVertexAttribute>((uint64_t)v94, a1, v53);
        if ((_DWORD)v96)
        {
          v49 = v52;
        }
        else
        {
          v92 = *(_OWORD *)v94;
          v93 = v95;
          v54 = v52;
          if ((_DWORD)v52 == (_DWORD)v91)
          {
            v55 = WTF::Vector<std::optional<std::pair<WTF::ObjectIdentifierGeneric<WebCore::AttributedStringTextTableBlockIDType,WTF::ObjectIdentifierMainThreadAccessTraits<unsigned long long>,unsigned long long>,WTF::ObjectIdentifierGeneric<WebCore::AttributedStringTextTableIDType,WTF::ObjectIdentifierMainThreadAccessTraits<unsigned long long>,unsigned long long>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v90, v52 + 1, (unint64_t)&v92);
            v54 = HIDWORD(v91);
            v80 = v90;
            v56 = (char *)v90 + 24 * HIDWORD(v91);
            v57 = *((_QWORD *)v55 + 2);
            *(_OWORD *)v56 = *(_OWORD *)v55;
            *((_QWORD *)v56 + 2) = v57;
          }
          else
          {
            v58 = *(_OWORD *)v94;
            v59 = (char *)v80 + 24 * v52;
            *((_QWORD *)v59 + 2) = v95;
            *(_OWORD *)v59 = v58;
          }
          v49 = (v54 + 1);
          HIDWORD(v91) = v49;
        }
        if (*((_QWORD *)v34 + 2))
        {
          v79 = v28;
          v36 = v49;
          goto LABEL_130;
        }
      }
    }
  }
  if (*((_DWORD *)v34 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v34))
  {
    LODWORD(v95) = 1;
    if (v80)
    {
      v90 = 0;
      LODWORD(v91) = 0;
      WTF::fastFree(v80, v77);
    }
LABEL_56:
    v47 = 0;
    v32 = 1;
    v48 = 1;
    goto LABEL_107;
  }
  v60 = v91;
  LODWORD(v95) = 0;
  v94[0] = 0;
  v94[1] = 0;
  WTF::AtomStringImpl::addLiteral();
  v61 = (WTF::StringImpl *)v92;
  v63 = JSC::JSObject::get(v17, (JSC::JSGlobalObject *)a1, v92);
  if (v61)
  {
    if (*(_DWORD *)v61 == 2)
      WTF::StringImpl::destroy(v61, v62);
    else
      *(_DWORD *)v61 -= 2;
  }
  if (*((_DWORD *)v88 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v88) & 1) != 0)
    goto LABEL_157;
  if (v63 == 10)
  {
    v64 = 0;
LABEL_106:
    v32 = 0;
    v48 = 0;
    v81 = v28;
    v82 = v64;
    v83 = v80;
    v84 = __PAIR64__(v49, v60);
    v47 = 0;
    goto LABEL_107;
  }
  v65 = a1[7];
  v89 = v65;
  *(_QWORD *)&v92 = v63;
  if ((v63 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v63 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v92, (JSC::JSGlobalObject *)a1);
    v66 = v90;
    if (v90)
      goto LABEL_90;
LABEL_126:
    v64 = 0;
    v70 = 0;
    goto LABEL_104;
  }
  v66 = *(WTF **)(v63 + 8);
  if ((v66 & 1) == 0)
  {
    if (!v66)
      goto LABEL_89;
    goto LABEL_88;
  }
  v66 = *(WTF **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v63, (JSC::JSGlobalObject *)a1);
  if (v66)
LABEL_88:
    *(_DWORD *)v66 += 2;
LABEL_89:
  v90 = v66;
  if (!v66)
    goto LABEL_126;
LABEL_90:
  v67 = *((_DWORD *)v66 + 4);
  v68 = (const char *)*((_QWORD *)v66 + 1);
  v69 = *((_DWORD *)v66 + 1);
  if (v68 == "instance" || v69 != 8)
  {
    if (v68 != "instance" || v69 != 8)
    {
      if (v68 == "vertex" || v69 != 6)
      {
        if (v69 != 6 || v68 != "vertex")
          goto LABEL_96;
      }
      else if ((v67 & 4) != 0)
      {
        if (*v68 != 118 || *(_DWORD *)(v68 + 1) != 1702130277 || *(_DWORD *)(v68 + 2) != 2019914866)
          goto LABEL_96;
      }
      else
      {
        if (*(_WORD *)v68 != 118)
          goto LABEL_96;
        if (*(_QWORD *)(v68 + 4) != 0x78006500740072 || *(_QWORD *)(v68 + 2) != 0x65007400720065)
          goto LABEL_96;
      }
      v71 = &off_1E3286F30;
      goto LABEL_101;
    }
    goto LABEL_100;
  }
  if ((v67 & 4) != 0)
  {
    if (*v68 != 105 || *(_DWORD *)(v68 + 1) != 1635021678 || *((_DWORD *)v68 + 1) != 1701015137)
      goto LABEL_96;
    goto LABEL_100;
  }
  if (*(_WORD *)v68 != 105)
  {
LABEL_96:
    v70 = 0;
    v64 = 0;
    goto LABEL_102;
  }
  v70 = 0;
  if (*(_QWORD *)(v68 + 2) != 0x6100740073006ELL)
  {
    v64 = 0;
    goto LABEL_102;
  }
  v64 = 0;
  if (*((_QWORD *)v68 + 1) == 0x650063006E0061)
  {
LABEL_100:
    v71 = &WebCore::parseEnumerationFromString<WebCore::GPUVertexStepMode>(WTF::String const&)::mappings;
LABEL_101:
    v64 = *((_BYTE *)v71 + 16);
    v70 = 1;
  }
LABEL_102:
  v90 = 0;
  if (*(_DWORD *)v66 == 2)
    WTF::StringImpl::destroy(v66, v62);
  else
    *(_DWORD *)v66 -= 2;
LABEL_104:
  if (!*((_DWORD *)v65 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v65) & 1) == 0)
  {
    if (v70)
      goto LABEL_106;
    JSC::throwTypeError();
  }
LABEL_157:
  v48 = 0;
  v32 = 1;
  v47 = v80;
LABEL_107:
  v85 = v32;
  v72 = ((uint64_t (*)(__int128 *, WTF::StringImpl **))off_1E328B4D8[v48])(&v92, v94);
  if (v47)
  {
    v72 = WTF::fastFree(v47, v73);
    v32 = v85;
  }
  if (v32)
  {
    v99 = 1;
    goto LABEL_30;
  }
  v4 = v83;
  v83 = 0;
  v5 = v84;
  v3 = HIDWORD(v84);
  v84 = 0;
  v94[1] = v81;
  LOBYTE(v95) = v82;
  v98 = 1;
  v99 = 0;
  _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore21GPUVertexBufferLayoutENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(v72, (uint64_t)&v81);
  v81 = v94[1];
  v82 = v95;
  v96 = 0;
  v83 = v4;
  v97 = 0;
  v84 = __PAIR64__(v3, v5);
  LOBYTE(v85) = 1;
LABEL_3:
  v8 = a3[3];
  if ((_DWORD)v8 == a3[2])
  {
    v9 = WTF::Vector<std::optional<WebCore::GPUVertexBufferLayout>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v8 + 1, (unint64_t)&v81);
    v10 = *(_QWORD *)a3 + 40 * a3[3];
    *(_BYTE *)v10 = 0;
    *(_BYTE *)(v10 + 32) = 0;
    if (!*(_BYTE *)(v9 + 32))
      goto LABEL_17;
    v11 = *(_QWORD *)v9;
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)v10 = v11;
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    LODWORD(v11) = *(_DWORD *)(v9 + 24);
    *(_DWORD *)(v9 + 24) = 0;
    *(_DWORD *)(v10 + 24) = v11;
    v13 = *(_DWORD *)(v9 + 28);
    v12 = (_DWORD *)(v9 + 28);
    v3 = v13;
    v14 = *(_QWORD *)(v12 - 3);
    *(_QWORD *)(v12 - 3) = 0;
    *(_QWORD *)(v10 + 16) = v14;
  }
  else
  {
    v10 = *(_QWORD *)a3 + 40 * v8;
    *(_BYTE *)v10 = 0;
    *(_BYTE *)(v10 + 32) = 0;
    if (v7 == 2)
      goto LABEL_17;
    v25 = v81;
    *(_BYTE *)(v10 + 8) = v82;
    *(_QWORD *)v10 = v25;
    v83 = 0;
    *(_QWORD *)(v10 + 16) = v4;
    *(_DWORD *)(v10 + 24) = v5;
    v12 = (_DWORD *)&v84 + 1;
  }
  *v12 = 0;
  *(_DWORD *)(v10 + 28) = v3;
  *(_BYTE *)(v10 + 32) = 1;
LABEL_17:
  ++a3[3];
  if ((_BYTE)v85)
  {
    v26 = v83;
    if (v83)
    {
      v83 = 0;
      LODWORD(v84) = 0;
      WTF::fastFree(v26, this);
    }
  }
  v27 = 0;
  return ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E328D358[v27])(&v81, &v94[1]);
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore21GPUVertexBufferLayoutENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  WTF *result;

  result = *(WTF **)(a2 + 16);
  if (result)
  {
    *(_QWORD *)(a2 + 16) = 0;
    *(_DWORD *)(a2 + 24) = 0;
    return (WTF *)WTF::fastFree(result, (void *)a2);
  }
  return result;
}

unint64_t WTF::Vector<std::optional<WebCore::GPUVertexBufferLayout>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(unsigned int *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 40 * (unint64_t)a1[3] <= a3)
  {
    v9 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v9 >= 0x10)
      v10 = v9 + 1;
    else
      v10 = 16;
    if (v10 > a2)
      a2 = v10;
    WTF::Vector<std::optional<WebCore::GPUVertexBufferLayout>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    v7 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v7 >= 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    if (v8 > a2)
      a2 = v8;
    WTF::Vector<std::optional<WebCore::GPUVertexBufferLayout>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

unsigned int *WTF::Vector<std::optional<WebCore::GPUVertexBufferLayout>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(unsigned int *result, unint64_t a2)
{
  unsigned int *v2;
  WTF *v3;
  uint64_t v4;
  int v5;
  void *v6;
  unsigned int *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  if (result[2] < a2)
  {
    if (a2 >= 0x6666667)
    {
      __break(0xC471u);
    }
    else
    {
      v2 = result;
      v3 = *(WTF **)result;
      v4 = result[3];
      v5 = 40 * a2;
      result = (unsigned int *)WTF::fastMalloc((WTF *)(40 * a2));
      v2[2] = (v5 & 0xFFFFFFF8) / 0x28;
      *(_QWORD *)v2 = result;
      if ((_DWORD)v4)
      {
        v7 = result;
        v8 = 0;
        v9 = 40 * v4;
        do
        {
          v10 = &v7[v8 / 4];
          v11 = (char *)v3 + v8;
          *(_BYTE *)v10 = 0;
          *((_BYTE *)v10 + 32) = 0;
          if (*((_BYTE *)v3 + v8 + 32))
          {
            v12 = *(_QWORD *)v11;
            *((_BYTE *)v10 + 8) = v11[8];
            *(_QWORD *)v10 = v12;
            *((_QWORD *)v10 + 2) = 0;
            *((_QWORD *)v10 + 3) = 0;
            v13 = *((_QWORD *)v11 + 2);
            *((_QWORD *)v11 + 2) = 0;
            *((_QWORD *)v10 + 2) = v13;
            LODWORD(v13) = *((_DWORD *)v11 + 6);
            *((_DWORD *)v11 + 6) = 0;
            v10[6] = v13;
            LODWORD(v13) = *((_DWORD *)v11 + 7);
            *((_DWORD *)v11 + 7) = 0;
            v10[7] = v13;
            *((_BYTE *)v10 + 32) = 1;
            if (v11[32])
            {
              result = (unsigned int *)*((_QWORD *)v11 + 2);
              if (result)
              {
                *((_QWORD *)v11 + 2) = 0;
                *((_DWORD *)v11 + 6) = 0;
                result = (unsigned int *)WTF::fastFree((WTF *)result, v6);
              }
            }
          }
          v8 += 40;
        }
        while (v9 != v8);
      }
      if (v3)
      {
        if (*(WTF **)v2 == v3)
        {
          *(_QWORD *)v2 = 0;
          v2[2] = 0;
        }
        return (unsigned int *)WTF::fastFree(v3, v6);
      }
    }
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalIN7WebCore21GPUVertexBufferLayoutEEENS9_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSE_1EJSB_SC_EEEEEEDcSG_DpT0_(uint64_t a1, uint64_t a2)
{
  WTF *v2;

  if (*(_BYTE *)(a2 + 32))
  {
    v2 = *(WTF **)(a2 + 16);
    if (v2)
    {
      *(_QWORD *)(a2 + 16) = 0;
      *(_DWORD *)(a2 + 24) = 0;
      WTF::fastFree(v2, (void *)a2);
    }
  }
}

uint64_t WebCore::JSGainNode::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGainNode::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSGainNode *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSGainNode *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSGainNode::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGamepad::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGamepadButton::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGamepadHapticActuator::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSGeolocation>::create(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSGeolocation>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSGeolocation>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t WebCore::JSGeolocation::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 824);
  *(_QWORD *)(a1 + 824) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::JSGeolocation::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSGeolocation *v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;

  v5 = (WebCore::JSGeolocation *)*((_QWORD *)a2 + 7);
  v6 = JSC::allocateCell<WebCore::JSGeolocation>(v5, a2);
  result = WebCore::JSDOMObject::JSDOMObject(v6, a1);
  v8 = *a3;
  *a3 = 0;
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGeolocationCoordinates::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGeolocationPosition::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSGeolocationPositionError::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unsigned int *WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLInterface<WebCore::ShadowRoot>>::convert(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unsigned int *result;
  WebCore::Node *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  WebCore::Node *v12;

  v12 = *(WebCore::Node **)(a1 + 56);
  result = (unsigned int *)JSC::jsDynamicCast<WebCore::JSShadowRoot *>(a2);
  if (!result)
    return (unsigned int *)JSC::throwTypeError();
  v5 = (WebCore::Node *)*((_QWORD *)result + 3);
  if (!v5)
    return (unsigned int *)JSC::throwTypeError();
  *((_DWORD *)v5 + 6) += 2;
  v12 = v5;
  v6 = *(unsigned int *)(a3 + 12);
  if ((_DWORD)v6 == *(_DWORD *)(a3 + 8))
  {
    v7 = WTF::Vector<WTF::Ref<WebCore::AcceleratedEffect,WTF::RawPtrTraits<WebCore::AcceleratedEffect>,WTF::DefaultRefDerefTraits<WebCore::AcceleratedEffect>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((char **)a3, v6 + 1, (unint64_t)&v12);
    v9 = *(unsigned int *)(a3 + 12);
    v10 = *(char **)a3;
    v11 = *(_QWORD *)v7;
    *(_QWORD *)v7 = 0;
    *(_QWORD *)&v10[8 * v9] = v11;
    result = (unsigned int *)v12;
    *(_DWORD *)(a3 + 12) = v9 + 1;
    v12 = 0;
    if (result)
    {
      if (result[6] == 2)
      {
        if ((*((_WORD *)result + 15) & 0x400) == 0)
          return WebCore::Node::removedLastRef((WebCore::Node *)result, v8);
      }
      else
      {
        result[6] -= 2;
      }
    }
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)a3 + 8 * v6) = v5;
    *(_DWORD *)(a3 + 12) = v6 + 1;
  }
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLAllCollection>(WebCore::JSHTMLAllCollection *a1, JSC::JSCell **a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSHTMLAllCollection::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSHTMLAllCollection::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSHTMLAllCollection::s_info);
  }
  return result;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAllCollection>::create(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAllCollection>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAllCollection>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore14HTMLCollectionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSS_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEEOS10_EEEDcSS_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore14HTMLCollectionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSS_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEEOS10_EEEDcSS_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t WebCore::JSConverter<WebCore::IDLNullable<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLCollection>,WebCore::IDLInterface<WebCore::Element>>>>::convert<std::variant<WTF::RefPtr<WebCore::HTMLCollection,WTF::RawPtrTraits<WebCore::HTMLCollection>,WTF::DefaultRefDerefTraits<WebCore::HTMLCollection>>,WTF::RefPtr<WebCore::Element,WTF::RawPtrTraits<WebCore::Element>,WTF::DefaultRefDerefTraits<WebCore::Element>>>>(uint64_t a1, uint64_t a2, uint64_t a3, WebCore::Element *a4)
{
  uint64_t v6;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t *v13;
  _BYTE v14[8];
  int v15;
  char v16;
  _BYTE v17[8];
  int v18;
  _BYTE v19[40];
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;

  LOBYTE(v23) = 0;
  LODWORD(v24) = -1;
  v6 = *(unsigned int *)(a3 + 8);
  if ((_DWORD)v6 == -1)
  {
    v14[0] = 0;
    v15 = -1;
  }
  else
  {
    ((void (*)(_BYTE *, uint64_t **))off_1E328BDC0[v6])(v19, &v23);
    LODWORD(v24) = v6;
    LOBYTE(v25) = 1;
    ((void (*)(_BYTE *, uint64_t **))off_1E328BDB0[v6])(v19, &v23);
    v8 = *(unsigned int *)(a3 + 8);
    v14[0] = 0;
    v15 = -1;
    if ((_DWORD)v8 != -1)
    {
      ((void (*)(uint64_t **, _BYTE *, uint64_t))off_1E328D368[v8])(&v23, v14, a3);
      v15 = v8;
      v16 = 1;
      v17[0] = 0;
      v18 = -1;
      ((void (*)(uint64_t **, _BYTE *, _BYTE *))off_1E328BDC0[v8])(&v23, v17, v14);
      v18 = v8;
      goto LABEL_6;
    }
  }
  v16 = 1;
  v17[0] = 0;
  v18 = -1;
  v8 = -1;
LABEL_6:
  LOBYTE(v20) = 0;
  v21 = 0;
  v22 = v8;
  v23 = &v22;
  v24 = &v20;
  v25 = a1;
  v26 = a2;
  v27 = v17;
  v9 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_14HTMLCollectionEEENS4_INS_7ElementEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSI_12RawPtrTraitsIS5_EENSI_21DefaultRefDerefTraitsIS5_EEEENSJ_IS7_NSK_IS7_EENSM_IS7_EEEEEEEEUlTyvE_JNSG_17integral_constantIlLl0EEENSW_IlLl1EEEEEET_SZ_(&v23, a4, (uint64_t)v19);
  if (v21)
  {
    v10 = v20;
    if (v18 != -1)
      ((void (*)(uint64_t **, _BYTE *, __n128))off_1E328BDB0[v18])(&v23, v17, v9);
    v18 = -1;
    if (v16)
    {
      if (v15 != -1)
        ((void (*)(uint64_t **, _BYTE *))off_1E328BDB0[v15])(&v23, v14);
      v15 = -1;
    }
    return v10;
  }
  else
  {
    v12 = std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::JSHTMLAllCollection::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v12, v13);
  }
}

uint64_t WebCore::JSHTMLAllCollection::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 4160);
  *(_QWORD *)(a1 + 4160) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::JSHTMLAllCollection::create(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  WebCore::JSHTMLAllCollection *v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;

  v5 = *(WebCore::JSHTMLAllCollection **)(a2 + 56);
  if (*(_BYTE *)(*(_QWORD *)(a2 + 2040) + 4) == 1)
    JSC::WatchpointSet::fireAllSlow();
  v6 = JSC::allocateCell<WebCore::JSHTMLAllCollection>(v5, (JSC::VM *)0x20);
  result = WebCore::JSDOMObject::JSDOMObject(v6, a1);
  v8 = *a3;
  *a3 = 0;
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t *WebCore::cacheWrapper<WebCore::HTMLAllCollection,WebCore::JSHTMLAllCollection>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t *result;
  uint64_t v8;
  uint64_t v9;

  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::HTMLAllCollection *)::owner = (uint64_t)&off_1E328D7A0;
  }
  if (a2)
    v6 = (_QWORD *)(a2 + 8);
  else
    v6 = 0;
  result = (uint64_t *)WebCore::setInlineCachedWrapper(a1, v6, a3, (uint64_t)&WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::HTMLAllCollection *)::owner);
  if ((result & 1) == 0)
  {
    v9 = a2;
    JSC::Weak<JSC::JSObject>::Weak(&v8, a3, (uint64_t)&WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::HTMLAllCollection *)::owner, a1);
    result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(a1 + 32), &v9, &v8);
    if (v8)
      *(_QWORD *)(v8 + 8) = 3;
  }
  return result;
}

unint64_t JSC::allocateCell<WebCore::JSHTMLAllCollection>(WebCore::JSHTMLAllCollection *a1, JSC::VM *a2)
{
  _QWORD *v3;
  unint64_t result;
  unint64_t v5;

  v3 = (_QWORD *)WebCore::JSHTMLAllCollection::subspaceForImpl(a1, a2);
  result = v3[3];
  if (result >= v3[4])
  {
    result = v3[5];
    if ((result & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      result = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_3;
    }
    v5 = *(_QWORD *)(result + 8) ^ v3[6];
    v3[4] = result + HIDWORD(v5);
    v3[5] = result + (int)v5;
  }
  v3[3] = result + (((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_3:
  *(_DWORD *)result = 0;
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLAnchorElement>(WebCore::JSHTMLElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  int v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_9;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSHTMLAnchorElement::s_info + ~((_QWORD)&WebCore::JSHTMLAnchorElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLAnchorElement::s_info + ~((_QWORD)&WebCore::JSHTMLAnchorElement::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSHTMLAnchorElement::s_info)
  {
    v13 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v13) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v13;
      if (v11 == &WebCore::JSHTMLAnchorElement::s_info)
        goto LABEL_3;
    }
    goto LABEL_9;
  }
LABEL_3:
  result = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!result)
  {
LABEL_9:
    v14 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
    Structure = WebCore::JSHTMLAnchorElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSHTMLAnchorElementPrototype::create(this, a2, Structure, v16);
    v18 = WebCore::JSHTMLAnchorElement::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    return WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSHTMLAnchorElement::s_info);
  }
  return result;
}

uint64_t WebCore::JSHTMLAnchorElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAnchorElement>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAnchorElement>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLAnchorElement>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t WebCore::Element::attributeWithoutSynchronization(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 104);
  if (!v2)
    return MEMORY[0x1E0CBF2F8];
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) == 0)
  {
    v4 = v2 + 32;
    LODWORD(v5) = v3 >> 5;
    if ((_DWORD)v5)
      goto LABEL_4;
    return MEMORY[0x1E0CBF2F8];
  }
  v4 = *(_QWORD *)(v2 + 40);
  LODWORD(v5) = *(_DWORD *)(v2 + 52);
  if (!(_DWORD)v5)
    return MEMORY[0x1E0CBF2F8];
LABEL_4:
  v6 = *a2;
  v5 = v5;
  for (result = v4 + 8; ; result += 16)
  {
    v8 = *(_QWORD *)(result - 8);
    if (v8 == v6 || *(_QWORD *)(v8 + 24) == *(_QWORD *)(v6 + 24) && *(_QWORD *)(v8 + 32) == *(_QWORD *)(v6 + 32))
      break;
    if (!--v5)
      return MEMORY[0x1E0CBF2F8];
  }
  return result;
}

uint64_t WebCore::jsHTMLAnchorElement_hrefGetter(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSHTMLAnchorElement *a3, WTF::String *a4, __n128 a5)
{
  WTF::StringImpl *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v10[5];
  uint64_t v11;

  v11 = *((_QWORD *)this + 7);
  WebCore::Element::getURLAttributeForBindings((WebCore::Element *)v10, a2, (uint64_t)a3, a4, a5);
  v7 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>((uint64_t)this, (uint64_t)&v11, (uint64_t *)v10);
  v8 = v10[0];
  v10[0] = 0;
  if (v8)
  {
    if (*(_DWORD *)v8 == 2)
      WTF::StringImpl::destroy(v8, v6);
    else
      *(_DWORD *)v8 -= 2;
  }
  return v7;
}

unsigned int *WebCore::Element::getURLAttributeForBindings(WebCore::Element *this, const WebCore::QualifiedName *a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  uint64_t v6;
  _QWORD *Attribute;
  char *v8;
  WTF::StringImpl *v9;
  _DWORD *v10;
  unsigned int *result;
  _BOOL8 shouldMaskURLForBindingsInternal;
  WTF::StringImpl *v13;
  char v14;

  v6 = *(_QWORD *)(*((_QWORD *)a2 + 5) + 8);
  *(_DWORD *)(v6 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(a2, (const WebCore::QualifiedName *)&WebCore::HTMLNames::hrefAttr, a3, a4, a5);
  v8 = (char *)&v13;
  WebCore::Document::completeURL((WebCore::Document *)v6, Attribute, v6 + 848, 0, (WTF::URL *)&v13);
  if ((v14 & 2) == 0)
  {
    v8 = (char *)&v13;
    shouldMaskURLForBindingsInternal = WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v6, (const WTF::URL *)&v13);
    if (shouldMaskURLForBindingsInternal)
      v8 = (char *)WebCore::Document::maskedURLForBindings((WebCore::Document *)shouldMaskURLForBindingsInternal);
  }
  v10 = *(_DWORD **)v8;
  if (*(_QWORD *)v8)
    *v10 += 2;
  *(_QWORD *)this = v10;
  *(_OWORD *)((char *)this + 8) = *(_OWORD *)(v8 + 8);
  *(_OWORD *)((char *)this + 24) = *(_OWORD *)(v8 + 24);
  result = (unsigned int *)v13;
  v13 = 0;
  if (result)
  {
    if (*result == 2)
      result = (unsigned int *)WTF::StringImpl::destroy((WTF::StringImpl *)result, v9);
    else
      *result -= 2;
  }
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      return WebCore::Node::removedLastRef((WebCore::Node *)v6, v9);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLAreaElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLAttachmentElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLAudioElement::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSHTMLAudioElement *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSHTMLAudioElement *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSHTMLAudioElement::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 48;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  *(_QWORD *)(result + 32) = 0;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLBRElement>(WebCore::JSHTMLBRElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  int v13;
  uint64_t *v14;
  unint64_t Prototype;
  unint64_t v16;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  unint64_t v19;
  int v20;

  v5 = *((_QWORD *)a2 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLBRElement::s_info + ~((_QWORD)&WebCore::JSHTMLBRElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLBRElement::s_info + ~((_QWORD)&WebCore::JSHTMLBRElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLBRElement::s_info)
    {
LABEL_3:
      result = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (result)
        return result;
    }
    else
    {
      v13 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v13) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v13;
        if (v11 == &WebCore::JSHTMLBRElement::s_info)
          goto LABEL_3;
      }
    }
  }
  v14 = (uint64_t *)((char *)this + 40136);
  Prototype = WebCore::JSHTMLBRElement::createPrototype(this, a2, a3);
  v16 = Prototype;
  v20 = 241;
  if ((Prototype & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)Prototype);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, this);
  }
  SlowCase = *v14;
  if ((unint64_t)*v14 >= *((_QWORD *)this + 5018))
  {
    SlowCase = *((_QWORD *)this + 5019);
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_14;
    }
    v19 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 5020);
    *((_QWORD *)this + 5018) = SlowCase + HIDWORD(v19);
    *((_QWORD *)this + 5019) = SlowCase + (int)v19;
  }
  *v14 = SlowCase + 128;
LABEL_14:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, this, a2, v16, &v20, &WebCore::JSHTMLBRElement::s_info, 0, 0);
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  return WebCore::cacheDOMStructure((JSCell *)a2, SlowCase, (uint64_t)&WebCore::JSHTMLBRElement::s_info);
}

uint64_t WebCore::JSHTMLBaseElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLBodyElement>(WebCore::JSHTMLElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  int v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_9;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSHTMLBodyElement::s_info + ~((_QWORD)&WebCore::JSHTMLBodyElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLBodyElement::s_info + ~((_QWORD)&WebCore::JSHTMLBodyElement::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSHTMLBodyElement::s_info)
  {
    v13 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v13) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v13;
      if (v11 == &WebCore::JSHTMLBodyElement::s_info)
        goto LABEL_3;
    }
    goto LABEL_9;
  }
LABEL_3:
  result = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!result)
  {
LABEL_9:
    v14 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
    Structure = WebCore::JSHTMLBodyElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSHTMLBodyElementPrototype::create(this, a2, Structure, v16);
    v18 = WebCore::JSHTMLBodyElement::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    return WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSHTMLBodyElement::s_info);
  }
  return result;
}

uint64_t WebCore::JSHTMLBodyElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBodyElement>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBodyElement>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLBodyElement>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t WebCore::JSHTMLButtonElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::jsHTMLButtonElement_valueGetter(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)WebCore::Element::attributeWithoutSynchronization(a2, &WebCore::HTMLNames::valueAttr);
  return WebCore::toJS<WebCore::IDLUSVString,WTF::String>(a1, (uint64_t)&v5, v3);
}

uint64_t WebCore::JSHTMLCanvasElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCollection>::initializeProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSHTMLCollection>((uint64_t *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

uint64_t WebCore::JSHTMLCollection::put(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  JSC::VM *v20;
  int OwnProperty;
  uint64_t result;
  int v23;
  char v24[16];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (!v15)
    goto LABEL_23;
  v16 = v15;
  if (*(_BYTE *)(v15 + 274))
    goto LABEL_23;
  v17 = *(_BYTE **)(v15 + 496);
  if (!v17)
    v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
  if (!*(_QWORD *)v17)
    goto LABEL_23;
  v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
  if (!v18)
    goto LABEL_23;
  v19 = *(_QWORD *)(v18 + 680);
  if (*(_BYTE *)(v19 + 243))
  {
    if (!*(_BYTE *)(v19 + 242))
      goto LABEL_23;
LABEL_22:
    if (!v17[65])
      goto LABEL_23;
    return JSC::JSObject::put();
  }
  if ((*(_QWORD *)(v19 + 688) & 0x80000) != 0)
    goto LABEL_22;
LABEL_23:
  v20 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = 14;
  v25 = 0xFFFFFFFF00000000;
  v27 = 0;
  v28 = 0;
  v26 = v8;
  v29 = 0x20000;
  v30 = 0;
  LOBYTE(v31) = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  OwnProperty = WebCore::JSHTMLCollection::legacyPlatformObjectGetOwnProperty(a1, (JSC::VM **)a2, a3, (uint64_t)v24, 1);
  if (*((_DWORD *)v20 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v20 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v32)
  {
    v23 = *(_DWORD *)(v31 + 4);
    if (!v23)
    {
      __break(0xC471u);
      JUMPOUT(0x194BDC2D8);
    }
    *(_DWORD *)(v31 + 4) = v23 - 1;
  }
  return result;
}

uint64_t WebCore::JSHTMLCollection::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSHTMLCollection::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _WORD *v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t result;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  int isSupportedPropertyName;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  unint64_t v48;
  uint64_t v49;
  int v50;
  _BYTE *v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  int v55;
  unsigned __int16 *v56;
  uint64_t v57;
  unsigned int v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  unint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 *v77;
  unsigned int v78;
  unsigned __int8 *v79;
  uint64_t v80;
  unsigned int v81;
  WTF::StringImpl *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  char v89;
  JSC::VM *v90;
  char v91;
  uint64_t v92;
  uint64_t v93;

  v6 = *(_QWORD **)(a1 + 24);
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMGlobalObject::s_info && v9 != 0);
  }
  if (v8)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (v13)
  {
    v14 = v13;
    if (!*(_BYTE *)(v13 + 274))
    {
      v15 = *(_BYTE **)(v13 + 496);
      if (!v15)
        v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
      if (*(_QWORD *)v15)
      {
        v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
        if (v16)
        {
          v17 = *(_QWORD *)(v16 + 680);
          if (*(_BYTE *)(v17 + 243))
          {
            if (!*(_BYTE *)(v17 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v15[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (a3)
  {
    v18 = *(_DWORD *)(a3 + 16);
    if ((v18 & 0x20) != 0)
      return JSC::JSObject::deleteProperty();
    v19 = *(_WORD **)(a3 + 8);
    v20 = *(unsigned int *)(a3 + 4);
    if ((v18 & 4) == 0)
    {
      if ((_DWORD)v20 && (v21 = (unsigned __int16)*v19 - 48, v21 <= 9))
      {
        if (v20 < 2 || *v19 != 48)
        {
          v25 = v19 + 1;
          v26 = v20 - 1;
          while (v26)
          {
            if (v21 <= 0x19999999)
            {
              v27 = *v25 - 48;
              if (v27 <= 9)
              {
                v28 = __CFADD__(v27, 10 * v21);
                v21 = v27 + 10 * v21;
                ++v25;
                --v26;
                if (!v28)
                  continue;
              }
            }
            goto LABEL_27;
          }
          v29 = v21 == -1;
          v23 = v21 & 0xFFFFFF00;
          v22 = 0x100000000;
          if (v21 == -1)
          {
            v22 = 0;
            LOBYTE(v21) = 0;
          }
          if (v29)
            v23 = 0;
LABEL_29:
          v21 = v21;
          if ((v22 & 0x100000000) != 0)
            return (*(unsigned int (**)(_QWORD *))(*v6 + 16))(v6) <= (v23 | v21);
          goto LABEL_54;
        }
        v22 = 0;
      }
      else
      {
LABEL_27:
        v22 = 0;
        LOBYTE(v21) = 0;
      }
      v23 = 0;
      goto LABEL_29;
    }
    if ((_DWORD)v20)
    {
      v30 = *(unsigned __int8 *)v19 - 48;
      if (v30 <= 9 && (v20 < 2 || *(_BYTE *)v19 != 48))
      {
        v76 = v20 - 1;
        v77 = (unsigned __int8 *)v19 + 1;
        while (v76)
        {
          if (v30 > 0x19999999)
            goto LABEL_51;
          v78 = *v77 - 48;
          if (v78 > 9)
            goto LABEL_51;
          v21 = 0;
          LOBYTE(v20) = 0;
          v31 = 0;
          v28 = __CFADD__(v78, 10 * v30);
          v30 = v78 + 10 * v30;
          --v76;
          ++v77;
          if (v28)
            goto LABEL_53;
        }
        if (v30 == -1)
          v21 = 0;
        else
          v21 = v30 & 0xFFFFFF00;
        if (v30 == -1)
          LOBYTE(v20) = 0;
        else
          LOBYTE(v20) = v30;
        if (v30 == -1)
          v31 = 0;
        else
          v31 = 0x100000000;
LABEL_53:
        v23 = v20;
        if ((v31 & 0x100000000) != 0)
          return (*(unsigned int (**)(_QWORD *))(*v6 + 16))(v6) <= (v23 | v21);
LABEL_54:
        *(_DWORD *)a3 += 2;
        v32 = (WTF::StringImpl *)a3;
        goto LABEL_55;
      }
LABEL_51:
      v21 = 0;
      LOBYTE(v20) = 0;
    }
    else
    {
      v21 = 0;
    }
    v31 = 0;
    goto LABEL_53;
  }
  v32 = 0;
LABEL_55:
  v82 = v32;
  isSupportedPropertyName = WebCore::HTMLCollection::isSupportedPropertyName(v6, (uint64_t *)&v82);
  v35 = v82;
  v82 = 0;
  if (!v35)
    goto LABEL_58;
  if (*(_DWORD *)v35 == 2)
  {
    WTF::StringImpl::destroy(v35, v33);
    if (isSupportedPropertyName)
      goto LABEL_59;
    return JSC::JSObject::deleteProperty();
  }
  *(_DWORD *)v35 -= 2;
LABEL_58:
  if (!isSupportedPropertyName)
    return JSC::JSObject::deleteProperty();
LABEL_59:
  v36 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v84 = 0xFFFFFFFF00000000;
  v86 = 0;
  v87 = 0;
  v85 = a1;
  v88 = 196608;
  v89 = 0;
  v92 = 0;
  v93 = 0;
  v90 = v36;
  ++*((_DWORD *)v36 + 1);
  v91 = 1;
  if (!(a3 >> 4))
    goto LABEL_74;
  v37 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
  if (((a3 >> 4) & ~*(_DWORD *)(v37 + 0x20)) != 0)
    goto LABEL_74;
  v38 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x58);
  if (!v38)
  {
    v49 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x40);
    if (!v49 || *(_BYTE *)(v49 + 5) != 1 && *(_DWORD *)(v49 + 80) < 2u)
      goto LABEL_74;
    v38 = JSC::Structure::materializePropertyTable((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v36);
    if (!v38)
      goto LABEL_74;
  }
  if (!*(_DWORD *)(v38 + 24))
    goto LABEL_74;
  v39 = *(_QWORD *)(v38 + 16);
  v40 = v39 & 0xFFFFFFFFFFFFFFFELL;
  v41 = *(unsigned int *)(v38 + 8);
  v42 = *(_DWORD *)(a3 + 16);
  if ((v39 & 1) != 0)
  {
    if ((v42 & 0x20) != 0)
      v42 = *(_DWORD *)(a3 + 32);
    v43 = *(_DWORD *)(v38 + 12);
    v44 = (v42 >> 8) & *(_QWORD *)&v43;
    v45 = *(unsigned __int8 *)(v40 + v44);
    if (*(_BYTE *)(v40 + v44))
    {
      v46 = v40 + v41;
      v47 = 1;
      while (1)
      {
        v48 = *(_QWORD *)(v46 + 8 * (v45 - 1));
        if (a3 == (v48 & 0xFFFFFFFFFFFFLL))
          break;
        v44 = ((_DWORD)v44 + v47) & v43;
        v45 = *(unsigned __int8 *)(v40 + v44);
        ++v47;
        if (!*(_BYTE *)(v40 + v44))
          goto LABEL_74;
      }
      v59 = (v48 >> 16) & 0xFF00000000 | HIBYTE(v48);
      goto LABEL_100;
    }
LABEL_74:
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
    {
      result = JSC::JSObject::getOwnStaticPropertySlot();
      if (!a3 || (result & 1) != 0)
        goto LABEL_86;
    }
    else if (!a3)
    {
      goto LABEL_85;
    }
    v50 = *(_DWORD *)(a3 + 16);
    if ((v50 & 0x20) == 0)
    {
      v51 = *(_BYTE **)(a3 + 8);
      v52 = *(unsigned int *)(a3 + 4);
      if ((v50 & 4) != 0)
      {
        if ((_DWORD)v52)
        {
          v74 = *v51 - 48;
          if (v74 > 9 || v52 >= 2 && *v51 == 48)
          {
LABEL_137:
            v75 = 0;
          }
          else
          {
            v79 = v51 + 1;
            v80 = v52 - 1;
            while (v80)
            {
              if (v74 > 0x19999999)
                goto LABEL_137;
              v81 = *v79 - 48;
              if (v81 > 9)
                goto LABEL_137;
              v75 = 0;
              v28 = __CFADD__(v81, 10 * v74);
              v74 = v81 + 10 * v74;
              ++v79;
              --v80;
              if (v28)
                goto LABEL_138;
            }
            v75 = 0x100000000;
            if (v74 == -1)
              v75 = 0;
          }
        }
        else
        {
          v75 = 0;
        }
LABEL_138:
        if ((v75 & 0x100000000) == 0)
          goto LABEL_85;
      }
      else
      {
        if ((_DWORD)v52)
        {
          v53 = *(unsigned __int16 *)v51 - 48;
          if (v53 > 9 || v52 >= 2 && *(_WORD *)v51 == 48)
          {
LABEL_82:
            v54 = 0;
          }
          else
          {
            v56 = (unsigned __int16 *)(v51 + 2);
            v57 = v52 - 1;
            while (v57)
            {
              if (v53 <= 0x19999999)
              {
                v58 = *v56 - 48;
                if (v58 <= 9)
                {
                  v28 = __CFADD__(v58, 10 * v53);
                  v53 = v58 + 10 * v53;
                  ++v56;
                  --v57;
                  if (!v28)
                    continue;
                }
              }
              goto LABEL_82;
            }
            v10 = v53 == -1;
            v54 = 0x100000000;
            if (v10)
              v54 = 0;
          }
        }
        else
        {
          v54 = 0;
        }
        if ((v54 & 0x100000000) == 0)
          goto LABEL_85;
      }
      result = JSC::JSObject::getOwnPropertySlotByIndex();
      goto LABEL_86;
    }
LABEL_85:
    result = 0;
    goto LABEL_86;
  }
  if ((v42 & 0x20) != 0)
    v42 = *(_DWORD *)(a3 + 32);
  v64 = *(_DWORD *)(v38 + 12);
  v65 = v64 & (v42 >> 8);
  v66 = *(_DWORD *)(v40 + 4 * v65);
  if (!v66)
    goto LABEL_74;
  v67 = v40 + 4 * v41;
  v68 = 1;
  while (1)
  {
    v69 = (v66 - 1);
    if (*(_QWORD *)(v67 + 16 * v69) == a3)
      break;
    v65 = (v65 + v68) & v64;
    v66 = *(_DWORD *)(v40 + 4 * v65);
    ++v68;
    if (!v66)
      goto LABEL_74;
  }
  v59 = *(unsigned int *)(v67 + 16 * v69 + 8) | ((unint64_t)*(unsigned __int8 *)(v67 + 16 * v69 + 12) << 32);
LABEL_100:
  if ((_DWORD)v59 == -1)
    goto LABEL_74;
  if ((int)v59 > 63)
  {
    v60 = *(_QWORD *)(a1 + 8) - 8;
    v61 = 0x3F00000000 - (v59 << 32);
  }
  else
  {
    v60 = a1 + 16;
    v61 = v59 << 32;
  }
  v62 = *(_QWORD *)(v60 + (v61 >> 29));
  if ((v62 & 0xFFFE000000000002) != 0)
    goto LABEL_106;
  v63 = *(unsigned __int8 *)(v62 + 5);
  if (v63 == 6)
  {
    v70 = *(_DWORD *)(v37 + 16) & 3;
    v71 = *(_QWORD *)(v62 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v62 & 0xFFFFFFFE) + 0x4C))
    {
      v73 = *(_QWORD *)(v62 + 24);
      v72 = *(_QWORD *)(v62 + 32);
      v82 = *(WTF::StringImpl **)(v62 + 8);
      v83 = v71;
      LODWORD(v84) = HIDWORD(v59);
      v86 = a1;
      BYTE1(v88) = 3;
      result = 1;
      if (v70 != 2)
        LOBYTE(v88) = 1;
      HIBYTE(v88) = 1;
      v92 = v73;
      v93 = v72;
    }
    else
    {
      v82 = *(WTF::StringImpl **)(v62 + 8);
      v83 = v71;
      LODWORD(v84) = HIDWORD(v59);
      v86 = a1;
      result = 1;
      BYTE1(v88) = 3;
      if (v70 != 2)
        LOBYTE(v88) = 1;
    }
  }
  else
  {
    if (v63 != 5)
    {
LABEL_106:
      v82 = (WTF::StringImpl *)v62;
      v86 = a1;
      v84 = __PAIR64__(v59, HIDWORD(v59));
      result = 1;
      LOWORD(v88) = 257;
      goto LABEL_86;
    }
    JSC::JSObject::fillGetterPropertySlot();
    result = 1;
  }
LABEL_86:
  if (v91)
  {
    v55 = *((_DWORD *)v90 + 1);
    if (!v55)
    {
      __break(0xC471u);
      JUMPOUT(0x194BDCA8CLL);
    }
    *((_DWORD *)v90 + 1) = v55 - 1;
  }
  if ((_DWORD)result)
    return JSC::JSObject::deleteProperty();
  return result;
}

uint64_t WebCore::JSHTMLCollection::deletePropertyByIndex(WebCore::JSHTMLCollection *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  }
  if (!v15[65])
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSHTMLCollection::getOwnPropertySlot(uint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4)
{
  return WebCore::JSHTMLCollection::legacyPlatformObjectGetOwnProperty(a1, a2, a3, a4, 0);
}

uint64_t WebCore::JSHTMLCollection::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3, int a4)
{
  int v6;
  int v7;
  int v8;
  uint64_t *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl **v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  unsigned int v35;
  int v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  _QWORD *v46;
  WTF::StringImpl *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  _QWORD *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  WTF::StringImpl *v58;
  WTF::StringImpl **v59;
  uint64_t v60;
  WTF::StringImpl *v61;
  int v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  WTF::StringImpl *v69;
  WTF::StringImpl *v71[2];
  char v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;

  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 24) + 16))(*(_QWORD *)(a1 + 24));
  if (v6)
  {
    v7 = v6;
    v8 = 0;
    v9 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v11 = v73;
      v74 = v73;
      v12 = *((_DWORD *)v73 + 4);
      if ((v12 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v73 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v13 = *a3;
      v14 = *(unsigned int *)(*a3 + 20);
      if (v14 <= 0x13)
      {
        if ((_DWORD)v14)
        {
          v15 = *(WTF::StringImpl ***)(v13 + 8);
          while (*v15 != v73)
          {
            ++v15;
            if (!--v14)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v12 & 0x20) != 0)
        {
          v36 = *(_DWORD *)v11 + 2;
        }
        else
        {
          if ((v12 & 0x10) != 0)
          {
            *(_DWORD *)v11 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v11 = v71[0];
          }
          v36 = *(_DWORD *)v11;
          *(_DWORD *)v11 += 2;
          if (!v36)
          {
            WTF::StringImpl::destroy(v11, v10);
LABEL_54:
            v37 = (uint64_t *)(v13 + 8);
            v71[0] = v11;
            v38 = *(unsigned int *)(v13 + 20);
            if ((_DWORD)v38 == *(_DWORD *)(v13 + 16))
            {
              v39 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v37, v38 + 1, (unint64_t)v71);
              v38 = *(unsigned int *)(v13 + 20);
              v40 = *(_QWORD *)(v13 + 8);
              v41 = *v39;
              *v39 = 0;
              *(_QWORD *)(v40 + 8 * v38) = v41;
            }
            else
            {
              v42 = *v37;
              v71[0] = 0;
              *(_QWORD *)(v42 + 8 * v38) = v11;
            }
            *(_DWORD *)(v13 + 20) = v38 + 1;
            v43 = v71[0];
            v71[0] = 0;
            if (v43)
            {
              if (*(_DWORD *)v43 == 2)
                WTF::StringImpl::destroy(v43, v10);
              else
                *(_DWORD *)v43 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v11 = v36;
        goto LABEL_54;
      }
      if (!*v9 || !*(_DWORD *)(*v9 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v74, (uint64_t)v71);
      if (v72)
      {
        v11 = v74;
        v13 = *a3;
        v12 = *((_DWORD *)v74 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v44 = v73;
      v73 = 0;
      if (v44)
      {
        if (*(_DWORD *)v44 == 2)
          WTF::StringImpl::destroy(v44, v10);
        else
          *(_DWORD *)v44 -= 2;
      }
      if (++v8 == v7)
        goto LABEL_69;
    }
    v16 = *(uint64_t **)(v13 + 8);
    v17 = &v16[v14];
    while (1)
    {
      v18 = *v16;
      v19 = *v9;
      if (*v9
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v19 = *v9) != 0))
      {
        v20 = *(_DWORD *)(v19 - 8);
      }
      else
      {
        v20 = 0;
      }
      v21 = (~(v18 << 32) + v18) ^ ((unint64_t)(~(v18 << 32) + v18) >> 22);
      v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
      v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
      v24 = v20 & ((v23 >> 31) ^ v23);
      v25 = (uint64_t *)(v19 + 8 * v24);
      v26 = *v25;
      if (*v25)
      {
        v27 = 0;
        v28 = 1;
        while (v26 != v18)
        {
          if (v26 == -1)
            v27 = v25;
          v24 = (v24 + v28) & v20;
          v25 = (uint64_t *)(v19 + 8 * v24);
          v26 = *v25;
          ++v28;
          if (!*v25)
          {
            if (v27)
            {
              *v27 = 0;
              --*(_DWORD *)(*v9 - 16);
              v25 = v27;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v25 = v18;
      v29 = *v9;
      v30 = *v9 ? *(_DWORD *)(v29 - 12) + 1 : 1;
      *(_DWORD *)(v29 - 12) = v30;
      v31 = *v9;
      v32 = *v9 ? *(_DWORD *)(v31 - 12) : 0;
      v33 = (*(_DWORD *)(v31 - 16) + v32);
      v34 = *(unsigned int *)(v31 - 4);
      if (v34 > 0x400)
        break;
      if (3 * v34 <= 4 * v33)
      {
        if ((_DWORD)v34)
          goto LABEL_43;
        v35 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v16 == v17)
        goto LABEL_17;
    }
    if (v34 > 2 * v33)
      goto LABEL_47;
LABEL_43:
    v35 = (_DWORD)v34 << (6 * *(_DWORD *)(v31 - 12) >= (2 * v34));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v35, v25);
    goto LABEL_47;
  }
LABEL_69:
  if (!a4)
  {
    v46 = *(_QWORD **)(a1 + 24);
    (*(void (**)(_QWORD *))(*v46 + 80))(v46);
    v48 = v46[4];
    v49 = *(unsigned int *)(v48 + 28);
    if ((_DWORD)v49)
    {
      v50 = *(uint64_t **)(v48 + 16);
      v51 = &v50[v49];
      v52 = a3 + 1;
      do
      {
        v53 = *v50;
        if (*v50)
          *(_DWORD *)v53 += 2;
        v74 = (WTF::StringImpl *)v53;
        v54 = *(_DWORD *)(v53 + 16);
        if ((v54 & 0x20) != 0)
        {
          if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*(_BYTE *)(v53 + 36) & 4) != 0)
          {
LABEL_106:
            if (*(_DWORD *)v53 == 2)
              WTF::StringImpl::destroy((WTF::StringImpl *)v53, v47);
            else
              *(_DWORD *)v53 -= 2;
            goto LABEL_108;
          }
        }
        else if ((a3[3] & 2) == 0)
        {
          goto LABEL_106;
        }
        v55 = *a3;
        v56 = *(unsigned int *)(*a3 + 20);
        if (v56 > 0x13)
        {
          if (!*v52 || !*(_DWORD *)(*v52 - 12))
          {
            v59 = *(WTF::StringImpl ***)(v55 + 8);
            v60 = 8 * v56;
            do
            {
              v61 = *v59++;
              v73 = v61;
              WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v73, (uint64_t)v71);
              v60 -= 8;
            }
            while (v60);
          }
          WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v74, (uint64_t)v71);
          if (!v72)
            goto LABEL_105;
          v58 = v74;
          v55 = *a3;
          v54 = *((_DWORD *)v74 + 4);
          if ((v54 & 0x20) != 0)
            goto LABEL_95;
        }
        else
        {
          if ((_DWORD)v56)
          {
            v57 = *(_QWORD **)(v55 + 8);
            while (*v57 != v53)
            {
              ++v57;
              if (!--v56)
                goto LABEL_86;
            }
LABEL_105:
            if (v53)
              goto LABEL_106;
            goto LABEL_108;
          }
LABEL_86:
          v58 = (WTF::StringImpl *)v53;
          if ((v54 & 0x20) != 0)
          {
LABEL_95:
            v62 = *(_DWORD *)v58 + 2;
LABEL_98:
            *(_DWORD *)v58 = v62;
            goto LABEL_99;
          }
        }
        if ((v54 & 0x10) != 0)
        {
          *(_DWORD *)v58 += 2;
        }
        else
        {
          WTF::AtomStringImpl::addSlowCase();
          v58 = v71[0];
        }
        v62 = *(_DWORD *)v58;
        *(_DWORD *)v58 += 2;
        if (v62)
          goto LABEL_98;
        WTF::StringImpl::destroy(v58, v47);
LABEL_99:
        v63 = (uint64_t *)(v55 + 8);
        v71[0] = v58;
        v64 = *(unsigned int *)(v55 + 20);
        if ((_DWORD)v64 == *(_DWORD *)(v55 + 16))
        {
          v65 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v63, v64 + 1, (unint64_t)v71);
          v64 = *(unsigned int *)(v55 + 20);
          v66 = *(_QWORD *)(v55 + 8);
          v67 = *v65;
          *v65 = 0;
          *(_QWORD *)(v66 + 8 * v64) = v67;
        }
        else
        {
          v68 = *v63;
          v71[0] = 0;
          *(_QWORD *)(v68 + 8 * v64) = v58;
        }
        *(_DWORD *)(v55 + 20) = v64 + 1;
        v69 = v71[0];
        v71[0] = 0;
        if (!v69)
          goto LABEL_105;
        if (*(_DWORD *)v69 != 2)
        {
          *(_DWORD *)v69 -= 2;
          goto LABEL_105;
        }
        WTF::StringImpl::destroy(v69, v47);
        if (v53)
          goto LABEL_106;
LABEL_108:
        ++v50;
      }
      while (v50 != v51);
    }
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSHTMLCollection::defineOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, __int128 *a4, int a5)
{
  JSC::VM *v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  int OwnPropertySlotByIndex;
  int v37;
  int v38;
  unsigned __int16 *v39;
  uint64_t v40;
  unsigned int v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int OwnStaticPropertySlot;
  BOOL v48;
  int v49;
  unsigned int v50;
  int v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int hasExceptionsAfterHandlingTraps;
  _QWORD *v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  int isSupportedPropertyName;
  WTF::StringImpl *v64;
  int v65;
  __int128 v66;
  uint64_t v68;
  unsigned __int8 *v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t v72;
  unsigned __int8 *v73;
  uint64_t v74;
  unsigned int v75;
  WTF::StringImpl *v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  char v82;
  JSC::VM *v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  JSC::VM *v87;

  v9 = *(JSC::VM **)(a2 + 56);
  v87 = v9;
  if (a3)
  {
    v10 = *(_DWORD *)(a3 + 16);
    if ((v10 & 0x20) != 0)
    {
LABEL_97:
      v66 = a4[1];
      v77 = *a4;
      v78 = v66;
      return JSC::JSObject::defineOwnProperty();
    }
    v11 = *(_BYTE **)(a3 + 8);
    v12 = *(unsigned int *)(a3 + 4);
    if ((v10 & 4) != 0)
    {
      if (!(_DWORD)v12)
        goto LABEL_8;
      v13 = *v11 - 48;
      if (v13 > 9 || v12 >= 2 && *v11 == 48)
        goto LABEL_8;
      v68 = v12 - 1;
      v69 = v11 + 1;
      while (v68)
      {
        if (v13 <= 0x19999999)
        {
          v70 = *v69 - 48;
          if (v70 <= 9)
          {
            v29 = __CFADD__(v70, 10 * v13);
            v13 = v70 + 10 * v13;
            --v68;
            ++v69;
            if (!v29)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v12)
        goto LABEL_8;
      v13 = *(unsigned __int16 *)v11 - 48;
      if (v13 > 9 || v12 >= 2 && *(_WORD *)v11 == 48)
        goto LABEL_8;
      v26 = (unsigned __int16 *)(v11 + 2);
      v27 = v12 - 1;
      while (v27)
      {
        if (v13 <= 0x19999999)
        {
          v28 = *v26 - 48;
          if (v28 <= 9)
          {
            v29 = __CFADD__(v28, 10 * v13);
            v13 = v28 + 10 * v13;
            ++v26;
            --v27;
            if (!v29)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v13 != -1)
    {
      if (a5)
        JSC::throwTypeError();
      return 0;
    }
  }
LABEL_8:
  *(_QWORD *)&v78 = 0xFFFFFFFF00000000;
  v79 = 0;
  v80 = 0;
  *((_QWORD *)&v78 + 1) = a1;
  v81 = 196608;
  v82 = 0;
  v85 = 0;
  v86 = 0;
  v83 = v9;
  ++*((_DWORD *)v9 + 1);
  v84 = 1;
  if (!(a3 >> 4))
    goto LABEL_28;
  v14 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
  if (((a3 >> 4) & ~*(_DWORD *)(v14 + 0x20)) != 0)
    goto LABEL_28;
  v15 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x58);
  if (!v15)
  {
    v30 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x40);
    if (!v30 || *(_BYTE *)(v30 + 5) != 1 && *(_DWORD *)(v30 + 80) < 2u)
      goto LABEL_28;
    v15 = JSC::Structure::materializePropertyTable((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v9);
    if (!v15)
      goto LABEL_28;
  }
  if (!*(_DWORD *)(v15 + 24))
    goto LABEL_28;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
  v18 = *(unsigned int *)(v15 + 8);
  v19 = *(_DWORD *)(a3 + 16);
  if ((v16 & 1) != 0)
  {
    if ((v19 & 0x20) != 0)
      v19 = *(_DWORD *)(a3 + 32);
    v20 = *(_DWORD *)(v15 + 12);
    v21 = (v19 >> 8) & *(_QWORD *)&v20;
    v22 = *(unsigned __int8 *)(v17 + v21);
    if (*(_BYTE *)(v17 + v21))
    {
      v23 = v17 + v18;
      v24 = 1;
      while (1)
      {
        v25 = *(_QWORD *)(v23 + 8 * (v22 - 1));
        if (a3 == (v25 & 0xFFFFFFFFFFFFLL))
          break;
        v21 = ((_DWORD)v21 + v24) & v20;
        v22 = *(unsigned __int8 *)(v17 + v21);
        ++v24;
        if (!*(_BYTE *)(v17 + v21))
          goto LABEL_28;
      }
      v42 = (v25 >> 16) & 0xFF00000000 | HIBYTE(v25);
      goto LABEL_52;
    }
LABEL_28:
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
    {
      OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
      OwnPropertySlotByIndex = OwnStaticPropertySlot;
      if (!a3 || (OwnStaticPropertySlot & 1) != 0)
        goto LABEL_40;
    }
    else if (!a3)
    {
      goto LABEL_39;
    }
    v31 = *(_DWORD *)(a3 + 16);
    if ((v31 & 0x20) == 0)
    {
      v32 = *(_BYTE **)(a3 + 8);
      v33 = *(unsigned int *)(a3 + 4);
      if ((v31 & 4) != 0)
      {
        if ((_DWORD)v33)
        {
          v71 = *v32 - 48;
          if (v71 > 9 || v33 >= 2 && *v32 == 48)
          {
LABEL_121:
            v72 = 0;
          }
          else
          {
            v73 = v32 + 1;
            v74 = v33 - 1;
            while (v74)
            {
              if (v71 > 0x19999999)
                goto LABEL_121;
              v75 = *v73 - 48;
              if (v75 > 9)
                goto LABEL_121;
              v72 = 0;
              v29 = __CFADD__(v75, 10 * v71);
              v71 = v75 + 10 * v71;
              ++v73;
              --v74;
              if (v29)
                goto LABEL_122;
            }
            v72 = 0x100000000;
            if (v71 == -1)
              v72 = 0;
          }
        }
        else
        {
          v72 = 0;
        }
LABEL_122:
        if ((v72 & 0x100000000) == 0)
          goto LABEL_39;
      }
      else
      {
        if ((_DWORD)v33)
        {
          v34 = *(unsigned __int16 *)v32 - 48;
          if (v34 > 9 || v33 >= 2 && *(_WORD *)v32 == 48)
          {
LABEL_36:
            v35 = 0;
          }
          else
          {
            v39 = (unsigned __int16 *)(v32 + 2);
            v40 = v33 - 1;
            while (v40)
            {
              if (v34 <= 0x19999999)
              {
                v41 = *v39 - 48;
                if (v41 <= 9)
                {
                  v29 = __CFADD__(v41, 10 * v34);
                  v34 = v41 + 10 * v34;
                  ++v39;
                  --v40;
                  if (!v29)
                    continue;
                }
              }
              goto LABEL_36;
            }
            v48 = v34 == -1;
            v35 = 0x100000000;
            if (v48)
              v35 = 0;
          }
        }
        else
        {
          v35 = 0;
        }
        if ((v35 & 0x100000000) == 0)
          goto LABEL_39;
      }
      OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
      goto LABEL_40;
    }
LABEL_39:
    OwnPropertySlotByIndex = 0;
    goto LABEL_40;
  }
  if ((v19 & 0x20) != 0)
    v19 = *(_DWORD *)(a3 + 32);
  v49 = *(_DWORD *)(v15 + 12);
  v50 = v49 & (v19 >> 8);
  v51 = *(_DWORD *)(v17 + 4 * v50);
  if (!v51)
    goto LABEL_28;
  v52 = v17 + 4 * v18;
  v53 = 1;
  while (1)
  {
    v54 = (v51 - 1);
    if (*(_QWORD *)(v52 + 16 * v54) == a3)
      break;
    v50 = (v50 + v53) & v49;
    v51 = *(_DWORD *)(v17 + 4 * v50);
    ++v53;
    if (!v51)
      goto LABEL_28;
  }
  v42 = *(unsigned int *)(v52 + 16 * v54 + 8) | ((unint64_t)*(unsigned __int8 *)(v52 + 16 * v54 + 12) << 32);
LABEL_52:
  if ((_DWORD)v42 == -1)
    goto LABEL_28;
  if ((int)v42 > 63)
  {
    v43 = *(_QWORD *)(a1 + 8) - 8;
    v44 = 0x3F00000000 - (v42 << 32);
  }
  else
  {
    v43 = a1 + 16;
    v44 = v42 << 32;
  }
  v45 = *(_QWORD *)(v43 + (v44 >> 29));
  if ((v45 & 0xFFFE000000000002) != 0)
    goto LABEL_58;
  v46 = *(unsigned __int8 *)(v45 + 5);
  if (v46 == 6)
  {
    v55 = *(_DWORD *)(v14 + 16) & 3;
    v56 = *(_QWORD *)(v45 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v45 & 0xFFFFFFFE) + 0x4C))
    {
      v58 = *(_QWORD *)(v45 + 24);
      v57 = *(_QWORD *)(v45 + 32);
      *(_QWORD *)&v77 = *(_QWORD *)(v45 + 8);
      *((_QWORD *)&v77 + 1) = v56;
      LODWORD(v78) = HIDWORD(v42);
      v79 = a1;
      BYTE1(v81) = 3;
      OwnPropertySlotByIndex = 1;
      if (v55 != 2)
        LOBYTE(v81) = 1;
      HIBYTE(v81) = 1;
      v85 = v58;
      v86 = v57;
    }
    else
    {
      *(_QWORD *)&v77 = *(_QWORD *)(v45 + 8);
      *((_QWORD *)&v77 + 1) = v56;
      LODWORD(v78) = HIDWORD(v42);
      v79 = a1;
      OwnPropertySlotByIndex = 1;
      BYTE1(v81) = 3;
      if (v55 != 2)
        LOBYTE(v81) = 1;
    }
  }
  else
  {
    if (v46 != 5)
    {
LABEL_58:
      *(_QWORD *)&v77 = v45;
      v79 = a1;
      *(_QWORD *)&v78 = __PAIR64__(v42, HIDWORD(v42));
      OwnPropertySlotByIndex = 1;
      LOWORD(v81) = 257;
      goto LABEL_40;
    }
    JSC::JSObject::fillGetterPropertySlot();
    OwnPropertySlotByIndex = 1;
  }
LABEL_40:
  v37 = *((_DWORD *)v83 + 1);
  if (!v37)
  {
    __break(0xC471u);
    JUMPOUT(0x194BDD7FCLL);
  }
  *((_DWORD *)v83 + 1) = v37 - 1;
  v83 = 0;
  v84 = 0;
  if (*((_DWORD *)v87 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v87);
    if (((hasExceptionsAfterHandlingTraps | OwnPropertySlotByIndex) & 1) != 0)
    {
      v38 = hasExceptionsAfterHandlingTraps ^ 1;
      goto LABEL_93;
    }
  }
  else if ((OwnPropertySlotByIndex & 1) != 0)
  {
    v38 = 1;
    goto LABEL_93;
  }
  v60 = *(_QWORD **)(a1 + 24);
  if (a3)
  {
    *(_DWORD *)a3 += 2;
    v61 = (WTF::StringImpl *)a3;
  }
  else
  {
    v61 = 0;
  }
  v76 = v61;
  isSupportedPropertyName = WebCore::HTMLCollection::isSupportedPropertyName(v60, (uint64_t *)&v76);
  v64 = v76;
  v76 = 0;
  if (v64)
  {
    if (*(_DWORD *)v64 == 2)
      WTF::StringImpl::destroy(v64, v62);
    else
      *(_DWORD *)v64 -= 2;
  }
  if ((isSupportedPropertyName & a5) == 1)
  {
    JSC::throwTypeError();
    v38 = 0;
  }
  else
  {
    v38 = isSupportedPropertyName ^ 1;
  }
LABEL_93:
  if (v84)
  {
    v65 = *((_DWORD *)v83 + 1);
    if (!v65)
    {
      __break(0xC471u);
      JUMPOUT(0x194BDD81CLL);
    }
    *((_DWORD *)v83 + 1) = v65 - 1;
  }
  if (v38)
    goto LABEL_97;
  return 0;
}

uint64_t WebCore::JSHTMLCollection::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLCollection::estimatedSize(WebCore::JSHTMLCollection *this, JSC::JSCell *a2, JSC::VM *a3)
{
  uint64_t v4;

  v4 = JSC::JSObject::estimatedSize(this, a2, a3);
  return (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 3) + 56))(*((_QWORD *)this + 3)) + v4;
}

uint64_t WebCore::JSHTMLCollection::visitChildren(WebCore::JSHTMLCollection *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];
  uint64_t v9;
  char v10;

  v8[0] = a2;
  v8[1] = this;
  v10 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v9 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v8;
    JSC::JSObject::visitChildren();
    v6 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 3) + 56))(*((_QWORD *)this + 3));
    result = (*(uint64_t (**)(JSC::JSCell *, uint64_t))(*(_QWORD *)a2 + 96))(a2, v6);
    *(_QWORD *)(v8[0] + 88) = v9;
  }
  return result;
}

unint64_t WebCore::JSHTMLCollection::createPrototype(WebCore::JSHTMLCollection *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t Structure;
  JSC::Structure *v6;

  Structure = WebCore::JSHTMLCollectionPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSHTMLCollectionPrototype::create(this, (JSC::VM *)a2, Structure, v6);
}

uint64_t WebCore::JSHTMLCollectionPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCollection>,(WebCore::DOMConstructorID)519>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4152);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCollection>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCollection>::create(a1, Structure, a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4152) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSHTMLCollection::legacyPlatformObjectGetOwnProperty(uint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4, char a5)
{
  JSC::VM *v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  unsigned __int16 *v34;
  uint64_t v35;
  unsigned int v36;
  BOOL v37;
  uint64_t v38;
  int v39;
  _BYTE *v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int16 *v46;
  uint64_t v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t OwnStaticPropertySlot;
  BOOL v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  unint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  WebCore::JSDOMGlobalObject *v67;
  WebCore::Element *v68;
  unint64_t v69;
  JSC::VM *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unsigned int v75;
  int v76;
  _BYTE *v77;
  uint64_t v78;
  unsigned int v79;
  JSC::JSArrayBufferView *v80;
  unint64_t v81;
  JSC::Structure *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unsigned __int16 *v88;
  unsigned int v89;
  int v90;
  _BYTE *v91;
  uint64_t v92;
  unsigned int v93;
  char v94;
  uint64_t v95;
  int v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int16 *v102;
  uint64_t v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int v112;
  unsigned int v113;
  uint64_t v114;
  int v115;
  _BYTE *v116;
  uint64_t v117;
  unsigned int v118;
  unsigned __int16 *v119;
  uint64_t i;
  unsigned int v121;
  int v122;
  _BYTE *v123;
  uint64_t v124;
  unsigned int v125;
  JSC::VM *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned __int16 *v134;
  uint64_t v135;
  unsigned int v136;
  int v137;
  uint64_t v138;
  int v139;
  unsigned int v140;
  uint64_t v141;
  unsigned __int8 *v142;
  int v143;
  int v144;
  uint64_t v145;
  unsigned __int8 *v146;
  unsigned int v147;
  unsigned __int8 *v148;
  uint64_t v149;
  unsigned int v150;
  JSC::VM *v151;
  uint64_t v152;
  char v153;
  int v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unsigned __int8 *v159;
  unsigned int v160;
  unsigned __int8 *v161;
  uint64_t v162;
  unsigned int v163;
  uint64_t v164;
  unsigned __int8 *v165;
  unsigned int v166;
  unsigned __int8 *v167;
  uint64_t v168;
  unsigned int v169;
  JSC::VM *v170;
  uint64_t v171;
  int v172;
  int v173;
  int v174;
  int v175;
  uint64_t v176;
  int hasExceptionsAfterHandlingTraps;
  const WTF::StringImpl *v178;
  const unsigned __int8 *v179;
  JSC::VM *v180;
  JSC::Structure *v181;
  JSC::JSArrayBufferView *v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  JSC::Structure *v188;
  uint64_t v189;
  int v190;
  char v191;
  JSC::VM *v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  WTF::StringImpl *v196[18];

  v196[16] = *(WTF::StringImpl **)MEMORY[0x1E0C80C00];
  v9 = a2[7];
  if (!a3)
  {
    if ((a5 & 1) != 0)
    {
      if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
        return JSC::JSObject::getOwnStaticPropertySlot();
      return 0;
    }
    v17 = 0;
    v16 = *(_QWORD *)(a1 + 24);
    goto LABEL_12;
  }
  v10 = *(_DWORD *)(a3 + 16);
  if ((v10 & 0x20) != 0)
    goto LABEL_16;
  v11 = *(_BYTE **)(a3 + 8);
  v12 = *(unsigned int *)(a3 + 4);
  if ((v10 & 4) != 0)
  {
    if ((_DWORD)v12)
    {
      v112 = *v11 - 48;
      if (v112 <= 9 && (v12 < 2 || *v11 != 48))
      {
        v158 = v12 - 1;
        v159 = v11 + 1;
        while (v158)
        {
          if (v112 > 0x19999999)
            goto LABEL_201;
          v160 = *v159 - 48;
          if (v160 > 9)
            goto LABEL_201;
          v13 = 0;
          LOBYTE(v12) = 0;
          v14 = 0;
          v37 = __CFADD__(v160, 10 * v112);
          v112 = v160 + 10 * v112;
          --v158;
          ++v159;
          if (v37)
            goto LABEL_203;
        }
        if (v112 == -1)
          v13 = 0;
        else
          v13 = v112 & 0xFFFFFF00;
        if (v112 == -1)
          LOBYTE(v12) = 0;
        else
          LOBYTE(v12) = v112;
        if (v112 == -1)
          v14 = 0;
        else
          v14 = 0x100000000;
        goto LABEL_203;
      }
LABEL_201:
      v13 = 0;
      LOBYTE(v12) = 0;
    }
    else
    {
      v13 = 0;
    }
    v14 = 0;
LABEL_203:
    v15 = v12;
    goto LABEL_9;
  }
  if ((_DWORD)v12 && (v13 = *(unsigned __int16 *)v11 - 48, v13 <= 9))
  {
    if (v12 < 2 || *(_WORD *)v11 != 48)
    {
      v34 = (unsigned __int16 *)(v11 + 2);
      v35 = v12 - 1;
      while (v35)
      {
        if (v13 <= 0x19999999)
        {
          v36 = *v34 - 48;
          if (v36 <= 9)
          {
            v37 = __CFADD__(v36, 10 * v13);
            v13 = v36 + 10 * v13;
            ++v34;
            --v35;
            if (!v37)
              continue;
          }
        }
        goto LABEL_6;
      }
      v54 = v13 == -1;
      v15 = v13 & 0xFFFFFF00;
      v14 = 0x100000000;
      if (v13 == -1)
      {
        v14 = 0;
        LOBYTE(v13) = 0;
      }
      if (v54)
        v15 = 0;
      goto LABEL_8;
    }
    v14 = 0;
  }
  else
  {
LABEL_6:
    v14 = 0;
    LOBYTE(v13) = 0;
  }
  v15 = 0;
LABEL_8:
  v13 = v13;
LABEL_9:
  if ((v14 & 0x100000000) != 0)
  {
    v67 = (WebCore::JSDOMGlobalObject *)(*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 24) + 24))(*(_QWORD *)(a1 + 24), v15 | v13);
    if (v67)
    {
      v69 = WebCore::toJS((WebCore *)a2, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v67, v68);
      if (!*((_DWORD *)v9 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) == 0)
      {
        *(_QWORD *)a4 = v69;
        *(_DWORD *)(a4 + 16) = 2;
        *(_QWORD *)(a4 + 32) = a1;
        v44 = 1;
        *(_BYTE *)(a4 + 49) = 1;
        return v44;
      }
    }
    else
    {
      if ((a3 >> 4))
      {
        v22 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
        if (((a3 >> 4) & ~*(_DWORD *)(v22 + 0x20)) == 0)
        {
          v114 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7]);
          if (v114)
          {
            v196[0] = (WTF::StringImpl *)a3;
            v49 = JSC::PropertyTable::get(v114, (uint64_t *)v196);
            if ((_DWORD)v49 != -1)
              goto LABEL_61;
          }
        }
      }
      if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
        return 1;
      v115 = *(_DWORD *)(a3 + 16);
      if ((v115 & 0x20) == 0)
      {
        v116 = *(_BYTE **)(a3 + 8);
        v117 = *(unsigned int *)(a3 + 4);
        if ((v115 & 4) != 0)
        {
          if (!(_DWORD)v117)
            return 0;
          v118 = *v116 - 48;
          if (v118 > 9 || v117 >= 2 && *v116 == 48)
            return 0;
          v164 = v117 - 1;
          v165 = v116 + 1;
          while (v164)
          {
            if (v118 > 0x19999999)
              return 0;
            v166 = *v165 - 48;
            if (v166 > 9)
              return 0;
            v44 = 0;
            v37 = __CFADD__(v166, 10 * v118);
            v118 = v166 + 10 * v118;
            --v164;
            ++v165;
            if (v37)
              return v44;
          }
        }
        else
        {
          if (!(_DWORD)v117)
            return 0;
          v118 = *(unsigned __int16 *)v116 - 48;
          if (v118 > 9 || v117 >= 2 && *(_WORD *)v116 == 48)
            return 0;
          v119 = (unsigned __int16 *)(v116 + 2);
          for (i = v117 - 1; i; --i)
          {
            if (v118 > 0x19999999)
              return 0;
            v121 = *v119 - 48;
            if (v121 > 9)
              return 0;
            v44 = 0;
            v37 = __CFADD__(v121, 10 * v118);
            v118 = v121 + 10 * v118;
            ++v119;
            if (v37)
              return v44;
          }
        }
        if (v118 != -1)
          return JSC::JSObject::getOwnPropertySlotByIndex();
      }
    }
    return 0;
  }
  if ((a5 & 1) != 0)
    goto LABEL_16;
  v16 = *(_QWORD *)(a1 + 24);
  *(_DWORD *)a3 += 2;
  v17 = (WTF::StringImpl *)a3;
LABEL_12:
  v196[0] = v17;
  v20 = (*(uint64_t (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v16 + 64))(v16, v196);
  v21 = v196[0];
  v196[0] = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v18);
    else
      *(_DWORD *)v21 -= 2;
  }
  if (!v20)
    goto LABEL_16;
  *(_DWORD *)(v20 + 24) += 2;
  v70 = a2[7];
  v186 = 0xFFFFFFFF00000000;
  v188 = 0;
  v189 = 0;
  v187 = a1;
  v190 = 196608;
  v191 = 0;
  v194 = 0;
  v195 = 0;
  v192 = v70;
  ++*((_DWORD *)v70 + 1);
  v193 = 1;
  v71 = a3 >> 4;
  if ((a3 >> 4))
  {
    v72 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if ((v71 & ~*(_DWORD *)(v72 + 0x20)) == 0)
    {
      v73 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v70);
      if (v73)
      {
        v196[0] = (WTF::StringImpl *)a3;
        v74 = JSC::PropertyTable::get(v73, (uint64_t *)v196);
        v75 = v74;
        if ((_DWORD)v74 != -1)
        {
          v98 = HIDWORD(v74);
          v99 = (uint64_t *)(a1 + 8 * (int)v74 + 16);
          if ((int)v74 >= 64)
            v99 = (uint64_t *)(*(_QWORD *)(a1 + 8) + ((uint64_t)(0x3F00000000 - (v74 << 32)) >> 29) - 8);
          v19 = *v99;
          if ((*v99 & 0xFFFE000000000002) == 0)
          {
            v105 = *(unsigned __int8 *)(v19 + 5);
            if (v105 == 6)
            {
              v107 = *(_DWORD *)(v72 + 16) & 3;
              v108 = *(_QWORD *)(v19 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C))
              {
                v110 = *(_QWORD *)(v19 + 24);
                v109 = *(_QWORD *)(v19 + 32);
                v184 = *(_QWORD *)(v19 + 8);
                v185 = v108;
                LODWORD(v186) = HIDWORD(v74);
                v188 = (JSC::Structure *)a1;
LABEL_193:
                BYTE1(v190) = 3;
                v95 = 0;
                v94 = 1;
                if (v107 != 2)
                  LOBYTE(v190) = 1;
                HIBYTE(v190) = 1;
                v194 = v110;
                v195 = v109;
                goto LABEL_145;
              }
              v184 = *(_QWORD *)(v19 + 8);
              v185 = v108;
              LODWORD(v186) = HIDWORD(v74);
              v188 = (JSC::Structure *)a1;
LABEL_234:
              v94 = 1;
              BYTE1(v190) = 3;
              v95 = 0;
              if (v107 != 2)
                LOBYTE(v190) = 1;
              goto LABEL_145;
            }
            if (v105 == 5)
              goto LABEL_179;
          }
          v95 = 0;
          v184 = v19;
          v188 = (JSC::Structure *)a1;
          goto LABEL_163;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    goto LABEL_190;
  if (a3)
  {
    v76 = *(_DWORD *)(a3 + 16);
    if ((v76 & 0x20) == 0)
    {
      v77 = *(_BYTE **)(a3 + 8);
      v78 = *(unsigned int *)(a3 + 4);
      if ((v76 & 4) != 0)
      {
        if (!(_DWORD)v78)
          goto LABEL_113;
        v79 = *v77 - 48;
        if (v79 > 9 || v78 >= 2 && *v77 == 48)
          goto LABEL_113;
        v145 = v78 - 1;
        v146 = v77 + 1;
        while (v145)
        {
          if (v79 <= 0x19999999)
          {
            v147 = *v146 - 48;
            if (v147 <= 9)
            {
              v37 = __CFADD__(v147, 10 * v79);
              v79 = v147 + 10 * v79;
              --v145;
              ++v146;
              if (!v37)
                continue;
            }
          }
          goto LABEL_113;
        }
      }
      else
      {
        if (!(_DWORD)v78)
          goto LABEL_113;
        v79 = *(unsigned __int16 *)v77 - 48;
        if (v79 > 9 || v78 >= 2 && *(_WORD *)v77 == 48)
          goto LABEL_113;
        v87 = v78 - 1;
        v88 = (unsigned __int16 *)(v77 + 2);
        while (v87)
        {
          if (v79 <= 0x19999999)
          {
            v89 = *v88 - 48;
            if (v89 <= 9)
            {
              v37 = __CFADD__(v89, 10 * v79);
              v79 = v89 + 10 * v79;
              --v87;
              ++v88;
              if (!v37)
                continue;
            }
          }
          goto LABEL_113;
        }
      }
      if (v79 != -1 && (JSC::JSObject::getOwnPropertySlotByIndex() & 1) != 0)
        goto LABEL_190;
    }
  }
LABEL_113:
  v80 = *(JSC::JSArrayBufferView **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x30);
  if (!v80)
    v80 = *(JSC::JSArrayBufferView **)(a1 + 16);
  v182 = v80;
  if (((unint64_t)v80 & 0xFFFE000000000002) != 0 || *((unsigned __int8 *)v80 + 5) < 0x17u)
    goto LABEL_144;
  v81 = (unint64_t)v80 + 6;
  if ((*((_BYTE *)v80 + 6) & 8) == 0)
  {
    v180 = a2[7];
    v82 = v80;
    while (1)
    {
      v83 = *(_DWORD *)v82 & 0xFFFFFFFE;
      v84 = 16 * v83;
      if ((_DWORD)v71)
      {
        if ((v71 & ~*(_DWORD *)(16 * v83 + 0x20)) == 0)
        {
          v85 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v84, v180);
          if (v85)
          {
            v196[0] = (WTF::StringImpl *)a3;
            v86 = JSC::PropertyTable::get(v85, (uint64_t *)v196);
            v75 = v86;
            if ((_DWORD)v86 != -1)
              break;
          }
        }
      }
      if ((*(_BYTE *)v81 & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
        goto LABEL_190;
      v181 = *(JSC::Structure **)(v84 + 48);
      if (!v181)
        v181 = (JSC::Structure *)*((_QWORD *)v82 + 2);
      if (((unint64_t)v181 & 0xFFFE000000000002) != 0 || *((unsigned __int8 *)v181 + 5) < 0x17u)
      {
        if (!a3)
          goto LABEL_144;
        v90 = *(_DWORD *)(a3 + 16);
        if ((v90 & 0x20) != 0)
          goto LABEL_144;
        v91 = *(_BYTE **)(a3 + 8);
        v92 = *(unsigned int *)(a3 + 4);
        if ((v90 & 4) != 0)
        {
          if (!(_DWORD)v92)
            goto LABEL_144;
          v93 = *v91 - 48;
          if (v93 > 9 || v92 >= 2 && *v91 == 48)
            goto LABEL_144;
          v148 = v91 + 1;
          v149 = v92 - 1;
          while (v149)
          {
            if (v93 <= 0x19999999)
            {
              v150 = *v148 - 48;
              if (v150 <= 9)
              {
                v37 = __CFADD__(v150, 10 * v93);
                v93 = v150 + 10 * v93;
                ++v148;
                --v149;
                if (!v37)
                  continue;
              }
            }
            goto LABEL_144;
          }
        }
        else
        {
          if (!(_DWORD)v92)
            goto LABEL_144;
          v93 = *(unsigned __int16 *)v91 - 48;
          if (v93 > 9 || v92 >= 2 && *(_WORD *)v91 == 48)
            goto LABEL_144;
          v102 = (unsigned __int16 *)(v91 + 2);
          v103 = v92 - 1;
          while (v103)
          {
            if (v93 <= 0x19999999)
            {
              v104 = *v102 - 48;
              if (v104 <= 9)
              {
                v37 = __CFADD__(v104, 10 * v93);
                v93 = v104 + 10 * v93;
                ++v102;
                --v103;
                if (!v37)
                  continue;
              }
            }
            goto LABEL_144;
          }
        }
        if (v93 == -1)
        {
LABEL_144:
          v94 = 0;
          v95 = v20;
          v20 = 0;
          goto LABEL_145;
        }
        v151 = a2[7];
        while (2)
        {
          v152 = 16 * (*(_DWORD *)v182 & 0xFFFFFFFE);
          v153 = (*(uint64_t (**)(void))(16 * *(unsigned int *)(v152 + 0x4C) + 0x70))();
          if (*((_DWORD *)v151 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v151) & 1) != 0)
            goto LABEL_144;
          if ((v153 & 1) != 0)
            goto LABEL_190;
          v154 = BYTE2(v190);
          if (BYTE2(v190) == 3)
          {
            if (v191)
              goto LABEL_144;
            v155 = *((unsigned __int8 *)v182 + 5);
            if (v155 != 61)
            {
LABEL_333:
              if ((v155 - 39) <= 0xA)
              {
                if (JSC::JSArrayBufferView::length(v182) <= v93)
                  goto LABEL_144;
                v154 = BYTE2(v190);
              }
              goto LABEL_336;
            }
            goto LABEL_338;
          }
          v155 = *((unsigned __int8 *)v182 + 5);
          if (v155 != 61)
            goto LABEL_333;
          if (BYTE2(v190) == 1)
            goto LABEL_144;
LABEL_336:
          if ((*(_WORD *)(v152 + 12) & 0x800) != 0 && v154 != 3)
          {
            if ((*(_WORD *)(16 * (*(_DWORD *)v182 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
            {
              v156 = (*(uint64_t (**)(JSC::JSArrayBufferView *, JSC::VM **))(16
                                                                                     * *(unsigned int *)(16 * (*(_DWORD *)v182 & 0xFFFFFFFE) + 0x4C)
                                                                                     + 0xB0))(v182, a2);
            }
            else
            {
              v156 = *(_QWORD *)(16 * (*(_DWORD *)v182 & 0xFFFFFFFE) + 0x30);
              if (!v156)
                v156 = *((_QWORD *)v182 + 2);
            }
            if (*((_DWORD *)v151 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v151) & 1) != 0)
              goto LABEL_144;
          }
          else
          {
LABEL_338:
            v156 = *(_QWORD *)(16 * (*(_DWORD *)v182 & 0xFFFFFFFE) + 0x30);
            if (!v156)
              v156 = *((_QWORD *)v182 + 2);
          }
          if ((v156 & 0xFFFE000000000002) != 0)
            goto LABEL_144;
          v182 = (JSC::JSArrayBufferView *)v156;
          if (*(unsigned __int8 *)(v156 + 5) <= 0x16u)
            goto LABEL_144;
          continue;
        }
      }
      v82 = v181;
      v81 = (unint64_t)v181 + 6;
      if ((*((_BYTE *)v181 + 6) & 8) != 0)
        goto LABEL_237;
    }
    v98 = HIDWORD(v86);
    if ((int)v86 > 63)
    {
      v100 = *((_QWORD *)v82 + 1) - 8;
      v101 = 0x3F00000000 - (v86 << 32);
    }
    else
    {
      v100 = (uint64_t)v82 + 16;
      v101 = v86 << 32;
    }
    v19 = *(_QWORD *)(v100 + (v101 >> 29));
    if ((v19 & 0xFFFE000000000002) != 0)
    {
LABEL_167:
      v95 = 0;
      v184 = v19;
      v188 = v82;
      goto LABEL_163;
    }
    v106 = *(unsigned __int8 *)(v19 + 5);
    if (v106 != 6)
    {
      if (v106 != 5)
        goto LABEL_167;
LABEL_179:
      JSC::JSObject::fillGetterPropertySlot();
LABEL_190:
      v95 = 0;
      v94 = 1;
      goto LABEL_145;
    }
    v107 = *(_DWORD *)(v84 + 16) & 3;
    v111 = *(_QWORD *)(v19 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C))
    {
      v110 = *(_QWORD *)(v19 + 24);
      v109 = *(_QWORD *)(v19 + 32);
      v184 = *(_QWORD *)(v19 + 8);
      v185 = v111;
      LODWORD(v186) = HIDWORD(v86);
      v188 = v82;
      goto LABEL_193;
    }
    v184 = *(_QWORD *)(v19 + 8);
    v185 = v111;
    LODWORD(v186) = HIDWORD(v86);
    v188 = v82;
    goto LABEL_234;
  }
  v181 = v80;
LABEL_237:
  if (a3)
  {
    v122 = *(_DWORD *)(a3 + 16);
    if ((v122 & 0x20) == 0)
    {
      v123 = *(_BYTE **)(a3 + 8);
      v124 = *(unsigned int *)(a3 + 4);
      if ((v122 & 4) != 0)
      {
        if ((_DWORD)v124)
        {
          v125 = *v123 - 48;
          if (v125 <= 9 && (v124 < 2 || *v123 != 48))
          {
            v167 = v123 + 1;
            v168 = v124 - 1;
            while (v168)
            {
              if (v125 <= 0x19999999)
              {
                v169 = *v167 - 48;
                if (v169 <= 9)
                {
                  v37 = __CFADD__(v169, 10 * v125);
                  v125 = v169 + 10 * v125;
                  ++v167;
                  --v168;
                  if (!v37)
                    continue;
                }
              }
              goto LABEL_242;
            }
LABEL_396:
            if (v125 != -1)
            {
              v170 = a2[7];
              while (1)
              {
                v171 = 16 * (*(_DWORD *)v182 & 0xFFFFFFFE);
                v172 = (*(uint64_t (**)(void))(16 * *(unsigned int *)(v171 + 0x4C) + 0x70))();
                v173 = v172;
                if (*((_DWORD *)v170 + 20))
                {
                  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v170);
                  if (((hasExceptionsAfterHandlingTraps | v173) & 1) != 0)
                  {
                    if (!hasExceptionsAfterHandlingTraps)
                      goto LABEL_190;
                    goto LABEL_144;
                  }
                }
                else if ((v172 & 1) != 0)
                {
                  goto LABEL_190;
                }
                v174 = BYTE2(v190);
                if (BYTE2(v190) == 3)
                {
                  if (v191)
                    goto LABEL_144;
                  v175 = *((unsigned __int8 *)v182 + 5);
                  if (v175 == 61)
                  {
LABEL_412:
                    v176 = *(_QWORD *)(16 * (*(_DWORD *)v182 & 0xFFFFFFFE) + 0x30);
                    if (!v176)
                      v176 = *((_QWORD *)v182 + 2);
                    goto LABEL_414;
                  }
                }
                else
                {
                  v175 = *((unsigned __int8 *)v182 + 5);
                  if (v175 == 61)
                  {
                    if (BYTE2(v190) == 1)
                      goto LABEL_144;
                    goto LABEL_410;
                  }
                }
                if ((v175 - 39) <= 0xA)
                {
                  if (JSC::JSArrayBufferView::length(v182) <= v125)
                    goto LABEL_144;
                  v174 = BYTE2(v190);
                }
LABEL_410:
                if ((*(_WORD *)(v171 + 12) & 0x800) == 0 || v174 == 3)
                  goto LABEL_412;
                if ((*(_WORD *)(16 * (*(_DWORD *)v182 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
                {
                  v176 = (*(uint64_t (**)(JSC::JSArrayBufferView *, JSC::VM **))(16
                                                                                         * *(unsigned int *)(16 * (*(_DWORD *)v182 & 0xFFFFFFFE) + 0x4C)
                                                                                         + 0xB0))(v182, a2);
                }
                else
                {
                  v176 = *(_QWORD *)(16 * (*(_DWORD *)v182 & 0xFFFFFFFE) + 0x30);
                  if (!v176)
                    v176 = *((_QWORD *)v182 + 2);
                }
                if (*((_DWORD *)v170 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v170) & 1) != 0)
                  goto LABEL_144;
LABEL_414:
                if ((v176 & 0xFFFE000000000002) == 0)
                {
                  v182 = (JSC::JSArrayBufferView *)v176;
                  if (*(unsigned __int8 *)(v176 + 5) > 0x16u)
                    continue;
                }
                goto LABEL_144;
              }
            }
          }
        }
      }
      else if ((_DWORD)v124)
      {
        v125 = *(unsigned __int16 *)v123 - 48;
        if (v125 <= 9 && (v124 < 2 || *(_WORD *)v123 != 48))
        {
          v134 = (unsigned __int16 *)(v123 + 2);
          v135 = v124 - 1;
          while (v135)
          {
            if (v125 <= 0x19999999)
            {
              v136 = *v134 - 48;
              if (v136 <= 9)
              {
                v37 = __CFADD__(v136, 10 * v125);
                v125 = v136 + 10 * v125;
                ++v134;
                --v135;
                if (!v37)
                  continue;
              }
            }
            goto LABEL_242;
          }
          goto LABEL_396;
        }
      }
    }
  }
LABEL_242:
  v126 = a2[7];
  while (1)
  {
    v127 = 16 * (*(_DWORD *)v181 & 0xFFFFFFFE);
    if ((*((_BYTE *)v181 + 6) & 8) != 0)
    {
      v183 = (*(uint64_t (**)(JSC::Structure *, JSC::VM **, unint64_t, uint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v181 & 0xFFFFFFFE) + 0x4C)
                                                                                                  + 0x68))(v181, a2, a3, &v184);
      if (*((_DWORD *)v126 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v126) & 1) != 0)
        goto LABEL_144;
      if ((v183 & 1) != 0)
        goto LABEL_190;
      if (BYTE2(v190) == 3)
      {
        if (v191)
          goto LABEL_144;
        v139 = *((unsigned __int8 *)v181 + 5);
        if (v139 == 61)
          goto LABEL_249;
      }
      else
      {
        v139 = *((unsigned __int8 *)v181 + 5);
        if (v139 == 61)
        {
          if (BYTE2(v190) == 1)
            goto LABEL_144;
          goto LABEL_249;
        }
      }
      if (!a3)
        goto LABEL_249;
      if ((v139 - 50) < 0xFFFFFFF5)
        goto LABEL_249;
      v140 = *(_DWORD *)(a3 + 16);
      if ((v140 & 0x20) != 0)
        goto LABEL_249;
      v141 = *(unsigned int *)(a3 + 4);
      if (!(_DWORD)v141)
        goto LABEL_249;
      v142 = *(unsigned __int8 **)(a3 + 8);
      if ((v140 & 4) != 0)
      {
        v143 = *v142;
        if ((_DWORD)v141 == 1)
        {
LABEL_446:
          if ((v143 - 48) < 0xA)
            goto LABEL_144;
          goto LABEL_249;
        }
        if (v143 == 45)
        {
          v144 = v142[1];
LABEL_456:
          if ((v144 - 48) >= 0xA)
          {
            if ((_DWORD)v141 != 9 || v144 != 73)
              goto LABEL_249;
          }
          else if ((_DWORD)v141 == 2)
          {
            goto LABEL_144;
          }
LABEL_460:
          v81 = v81 & 0xFFFFFF0000000000 | v141 | ((unint64_t)((v140 >> 2) & 1) << 32);
          JSC::jsToNumber();
          v178 = (const WTF::StringImpl *)WTF::numberToString();
          if ((WTF::equal((WTF *)a3, v178, v179) & 1) != 0)
            goto LABEL_144;
          goto LABEL_249;
        }
      }
      else
      {
        v143 = *(unsigned __int16 *)v142;
        if ((_DWORD)v141 == 1)
          goto LABEL_446;
        if (v143 == 45)
        {
          v144 = *((unsigned __int16 *)v142 + 1);
          goto LABEL_456;
        }
      }
      if ((v143 - 48) >= 0xA && ((_DWORD)v141 != 8 || v143 != 73) && ((_DWORD)v141 != 3 || v143 != 78))
        goto LABEL_249;
      goto LABEL_460;
    }
    if ((_DWORD)v71)
    {
      if ((v71 & ~*(_DWORD *)(16 * (*(_DWORD *)v181 & 0xFFFFFFFE) + 0x20)) == 0)
      {
        v128 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v181 & 0xFFFFFFFE)), v126);
        if (v128)
        {
          v196[0] = (WTF::StringImpl *)a3;
          v129 = JSC::PropertyTable::get(v128, (uint64_t *)v196);
          v75 = v129;
          if ((_DWORD)v129 != -1)
            break;
        }
      }
    }
    if ((*((_BYTE *)v181 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      goto LABEL_190;
LABEL_249:
    if ((*(_WORD *)(v127 + 12) & 0x800) == 0)
    {
      v130 = *(_DWORD *)v181;
LABEL_251:
      v131 = *(_QWORD *)(16 * (v130 & 0xFFFFFFFE) + 0x30);
      if (!v131)
        v131 = *((_QWORD *)v181 + 2);
      goto LABEL_253;
    }
    v130 = *(_DWORD *)v181;
    if (BYTE2(v190) == 3)
      goto LABEL_251;
    v157 = 16 * (v130 & 0xFFFFFFFE);
    if ((*(_WORD *)(v157 + 12) & 0x800) != 0)
    {
      v131 = (*(uint64_t (**)(JSC::Structure *, JSC::VM **))(16 * *(unsigned int *)(v157 + 76) + 0xB0))(v181, a2);
    }
    else
    {
      v131 = *(_QWORD *)(v157 + 48);
      if (!v131)
        v131 = *((_QWORD *)v181 + 2);
    }
    if (*((_DWORD *)v126 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v126) & 1) != 0)
      goto LABEL_144;
LABEL_253:
    if ((v131 & 0xFFFE000000000002) == 0)
    {
      v181 = (JSC::Structure *)v131;
      if (*(unsigned __int8 *)(v131 + 5) > 0x16u)
        continue;
    }
    goto LABEL_144;
  }
  v98 = HIDWORD(v129);
  if ((int)v129 > 63)
  {
    v132 = *((_QWORD *)v181 + 1) - 8;
    v133 = 0x3F00000000 - (v129 << 32);
  }
  else
  {
    v132 = (uint64_t)v181 + 16;
    v133 = v129 << 32;
  }
  v19 = *(_QWORD *)(v132 + (v133 >> 29));
  if ((v19 & 0xFFFE000000000002) == 0)
  {
    v137 = *(unsigned __int8 *)(v19 + 5);
    if (v137 != 6)
    {
      if (v137 != 5)
        goto LABEL_260;
      goto LABEL_179;
    }
    v107 = *(_DWORD *)(v127 + 16) & 3;
    v138 = *(_QWORD *)(v19 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C))
    {
      v110 = *(_QWORD *)(v19 + 24);
      v109 = *(_QWORD *)(v19 + 32);
      v184 = *(_QWORD *)(v19 + 8);
      v185 = v138;
      LODWORD(v186) = HIDWORD(v129);
      v188 = v181;
      goto LABEL_193;
    }
    v184 = *(_QWORD *)(v19 + 8);
    v185 = v138;
    LODWORD(v186) = HIDWORD(v129);
    v188 = v181;
    goto LABEL_234;
  }
LABEL_260:
  v95 = 0;
  v184 = v19;
  v188 = v181;
LABEL_163:
  v186 = __PAIR64__(v75, v98);
  v94 = 1;
  LOWORD(v190) = 257;
LABEL_145:
  if (v193)
  {
    v96 = *((_DWORD *)v192 + 1);
    if (!v96)
    {
      __break(0xC471u);
      JUMPOUT(0x194BDE970);
    }
    *((_DWORD *)v192 + 1) = v96 - 1;
  }
  if (v20)
  {
    if (*(_DWORD *)(v20 + 24) == 2)
    {
      if ((*(_WORD *)(v20 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v20, v18);
    }
    else
    {
      *(_DWORD *)(v20 + 24) -= 2;
    }
  }
  if ((v94 & 1) != 0)
  {
LABEL_16:
    if ((a3 >> 4))
    {
      v22 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
      if (((a3 >> 4) & ~*(_DWORD *)(v22 + 0x20)) == 0)
      {
        v23 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x58);
        if (v23
          || (v38 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x40)) != 0
          && (*(_BYTE *)(v38 + 5) == 1 || *(_DWORD *)(v38 + 80) >= 2u)
          && (v23 = JSC::Structure::materializePropertyTable((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7])) != 0)
        {
          if (*(_DWORD *)(v23 + 24))
          {
            v24 = *(_QWORD *)(v23 + 16);
            v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
            v26 = *(unsigned int *)(v23 + 8);
            v27 = *(_DWORD *)(a3 + 16);
            if ((v24 & 1) != 0)
            {
              if ((v27 & 0x20) != 0)
                v27 = *(_DWORD *)(a3 + 32);
              v28 = *(_DWORD *)(v23 + 12);
              v29 = (v27 >> 8) & *(_QWORD *)&v28;
              v30 = *(unsigned __int8 *)(v25 + v29);
              if (*(_BYTE *)(v25 + v29))
              {
                v31 = v25 + v26;
                v32 = 1;
                while (1)
                {
                  v33 = *(_QWORD *)(v31 + 8 * (v30 - 1));
                  if (a3 == (v33 & 0xFFFFFFFFFFFFLL))
                    break;
                  v29 = ((_DWORD)v29 + v32) & v28;
                  v30 = *(unsigned __int8 *)(v25 + v29);
                  ++v32;
                  if (!*(_BYTE *)(v25 + v29))
                    goto LABEL_39;
                }
                v49 = (v33 >> 16) & 0xFF00000000 | HIBYTE(v33);
                goto LABEL_60;
              }
            }
            else
            {
              if ((v27 & 0x20) != 0)
                v27 = *(_DWORD *)(a3 + 32);
              v56 = *(_DWORD *)(v23 + 12);
              v57 = v56 & (v27 >> 8);
              v58 = *(_DWORD *)(v25 + 4 * v57);
              if (v58)
              {
                v59 = v25 + 4 * v26;
                v60 = 1;
                while (1)
                {
                  v61 = (v58 - 1);
                  if (*(_QWORD *)(v59 + 16 * v61) == a3)
                    break;
                  v57 = (v57 + v60) & v56;
                  v58 = *(_DWORD *)(v25 + 4 * v57);
                  ++v60;
                  if (!v58)
                    goto LABEL_39;
                }
                v49 = *(unsigned int *)(v59 + 16 * v61 + 8) | ((unint64_t)*(unsigned __int8 *)(v59 + 16 * v61 + 12) << 32);
LABEL_60:
                if ((_DWORD)v49 != -1)
                {
LABEL_61:
                  if ((int)v49 > 63)
                  {
                    v50 = *(_QWORD *)(a1 + 8) - 8;
                    v51 = 0x3F00000000 - (v49 << 32);
                  }
                  else
                  {
                    v50 = a1 + 16;
                    v51 = v49 << 32;
                  }
                  v52 = *(_QWORD *)(v50 + (v51 >> 29));
                  if ((v52 & 0xFFFE000000000002) != 0)
                    goto LABEL_64;
                  v55 = *(unsigned __int8 *)(v52 + 5);
                  if (v55 == 6)
                  {
                    v62 = *(_DWORD *)(v22 + 16) & 3;
                    v64 = *(_QWORD *)(v52 + 8);
                    v63 = *(_QWORD *)(v52 + 16);
                    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v52 & 0xFFFFFFFE) + 0x4C))
                    {
                      v66 = *(_QWORD *)(v52 + 24);
                      v65 = *(_QWORD *)(v52 + 32);
                      *(_QWORD *)a4 = v64;
                      *(_QWORD *)(a4 + 8) = v63;
                      *(_DWORD *)(a4 + 16) = HIDWORD(v49);
                      *(_QWORD *)(a4 + 32) = a1;
                      *(_BYTE *)(a4 + 49) = 3;
                      v44 = 1;
                      if (v62 != 2)
                        *(_BYTE *)(a4 + 48) = 1;
                      *(_BYTE *)(a4 + 51) = 1;
                      *(_QWORD *)(a4 + 72) = v66;
                      *(_QWORD *)(a4 + 80) = v65;
                    }
                    else
                    {
                      *(_QWORD *)a4 = v64;
                      *(_QWORD *)(a4 + 8) = v63;
                      *(_DWORD *)(a4 + 16) = HIDWORD(v49);
                      *(_QWORD *)(a4 + 32) = a1;
                      v44 = 1;
                      *(_BYTE *)(a4 + 49) = 3;
                      if (v62 != 2)
                        *(_BYTE *)(a4 + 48) = 1;
                    }
                    return v44;
                  }
                  if (v55 != 5)
                  {
LABEL_64:
                    *(_QWORD *)a4 = v52;
                    *(_QWORD *)(a4 + 32) = a1;
                    *(_DWORD *)(a4 + 16) = HIDWORD(v49);
                    *(_DWORD *)(a4 + 20) = v49;
                    v44 = 1;
                    *(_WORD *)(a4 + 48) = 257;
                    return v44;
                  }
                  JSC::JSObject::fillGetterPropertySlot();
                  return 1;
                }
              }
            }
          }
        }
      }
    }
LABEL_39:
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
    {
      OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
      v44 = OwnStaticPropertySlot;
      if (!a3 || (OwnStaticPropertySlot & 1) != 0)
        return v44;
LABEL_41:
      v39 = *(_DWORD *)(a3 + 16);
      if ((v39 & 0x20) != 0)
        return 0;
      v40 = *(_BYTE **)(a3 + 8);
      v41 = *(unsigned int *)(a3 + 4);
      if ((v39 & 4) != 0)
      {
        if ((_DWORD)v41)
        {
          v113 = *v40 - 48;
          if (v113 > 9 || v41 >= 2 && *v40 == 48)
          {
LABEL_208:
            v43 = 0;
          }
          else
          {
            v161 = v40 + 1;
            v162 = v41 - 1;
            while (v162)
            {
              if (v113 > 0x19999999)
                goto LABEL_208;
              v163 = *v161 - 48;
              if (v163 > 9)
                goto LABEL_208;
              v43 = 0;
              v37 = __CFADD__(v163, 10 * v113);
              v113 = v163 + 10 * v113;
              ++v161;
              --v162;
              if (v37)
                goto LABEL_46;
            }
            v43 = 0x100000000;
            if (v113 == -1)
              v43 = 0;
          }
        }
        else
        {
          v43 = 0;
        }
      }
      else if ((_DWORD)v41)
      {
        v42 = *(unsigned __int16 *)v40 - 48;
        if (v42 > 9 || v41 >= 2 && *(_WORD *)v40 == 48)
        {
LABEL_45:
          v43 = 0;
        }
        else
        {
          v46 = (unsigned __int16 *)(v40 + 2);
          v47 = v41 - 1;
          while (v47)
          {
            if (v42 <= 0x19999999)
            {
              v48 = *v46 - 48;
              if (v48 <= 9)
              {
                v37 = __CFADD__(v48, 10 * v42);
                v42 = v48 + 10 * v42;
                ++v46;
                --v47;
                if (!v37)
                  continue;
              }
            }
            goto LABEL_45;
          }
          v54 = v42 == -1;
          v43 = 0x100000000;
          if (v54)
            v43 = 0;
        }
      }
      else
      {
        v43 = 0;
      }
LABEL_46:
      if ((v43 & 0x100000000) == 0)
        return 0;
      return JSC::JSObject::getOwnPropertySlotByIndex();
    }
    if (a3)
      goto LABEL_41;
    return 0;
  }
  if (v95)
    v97 = WebCore::toJS((WebCore *)a2, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), (WebCore::JSDOMGlobalObject *)v95, (WebCore::Element *)v19);
  else
    v97 = 2;
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
  {
    v44 = 0;
  }
  else
  {
    *(_QWORD *)a4 = v97;
    *(_DWORD *)(a4 + 16) = 6;
    *(_QWORD *)(a4 + 32) = a1;
    v44 = 1;
    *(_BYTE *)(a4 + 49) = 1;
  }
  if (v95)
  {
    if (*(_DWORD *)(v95 + 24) == 2)
    {
      if ((*(_WORD *)(v95 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v95, v18);
    }
    else
    {
      *(_DWORD *)(v95 + 24) -= 2;
    }
  }
  return v44;
}

unint64_t WebCore::jsHTMLCollectionConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLCollectionPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCollection>,(WebCore::DOMConstructorID)519>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSHTMLCollectionOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  WebCore::Node *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  WebCore::Node *v15;
  uint64_t result;
  WebCore::Node *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 24);
  if (a5)
  {
    *a5 = "Reachable from HTMLCollection ownerNode";
    a5[1] = 40;
  }
  if (v5)
  {
    v19 = a4;
    if ((*(_BYTE *)(v5 + 22) & 8) != 0)
      v6 = *(WebCore::Node **)(*(_QWORD *)(v5 + 40) + 8);
    else
      v6 = WebCore::Node::traverseToOpaqueRoot((WebCore::Node *)v5);
    a4 = v19;
  }
  else
  {
    v6 = 0;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = v6;
    v18 = a4;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
    v6 = v17;
    a4 = v18;
    if ((_DWORD)result)
    {
LABEL_14:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, WebCore::Node *))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(WebCore::Node **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194BDF554);
      }
    }
  }
  return result;
}

uint64_t WebCore::JSHTMLCollection::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSHTMLCollection::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSHTMLCollection::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

uint64_t WebCore::JSHTMLDListElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLElement::visitChildren(WebCore::JSHTMLElement *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    result = WebCore::JSNode::visitChildren(this, a2, a3);
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSHTMLElement::JSHTMLElement(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t WebCore::JSHTMLDListElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLDListElementPrototype::create(WebCore::JSHTMLDListElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSHTMLDListElement::s_info, (uint64_t)&WebCore::JSHTMLDListElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDListElement>,(WebCore::DOMConstructorID)520>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4160);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDListElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLDListElement::s_info + ~((_QWORD)&WebCore::JSHTMLDListElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDListElement::s_info + ~((_QWORD)&WebCore::JSHTMLDListElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLDListElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLDListElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLDListElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLDListElementPrototype::create((WebCore::JSHTMLDListElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLDListElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLDListElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4160) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLDListElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLDListElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDListElement>,(WebCore::DOMConstructorID)520>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLDListElement_compact(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::compactAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::compactAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::compactAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLDListElement_compact(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLDListElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLDListElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::compactAttr, v12, a4);
  return 1;
}

uint64_t WebCore::JSHTMLElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLDataElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLDataElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLDataElementPrototype::create(WebCore::JSHTMLDataElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSHTMLDataElement::s_info, (uint64_t)&WebCore::JSHTMLDataElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDataElement>,(WebCore::DOMConstructorID)521>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4168);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDataElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLDataElement::s_info + ~((_QWORD)&WebCore::JSHTMLDataElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDataElement::s_info + ~((_QWORD)&WebCore::JSHTMLDataElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLDataElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLDataElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLDataElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLDataElementPrototype::create((WebCore::JSHTMLDataElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLDataElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLDataElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4168) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLDataElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLDataElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDataElement>,(WebCore::DOMConstructorID)521>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLDataElement_value(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::valueAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLDataElement_value(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLDataElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLDataElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::valueAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::valueAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLDataListElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLDataListElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLDataListElementPrototype::create(WebCore::JSHTMLDataListElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSHTMLDataListElement::s_info, (uint64_t)&WebCore::JSHTMLDataListElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDataListElement>,(WebCore::DOMConstructorID)522>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4176);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDataListElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLDataListElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLDataListElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDataListElement::s_info
                                                                       + ~((_QWORD)&WebCore::JSHTMLDataListElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLDataListElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLDataListElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLDataListElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLDataListElementPrototype::create((WebCore::JSHTMLDataListElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLDataListElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLDataListElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4176) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLDataListElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLDataListElementPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDataListElement>,(WebCore::DOMConstructorID)522>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLDataListElement_options(int a1, WebCore::HTMLDataListElement **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLDataListElement::options(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

uint64_t WebCore::JSHTMLDetailsElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLDetailsElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLDetailsElementPrototype::create(WebCore::JSHTMLDetailsElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  JSC::Structure *v18;
  int v19;
  unint64_t v21;
  WTF::StringImpl *v22[6];
  int v23;
  int v24;
  JSC::Structure *v25;
  int v26;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v21 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v21);
    *((_QWORD *)this + 4865) = SlowCase + (int)v21;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSHTMLDetailsElement::s_info, &WebCore::JSHTMLDetailsElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194BE1D60);
  }
  v10 = v9 - 192;
  if (!v9)
    v10 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v10 + 680) + 672) & 0x200000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v11 = v22[0];
    v12 = *((_DWORD *)this + 23281);
    *((_DWORD *)this + 23281) = 1;
    LODWORD(v22[0]) = -1;
    WORD2(v22[0]) = 1;
    JSC::JSObject::deleteProperty();
    *((_DWORD *)this + 23281) = v12;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v13);
      else
        *(_DWORD *)v11 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v14 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = JSC::JSString::create((uint64_t)this, v22);
  v17 = v22[0];
  v22[0] = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v15);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v26 = *(_DWORD *)SlowCase;
  v25 = v18;
  v19 = JSC::Structure::outOfLineCapacity(v18);
  v23 = 0;
  v24 = v19;
  v22[0] = (WTF::StringImpl *)&v24;
  v22[1] = (WTF::StringImpl *)SlowCase;
  v22[2] = this;
  v22[3] = (WTF::StringImpl *)&v26;
  v22[4] = (WTF::StringImpl *)&v25;
  v22[5] = (WTF::StringImpl *)&v23;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v18, this, v14, 6, (uint64_t)v22);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v23, v16);
  *((_DWORD *)v18 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDetailsElement>,(WebCore::DOMConstructorID)523>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4184);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDetailsElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLDetailsElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLDetailsElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDetailsElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLDetailsElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLDetailsElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLDetailsElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLDetailsElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLDetailsElementPrototype::create((WebCore::JSHTMLDetailsElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLDetailsElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLDetailsElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4184) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLDetailsElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLDetailsElementPrototype::s_info != (char **)(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                    + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDetailsElement>,(WebCore::DOMConstructorID)523>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLDetailsElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLDetailsElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLDetailsElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLDetailsElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLDetailsElement_open(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::openAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::openAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::openAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLDetailsElement_open(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLDetailsElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLDetailsElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::openAttr, v12, a4);
  return 1;
}

uint64_t WebCore::JSHTMLDialogElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLDialogElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLDialogElementPrototype::create(WebCore::JSHTMLDialogElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(this, (uint64_t)&WebCore::JSHTMLDialogElement::s_info, &WebCore::JSHTMLDialogElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDialogElement>,(WebCore::DOMConstructorID)524>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4192);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDialogElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLDialogElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLDialogElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDialogElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLDialogElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLDialogElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLDialogElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLDialogElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLDialogElementPrototype::create((WebCore::JSHTMLDialogElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLDialogElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLDialogElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4192) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLDialogElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLDialogElementPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDialogElement>,(WebCore::DOMConstructorID)524>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLDialogElement_open(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::openAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::openAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::openAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::setJSHTMLDialogElement_open(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl **v11;
  double v12;
  _BOOL4 v13;
  void *v14;
  uint64_t v15;
  WTF *v16;
  WTF *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  int v23;
  uint64_t v24;
  int *v25;
  int v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLDialogElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLDialogElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WTF::StringImpl ***)(a2 + 24);
  v27 = (WTF *)v29;
  a4.n128_u64[0] = 4;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  if (a3 >= 0xFFFE000000000000)
  {
    v22 = (_DWORD)a3 == 0;
    goto LABEL_53;
  }
  *(_QWORD *)&v12 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    a4.n128_u64[0] = a3 - 0x2000000000000;
    v13 = v12 > 0.0 || v12 < 0.0;
    goto LABEL_16;
  }
  if ((a3 & 0xFFFE000000000002) != 0)
  {
    v13 = a3 == 7;
    goto LABEL_16;
  }
  v23 = *(unsigned __int8 *)(a3 + 5);
  if (v23 == 3)
  {
    v26 = *(_DWORD *)(a3 + 8);
LABEL_49:
    v22 = v26 == 0;
    goto LABEL_53;
  }
  if (v23 == 2)
  {
    v24 = *(_QWORD *)(a3 + 8);
    if ((v24 & 1) != 0)
      v25 = (int *)(a3 + 16);
    else
      v25 = (int *)(v24 + 4);
    v26 = *v25;
    goto LABEL_49;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
  {
    v22 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_53:
    v13 = !v22;
    goto LABEL_16;
  }
  v13 = 1;
LABEL_16:
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
  {
    v15 = 0;
  }
  else
  {
    WebCore::Element::setBooleanAttribute(v11, (const WebCore::QualifiedName *)&WebCore::HTMLNames::openAttr, v13, a4);
    v15 = 1;
  }
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v19 = v27;
      v20 = 8 * HIDWORD(v28);
      do
      {
        v21 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)(v21 + 24) == 2)
          {
            if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v21, v14);
          }
          else
          {
            *(_DWORD *)(v21 + 24) -= 2;
          }
        }
        v19 = (WTF *)((char *)v19 + 8);
        v20 -= 8;
      }
      while (v20);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v16 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v16, v14);
  }
  return v15;
}

uint64_t WebCore::jsHTMLDialogElement_returnValue(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 112);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

BOOL WebCore::setJSHTMLDialogElement_returnValue(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t v14;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v17;
  int v18;
  WTF::StringImpl *v19;
  unint64_t v20;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLDialogElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLDialogElement::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v20 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v10 = *(WTF::StringImpl **)(this + 8);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v19 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v20, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v19;
    if (hasExceptionsAfterHandlingTraps)
    {
      v18 = 1;
      v19 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, (WTF::StringImpl *)a2);
        else
          *(_DWORD *)v11 -= 2;
      }
      v14 = 0;
      v13 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v19;
  }
  v18 = 0;
  v17 = 0;
  v12 = *(WTF::StringImpl **)(v9 + 112);
  *(_QWORD *)(v9 + 112) = v11;
  if (!v12)
    goto LABEL_29;
  if (*(_DWORD *)v12 == 2)
  {
    WTF::StringImpl::destroy(v12, (WTF::StringImpl *)a2);
LABEL_29:
    v13 = 0;
    goto LABEL_23;
  }
  v13 = 0;
  *(_DWORD *)v12 -= 2;
LABEL_23:
  v14 = 1;
LABEL_24:
  ((void (*)(unint64_t *, uint64_t *))off_1E329F280[v13])(&v20, &v17);
  return v14;
}

uint64_t WebCore::JSHTMLDirectoryElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLDirectoryElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLDirectoryElementPrototype::create(WebCore::JSHTMLDirectoryElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSHTMLDirectoryElement::s_info, (uint64_t)&WebCore::JSHTMLDirectoryElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDirectoryElement>,(WebCore::DOMConstructorID)525>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4200);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDirectoryElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLDirectoryElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLDirectoryElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDirectoryElement::s_info
                                                                        + ~((_QWORD)&WebCore::JSHTMLDirectoryElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLDirectoryElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLDirectoryElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLDirectoryElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLDirectoryElementPrototype::create((WebCore::JSHTMLDirectoryElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLDirectoryElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLDirectoryElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4200) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLDirectoryElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLDirectoryElementPrototype::s_info != (char **)(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                      + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDirectoryElement>,(WebCore::DOMConstructorID)525>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLDirectoryElement_compact(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::compactAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::compactAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::compactAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLDirectoryElement_compact(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLDirectoryElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLDirectoryElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::compactAttr, v12, a4);
  return 1;
}

uint64_t WebCore::JSHTMLDivElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDivElement>,(WebCore::DOMConstructorID)526>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4208);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDivElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLDivElement::s_info + ~((_QWORD)&WebCore::JSHTMLDivElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDivElement::s_info + ~((_QWORD)&WebCore::JSHTMLDivElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLDivElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLDivElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLDivElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLDivElementPrototype::create((WebCore::JSHTMLDivElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLDivElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLDivElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4208) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLDivElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLDivElementPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDivElement>,(WebCore::DOMConstructorID)526>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLDivElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLDivElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLDivElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLDivElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLDocument::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSHTMLDocument::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  uint64_t result;
  int v23;
  unsigned int i;
  unsigned int v25;
  uint64_t v26;
  JSC::VM *v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unsigned __int16 *v41;
  uint64_t v42;
  unsigned int v43;
  BOOL v44;
  unsigned int v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  unsigned int v49;
  unint64_t v50;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *(_QWORD *)(a1 + 24);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    goto LABEL_22;
  v15 = v13;
  if (*(_BYTE *)(v13 + 274))
    goto LABEL_22;
  v16 = *(_BYTE **)(v13 + 496);
  if (!v16)
    v16 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v15 - 192));
  if (!*(_QWORD *)v16)
    goto LABEL_22;
  v17 = *(_QWORD *)(*(_QWORD *)v16 + 8);
  if (!v17)
    goto LABEL_22;
  v18 = *(_QWORD *)(v17 + 680);
  if (!*(_BYTE *)(v18 + 243))
  {
    if ((*(_QWORD *)(v18 + 688) & 0x80000) != 0)
      goto LABEL_21;
LABEL_22:
    if (!a3)
      return JSC::JSObject::deleteProperty();
    v19 = *(_DWORD *)(a3 + 16);
    if ((v19 & 0x20) != 0)
      return JSC::JSObject::deleteProperty();
    v20 = *(_DWORD *)a3;
    *(_DWORD *)a3 += 2;
    v21 = *(_QWORD *)(v11 + 3512);
    if (!v21)
    {
LABEL_25:
      if (v20)
        *(_DWORD *)a3 = v20;
      else
        WTF::StringImpl::destroy((WTF::StringImpl *)a3, v14);
      return JSC::JSObject::deleteProperty();
    }
    v23 = 0;
    for (i = v19 >> 8; ; i = v23 + v25)
    {
      v25 = i & *(_DWORD *)(v21 - 8);
      v26 = *(_QWORD *)(v21 + 40 * v25);
      if (!v26)
        goto LABEL_25;
      if (v26 != -1 && v26 == a3)
        break;
      ++v23;
    }
    if (v20)
      *(_DWORD *)a3 = v20;
    else
      WTF::StringImpl::destroy((WTF::StringImpl *)a3, v14);
    v28 = (JSC::VM *)*((_QWORD *)a2 + 7);
    ++*((_DWORD *)v28 + 1);
    if ((a3 >> 4))
    {
      if (((a3 >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x20)) == 0)
      {
        v29 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v28);
        if (v29)
        {
          v50 = a3;
          v30 = JSC::PropertyTable::get(v29, (uint64_t *)&v50);
          if ((_DWORD)v30 != -1)
          {
            if ((int)v30 > 63)
            {
              v37 = *(_QWORD *)(a1 + 8) - 8;
              v38 = 0x3F00000000 - (v30 << 32);
            }
            else
            {
              v37 = a1 + 16;
              v38 = v30 << 32;
            }
            v39 = *(_QWORD *)(v37 + (v38 >> 29));
            if ((v39 & 0xFFFE000000000002) != 0)
              goto LABEL_61;
            v40 = *(unsigned __int8 *)(v39 + 5);
            if (v40 == 6)
            {
              result = 1;
              goto LABEL_52;
            }
            if (v40 != 5)
            {
LABEL_61:
              result = 1;
              goto LABEL_52;
            }
            JSC::JSObject::fillGetterPropertySlot();
            goto LABEL_78;
          }
        }
      }
    }
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    {
LABEL_78:
      result = 1;
      goto LABEL_52;
    }
    v31 = *(_DWORD *)(a3 + 16);
    if ((v31 & 0x20) == 0)
    {
      v32 = *(_BYTE **)(a3 + 8);
      v33 = *(unsigned int *)(a3 + 4);
      if ((v31 & 4) != 0)
      {
        if ((_DWORD)v33)
        {
          v45 = *v32 - 48;
          if (v45 > 9 || v33 >= 2 && *v32 == 48)
          {
LABEL_85:
            v46 = 0;
          }
          else
          {
            v47 = v32 + 1;
            v48 = v33 - 1;
            while (v48)
            {
              if (v45 > 0x19999999)
                goto LABEL_85;
              v49 = *v47 - 48;
              if (v49 > 9)
                goto LABEL_85;
              v46 = 0;
              v44 = __CFADD__(v49, 10 * v45);
              v45 = v49 + 10 * v45;
              ++v47;
              --v48;
              if (v44)
                goto LABEL_86;
            }
            v46 = 0x100000000;
            if (v45 == -1)
              v46 = 0;
          }
        }
        else
        {
          v46 = 0;
        }
LABEL_86:
        if ((v46 & 0x100000000) == 0)
          goto LABEL_51;
      }
      else
      {
        if ((_DWORD)v33)
        {
          v34 = *(unsigned __int16 *)v32 - 48;
          if (v34 > 9 || v33 >= 2 && *(_WORD *)v32 == 48)
          {
LABEL_48:
            v35 = 0;
          }
          else
          {
            v41 = (unsigned __int16 *)(v32 + 2);
            v42 = v33 - 1;
            while (v42)
            {
              if (v34 <= 0x19999999)
              {
                v43 = *v41 - 48;
                if (v43 <= 9)
                {
                  v44 = __CFADD__(v43, 10 * v34);
                  v34 = v43 + 10 * v34;
                  ++v41;
                  --v42;
                  if (!v44)
                    continue;
                }
              }
              goto LABEL_48;
            }
            v9 = v34 == -1;
            v35 = 0x100000000;
            if (v9)
              v35 = 0;
          }
        }
        else
        {
          v35 = 0;
        }
        if ((v35 & 0x100000000) == 0)
          goto LABEL_51;
      }
      result = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_52:
      v36 = *((_DWORD *)v28 + 1);
      if (!v36)
      {
        __break(0xC471u);
        JUMPOUT(0x194BE4E6CLL);
      }
      *((_DWORD *)v28 + 1) = v36 - 1;
      if ((_DWORD)result)
        return JSC::JSObject::deleteProperty();
      return result;
    }
LABEL_51:
    result = 0;
    goto LABEL_52;
  }
  if (!*(_BYTE *)(v18 + 242))
    goto LABEL_22;
LABEL_21:
  if (!v16[65])
    goto LABEL_22;
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSHTMLDocument::deletePropertyByIndex(WebCore::JSHTMLDocument *this, JSC::VM **a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v24;
  int i;
  unsigned int v26;
  WTF::StringImpl *v27;
  JSC::VM *v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BYTE *v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  int OwnPropertySlotByIndex;
  int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  unsigned __int16 *v43;
  uint64_t v44;
  unsigned int v45;
  BOOL v46;
  unsigned int v47;
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  unsigned int v51;
  WTF::StringImpl *v52;
  unint64_t v53;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = (WebCore::JSDOMGlobalObject *)a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (v13)
  {
    v14 = v13;
    if (!*(_BYTE *)(v13 + 274))
    {
      v15 = *(_BYTE **)(v13 + 496);
      if (!v15)
        v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
      if (*(_QWORD *)v15)
      {
        v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
        if (v16)
        {
          v17 = *(_QWORD *)(v16 + 680);
          if (*(_BYTE *)(v17 + 243))
          {
            if (!*(_BYTE *)(v17 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v15[65])
            return JSC::JSObject::deletePropertyByIndex(this, (JSC::JSCell *)a2, a3);
        }
      }
    }
  }
LABEL_22:
  JSC::Identifier::from();
  v19 = (unint64_t)v52;
  if (!v52)
    goto LABEL_26;
  v20 = *(_DWORD *)v52;
  *(_DWORD *)v52 += 2;
  v21 = *(_QWORD *)(v11 + 3512);
  if (v21)
  {
    v24 = 0;
    for (i = *((_DWORD *)v52 + 4) >> 8; ; i = v24 + v26)
    {
      v26 = i & *(_DWORD *)(v21 - 8);
      v27 = *(WTF::StringImpl **)(v21 + 40 * v26);
      if (!v27)
        goto LABEL_24;
      if (v27 != (WTF::StringImpl *)-1 && v27 == v52)
        break;
      ++v24;
    }
    if (v20)
    {
      *(_DWORD *)v52 = v20;
    }
    else
    {
      WTF::StringImpl::destroy(v52, v18);
      v19 = (unint64_t)v52;
    }
    v29 = a2[7];
    ++*((_DWORD *)v29 + 1);
    if ((v19 >> 4))
    {
      if (((v19 >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x20)) == 0)
      {
        v30 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), v29);
        if (v30)
        {
          v53 = v19;
          v31 = JSC::PropertyTable::get(v30, (uint64_t *)&v53);
          if ((_DWORD)v31 != -1)
          {
            if ((int)v31 > 63)
            {
              v39 = (char *)(*((_QWORD *)this + 1) - 8);
              v40 = 0x3F00000000 - (v31 << 32);
            }
            else
            {
              v39 = (char *)this + 16;
              v40 = v31 << 32;
            }
            v41 = *(_QWORD *)&v39[v40 >> 29];
            if ((v41 & 0xFFFE000000000002) != 0)
              goto LABEL_66;
            v42 = *(unsigned __int8 *)(v41 + 5);
            if (v42 == 6)
            {
              OwnPropertySlotByIndex = 1;
              goto LABEL_57;
            }
            if (v42 != 5)
            {
LABEL_66:
              OwnPropertySlotByIndex = 1;
              goto LABEL_57;
            }
            JSC::JSObject::fillGetterPropertySlot();
            goto LABEL_83;
          }
        }
      }
    }
    if ((*((_BYTE *)this + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    {
LABEL_83:
      OwnPropertySlotByIndex = 1;
      goto LABEL_57;
    }
    if (v19)
    {
      v32 = *(_DWORD *)(v19 + 16);
      if ((v32 & 0x20) == 0)
      {
        v33 = *(_BYTE **)(v19 + 8);
        v34 = *(unsigned int *)(v19 + 4);
        if ((v32 & 4) != 0)
        {
          if ((_DWORD)v34)
          {
            v47 = *v33 - 48;
            if (v47 > 9 || v34 >= 2 && *v33 == 48)
            {
LABEL_90:
              v48 = 0;
            }
            else
            {
              v49 = v33 + 1;
              v50 = v34 - 1;
              while (v50)
              {
                if (v47 > 0x19999999)
                  goto LABEL_90;
                v51 = *v49 - 48;
                if (v51 > 9)
                  goto LABEL_90;
                v48 = 0;
                v46 = __CFADD__(v51, 10 * v47);
                v47 = v51 + 10 * v47;
                ++v49;
                --v50;
                if (v46)
                  goto LABEL_91;
              }
              v48 = 0x100000000;
              if (v47 == -1)
                v48 = 0;
            }
          }
          else
          {
            v48 = 0;
          }
LABEL_91:
          if ((v48 & 0x100000000) == 0)
            goto LABEL_56;
        }
        else
        {
          if ((_DWORD)v34)
          {
            v35 = *(unsigned __int16 *)v33 - 48;
            if (v35 > 9 || v34 >= 2 && *(_WORD *)v33 == 48)
            {
LABEL_52:
              v36 = 0;
            }
            else
            {
              v43 = (unsigned __int16 *)(v33 + 2);
              v44 = v34 - 1;
              while (v44)
              {
                if (v35 <= 0x19999999)
                {
                  v45 = *v43 - 48;
                  if (v45 <= 9)
                  {
                    v46 = __CFADD__(v45, 10 * v35);
                    v35 = v45 + 10 * v35;
                    ++v43;
                    --v44;
                    if (!v46)
                      continue;
                  }
                }
                goto LABEL_52;
              }
              v9 = v35 == -1;
              v36 = 0x100000000;
              if (v9)
                v36 = 0;
            }
          }
          else
          {
            v36 = 0;
          }
          if ((v36 & 0x100000000) == 0)
            goto LABEL_56;
        }
        OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_57:
        v38 = *((_DWORD *)v29 + 1);
        if (!v38)
        {
          __break(0xC471u);
          JUMPOUT(0x194BE53C4);
        }
        *((_DWORD *)v29 + 1) = v38 - 1;
        if (!OwnPropertySlotByIndex)
        {
          v22 = 0;
          goto LABEL_27;
        }
        goto LABEL_26;
      }
    }
LABEL_56:
    OwnPropertySlotByIndex = 0;
    goto LABEL_57;
  }
LABEL_24:
  if (v20)
    *(_DWORD *)v52 = v20;
  else
    WTF::StringImpl::destroy(v52, v18);
LABEL_26:
  v22 = JSC::JSObject::deletePropertyByIndex(this, (JSC::JSCell *)a2, a3);
LABEL_27:
  if (v52)
  {
    if (*(_DWORD *)v52 == 2)
      WTF::StringImpl::destroy(v52, v18);
    else
      *(_DWORD *)v52 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSHTMLDocument::getOwnPropertySlotByIndex(WebCore::JSHTMLDocument *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  JSC::VM *v8;
  unint64_t v9;
  unsigned int *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  JSC::VM *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 *v26;
  unsigned int v27;
  BOOL v28;
  unint64_t v29;
  uint64_t *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned int v38;
  unint64_t v39;
  _BYTE *v40;
  WebCore::JSHTMLDocument *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char OwnStaticPropertySlot;
  int v48;
  _BYTE *v49;
  uint64_t v50;
  unsigned int v51;
  unsigned __int16 *v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  WTF::StringImpl *v62;
  __n128 v63;
  uint64_t v64;
  uint64_t OwnPropertySlotByIndex;
  WTF::StringImpl *v66;
  uint64_t v68;
  int v69;
  _BYTE *v70;
  uint64_t v71;
  unsigned int v72;
  unsigned __int16 *v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  unsigned __int8 *v77;
  unsigned int v78;
  unsigned __int8 *v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  int v85;
  uint64_t v86;
  char v87;
  int v88;
  unsigned int v89;
  uint64_t v90;
  unsigned __int8 *v91;
  int v92;
  int v93;
  uint64_t v94;
  const WTF::StringImpl *v95;
  const unsigned __int8 *v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  JSC::VM *v101;
  _DWORD *v102;
  uint64_t v103;
  int v104;
  int v105;
  int v106;
  int v107;
  unint64_t v108;
  uint64_t v109;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v111;
  char v112;
  JSC::VM *v113;
  uint64_t v114;
  char v115;
  int v116;
  int v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  unint64_t v122;
  JSC::VM *v123;
  JSC::VM *v124;
  char v125[8];
  unsigned int v126;
  unsigned __int8 v127;
  WTF::StringImpl *v128;
  WTF::StringImpl *v129;
  uint64_t v130;
  unint64_t v131;
  WebCore::JSHTMLDocument *v132;
  WebCore::JSHTMLDocument *v133;
  uint64_t v134;
  int v135;
  char v136;
  JSC::VM *v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int v142;
  unsigned __int8 v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t *v146;
  JSC::JSObject *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;

  v150 = *MEMORY[0x1E0C80C00];
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  JSC::Identifier::from();
  v9 = (unint64_t)v128;
  if (v128)
  {
    if ((*((_BYTE *)v128 + 16) & 0x20) != 0)
    {
LABEL_125:
      OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
      goto LABEL_126;
    }
    v10 = (unsigned int *)*((_QWORD *)this + 3);
    *(_DWORD *)v128 += 2;
  }
  else
  {
    v10 = (unsigned int *)*((_QWORD *)this + 3);
  }
  v129 = (WTF::StringImpl *)v9;
  WebCore::HTMLDocument::namedItem(v10, (const WTF::AtomString *)&v129, (uint64_t)&v145);
  v14 = v129;
  v129 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v11);
    else
      *(_DWORD *)v14 -= 2;
  }
  if ((_BYTE)v147)
  {
    LOBYTE(v129) = 0;
    LODWORD(v130) = -1;
    v15 = v146;
    if ((_DWORD)v146 == -1)
    {
      LOBYTE(v141) = 0;
      v142 = -1;
      v143 = 1;
    }
    else
    {
      ((void (*)(uint64_t *, WTF::StringImpl **, uint64_t **))off_1E32A0F30[v146])(&v144, &v129, &v145);
      LODWORD(v130) = v15;
      LOBYTE(v141) = 0;
      v142 = -1;
      ((void (*)(uint64_t *, uint64_t *, WTF::StringImpl **))off_1E32A0F48[v15])(&v144, &v141, &v129);
      v142 = v15;
      v143 = 1;
      if ((_DWORD)v130 != -1)
        ((void (*)(uint64_t *, WTF::StringImpl **))off_1E3299C40[v130])(&v144, &v129);
    }
    if ((_BYTE)v147 && (_DWORD)v146 != -1)
      ((void (*)(WTF::StringImpl **, uint64_t **))off_1E3299C40[v146])(&v129, &v145);
  }
  else
  {
    LOBYTE(v141) = 0;
    v143 = 0;
  }
  if (!v143)
    goto LABEL_125;
  v16 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v131 = 0xFFFFFFFF00000000;
  v133 = 0;
  v134 = 0;
  v132 = this;
  v135 = 196608;
  v136 = 0;
  v139 = 0;
  v140 = 0;
  v137 = v16;
  ++*((_DWORD *)v16 + 1);
  v138 = 1;
  v17 = v9 >> 4;
  if ((v9 >> 4))
  {
    v18 = 16 * (*(_DWORD *)this & 0xFFFFFFFE);
    if ((v17 & ~*(_DWORD *)(v18 + 0x20)) == 0)
    {
      v19 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), v16);
      if (v19)
      {
        v145 = (uint64_t *)v9;
        v20 = JSC::PropertyTable::get(v19, (uint64_t *)&v145);
        v21 = v20;
        if ((_DWORD)v20 != -1)
        {
          v29 = HIDWORD(v20);
          v30 = (uint64_t *)((char *)this + 8 * (int)v20 + 16);
          if ((int)v20 >= 64)
            v30 = (uint64_t *)(*((_QWORD *)this + 1) + ((uint64_t)(0x3F00000000 - (v20 << 32)) >> 29) - 8);
          v13 = *v30;
          if ((*v30 & 0xFFFE000000000002) == 0)
          {
            v31 = *(unsigned __int8 *)(v13 + 5);
            if (v31 == 6)
            {
              v32 = *(_DWORD *)(v18 + 16) & 3;
              v33 = *(_QWORD *)(v13 + 16);
              if (MEMORY[0x1E0CBE830] != 16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C))
              {
                v129 = *(WTF::StringImpl **)(v13 + 8);
                v130 = v33;
                LODWORD(v131) = HIDWORD(v20);
                v133 = this;
                goto LABEL_156;
              }
              v35 = *(_QWORD *)(v13 + 24);
              v34 = *(_QWORD *)(v13 + 32);
              v129 = *(WTF::StringImpl **)(v13 + 8);
              v130 = v33;
              LODWORD(v131) = HIDWORD(v20);
              v133 = this;
              goto LABEL_133;
            }
            if (v31 == 5)
              goto LABEL_136;
          }
          v129 = (WTF::StringImpl *)v13;
          v133 = this;
LABEL_101:
          v131 = __PAIR64__(v21, v29);
          LOWORD(v135) = 257;
          goto LABEL_102;
        }
      }
    }
  }
  if ((*((_BYTE *)this + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    goto LABEL_102;
  if (!v9)
    goto LABEL_62;
  v22 = *(_DWORD *)(v9 + 16);
  if ((v22 & 0x20) != 0)
    goto LABEL_62;
  v23 = *(_BYTE **)(v9 + 8);
  v24 = *(unsigned int *)(v9 + 4);
  if ((v22 & 4) != 0)
  {
    if (!(_DWORD)v24)
      goto LABEL_62;
    v12 = *v23 - 48;
    if (v12 > 9 || v24 >= 2 && *v23 == 48)
      goto LABEL_62;
    v36 = v24 - 1;
    v37 = v23 + 1;
    while (v36)
    {
      if (v12 <= 0x19999999)
      {
        v38 = *v37 - 48;
        if (v38 <= 9)
        {
          v28 = __CFADD__(v38, 10 * v12);
          v12 = v38 + 10 * (_DWORD)v12;
          --v36;
          ++v37;
          if (!v28)
            continue;
        }
      }
      goto LABEL_62;
    }
  }
  else
  {
    if (!(_DWORD)v24)
      goto LABEL_62;
    v12 = *(unsigned __int16 *)v23 - 48;
    if (v12 > 9 || v24 >= 2 && *(_WORD *)v23 == 48)
      goto LABEL_62;
    v25 = v24 - 1;
    v26 = (unsigned __int16 *)(v23 + 2);
    while (v25)
    {
      if (v12 <= 0x19999999)
      {
        v27 = *v26 - 48;
        if (v27 <= 9)
        {
          v28 = __CFADD__(v27, 10 * v12);
          v12 = v27 + 10 * (_DWORD)v12;
          --v25;
          ++v26;
          if (!v28)
            continue;
        }
      }
      goto LABEL_62;
    }
  }
  if ((_DWORD)v12 != -1 && JSC::JSObject::getOwnPropertySlotByIndex())
    goto LABEL_102;
LABEL_62:
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28) + 3320) + 53))
    goto LABEL_105;
  v39 = *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x30);
  if (!v39)
    goto LABEL_160;
  while (1)
  {
    if ((v39 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v39 + 5) < 0x17u)
      goto LABEL_105;
    v40 = (_BYTE *)(v39 + 6);
    v123 = (JSC::VM *)v39;
    if ((*(_BYTE *)(v39 + 6) & 8) == 0)
    {
      v122 = *((_QWORD *)a2 + 7);
      v41 = (WebCore::JSHTMLDocument *)v39;
      while (1)
      {
        v42 = *(_DWORD *)v41 & 0xFFFFFFFE;
        v43 = 16 * v42;
        if ((_DWORD)v17)
        {
          if ((v17 & ~*(_DWORD *)(16 * v42 + 0x20)) == 0)
          {
            v44 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v43, (JSC::VM *)v122);
            v39 = (unint64_t)v123;
            if (v44)
            {
              v145 = (uint64_t *)v9;
              v45 = JSC::PropertyTable::get(v44, (uint64_t *)&v145);
              v39 = (unint64_t)v123;
              v21 = v45;
              if ((_DWORD)v45 != -1)
                break;
            }
          }
        }
        if ((*v40 & 0x20) != 0)
        {
          OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
          v39 = (unint64_t)v123;
          if ((OwnStaticPropertySlot & 1) != 0)
            goto LABEL_102;
        }
        v46 = *(_QWORD *)(v43 + 48);
        if (!v46)
          v46 = *((_QWORD *)v41 + 2);
        if ((v46 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v46 + 5) < 0x17u)
        {
          if (!v9)
            goto LABEL_105;
          v48 = *(_DWORD *)(v9 + 16);
          if ((v48 & 0x20) != 0)
            goto LABEL_105;
          v49 = *(_BYTE **)(v9 + 8);
          v50 = *(unsigned int *)(v9 + 4);
          if ((v48 & 4) != 0)
          {
            if (!(_DWORD)v50)
              goto LABEL_105;
            v51 = *v49 - 48;
            if (v51 > 9 || v50 >= 2 && *v49 == 48)
              goto LABEL_105;
            v76 = v50 - 1;
            v77 = v49 + 1;
            while (v76)
            {
              if (v51 <= 0x19999999)
              {
                v78 = *v77 - 48;
                if (v78 <= 9)
                {
                  v28 = __CFADD__(v78, 10 * v51);
                  v51 = v78 + 10 * v51;
                  --v76;
                  ++v77;
                  if (!v28)
                    continue;
                }
              }
              goto LABEL_105;
            }
            v39 = (unint64_t)v123;
            if (v51 == -1)
            {
LABEL_105:
              v125[0] = 0;
              v127 = 0;
              v58 = v143;
              if (v143)
              {
                v126 = -1;
                v9 = v142;
                if (v142 != -1)
                {
                  ((void (*)(uint64_t **, char *, uint64_t *))off_1E32A0F48[v142])(&v145, v125, &v141);
                  v126 = v9;
                }
                v58 = 1;
                v127 = 1;
              }
              goto LABEL_109;
            }
          }
          else
          {
            if (!(_DWORD)v50)
              goto LABEL_105;
            v51 = *(unsigned __int16 *)v49 - 48;
            if (v51 > 9 || v50 >= 2 && *(_WORD *)v49 == 48)
              goto LABEL_105;
            v52 = (unsigned __int16 *)(v49 + 2);
            v53 = v50 - 1;
            while (v53)
            {
              if (v51 <= 0x19999999)
              {
                v54 = *v52 - 48;
                if (v54 <= 9)
                {
                  v28 = __CFADD__(v54, 10 * v51);
                  v51 = v54 + 10 * v51;
                  ++v52;
                  --v53;
                  if (!v28)
                    continue;
                }
              }
              goto LABEL_105;
            }
            if (v51 == -1)
              goto LABEL_105;
          }
          v9 = v51;
          v113 = (JSC::VM *)*((_QWORD *)a2 + 7);
          while (2)
          {
            v17 = 16 * (*(_DWORD *)v39 & 0xFFFFFFFE);
            v114 = v39;
            v115 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, unint64_t, WTF::StringImpl **))(16 * *(unsigned int *)(v17 + 0x4C) + 0x70))(v39, a2, v9, &v129);
            if (*((_DWORD *)v113 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v113) & 1) != 0)
              goto LABEL_105;
            if ((v115 & 1) != 0)
              goto LABEL_102;
            v116 = BYTE2(v135);
            if (BYTE2(v135) == 3)
            {
              if (v136)
                goto LABEL_105;
              v117 = *(unsigned __int8 *)(v114 + 5);
              if (v117 == 61)
              {
LABEL_314:
                v119 = *(_QWORD *)(16 * (*(_DWORD *)v114 & 0xFFFFFFFE) + 0x30);
                if (!v119)
                  v119 = *(_QWORD *)(v114 + 16);
                goto LABEL_316;
              }
LABEL_307:
              if ((v117 - 39) <= 0xA)
              {
                if ((*(_BYTE *)(v114 + 40) & 7u) > 2)
                {
                  LOBYTE(v145) = 0;
                  LOBYTE(v146) = 0;
                  v120 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v114, (WTF *)&v145);
                  if (v121)
                    v118 = v120;
                  else
                    v118 = 0;
                }
                else
                {
                  v118 = *(_QWORD *)(v114 + 24);
                }
                if (v118 <= v9)
                  goto LABEL_105;
                v116 = BYTE2(v135);
              }
            }
            else
            {
              v117 = *(unsigned __int8 *)(v114 + 5);
              if (v117 != 61)
                goto LABEL_307;
              if (BYTE2(v135) == 1)
                goto LABEL_105;
            }
            if ((*(_WORD *)(v17 + 12) & 0x800) == 0 || v116 == 3)
              goto LABEL_314;
            if ((*(_WORD *)(16 * (*(_DWORD *)v114 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
            {
              v119 = (*(uint64_t (**)(uint64_t, JSC::JSObject *))(16
                                                                         * *(unsigned int *)(16
                                                                                           * (*(_DWORD *)v114 & 0xFFFFFFFE)
                                                                                           + 0x4C)
                                                                         + 0xB0))(v114, a2);
            }
            else
            {
              v119 = *(_QWORD *)(16 * (*(_DWORD *)v114 & 0xFFFFFFFE) + 0x30);
              if (!v119)
                v119 = *(_QWORD *)(v114 + 16);
            }
            if (*((_DWORD *)v113 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v113) & 1) != 0)
              goto LABEL_105;
LABEL_316:
            if ((v119 & 0xFFFE000000000002) != 0)
              goto LABEL_105;
            v39 = v119;
            if (*(unsigned __int8 *)(v119 + 5) <= 0x16u)
              goto LABEL_105;
            continue;
          }
        }
        v40 = (_BYTE *)(v46 + 6);
        v41 = (WebCore::JSHTMLDocument *)v46;
        if ((*(_BYTE *)(v46 + 6) & 8) != 0)
          goto LABEL_141;
      }
      v29 = HIDWORD(v45);
      if ((int)v45 > 63)
      {
        v55 = *((_QWORD *)v41 + 1) - 8;
        v56 = 0x3F00000000 - (v45 << 32);
      }
      else
      {
        v55 = (uint64_t)v41 + 16;
        v56 = v45 << 32;
      }
      v13 = *(_QWORD *)(v55 + (v56 >> 29));
      if ((v13 & 0xFFFE000000000002) != 0)
        goto LABEL_100;
      v57 = *(unsigned __int8 *)(v13 + 5);
      if (v57 != 6)
      {
        if (v57 == 5)
          goto LABEL_136;
LABEL_100:
        v129 = (WTF::StringImpl *)v13;
        v133 = v41;
        goto LABEL_101;
      }
      v32 = *(_DWORD *)(v43 + 16) & 3;
      v68 = *(_QWORD *)(v13 + 16);
      if (MEMORY[0x1E0CBE830] != 16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C))
      {
        v129 = *(WTF::StringImpl **)(v13 + 8);
        v130 = v68;
        LODWORD(v131) = HIDWORD(v45);
        v133 = v41;
        goto LABEL_156;
      }
      v35 = *(_QWORD *)(v13 + 24);
      v34 = *(_QWORD *)(v13 + 32);
      v129 = *(WTF::StringImpl **)(v13 + 8);
      v130 = v68;
      LODWORD(v131) = HIDWORD(v45);
      v133 = v41;
LABEL_133:
      BYTE1(v135) = 3;
      if (v32 != 2)
        LOBYTE(v135) = 1;
      HIBYTE(v135) = 1;
      v139 = v35;
      v140 = v34;
      goto LABEL_102;
    }
    v46 = v39;
LABEL_141:
    if (!v9)
      goto LABEL_186;
    v69 = *(_DWORD *)(v9 + 16);
    if ((v69 & 0x20) != 0)
      goto LABEL_186;
    v70 = *(_BYTE **)(v9 + 8);
    v71 = *(unsigned int *)(v9 + 4);
    if ((v69 & 4) != 0)
    {
      if (!(_DWORD)v71)
        goto LABEL_186;
      v72 = *v70 - 48;
      if (v72 > 9 || v71 >= 2 && *v70 == 48)
        goto LABEL_186;
      v79 = v70 + 1;
      v80 = v71 - 1;
      while (v80)
      {
        if (v72 <= 0x19999999)
        {
          v81 = *v79 - 48;
          if (v81 <= 9)
          {
            v28 = __CFADD__(v81, 10 * v72);
            v72 = v81 + 10 * v72;
            ++v79;
            --v80;
            if (!v28)
              continue;
          }
        }
        goto LABEL_186;
      }
    }
    else
    {
      if (!(_DWORD)v71)
        goto LABEL_186;
      v72 = *(unsigned __int16 *)v70 - 48;
      if (v72 > 9 || v71 >= 2 && *(_WORD *)v70 == 48)
        goto LABEL_186;
      v73 = (unsigned __int16 *)(v70 + 2);
      v74 = v71 - 1;
      while (v74)
      {
        if (v72 <= 0x19999999)
        {
          v75 = *v73 - 48;
          if (v75 <= 9)
          {
            v28 = __CFADD__(v75, 10 * v72);
            v72 = v75 + 10 * v72;
            ++v73;
            --v74;
            if (!v28)
              continue;
          }
        }
        goto LABEL_186;
      }
    }
    if (v72 != -1)
    {
      v9 = v72;
      v101 = (JSC::VM *)*((_QWORD *)a2 + 7);
      v102 = v123;
      while (1)
      {
        v17 = 16 * (*v102 & 0xFFFFFFFE);
        v103 = (uint64_t)v102;
        v104 = (*(uint64_t (**)(void))(16 * *(unsigned int *)(v17 + 0x4C) + 0x70))();
        v105 = v104;
        if (*((_DWORD *)v101 + 20))
        {
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v101);
          if (((hasExceptionsAfterHandlingTraps | v105) & 1) != 0)
          {
            if ((hasExceptionsAfterHandlingTraps & 1) == 0)
              goto LABEL_102;
            goto LABEL_105;
          }
        }
        else if ((v104 & 1) != 0)
        {
          goto LABEL_102;
        }
        v106 = BYTE2(v135);
        if (BYTE2(v135) == 3)
        {
          if (v136)
            goto LABEL_105;
          v107 = *(unsigned __int8 *)(v103 + 5);
          if (v107 == 61)
          {
LABEL_276:
            v109 = *(_QWORD *)(16 * (*(_DWORD *)v103 & 0xFFFFFFFE) + 0x30);
            if (!v109)
              v109 = *(_QWORD *)(v103 + 16);
            goto LABEL_278;
          }
        }
        else
        {
          v107 = *(unsigned __int8 *)(v103 + 5);
          if (v107 == 61)
          {
            if (BYTE2(v135) == 1)
              goto LABEL_105;
            goto LABEL_274;
          }
        }
        if ((v107 - 39) <= 0xA)
        {
          if ((*(_BYTE *)(v103 + 40) & 7u) > 2)
          {
            LOBYTE(v145) = 0;
            LOBYTE(v146) = 0;
            v111 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v103, (WTF *)&v145);
            if (v112)
              v108 = v111;
            else
              v108 = 0;
          }
          else
          {
            v108 = *(_QWORD *)(v103 + 24);
          }
          if (v108 <= v9)
            goto LABEL_105;
          v106 = BYTE2(v135);
        }
LABEL_274:
        if ((*(_WORD *)(v17 + 12) & 0x800) == 0 || v106 == 3)
          goto LABEL_276;
        if ((*(_WORD *)(16 * (*(_DWORD *)v103 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
        {
          v109 = (*(uint64_t (**)(uint64_t, JSC::JSObject *))(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)v103 & 0xFFFFFFFE)
                                                                                       + 0x4C)
                                                                     + 0xB0))(v103, a2);
        }
        else
        {
          v109 = *(_QWORD *)(16 * (*(_DWORD *)v103 & 0xFFFFFFFE) + 0x30);
          if (!v109)
            v109 = *(_QWORD *)(v103 + 16);
        }
        if (*((_DWORD *)v101 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v101) & 1) != 0)
          goto LABEL_105;
LABEL_278:
        if ((v109 & 0xFFFE000000000002) == 0)
        {
          v102 = (_DWORD *)v109;
          if (*(unsigned __int8 *)(v109 + 5) > 0x16u)
            continue;
        }
        goto LABEL_105;
      }
    }
LABEL_186:
    v124 = (JSC::VM *)*((_QWORD *)a2 + 7);
    while (1)
    {
      v82 = 16 * (*(_DWORD *)v46 & 0xFFFFFFFE);
      if ((*(_BYTE *)(v46 + 6) & 8) != 0)
      {
        v87 = (*(uint64_t (**)(uint64_t, JSC::JSObject *, unint64_t, WTF::StringImpl **))(16 * *(unsigned int *)(16 * (*(_DWORD *)v46 & 0xFFFFFFFE) + 0x4C) + 0x68))(v46, a2, v9, &v129);
        if (*((_DWORD *)v124 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v124) & 1) != 0)
          goto LABEL_105;
        if ((v87 & 1) != 0)
          goto LABEL_102;
        if (BYTE2(v135) == 3)
        {
          if (v136)
            goto LABEL_105;
          v88 = *(unsigned __int8 *)(v46 + 5);
          if (v88 == 61)
            goto LABEL_193;
        }
        else
        {
          v88 = *(unsigned __int8 *)(v46 + 5);
          if (v88 == 61)
          {
            if (BYTE2(v135) == 1)
              goto LABEL_105;
            goto LABEL_193;
          }
        }
        if (!v9)
          goto LABEL_193;
        if ((v88 - 50) < 0xFFFFFFF5)
          goto LABEL_193;
        v89 = *(_DWORD *)(v9 + 16);
        if ((v89 & 0x20) != 0)
          goto LABEL_193;
        v90 = *(unsigned int *)(v9 + 4);
        if (!(_DWORD)v90)
          goto LABEL_193;
        v91 = *(unsigned __int8 **)(v9 + 8);
        if ((v89 & 4) != 0)
        {
          v92 = *v91;
          if ((_DWORD)v90 == 1)
          {
LABEL_228:
            if ((v92 - 48) < 0xA)
              goto LABEL_105;
            goto LABEL_193;
          }
          if (v92 == 45)
          {
            v93 = v91[1];
LABEL_232:
            if ((v93 - 48) >= 0xA)
            {
              if ((_DWORD)v90 != 9 || v93 != 73)
                goto LABEL_193;
            }
            else if ((_DWORD)v90 == 2)
            {
              goto LABEL_105;
            }
LABEL_243:
            v122 = v122 & 0xFFFFFF0000000000 | v90 | ((unint64_t)((v89 >> 2) & 1) << 32);
            JSC::jsToNumber();
            v95 = (const WTF::StringImpl *)WTF::numberToString();
            if ((WTF::equal((WTF *)v9, v95, v96) & 1) != 0)
              goto LABEL_105;
            goto LABEL_193;
          }
        }
        else
        {
          v92 = *(unsigned __int16 *)v91;
          if ((_DWORD)v90 == 1)
            goto LABEL_228;
          if (v92 == 45)
          {
            v93 = *((unsigned __int16 *)v91 + 1);
            goto LABEL_232;
          }
        }
        if ((v92 - 48) >= 0xA && ((_DWORD)v90 != 8 || v92 != 73) && ((_DWORD)v90 != 3 || v92 != 78))
          goto LABEL_193;
        goto LABEL_243;
      }
      if ((_DWORD)v17)
      {
        if ((v17 & ~*(_DWORD *)(16 * (*(_DWORD *)v46 & 0xFFFFFFFE) + 0x20)) == 0)
        {
          v83 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v46 & 0xFFFFFFFE)), v124);
          if (v83)
          {
            v145 = (uint64_t *)v9;
            v84 = JSC::PropertyTable::get(v83, (uint64_t *)&v145);
            v21 = v84;
            if ((_DWORD)v84 != -1)
              break;
          }
        }
      }
      if ((*(_BYTE *)(v46 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
        goto LABEL_102;
LABEL_193:
      if ((*(_WORD *)(v82 + 12) & 0x800) == 0)
      {
        v85 = *(_DWORD *)v46;
LABEL_195:
        v86 = *(_QWORD *)(16 * (v85 & 0xFFFFFFFE) + 0x30);
        if (!v86)
          v86 = *(_QWORD *)(v46 + 16);
        goto LABEL_197;
      }
      v85 = *(_DWORD *)v46;
      if (BYTE2(v135) == 3)
        goto LABEL_195;
      v94 = 16 * (v85 & 0xFFFFFFFE);
      if ((*(_WORD *)(v94 + 12) & 0x800) != 0)
      {
        v86 = (*(uint64_t (**)(uint64_t, JSC::JSObject *))(16 * *(unsigned int *)(v94 + 76) + 0xB0))(v46, a2);
      }
      else
      {
        v86 = *(_QWORD *)(v94 + 48);
        if (!v86)
          v86 = *(_QWORD *)(v46 + 16);
      }
      if (*((_DWORD *)v124 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v124) & 1) != 0)
        goto LABEL_105;
LABEL_197:
      if ((v86 & 0xFFFE000000000002) == 0)
      {
        v46 = v86;
        if (*(unsigned __int8 *)(v86 + 5) > 0x16u)
          continue;
      }
      goto LABEL_105;
    }
    v29 = HIDWORD(v84);
    if ((int)v84 > 63)
    {
      v97 = *(_QWORD *)(v46 + 8) - 8;
      v98 = 0x3F00000000 - (v84 << 32);
    }
    else
    {
      v97 = v46 + 16;
      v98 = v84 << 32;
    }
    v13 = *(_QWORD *)(v97 + (v98 >> 29));
    if ((v13 & 0xFFFE000000000002) != 0)
    {
LABEL_253:
      v129 = (WTF::StringImpl *)v13;
      v133 = (WebCore::JSHTMLDocument *)v46;
      goto LABEL_101;
    }
    v99 = *(unsigned __int8 *)(v13 + 5);
    if (v99 == 6)
    {
      v32 = *(_DWORD *)(v82 + 16) & 3;
      v100 = *(_QWORD *)(v13 + 16);
      if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C))
      {
        v35 = *(_QWORD *)(v13 + 24);
        v34 = *(_QWORD *)(v13 + 32);
        v129 = *(WTF::StringImpl **)(v13 + 8);
        v130 = v100;
        LODWORD(v131) = HIDWORD(v84);
        v133 = (WebCore::JSHTMLDocument *)v46;
        goto LABEL_133;
      }
      v129 = *(WTF::StringImpl **)(v13 + 8);
      v130 = v100;
      LODWORD(v131) = HIDWORD(v84);
      v133 = (WebCore::JSHTMLDocument *)v46;
LABEL_156:
      BYTE1(v135) = 3;
      if (v32 != 2)
        LOBYTE(v135) = 1;
      goto LABEL_102;
    }
    if (v99 != 5)
      goto LABEL_253;
LABEL_136:
    JSC::JSObject::fillGetterPropertySlot();
LABEL_102:
    v58 = 0;
    v125[0] = 0;
    v127 = 0;
LABEL_109:
    if (v138)
    {
      v59 = *((_DWORD *)v137 + 1);
      if (!v59)
      {
        __break(0xC471u);
        JUMPOUT(0x194BE5D04);
      }
      *((_DWORD *)v137 + 1) = v59 - 1;
    }
    if (v143 && v142 != -1)
    {
      ((void (*)(uint64_t **, uint64_t *))off_1E3299C40[v142])(&v145, &v141);
      v58 = v127;
    }
    if (!v58)
      goto LABEL_125;
    v60 = *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28);
    v61 = v126 == -1 ? -1 : v126;
    LOBYTE(v141) = 0;
    LOBYTE(v142) = 0;
    v144 = v61;
    v145 = &v144;
    v146 = &v141;
    v147 = a2;
    v148 = v60;
    v149 = v125;
    v63 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_11WindowProxyEEENS4_INS_7ElementEEENS4_INS_14HTMLCollectionEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSK_12RawPtrTraitsIS5_EENSK_21DefaultRefDerefTraitsIS5_EEEENSL_IS7_NSM_IS7_EENSO_IS7_EEEENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENS11_IlLl1EEENS11_IlLl2EEEEEET_S15_((uint64_t)&v129, &v145, v12, (WebCore::Element *)v13);
    if ((_BYTE)v142)
      break;
    std::__throw_bad_optional_access[abi:sn180100]();
LABEL_160:
    v39 = *((_QWORD *)this + 2);
  }
  v64 = v141;
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
  {
    OwnPropertySlotByIndex = 0;
  }
  else
  {
    *(_QWORD *)a4 = v64;
    *(_DWORD *)(a4 + 16) = 2;
    *(_QWORD *)(a4 + 32) = this;
    OwnPropertySlotByIndex = 1;
    *(_BYTE *)(a4 + 49) = 1;
  }
  if (v127 && v126 != -1)
    ((void (*)(uint64_t **, char *, __n128))off_1E3299C40[v126])(&v145, v125, v63);
LABEL_126:
  v66 = v128;
  v128 = 0;
  if (v66)
  {
    if (*(_DWORD *)v66 == 2)
      WTF::StringImpl::destroy(v66, v62);
    else
      *(_DWORD *)v66 -= 2;
  }
  return OwnPropertySlotByIndex;
}

uint64_t WebCore::JSHTMLDocument::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  WTF *v8;
  uint64_t *v9;
  WTF *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  WTF::StringImpl *v16;
  int v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unsigned int v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  uint64_t v46;
  WTF::StringImpl *v47;
  int v48;
  WTF *v49;
  int v50;
  unsigned int v51;
  WTF::StringImpl *v52[2];
  char v53;
  WTF::StringImpl *v54;

  v4 = *(_QWORD *)(a1 + 24);
  {
    if (WebCore::Quirks::shouldOmitHTMLDocumentSupportedPropertyNames(void)::shouldOmitHTMLDocumentSupportedPropertyNames)
      return JSC::JSObject::getOwnPropertyNames();
  }
  else
  {
    v48 = WTF::linkedOnOrAfterSDKWithBehavior();
    WebCore::Quirks::shouldOmitHTMLDocumentSupportedPropertyNames(void)::shouldOmitHTMLDocumentSupportedPropertyNames = v48 ^ 1;
    if (((v48 ^ 1) & 1) != 0)
      return JSC::JSObject::getOwnPropertyNames();
  }
  WebCore::TreeScopeOrderedMap::keys((_QWORD *)(v4 + 3512), (uint64_t)&v49);
  v52[0] = (WTF::StringImpl *)WTF::codePointCompareLessThan;
  v5 = 126 - 2 * __clz(v51);
  if (v51)
    v6 = v5;
  else
    v6 = 0;
  std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(WTF::String const&,WTF::String const&),WTF::AtomString *,false>((uint64_t)v49, (WTF *)((char *)v49 + 8 * v51), (uint64_t (**)(WTF::StringImpl **, WTF::StringImpl **))v52, v6, 1);
  v8 = v49;
  if (!v51)
  {
LABEL_77:
    if (!v8)
      return JSC::JSObject::getOwnPropertyNames();
LABEL_87:
    v49 = 0;
    v50 = 0;
    WTF::fastFree(v8, v7);
    return JSC::JSObject::getOwnPropertyNames();
  }
  v9 = a3 + 1;
  v10 = (WTF *)((char *)v49 + 8 * v51);
  do
  {
    v11 = *(_QWORD *)v8;
    if (*(_QWORD *)v8)
      *(_DWORD *)v11 += 2;
    v54 = (WTF::StringImpl *)v11;
    v12 = *(_DWORD *)(v11 + 16);
    if ((v12 & 0x20) != 0)
    {
      if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*(_BYTE *)(v11 + 36) & 4) != 0)
        goto LABEL_68;
LABEL_16:
      v13 = *a3;
      v14 = *(unsigned int *)(*a3 + 20);
      if (v14 <= 0x13)
      {
        if ((_DWORD)v14)
        {
          v15 = *(_QWORD **)(v13 + 8);
          while (*v15 != v11)
          {
            ++v15;
            if (!--v14)
              goto LABEL_21;
          }
LABEL_67:
          if (!v11)
            goto LABEL_70;
          goto LABEL_68;
        }
LABEL_21:
        v16 = (WTF::StringImpl *)v11;
        if ((v12 & 0x20) == 0)
        {
LABEL_22:
          if ((v12 & 0x10) != 0)
          {
            *(_DWORD *)v16 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v16 = v52[0];
          }
          v17 = *(_DWORD *)v16;
          *(_DWORD *)v16 += 2;
          if (!v17)
          {
            WTF::StringImpl::destroy(v16, (WTF::StringImpl *)v7);
LABEL_61:
            v38 = (uint64_t *)(v13 + 8);
            v52[0] = v16;
            v39 = *(unsigned int *)(v13 + 20);
            if ((_DWORD)v39 == *(_DWORD *)(v13 + 16))
            {
              v40 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v38, v39 + 1, (unint64_t)v52);
              v39 = *(unsigned int *)(v13 + 20);
              v41 = *(_QWORD *)(v13 + 8);
              v42 = *v40;
              *v40 = 0;
              *(_QWORD *)(v41 + 8 * v39) = v42;
            }
            else
            {
              v43 = *v38;
              v52[0] = 0;
              *(_QWORD *)(v43 + 8 * v39) = v16;
            }
            *(_DWORD *)(v13 + 20) = v39 + 1;
            v44 = v52[0];
            v52[0] = 0;
            if (v44)
            {
              if (*(_DWORD *)v44 == 2)
              {
                WTF::StringImpl::destroy(v44, (WTF::StringImpl *)v7);
                if (!v11)
                  goto LABEL_70;
                goto LABEL_68;
              }
              *(_DWORD *)v44 -= 2;
            }
            goto LABEL_67;
          }
LABEL_60:
          *(_DWORD *)v16 = v17;
          goto LABEL_61;
        }
LABEL_28:
        v17 = *(_DWORD *)v16 + 2;
        goto LABEL_60;
      }
      if (*v9 && *(_DWORD *)(*v9 - 12))
      {
LABEL_26:
        WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v54, (uint64_t)v52);
        if (!v53)
          goto LABEL_67;
        v16 = v54;
        v13 = *a3;
        v12 = *((_DWORD *)v54 + 4);
        if ((v12 & 0x20) == 0)
          goto LABEL_22;
        goto LABEL_28;
      }
      v18 = *(uint64_t **)(v13 + 8);
      v19 = &v18[v14];
      while (1)
      {
        v20 = *v18;
        v21 = *v9;
        if (*v9
          || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v21 = *v9) != 0))
        {
          v22 = *(_DWORD *)(v21 - 8);
        }
        else
        {
          v22 = 0;
        }
        v23 = (~(v20 << 32) + v20) ^ ((unint64_t)(~(v20 << 32) + v20) >> 22);
        v24 = 9 * ((v23 + ~(v23 << 13)) ^ ((v23 + ~(v23 << 13)) >> 8));
        v25 = (v24 ^ (v24 >> 15)) + ~((v24 ^ (v24 >> 15)) << 27);
        v26 = v22 & ((v25 >> 31) ^ v25);
        v27 = (uint64_t *)(v21 + 8 * v26);
        v28 = *v27;
        if (*v27)
        {
          v29 = 0;
          v30 = 1;
          while (v28 != v20)
          {
            if (v28 == -1)
              v29 = v27;
            v26 = (v26 + v30) & v22;
            v27 = (uint64_t *)(v21 + 8 * v26);
            v28 = *v27;
            ++v30;
            if (!*v27)
            {
              if (v29)
              {
                *v29 = 0;
                --*(_DWORD *)(*v9 - 16);
                v27 = v29;
              }
              goto LABEL_41;
            }
          }
          goto LABEL_54;
        }
LABEL_41:
        *v27 = v20;
        v31 = *v9;
        v32 = *v9 ? *(_DWORD *)(v31 - 12) + 1 : 1;
        *(_DWORD *)(v31 - 12) = v32;
        v33 = *v9;
        v34 = *v9 ? *(_DWORD *)(v33 - 12) : 0;
        v35 = (*(_DWORD *)(v33 - 16) + v34);
        v36 = *(unsigned int *)(v33 - 4);
        if (v36 > 0x400)
          break;
        if (3 * v36 <= 4 * v35)
        {
          if ((_DWORD)v36)
            goto LABEL_50;
          v37 = 8;
          goto LABEL_53;
        }
LABEL_54:
        if (++v18 == v19)
          goto LABEL_26;
      }
      if (v36 > 2 * v35)
        goto LABEL_54;
LABEL_50:
      v37 = (_DWORD)v36 << (6 * *(_DWORD *)(v33 - 12) >= (2 * v36));
LABEL_53:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v37, v27);
      goto LABEL_54;
    }
    if ((a3[3] & 2) != 0)
      goto LABEL_16;
LABEL_68:
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v11, (WTF::StringImpl *)v7);
    else
      *(_DWORD *)v11 -= 2;
LABEL_70:
    v8 = (WTF *)((char *)v8 + 8);
  }
  while (v8 != v10);
  v8 = v49;
  if (!v51)
    goto LABEL_77;
  v46 = 8 * v51;
  do
  {
    v47 = *(WTF::StringImpl **)v8;
    *(_QWORD *)v8 = 0;
    if (v47)
    {
      if (*(_DWORD *)v47 == 2)
        WTF::StringImpl::destroy(v47, (WTF::StringImpl *)v7);
      else
        *(_DWORD *)v47 -= 2;
    }
    v8 = (WTF *)((char *)v8 + 8);
    v46 -= 8;
  }
  while (v46);
  v8 = v49;
  if (v49)
    goto LABEL_87;
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSHTMLDocument::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    goto LABEL_13;
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
LABEL_13:
        WebCore::JSNode::analyzeHeap(a1, a2);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a2 + 72))(a2, a1, *(_QWORD *)(a1 + 24) + 736);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    goto LABEL_13;
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDocument>,(WebCore::DOMConstructorID)527>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4216);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDocument>,(WebCore::DOMConstructorID)441>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDocument>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLDocument::s_info + ~((_QWORD)&WebCore::JSHTMLDocument::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDocument::s_info + ~((_QWORD)&WebCore::JSHTMLDocument::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLDocument::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLDocument::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSDocument::prototype((WebCore::JSDocument *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLDocumentPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSHTMLDocumentPrototype::create((WebCore::JSHTMLDocumentPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSHTMLDocument::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSHTMLDocument::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4216) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

uint64_t WebCore::toJS<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::WindowProxy>,WebCore::IDLInterface<WebCore::Element>,WebCore::IDLInterface<WebCore::HTMLCollection>>,std::variant<WTF::RefPtr<WebCore::WindowProxy,WTF::RawPtrTraits<WebCore::WindowProxy>,WTF::DefaultRefDerefTraits<WebCore::WindowProxy>>,WTF::RefPtr<WebCore::Element,WTF::RawPtrTraits<WebCore::Element>,WTF::DefaultRefDerefTraits<WebCore::Element>>,WTF::RefPtr<WebCore::HTMLCollection,WTF::RawPtrTraits<WebCore::HTMLCollection>,WTF::DefaultRefDerefTraits<WebCore::HTMLCollection>>>>(uint64_t *a1, uint64_t *a2, uint64_t a3, WebCore::Element *a4)
{
  uint64_t v4;
  uint64_t v6;
  _BYTE v7[40];
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11[5];

  if (*(_DWORD *)(a3 + 8) == -1)
    v4 = -1;
  else
    v4 = *(unsigned int *)(a3 + 8);
  LOBYTE(v8) = 0;
  v9 = 0;
  v10 = v4;
  v11[0] = &v10;
  v11[1] = &v8;
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = (uint64_t *)a3;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_11WindowProxyEEENS4_INS_7ElementEEENS4_INS_14HTMLCollectionEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSK_12RawPtrTraitsIS5_EENSK_21DefaultRefDerefTraitsIS5_EEEENSL_IS7_NSM_IS7_EENSO_IS7_EEEENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENS11_IlLl1EEENS11_IlLl2EEEEEET_S15_((uint64_t)v7, v11, a3, a4);
  if (v9)
    return v8;
  v6 = std::__throw_bad_optional_access[abi:sn180100]();
  return WebCore::jsHTMLDocumentConstructor(v6);
}

unint64_t WebCore::jsHTMLDocumentConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLDocumentPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLDocument>,(WebCore::DOMConstructorID)527>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSHTMLElement::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_DWORD *)(v2 + 24) += 2;
  *a2 = v2;
  return this;
}

unint64_t WebCore::JSHTMLElement::createPrototype(WebCore::JSHTMLElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSElement::prototype(this, a2, a3);
  Structure = WebCore::JSHTMLElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSHTMLElementPrototype::create(this, a2, Structure, v7);
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  unint64_t v17;
  WebCore::JSDOMGlobalObject *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4224);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSElement>,(WebCore::DOMConstructorID)445>(a1, a2);
  v8 = v7;
  LODWORD(v22) = 67099;
  if ((v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v20);
    v6[2] = SlowCase + (int)v20;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v8, &v22, &WebCore::JSDOMConstructor<WebCore::JSHTMLElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v6[165];
  v2 = v11[2846];
  if (v2 >= v11[2847])
  {
    v2 = v11[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_12;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v21);
    v11[2848] = v2 + (int)v21;
  }
  v11[2846] = v2 + 48;
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v6[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v22);
  v15 = v22;
  v22 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v6[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v22);
  v17 = *(_QWORD *)(v6[227] + 2160);
  v19 = WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v18);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v19, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4224) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLElementPrototype::s_info != (char **)(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLElement_title(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::titleAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::titleAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::titleAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLElement_title(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF *v19;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  WTF *v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;
  JSC::JSGlobalObject *v32;
  WTF::StringImpl *v33;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WTF::StringImpl **)(a2 + 24);
  v28 = (WTF *)v30;
  v29 = 4;
  v30[32] = 0;
  v31 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v32 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v28;
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v26);
  v9 = v27;
  v10 = v27 == 0;
  if (!v27)
  {
    v11 = v26;
    v26 = 0;
    v33 = v11;
    v12 = *((_QWORD *)v7 + 13);
    if (v12
      && ((v13 = *(_DWORD *)(v12 + 4), (v13 & 1) != 0)
        ? (v14 = *(uint64_t **)(v12 + 40), v15 = *(_DWORD *)(v12 + 52))
        : (v14 = (uint64_t *)(v12 + 32), v15 = v13 >> 5),
          v15))
    {
      v16 = 0;
      while (1)
      {
        v17 = *v14;
        if (*v14 == WebCore::HTMLNames::titleAttr
          || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::titleAttr + 24)
          && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::titleAttr + 32))
        {
          break;
        }
        ++v16;
        v14 += 2;
        if (v15 == v16)
          goto LABEL_17;
      }
    }
    else
    {
LABEL_17:
      v16 = 0xFFFFFFFFLL;
    }
    WebCore::Element::setAttributeInternal(v7, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::titleAttr, &v33, 0);
    v18 = v33;
    v33 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v8);
      else
        *(_DWORD *)v18 -= 2;
    }
    v9 = v27;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v33, &v26);
  if (HIDWORD(v29))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v28, v32);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
    if (HIDWORD(v29))
    {
      v23 = v28;
      v24 = 8 * HIDWORD(v29);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v8);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
  }
  v19 = v28;
  if (v30 != (_BYTE *)v28 && v28 != 0)
  {
    v28 = 0;
    LODWORD(v29) = 0;
    WTF::fastFree(v19, v8);
  }
  return v10;
}

uint64_t WebCore::jsHTMLElement_lang(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::langAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::langAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::langAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLElement_lang(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  _BOOL8 v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  WTF *v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;
  JSC::JSGlobalObject *v32;
  WTF::StringImpl *v33;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  v28 = (WTF *)v30;
  v29 = 4;
  v30[32] = 0;
  v31 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v32 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v28;
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v26);
  v10 = v27;
  v11 = v27 == 0;
  if (!v27)
  {
    v12 = v26;
    v26 = 0;
    v33 = v12;
    v13 = *((_QWORD *)v8 + 13);
    if (v13)
    {
      v14 = *(_DWORD *)(v13 + 4);
      if ((v14 & 1) == 0)
      {
        v15 = (uint64_t *)(v13 + 32);
        v16 = v14 >> 5;
        if (!v16)
          goto LABEL_25;
LABEL_18:
        v17 = 0;
        while (1)
        {
          v18 = *v15;
          if (*v15 == WebCore::HTMLNames::langAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::langAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::langAttr + 32))
          {
            goto LABEL_26;
          }
          ++v17;
          v15 += 2;
          if (v16 == v17)
            goto LABEL_25;
        }
      }
      v15 = *(uint64_t **)(v13 + 40);
      v16 = *(_DWORD *)(v13 + 52);
      if (v16)
        goto LABEL_18;
    }
LABEL_25:
    v17 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::langAttr, &v33, 0);
    v19 = v33;
    v33 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v9);
      else
        *(_DWORD *)v19 -= 2;
    }
    v10 = v27;
  }
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v33, &v26);
  if (HIDWORD(v29))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v28, v32);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
    if (HIDWORD(v29))
    {
      v23 = v28;
      v24 = 8 * HIDWORD(v29);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v9);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
  }
  v20 = v28;
  if (v30 != (_BYTE *)v28 && v28 != 0)
  {
    v28 = 0;
    LODWORD(v29) = 0;
    WTF::fastFree(v20, v9);
  }
  return v11;
}

uint64_t WebCore::jsHTMLElement_translate(uint64_t a1, uint64_t a2)
{
  if (WebCore::HTMLElement::translate(*(WebCore::HTMLElement **)(a2 + 24)))
    return 7;
  else
    return 6;
}

BOOL WebCore::setJSHTMLElement_translate(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::HTMLElement *v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  WTF *v15;
  uint64_t v16;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;
  _BYTE v20[40];
  uint64_t v21;
  JSC::JSGlobalObject *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLElement::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::HTMLElement **)(a2 + 24);
  v18 = (WTF *)v20;
  v19 = 4;
  v20[32] = 0;
  v21 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v22 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v18;
  if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
  {
    v11 = 0;
  }
  else
  {
    WebCore::HTMLElement::setTranslate(v9);
    v11 = 1;
  }
  if (HIDWORD(v19))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v18, v22);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v21;
    if (HIDWORD(v19))
    {
      v15 = v18;
      v16 = 8 * HIDWORD(v19);
      do
      {
        v17 = *(_QWORD *)v15;
        *(_QWORD *)v15 = 0;
        if (v17)
        {
          if (*(_DWORD *)(v17 + 24) == 2)
          {
            if ((*(_WORD *)(v17 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v17, v10);
          }
          else
          {
            *(_DWORD *)(v17 + 24) -= 2;
          }
        }
        v15 = (WTF *)((char *)v15 + 8);
        v16 -= 8;
      }
      while (v16);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v21;
  }
  v12 = v18;
  if (v20 != (_BYTE *)v18 && v18 != 0)
  {
    v18 = 0;
    LODWORD(v19) = 0;
    WTF::fastFree(v12, v10);
  }
  return v11;
}

uint64_t WebCore::jsHTMLElement_dir(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = WebCore::HTMLElement::dir(*(WebCore::HTMLElement **)(a2 + 24));
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSHTMLElement_dir(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  _BOOL8 v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  WTF *v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;
  JSC::JSGlobalObject *v32;
  WTF::StringImpl *v33;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  v28 = (WTF *)v30;
  v29 = 4;
  v30[32] = 0;
  v31 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v32 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v28;
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v26);
  v10 = v27;
  v11 = v27 == 0;
  if (!v27)
  {
    v12 = v26;
    v26 = 0;
    v33 = v12;
    v13 = *((_QWORD *)v8 + 13);
    if (v13)
    {
      v14 = *(_DWORD *)(v13 + 4);
      if ((v14 & 1) == 0)
      {
        v15 = (uint64_t *)(v13 + 32);
        v16 = v14 >> 5;
        if (!v16)
          goto LABEL_25;
LABEL_18:
        v17 = 0;
        while (1)
        {
          v18 = *v15;
          if (*v15 == WebCore::HTMLNames::dirAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::dirAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::dirAttr + 32))
          {
            goto LABEL_26;
          }
          ++v17;
          v15 += 2;
          if (v16 == v17)
            goto LABEL_25;
        }
      }
      v15 = *(uint64_t **)(v13 + 40);
      v16 = *(_DWORD *)(v13 + 52);
      if (v16)
        goto LABEL_18;
    }
LABEL_25:
    v17 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::dirAttr, &v33, 0);
    v19 = v33;
    v33 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v9);
      else
        *(_DWORD *)v19 -= 2;
    }
    v10 = v27;
  }
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v33, &v26);
  if (HIDWORD(v29))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v28, v32);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
    if (HIDWORD(v29))
    {
      v23 = v28;
      v24 = 8 * HIDWORD(v29);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v9);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
  }
  v20 = v28;
  if (v30 != (_BYTE *)v28 && v28 != 0)
  {
    v28 = 0;
    LODWORD(v29) = 0;
    WTF::fastFree(v20, v9);
  }
  return v11;
}

uint64_t WebCore::jsHTMLElement_cue(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::cueAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::cueAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::cueAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::setJSHTMLElement_cue(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl **v11;
  double v12;
  _BOOL4 v13;
  void *v14;
  uint64_t v15;
  WTF *v16;
  WTF *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  int v23;
  uint64_t v24;
  int *v25;
  int v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WTF::StringImpl ***)(a2 + 24);
  v27 = (WTF *)v29;
  a4.n128_u64[0] = 4;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  if (a3 >= 0xFFFE000000000000)
  {
    v22 = (_DWORD)a3 == 0;
    goto LABEL_53;
  }
  *(_QWORD *)&v12 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    a4.n128_u64[0] = a3 - 0x2000000000000;
    v13 = v12 > 0.0 || v12 < 0.0;
    goto LABEL_16;
  }
  if ((a3 & 0xFFFE000000000002) != 0)
  {
    v13 = a3 == 7;
    goto LABEL_16;
  }
  v23 = *(unsigned __int8 *)(a3 + 5);
  if (v23 == 3)
  {
    v26 = *(_DWORD *)(a3 + 8);
LABEL_49:
    v22 = v26 == 0;
    goto LABEL_53;
  }
  if (v23 == 2)
  {
    v24 = *(_QWORD *)(a3 + 8);
    if ((v24 & 1) != 0)
      v25 = (int *)(a3 + 16);
    else
      v25 = (int *)(v24 + 4);
    v26 = *v25;
    goto LABEL_49;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
  {
    v22 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_53:
    v13 = !v22;
    goto LABEL_16;
  }
  v13 = 1;
LABEL_16:
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
  {
    v15 = 0;
  }
  else
  {
    WebCore::Element::setBooleanAttribute(v11, (const WebCore::QualifiedName *)&WebCore::HTMLNames::cueAttr, v13, a4);
    v15 = 1;
  }
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v19 = v27;
      v20 = 8 * HIDWORD(v28);
      do
      {
        v21 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)(v21 + 24) == 2)
          {
            if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v21, v14);
          }
          else
          {
            *(_DWORD *)(v21 + 24) -= 2;
          }
        }
        v19 = (WTF *)((char *)v19 + 8);
        v20 -= 8;
      }
      while (v20);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v16 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v16, v14);
  }
  return v15;
}

uint64_t WebCore::jsHTMLElement_cuebackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::cuebackgroundAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::cuebackgroundAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::cuebackgroundAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::setJSHTMLElement_cuebackground(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl **v11;
  double v12;
  _BOOL4 v13;
  void *v14;
  uint64_t v15;
  WTF *v16;
  WTF *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  int v23;
  uint64_t v24;
  int *v25;
  int v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WTF::StringImpl ***)(a2 + 24);
  v27 = (WTF *)v29;
  a4.n128_u64[0] = 4;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  if (a3 >= 0xFFFE000000000000)
  {
    v22 = (_DWORD)a3 == 0;
    goto LABEL_53;
  }
  *(_QWORD *)&v12 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    a4.n128_u64[0] = a3 - 0x2000000000000;
    v13 = v12 > 0.0 || v12 < 0.0;
    goto LABEL_16;
  }
  if ((a3 & 0xFFFE000000000002) != 0)
  {
    v13 = a3 == 7;
    goto LABEL_16;
  }
  v23 = *(unsigned __int8 *)(a3 + 5);
  if (v23 == 3)
  {
    v26 = *(_DWORD *)(a3 + 8);
LABEL_49:
    v22 = v26 == 0;
    goto LABEL_53;
  }
  if (v23 == 2)
  {
    v24 = *(_QWORD *)(a3 + 8);
    if ((v24 & 1) != 0)
      v25 = (int *)(a3 + 16);
    else
      v25 = (int *)(v24 + 4);
    v26 = *v25;
    goto LABEL_49;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
  {
    v22 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_53:
    v13 = !v22;
    goto LABEL_16;
  }
  v13 = 1;
LABEL_16:
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
  {
    v15 = 0;
  }
  else
  {
    WebCore::Element::setBooleanAttribute(v11, (const WebCore::QualifiedName *)&WebCore::HTMLNames::cuebackgroundAttr, v13, a4);
    v15 = 1;
  }
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v19 = v27;
      v20 = 8 * HIDWORD(v28);
      do
      {
        v21 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)(v21 + 24) == 2)
          {
            if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v21, v14);
          }
          else
          {
            *(_DWORD *)(v21 + 24) -= 2;
          }
        }
        v19 = (WTF *)((char *)v19 + 8);
        v20 -= 8;
      }
      while (v20);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v16 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v16, v14);
  }
  return v15;
}

uint64_t WebCore::jsHTMLElement_hidden(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::hiddenAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::hiddenAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::hiddenAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::setJSHTMLElement_hidden(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl **v11;
  double v12;
  _BOOL4 v13;
  void *v14;
  uint64_t v15;
  WTF *v16;
  WTF *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  int v23;
  uint64_t v24;
  int *v25;
  int v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WTF::StringImpl ***)(a2 + 24);
  v27 = (WTF *)v29;
  a4.n128_u64[0] = 4;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  if (a3 >= 0xFFFE000000000000)
  {
    v22 = (_DWORD)a3 == 0;
    goto LABEL_53;
  }
  *(_QWORD *)&v12 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    a4.n128_u64[0] = a3 - 0x2000000000000;
    v13 = v12 > 0.0 || v12 < 0.0;
    goto LABEL_16;
  }
  if ((a3 & 0xFFFE000000000002) != 0)
  {
    v13 = a3 == 7;
    goto LABEL_16;
  }
  v23 = *(unsigned __int8 *)(a3 + 5);
  if (v23 == 3)
  {
    v26 = *(_DWORD *)(a3 + 8);
LABEL_49:
    v22 = v26 == 0;
    goto LABEL_53;
  }
  if (v23 == 2)
  {
    v24 = *(_QWORD *)(a3 + 8);
    if ((v24 & 1) != 0)
      v25 = (int *)(a3 + 16);
    else
      v25 = (int *)(v24 + 4);
    v26 = *v25;
    goto LABEL_49;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
  {
    v22 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_53:
    v13 = !v22;
    goto LABEL_16;
  }
  v13 = 1;
LABEL_16:
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
  {
    v15 = 0;
  }
  else
  {
    WebCore::Element::setBooleanAttribute(v11, (const WebCore::QualifiedName *)&WebCore::HTMLNames::hiddenAttr, v13, a4);
    v15 = 1;
  }
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v19 = v27;
      v20 = 8 * HIDWORD(v28);
      do
      {
        v21 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)(v21 + 24) == 2)
          {
            if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v21, v14);
          }
          else
          {
            *(_DWORD *)(v21 + 24) -= 2;
          }
        }
        v19 = (WTF *)((char *)v19 + 8);
        v20 -= 8;
      }
      while (v20);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v16 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v16, v14);
  }
  return v15;
}

uint64_t WebCore::jsHTMLElement_accessKey(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::accesskeyAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::accesskeyAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::accesskeyAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLElement_accessKey(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  _BOOL8 v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  WTF *v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;
  JSC::JSGlobalObject *v32;
  WTF::StringImpl *v33;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  v28 = (WTF *)v30;
  v29 = 4;
  v30[32] = 0;
  v31 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v32 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v28;
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v26);
  v10 = v27;
  v11 = v27 == 0;
  if (!v27)
  {
    v12 = v26;
    v26 = 0;
    v33 = v12;
    v13 = *((_QWORD *)v8 + 13);
    if (v13)
    {
      v14 = *(_DWORD *)(v13 + 4);
      if ((v14 & 1) == 0)
      {
        v15 = (uint64_t *)(v13 + 32);
        v16 = v14 >> 5;
        if (!v16)
          goto LABEL_25;
LABEL_18:
        v17 = 0;
        while (1)
        {
          v18 = *v15;
          if (*v15 == WebCore::HTMLNames::accesskeyAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::accesskeyAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::accesskeyAttr + 32))
          {
            goto LABEL_26;
          }
          ++v17;
          v15 += 2;
          if (v16 == v17)
            goto LABEL_25;
        }
      }
      v15 = *(uint64_t **)(v13 + 40);
      v16 = *(_DWORD *)(v13 + 52);
      if (v16)
        goto LABEL_18;
    }
LABEL_25:
    v17 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::accesskeyAttr, &v33, 0);
    v19 = v33;
    v33 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v9);
      else
        *(_DWORD *)v19 -= 2;
    }
    v10 = v27;
  }
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v33, &v26);
  if (HIDWORD(v29))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v28, v32);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
    if (HIDWORD(v29))
    {
      v23 = v28;
      v24 = 8 * HIDWORD(v29);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v9);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
  }
  v20 = v28;
  if (v30 != (_BYTE *)v28 && v28 != 0)
  {
    v28 = 0;
    LODWORD(v29) = 0;
    WTF::fastFree(v20, v9);
  }
  return v11;
}

uint64_t WebCore::jsHTMLElement_accessKeyLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLElement::accessKeyLabel(*(WTF::StringImpl **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsHTMLElement_draggable(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 1160))(*(_QWORD *)(a2 + 24)))
    return 7;
  else
    return 6;
}

BOOL WebCore::setJSHTMLElement_draggable(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WTF::StringImpl *v10;
  double v11;
  _BOOL4 v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  WTF *v22;
  WTF *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  int *v31;
  int v32;
  WTF *v33;
  uint64_t v34;
  _BYTE v35[40];
  uint64_t v36;
  JSC::JSGlobalObject *v37;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WTF::StringImpl **)(a2 + 24);
  v33 = (WTF *)v35;
  v34 = 4;
  v35[32] = 0;
  v36 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v37 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v33;
  if (a3 >= 0xFFFE000000000000)
  {
    v28 = (_DWORD)a3 == 0;
    goto LABEL_69;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v29 = *(unsigned __int8 *)(a3 + 5);
    if (v29 == 3)
    {
      v32 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v29 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v28 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        goto LABEL_69;
      }
      v30 = *(_QWORD *)(a3 + 8);
      if ((v30 & 1) != 0)
        v31 = (int *)(a3 + 16);
      else
        v31 = (int *)(v30 + 4);
      v32 = *v31;
    }
    v28 = v32 == 0;
LABEL_69:
    v12 = !v28;
    goto LABEL_16;
  }
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    v13 = *((_QWORD *)v10 + 13);
    if (v13)
    {
      v14 = *(_DWORD *)(v13 + 4);
      if ((v14 & 1) == 0)
      {
        v15 = (uint64_t *)(v13 + 32);
        v16 = v14 >> 5;
        if (!v16)
          goto LABEL_29;
LABEL_22:
        v17 = 0;
        while (1)
        {
          v18 = *v15;
          if (*v15 == WebCore::HTMLNames::draggableAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::draggableAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::draggableAttr + 32))
          {
            goto LABEL_30;
          }
          ++v17;
          v15 += 2;
          if (v16 == v17)
            goto LABEL_29;
        }
      }
      v15 = *(uint64_t **)(v13 + 40);
      v16 = *(_DWORD *)(v13 + 52);
      if (v16)
        goto LABEL_22;
    }
LABEL_29:
    v17 = 0xFFFFFFFFLL;
LABEL_30:
    if (v12)
      v19 = &WebCore::trueAtomData;
    else
      v19 = &WebCore::falseAtomData;
    WebCore::Element::setAttributeInternal(v10, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::draggableAttr, (WTF::StringImpl **)v19, 0);
    v21 = 1;
    goto LABEL_34;
  }
  v21 = 0;
LABEL_34:
  if (HIDWORD(v34))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v33, v37);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
    if (HIDWORD(v34))
    {
      v25 = v33;
      v26 = 8 * HIDWORD(v34);
      do
      {
        v27 = *(_QWORD *)v25;
        *(_QWORD *)v25 = 0;
        if (v27)
        {
          if (*(_DWORD *)(v27 + 24) == 2)
          {
            if ((*(_WORD *)(v27 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v27, v20);
          }
          else
          {
            *(_DWORD *)(v27 + 24) -= 2;
          }
        }
        v25 = (WTF *)((char *)v25 + 8);
        v26 -= 8;
      }
      while (v26);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
  }
  v22 = v33;
  if (v35 != (_BYTE *)v33 && v33 != 0)
  {
    v33 = 0;
    LODWORD(v34) = 0;
    WTF::fastFree(v22, v20);
  }
  return v21;
}

uint64_t WebCore::jsHTMLElement_spellcheck(uint64_t a1, uint64_t a2)
{
  if (WebCore::Element::isSpellCheckingEnabled(*(WebCore::Element **)(a2 + 24)))
    return 7;
  else
    return 6;
}

BOOL WebCore::setJSHTMLElement_spellcheck(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WTF::StringImpl *v10;
  double v11;
  _BOOL4 v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  WTF *v22;
  WTF *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  int *v31;
  int v32;
  WTF *v33;
  uint64_t v34;
  _BYTE v35[40];
  uint64_t v36;
  JSC::JSGlobalObject *v37;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WTF::StringImpl **)(a2 + 24);
  v33 = (WTF *)v35;
  v34 = 4;
  v35[32] = 0;
  v36 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v37 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v33;
  if (a3 >= 0xFFFE000000000000)
  {
    v28 = (_DWORD)a3 == 0;
    goto LABEL_69;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v29 = *(unsigned __int8 *)(a3 + 5);
    if (v29 == 3)
    {
      v32 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v29 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v28 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        goto LABEL_69;
      }
      v30 = *(_QWORD *)(a3 + 8);
      if ((v30 & 1) != 0)
        v31 = (int *)(a3 + 16);
      else
        v31 = (int *)(v30 + 4);
      v32 = *v31;
    }
    v28 = v32 == 0;
LABEL_69:
    v12 = !v28;
    goto LABEL_16;
  }
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    v13 = *((_QWORD *)v10 + 13);
    if (v13)
    {
      v14 = *(_DWORD *)(v13 + 4);
      if ((v14 & 1) == 0)
      {
        v15 = (uint64_t *)(v13 + 32);
        v16 = v14 >> 5;
        if (!v16)
          goto LABEL_29;
LABEL_22:
        v17 = 0;
        while (1)
        {
          v18 = *v15;
          if (*v15 == WebCore::HTMLNames::spellcheckAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::spellcheckAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::spellcheckAttr + 32))
          {
            goto LABEL_30;
          }
          ++v17;
          v15 += 2;
          if (v16 == v17)
            goto LABEL_29;
        }
      }
      v15 = *(uint64_t **)(v13 + 40);
      v16 = *(_DWORD *)(v13 + 52);
      if (v16)
        goto LABEL_22;
    }
LABEL_29:
    v17 = 0xFFFFFFFFLL;
LABEL_30:
    if (v12)
      v19 = &WebCore::trueAtomData;
    else
      v19 = &WebCore::falseAtomData;
    WebCore::Element::setAttributeInternal(v10, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::spellcheckAttr, (WTF::StringImpl **)v19, 0);
    v21 = 1;
    goto LABEL_34;
  }
  v21 = 0;
LABEL_34:
  if (HIDWORD(v34))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v33, v37);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
    if (HIDWORD(v34))
    {
      v25 = v33;
      v26 = 8 * HIDWORD(v34);
      do
      {
        v27 = *(_QWORD *)v25;
        *(_QWORD *)v25 = 0;
        if (v27)
        {
          if (*(_DWORD *)(v27 + 24) == 2)
          {
            if ((*(_WORD *)(v27 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v27, v20);
          }
          else
          {
            *(_DWORD *)(v27 + 24) -= 2;
          }
        }
        v25 = (WTF *)((char *)v25 + 8);
        v26 -= 8;
      }
      while (v26);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
  }
  v22 = v33;
  if (v35 != (_BYTE *)v33 && v33 != 0)
  {
    v33 = 0;
    LODWORD(v34) = 0;
    WTF::fastFree(v22, v20);
  }
  return v21;
}

uint64_t WebCore::jsHTMLElement_autocapitalize(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;

  switch((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 1224))(*(_QWORD *)(a2 + 24)))
  {
    case 1u:
      v3 = &WebCore::noneAtomData;
      goto LABEL_10;
    case 2u:
      {
        v3 = &WebCore::stringForAutocapitalizeType(WebCore::AutocapitalizeType)::valueWords;
        goto LABEL_10;
      }
      WTF::AtomStringImpl::add();
      v4 = v12;
      WebCore::stringForAutocapitalizeType(WebCore::AutocapitalizeType)::valueWords = v12;
      break;
    case 3u:
      {
        v3 = &WebCore::stringForAutocapitalizeType(WebCore::AutocapitalizeType)::valueSentences;
        goto LABEL_10;
      }
      WTF::AtomStringImpl::add();
      v4 = v12;
      WebCore::stringForAutocapitalizeType(WebCore::AutocapitalizeType)::valueSentences = v12;
      break;
    case 4u:
      {
        v3 = &WebCore::stringForAutocapitalizeType(WebCore::AutocapitalizeType)::valueAllCharacters;
LABEL_10:
        v4 = *v3;
      }
      else
      {
        WTF::AtomStringImpl::add();
        v4 = v12;
        WebCore::stringForAutocapitalizeType(WebCore::AutocapitalizeType)::valueAllCharacters = v12;
      }
      break;
    default:
      v3 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      goto LABEL_10;
  }
  v5 = *(_QWORD *)(a1 + 56);
  if (!v4)
    return *(_QWORD *)(v5 + 41968);
  v6 = *(_DWORD *)(v4 + 4);
  if (!v6)
    return *(_QWORD *)(v5 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_14;
      v10 = v11;
    }
    return *(_QWORD *)(v5 + 8 * v10 + 42216);
  }
LABEL_14:
  v7 = *(_QWORD *)(v5 + 64760);
  if (!v7 || v4 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSHTMLElement_autocapitalize(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  _BOOL8 v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  WTF *v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;
  JSC::JSGlobalObject *v32;
  WTF::StringImpl *v33;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  v28 = (WTF *)v30;
  v29 = 4;
  v30[32] = 0;
  v31 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v32 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v28;
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v26);
  v10 = v27;
  v11 = v27 == 0;
  if (!v27)
  {
    v12 = v26;
    v26 = 0;
    v33 = v12;
    v13 = *((_QWORD *)v8 + 13);
    if (v13)
    {
      v14 = *(_DWORD *)(v13 + 4);
      if ((v14 & 1) == 0)
      {
        v15 = (uint64_t *)(v13 + 32);
        v16 = v14 >> 5;
        if (!v16)
          goto LABEL_25;
LABEL_18:
        v17 = 0;
        while (1)
        {
          v18 = *v15;
          if (*v15 == WebCore::HTMLNames::autocapitalizeAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::autocapitalizeAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::autocapitalizeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v17;
          v15 += 2;
          if (v16 == v17)
            goto LABEL_25;
        }
      }
      v15 = *(uint64_t **)(v13 + 40);
      v16 = *(_DWORD *)(v13 + 52);
      if (v16)
        goto LABEL_18;
    }
LABEL_25:
    v17 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::autocapitalizeAttr, &v33, 0);
    v19 = v33;
    v33 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v9);
      else
        *(_DWORD *)v19 -= 2;
    }
    v10 = v27;
  }
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v33, &v26);
  if (HIDWORD(v29))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v28, v32);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
    if (HIDWORD(v29))
    {
      v23 = v28;
      v24 = 8 * HIDWORD(v29);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v9);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
  }
  v20 = v28;
  if (v30 != (_BYTE *)v28 && v28 != 0)
  {
    v28 = 0;
    LODWORD(v29) = 0;
    WTF::fastFree(v20, v9);
  }
  return v11;
}

uint64_t WebCore::jsHTMLElement_innerText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v11;

  WebCore::Element::innerText(*(WebCore::Element **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_8;
  }
  if (v5 != 1)
    goto LABEL_4;
  v8 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_15:
    v6 = *(_QWORD *)(v3 + 8 * v9 + 42216);
    goto LABEL_16;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_15;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_16:
  v11 = 0;
LABEL_8:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLElement_innerText(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::ContainerNode *v10;
  WTF::StringImpl *v11;
  int v12;
  _BOOL8 v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF *v16;
  WTF *v19;
  uint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  JSValue v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  int v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  char v36;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::ContainerNode **)(a2 + 24);
  v27 = (WTF *)v29;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  WebCore::Converter<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLDOMString>>::convert(a1, (unint64_t)this, (uint64_t)&v25);
  v12 = v26;
  v13 = v26 == 0;
  if (!v26)
  {
    v14 = v25;
    v25 = 0;
    v32 = v14;
    WebCore::HTMLElement::setInnerText(v10, (WTF *)&v32, &v34);
    v15 = v32;
    v32 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v11);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (v36)
    {
      v11 = (WTF::StringImpl *)v34;
      LOBYTE(v32) = v34;
      v22 = v35;
      v35 = 0;
      v33 = v22;
      if (!*((_QWORD *)v4 + 2))
      {
        v23.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v34, (JSC::JSGlobalObject *)&v33);
        JSC::VM::throwException(v4, a1, v23);
        v22 = v33;
      }
      v33 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 == 2)
          WTF::StringImpl::destroy(v22, v11);
        else
          *(_DWORD *)v22 -= 2;
      }
      if (v36)
      {
        v24 = v35;
        v35 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v11);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
    }
    v12 = v26;
  }
  if (v12 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E329F280[v12])(&v34, &v25);
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v19 = v27;
      v20 = 8 * HIDWORD(v28);
      do
      {
        v21 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)(v21 + 24) == 2)
          {
            if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v21, v11);
          }
          else
          {
            *(_DWORD *)(v21 + 24) -= 2;
          }
        }
        v19 = (WTF *)((char *)v19 + 8);
        v20 -= 8;
      }
      while (v20);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v16 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v16, v11);
  }
  return v13;
}

uint64_t WebCore::jsHTMLElement_inert(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::inertAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::inertAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::inertAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::setJSHTMLElement_inert(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl **v11;
  double v12;
  _BOOL4 v13;
  void *v14;
  uint64_t v15;
  WTF *v16;
  WTF *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  int v23;
  uint64_t v24;
  int *v25;
  int v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WTF::StringImpl ***)(a2 + 24);
  v27 = (WTF *)v29;
  a4.n128_u64[0] = 4;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  if (a3 >= 0xFFFE000000000000)
  {
    v22 = (_DWORD)a3 == 0;
    goto LABEL_53;
  }
  *(_QWORD *)&v12 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    a4.n128_u64[0] = a3 - 0x2000000000000;
    v13 = v12 > 0.0 || v12 < 0.0;
    goto LABEL_16;
  }
  if ((a3 & 0xFFFE000000000002) != 0)
  {
    v13 = a3 == 7;
    goto LABEL_16;
  }
  v23 = *(unsigned __int8 *)(a3 + 5);
  if (v23 == 3)
  {
    v26 = *(_DWORD *)(a3 + 8);
LABEL_49:
    v22 = v26 == 0;
    goto LABEL_53;
  }
  if (v23 == 2)
  {
    v24 = *(_QWORD *)(a3 + 8);
    if ((v24 & 1) != 0)
      v25 = (int *)(a3 + 16);
    else
      v25 = (int *)(v24 + 4);
    v26 = *v25;
    goto LABEL_49;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
  {
    v22 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_53:
    v13 = !v22;
    goto LABEL_16;
  }
  v13 = 1;
LABEL_16:
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
  {
    v15 = 0;
  }
  else
  {
    WebCore::Element::setBooleanAttribute(v11, (const WebCore::QualifiedName *)&WebCore::HTMLNames::inertAttr, v13, a4);
    v15 = 1;
  }
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v19 = v27;
      v20 = 8 * HIDWORD(v28);
      do
      {
        v21 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)(v21 + 24) == 2)
          {
            if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v21, v14);
          }
          else
          {
            *(_DWORD *)(v21 + 24) -= 2;
          }
        }
        v19 = (WTF *)((char *)v19 + 8);
        v20 -= 8;
      }
      while (v20);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v16 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v16, v14);
  }
  return v15;
}

uint64_t WebCore::jsHTMLElement_popover(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  int v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;

  if ((*(_QWORD *)(*(_QWORD *)(a2 + 24) + 72) & 0xFFFFFFFFFFFFLL) != 0)
  {
    v8 = *(unsigned __int8 **)((*(_QWORD *)(*(_QWORD *)(a2 + 24) + 72) & 0xFFFFFFFFFFFFLL) + 0xE8);
    v2 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    if (v8)
    {
      v9 = *v8;
      if (v9 == 1)
        v2 = &WebCore::autoAtomData;
      if (v9 == 2)
        v2 = &WebCore::manualAtomData;
    }
  }
  else
  {
    v2 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v3 = *v2;
  if (!*v2)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_DWORD *)(v3 + 4);
  if (!v5)
    return *(_QWORD *)(v4 + 41968);
  if (v5 == 1)
  {
    v10 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_6;
      v11 = v12;
    }
    return *(_QWORD *)(v4 + 8 * v11 + 42216);
  }
LABEL_6:
  v6 = *(_QWORD *)(v4 + 64760);
  if (!v6 || v3 != *(_QWORD *)(v6 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v6;
}

BOOL WebCore::setJSHTMLElement_popover(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  WTF *v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;
  JSC::JSGlobalObject *v32;
  WTF::StringImpl *v33;
  int v34;
  char v35;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  v28 = (WTF *)v30;
  v29 = 4;
  v30[32] = 0;
  v31 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v32 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v28;
  if ((this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v11 = 0;
    v27 = 0;
    goto LABEL_18;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, this, (uint64_t)&v33);
  LOBYTE(v26) = 0;
  v27 = -1;
  v10 = v34;
  if (v34 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v34])(&v35, &v26, &v33);
    v27 = v10;
    if (v34 != -1)
    {
      ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v34])(&v35, &v33);
      v10 = v27;
    }
    if (v10)
    {
      v16 = 0;
LABEL_36:
      if (v10 != -1)
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v33, &v26);
      goto LABEL_38;
    }
    v11 = v26;
LABEL_18:
    v26 = 0;
    v33 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_31;
LABEL_24:
        v17 = 0;
        while (1)
        {
          v18 = *v14;
          if (*v14 == WebCore::HTMLNames::popoverAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::popoverAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::popoverAttr + 32))
          {
            goto LABEL_32;
          }
          ++v17;
          v14 += 2;
          if (v15 == v17)
            goto LABEL_31;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_24;
    }
LABEL_31:
    v17 = 0xFFFFFFFFLL;
LABEL_32:
    WebCore::Element::setAttributeInternal(v8, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::popoverAttr, &v33, 0);
    v19 = v33;
    v33 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v9);
      else
        *(_DWORD *)v19 -= 2;
    }
    v16 = 1;
    v10 = v27;
    goto LABEL_36;
  }
  v16 = 0;
LABEL_38:
  if (HIDWORD(v29))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v28, v32);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
    if (HIDWORD(v29))
    {
      v23 = v28;
      v24 = 8 * HIDWORD(v29);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v9);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
  }
  v20 = v28;
  if (v30 != (_BYTE *)v28 && v28 != 0)
  {
    v28 = 0;
    LODWORD(v29) = 0;
    WTF::fastFree(v20, v9);
  }
  return v16;
}

uint64_t WebCore::jsHTMLElement_outerText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::Element::innerText(*(WebCore::Element **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLElement_outerText(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::Node *v10;
  WTF::StringImpl *v11;
  int v12;
  _BOOL8 v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF *v16;
  WTF *v19;
  uint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  JSValue v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  int v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  _BYTE v34[8];
  WTF::StringImpl *v35;
  char v36;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::Node **)(a2 + 24);
  v27 = (WTF *)v29;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  WebCore::Converter<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLDOMString>>::convert(a1, (unint64_t)this, (uint64_t)&v25);
  v12 = v26;
  v13 = v26 == 0;
  if (!v26)
  {
    v14 = v25;
    v25 = 0;
    v32 = v14;
    WebCore::HTMLElement::setOuterText(&v32, v10, (uint64_t)v34);
    v15 = v32;
    v32 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v11);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (v36)
    {
      v11 = (WTF::StringImpl *)v34[0];
      LOBYTE(v32) = v34[0];
      v22 = v35;
      v35 = 0;
      v33 = v22;
      if (!*((_QWORD *)v4 + 2))
      {
        v23.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v34[0], (JSC::JSGlobalObject *)&v33);
        JSC::VM::throwException(v4, a1, v23);
        v22 = v33;
      }
      v33 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 == 2)
          WTF::StringImpl::destroy(v22, v11);
        else
          *(_DWORD *)v22 -= 2;
      }
      if (v36)
      {
        v24 = v35;
        v35 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v11);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
    }
    v12 = v26;
  }
  if (v12 != -1)
    ((void (*)(_BYTE *, WTF::StringImpl **))off_1E329F280[v12])(v34, &v25);
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v19 = v27;
      v20 = 8 * HIDWORD(v28);
      do
      {
        v21 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)(v21 + 24) == 2)
          {
            if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v21, v11);
          }
          else
          {
            *(_DWORD *)(v21 + 24) -= 2;
          }
        }
        v19 = (WTF *)((char *)v19 + 8);
        v20 -= 8;
      }
      while (v20);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v16 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v16, v11);
  }
  return v13;
}

uint64_t WebCore::jsHTMLElement_autocorrect(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 1232))(*(_QWORD *)(a2 + 24)))
    return 7;
  else
    return 6;
}

BOOL WebCore::setJSHTMLElement_autocorrect(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WTF::StringImpl *v10;
  double v11;
  _BOOL4 v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  WTF *v22;
  WTF *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  int *v31;
  int v32;
  WTF *v33;
  uint64_t v34;
  _BYTE v35[40];
  uint64_t v36;
  JSC::JSGlobalObject *v37;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WTF::StringImpl **)(a2 + 24);
  v33 = (WTF *)v35;
  v34 = 4;
  v35[32] = 0;
  v36 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v37 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v33;
  if (a3 >= 0xFFFE000000000000)
  {
    v28 = (_DWORD)a3 == 0;
    goto LABEL_69;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v29 = *(unsigned __int8 *)(a3 + 5);
    if (v29 == 3)
    {
      v32 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v29 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v28 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        goto LABEL_69;
      }
      v30 = *(_QWORD *)(a3 + 8);
      if ((v30 & 1) != 0)
        v31 = (int *)(a3 + 16);
      else
        v31 = (int *)(v30 + 4);
      v32 = *v31;
    }
    v28 = v32 == 0;
LABEL_69:
    v12 = !v28;
    goto LABEL_16;
  }
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    v13 = *((_QWORD *)v10 + 13);
    if (v13)
    {
      v14 = *(_DWORD *)(v13 + 4);
      if ((v14 & 1) == 0)
      {
        v15 = (uint64_t *)(v13 + 32);
        v16 = v14 >> 5;
        if (!v16)
          goto LABEL_29;
LABEL_22:
        v17 = 0;
        while (1)
        {
          v18 = *v15;
          if (*v15 == WebCore::HTMLNames::autocorrectAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::autocorrectAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::autocorrectAttr + 32))
          {
            goto LABEL_30;
          }
          ++v17;
          v15 += 2;
          if (v16 == v17)
            goto LABEL_29;
        }
      }
      v15 = *(uint64_t **)(v13 + 40);
      v16 = *(_DWORD *)(v13 + 52);
      if (v16)
        goto LABEL_22;
    }
LABEL_29:
    v17 = 0xFFFFFFFFLL;
LABEL_30:
    if (v12)
      v19 = &WebCore::onAtomData;
    else
      v19 = &WebCore::offAtomData;
    WebCore::Element::setAttributeInternal(v10, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::autocorrectAttr, (WTF::StringImpl **)v19, 0);
    v21 = 1;
    goto LABEL_34;
  }
  v21 = 0;
LABEL_34:
  if (HIDWORD(v34))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v33, v37);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
    if (HIDWORD(v34))
    {
      v25 = v33;
      v26 = 8 * HIDWORD(v34);
      do
      {
        v27 = *(_QWORD *)v25;
        *(_QWORD *)v25 = 0;
        if (v27)
        {
          if (*(_DWORD *)(v27 + 24) == 2)
          {
            if ((*(_WORD *)(v27 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v27, v20);
          }
          else
          {
            *(_DWORD *)(v27 + 24) -= 2;
          }
        }
        v25 = (WTF *)((char *)v25 + 8);
        v26 -= 8;
      }
      while (v26);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
  }
  v22 = v33;
  if (v35 != (_BYTE *)v33 && v33 != 0)
  {
    v33 = 0;
    LODWORD(v34) = 0;
    WTF::fastFree(v22, v20);
  }
  return v21;
}

uint64_t WebCore::jsHTMLElement_webkitdropzone(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::webkitdropzoneAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::webkitdropzoneAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::webkitdropzoneAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLElement_webkitdropzone(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  _BOOL8 v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  WTF *v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;
  JSC::JSGlobalObject *v32;
  WTF::StringImpl *v33;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  v28 = (WTF *)v30;
  v29 = 4;
  v30[32] = 0;
  v31 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v32 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v28;
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v26);
  v10 = v27;
  v11 = v27 == 0;
  if (!v27)
  {
    v12 = v26;
    v26 = 0;
    v33 = v12;
    v13 = *((_QWORD *)v8 + 13);
    if (v13)
    {
      v14 = *(_DWORD *)(v13 + 4);
      if ((v14 & 1) == 0)
      {
        v15 = (uint64_t *)(v13 + 32);
        v16 = v14 >> 5;
        if (!v16)
          goto LABEL_25;
LABEL_18:
        v17 = 0;
        while (1)
        {
          v18 = *v15;
          if (*v15 == WebCore::HTMLNames::webkitdropzoneAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::webkitdropzoneAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::webkitdropzoneAttr + 32))
          {
            goto LABEL_26;
          }
          ++v17;
          v15 += 2;
          if (v16 == v17)
            goto LABEL_25;
        }
      }
      v15 = *(uint64_t **)(v13 + 40);
      v16 = *(_DWORD *)(v13 + 52);
      if (v16)
        goto LABEL_18;
    }
LABEL_25:
    v17 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::webkitdropzoneAttr, &v33, 0);
    v19 = v33;
    v33 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v9);
      else
        *(_DWORD *)v19 -= 2;
    }
    v10 = v27;
  }
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v33, &v26);
  if (HIDWORD(v29))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v28, v32);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
    if (HIDWORD(v29))
    {
      v23 = v28;
      v24 = 8 * HIDWORD(v29);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v9);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
  }
  v20 = v28;
  if (v30 != (_BYTE *)v28 && v28 != 0)
  {
    v28 = 0;
    LODWORD(v29) = 0;
    WTF::fastFree(v20, v9);
  }
  return v11;
}

uint64_t WebCore::jsHTMLElement_writingsuggestions(uint64_t a1, WebCore::Element **a2)
{
  if (WebCore::Element::isWritingSuggestionsEnabled(a2[3], a2))
    return 7;
  else
    return 6;
}

BOOL WebCore::setJSHTMLElement_writingsuggestions(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WTF::StringImpl *v10;
  double v11;
  _BOOL4 v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  WTF *v22;
  WTF *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  int *v31;
  int v32;
  WTF *v33;
  uint64_t v34;
  _BYTE v35[40];
  uint64_t v36;
  JSC::JSGlobalObject *v37;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WTF::StringImpl **)(a2 + 24);
  v33 = (WTF *)v35;
  v34 = 4;
  v35[32] = 0;
  v36 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v37 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v33;
  if (a3 >= 0xFFFE000000000000)
  {
    v28 = (_DWORD)a3 == 0;
    goto LABEL_69;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v29 = *(unsigned __int8 *)(a3 + 5);
    if (v29 == 3)
    {
      v32 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v29 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v28 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        goto LABEL_69;
      }
      v30 = *(_QWORD *)(a3 + 8);
      if ((v30 & 1) != 0)
        v31 = (int *)(a3 + 16);
      else
        v31 = (int *)(v30 + 4);
      v32 = *v31;
    }
    v28 = v32 == 0;
LABEL_69:
    v12 = !v28;
    goto LABEL_16;
  }
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    v13 = *((_QWORD *)v10 + 13);
    if (v13)
    {
      v14 = *(_DWORD *)(v13 + 4);
      if ((v14 & 1) == 0)
      {
        v15 = (uint64_t *)(v13 + 32);
        v16 = v14 >> 5;
        if (!v16)
          goto LABEL_29;
LABEL_22:
        v17 = 0;
        while (1)
        {
          v18 = *v15;
          if (*v15 == WebCore::HTMLNames::writingsuggestionsAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::writingsuggestionsAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::writingsuggestionsAttr + 32))
          {
            goto LABEL_30;
          }
          ++v17;
          v15 += 2;
          if (v16 == v17)
            goto LABEL_29;
        }
      }
      v15 = *(uint64_t **)(v13 + 40);
      v16 = *(_DWORD *)(v13 + 52);
      if (v16)
        goto LABEL_22;
    }
LABEL_29:
    v17 = 0xFFFFFFFFLL;
LABEL_30:
    if (v12)
      v19 = &WebCore::trueAtomData;
    else
      v19 = &WebCore::falseAtomData;
    WebCore::Element::setAttributeInternal(v10, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::writingsuggestionsAttr, (WTF::StringImpl **)v19, 0);
    v21 = 1;
    goto LABEL_34;
  }
  v21 = 0;
LABEL_34:
  if (HIDWORD(v34))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v33, v37);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
    if (HIDWORD(v34))
    {
      v25 = v33;
      v26 = 8 * HIDWORD(v34);
      do
      {
        v27 = *(_QWORD *)v25;
        *(_QWORD *)v25 = 0;
        if (v27)
        {
          if (*(_DWORD *)(v27 + 24) == 2)
          {
            if ((*(_WORD *)(v27 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v27, v20);
          }
          else
          {
            *(_DWORD *)(v27 + 24) -= 2;
          }
        }
        v25 = (WTF *)((char *)v25 + 8);
        v26 -= 8;
      }
      while (v26);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
  }
  v22 = v33;
  if (v35 != (_BYTE *)v33 && v33 != 0)
  {
    v33 = 0;
    LODWORD(v34) = 0;
    WTF::fastFree(v22, v20);
  }
  return v21;
}

BOOL WebCore::setJSHTMLElement_style(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLElement::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

unint64_t WebCore::jsHTMLElement_attributeStyleMap(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  JSC::VM *v5;
  JSC::VM *v6;
  WebCore::JSDOMGlobalObject *v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 32);
  if (!v2)
  {
    v5 = *(JSC::VM **)(a1 + 56);
    v6 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
    v7 = (WebCore::JSDOMGlobalObject *)WebCore::StyledElement::ensureAttributeStyleMap(*(WebCore::StyledElement **)(a2 + 24));
    v2 = WebCore::wrap<WebCore::StylePropertyMap>(a1, v6, v7);
    if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a2 + 32) = v2;
      if ((v2 & 0xFFFE000000000002) == 0 && v2 && *(_DWORD *)(v8 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v8 + 192), (const JSCell *)a2);
    }
  }
  return v2;
}

uint64_t WebCore::jsHTMLElement_onbeforecopy(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 224), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onbeforecopy(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 224), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onbeforecut(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 232), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onbeforecut(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 232), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onbeforeinput(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 240), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onbeforeinput(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 240), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onbeforepaste(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 256), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onbeforepaste(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 256), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_contentEditable(uint64_t a1, const WebCore::HTMLElement *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  WTF::StringImpl *v12;

  v3 = WebCore::contentEditableType(*(WebCore **)(*((_QWORD *)a2 + 3) + 104), a2);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = WebCore::trueAtomData;
      if (!WebCore::trueAtomData)
        goto LABEL_25;
    }
    else if (v3 == 2)
    {
      v4 = WebCore::falseAtomData;
      if (!WebCore::falseAtomData)
        goto LABEL_25;
    }
    else
    {
      v4 = WebCore::plaintextOnlyAtomData;
      if (!WebCore::plaintextOnlyAtomData)
      {
LABEL_25:
        v12 = (WTF::StringImpl *)v4;
        goto LABEL_3;
      }
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_25;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v4 = (uint64_t)v12;
LABEL_3:
  v5 = *(_QWORD *)(a1 + 56);
  if (!v4 || (v6 = *(_DWORD *)(v4 + 4)) == 0)
  {
    v7 = *(_QWORD *)(v5 + 41968);
LABEL_9:
    if (!v4)
      return v7;
    goto LABEL_10;
  }
  if (v6 != 1)
    goto LABEL_6;
  v9 = *(unsigned __int8 **)(v4 + 8);
  if ((*(_BYTE *)(v4 + 16) & 4) != 0)
  {
    v10 = *v9;
LABEL_17:
    v7 = *(_QWORD *)(v5 + 8 * v10 + 42216);
    goto LABEL_10;
  }
  v11 = *(unsigned __int16 *)v9;
  if (v11 <= 0xFF)
  {
    v10 = v11;
    goto LABEL_17;
  }
LABEL_6:
  v7 = *(_QWORD *)(v5 + 64760);
  if (!v7 || v4 != *(_QWORD *)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v4 = (uint64_t)v12;
    goto LABEL_9;
  }
LABEL_10:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, (WTF::StringImpl *)v4);
  else
    *(_DWORD *)v4 -= 2;
  return v7;
}

BOOL WebCore::IDLAttribute<WebCore::JSHTMLElement>::set<&WebCore::setJSHTMLElement_contentEditableSetter,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;

  v5 = WebCore::castThisValue<WebCore::JSHTMLElement>(a2);
  if (v5)
    return WebCore::setJSHTMLElement_contentEditableSetter(a1, *(WebCore::HTMLElement **)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsHTMLElement_enterKeyHint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v20;
  WTF::StringImpl *v21;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::enterkeyhintAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::enterkeyhintAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::enterkeyhintAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (v9)
  {
    v10 = *(unsigned __int16 **)(v9 + 8);
    v11 = *(unsigned int *)(v9 + 4) | ((unint64_t)((*(_DWORD *)(v9 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v10 = 0;
    v11 = 0x100000000;
  }
  v12 = WebCore::enterKeyHintForAttributeValue(v10, v11);
  WebCore::attributeValueForEnterKeyHint(v12, &v21);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = v21;
  if (!v21 || (v15 = *((_DWORD *)v21 + 1)) == 0)
  {
    v16 = *(_QWORD *)(v13 + 41968);
LABEL_21:
    v21 = 0;
    if (!v14)
      return v16;
    goto LABEL_29;
  }
  if (v15 != 1)
    goto LABEL_18;
  v17 = (unsigned __int8 *)*((_QWORD *)v21 + 1);
  if ((*((_BYTE *)v21 + 16) & 4) != 0)
  {
    v18 = *v17;
LABEL_27:
    v16 = *(_QWORD *)(v13 + 8 * v18 + 42216);
    goto LABEL_28;
  }
  v20 = *(unsigned __int16 *)v17;
  if (v20 <= 0xFF)
  {
    v18 = v20;
    goto LABEL_27;
  }
LABEL_18:
  v16 = *(_QWORD *)(v13 + 64760);
  if (!v16 || v21 != *(WTF::StringImpl **)(v16 + 8))
  {
    v16 = JSC::jsStringWithCacheSlowCase();
    v14 = v21;
    goto LABEL_21;
  }
LABEL_28:
  v21 = 0;
LABEL_29:
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v14);
  else
    *(_DWORD *)v14 -= 2;
  return v16;
}

BOOL WebCore::setJSHTMLElement_enterKeyHint(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  _BOOL8 v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  WTF *v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;
  JSC::JSGlobalObject *v32;
  WTF::StringImpl *v33;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  v28 = (WTF *)v30;
  v29 = 4;
  v30[32] = 0;
  v31 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v32 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v28;
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v26);
  v10 = v27;
  v11 = v27 == 0;
  if (!v27)
  {
    v12 = v26;
    v26 = 0;
    v33 = v12;
    v13 = *((_QWORD *)v8 + 13);
    if (v13)
    {
      v14 = *(_DWORD *)(v13 + 4);
      if ((v14 & 1) == 0)
      {
        v15 = (uint64_t *)(v13 + 32);
        v16 = v14 >> 5;
        if (!v16)
          goto LABEL_25;
LABEL_18:
        v17 = 0;
        while (1)
        {
          v18 = *v15;
          if (*v15 == WebCore::HTMLNames::enterkeyhintAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::enterkeyhintAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::enterkeyhintAttr + 32))
          {
            goto LABEL_26;
          }
          ++v17;
          v15 += 2;
          if (v16 == v17)
            goto LABEL_25;
        }
      }
      v15 = *(uint64_t **)(v13 + 40);
      v16 = *(_DWORD *)(v13 + 52);
      if (v16)
        goto LABEL_18;
    }
LABEL_25:
    v17 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::enterkeyhintAttr, &v33, 0);
    v19 = v33;
    v33 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v9);
      else
        *(_DWORD *)v19 -= 2;
    }
    v10 = v27;
  }
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v33, &v26);
  if (HIDWORD(v29))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v28, v32);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
    if (HIDWORD(v29))
    {
      v23 = v28;
      v24 = 8 * HIDWORD(v29);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v9);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
  }
  v20 = v28;
  if (v30 != (_BYTE *)v28 && v28 != 0)
  {
    v28 = 0;
    LODWORD(v29) = 0;
    WTF::fastFree(v20, v9);
  }
  return v11;
}

uint64_t WebCore::jsHTMLElement_isContentEditable(uint64_t a1, uint64_t a2)
{
  if (WebCore::Node::computeEditability(*(_QWORD *)(a2 + 24), 1, 0))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsHTMLElement_inputMode(uint64_t a1, WebCore::HTMLElement **a2, const WTF::StringImpl *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;

  v4 = WebCore::HTMLElement::inputMode(a2[3], (const WTF::AtomString *)a2, a3);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *v4;
  if (!*v4)
    return *(_QWORD *)(v5 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v5 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v11 = *(unsigned __int16 *)v10;
      if (v11 > 0xFF)
        goto LABEL_4;
      v11 = v11;
    }
    return *(_QWORD *)(v5 + 8 * v11 + 42216);
  }
LABEL_4:
  v8 = *(_QWORD *)(v5 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLElement_inputMode(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  _BOOL8 v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  WTF *v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;
  JSC::JSGlobalObject *v32;
  WTF::StringImpl *v33;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  v28 = (WTF *)v30;
  v29 = 4;
  v30[32] = 0;
  v31 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v32 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v28;
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v26);
  v10 = v27;
  v11 = v27 == 0;
  if (!v27)
  {
    v12 = v26;
    v26 = 0;
    v33 = v12;
    v13 = *((_QWORD *)v8 + 13);
    if (v13)
    {
      v14 = *(_DWORD *)(v13 + 4);
      if ((v14 & 1) == 0)
      {
        v15 = (uint64_t *)(v13 + 32);
        v16 = v14 >> 5;
        if (!v16)
          goto LABEL_25;
LABEL_18:
        v17 = 0;
        while (1)
        {
          v18 = *v15;
          if (*v15 == WebCore::HTMLNames::inputmodeAttr
            || *(_QWORD *)(v18 + 24) == *(_QWORD *)(WebCore::HTMLNames::inputmodeAttr + 24)
            && *(_QWORD *)(v18 + 32) == *(_QWORD *)(WebCore::HTMLNames::inputmodeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v17;
          v15 += 2;
          if (v16 == v17)
            goto LABEL_25;
        }
      }
      v15 = *(uint64_t **)(v13 + 40);
      v16 = *(_DWORD *)(v13 + 52);
      if (v16)
        goto LABEL_18;
    }
LABEL_25:
    v17 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v17, (WebCore::TreeScope *)&WebCore::HTMLNames::inputmodeAttr, &v33, 0);
    v19 = v33;
    v33 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v9);
      else
        *(_DWORD *)v19 -= 2;
    }
    v10 = v27;
  }
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v33, &v26);
  if (HIDWORD(v29))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v28, v32);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
    if (HIDWORD(v29))
    {
      v23 = v28;
      v24 = 8 * HIDWORD(v29);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v9);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
  }
  v20 = v28;
  if (v30 != (_BYTE *)v28 && v28 != 0)
  {
    v28 = 0;
    LODWORD(v29) = 0;
    WTF::fastFree(v20, v9);
  }
  return v11;
}

uint64_t WebCore::jsHTMLElement_onabort(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 64), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onabort(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 64), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onbeforetoggle(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 272), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onbeforetoggle(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 272), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onblur(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 304), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onblur(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 304), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_oncancel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 344), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_oncancel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 344), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_oncanplay(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 352), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_oncanplay(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 352), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_oncanplaythrough(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 360), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_oncanplaythrough(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 360), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 368), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v10 + 24) += 2;
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (v12 = *(_QWORD *)(v11 + 96)) == 0)
    v12 = WebCore::threadGlobalDataSlow(a1);
  v13 = *(_QWORD *)(v12 + 40);
  if (!v13)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v12);
    v13 = *(_QWORD *)(v12 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v10, (WTF::StringImpl **)(v13 + 368), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v10 + 24) == 2)
  {
    if ((*(_WORD *)(v10 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v10, v14);
  }
  else
  {
    *(_DWORD *)(v10 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onclick(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 400), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onclick(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v10 + 24) += 2;
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (v12 = *(_QWORD *)(v11 + 96)) == 0)
    v12 = WebCore::threadGlobalDataSlow(a1);
  v13 = *(_QWORD *)(v12 + 40);
  if (!v13)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v12);
    v13 = *(_QWORD *)(v12 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v10, (WTF::StringImpl **)(v13 + 400), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v10 + 24) == 2)
  {
    if ((*(_WORD *)(v10 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v10, v14);
  }
  else
  {
    *(_DWORD *)(v10 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onclose(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 408), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onclose(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 408), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_oncontentvisibilityautostatechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 488), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_oncontentvisibilityautostatechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 488), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_oncontextmenu(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 496), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_oncontextmenu(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 496), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_oncopy(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 528), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_oncopy(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 528), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_oncuechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 544), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_oncuechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 544), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_oncut(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 560), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_oncut(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 560), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ondblclick(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 584), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ondblclick(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 584), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ondrag(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 656), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ondrag(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 656), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ondragend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 664), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ondragend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 664), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ondragenter(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 672), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ondragenter(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 672), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ondragleave(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 680), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ondragleave(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 680), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ondragover(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 688), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ondragover(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 688), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ondragstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 696), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ondragstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 696), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ondrop(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 704), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ondrop(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 704), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ondurationchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 712), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ondurationchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 712), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onemptied(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 720), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onemptied(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 720), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onended(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 752), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onended(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 752), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onerror(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 784), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onerror(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 784), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onfocus(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 816), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onfocus(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 816), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onformdata(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 840), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onformdata(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 840), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_oninput(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1008), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_oninput(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v10 + 24) += 2;
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (v12 = *(_QWORD *)(v11 + 96)) == 0)
    v12 = WebCore::threadGlobalDataSlow(a1);
  v13 = *(_QWORD *)(v12 + 40);
  if (!v13)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v12);
    v13 = *(_QWORD *)(v12 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v10, (WTF::StringImpl **)(v13 + 1008), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v10 + 24) == 2)
  {
    if ((*(_WORD *)(v10 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v10, v14);
  }
  else
  {
    *(_DWORD *)(v10 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_oninvalid(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1032), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_oninvalid(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1032), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onkeydown(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1048), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onkeydown(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1048), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onkeypress(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1056), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onkeypress(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1056), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onkeyup(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1072), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onkeyup(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1072), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onload(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1104), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onload(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v10 + 24) += 2;
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (v12 = *(_QWORD *)(v11 + 96)) == 0)
    v12 = WebCore::threadGlobalDataSlow(a1);
  v13 = *(_QWORD *)(v12 + 40);
  if (!v13)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v12);
    v13 = *(_QWORD *)(v12 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v10, (WTF::StringImpl **)(v13 + 1104), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v10 + 24) == 2)
  {
    if ((*(_WORD *)(v10 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v10, v14);
  }
  else
  {
    *(_DWORD *)(v10 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onloadeddata(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1112), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onloadeddata(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1112), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onloadedmetadata(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1120), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onloadedmetadata(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1120), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onloadstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1160), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onloadstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1160), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onmousedown(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1208), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onmousedown(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1208), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onmouseenter(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  _BOOL4 v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 10;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLElement::s_info && v7 != 0);
  }
  if (!v6)
    return 10;
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v10 + 24) += 2;
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (v12 = *(_QWORD *)(v11 + 96)) == 0)
    v12 = WebCore::threadGlobalDataSlow(a1);
  v13 = *(_QWORD *)(v12 + 40);
  if (!v13)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v12);
    v13 = *(_QWORD *)(v12 + 40);
  }
  v15 = WebCore::eventHandlerAttribute((WebCore *)v10, (WebCore::EventTarget *)(v13 + 1216), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v10 + 24) == 2)
  {
    if ((*(_WORD *)(v10 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v10, v14);
  }
  else
  {
    *(_DWORD *)(v10 + 24) -= 2;
  }
  return v15;
}

uint64_t WebCore::setJSHTMLElement_onmouseenter(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _BOOL4 v6;
  char **v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLElement::s_info && v7 != 0);
  }
  if (!v6)
    return 0;
  v9 = *((_QWORD *)a1 + 7);
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v10 + 24) += 2;
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (v12 = *(_QWORD *)(v11 + 96)) == 0)
    v12 = WebCore::threadGlobalDataSlow(a1);
  v13 = *(_QWORD *)(v12 + 40);
  if (!v13)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v12);
    v13 = *(_QWORD *)(v12 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v10, (WTF::StringImpl **)(v13 + 1216), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v10 + 24) == 2)
  {
    if ((*(_WORD *)(v10 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v10, v14);
  }
  else
  {
    *(_DWORD *)(v10 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v9 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v9 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onmouseleave(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  _BOOL4 v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 10;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLElement::s_info && v7 != 0);
  }
  if (!v6)
    return 10;
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v10 + 24) += 2;
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (v12 = *(_QWORD *)(v11 + 96)) == 0)
    v12 = WebCore::threadGlobalDataSlow(a1);
  v13 = *(_QWORD *)(v12 + 40);
  if (!v13)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v12);
    v13 = *(_QWORD *)(v12 + 40);
  }
  v15 = WebCore::eventHandlerAttribute((WebCore *)v10, (WebCore::EventTarget *)(v13 + 1224), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v10 + 24) == 2)
  {
    if ((*(_WORD *)(v10 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v10, v14);
  }
  else
  {
    *(_DWORD *)(v10 + 24) -= 2;
  }
  return v15;
}

uint64_t WebCore::setJSHTMLElement_onmouseleave(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _BOOL4 v6;
  char **v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLElement::s_info && v7 != 0);
  }
  if (!v6)
    return 0;
  v9 = *((_QWORD *)a1 + 7);
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v10 + 24) += 2;
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (v12 = *(_QWORD *)(v11 + 96)) == 0)
    v12 = WebCore::threadGlobalDataSlow(a1);
  v13 = *(_QWORD *)(v12 + 40);
  if (!v13)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v12);
    v13 = *(_QWORD *)(v12 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v10, (WTF::StringImpl **)(v13 + 1224), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v10 + 24) == 2)
  {
    if ((*(_WORD *)(v10 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v10, v14);
  }
  else
  {
    *(_DWORD *)(v10 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v9 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v9 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onmousemove(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1232), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onmousemove(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1232), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onmouseout(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1240), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onmouseout(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1240), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onmouseover(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1248), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onmouseover(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1248), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onmouseup(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1256), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onmouseup(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1256), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onpaste(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1416), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onpaste(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1416), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onpause(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1424), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onpause(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1424), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onplay(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1464), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onplay(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1464), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onplaying(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1472), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onplaying(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1472), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onprogress(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1584), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onprogress(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1584), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onratechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1624), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onratechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1624), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onreset(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1688), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onreset(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1688), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onresize(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1696), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onresize(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1696), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onscroll(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1736), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onscroll(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1736), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onsecuritypolicyviolation(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1752), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onsecuritypolicyviolation(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1752), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onseeked(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1760), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onseeked(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1760), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onseeking(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1768), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onseeking(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1768), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onselect(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1776), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onselect(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1776), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onslotchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1864), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onslotchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1864), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onstalled(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1952), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onstalled(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1952), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onsubmit(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2008), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onsubmit(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v10 + 24) += 2;
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (v12 = *(_QWORD *)(v11 + 96)) == 0)
    v12 = WebCore::threadGlobalDataSlow(a1);
  v13 = *(_QWORD *)(v12 + 40);
  if (!v13)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v12);
    v13 = *(_QWORD *)(v12 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v10, (WTF::StringImpl **)(v13 + 2008), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v10 + 24) == 2)
  {
    if ((*(_WORD *)(v10 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v10, v14);
  }
  else
  {
    *(_DWORD *)(v10 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onsuspend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2024), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onsuspend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2024), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ontimeupdate(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2048), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ontimeupdate(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2048), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ontoggle(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2056), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ontoggle(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2056), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onvolumechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2264), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onvolumechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2264), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onwaiting(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2272), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onwaiting(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2272), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onwebkitanimationend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2312), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onwebkitanimationend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2312), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onwebkitanimationiteration(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2320), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onwebkitanimationiteration(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2320), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onwebkitanimationstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2328), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onwebkitanimationstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2328), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onwebkittransitionend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2344), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onwebkittransitionend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2344), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onwheel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2512), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onwheel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2512), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onmousewheel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1264), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onmousewheel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1264), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onsearch(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1744), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onsearch(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1744), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ontouchcancel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2072), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ontouchcancel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2072), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ontouchend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2080), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ontouchend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2080), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ontouchmove(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2096), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ontouchmove(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2096), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ontouchstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2104), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ontouchstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2104), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ontouchforcechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2088), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ontouchforcechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2088), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onwebkitmouseforcechanged(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2416), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onwebkitmouseforcechanged(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2416), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onwebkitmouseforcedown(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2424), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onwebkitmouseforcedown(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2424), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onwebkitmouseforcewillbegin(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2440), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onwebkitmouseforcewillbegin(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2440), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onwebkitmouseforceup(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2432), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onwebkitmouseforceup(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2432), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onanimationstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 144), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onanimationstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 144), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onanimationiteration(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 136), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onanimationiteration(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 136), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onanimationend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 128), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onanimationend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 128), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onanimationcancel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 120), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onanimationcancel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 120), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ontransitionrun(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2136), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ontransitionrun(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2136), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ontransitionstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2144), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ontransitionstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2144), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ontransitionend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2128), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ontransitionend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2128), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ontransitioncancel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2120), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ontransitioncancel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2120), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_ongotpointercapture(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 952), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_ongotpointercapture(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 952), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onlostpointercapture(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1168), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onlostpointercapture(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1168), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onpointerdown(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1488), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onpointerdown(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1488), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onpointermove(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1528), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onpointermove(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1528), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onpointerup(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1552), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onpointerup(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1552), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onpointercancel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1480), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onpointercancel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1480), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onpointerover(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1544), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onpointerover(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1544), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onpointerout(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1536), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onpointerout(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1536), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onpointerenter(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1496), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onpointerenter(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1496), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onpointerleave(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1504), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onpointerleave(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1504), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onselectstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1808), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onselectstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1808), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_onselectionchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1800), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLElement_onselectionchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 1800), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLElement_offsetParent(WebCore *a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::Element *v4;
  WebCore::JSDOMGlobalObject *v5;
  void *v6;
  unint64_t v7;
  WebCore::JSDOMGlobalObject *v9;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Element::offsetParentForBindings(*(WebCore::Element **)(a2 + 24), &v9);
  v5 = v9;
  if (!v9)
    return 2;
  v7 = WebCore::toJS(a1, v3, v9, v4);
  if (*((_DWORD *)v5 + 6) == 2)
  {
    if ((*((_WORD *)v5 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v5, v6);
  }
  else
  {
    *((_DWORD *)v5 + 6) -= 2;
  }
  return v7;
}

unint64_t WebCore::jsHTMLElement_offsetTop(uint64_t a1, uint64_t a2)
{
  return WebCore::Element::offsetTopForBindings(*(WebCore::Element **)(a2 + 24)) | 0xFFFE000000000000;
}

unint64_t WebCore::jsHTMLElement_offsetLeft(uint64_t a1, uint64_t a2)
{
  return WebCore::Element::offsetLeftForBindings(*(WebCore::Element **)(a2 + 24)) | 0xFFFE000000000000;
}

uint64_t WebCore::jsHTMLElement_nonce(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(WebCore::Element **)(a2 + 24);
  if ((*((_QWORD *)v5 + 9) & 0xFFFFFFFFFFFFLL) != 0)
  {
    v15 = *(_QWORD *)(a2 + 24);
    v16 = a1;
    if (WebCore::Element::isNonceable(v5, (unsigned __int8 *)a2, a3, a4, a5))
      v6 = (uint64_t *)((*(_QWORD *)(v15 + 72) & 0xFFFFFFFFFFFFLL) + 216);
    else
      v6 = (uint64_t *)MEMORY[0x1E0CBF3B8];
    a1 = v16;
  }
  else
  {
    v6 = (uint64_t *)MEMORY[0x1E0CBF3B8];
  }
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *v6;
  if (!*v6)
    return *(_QWORD *)(v7 + 41968);
  v9 = *(_DWORD *)(v8 + 4);
  if (!v9)
    return *(_QWORD *)(v7 + 41968);
  if (v9 == 1)
  {
    v12 = *(unsigned __int8 **)(v8 + 8);
    if ((*(_BYTE *)(v8 + 16) & 4) != 0)
    {
      v13 = *v12;
    }
    else
    {
      v14 = *(unsigned __int16 *)v12;
      if (v14 > 0xFF)
        goto LABEL_6;
      v13 = v14;
    }
    return *(_QWORD *)(v7 + 8 * v13 + 42216);
  }
LABEL_6:
  v10 = *(_QWORD *)(v7 + 64760);
  if (!v10 || v8 != *(_QWORD *)(v10 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v10;
}

BOOL WebCore::setJSHTMLElement_nonce(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  _QWORD *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v14;
  int v15;
  WTF::StringImpl *v16;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v14);
  v9 = v15;
  v10 = v15 == 0;
  if (!v15)
  {
    v11 = v14;
    v14 = 0;
    v16 = v11;
    WebCore::Element::setNonce(v8, (const WTF::AtomString *)&v16);
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v12);
      else
        *(_DWORD *)v11 -= 2;
    }
    v9 = v15;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v16, &v14);
  return v10;
}

uint64_t WebCore::jsHTMLElement_autofocus(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
  }
  if (!(_DWORD)v5)
    return 6;
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::autofocusAttr)
      break;
    if (*(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::autofocusAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::autofocusAttr + 32))
    {
      return 7;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::IDLAttribute<WebCore::JSHTMLElement>::set<&WebCore::setJSHTMLElement_autofocusSetter,(WebCore::CastedThisErrorBehavior)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;

  v5 = WebCore::castThisValue<WebCore::JSHTMLElement>(a2);
  if (v5)
    return WebCore::setJSHTMLElement_autofocusSetter(a1, *(WTF::StringImpl ***)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

unint64_t WebCore::jsHTMLElement_tabIndex(uint64_t a1, uint64_t a2)
{
  return (*(unsigned int (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 584))(*(_QWORD *)(a2 + 24)) | 0xFFFE000000000000;
}

BOOL WebCore::IDLAttribute<WebCore::JSHTMLElement>::set<&WebCore::setJSHTMLElement_tabIndexSetter,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;

  v5 = WebCore::castThisValue<WebCore::JSHTMLElement>(a2);
  if (v5)
    return WebCore::setJSHTMLElement_tabIndexSetter(a1, *(WebCore::Element **)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::JSHTMLElement::subspaceForImpl(WebCore::JSHTMLElement *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  WTF *v11;
  void *v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4312);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v20 = *(_QWORD *)(v9 + 4312);
  if (!v20)
  {
    v14 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v14, &v22, (char *)this + 192, (char *)this + 1872, 40, 8, &v21);
    v16 = v21;
    v21 = 0;
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v22;
    v22 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 1)
        WTF::fastFree(v17, v15);
      else
        --*(_DWORD *)v17;
    }
    v20 = v14;
    v18 = *(_QWORD *)(v9 + 4312);
    *(_QWORD *)(v9 + 4312) = v14;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v19 == *(_DWORD *)(v7 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v7 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v19) = v14;
      *(_DWORD *)(v7 + 2844) = v19 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v10 = *(_QWORD *)(v3 + 4312);
  *(_QWORD *)(v3 + 4312) = v4;
  if (v10)
  {
    v11 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v11, v12);
  }
  v13 = __ldxr((unsigned __int8 *)v7);
  if (v13 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSHTMLElement::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSHTMLElement::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSHTMLElement::s_info && v4 != 0);
  }
  if (!v3)
    return 0;
  else
    return *(_QWORD *)(a2 + 24);
}

uint64_t WebCore::createJSHTMLWrapper(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t SlowCase;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  WTF *v23;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char **v36;
  unint64_t v37;
  WebCore::JSHTMLElement *v38;
  JSC::JSCell *v39;
  unint64_t v40;
  WebCore::JSDOMGlobalObject *v41;
  JSC::Structure *v42;
  JSC::JSCell *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unsigned int v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char **v55;
  unint64_t v56;
  WebCore::JSHTMLButtonElement *v57;
  JSC::JSCell *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unsigned int v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char **v70;
  unint64_t v71;
  WebCore::JSHTMLElement *v72;
  JSC::JSCell *v73;
  unint64_t v74;
  WebCore::JSDOMGlobalObject *v75;
  JSC::Structure *v76;
  JSC::JSCell *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  int v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char **v88;
  uint64_t v89;
  JSC::JSCell *v90;
  unint64_t v91;
  JSC::Structure *v92;
  JSC::JSCell *v93;
  uint64_t v94;
  unint64_t *v95;
  JSC::JSCell *v96;
  JSC::JSObject *Object;
  uint64_t *v98;
  unint64_t v99;
  uint64_t v100;
  int v101;
  JSC::JSObject *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  WTF *v109;
  void *v110;
  int v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t v115;
  WTF *v116;
  void *v117;
  int v118;
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v123;
  uint64_t v124;
  WTF *v125;
  void *v126;
  int v127;
  int v128;
  uint64_t v129;
  uint64_t v131;
  uint64_t v132;
  WTF *v133;
  void *v134;
  int v135;
  uint64_t v136;
  uint64_t v138;
  uint64_t v139;
  WTF *v140;
  void *v141;
  int v142;
  int v143;
  uint64_t v144;
  void *v145;
  WTF *v146;
  WTF *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  WTF *v152;
  WTF *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  WTF *v158;
  WTF *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  void *v164;
  WTF *v165;
  WTF *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  WTF *v171;
  WTF *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unsigned int v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  char **v181;
  unint64_t v182;
  WebCore::JSHTMLAnchorElement *v183;
  JSC::JSCell *v184;
  uint64_t v185;
  WebCore::JSHTMLAnchorElement *v186;
  _QWORD *v187;
  uint64_t v188;
  unsigned int v189;
  unint64_t v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  char **v194;
  unint64_t v195;
  WebCore::JSHTMLElement *v196;
  JSC::JSCell *v197;
  unint64_t v198;
  WebCore::JSDOMGlobalObject *v199;
  JSC::Structure *v200;
  JSC::JSCell *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  int v207;
  unint64_t v208;
  uint64_t v209;
  unsigned int v210;
  unint64_t v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t v214;
  char **v215;
  unint64_t v216;
  WebCore::JSHTMLElement *v217;
  JSC::JSCell *v218;
  unint64_t v219;
  WebCore::JSDOMGlobalObject *v220;
  JSC::Structure *v221;
  JSC::JSCell *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  unsigned int v229;
  unint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  char **v234;
  unint64_t v235;
  WebCore::JSHTMLUListElement *v236;
  JSC::JSCell *v237;
  uint64_t v238;
  WebCore::JSHTMLUListElement *v239;
  _QWORD *v240;
  int v241;
  uint64_t v242;
  unsigned int v243;
  unint64_t v244;
  unint64_t v245;
  unint64_t v246;
  uint64_t v247;
  char **v248;
  unint64_t v249;
  WebCore::JSHTMLBodyElement *v250;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  WebCore::JSHTMLBodyElement *v253;
  _QWORD *v254;
  WTF **v255;
  unint64_t v256;
  uint64_t v257;
  WTF *v258;
  unint64_t v259;
  uint64_t v260;
  WTF *v261;
  uint64_t *v262;
  uint64_t v263;
  uint64_t v265;
  uint64_t v266;
  WTF *v267;
  void *v268;
  int v269;
  unsigned __int8 *v270;
  uint64_t v272;
  int v273;
  int v274;
  int v275;
  uint64_t v276;
  uint64_t v278;
  uint64_t v279;
  WTF *v280;
  void *v281;
  int v282;
  int v283;
  uint64_t v284;
  void *v285;
  WTF *v286;
  WTF *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  void *v291;
  WTF *v292;
  WTF *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  unsigned int v297;
  unint64_t v298;
  unint64_t v299;
  unint64_t v300;
  uint64_t v301;
  char **v302;
  unint64_t v303;
  WebCore::JSHTMLElement *v304;
  JSC::JSCell *v305;
  unint64_t v306;
  WebCore::JSDOMGlobalObject *v307;
  JSC::Structure *v308;
  JSC::JSCell *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  _QWORD *v314;
  uint64_t v315;
  unsigned int v316;
  unint64_t v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  char **v321;
  unint64_t v322;
  WebCore::JSHTMLElement *v323;
  JSC::JSCell *v324;
  unint64_t v325;
  WebCore::JSDOMGlobalObject *v326;
  JSC::Structure *v327;
  JSC::JSCell *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  _QWORD *v333;
  unint64_t v334;
  WebCore::JSHTMLBRElement *v335;
  JSC::VM *v336;
  _QWORD *v337;
  uint64_t v338;
  unsigned int v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t v342;
  uint64_t v343;
  char **v344;
  unint64_t v345;
  WebCore::JSHTMLTemplateElement *v346;
  JSC::JSCell *v347;
  uint64_t v348;
  WebCore::JSHTMLTemplateElement *v349;
  _QWORD *v350;
  uint64_t v351;
  unsigned int v352;
  unint64_t v353;
  unint64_t v354;
  unint64_t v355;
  uint64_t v356;
  char **v357;
  unint64_t v358;
  WebCore::JSHTMLCanvasElement *v359;
  JSC::JSCell *v360;
  uint64_t v361;
  WebCore::JSHTMLCanvasElement *v362;
  _QWORD *v363;
  uint64_t v364;
  uint64_t v365;
  WTF **v366;
  unint64_t v367;
  uint64_t v368;
  WTF *Allocator;
  uint64_t v370;
  uint64_t *v371;
  unint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  _QWORD *v376;
  uint64_t v377;
  unsigned int v378;
  unint64_t v379;
  unint64_t v380;
  unint64_t v381;
  uint64_t v382;
  char **v383;
  unint64_t v384;
  WebCore::JSHTMLElement *v385;
  JSC::JSCell *v386;
  unint64_t v387;
  WebCore::JSDOMGlobalObject *v388;
  JSC::Structure *v389;
  JSC::JSCell *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  _QWORD *v395;
  unint64_t v396;
  uint64_t v397;
  unsigned int v398;
  unint64_t v399;
  unint64_t v400;
  unint64_t v401;
  uint64_t v402;
  char **v403;
  unint64_t v404;
  WebCore::JSHTMLElement *v405;
  JSC::JSCell *v406;
  unint64_t v407;
  WebCore::JSDOMGlobalObject *v408;
  JSC::Structure *v409;
  JSC::JSCell *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  _QWORD *v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  _QWORD *v420;
  unint64_t v421;
  uint64_t v422;
  uint64_t v423;
  unsigned int v424;
  unint64_t v425;
  unint64_t v426;
  unint64_t v427;
  uint64_t v428;
  char **v429;
  unint64_t v430;
  WebCore::JSHTMLElement *v431;
  JSC::JSCell *v432;
  unint64_t v433;
  WebCore::JSDOMGlobalObject *v434;
  JSC::Structure *v435;
  JSC::JSCell *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  _QWORD *v441;
  int v442;
  uint64_t v443;
  unsigned int v444;
  unint64_t v445;
  unint64_t v446;
  unint64_t v447;
  uint64_t v448;
  char **v449;
  unint64_t v450;
  WebCore::JSHTMLElement *v451;
  JSC::JSCell *v452;
  unint64_t v453;
  WebCore::JSDOMGlobalObject *v454;
  JSC::Structure *v455;
  JSC::JSCell *v456;
  uint64_t v457;
  WebCore::JSHTMLSelectElement *v458;
  _QWORD *v459;
  unint64_t v460;
  uint64_t v461;
  uint64_t v463;
  uint64_t v464;
  WTF *v465;
  void *v466;
  int v467;
  uint64_t v468;
  unsigned int v469;
  unint64_t v470;
  unint64_t v471;
  unint64_t v472;
  uint64_t v473;
  char **v474;
  unint64_t v475;
  WebCore::JSHTMLElement *v476;
  JSC::JSCell *v477;
  unint64_t v478;
  WebCore::JSDOMGlobalObject *v479;
  JSC::Structure *v480;
  JSC::JSCell *v481;
  uint64_t v482;
  WebCore::JSHTMLLinkElement *v483;
  _QWORD *v484;
  unint64_t v485;
  int v486;
  int v487;
  uint64_t v488;
  uint64_t v490;
  uint64_t v491;
  WTF *v492;
  void *v493;
  int v494;
  int v495;
  unint64_t v496;
  unint64_t v497;
  unint64_t v498;
  int v499;
  uint64_t v500;
  unsigned int v501;
  unint64_t v502;
  unint64_t v503;
  unint64_t v504;
  uint64_t v505;
  char **v506;
  unint64_t v507;
  WebCore::JSHTMLElement *v508;
  JSC::JSCell *v509;
  unint64_t v510;
  WebCore::JSDOMGlobalObject *v511;
  JSC::Structure *v512;
  JSC::JSCell *v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  _QWORD *v518;
  uint64_t v519;
  uint64_t v521;
  uint64_t v522;
  WTF *v523;
  void *v524;
  int v525;
  uint64_t v526;
  uint64_t v528;
  uint64_t v529;
  WTF *v530;
  void *v531;
  int v532;
  unint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  _QWORD *v537;
  uint64_t v538;
  unsigned int v539;
  unint64_t v540;
  unint64_t v541;
  unint64_t v542;
  uint64_t v543;
  char **v544;
  unint64_t v545;
  WebCore::JSHTMLElement *v546;
  JSC::JSCell *v547;
  unint64_t v548;
  WebCore::JSDOMGlobalObject *v549;
  JSC::Structure *v550;
  JSC::JSCell *v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  _QWORD *v556;
  int v557;
  unint64_t v558;
  unint64_t v559;
  unint64_t v560;
  uint64_t v561;
  uint64_t v563;
  uint64_t v564;
  WTF *v565;
  void *v566;
  int v567;
  uint64_t v568;
  uint64_t v570;
  uint64_t v571;
  WTF *v572;
  void *v573;
  int v574;
  int v575;
  uint64_t v576;
  uint64_t v578;
  uint64_t v579;
  WTF *v580;
  void *v581;
  int v582;
  int v583;
  uint64_t v584;
  unsigned int v585;
  unint64_t v586;
  unint64_t v587;
  unint64_t v588;
  uint64_t v589;
  char **v590;
  unint64_t v591;
  WebCore::JSHTMLElement *v592;
  JSC::JSCell *v593;
  unint64_t v594;
  JSC::Structure *v595;
  JSC::JSCell *v596;
  uint64_t v597;
  WebCore::JSHTMLTitleElement *v598;
  _QWORD *v599;
  int v600;
  uint64_t v601;
  void *v602;
  WTF *v603;
  WTF *v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  void *v608;
  WTF *v609;
  WTF *v610;
  uint64_t v611;
  uint64_t v612;
  int v613;
  uint64_t v614;
  unsigned int v615;
  unint64_t v616;
  unint64_t v617;
  unint64_t v618;
  uint64_t v619;
  char **v620;
  unint64_t v621;
  WebCore::JSHTMLTableCaptionElement *v622;
  JSC::JSCell *v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  _QWORD *v628;
  uint64_t v629;
  uint64_t v631;
  uint64_t v632;
  WTF *v633;
  void *v634;
  int v635;
  uint64_t *v636;
  uint64_t *v637;
  uint64_t v638;
  void *v639;
  WTF *v640;
  WTF *v641;
  uint64_t v642;
  uint64_t v643;
  int v644;
  uint64_t v645;
  void *v646;
  WTF *v647;
  WTF *v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v653;
  uint64_t v654;
  WTF *v655;
  void *v656;
  int v657;
  uint64_t v658;
  uint64_t v660;
  uint64_t v661;
  WTF *v662;
  void *v663;
  int v664;
  uint64_t v665;
  unsigned int v666;
  unint64_t v667;
  unint64_t v668;
  unint64_t v669;
  uint64_t v670;
  char **v671;
  unint64_t v672;
  WebCore::JSHTMLElement *v673;
  JSC::JSCell *v674;
  unint64_t v675;
  WebCore::JSDOMGlobalObject *v676;
  JSC::Structure *v677;
  JSC::JSCell *v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  _QWORD *v683;
  uint64_t v684;
  void *v685;
  WTF *v686;
  WTF *v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  void *v691;
  WTF *v692;
  WTF *v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  void *v697;
  WTF *v698;
  WTF *v699;
  uint64_t v700;
  uint64_t v701;
  int v702;
  int v703;
  uint64_t v704;
  uint64_t v706;
  int v707;
  WTF *v708;
  uint64_t v709;
  uint64_t v710;
  int v711;
  WTF *v712;
  uint64_t v713;
  uint64_t v714;
  WTF *v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v720;
  int v721;
  unint64_t v722;
  WTF *v723;
  uint64_t v724;
  uint64_t v725;
  unint64_t v726;
  WTF *v727;
  uint64_t v728;
  uint64_t v729;
  unint64_t v730;
  unint64_t v731;
  unint64_t v732;
  unint64_t v733;
  unint64_t v734;
  unint64_t v735;
  unint64_t v736;
  unint64_t v737;
  unint64_t v738;
  unint64_t v739;
  unint64_t v740;
  unint64_t v741;
  unint64_t v742;
  unint64_t v743;
  unint64_t v744;
  unint64_t v745;
  unint64_t v746;
  unint64_t v747;
  unint64_t v748;
  unint64_t v749;
  unint64_t v750;
  unint64_t v751;
  WTF *v752[3];
  uint64_t v753;
  WTF *v754;

  v4 = *a2;
  switch(*(_WORD *)(*(_QWORD *)(*a2 + 96) + 10))
  {
    case 1:
    case 2:
    case 3:
    case 6:
    case 7:
    case 0xA:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0x10:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1F:
    case 0x22:
    case 0x27:
    case 0x28:
    case 0x2B:
    case 0x2C:
    case 0x2D:
    case 0x38:
    case 0x39:
    case 0x3C:
    case 0x41:
    case 0x48:
    case 0x4A:
    case 0x50:
    case 0x51:
    case 0x52:
    case 0x53:
    case 0x54:
    case 0x5D:
    case 0x61:
    case 0x62:
    case 0x63:
    case 0x64:
    case 0x65:
    case 0x66:
    case 0x67:
    case 0x68:
    case 0x69:
    case 0x6C:
    case 0x6F:
    case 0x70:
    case 0x71:
    case 0x72:
    case 0x73:
    case 0x7F:
    case 0x80:
    case 0x82:
    case 0x84:
      return WebCore::createWrapper<WebCore::HTMLElement,WebCore::HTMLElement>(a1, a2, a3);
    case 4:
    case 0xF:
    case 0x1C:
    case 0x42:
    case 0xF6:
    case 0xF8:
    case 0xF9:
    case 0xFA:
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
      return WebCore::createWrapper<WebCore::HTMLUnknownElement,WebCore::HTMLElement>(a1, (JSC::VM *)a2, a3);
    case 5:
      return WebCore::createWrapper<WebCore::HTMLAreaElement,WebCore::HTMLElement>(a1, (JSC::VM *)a2, a3);
    case 8:
      return WebCore::createHTMLAttachmentElementWrapper((WebCore::JSHTMLElement **)a1, (JSC::VM *)a2, a3);
    case 9:
      return WebCore::createHTMLAudioElementWrapper(a1, (JSC::VM *)a2, a3);
    case 0xB:
      return WebCore::createWrapper<WebCore::HTMLBaseElement,WebCore::HTMLElement>(a1, (JSC::VM *)a2, a3);
    case 0x11:
    case 0x60:
      return WebCore::createWrapper<WebCore::HTMLQuoteElement,WebCore::HTMLElement>((uint64_t)a1, a2);
    case 0x12:
      *a2 = 0;
      v242 = *((_QWORD *)a1 + 412);
      if (!v242)
        goto LABEL_263;
      v243 = *(_DWORD *)(v242 - 8);
      v244 = ((unint64_t)&WebCore::JSHTMLBodyElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLBodyElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLBodyElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLBodyElement::s_info << 32)) >> 22);
      v245 = 9 * ((v244 + ~(v244 << 13)) ^ ((v244 + ~(v244 << 13)) >> 8));
      v246 = (v245 ^ (v245 >> 15)) + ~((v245 ^ (v245 >> 15)) << 27);
      v247 = v243 & ((v246 >> 31) ^ v246);
      v248 = *(char ***)(v242 + 16 * v247);
      if (v248 == &WebCore::JSHTMLBodyElement::s_info)
        goto LABEL_262;
      v283 = 1;
      while (v248)
      {
        v247 = ((_DWORD)v247 + v283) & v243;
        v248 = *(char ***)(v242 + 16 * v247);
        ++v283;
        if (v248 == &WebCore::JSHTMLBodyElement::s_info)
        {
LABEL_262:
          v249 = *(_QWORD *)(v242 + 16 * v247 + 8);
          if (v249)
            goto LABEL_264;
          break;
        }
      }
LABEL_263:
      v250 = (WebCore::JSHTMLBodyElement *)*((_QWORD *)a1 + 7);
      Prototype = (JSC::JSCell *)WebCore::JSHTMLBodyElement::createPrototype(v250, a1, a3);
      Structure = WebCore::JSHTMLBodyElement::createStructure((uint64_t *)v250, (uint64_t)a1, Prototype);
      v249 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSHTMLBodyElement::s_info);
LABEL_264:
      v253 = (WebCore::JSHTMLBodyElement *)*((_QWORD *)a1 + 7);
      v254 = (_QWORD *)WebCore::JSHTMLBodyElement::subspaceForImpl(v253, (JSC::VM *)a2);
      SlowCase = v254[3];
      if (SlowCase < v254[4])
        goto LABEL_265;
      SlowCase = v254[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v732 = *(_QWORD *)(SlowCase + 8) ^ v254[6];
        v254[4] = SlowCase + HIDWORD(v732);
        v254[5] = SlowCase + (int)v732;
LABEL_265:
        v254[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v249);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*((_BYTE *)v253 + 755))
        goto LABEL_267;
      goto LABEL_268;
    case 0x13:
      *a2 = 0;
      v334 = WebCore::getDOMStructure<WebCore::JSHTMLBRElement>(*((WebCore::JSHTMLBRElement **)a1 + 7), a1, a3);
      v335 = (WebCore::JSHTMLBRElement *)*((_QWORD *)a1 + 7);
      v337 = (_QWORD *)WebCore::JSHTMLBRElement::subspaceForImpl(v335, v336);
      SlowCase = v337[3];
      if (SlowCase < v337[4])
        goto LABEL_392;
      SlowCase = v337[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v735 = *(_QWORD *)(SlowCase + 8) ^ v337[6];
        v337[4] = SlowCase + HIDWORD(v735);
        v337[5] = SlowCase + (int)v735;
LABEL_392:
        v337[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v334);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*((_BYTE *)v335 + 755))
        __dmb(0xAu);
      goto LABEL_454;
    case 0x14:
      *a2 = 0;
      v49 = *((_QWORD *)a1 + 412);
      if (!v49)
        goto LABEL_40;
      v50 = *(_DWORD *)(v49 - 8);
      v51 = ((unint64_t)&WebCore::JSHTMLButtonElement::s_info
           + ~((_QWORD)&WebCore::JSHTMLButtonElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLButtonElement::s_info
                                                                       + ~((_QWORD)&WebCore::JSHTMLButtonElement::s_info << 32)) >> 22);
      v52 = 9 * ((v51 + ~(v51 << 13)) ^ ((v51 + ~(v51 << 13)) >> 8));
      v53 = (v52 ^ (v52 >> 15)) + ~((v52 ^ (v52 >> 15)) << 27);
      v54 = v50 & ((v53 >> 31) ^ v53);
      v55 = *(char ***)(v49 + 16 * v54);
      if (v55 == &WebCore::JSHTMLButtonElement::s_info)
        goto LABEL_39;
      v120 = 1;
      while (v55)
      {
        v54 = ((_DWORD)v54 + v120) & v50;
        v55 = *(char ***)(v49 + 16 * v54);
        ++v120;
        if (v55 == &WebCore::JSHTMLButtonElement::s_info)
        {
LABEL_39:
          v56 = *(_QWORD *)(v49 + 16 * v54 + 8);
          if (v56)
            goto LABEL_41;
          break;
        }
      }
LABEL_40:
      v57 = (WebCore::JSHTMLButtonElement *)*((_QWORD *)a1 + 7);
      v58 = (JSC::JSCell *)WebCore::JSHTMLButtonElement::createPrototype(v57, a1, a3);
      v59 = WebCore::JSHTMLButtonElement::createStructure((uint64_t *)v57, (uint64_t)a1, v58);
      v56 = WebCore::cacheDOMStructure((JSCell *)a1, v59, (uint64_t)&WebCore::JSHTMLButtonElement::s_info);
LABEL_41:
      v60 = *((_QWORD *)a1 + 7);
      v61 = *(_QWORD *)(v60 + 41456);
      v62 = *(_QWORD *)(v61 + 23536);
      v63 = *(_QWORD **)(v62 + 4224);
      if (v63)
        goto LABEL_42;
      v129 = *(_QWORD *)(v61 + 22648);
      if (__ldaxr((unsigned __int8 *)v129))
      {
        __clrex();
LABEL_123:
        MEMORY[0x19AEA534C](v129);
        goto LABEL_124;
      }
      if (__stxr(1u, (unsigned __int8 *)v129))
        goto LABEL_123;
LABEL_124:
      v131 = *(_QWORD *)(v129 + 2824);
      v753 = *(_QWORD *)(v131 + 4224);
      if (!v753)
      {
        v163 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v163, v752, v60 + 192, v60 + 1872, 40, 8, &v754);
        v165 = v754;
        v754 = 0;
        if (v165)
          (*(void (**)(WTF *))(*(_QWORD *)v165 + 8))(v165);
        v166 = v752[0];
        v752[0] = 0;
        if (v166)
        {
          if (*(_DWORD *)v166 == 1)
            WTF::fastFree(v166, v164);
          else
            --*(_DWORD *)v166;
        }
        v753 = v163;
        v167 = *(_QWORD *)(v131 + 4224);
        *(_QWORD *)(v131 + 4224) = v163;
        if (v167)
          (*(void (**)(uint64_t))(*(_QWORD *)v167 + 8))(v167);
        v168 = *(unsigned int *)(v129 + 2844);
        if ((_DWORD)v168 == *(_DWORD *)(v129 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v129 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v129 + 2832) + 8 * v168) = v163;
          *(_DWORD *)(v129 + 2844) = v168 + 1;
        }
      }
      v63 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v132 = *(_QWORD *)(v62 + 4224);
      *(_QWORD *)(v62 + 4224) = v63;
      if (v132)
      {
        v133 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v133, v134);
      }
      v135 = __ldxr((unsigned __int8 *)v129);
      if (v135 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v129))
          goto LABEL_42;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v129);
LABEL_42:
      SlowCase = v63[3];
      if (SlowCase < v63[4])
        goto LABEL_43;
      SlowCase = v63[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v497 = *(_QWORD *)(SlowCase + 8) ^ v63[6];
        v63[4] = SlowCase + HIDWORD(v497);
        v63[5] = SlowCase + (int)v497;
LABEL_43:
        v63[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v56);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v60 + 755))
        goto LABEL_54;
      goto LABEL_10;
    case 0x15:
      *a2 = 0;
      v351 = *((_QWORD *)a1 + 412);
      if (!v351)
        goto LABEL_406;
      v352 = *(_DWORD *)(v351 - 8);
      v353 = ((unint64_t)&WebCore::JSHTMLCanvasElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLCanvasElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLCanvasElement::s_info
                                                                        + ~((_QWORD)&WebCore::JSHTMLCanvasElement::s_info << 32)) >> 22);
      v354 = 9 * ((v353 + ~(v353 << 13)) ^ ((v353 + ~(v353 << 13)) >> 8));
      v355 = (v354 ^ (v354 >> 15)) + ~((v354 ^ (v354 >> 15)) << 27);
      v356 = v352 & ((v355 >> 31) ^ v355);
      v357 = *(char ***)(v351 + 16 * v356);
      if (v357 == &WebCore::JSHTMLCanvasElement::s_info)
        goto LABEL_405;
      v495 = 1;
      while (v357)
      {
        v356 = ((_DWORD)v356 + v495) & v352;
        v357 = *(char ***)(v351 + 16 * v356);
        ++v495;
        if (v357 == &WebCore::JSHTMLCanvasElement::s_info)
        {
LABEL_405:
          v358 = *(_QWORD *)(v351 + 16 * v356 + 8);
          if (v358)
            goto LABEL_407;
          break;
        }
      }
LABEL_406:
      v359 = (WebCore::JSHTMLCanvasElement *)*((_QWORD *)a1 + 7);
      v360 = (JSC::JSCell *)WebCore::JSHTMLCanvasElement::createPrototype(v359, a1, a3);
      v361 = WebCore::JSHTMLCanvasElement::createStructure((uint64_t *)v359, (uint64_t)a1, v360);
      v358 = WebCore::cacheDOMStructure((JSCell *)a1, v361, (uint64_t)&WebCore::JSHTMLCanvasElement::s_info);
LABEL_407:
      v362 = (WebCore::JSHTMLCanvasElement *)*((_QWORD *)a1 + 7);
      v363 = (_QWORD *)WebCore::JSHTMLCanvasElement::subspaceForImpl(v362, (JSC::VM *)a2);
      SlowCase = v363[3];
      if (SlowCase < v363[4])
        goto LABEL_408;
      SlowCase = v363[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v737 = *(_QWORD *)(SlowCase + 8) ^ v363[6];
        v363[4] = SlowCase + HIDWORD(v737);
        v363[5] = SlowCase + (int)v737;
LABEL_408:
        v363[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      v364 = WebCore::JSDOMObject::JSDOMObject(SlowCase, v358);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      WebCore::JSHTMLCanvasElement::finishCreation(v364, v362);
      v365 = *((_QWORD *)a1 + 415);
      if ((byte_1ECE81430 & 1) == 0)
      {
        _MergedGlobals_113 = (uint64_t)&unk_1E328E100;
        byte_1ECE81430 = 1;
      }
      if (v4)
        v366 = (WTF **)(v4 + 8);
      else
        v366 = 0;
      if (*(_DWORD *)(v365 + 48))
      {
        v636 = (uint64_t *)(v365 + 32);
        v752[0] = (WTF *)v4;
        v637 = &_MergedGlobals_113;
        goto LABEL_714;
      }
      if ((SlowCase & 8) != 0)
        v367 = (SlowCase - 112) | 1;
      else
        v367 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v367 & 1) != 0)
        v368 = v367 + 47;
      else
        v368 = *(_QWORD *)v367 + 32;
      Allocator = *(WTF **)(v368 + 16);
      if (!Allocator)
        Allocator = (WTF *)JSC::WeakSet::findAllocator();
      v370 = *(_QWORD *)Allocator;
      v371 = &_MergedGlobals_113;
      goto LABEL_501;
    case 0x16:
      *a2 = 0;
      v614 = *((_QWORD *)a1 + 412);
      if (!v614)
        goto LABEL_694;
      v615 = *(_DWORD *)(v614 - 8);
      v616 = ((unint64_t)&WebCore::JSHTMLTableCaptionElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLTableCaptionElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLTableCaptionElement::s_info
                                                                              + ~((_QWORD)&WebCore::JSHTMLTableCaptionElement::s_info << 32)) >> 22);
      v617 = 9 * ((v616 + ~(v616 << 13)) ^ ((v616 + ~(v616 << 13)) >> 8));
      v618 = (v617 ^ (v617 >> 15)) + ~((v617 ^ (v617 >> 15)) << 27);
      v619 = v615 & ((v618 >> 31) ^ v618);
      v620 = *(char ***)(v614 + 16 * v619);
      if (v620 == &WebCore::JSHTMLTableCaptionElement::s_info)
        goto LABEL_693;
      v703 = 1;
      while (v620)
      {
        v619 = ((_DWORD)v619 + v703) & v615;
        v620 = *(char ***)(v614 + 16 * v619);
        ++v703;
        if (v620 == &WebCore::JSHTMLTableCaptionElement::s_info)
        {
LABEL_693:
          v621 = *(_QWORD *)(v614 + 16 * v619 + 8);
          if (v621)
            goto LABEL_695;
          break;
        }
      }
LABEL_694:
      v622 = (WebCore::JSHTMLTableCaptionElement *)*((_QWORD *)a1 + 7);
      v623 = (JSC::JSCell *)WebCore::JSHTMLTableCaptionElement::createPrototype(v622, a1, a3);
      LODWORD(v752[0]) = 241;
      v624 = JSC::Structure::create((uint64_t *)v622, (int)a1, v623);
      v621 = WebCore::cacheDOMStructure((JSCell *)a1, v624, (uint64_t)&WebCore::JSHTMLTableCaptionElement::s_info);
LABEL_695:
      v625 = *((_QWORD *)a1 + 7);
      v626 = *(_QWORD *)(v625 + 41456);
      v627 = *(_QWORD *)(v626 + 23536);
      v628 = *(_QWORD **)(v627 + 4664);
      if (v628)
        goto LABEL_696;
      v704 = *(_QWORD *)(v626 + 22648);
      if (__ldaxr((unsigned __int8 *)v704))
      {
        __clrex();
LABEL_821:
        MEMORY[0x19AEA534C](v704);
        goto LABEL_822;
      }
      if (__stxr(1u, (unsigned __int8 *)v704))
        goto LABEL_821;
LABEL_822:
      v706 = *(_QWORD *)(v704 + 2824);
      v752[0] = *(WTF **)(v706 + 4664);
      if (!v752[0])
      {
        v753 = 40;
        std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", v625 + 192, v625 + 1872, &v753, JSC::JSCell::numberOfLowerTierCells, (uint64_t *)&v754);
        v723 = v754;
        v752[0] = v754;
        v724 = *(_QWORD *)(v706 + 4664);
        *(_QWORD *)(v706 + 4664) = v754;
        if (v724)
          (*(void (**)(uint64_t))(*(_QWORD *)v724 + 8))(v724);
        v725 = *(unsigned int *)(v704 + 2844);
        if ((_DWORD)v725 == *(_DWORD *)(v704 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v704 + 2832, (unint64_t)v752);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v704 + 2832) + 8 * v725) = v723;
          *(_DWORD *)(v704 + 2844) = v725 + 1;
        }
      }
      v628 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      v754 = (WTF *)JSC::GCClient::IsoSubspace::IsoSubspace();
      WebCore::JSHTMLTableCaptionElement::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v627, (uint64_t *)&v754);
      std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100]((uint64_t *)&v754);
      v707 = __ldxr((unsigned __int8 *)v704);
      if (v707 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v704))
          goto LABEL_696;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v704);
LABEL_696:
      SlowCase = v628[3];
      if (SlowCase < v628[4])
        goto LABEL_697;
      SlowCase = v628[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v749 = *(_QWORD *)(SlowCase + 8) ^ v628[6];
        v628[4] = SlowCase + HIDWORD(v749);
        v628[5] = SlowCase + (int)v749;
LABEL_697:
        v628[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v621);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v625 + 755))
        goto LABEL_769;
      goto LABEL_487;
    case 0x1A:
    case 0x1B:
      return WebCore::createHTMLTableColElementWrapper(a1, (WTF **)a2, a3);
    case 0x1D:
      return WebCore::createHTMLDataElementWrapper(a1, (WTF **)a2, a3);
    case 0x1E:
      return WebCore::createHTMLDataListElementWrapper((WebCore::JSHTMLElement **)a1, (JSC::VM *)a2, a3);
    case 0x20:
    case 0x40:
      return WebCore::createHTMLModElementWrapper(a1, (WTF **)a2, a3);
    case 0x21:
      return WebCore::createHTMLDetailsElementWrapper(a1, (WTF **)a2, a3);
    case 0x23:
      return WebCore::createHTMLDialogElementWrapper(a1, (WTF **)a2, a3);
    case 0x24:
      return WebCore::createHTMLDirectoryElementWrapper(a1, (WTF **)a2, a3);
    case 0x25:
      *a2 = 0;
      v30 = *((_QWORD *)a1 + 412);
      if (!v30)
        goto LABEL_31;
      v31 = *(_DWORD *)(v30 - 8);
      v32 = ((unint64_t)&WebCore::JSHTMLDivElement::s_info + ~((_QWORD)&WebCore::JSHTMLDivElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDivElement::s_info + ~((_QWORD)&WebCore::JSHTMLDivElement::s_info << 32)) >> 22);
      v33 = 9 * ((v32 + ~(v32 << 13)) ^ ((v32 + ~(v32 << 13)) >> 8));
      v34 = (v33 ^ (v33 >> 15)) + ~((v33 ^ (v33 >> 15)) << 27);
      v35 = v31 & ((v34 >> 31) ^ v34);
      v36 = *(char ***)(v30 + 16 * v35);
      if (v36 == &WebCore::JSHTMLDivElement::s_info)
        goto LABEL_30;
      v119 = 1;
      while (v36)
      {
        v35 = ((_DWORD)v35 + v119) & v31;
        v36 = *(char ***)(v30 + 16 * v35);
        ++v119;
        if (v36 == &WebCore::JSHTMLDivElement::s_info)
        {
LABEL_30:
          v37 = *(_QWORD *)(v30 + 16 * v35 + 8);
          if (v37)
            goto LABEL_32;
          break;
        }
      }
LABEL_31:
      v38 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v39 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v38, a1, a3);
      v40 = WebCore::JSHTMLDivElementPrototype::createStructure((uint64_t *)v38, (uint64_t)a1, v39);
      *(_DWORD *)(v40 + 16) |= 0x80000u;
      v43 = (JSC::JSCell *)WebCore::JSHTMLDivElementPrototype::create(v38, v40, v41, v42);
      v44 = WebCore::JSHTMLDivElement::createStructure((uint64_t *)v38, (uint64_t)a1, v43);
      v37 = WebCore::cacheDOMStructure((JSCell *)a1, v44, (uint64_t)&WebCore::JSHTMLDivElement::s_info);
LABEL_32:
      v45 = *((_QWORD *)a1 + 7);
      v46 = *(_QWORD *)(v45 + 41456);
      v47 = *(_QWORD *)(v46 + 23536);
      v48 = *(_QWORD **)(v47 + 4296);
      if (v48)
        goto LABEL_33;
      v121 = *(_QWORD *)(v46 + 22648);
      if (__ldaxr((unsigned __int8 *)v121))
      {
        __clrex();
LABEL_110:
        MEMORY[0x19AEA534C](v121);
        goto LABEL_111;
      }
      if (__stxr(1u, (unsigned __int8 *)v121))
        goto LABEL_110;
LABEL_111:
      v123 = *(_QWORD *)(v121 + 2824);
      v753 = *(_QWORD *)(v123 + 4296);
      if (!v753)
      {
        v156 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v156, v752, v45 + 192, v45 + 1872, 40, 8, &v754);
        v158 = v754;
        v754 = 0;
        if (v158)
          (*(void (**)(WTF *))(*(_QWORD *)v158 + 8))(v158);
        v159 = v752[0];
        v752[0] = 0;
        if (v159)
        {
          if (*(_DWORD *)v159 == 1)
            WTF::fastFree(v159, v157);
          else
            --*(_DWORD *)v159;
        }
        v753 = v156;
        v160 = *(_QWORD *)(v123 + 4296);
        *(_QWORD *)(v123 + 4296) = v156;
        if (v160)
          (*(void (**)(uint64_t))(*(_QWORD *)v160 + 8))(v160);
        v161 = *(unsigned int *)(v121 + 2844);
        if ((_DWORD)v161 == *(_DWORD *)(v121 + 2840))
        {
          v162 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v121 + 2832, v161 + 1, (unint64_t)&v753);
          v161 = *(unsigned int *)(v121 + 2844);
          *(_QWORD *)(*(_QWORD *)(v121 + 2832) + 8 * v161) = *v162;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v121 + 2832) + 8 * v161) = v156;
        }
        *(_DWORD *)(v121 + 2844) = v161 + 1;
      }
      v48 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v124 = *(_QWORD *)(v47 + 4296);
      *(_QWORD *)(v47 + 4296) = v48;
      if (v124)
      {
        v125 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v125, v126);
      }
      v127 = __ldxr((unsigned __int8 *)v121);
      if (v127 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v121))
          goto LABEL_33;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v121);
LABEL_33:
      SlowCase = v48[3];
      if (SlowCase < v48[4])
        goto LABEL_34;
      SlowCase = v48[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v496 = *(_QWORD *)(SlowCase + 8) ^ v48[6];
        v48[4] = SlowCase + HIDWORD(v496);
        v48[5] = SlowCase + (int)v496;
LABEL_34:
        v48[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v37);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v45 + 755))
        goto LABEL_54;
      goto LABEL_10;
    case 0x26:
      return WebCore::createHTMLDListElementWrapper(a1, (WTF **)a2, a3);
    case 0x29:
      return WebCore::createHTMLEmbedElementWrapper((WebCore::JSHTMLElement **)a1, (JSC::VM *)a2, a3);
    case 0x2A:
      *a2 = 0;
      v372 = WebCore::getDOMStructure<WebCore::JSHTMLFieldSetElement>(*((WebCore::JSHTMLFieldSetElement **)a1 + 7), a1, a3);
      v373 = *((_QWORD *)a1 + 7);
      v374 = *(_QWORD *)(v373 + 41456);
      v375 = *(_QWORD *)(v374 + 23536);
      v376 = *(_QWORD **)(v375 + 4328);
      if (v376)
        goto LABEL_424;
      v519 = *(_QWORD *)(v374 + 22648);
      if (__ldaxr((unsigned __int8 *)v519))
      {
        __clrex();
LABEL_567:
        MEMORY[0x19AEA534C](v519);
        goto LABEL_568;
      }
      if (__stxr(1u, (unsigned __int8 *)v519))
        goto LABEL_567;
LABEL_568:
      v521 = *(_QWORD *)(v519 + 2824);
      v753 = *(_QWORD *)(v521 + 4328);
      if (!v753)
      {
        v638 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v638, v752, v373 + 192, v373 + 1872, 40, 8, &v754);
        v640 = v754;
        v754 = 0;
        if (v640)
          (*(void (**)(WTF *))(*(_QWORD *)v640 + 8))(v640);
        v641 = v752[0];
        v752[0] = 0;
        if (v641)
        {
          if (*(_DWORD *)v641 == 1)
            WTF::fastFree(v641, v639);
          else
            --*(_DWORD *)v641;
        }
        v753 = v638;
        v642 = *(_QWORD *)(v521 + 4328);
        *(_QWORD *)(v521 + 4328) = v638;
        if (v642)
          (*(void (**)(uint64_t))(*(_QWORD *)v642 + 8))(v642);
        v643 = *(unsigned int *)(v519 + 2844);
        if ((_DWORD)v643 == *(_DWORD *)(v519 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v519 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v519 + 2832) + 8 * v643) = v638;
          *(_DWORD *)(v519 + 2844) = v643 + 1;
        }
      }
      v376 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v522 = *(_QWORD *)(v375 + 4328);
      *(_QWORD *)(v375 + 4328) = v376;
      if (v522)
      {
        v523 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v523, v524);
      }
      v525 = __ldxr((unsigned __int8 *)v519);
      if (v525 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v519))
          goto LABEL_424;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v519);
LABEL_424:
      SlowCase = v376[3];
      if (SlowCase < v376[4])
        goto LABEL_425;
      SlowCase = v376[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v738 = *(_QWORD *)(SlowCase + 8) ^ v376[6];
        v376[4] = SlowCase + HIDWORD(v738);
        v376[5] = SlowCase + (int)v738;
LABEL_425:
        v376[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v372);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v373 + 755))
        goto LABEL_453;
      goto LABEL_454;
    case 0x2E:
      *a2 = 0;
      v538 = *((_QWORD *)a1 + 412);
      if (!v538)
        goto LABEL_592;
      v539 = *(_DWORD *)(v538 - 8);
      v540 = ((unint64_t)&WebCore::JSHTMLFormElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLFormElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLFormElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLFormElement::s_info << 32)) >> 22);
      v541 = 9 * ((v540 + ~(v540 << 13)) ^ ((v540 + ~(v540 << 13)) >> 8));
      v542 = (v541 ^ (v541 >> 15)) + ~((v541 ^ (v541 >> 15)) << 27);
      v543 = v539 & ((v542 >> 31) ^ v542);
      v544 = *(char ***)(v538 + 16 * v543);
      if (v544 == &WebCore::JSHTMLFormElement::s_info)
        goto LABEL_591;
      v644 = 1;
      while (v544)
      {
        v543 = ((_DWORD)v543 + v644) & v539;
        v544 = *(char ***)(v538 + 16 * v543);
        ++v644;
        if (v544 == &WebCore::JSHTMLFormElement::s_info)
        {
LABEL_591:
          v545 = *(_QWORD *)(v538 + 16 * v543 + 8);
          if (v545)
            goto LABEL_593;
          break;
        }
      }
LABEL_592:
      v546 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v547 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v546, a1, a3);
      v548 = WebCore::JSHTMLFormElementPrototype::createStructure((uint64_t *)v546, (uint64_t)a1, v547);
      *(_DWORD *)(v548 + 16) |= 0x80000u;
      v551 = (JSC::JSCell *)WebCore::JSHTMLFormElementPrototype::create(v546, v548, v549, v550);
      v552 = WebCore::JSHTMLFormElement::createStructure((uint64_t *)v546, (uint64_t)a1, v551);
      v545 = WebCore::cacheDOMStructure((JSCell *)a1, v552, (uint64_t)&WebCore::JSHTMLFormElement::s_info);
LABEL_593:
      v553 = *((_QWORD *)a1 + 7);
      v554 = *(_QWORD *)(v553 + 41456);
      v555 = *(_QWORD *)(v554 + 23536);
      v556 = *(_QWORD **)(v555 + 4352);
      if (v556)
        goto LABEL_594;
      v658 = *(_QWORD *)(v554 + 22648);
      if (__ldaxr((unsigned __int8 *)v658))
      {
        __clrex();
LABEL_754:
        MEMORY[0x19AEA534C](v658);
        goto LABEL_755;
      }
      if (__stxr(1u, (unsigned __int8 *)v658))
        goto LABEL_754;
LABEL_755:
      v660 = *(_QWORD *)(v658 + 2824);
      v752[0] = *(WTF **)(v660 + 4352);
      if (!v752[0])
      {
        v753 = 40;
        std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", v553 + 192, v553 + 1872, &v753, JSC::JSCell::numberOfLowerTierCells, (uint64_t *)&v754);
        v715 = v754;
        v752[0] = v754;
        v716 = *(_QWORD *)(v660 + 4352);
        *(_QWORD *)(v660 + 4352) = v754;
        if (v716)
          (*(void (**)(uint64_t))(*(_QWORD *)v716 + 8))(v716);
        v717 = *(unsigned int *)(v658 + 2844);
        if ((_DWORD)v717 == *(_DWORD *)(v658 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v658 + 2832, (unint64_t)v752);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v658 + 2832) + 8 * v717) = v715;
          *(_DWORD *)(v658 + 2844) = v717 + 1;
        }
      }
      v556 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v661 = *(_QWORD *)(v555 + 4352);
      *(_QWORD *)(v555 + 4352) = v556;
      if (v661)
      {
        v662 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v662, v663);
      }
      v664 = __ldxr((unsigned __int8 *)v658);
      if (v664 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v658))
          goto LABEL_594;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v658);
LABEL_594:
      SlowCase = v556[3];
      if (SlowCase < v556[4])
        goto LABEL_595;
      SlowCase = v556[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v747 = *(_QWORD *)(SlowCase + 8) ^ v556[6];
        v556[4] = SlowCase + HIDWORD(v747);
        v556[5] = SlowCase + (int)v747;
LABEL_595:
        v556[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v545);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v553 + 755))
        goto LABEL_597;
      goto LABEL_268;
    case 0x2F:
      return WebCore::createHTMLFrameElementWrapper((uint64_t)a1, (WTF **)a2);
    case 0x30:
      return WebCore::createHTMLFrameSetElementWrapper((uint64_t)a1, (WTF **)a2);
    case 0x31:
    case 0x32:
    case 0x33:
    case 0x34:
      *a2 = 0;
      v752[0] = (WTF *)v4;
      v208 = WebCore::createWrapper<WebCore::HTMLHeadingElement,WebCore::HTMLHeadingElement>(a1, v752, a3);
      goto LABEL_232;
    case 0x35:
    case 0x36:
      return WebCore::createHTMLHeadingElementWrapper(a1, (WebCore::Node **)a2, a3);
    case 0x37:
      *a2 = 0;
      v397 = *((_QWORD *)a1 + 412);
      if (!v397)
        goto LABEL_442;
      v398 = *(_DWORD *)(v397 - 8);
      v399 = ((unint64_t)&WebCore::JSHTMLHeadElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLHeadElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLHeadElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLHeadElement::s_info << 32)) >> 22);
      v400 = 9 * ((v399 + ~(v399 << 13)) ^ ((v399 + ~(v399 << 13)) >> 8));
      v401 = (v400 ^ (v400 >> 15)) + ~((v400 ^ (v400 >> 15)) << 27);
      v402 = v398 & ((v401 >> 31) ^ v401);
      v403 = *(char ***)(v397 + 16 * v402);
      if (v403 == &WebCore::JSHTMLHeadElement::s_info)
        goto LABEL_441;
      v557 = 1;
      while (v403)
      {
        v402 = ((_DWORD)v402 + v557) & v398;
        v403 = *(char ***)(v397 + 16 * v402);
        ++v557;
        if (v403 == &WebCore::JSHTMLHeadElement::s_info)
        {
LABEL_441:
          v404 = *(_QWORD *)(v397 + 16 * v402 + 8);
          if (v404)
            goto LABEL_443;
          break;
        }
      }
LABEL_442:
      v405 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v406 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v405, a1, a3);
      v407 = WebCore::JSHTMLHeadElementPrototype::createStructure((uint64_t *)v405, (uint64_t)a1, v406);
      *(_DWORD *)(v407 + 16) |= 0x80000u;
      v410 = (JSC::JSCell *)WebCore::JSHTMLHeadElementPrototype::create(v405, v407, v408, v409);
      v411 = WebCore::JSHTMLHeadElement::createStructure((uint64_t *)v405, (uint64_t)a1, v410);
      v404 = WebCore::cacheDOMStructure((JSCell *)a1, v411, (uint64_t)&WebCore::JSHTMLHeadElement::s_info);
LABEL_443:
      v412 = *((_QWORD *)a1 + 7);
      v413 = *(_QWORD *)(v412 + 41456);
      v414 = *(_QWORD *)(v413 + 23536);
      v415 = *(_QWORD **)(v414 + 4384);
      if (v415)
        goto LABEL_444;
      v561 = *(_QWORD *)(v413 + 22648);
      if (__ldaxr((unsigned __int8 *)v561))
      {
        __clrex();
LABEL_610:
        MEMORY[0x19AEA534C](v561);
        goto LABEL_611;
      }
      if (__stxr(1u, (unsigned __int8 *)v561))
        goto LABEL_610;
LABEL_611:
      v563 = *(_QWORD *)(v561 + 2824);
      v753 = *(_QWORD *)(v563 + 4384);
      if (!v753)
      {
        v684 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v684, v752, v412 + 192, v412 + 1872, 40, 8, &v754);
        v686 = v754;
        v754 = 0;
        if (v686)
          (*(void (**)(WTF *))(*(_QWORD *)v686 + 8))(v686);
        v687 = v752[0];
        v752[0] = 0;
        if (v687)
        {
          if (*(_DWORD *)v687 == 1)
            WTF::fastFree(v687, v685);
          else
            --*(_DWORD *)v687;
        }
        v753 = v684;
        v688 = *(_QWORD *)(v563 + 4384);
        *(_QWORD *)(v563 + 4384) = v684;
        if (v688)
          (*(void (**)(uint64_t))(*(_QWORD *)v688 + 8))(v688);
        v689 = *(unsigned int *)(v561 + 2844);
        if ((_DWORD)v689 == *(_DWORD *)(v561 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v561 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v561 + 2832) + 8 * v689) = v684;
          *(_DWORD *)(v561 + 2844) = v689 + 1;
        }
      }
      v415 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v564 = *(_QWORD *)(v414 + 4384);
      *(_QWORD *)(v414 + 4384) = v415;
      if (v564)
      {
        v565 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v565, v566);
      }
      v567 = __ldxr((unsigned __int8 *)v561);
      if (v567 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v561))
          goto LABEL_444;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v561);
LABEL_444:
      SlowCase = v415[3];
      if (SlowCase < v415[4])
        goto LABEL_445;
      SlowCase = v415[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v740 = *(_QWORD *)(SlowCase + 8) ^ v415[6];
        v415[4] = SlowCase + HIDWORD(v740);
        v415[5] = SlowCase + (int)v740;
LABEL_445:
        v415[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v404);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v412 + 755))
        goto LABEL_597;
      goto LABEL_268;
    case 0x3A:
      return WebCore::createHTMLHRElementWrapper(a1, (WTF **)a2, a3);
    case 0x3B:
      *a2 = 0;
      v315 = *((_QWORD *)a1 + 412);
      if (!v315)
        goto LABEL_385;
      v316 = *(_DWORD *)(v315 - 8);
      v317 = ((unint64_t)&WebCore::JSHTMLHtmlElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLHtmlElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLHtmlElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLHtmlElement::s_info << 32)) >> 22);
      v318 = 9 * ((v317 + ~(v317 << 13)) ^ ((v317 + ~(v317 << 13)) >> 8));
      v319 = (v318 ^ (v318 >> 15)) + ~((v318 ^ (v318 >> 15)) << 27);
      v320 = v316 & ((v319 >> 31) ^ v319);
      v321 = *(char ***)(v315 + 16 * v320);
      if (v321 == &WebCore::JSHTMLHtmlElement::s_info)
        goto LABEL_384;
      v486 = 1;
      while (v321)
      {
        v320 = ((_DWORD)v320 + v486) & v316;
        v321 = *(char ***)(v315 + 16 * v320);
        ++v486;
        if (v321 == &WebCore::JSHTMLHtmlElement::s_info)
        {
LABEL_384:
          v322 = *(_QWORD *)(v315 + 16 * v320 + 8);
          if (v322)
            goto LABEL_386;
          break;
        }
      }
LABEL_385:
      v323 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v324 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v323, a1, a3);
      v325 = WebCore::JSHTMLHtmlElementPrototype::createStructure((uint64_t *)v323, (uint64_t)a1, v324);
      *(_DWORD *)(v325 + 16) |= 0x80000u;
      v328 = (JSC::JSCell *)WebCore::JSHTMLHtmlElementPrototype::create(v323, v325, v326, v327);
      v329 = WebCore::JSHTMLHtmlElement::createStructure((uint64_t *)v323, (uint64_t)a1, v328);
      v322 = WebCore::cacheDOMStructure((JSCell *)a1, v329, (uint64_t)&WebCore::JSHTMLHtmlElement::s_info);
LABEL_386:
      v330 = *((_QWORD *)a1 + 7);
      v331 = *(_QWORD *)(v330 + 41456);
      v332 = *(_QWORD *)(v331 + 23536);
      v333 = *(_QWORD **)(v332 + 4400);
      if (v333)
        goto LABEL_387;
      v488 = *(_QWORD *)(v331 + 22648);
      if (__ldaxr((unsigned __int8 *)v488))
      {
        __clrex();
LABEL_533:
        MEMORY[0x19AEA534C](v488);
        goto LABEL_534;
      }
      if (__stxr(1u, (unsigned __int8 *)v488))
        goto LABEL_533;
LABEL_534:
      v490 = *(_QWORD *)(v488 + 2824);
      v753 = *(_QWORD *)(v490 + 4400);
      if (!v753)
      {
        v607 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v607, v752, v330 + 192, v330 + 1872, 40, 8, &v754);
        v609 = v754;
        v754 = 0;
        if (v609)
          (*(void (**)(WTF *))(*(_QWORD *)v609 + 8))(v609);
        v610 = v752[0];
        v752[0] = 0;
        if (v610)
        {
          if (*(_DWORD *)v610 == 1)
            WTF::fastFree(v610, v608);
          else
            --*(_DWORD *)v610;
        }
        v753 = v607;
        v611 = *(_QWORD *)(v490 + 4400);
        *(_QWORD *)(v490 + 4400) = v607;
        if (v611)
          (*(void (**)(uint64_t))(*(_QWORD *)v611 + 8))(v611);
        v612 = *(unsigned int *)(v488 + 2844);
        if ((_DWORD)v612 == *(_DWORD *)(v488 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v488 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v488 + 2832) + 8 * v612) = v607;
          *(_DWORD *)(v488 + 2844) = v612 + 1;
        }
      }
      v333 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v491 = *(_QWORD *)(v332 + 4400);
      *(_QWORD *)(v332 + 4400) = v333;
      if (v491)
      {
        v492 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v492, v493);
      }
      v494 = __ldxr((unsigned __int8 *)v488);
      if (v494 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v488))
          goto LABEL_387;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v488);
LABEL_387:
      SlowCase = v333[3];
      if (SlowCase < v333[4])
        goto LABEL_388;
      SlowCase = v333[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v734 = *(_QWORD *)(SlowCase + 8) ^ v333[6];
        v333[4] = SlowCase + HIDWORD(v734);
        v333[5] = SlowCase + (int)v734;
LABEL_388:
        v333[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v322);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v330 + 755))
        goto LABEL_597;
      goto LABEL_268;
    case 0x3D:
      *a2 = 0;
      v665 = *((_QWORD *)a1 + 412);
      if (!v665)
        goto LABEL_764;
      v666 = *(_DWORD *)(v665 - 8);
      v667 = ((unint64_t)&WebCore::JSHTMLIFrameElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLIFrameElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLIFrameElement::s_info
                                                                        + ~((_QWORD)&WebCore::JSHTMLIFrameElement::s_info << 32)) >> 22);
      v668 = 9 * ((v667 + ~(v667 << 13)) ^ ((v667 + ~(v667 << 13)) >> 8));
      v669 = (v668 ^ (v668 >> 15)) + ~((v668 ^ (v668 >> 15)) << 27);
      v670 = v666 & ((v669 >> 31) ^ v669);
      v671 = *(char ***)(v665 + 16 * v670);
      if (v671 == &WebCore::JSHTMLIFrameElement::s_info)
        goto LABEL_763;
      v711 = 1;
      while (v671)
      {
        v670 = ((_DWORD)v670 + v711) & v666;
        v671 = *(char ***)(v665 + 16 * v670);
        ++v711;
        if (v671 == &WebCore::JSHTMLIFrameElement::s_info)
        {
LABEL_763:
          v672 = *(_QWORD *)(v665 + 16 * v670 + 8);
          if (v672)
            goto LABEL_765;
          break;
        }
      }
LABEL_764:
      v673 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v674 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v673, a1, a3);
      v675 = WebCore::JSHTMLIFrameElementPrototype::createStructure((uint64_t *)v673, (uint64_t)a1, v674);
      *(_DWORD *)(v675 + 16) |= 0x80000u;
      v678 = (JSC::JSCell *)WebCore::JSHTMLIFrameElementPrototype::create(v673, v675, v676, v677);
      v679 = WebCore::JSHTMLIFrameElement::createStructure((uint64_t *)v673, (uint64_t)a1, v678);
      v672 = WebCore::cacheDOMStructure((JSCell *)a1, v679, (uint64_t)&WebCore::JSHTMLIFrameElement::s_info);
LABEL_765:
      v680 = *((_QWORD *)a1 + 7);
      v681 = *(_QWORD *)(v680 + 41456);
      v682 = *(_QWORD *)(v681 + 23536);
      v683 = *(_QWORD **)(v682 + 4408);
      if (v683)
        goto LABEL_766;
      v718 = *(_QWORD *)(v681 + 22648);
      if (__ldaxr((unsigned __int8 *)v718))
      {
        __clrex();
LABEL_850:
        MEMORY[0x19AEA534C](v718);
        goto LABEL_851;
      }
      if (__stxr(1u, (unsigned __int8 *)v718))
        goto LABEL_850;
LABEL_851:
      v720 = *(_QWORD *)(v718 + 2824);
      v752[0] = *(WTF **)(v720 + 4408);
      if (!v752[0])
      {
        v753 = 40;
        std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", v680 + 192, v680 + 1872, &v753, JSC::JSCell::numberOfLowerTierCells, (uint64_t *)&v754);
        v727 = v754;
        v752[0] = v754;
        v728 = *(_QWORD *)(v720 + 4408);
        *(_QWORD *)(v720 + 4408) = v754;
        if (v728)
          (*(void (**)(uint64_t))(*(_QWORD *)v728 + 8))(v728);
        v729 = *(unsigned int *)(v718 + 2844);
        if ((_DWORD)v729 == *(_DWORD *)(v718 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v718 + 2832, (unint64_t)v752);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v718 + 2832) + 8 * v729) = v727;
          *(_DWORD *)(v718 + 2844) = v729 + 1;
        }
      }
      v683 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      v754 = (WTF *)JSC::GCClient::IsoSubspace::IsoSubspace();
      WebCore::JSHTMLIFrameElement::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v682, (uint64_t *)&v754);
      std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100]((uint64_t *)&v754);
      v721 = __ldxr((unsigned __int8 *)v718);
      if (v721 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v718))
          goto LABEL_766;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v718);
LABEL_766:
      SlowCase = v683[3];
      if (SlowCase < v683[4])
        goto LABEL_767;
      SlowCase = v683[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v750 = *(_QWORD *)(SlowCase + 8) ^ v683[6];
        v683[4] = SlowCase + HIDWORD(v750);
        v683[5] = SlowCase + (int)v750;
LABEL_767:
        v683[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v672);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v680 + 755))
        goto LABEL_769;
      goto LABEL_487;
    case 0x3E:
      *a2 = 0;
      v752[0] = (WTF *)v4;
      v208 = WebCore::createWrapper<WebCore::HTMLImageElement,WebCore::HTMLImageElement>(a1, (JSC::VM *)v752, a3);
      goto LABEL_232;
    case 0x3F:
      *a2 = 0;
      v5 = *((_QWORD *)a1 + 7);
      v6 = *((_QWORD *)a1 + 412);
      if (!v6)
        goto LABEL_61;
      v7 = *(_DWORD *)(v6 - 8);
      v8 = ((unint64_t)&WebCore::JSHTMLInputElement::s_info
          + ~((_QWORD)&WebCore::JSHTMLInputElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLInputElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLInputElement::s_info << 32)) >> 22);
      v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
      v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
      v11 = v7 & ((v10 >> 31) ^ v10);
      v12 = *(char ***)(v6 + 16 * v11);
      if (v12 == &WebCore::JSHTMLInputElement::s_info)
        goto LABEL_4;
      v83 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v83) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v83;
        if (v12 == &WebCore::JSHTMLInputElement::s_info)
        {
LABEL_4:
          v13 = *(_QWORD *)(v6 + 16 * v11 + 8);
          if (v13)
            goto LABEL_5;
          break;
        }
      }
      v84 = ((unint64_t)&WebCore::JSHTMLElement::s_info + ~((_QWORD)&WebCore::JSHTMLElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLElement::s_info + ~((_QWORD)&WebCore::JSHTMLElement::s_info << 32)) >> 22);
      v85 = 9 * ((v84 + ~(v84 << 13)) ^ ((v84 + ~(v84 << 13)) >> 8));
      v86 = (v85 ^ (v85 >> 15)) + ~((v85 ^ (v85 >> 15)) << 27);
      v87 = v7 & ((v86 >> 31) ^ v86);
      v88 = *(char ***)(v6 + 16 * v87);
      if (v88 == &WebCore::JSHTMLElement::s_info)
      {
LABEL_60:
        v89 = *(_QWORD *)(v6 + 16 * v87 + 8);
        if (v89)
          goto LABEL_62;
      }
      else
      {
        v143 = 1;
        while (v88)
        {
          v87 = ((_DWORD)v87 + v143) & v7;
          v88 = *(char ***)(v6 + 16 * v87);
          ++v143;
          if (v88 == &WebCore::JSHTMLElement::s_info)
            goto LABEL_60;
        }
      }
LABEL_61:
      v90 = (JSC::JSCell *)WebCore::JSElement::prototype(*((WebCore::JSElement **)a1 + 7), a1, a3);
      v91 = WebCore::JSHTMLElementPrototype::createStructure((uint64_t *)v5, (uint64_t)a1, v90);
      *(_DWORD *)(v91 + 16) |= 0x80000u;
      v93 = (JSC::JSCell *)WebCore::JSHTMLElementPrototype::create((WebCore::JSHTMLElementPrototype *)v5, a1, v91, v92);
      v94 = WebCore::JSHTMLElement::createStructure((uint64_t *)v5, (uint64_t)a1, v93);
      v89 = WebCore::cacheDOMStructure((JSCell *)a1, v94, (uint64_t)&WebCore::JSHTMLElement::s_info);
LABEL_62:
      v95 = (unint64_t *)(v5 + 40136);
      v96 = *(JSC::JSCell **)(v89 + 48);
      LODWORD(v752[0]) = 23;
      if (((unint64_t)v96 & 0xFFFE000000000002) == 0)
      {
        Object = (JSC::JSObject *)JSC::JSCell::getObject(v96);
        if (Object)
          JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v5);
      }
      v98 = (uint64_t *)(v5 + 38904);
      v99 = *v95;
      if (*v95 < *(_QWORD *)(v5 + 40144))
        goto LABEL_66;
      v99 = *(_QWORD *)(v5 + 40152);
      if ((v99 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v99 = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v558 = *(_QWORD *)(v99 + 8) ^ *(_QWORD *)(v5 + 40160);
        *(_QWORD *)(v5 + 40144) = v99 + HIDWORD(v558);
        *(_QWORD *)(v5 + 40152) = v99 + (int)v558;
LABEL_66:
        *v95 = v99 + 128;
      }
      *(_DWORD *)v99 = 0;
      MEMORY[0x19AEA4278](v99, v5, a1, v96, v752, &WebCore::JSHTMLInputElementPrototype::s_info, 0, 0);
      if (*(_BYTE *)(v5 + 755))
        __dmb(0xAu);
      *(_DWORD *)(v99 + 16) |= 0x80000u;
      v100 = *v98;
      if ((unint64_t)*v98 < *(_QWORD *)(v5 + 38912))
        goto LABEL_70;
      v100 = *(_QWORD *)(v5 + 38920);
      if ((v100 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v100 = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v559 = *(_QWORD *)(v100 + 8) ^ *(_QWORD *)(v5 + 38928);
        *(_QWORD *)(v5 + 38912) = v100 + HIDWORD(v559);
        *(_QWORD *)(v5 + 38920) = v100 + (int)v559;
LABEL_70:
        *v98 = v100 + 16;
      }
      *(_DWORD *)v100 = 0;
      v101 = *(_DWORD *)(v99 + 8);
      *(_DWORD *)v100 = v99 >> 4;
      *(_DWORD *)(v100 + 4) = v101;
      v751 = v99;
      *(_QWORD *)(v100 + 8) = 0;
      WebCore::JSHTMLInputElementPrototype::finishCreation((uint64_t *)&v751, (WebCore::JSHTMLInputElementPrototype *)v100, (JSC::VM *)v5);
      LODWORD(v752[0]) = 241;
      if ((v100 & 0xFFFE000000000002) == 0)
      {
        v102 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v100);
        if (v102)
          JSC::JSObject::didBecomePrototype(v102, (JSC::VM *)v5);
      }
      v103 = *v95;
      if (*v95 < *(_QWORD *)(v5 + 40144))
        goto LABEL_75;
      v103 = *(_QWORD *)(v5 + 40152);
      if ((v103 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v103 = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v560 = *(_QWORD *)(v103 + 8) ^ *(_QWORD *)(v5 + 40160);
        *(_QWORD *)(v5 + 40144) = v103 + HIDWORD(v560);
        *(_QWORD *)(v5 + 40152) = v103 + (int)v560;
LABEL_75:
        *v95 = v103 + 128;
      }
      *(_DWORD *)v103 = 0;
      MEMORY[0x19AEA4278](v103, v5, a1, v100, v752, &WebCore::JSHTMLInputElement::s_info, 0, 0);
      if (*(_BYTE *)(v5 + 755))
        __dmb(0xAu);
      v104 = *((_QWORD *)a1 + 7);
      if (!*(_BYTE *)(v104 + 755))
      {
        v753 = v103;
        v754 = (WTF *)&WebCore::JSHTMLInputElement::s_info;
        if (*(_DWORD *)(v104 + 760) >= *((unsigned __int8 *)a1 + 7))
          JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v104 + 192), (const JSCell *)a1);
        WTF::HashMap<JSC::ClassInfo const*,JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>,WTF::DefaultHash<JSC::ClassInfo const*>,WTF::HashTraits<JSC::ClassInfo const*>,WTF::HashTraits<JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>>,WTF::HashTableTraits>::inlineSet<JSC::ClassInfo const* const&,JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>>((uint64_t *)a1 + 412, (uint64_t *)&v754, &v753, (uint64_t)v752);
        v13 = *((_QWORD *)v752[0] + 1);
        goto LABEL_5;
      }
      v270 = (unsigned __int8 *)a1 + 3329;
      if (__ldaxr((unsigned __int8 *)a1 + 3329))
      {
        __clrex();
LABEL_306:
        MEMORY[0x19AEA534C]((char *)a1 + 3329);
        goto LABEL_307;
      }
      if (__stxr(1u, v270))
        goto LABEL_306;
LABEL_307:
      v753 = v103;
      v754 = (WTF *)&WebCore::JSHTMLInputElement::s_info;
      v272 = *((_QWORD *)a1 + 7);
      if (*(_DWORD *)(v272 + 760) >= *((unsigned __int8 *)a1 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v272 + 192), (const JSCell *)a1);
      WTF::HashMap<JSC::ClassInfo const*,JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>,WTF::DefaultHash<JSC::ClassInfo const*>,WTF::HashTraits<JSC::ClassInfo const*>,WTF::HashTraits<JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>>,WTF::HashTableTraits>::inlineSet<JSC::ClassInfo const* const&,JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>>((uint64_t *)a1 + 412, (uint64_t *)&v754, &v753, (uint64_t)v752);
      v13 = *((_QWORD *)v752[0] + 1);
      v273 = __ldxr(v270);
      if (v273 == 1)
      {
        if (!__stlxr(0, v270))
          goto LABEL_5;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((JSC::VM *)((char *)a1 + 3329));
LABEL_5:
      v14 = *((_QWORD *)a1 + 7);
      v15 = *(_QWORD *)(v14 + 41456);
      v16 = *(_QWORD *)(v15 + 23536);
      v17 = *(_QWORD **)(v16 + 4424);
      if (v17)
        goto LABEL_6;
      v105 = *(_QWORD *)(v15 + 22648);
      if (__ldaxr((unsigned __int8 *)v105))
      {
        __clrex();
LABEL_84:
        MEMORY[0x19AEA534C](v105);
        goto LABEL_85;
      }
      if (__stxr(1u, (unsigned __int8 *)v105))
        goto LABEL_84;
LABEL_85:
      v107 = *(_QWORD *)(v105 + 2824);
      v753 = *(_QWORD *)(v107 + 4424);
      if (!v753)
      {
        v144 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v144, v752, v14 + 192, v14 + 1872, 48, 8, &v754);
        v146 = v754;
        v754 = 0;
        if (v146)
          (*(void (**)(WTF *))(*(_QWORD *)v146 + 8))(v146);
        v147 = v752[0];
        v752[0] = 0;
        if (v147)
        {
          if (*(_DWORD *)v147 == 1)
            WTF::fastFree(v147, v145);
          else
            --*(_DWORD *)v147;
        }
        v753 = v144;
        v148 = *(_QWORD *)(v107 + 4424);
        *(_QWORD *)(v107 + 4424) = v144;
        if (v148)
          (*(void (**)(uint64_t))(*(_QWORD *)v148 + 8))(v148);
        v149 = *(unsigned int *)(v105 + 2844);
        if ((_DWORD)v149 == *(_DWORD *)(v105 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v105 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v105 + 2832) + 8 * v149) = v144;
          *(_DWORD *)(v105 + 2844) = v149 + 1;
        }
      }
      v17 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v108 = *(_QWORD *)(v16 + 4424);
      *(_QWORD *)(v16 + 4424) = v17;
      if (v108)
      {
        v109 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v109, v110);
      }
      v111 = __ldxr((unsigned __int8 *)v105);
      if (v111 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v105))
          goto LABEL_6;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v105);
LABEL_6:
      SlowCase = v17[3];
      if (SlowCase < v17[4])
        goto LABEL_7;
      SlowCase = v17[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v396 = *(_QWORD *)(SlowCase + 8) ^ v17[6];
        v17[4] = SlowCase + HIDWORD(v396);
        v17[5] = SlowCase + (int)v396;
LABEL_7:
        v17[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
      *(_QWORD *)(SlowCase + 32) = 0;
      *(_QWORD *)(SlowCase + 40) = 0;
      *(_QWORD *)(SlowCase + 24) = v4;
      if (*(_BYTE *)(v14 + 755))
        __dmb(0xAu);
      goto LABEL_10;
    case 0x43:
      *a2 = 0;
      v64 = *((_QWORD *)a1 + 412);
      if (!v64)
        goto LABEL_49;
      v65 = *(_DWORD *)(v64 - 8);
      v66 = ((unint64_t)&WebCore::JSHTMLLabelElement::s_info
           + ~((_QWORD)&WebCore::JSHTMLLabelElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLLabelElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLLabelElement::s_info << 32)) >> 22);
      v67 = 9 * ((v66 + ~(v66 << 13)) ^ ((v66 + ~(v66 << 13)) >> 8));
      v68 = (v67 ^ (v67 >> 15)) + ~((v67 ^ (v67 >> 15)) << 27);
      v69 = v65 & ((v68 >> 31) ^ v68);
      v70 = *(char ***)(v64 + 16 * v69);
      if (v70 == &WebCore::JSHTMLLabelElement::s_info)
        goto LABEL_48;
      v128 = 1;
      while (v70)
      {
        v69 = ((_DWORD)v69 + v128) & v65;
        v70 = *(char ***)(v64 + 16 * v69);
        ++v128;
        if (v70 == &WebCore::JSHTMLLabelElement::s_info)
        {
LABEL_48:
          v71 = *(_QWORD *)(v64 + 16 * v69 + 8);
          if (v71)
            goto LABEL_50;
          break;
        }
      }
LABEL_49:
      v72 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v73 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v72, a1, a3);
      v74 = WebCore::JSHTMLLabelElementPrototype::createStructure((uint64_t *)v72, (uint64_t)a1, v73);
      *(_DWORD *)(v74 + 16) |= 0x80000u;
      v77 = (JSC::JSCell *)WebCore::JSHTMLLabelElementPrototype::create(v72, v74, v75, v76);
      v78 = WebCore::JSHTMLLabelElement::createStructure((uint64_t *)v72, (uint64_t)a1, v77);
      v71 = WebCore::cacheDOMStructure((JSCell *)a1, v78, (uint64_t)&WebCore::JSHTMLLabelElement::s_info);
LABEL_50:
      v79 = *((_QWORD *)a1 + 7);
      v80 = *(_QWORD *)(v79 + 41456);
      v81 = *(_QWORD *)(v80 + 23536);
      v82 = *(_QWORD **)(v81 + 4440);
      if (v82)
        goto LABEL_51;
      v136 = *(_QWORD *)(v80 + 22648);
      if (__ldaxr((unsigned __int8 *)v136))
      {
        __clrex();
LABEL_132:
        MEMORY[0x19AEA534C](v136);
        goto LABEL_133;
      }
      if (__stxr(1u, (unsigned __int8 *)v136))
        goto LABEL_132;
LABEL_133:
      v138 = *(_QWORD *)(v136 + 2824);
      v753 = *(_QWORD *)(v138 + 4440);
      if (!v753)
      {
        v169 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v169, v752, v79 + 192, v79 + 1872, 40, 8, &v754);
        v171 = v754;
        v754 = 0;
        if (v171)
          (*(void (**)(WTF *))(*(_QWORD *)v171 + 8))(v171);
        v172 = v752[0];
        v752[0] = 0;
        if (v172)
        {
          if (*(_DWORD *)v172 == 1)
            WTF::fastFree(v172, v170);
          else
            --*(_DWORD *)v172;
        }
        v753 = v169;
        v173 = *(_QWORD *)(v138 + 4440);
        *(_QWORD *)(v138 + 4440) = v169;
        if (v173)
          (*(void (**)(uint64_t))(*(_QWORD *)v173 + 8))(v173);
        v174 = *(unsigned int *)(v136 + 2844);
        if ((_DWORD)v174 == *(_DWORD *)(v136 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v136 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v136 + 2832) + 8 * v174) = v169;
          *(_DWORD *)(v136 + 2844) = v174 + 1;
        }
      }
      v82 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v139 = *(_QWORD *)(v81 + 4440);
      *(_QWORD *)(v81 + 4440) = v82;
      if (v139)
      {
        v140 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v140, v141);
      }
      v142 = __ldxr((unsigned __int8 *)v136);
      if (v142 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v136))
          goto LABEL_51;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v136);
LABEL_51:
      SlowCase = v82[3];
      if (SlowCase < v82[4])
        goto LABEL_52;
      SlowCase = v82[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v498 = *(_QWORD *)(SlowCase + 8) ^ v82[6];
        v82[4] = SlowCase + HIDWORD(v498);
        v82[5] = SlowCase + (int)v498;
LABEL_52:
        v82[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v71);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v79 + 755))
        goto LABEL_54;
      goto LABEL_10;
    case 0x44:
      return WebCore::createHTMLLegendElementWrapper(a1, (WTF **)a2, a3);
    case 0x45:
      *a2 = 0;
      v25 = WebCore::getDOMStructure<WebCore::JSHTMLLIElement>(*((WebCore::JSElement **)a1 + 7), a1, a3);
      v26 = *((_QWORD *)a1 + 7);
      v27 = *(_QWORD *)(v26 + 41456);
      v28 = *(_QWORD *)(v27 + 23536);
      v29 = *(_QWORD **)(v28 + 4432);
      if (v29)
        goto LABEL_24;
      v112 = *(_QWORD *)(v27 + 22648);
      if (__ldaxr((unsigned __int8 *)v112))
      {
        __clrex();
LABEL_93:
        MEMORY[0x19AEA534C](v112);
        goto LABEL_94;
      }
      if (__stxr(1u, (unsigned __int8 *)v112))
        goto LABEL_93;
LABEL_94:
      v114 = *(_QWORD *)(v112 + 2824);
      v753 = *(_QWORD *)(v114 + 4432);
      if (!v753)
      {
        v150 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v150, v752, v26 + 192, v26 + 1872, 40, 8, &v754);
        v152 = v754;
        v754 = 0;
        if (v152)
          (*(void (**)(WTF *))(*(_QWORD *)v152 + 8))(v152);
        v153 = v752[0];
        v752[0] = 0;
        if (v153)
        {
          if (*(_DWORD *)v153 == 1)
            WTF::fastFree(v153, v151);
          else
            --*(_DWORD *)v153;
        }
        v753 = v150;
        v154 = *(_QWORD *)(v114 + 4432);
        *(_QWORD *)(v114 + 4432) = v150;
        if (v154)
          (*(void (**)(uint64_t))(*(_QWORD *)v154 + 8))(v154);
        v155 = *(unsigned int *)(v112 + 2844);
        if ((_DWORD)v155 == *(_DWORD *)(v112 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v112 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v112 + 2832) + 8 * v155) = v150;
          *(_DWORD *)(v112 + 2844) = v155 + 1;
        }
      }
      v29 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v115 = *(_QWORD *)(v28 + 4432);
      *(_QWORD *)(v28 + 4432) = v29;
      if (v115)
      {
        v116 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v116, v117);
      }
      v118 = __ldxr((unsigned __int8 *)v112);
      if (v118 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v112))
          goto LABEL_24;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v112);
LABEL_24:
      SlowCase = v29[3];
      if (SlowCase < v29[4])
        goto LABEL_25;
      SlowCase = v29[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v485 = *(_QWORD *)(SlowCase + 8) ^ v29[6];
        v29[4] = SlowCase + HIDWORD(v485);
        v29[5] = SlowCase + (int)v485;
LABEL_25:
        v29[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v25);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v26 + 755))
LABEL_54:
        __dmb(0xAu);
LABEL_10:
      v19 = *((_QWORD *)a1 + 415);
      {
        WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
      }
      if (*(_DWORD *)(v19 + 48))
        goto LABEL_283;
      if ((SlowCase & 8) != 0)
        v20 = (SlowCase - 112) | 1;
      else
        v20 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v20 & 1) != 0)
        v21 = v20 + 47;
      else
        v21 = *(_QWORD *)v20 + 32;
      v22 = *(_QWORD **)(v21 + 16);
      if (!v22)
        v22 = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v21 + 16) = *v22;
      *v22 = SlowCase;
      v22[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
      v22[2] = v19;
      goto LABEL_21;
    case 0x46:
      *a2 = 0;
      v468 = *((_QWORD *)a1 + 412);
      if (!v468)
        goto LABEL_515;
      v469 = *(_DWORD *)(v468 - 8);
      v470 = ((unint64_t)&WebCore::JSHTMLLinkElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLLinkElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLLinkElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLLinkElement::s_info << 32)) >> 22);
      v471 = 9 * ((v470 + ~(v470 << 13)) ^ ((v470 + ~(v470 << 13)) >> 8));
      v472 = (v471 ^ (v471 >> 15)) + ~((v471 ^ (v471 >> 15)) << 27);
      v473 = v469 & ((v472 >> 31) ^ v472);
      v474 = *(char ***)(v468 + 16 * v473);
      if (v474 == &WebCore::JSHTMLLinkElement::s_info)
        goto LABEL_514;
      v600 = 1;
      while (v474)
      {
        v473 = ((_DWORD)v473 + v600) & v469;
        v474 = *(char ***)(v468 + 16 * v473);
        ++v600;
        if (v474 == &WebCore::JSHTMLLinkElement::s_info)
        {
LABEL_514:
          v475 = *(_QWORD *)(v468 + 16 * v473 + 8);
          if (v475)
            goto LABEL_516;
          break;
        }
      }
LABEL_515:
      v476 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v477 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v476, a1, a3);
      v478 = WebCore::JSHTMLLinkElementPrototype::createStructure((uint64_t *)v476, (uint64_t)a1, v477);
      *(_DWORD *)(v478 + 16) |= 0x80000u;
      v481 = (JSC::JSCell *)WebCore::JSHTMLLinkElementPrototype::create(v476, v478, v479, v480);
      v482 = WebCore::JSHTMLLinkElement::createStructure((uint64_t *)v476, (uint64_t)a1, v481);
      v475 = WebCore::cacheDOMStructure((JSCell *)a1, v482, (uint64_t)&WebCore::JSHTMLLinkElement::s_info);
LABEL_516:
      v483 = (WebCore::JSHTMLLinkElement *)*((_QWORD *)a1 + 7);
      v484 = (_QWORD *)WebCore::JSHTMLLinkElement::subspaceForImpl(v483, (JSC::VM *)a2);
      SlowCase = v484[3];
      if (SlowCase < v484[4])
        goto LABEL_517;
      SlowCase = v484[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v744 = *(_QWORD *)(SlowCase + 8) ^ v484[6];
        v484[4] = SlowCase + HIDWORD(v744);
        v484[5] = SlowCase + (int)v744;
LABEL_517:
        v484[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v475);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*((_BYTE *)v483 + 755))
        goto LABEL_267;
      goto LABEL_268;
    case 0x47:
    case 0x5E:
    case 0x85:
      return WebCore::createHTMLPreElementWrapper(a1, (WTF **)a2, a3);
    case 0x49:
      return WebCore::createHTMLMapElementWrapper(a1, (WTF **)a2, a3);
    case 0x4B:
      return WebCore::createHTMLMarqueeElementWrapper((uint64_t)a1, (WTF **)a2);
    case 0x4C:
      return WebCore::createHTMLMenuElementWrapper(a1, (WTF **)a2, a3);
    case 0x4D:
      *a2 = 0;
      v377 = *((_QWORD *)a1 + 412);
      if (!v377)
        goto LABEL_431;
      v378 = *(_DWORD *)(v377 - 8);
      v379 = ((unint64_t)&WebCore::JSHTMLMetaElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLMetaElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLMetaElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLMetaElement::s_info << 32)) >> 22);
      v380 = 9 * ((v379 + ~(v379 << 13)) ^ ((v379 + ~(v379 << 13)) >> 8));
      v381 = (v380 ^ (v380 >> 15)) + ~((v380 ^ (v380 >> 15)) << 27);
      v382 = v378 & ((v381 >> 31) ^ v381);
      v383 = *(char ***)(v377 + 16 * v382);
      if (v383 == &WebCore::JSHTMLMetaElement::s_info)
        goto LABEL_430;
      v499 = 1;
      while (v383)
      {
        v382 = ((_DWORD)v382 + v499) & v378;
        v383 = *(char ***)(v377 + 16 * v382);
        ++v499;
        if (v383 == &WebCore::JSHTMLMetaElement::s_info)
        {
LABEL_430:
          v384 = *(_QWORD *)(v377 + 16 * v382 + 8);
          if (v384)
            goto LABEL_432;
          break;
        }
      }
LABEL_431:
      v385 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v386 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v385, a1, a3);
      v387 = WebCore::JSHTMLMetaElementPrototype::createStructure((uint64_t *)v385, (uint64_t)a1, v386);
      *(_DWORD *)(v387 + 16) |= 0x80000u;
      v390 = (JSC::JSCell *)WebCore::JSHTMLMetaElementPrototype::create(v385, v387, v388, v389);
      v391 = WebCore::JSHTMLMetaElement::createStructure((uint64_t *)v385, (uint64_t)a1, v390);
      v384 = WebCore::cacheDOMStructure((JSCell *)a1, v391, (uint64_t)&WebCore::JSHTMLMetaElement::s_info);
LABEL_432:
      v392 = *((_QWORD *)a1 + 7);
      v393 = *(_QWORD *)(v392 + 41456);
      v394 = *(_QWORD *)(v393 + 23536);
      v395 = *(_QWORD **)(v394 + 4496);
      if (v395)
        goto LABEL_433;
      v526 = *(_QWORD *)(v393 + 22648);
      if (__ldaxr((unsigned __int8 *)v526))
      {
        __clrex();
LABEL_576:
        MEMORY[0x19AEA534C](v526);
        goto LABEL_577;
      }
      if (__stxr(1u, (unsigned __int8 *)v526))
        goto LABEL_576;
LABEL_577:
      v528 = *(_QWORD *)(v526 + 2824);
      v753 = *(_QWORD *)(v528 + 4496);
      if (!v753)
      {
        v645 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v645, v752, v392 + 192, v392 + 1872, 40, 8, &v754);
        v647 = v754;
        v754 = 0;
        if (v647)
          (*(void (**)(WTF *))(*(_QWORD *)v647 + 8))(v647);
        v648 = v752[0];
        v752[0] = 0;
        if (v648)
        {
          if (*(_DWORD *)v648 == 1)
            WTF::fastFree(v648, v646);
          else
            --*(_DWORD *)v648;
        }
        v753 = v645;
        v649 = *(_QWORD *)(v528 + 4496);
        *(_QWORD *)(v528 + 4496) = v645;
        if (v649)
          (*(void (**)(uint64_t))(*(_QWORD *)v649 + 8))(v649);
        v650 = *(unsigned int *)(v526 + 2844);
        if ((_DWORD)v650 == *(_DWORD *)(v526 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v526 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v526 + 2832) + 8 * v650) = v645;
          *(_DWORD *)(v526 + 2844) = v650 + 1;
        }
      }
      v395 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v529 = *(_QWORD *)(v394 + 4496);
      *(_QWORD *)(v394 + 4496) = v395;
      if (v529)
      {
        v530 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v530, v531);
      }
      v532 = __ldxr((unsigned __int8 *)v526);
      if (v532 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v526))
          goto LABEL_433;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v526);
LABEL_433:
      SlowCase = v395[3];
      if (SlowCase < v395[4])
        goto LABEL_434;
      SlowCase = v395[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v739 = *(_QWORD *)(SlowCase + 8) ^ v395[6];
        v395[4] = SlowCase + HIDWORD(v739);
        v395[5] = SlowCase + (int)v739;
LABEL_434:
        v395[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v384);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v392 + 755))
        goto LABEL_597;
      goto LABEL_268;
    case 0x4E:
      return WebCore::createHTMLMeterElementWrapper(a1, (WTF **)a2, a3);
    case 0x4F:
      return WebCore::createHTMLModelElementWrapper((WebCore::JSHTMLElement **)a1, (JSC::VM *)a2, a3);
    case 0x55:
      return WebCore::createHTMLObjectElementWrapper(a1, (WTF **)a2, a3);
    case 0x56:
      return WebCore::createHTMLOListElementWrapper(a1, (WTF **)a2, a3);
    case 0x57:
      return WebCore::createHTMLOptGroupElementWrapper(a1, (WTF **)a2, a3);
    case 0x58:
      *a2 = 0;
      v752[0] = (WTF *)v4;
      v208 = WebCore::createWrapper<WebCore::HTMLOptionElement,WebCore::HTMLOptionElement>(a1, v752, a3);
      goto LABEL_232;
    case 0x59:
      return WebCore::createHTMLOutputElementWrapper(a1, (WebCore::Node **)a2, a3);
    case 0x5A:
      *a2 = 0;
      v188 = *((_QWORD *)a1 + 412);
      if (!v188)
        goto LABEL_220;
      v189 = *(_DWORD *)(v188 - 8);
      v190 = ((unint64_t)&WebCore::JSHTMLParagraphElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLParagraphElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLParagraphElement::s_info
                                                                           + ~((_QWORD)&WebCore::JSHTMLParagraphElement::s_info << 32)) >> 22);
      v191 = 9 * ((v190 + ~(v190 << 13)) ^ ((v190 + ~(v190 << 13)) >> 8));
      v192 = (v191 ^ (v191 >> 15)) + ~((v191 ^ (v191 >> 15)) << 27);
      v193 = v189 & ((v192 >> 31) ^ v192);
      v194 = *(char ***)(v188 + 16 * v193);
      if (v194 == &WebCore::JSHTMLParagraphElement::s_info)
        goto LABEL_219;
      v241 = 1;
      while (v194)
      {
        v193 = ((_DWORD)v193 + v241) & v189;
        v194 = *(char ***)(v188 + 16 * v193);
        ++v241;
        if (v194 == &WebCore::JSHTMLParagraphElement::s_info)
        {
LABEL_219:
          v195 = *(_QWORD *)(v188 + 16 * v193 + 8);
          if (v195)
            goto LABEL_221;
          break;
        }
      }
LABEL_220:
      v196 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v197 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v196, a1, a3);
      v198 = WebCore::JSHTMLParagraphElementPrototype::createStructure((uint64_t *)v196, (uint64_t)a1, v197);
      *(_DWORD *)(v198 + 16) |= 0x80000u;
      v201 = (JSC::JSCell *)WebCore::JSHTMLParagraphElementPrototype::create(v196, v198, v199, v200);
      v202 = WebCore::JSHTMLParagraphElement::createStructure((uint64_t *)v196, (uint64_t)a1, v201);
      v195 = WebCore::cacheDOMStructure((JSCell *)a1, v202, (uint64_t)&WebCore::JSHTMLParagraphElement::s_info);
LABEL_221:
      v203 = *((_QWORD *)a1 + 7);
      v204 = *(_QWORD *)(v203 + 41456);
      v205 = *(_QWORD *)(v204 + 23536);
      v206 = *(_QWORD **)(v205 + 4568);
      if (v206)
        goto LABEL_222;
      v263 = *(_QWORD *)(v204 + 22648);
      if (__ldaxr((unsigned __int8 *)v263))
      {
        __clrex();
LABEL_295:
        MEMORY[0x19AEA534C](v263);
        goto LABEL_296;
      }
      if (__stxr(1u, (unsigned __int8 *)v263))
        goto LABEL_295;
LABEL_296:
      v265 = *(_QWORD *)(v263 + 2824);
      v753 = *(_QWORD *)(v265 + 4568);
      if (!v753)
      {
        v284 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v284, v752, v203 + 192, v203 + 1872, 40, 8, &v754);
        v286 = v754;
        v754 = 0;
        if (v286)
          (*(void (**)(WTF *))(*(_QWORD *)v286 + 8))(v286);
        v287 = v752[0];
        v752[0] = 0;
        if (v287)
        {
          if (*(_DWORD *)v287 == 1)
            WTF::fastFree(v287, v285);
          else
            --*(_DWORD *)v287;
        }
        v753 = v284;
        v288 = *(_QWORD *)(v265 + 4568);
        *(_QWORD *)(v265 + 4568) = v284;
        if (v288)
          (*(void (**)(uint64_t))(*(_QWORD *)v288 + 8))(v288);
        v289 = *(unsigned int *)(v263 + 2844);
        if ((_DWORD)v289 == *(_DWORD *)(v263 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v263 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v263 + 2832) + 8 * v289) = v284;
          *(_DWORD *)(v263 + 2844) = v289 + 1;
        }
      }
      v206 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v266 = *(_QWORD *)(v205 + 4568);
      *(_QWORD *)(v205 + 4568) = v206;
      if (v266)
      {
        v267 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v267, v268);
      }
      v269 = __ldxr((unsigned __int8 *)v263);
      if (v269 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v263))
          goto LABEL_222;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v263);
LABEL_222:
      SlowCase = v206[3];
      if (SlowCase < v206[4])
        goto LABEL_223;
      SlowCase = v206[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v726 = *(_QWORD *)(SlowCase + 8) ^ v206[6];
        v206[4] = SlowCase + HIDWORD(v726);
        v206[5] = SlowCase + (int)v726;
LABEL_223:
        v206[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v195);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v203 + 755))
        goto LABEL_597;
      goto LABEL_268;
    case 0x5B:
      return WebCore::createHTMLParamElementWrapper(a1, (WTF **)a2, a3);
    case 0x5C:
      return WebCore::createHTMLPictureElementWrapper(a1, (WTF **)a2, a3);
    case 0x5F:
      *a2 = 0;
      v500 = *((_QWORD *)a1 + 412);
      if (!v500)
        goto LABEL_557;
      v501 = *(_DWORD *)(v500 - 8);
      v502 = ((unint64_t)&WebCore::JSHTMLProgressElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLProgressElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLProgressElement::s_info
                                                                          + ~((_QWORD)&WebCore::JSHTMLProgressElement::s_info << 32)) >> 22);
      v503 = 9 * ((v502 + ~(v502 << 13)) ^ ((v502 + ~(v502 << 13)) >> 8));
      v504 = (v503 ^ (v503 >> 15)) + ~((v503 ^ (v503 >> 15)) << 27);
      v505 = v501 & ((v504 >> 31) ^ v504);
      v506 = *(char ***)(v500 + 16 * v505);
      if (v506 == &WebCore::JSHTMLProgressElement::s_info)
        goto LABEL_556;
      v613 = 1;
      while (v506)
      {
        v505 = ((_DWORD)v505 + v613) & v501;
        v506 = *(char ***)(v500 + 16 * v505);
        ++v613;
        if (v506 == &WebCore::JSHTMLProgressElement::s_info)
        {
LABEL_556:
          v507 = *(_QWORD *)(v500 + 16 * v505 + 8);
          if (v507)
            goto LABEL_558;
          break;
        }
      }
LABEL_557:
      v508 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v509 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v508, a1, a3);
      v510 = WebCore::JSHTMLProgressElementPrototype::createStructure((uint64_t *)v508, (uint64_t)a1, v509);
      *(_DWORD *)(v510 + 16) |= 0x80000u;
      v513 = (JSC::JSCell *)WebCore::JSHTMLProgressElementPrototype::create(v508, v510, v511, v512);
      v514 = WebCore::JSHTMLProgressElement::createStructure((uint64_t *)v508, (uint64_t)a1, v513);
      v507 = WebCore::cacheDOMStructure((JSCell *)a1, v514, (uint64_t)&WebCore::JSHTMLProgressElement::s_info);
LABEL_558:
      v515 = *((_QWORD *)a1 + 7);
      v516 = *(_QWORD *)(v515 + 41456);
      v517 = *(_QWORD *)(v516 + 23536);
      v518 = *(_QWORD **)(v517 + 4600);
      if (v518)
        goto LABEL_559;
      v629 = *(_QWORD *)(v516 + 22648);
      if (__ldaxr((unsigned __int8 *)v629))
      {
        __clrex();
LABEL_704:
        MEMORY[0x19AEA534C](v629);
        goto LABEL_705;
      }
      if (__stxr(1u, (unsigned __int8 *)v629))
        goto LABEL_704;
LABEL_705:
      v631 = *(_QWORD *)(v629 + 2824);
      v752[0] = *(WTF **)(v631 + 4600);
      if (!v752[0])
      {
        v753 = 40;
        std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", v515 + 192, v515 + 1872, &v753, JSC::JSCell::numberOfLowerTierCells, (uint64_t *)&v754);
        v708 = v754;
        v752[0] = v754;
        v709 = *(_QWORD *)(v631 + 4600);
        *(_QWORD *)(v631 + 4600) = v754;
        if (v709)
          (*(void (**)(uint64_t))(*(_QWORD *)v709 + 8))(v709);
        v710 = *(unsigned int *)(v629 + 2844);
        if ((_DWORD)v710 == *(_DWORD *)(v629 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v629 + 2832, (unint64_t)v752);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v629 + 2832) + 8 * v710) = v708;
          *(_DWORD *)(v629 + 2844) = v710 + 1;
        }
      }
      v518 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v632 = *(_QWORD *)(v517 + 4600);
      *(_QWORD *)(v517 + 4600) = v518;
      if (v632)
      {
        v633 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v633, v634);
      }
      v635 = __ldxr((unsigned __int8 *)v629);
      if (v635 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v629))
          goto LABEL_559;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v629);
LABEL_559:
      SlowCase = v518[3];
      if (SlowCase < v518[4])
        goto LABEL_560;
      SlowCase = v518[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v745 = *(_QWORD *)(SlowCase + 8) ^ v518[6];
        v518[4] = SlowCase + HIDWORD(v745);
        v518[5] = SlowCase + (int)v745;
LABEL_560:
        v518[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v507);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v515 + 755))
        goto LABEL_597;
      goto LABEL_268;
    case 0x6A:
      *a2 = 0;
      v443 = *((_QWORD *)a1 + 412);
      if (!v443)
        goto LABEL_482;
      v444 = *(_DWORD *)(v443 - 8);
      v445 = ((unint64_t)&WebCore::JSHTMLSelectElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLSelectElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLSelectElement::s_info
                                                                        + ~((_QWORD)&WebCore::JSHTMLSelectElement::s_info << 32)) >> 22);
      v446 = 9 * ((v445 + ~(v445 << 13)) ^ ((v445 + ~(v445 << 13)) >> 8));
      v447 = (v446 ^ (v446 >> 15)) + ~((v446 ^ (v446 >> 15)) << 27);
      v448 = v444 & ((v447 >> 31) ^ v447);
      v449 = *(char ***)(v443 + 16 * v448);
      if (v449 == &WebCore::JSHTMLSelectElement::s_info)
        goto LABEL_481;
      v583 = 1;
      while (v449)
      {
        v448 = ((_DWORD)v448 + v583) & v444;
        v449 = *(char ***)(v443 + 16 * v448);
        ++v583;
        if (v449 == &WebCore::JSHTMLSelectElement::s_info)
        {
LABEL_481:
          v450 = *(_QWORD *)(v443 + 16 * v448 + 8);
          if (v450)
            goto LABEL_483;
          break;
        }
      }
LABEL_482:
      v451 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v452 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v451, a1, a3);
      v453 = WebCore::JSHTMLSelectElementPrototype::createStructure((uint64_t *)v451, (uint64_t)a1, v452);
      *(_DWORD *)(v453 + 16) |= 0x80000u;
      v456 = (JSC::JSCell *)WebCore::JSHTMLSelectElementPrototype::create(v451, v453, v454, v455);
      v457 = WebCore::JSHTMLSelectElement::createStructure((uint64_t *)v451, (uint64_t)a1, v456);
      v450 = WebCore::cacheDOMStructure((JSCell *)a1, v457, (uint64_t)&WebCore::JSHTMLSelectElement::s_info);
LABEL_483:
      v458 = (WebCore::JSHTMLSelectElement *)*((_QWORD *)a1 + 7);
      v459 = (_QWORD *)WebCore::JSHTMLSelectElement::subspaceForImpl(v458, (JSC::VM *)a2);
      SlowCase = v459[3];
      if (SlowCase < v459[4])
        goto LABEL_484;
      SlowCase = v459[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v743 = *(_QWORD *)(SlowCase + 8) ^ v459[6];
        v459[4] = SlowCase + HIDWORD(v743);
        v459[5] = SlowCase + (int)v743;
LABEL_484:
        v459[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v450);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*((_BYTE *)v458 + 755))
        goto LABEL_486;
      goto LABEL_487;
    case 0x6B:
      return WebCore::createHTMLSlotElementWrapper(a1, (WTF **)a2, a3);
    case 0x6D:
      return WebCore::createHTMLSourceElementWrapper(a1, (WTF **)a2, a3);
    case 0x6E:
      *a2 = 0;
      v209 = *((_QWORD *)a1 + 412);
      if (!v209)
        goto LABEL_240;
      v210 = *(_DWORD *)(v209 - 8);
      v211 = ((unint64_t)&WebCore::JSHTMLSpanElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLSpanElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLSpanElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLSpanElement::s_info << 32)) >> 22);
      v212 = 9 * ((v211 + ~(v211 << 13)) ^ ((v211 + ~(v211 << 13)) >> 8));
      v213 = (v212 ^ (v212 >> 15)) + ~((v212 ^ (v212 >> 15)) << 27);
      v214 = v210 & ((v213 >> 31) ^ v213);
      v215 = *(char ***)(v209 + 16 * v214);
      if (v215 == &WebCore::JSHTMLSpanElement::s_info)
        goto LABEL_239;
      v274 = 1;
      while (v215)
      {
        v214 = ((_DWORD)v214 + v274) & v210;
        v215 = *(char ***)(v209 + 16 * v214);
        ++v274;
        if (v215 == &WebCore::JSHTMLSpanElement::s_info)
        {
LABEL_239:
          v216 = *(_QWORD *)(v209 + 16 * v214 + 8);
          if (v216)
            goto LABEL_241;
          break;
        }
      }
LABEL_240:
      v217 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v218 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v217, a1, a3);
      v219 = WebCore::JSHTMLSpanElementPrototype::createStructure((uint64_t *)v217, (uint64_t)a1, v218);
      *(_DWORD *)(v219 + 16) |= 0x80000u;
      v222 = (JSC::JSCell *)WebCore::JSHTMLSpanElementPrototype::create(v217, v219, v220, v221);
      v223 = WebCore::JSHTMLSpanElement::createStructure((uint64_t *)v217, (uint64_t)a1, v222);
      v216 = WebCore::cacheDOMStructure((JSCell *)a1, v223, (uint64_t)&WebCore::JSHTMLSpanElement::s_info);
LABEL_241:
      v224 = *((_QWORD *)a1 + 7);
      v225 = *(_QWORD *)(v224 + 41456);
      v226 = *(_QWORD *)(v225 + 23536);
      v227 = *(_QWORD **)(v226 + 4648);
      if (v227)
        goto LABEL_242;
      v276 = *(_QWORD *)(v225 + 22648);
      if (__ldaxr((unsigned __int8 *)v276))
      {
        __clrex();
LABEL_329:
        MEMORY[0x19AEA534C](v276);
        goto LABEL_330;
      }
      if (__stxr(1u, (unsigned __int8 *)v276))
        goto LABEL_329;
LABEL_330:
      v278 = *(_QWORD *)(v276 + 2824);
      v753 = *(_QWORD *)(v278 + 4648);
      if (!v753)
      {
        v290 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v290, v752, v224 + 192, v224 + 1872, 40, 8, &v754);
        v292 = v754;
        v754 = 0;
        if (v292)
          (*(void (**)(WTF *))(*(_QWORD *)v292 + 8))(v292);
        v293 = v752[0];
        v752[0] = 0;
        if (v293)
        {
          if (*(_DWORD *)v293 == 1)
            WTF::fastFree(v293, v291);
          else
            --*(_DWORD *)v293;
        }
        v753 = v290;
        v294 = *(_QWORD *)(v278 + 4648);
        *(_QWORD *)(v278 + 4648) = v290;
        if (v294)
          (*(void (**)(uint64_t))(*(_QWORD *)v294 + 8))(v294);
        v295 = *(unsigned int *)(v276 + 2844);
        if ((_DWORD)v295 == *(_DWORD *)(v276 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v276 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v276 + 2832) + 8 * v295) = v290;
          *(_DWORD *)(v276 + 2844) = v295 + 1;
        }
      }
      v227 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v279 = *(_QWORD *)(v226 + 4648);
      *(_QWORD *)(v226 + 4648) = v227;
      if (v279)
      {
        v280 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v280, v281);
      }
      v282 = __ldxr((unsigned __int8 *)v276);
      if (v282 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v276))
          goto LABEL_242;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v276);
LABEL_242:
      SlowCase = v227[3];
      if (SlowCase < v227[4])
        goto LABEL_243;
      SlowCase = v227[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v730 = *(_QWORD *)(SlowCase + 8) ^ v227[6];
        v227[4] = SlowCase + HIDWORD(v730);
        v227[5] = SlowCase + (int)v730;
LABEL_243:
        v227[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v216);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v224 + 755))
        goto LABEL_597;
      goto LABEL_268;
    case 0x74:
      *a2 = 0;
      v533 = WebCore::getDOMStructure<WebCore::JSHTMLTableElement>(*((WebCore::JSHTMLTableElement **)a1 + 7), a1, a3);
      v534 = *((_QWORD *)a1 + 7);
      v535 = *(_QWORD *)(v534 + 41456);
      v536 = *(_QWORD *)(v535 + 23536);
      v537 = *(_QWORD **)(v536 + 4688);
      if (v537)
        goto LABEL_585;
      v651 = *(_QWORD *)(v535 + 22648);
      if (__ldaxr((unsigned __int8 *)v651))
      {
        __clrex();
LABEL_743:
        MEMORY[0x19AEA534C](v651);
        goto LABEL_744;
      }
      if (__stxr(1u, (unsigned __int8 *)v651))
        goto LABEL_743;
LABEL_744:
      v653 = *(_QWORD *)(v651 + 2824);
      v752[0] = *(WTF **)(v653 + 4688);
      if (!v752[0])
      {
        v753 = 40;
        std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", v534 + 192, v534 + 1872, &v753, JSC::JSCell::numberOfLowerTierCells, (uint64_t *)&v754);
        v712 = v754;
        v752[0] = v754;
        v713 = *(_QWORD *)(v653 + 4688);
        *(_QWORD *)(v653 + 4688) = v754;
        if (v713)
          (*(void (**)(uint64_t))(*(_QWORD *)v713 + 8))(v713);
        v714 = *(unsigned int *)(v651 + 2844);
        if ((_DWORD)v714 == *(_DWORD *)(v651 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v651 + 2832, (unint64_t)v752);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v651 + 2832) + 8 * v714) = v712;
          *(_DWORD *)(v651 + 2844) = v714 + 1;
        }
      }
      v537 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v654 = *(_QWORD *)(v536 + 4688);
      *(_QWORD *)(v536 + 4688) = v537;
      if (v654)
      {
        v655 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v655, v656);
      }
      v657 = __ldxr((unsigned __int8 *)v651);
      if (v657 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v651))
          goto LABEL_585;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v651);
LABEL_585:
      SlowCase = v537[3];
      if (SlowCase < v537[4])
        goto LABEL_586;
      SlowCase = v537[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v746 = *(_QWORD *)(SlowCase + 8) ^ v537[6];
        v537[4] = SlowCase + HIDWORD(v746);
        v537[5] = SlowCase + (int)v746;
LABEL_586:
        v537[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v533);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v534 + 755))
        goto LABEL_453;
      goto LABEL_454;
    case 0x75:
      *a2 = 0;
      v752[0] = (WTF *)v4;
      v208 = WebCore::createWrapper<WebCore::HTMLTableSectionElement,WebCore::HTMLTableSectionElement>((uint64_t)a1, (uint64_t *)v752, a3);
      goto LABEL_232;
    case 0x76:
      *a2 = 0;
      v752[0] = (WTF *)v4;
      v208 = WebCore::createWrapper<WebCore::HTMLTableCellElement,WebCore::HTMLTableCellElement>((uint64_t *)a1, v752, a3);
LABEL_232:
      SlowCase = v208;
      if (v752[0])
      {
        if (*((_DWORD *)v752[0] + 6) == 2)
        {
          if ((*((_WORD *)v752[0] + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v752[0]);
        }
        else
        {
          *((_DWORD *)v752[0] + 6) -= 2;
        }
      }
      return SlowCase;
    case 0x77:
      *a2 = 0;
      v338 = *((_QWORD *)a1 + 412);
      if (!v338)
        goto LABEL_398;
      v339 = *(_DWORD *)(v338 - 8);
      v340 = ((unint64_t)&WebCore::JSHTMLTemplateElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLTemplateElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLTemplateElement::s_info
                                                                          + ~((_QWORD)&WebCore::JSHTMLTemplateElement::s_info << 32)) >> 22);
      v341 = 9 * ((v340 + ~(v340 << 13)) ^ ((v340 + ~(v340 << 13)) >> 8));
      v342 = (v341 ^ (v341 >> 15)) + ~((v341 ^ (v341 >> 15)) << 27);
      v343 = v339 & ((v342 >> 31) ^ v342);
      v344 = *(char ***)(v338 + 16 * v343);
      if (v344 == &WebCore::JSHTMLTemplateElement::s_info)
        goto LABEL_397;
      v487 = 1;
      while (v344)
      {
        v343 = ((_DWORD)v343 + v487) & v339;
        v344 = *(char ***)(v338 + 16 * v343);
        ++v487;
        if (v344 == &WebCore::JSHTMLTemplateElement::s_info)
        {
LABEL_397:
          v345 = *(_QWORD *)(v338 + 16 * v343 + 8);
          if (v345)
            goto LABEL_399;
          break;
        }
      }
LABEL_398:
      v346 = (WebCore::JSHTMLTemplateElement *)*((_QWORD *)a1 + 7);
      v347 = (JSC::JSCell *)WebCore::JSHTMLTemplateElement::createPrototype(v346, a1, a3);
      v348 = WebCore::JSHTMLTemplateElement::createStructure((uint64_t *)v346, (uint64_t)a1, v347);
      v345 = WebCore::cacheDOMStructure((JSCell *)a1, v348, (uint64_t)&WebCore::JSHTMLTemplateElement::s_info);
LABEL_399:
      v349 = (WebCore::JSHTMLTemplateElement *)*((_QWORD *)a1 + 7);
      v350 = (_QWORD *)WebCore::JSHTMLTemplateElement::subspaceForImpl(v349, (JSC::VM *)a2);
      SlowCase = v350[3];
      if (SlowCase < v350[4])
        goto LABEL_400;
      SlowCase = v350[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v736 = *(_QWORD *)(SlowCase + 8) ^ v350[6];
        v350[4] = SlowCase + HIDWORD(v736);
        v350[5] = SlowCase + (int)v736;
LABEL_400:
        v350[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v345);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*((_BYTE *)v349 + 755))
LABEL_486:
        __dmb(0xAu);
      goto LABEL_487;
    case 0x78:
      return WebCore::createWrapper<WebCore::HTMLTextAreaElement,WebCore::HTMLElement>((uint64_t)a1, a2, a3);
    case 0x79:
    case 0x7B:
      return WebCore::createHTMLTableSectionElementWrapper((uint64_t)a1, (WebCore::Node **)a2, a3);
    case 0x7A:
      return WebCore::createHTMLTableCellElementWrapper((uint64_t *)a1, (WebCore::Node **)a2, a3);
    case 0x7C:
      return WebCore::createWrapper<WebCore::HTMLTimeElement,WebCore::HTMLElement>(a1, (JSC::VM *)a2, a3);
    case 0x7D:
      *a2 = 0;
      v416 = WebCore::getDOMStructure<WebCore::JSHTMLTableRowElement>(*((WebCore::JSHTMLTableRowElement **)a1 + 7), a1, a3);
      v417 = *((_QWORD *)a1 + 7);
      v418 = *(_QWORD *)(v417 + 41456);
      v419 = *(_QWORD *)(v418 + 23536);
      v420 = *(_QWORD **)(v419 + 4696);
      if (v420)
        goto LABEL_450;
      v568 = *(_QWORD *)(v418 + 22648);
      if (__ldaxr((unsigned __int8 *)v568))
      {
        __clrex();
LABEL_621:
        MEMORY[0x19AEA534C](v568);
        goto LABEL_622;
      }
      if (__stxr(1u, (unsigned __int8 *)v568))
        goto LABEL_621;
LABEL_622:
      v570 = *(_QWORD *)(v568 + 2824);
      v753 = *(_QWORD *)(v570 + 4696);
      if (!v753)
      {
        v690 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v690, v752, v417 + 192, v417 + 1872, 40, 8, &v754);
        v692 = v754;
        v754 = 0;
        if (v692)
          (*(void (**)(WTF *))(*(_QWORD *)v692 + 8))(v692);
        v693 = v752[0];
        v752[0] = 0;
        if (v693)
        {
          if (*(_DWORD *)v693 == 1)
            WTF::fastFree(v693, v691);
          else
            --*(_DWORD *)v693;
        }
        v753 = v690;
        v694 = *(_QWORD *)(v570 + 4696);
        *(_QWORD *)(v570 + 4696) = v690;
        if (v694)
          (*(void (**)(uint64_t))(*(_QWORD *)v694 + 8))(v694);
        v695 = *(unsigned int *)(v568 + 2844);
        if ((_DWORD)v695 == *(_DWORD *)(v568 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v568 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v568 + 2832) + 8 * v695) = v690;
          *(_DWORD *)(v568 + 2844) = v695 + 1;
        }
      }
      v420 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v571 = *(_QWORD *)(v419 + 4696);
      *(_QWORD *)(v419 + 4696) = v420;
      if (v571)
      {
        v572 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v572, v573);
      }
      v574 = __ldxr((unsigned __int8 *)v568);
      if (v574 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v568))
          goto LABEL_450;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v568);
LABEL_450:
      SlowCase = v420[3];
      if (SlowCase < v420[4])
        goto LABEL_451;
      SlowCase = v420[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v741 = *(_QWORD *)(SlowCase + 8) ^ v420[6];
        v420[4] = SlowCase + HIDWORD(v741);
        v420[5] = SlowCase + (int)v741;
LABEL_451:
        v420[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v416);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v417 + 755))
LABEL_453:
        __dmb(0xAu);
LABEL_454:
      v365 = *((_QWORD *)a1 + 415);
      {
        WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
      }
      if (*(_DWORD *)(v365 + 48))
        goto LABEL_713;
      if ((SlowCase & 8) != 0)
        v421 = (SlowCase - 112) | 1;
      else
        v421 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v421 & 1) != 0)
        v422 = v421 + 47;
      else
        v422 = *(_QWORD *)v421 + 32;
      v22 = *(_QWORD **)(v422 + 16);
      if (!v22)
        v22 = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v422 + 16) = *v22;
      *v22 = SlowCase;
      v22[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
      v22[2] = v365;
LABEL_21:
      v23 = *(WTF **)(v4 + 8);
      *(_QWORD *)(v4 + 8) = v22;
      if (!v23)
        return SlowCase;
      goto LABEL_292;
    case 0x7E:
      return WebCore::createHTMLTrackElementWrapper((WebCore::JSHTMLElement **)a1, (JSC::VM *)a2, a3);
    case 0x81:
      *a2 = 0;
      v228 = *((_QWORD *)a1 + 412);
      if (!v228)
        goto LABEL_249;
      v229 = *(_DWORD *)(v228 - 8);
      v230 = ((unint64_t)&WebCore::JSHTMLUListElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLUListElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLUListElement::s_info
                                                                       + ~((_QWORD)&WebCore::JSHTMLUListElement::s_info << 32)) >> 22);
      v231 = 9 * ((v230 + ~(v230 << 13)) ^ ((v230 + ~(v230 << 13)) >> 8));
      v232 = (v231 ^ (v231 >> 15)) + ~((v231 ^ (v231 >> 15)) << 27);
      v233 = v229 & ((v232 >> 31) ^ v232);
      v234 = *(char ***)(v228 + 16 * v233);
      if (v234 == &WebCore::JSHTMLUListElement::s_info)
        goto LABEL_248;
      v275 = 1;
      while (v234)
      {
        v233 = ((_DWORD)v233 + v275) & v229;
        v234 = *(char ***)(v228 + 16 * v233);
        ++v275;
        if (v234 == &WebCore::JSHTMLUListElement::s_info)
        {
LABEL_248:
          v235 = *(_QWORD *)(v228 + 16 * v233 + 8);
          if (v235)
            goto LABEL_250;
          break;
        }
      }
LABEL_249:
      v236 = (WebCore::JSHTMLUListElement *)*((_QWORD *)a1 + 7);
      v237 = (JSC::JSCell *)WebCore::JSHTMLUListElement::createPrototype(v236, a1, a3);
      v238 = WebCore::JSHTMLUListElement::createStructure((uint64_t *)v236, (uint64_t)a1, v237);
      v235 = WebCore::cacheDOMStructure((JSCell *)a1, v238, (uint64_t)&WebCore::JSHTMLUListElement::s_info);
LABEL_250:
      v239 = (WebCore::JSHTMLUListElement *)*((_QWORD *)a1 + 7);
      v240 = (_QWORD *)WebCore::JSHTMLUListElement::subspaceForImpl(v239, (JSC::VM *)a2);
      SlowCase = v240[3];
      if (SlowCase < v240[4])
        goto LABEL_251;
      SlowCase = v240[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v731 = *(_QWORD *)(SlowCase + 8) ^ v240[6];
        v240[4] = SlowCase + HIDWORD(v731);
        v240[5] = SlowCase + (int)v731;
LABEL_251:
        v240[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v235);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*((_BYTE *)v239 + 755))
        goto LABEL_267;
      goto LABEL_268;
    case 0x83:
      return WebCore::createHTMLVideoElementWrapper(a1, (JSC::VM *)a2, a3);
    case 0xF5:
      *a2 = 0;
      v175 = *((_QWORD *)a1 + 412);
      if (!v175)
        goto LABEL_212;
      v176 = *(_DWORD *)(v175 - 8);
      v177 = ((unint64_t)&WebCore::JSHTMLAnchorElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLAnchorElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLAnchorElement::s_info
                                                                        + ~((_QWORD)&WebCore::JSHTMLAnchorElement::s_info << 32)) >> 22);
      v178 = 9 * ((v177 + ~(v177 << 13)) ^ ((v177 + ~(v177 << 13)) >> 8));
      v179 = (v178 ^ (v178 >> 15)) + ~((v178 ^ (v178 >> 15)) << 27);
      v180 = v176 & ((v179 >> 31) ^ v179);
      v181 = *(char ***)(v175 + 16 * v180);
      if (v181 == &WebCore::JSHTMLAnchorElement::s_info)
        goto LABEL_211;
      v207 = 1;
      while (v181)
      {
        v180 = ((_DWORD)v180 + v207) & v176;
        v181 = *(char ***)(v175 + 16 * v180);
        ++v207;
        if (v181 == &WebCore::JSHTMLAnchorElement::s_info)
        {
LABEL_211:
          v182 = *(_QWORD *)(v175 + 16 * v180 + 8);
          if (v182)
            goto LABEL_213;
          break;
        }
      }
LABEL_212:
      v183 = (WebCore::JSHTMLAnchorElement *)*((_QWORD *)a1 + 7);
      v184 = (JSC::JSCell *)WebCore::JSHTMLAnchorElement::createPrototype(v183, a1, a3);
      v185 = WebCore::JSHTMLAnchorElement::createStructure((uint64_t *)v183, (uint64_t)a1, v184);
      v182 = WebCore::cacheDOMStructure((JSCell *)a1, v185, (uint64_t)&WebCore::JSHTMLAnchorElement::s_info);
LABEL_213:
      v186 = (WebCore::JSHTMLAnchorElement *)*((_QWORD *)a1 + 7);
      v187 = (_QWORD *)WebCore::JSHTMLAnchorElement::subspaceForImpl(v186, (JSC::VM *)a2);
      SlowCase = v187[3];
      if (SlowCase < v187[4])
        goto LABEL_214;
      SlowCase = v187[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v722 = *(_QWORD *)(SlowCase + 8) ^ v187[6];
        v187[4] = SlowCase + HIDWORD(v722);
        v187[5] = SlowCase + (int)v722;
LABEL_214:
        v187[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v182);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*((_BYTE *)v186 + 755))
        goto LABEL_267;
      goto LABEL_268;
    case 0xF7:
      return WebCore::createHTMLFontElementWrapper(a1, (WTF **)a2, a3);
    case 0xFF:
      *a2 = 0;
      v423 = *((_QWORD *)a1 + 412);
      if (!v423)
        goto LABEL_468;
      v424 = *(_DWORD *)(v423 - 8);
      v425 = ((unint64_t)&WebCore::JSHTMLScriptElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLScriptElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLScriptElement::s_info
                                                                        + ~((_QWORD)&WebCore::JSHTMLScriptElement::s_info << 32)) >> 22);
      v426 = 9 * ((v425 + ~(v425 << 13)) ^ ((v425 + ~(v425 << 13)) >> 8));
      v427 = (v426 ^ (v426 >> 15)) + ~((v426 ^ (v426 >> 15)) << 27);
      v428 = v424 & ((v427 >> 31) ^ v427);
      v429 = *(char ***)(v423 + 16 * v428);
      if (v429 == &WebCore::JSHTMLScriptElement::s_info)
        goto LABEL_467;
      v575 = 1;
      while (v429)
      {
        v428 = ((_DWORD)v428 + v575) & v424;
        v429 = *(char ***)(v423 + 16 * v428);
        ++v575;
        if (v429 == &WebCore::JSHTMLScriptElement::s_info)
        {
LABEL_467:
          v430 = *(_QWORD *)(v423 + 16 * v428 + 8);
          if (v430)
            goto LABEL_469;
          break;
        }
      }
LABEL_468:
      v431 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v432 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v431, a1, a3);
      v433 = WebCore::JSHTMLScriptElementPrototype::createStructure((uint64_t *)v431, (uint64_t)a1, v432);
      *(_DWORD *)(v433 + 16) |= 0x80000u;
      v436 = (JSC::JSCell *)WebCore::JSHTMLScriptElementPrototype::create(v431, v433, v434, v435);
      v437 = WebCore::JSHTMLScriptElement::createStructure((uint64_t *)v431, (uint64_t)a1, v436);
      v430 = WebCore::cacheDOMStructure((JSCell *)a1, v437, (uint64_t)&WebCore::JSHTMLScriptElement::s_info);
LABEL_469:
      v438 = *((_QWORD *)a1 + 7);
      v439 = *(_QWORD *)(v438 + 41456);
      v440 = *(_QWORD *)(v439 + 23536);
      v441 = *(_QWORD **)(v440 + 4616);
      if (v441)
        goto LABEL_470;
      v576 = *(_QWORD *)(v439 + 22648);
      if (__ldaxr((unsigned __int8 *)v576))
      {
        __clrex();
LABEL_635:
        MEMORY[0x19AEA534C](v576);
        goto LABEL_636;
      }
      if (__stxr(1u, (unsigned __int8 *)v576))
        goto LABEL_635;
LABEL_636:
      v578 = *(_QWORD *)(v576 + 2824);
      v753 = *(_QWORD *)(v578 + 4616);
      if (!v753)
      {
        v696 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v696, v752, v438 + 192, v438 + 1872, 40, 8, &v754);
        v698 = v754;
        v754 = 0;
        if (v698)
          (*(void (**)(WTF *))(*(_QWORD *)v698 + 8))(v698);
        v699 = v752[0];
        v752[0] = 0;
        if (v699)
        {
          if (*(_DWORD *)v699 == 1)
            WTF::fastFree(v699, v697);
          else
            --*(_DWORD *)v699;
        }
        v753 = v696;
        v700 = *(_QWORD *)(v578 + 4616);
        *(_QWORD *)(v578 + 4616) = v696;
        if (v700)
          (*(void (**)(uint64_t))(*(_QWORD *)v700 + 8))(v700);
        v701 = *(unsigned int *)(v576 + 2844);
        if ((_DWORD)v701 == *(_DWORD *)(v576 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v576 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v576 + 2832) + 8 * v701) = v696;
          *(_DWORD *)(v576 + 2844) = v701 + 1;
        }
      }
      v441 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v579 = *(_QWORD *)(v440 + 4616);
      *(_QWORD *)(v440 + 4616) = v441;
      if (v579)
      {
        v580 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v580, v581);
      }
      v582 = __ldxr((unsigned __int8 *)v576);
      if (v582 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v576))
          goto LABEL_470;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v576);
LABEL_470:
      SlowCase = v441[3];
      if (SlowCase < v441[4])
        goto LABEL_471;
      SlowCase = v441[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v742 = *(_QWORD *)(SlowCase + 8) ^ v441[6];
        v441[4] = SlowCase + HIDWORD(v742);
        v441[5] = SlowCase + (int)v742;
LABEL_471:
        v441[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v430);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v438 + 755))
LABEL_597:
        __dmb(0xAu);
LABEL_268:
      v19 = *((_QWORD *)a1 + 415);
      {
        WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
      }
      if (v4)
        v255 = (WTF **)(v4 + 8);
      else
        v255 = 0;
      if (*(_DWORD *)(v19 + 48))
      {
LABEL_283:
        v752[0] = (WTF *)v4;
        if ((SlowCase & 8) != 0)
          v259 = (SlowCase - 112) | 1;
        else
          v259 = SlowCase & 0xFFFFFFFFFFFFC000;
        if ((v259 & 1) != 0)
          v260 = v259 + 47;
        else
          v260 = *(_QWORD *)v259 + 32;
        v261 = *(WTF **)(v260 + 16);
        if (!v261)
          v261 = (WTF *)JSC::WeakSet::findAllocator();
        *(_QWORD *)(v260 + 16) = *(_QWORD *)v261;
        *(_QWORD *)v261 = SlowCase;
        *((_QWORD *)v261 + 1) = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
        *((_QWORD *)v261 + 2) = v19;
        v754 = v261;
        v262 = (uint64_t *)(v19 + 32);
        goto LABEL_291;
      }
      if ((SlowCase & 8) != 0)
        v256 = (SlowCase - 112) | 1;
      else
        v256 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v256 & 1) != 0)
        v257 = v256 + 47;
      else
        v257 = *(_QWORD *)v256 + 32;
      v258 = *(WTF **)(v257 + 16);
      if (!v258)
        v258 = (WTF *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v257 + 16) = *(_QWORD *)v258;
      *(_QWORD *)v258 = SlowCase;
      *((_QWORD *)v258 + 1) = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
      *((_QWORD *)v258 + 2) = v19;
      v23 = *v255;
      *v255 = v258;
      if (!v23)
        return SlowCase;
      goto LABEL_292;
    case 0x100:
      *a2 = 0;
      v296 = *((_QWORD *)a1 + 412);
      if (!v296)
        goto LABEL_375;
      v297 = *(_DWORD *)(v296 - 8);
      v298 = ((unint64_t)&WebCore::JSHTMLStyleElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLStyleElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLStyleElement::s_info
                                                                       + ~((_QWORD)&WebCore::JSHTMLStyleElement::s_info << 32)) >> 22);
      v299 = 9 * ((v298 + ~(v298 << 13)) ^ ((v298 + ~(v298 << 13)) >> 8));
      v300 = (v299 ^ (v299 >> 15)) + ~((v299 ^ (v299 >> 15)) << 27);
      v301 = v297 & ((v300 >> 31) ^ v300);
      v302 = *(char ***)(v296 + 16 * v301);
      if (v302 == &WebCore::JSHTMLStyleElement::s_info)
        goto LABEL_374;
      v442 = 1;
      while (v302)
      {
        v301 = ((_DWORD)v301 + v442) & v297;
        v302 = *(char ***)(v296 + 16 * v301);
        ++v442;
        if (v302 == &WebCore::JSHTMLStyleElement::s_info)
        {
LABEL_374:
          v303 = *(_QWORD *)(v296 + 16 * v301 + 8);
          if (v303)
            goto LABEL_376;
          break;
        }
      }
LABEL_375:
      v304 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v305 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v304, a1, a3);
      v306 = WebCore::JSHTMLStyleElementPrototype::createStructure((uint64_t *)v304, (uint64_t)a1, v305);
      *(_DWORD *)(v306 + 16) |= 0x80000u;
      v309 = (JSC::JSCell *)WebCore::JSHTMLStyleElementPrototype::create(v304, v306, v307, v308);
      v310 = WebCore::JSHTMLStyleElement::createStructure((uint64_t *)v304, (uint64_t)a1, v309);
      v303 = WebCore::cacheDOMStructure((JSCell *)a1, v310, (uint64_t)&WebCore::JSHTMLStyleElement::s_info);
LABEL_376:
      v311 = *((_QWORD *)a1 + 7);
      v312 = *(_QWORD *)(v311 + 41456);
      v313 = *(_QWORD *)(v312 + 23536);
      v314 = *(_QWORD **)(v313 + 4656);
      if (v314)
        goto LABEL_377;
      v461 = *(_QWORD *)(v312 + 22648);
      if (__ldaxr((unsigned __int8 *)v461))
      {
        __clrex();
LABEL_505:
        MEMORY[0x19AEA534C](v461);
        goto LABEL_506;
      }
      if (__stxr(1u, (unsigned __int8 *)v461))
        goto LABEL_505;
LABEL_506:
      v463 = *(_QWORD *)(v461 + 2824);
      v753 = *(_QWORD *)(v463 + 4656);
      if (!v753)
      {
        v601 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)v752, "IsoSpace T");
        v754 = 0;
        MEMORY[0x19AEA3204](v601, v752, v311 + 192, v311 + 1872, 40, 8, &v754);
        v603 = v754;
        v754 = 0;
        if (v603)
          (*(void (**)(WTF *))(*(_QWORD *)v603 + 8))(v603);
        v604 = v752[0];
        v752[0] = 0;
        if (v604)
        {
          if (*(_DWORD *)v604 == 1)
            WTF::fastFree(v604, v602);
          else
            --*(_DWORD *)v604;
        }
        v753 = v601;
        v605 = *(_QWORD *)(v463 + 4656);
        *(_QWORD *)(v463 + 4656) = v601;
        if (v605)
          (*(void (**)(uint64_t))(*(_QWORD *)v605 + 8))(v605);
        v606 = *(unsigned int *)(v461 + 2844);
        if ((_DWORD)v606 == *(_DWORD *)(v461 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v461 + 2832, (unint64_t)&v753);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v461 + 2832) + 8 * v606) = v601;
          *(_DWORD *)(v461 + 2844) = v606 + 1;
        }
      }
      v314 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v464 = *(_QWORD *)(v313 + 4656);
      *(_QWORD *)(v313 + 4656) = v314;
      if (v464)
      {
        v465 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v465, v466);
      }
      v467 = __ldxr((unsigned __int8 *)v461);
      if (v467 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v461))
          goto LABEL_377;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v461);
LABEL_377:
      SlowCase = v314[3];
      if (SlowCase < v314[4])
        goto LABEL_378;
      SlowCase = v314[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v733 = *(_QWORD *)(SlowCase + 8) ^ v314[6];
        v314[4] = SlowCase + HIDWORD(v733);
        v314[5] = SlowCase + (int)v733;
LABEL_378:
        v314[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v303);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*(_BYTE *)(v311 + 755))
LABEL_769:
        __dmb(0xAu);
LABEL_487:
      v365 = *((_QWORD *)a1 + 415);
      {
        WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
      }
      if (v4)
        v366 = (WTF **)(v4 + 8);
      else
        v366 = 0;
      if (*(_DWORD *)(v365 + 48))
      {
LABEL_713:
        v636 = (uint64_t *)(v365 + 32);
        v752[0] = (WTF *)v4;
        v637 = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
LABEL_714:
        JSC::Weak<JSC::JSObject>::Weak(&v754, SlowCase, (uint64_t)v637, v365);
        v262 = v636;
LABEL_291:
        JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v262, (uint64_t *)v752, (uint64_t *)&v754);
        v23 = v754;
        if (v754)
          goto LABEL_292;
      }
      else
      {
        if ((SlowCase & 8) != 0)
          v460 = (SlowCase - 112) | 1;
        else
          v460 = SlowCase & 0xFFFFFFFFFFFFC000;
        if ((v460 & 1) != 0)
          v368 = v460 + 47;
        else
          v368 = *(_QWORD *)v460 + 32;
        Allocator = *(WTF **)(v368 + 16);
        if (!Allocator)
          Allocator = (WTF *)JSC::WeakSet::findAllocator();
        v370 = *(_QWORD *)Allocator;
        v371 = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
LABEL_501:
        *(_QWORD *)(v368 + 16) = v370;
        *(_QWORD *)Allocator = SlowCase;
        *((_QWORD *)Allocator + 1) = v371;
        *((_QWORD *)Allocator + 2) = v365;
        v23 = *v366;
        *v366 = Allocator;
        if (v23)
LABEL_292:
          *((_QWORD *)v23 + 1) = 3;
      }
      return SlowCase;
    case 0x101:
      *a2 = 0;
      v584 = *((_QWORD *)a1 + 412);
      if (!v584)
        goto LABEL_651;
      v585 = *(_DWORD *)(v584 - 8);
      v586 = ((unint64_t)&WebCore::JSHTMLTitleElement::s_info
            + ~((_QWORD)&WebCore::JSHTMLTitleElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLTitleElement::s_info
                                                                       + ~((_QWORD)&WebCore::JSHTMLTitleElement::s_info << 32)) >> 22);
      v587 = 9 * ((v586 + ~(v586 << 13)) ^ ((v586 + ~(v586 << 13)) >> 8));
      v588 = (v587 ^ (v587 >> 15)) + ~((v587 ^ (v587 >> 15)) << 27);
      v589 = v585 & ((v588 >> 31) ^ v588);
      v590 = *(char ***)(v584 + 16 * v589);
      if (v590 == &WebCore::JSHTMLTitleElement::s_info)
        goto LABEL_650;
      v702 = 1;
      while (v590)
      {
        v589 = ((_DWORD)v589 + v702) & v585;
        v590 = *(char ***)(v584 + 16 * v589);
        ++v702;
        if (v590 == &WebCore::JSHTMLTitleElement::s_info)
        {
LABEL_650:
          v591 = *(_QWORD *)(v584 + 16 * v589 + 8);
          if (v591)
            goto LABEL_652;
          break;
        }
      }
LABEL_651:
      v592 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
      v593 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v592, a1, a3);
      v594 = WebCore::JSHTMLTitleElementPrototype::createStructure((uint64_t *)v592, (uint64_t)a1, v593);
      *(_DWORD *)(v594 + 16) |= 0x80000u;
      v596 = (JSC::JSCell *)WebCore::JSHTMLTitleElementPrototype::create(v592, a1, v594, v595);
      v597 = WebCore::JSHTMLTitleElement::createStructure((uint64_t *)v592, (uint64_t)a1, v596);
      v591 = WebCore::cacheDOMStructure((JSCell *)a1, v597, (uint64_t)&WebCore::JSHTMLTitleElement::s_info);
LABEL_652:
      v598 = (WebCore::JSHTMLTitleElement *)*((_QWORD *)a1 + 7);
      v599 = (_QWORD *)WebCore::JSHTMLTitleElement::subspaceForImpl(v598, (JSC::VM *)a2);
      SlowCase = v599[3];
      if (SlowCase < v599[4])
        goto LABEL_653;
      SlowCase = v599[5];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
      }
      else
      {
        v748 = *(_QWORD *)(SlowCase + 8) ^ v599[6];
        v599[4] = SlowCase + HIDWORD(v748);
        v599[5] = SlowCase + (int)v748;
LABEL_653:
        v599[3] = SlowCase + 48;
      }
      *(_DWORD *)SlowCase = 0;
      WebCore::JSDOMObject::JSDOMObject(SlowCase, v591);
      *(_QWORD *)(SlowCase + 24) = v4;
      *(_QWORD *)(SlowCase + 32) = 0;
      if (*((_BYTE *)v598 + 755))
LABEL_267:
        __dmb(0xAu);
      goto LABEL_268;
    default:
      if ((*(_WORD *)(v4 + 28) & 0x100) != 0)
        return WebCore::createWrapper<WebCore::HTMLUnknownElement,WebCore::HTMLElement>(a1, (JSC::VM *)a2, a3);
      else
        return WebCore::createWrapper<WebCore::HTMLElement,WebCore::HTMLElement>(a1, a2, a3);
  }
}

unint64_t WebCore::createHTMLAttachmentElementWrapper(WebCore::JSHTMLElement **a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v4;
  WebCore::JSHTMLElement *v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSHTMLElement *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  WebCore::JSHTMLAttachmentElement *v21;
  _QWORD *v22;
  unint64_t SlowCase;
  WebCore::JSHTMLElement *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *Allocator;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v4 = *(_QWORD *)a2;
  if ((~*(unsigned __int16 *)(*(_QWORD *)a2 + 28) & 0x110) == 0)
    return WebCore::createWrapper<WebCore::HTMLUnknownElement,WebCore::HTMLElement>((JSC::VM *)a1, a2, a3);
  *(_QWORD *)a2 = 0;
  v6 = a1[412];
  if (v6)
  {
    v7 = *((_DWORD *)v6 - 2);
    v8 = ((unint64_t)&WebCore::JSHTMLAttachmentElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLAttachmentElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLAttachmentElement::s_info
                                                                        + ~((_QWORD)&WebCore::JSHTMLAttachmentElement::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = (char **)*((_QWORD *)v6 + 2 * v11);
    if (v12 == &WebCore::JSHTMLAttachmentElement::s_info)
    {
LABEL_8:
      v14 = *((_QWORD *)v6 + 2 * v11 + 1);
      if (v14)
        goto LABEL_10;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = (char **)*((_QWORD *)v6 + 2 * v11);
        ++v13;
        if (v12 == &WebCore::JSHTMLAttachmentElement::s_info)
          goto LABEL_8;
      }
    }
  }
  v15 = a1[7];
  v16 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v15, (JSC::VM *)a1, a3);
  Structure = WebCore::JSHTMLAttachmentElementPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLAttachmentElementPrototype::create(v15, (JSC::VM *)a1, Structure, v18);
  v20 = WebCore::JSHTMLAttachmentElement::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLAttachmentElement::s_info);
LABEL_10:
  v21 = a1[7];
  v22 = (_QWORD *)WebCore::JSHTMLAttachmentElement::subspaceForImpl(v21, a2);
  SlowCase = v22[3];
  if (SlowCase < v22[4])
  {
LABEL_11:
    v22[3] = SlowCase + 48;
    goto LABEL_12;
  }
  SlowCase = v22[5];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v22[6];
    v22[4] = SlowCase + HIDWORD(v33);
    v22[5] = SlowCase + (int)v33;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_12:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v21 + 755))
    __dmb(0xAu);
  v24 = a1[415];
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v25 = (uint64_t *)(v4 + 8);
  else
    v25 = 0;
  if (*((_DWORD *)v24 + 12))
  {
    v35 = v4;
    if ((SlowCase & 8) != 0)
      v30 = (SlowCase - 112) | 1;
    else
      v30 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v30 & 1) != 0)
      v31 = v30 + 47;
    else
      v31 = *(_QWORD *)v30 + 32;
    Allocator = *(_QWORD **)(v31 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v31 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v24;
    v34 = Allocator;
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)v24 + 4, &v35, (uint64_t *)&v34);
    v29 = (uint64_t)v34;
    if (!v34)
      return SlowCase;
  }
  else
  {
    if ((SlowCase & 8) != 0)
      v26 = (SlowCase - 112) | 1;
    else
      v26 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v26 & 1) != 0)
      v27 = v26 + 47;
    else
      v27 = *(_QWORD *)v26 + 32;
    v28 = *(_QWORD **)(v27 + 16);
    if (!v28)
      v28 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v27 + 16) = *v28;
    *v28 = SlowCase;
    v28[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    v28[2] = v24;
    v29 = *v25;
    *v25 = (uint64_t)v28;
    if (!v29)
      return SlowCase;
  }
  *(_QWORD *)(v29 + 8) = 3;
  return SlowCase;
}

unint64_t WebCore::createHTMLAudioElementWrapper(JSC::VM *a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::Node *v4;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSHTMLMediaElement *v15;
  uint64_t v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  WebCore::Node *v22;
  WebCore::Node *v23;

  v4 = *(WebCore::Node **)a2;
  if ((~*(unsigned __int16 *)(*(_QWORD *)a2 + 28) & 0x110) == 0)
    return WebCore::createWrapper<WebCore::HTMLUnknownElement,WebCore::HTMLElement>(a1, a2, a3);
  *(_QWORD *)a2 = 0;
  v23 = v4;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_9;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSHTMLAudioElement::s_info + ~((_QWORD)&WebCore::JSHTMLAudioElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLAudioElement::s_info + ~((_QWORD)&WebCore::JSHTMLAudioElement::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSHTMLAudioElement::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSHTMLAudioElement::s_info)
        goto LABEL_8;
    }
    goto LABEL_9;
  }
LABEL_8:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_9:
    v15 = (WebCore::JSHTMLMediaElement *)*((_QWORD *)a1 + 7);
    v16 = WebCore::getDOMStructure<WebCore::JSHTMLMediaElement>(v15, a1);
    Structure = WebCore::JSHTMLAudioElementPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, *(JSC::JSCell **)(v16 + 48));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSHTMLAudioElementPrototype::create(v15, a1, Structure, v18);
    v20 = WebCore::JSHTMLAudioElement::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLAudioElement::s_info);
  }
  v21 = WebCore::JSHTMLAudioElement::create(v14, a1, (uint64_t *)&v23);
  WebCore::cacheWrapper<WebCore::HTMLAudioElement,WebCore::JSHTMLAudioElement>(*((_QWORD *)a1 + 415), (uint64_t)v4, v21);
  v22 = v23;
  v23 = 0;
  if (v22)
  {
    if (*((_DWORD *)v22 + 6) == 2)
    {
      if ((*((_WORD *)v22 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v22);
    }
    else
    {
      *((_DWORD *)v22 + 6) -= 2;
    }
  }
  return v21;
}

unint64_t WebCore::createHTMLTableColElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLTableColElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLTableColElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLTableColElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLTableColElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLTableColElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLTableColElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLTableColElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLTableColElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLTableColElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLTableColElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4680);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4680);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4680);
    *(_QWORD *)(v27 + 4680) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4680);
  *(_QWORD *)(v23 + 4680) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLDataElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  unint64_t SlowCase;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *Allocator;
  uint64_t v45;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  WTF *v53;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLDataElement::s_info + ~((_QWORD)&WebCore::JSHTMLDataElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDataElement::s_info + ~((_QWORD)&WebCore::JSHTMLDataElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLDataElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLDataElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLDataElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLDataElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLDataElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLDataElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4256);
  if (v24)
    goto LABEL_31;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v51 = *(_QWORD *)(v27 + 4256);
  if (!v51)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v53, "IsoSpace T");
    v52 = 0;
    MEMORY[0x19AEA3204](v28, &v53, v21 + 192, v21 + 1872, 40, 8, &v52);
    v30 = (uint64_t)v52;
    v52 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v53;
    v53 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v51 = v28;
    v32 = *(_QWORD *)(v27 + 4256);
    *(_QWORD *)(v27 + 4256) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      v34 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v25 + 2832, v33 + 1, (unint64_t)&v51);
      v33 = *(unsigned int *)(v25 + 2844);
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = *v34;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
    }
    *(_DWORD *)(v25 + 2844) = v33 + 1;
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v23 + 4256);
  *(_QWORD *)(v23 + 4256) = v24;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v25);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_30;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_30:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_31:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_32:
    v24[3] = SlowCase + 48;
    goto LABEL_33;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v50 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v50);
    v24[5] = SlowCase + (int)v50;
    goto LABEL_32;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_33:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v40 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v41 = (uint64_t *)((char *)v4 + 8);
  else
    v41 = 0;
  if (!*(_DWORD *)(v40 + 48))
  {
    if ((SlowCase & 8) != 0)
      v42 = (SlowCase - 112) | 1;
    else
      v42 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v42 & 1) != 0)
      v43 = v42 + 47;
    else
      v43 = *(_QWORD *)v42 + 32;
    Allocator = *(_QWORD **)(v43 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v43 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v40;
    v45 = *v41;
    *v41 = (uint64_t)Allocator;
    if (!v45)
      return SlowCase;
LABEL_58:
    *(_QWORD *)(v45 + 8) = 3;
    return SlowCase;
  }
  v53 = v4;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  v49 = *(_QWORD **)(v48 + 16);
  if (!v49)
    v49 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *v49;
  *v49 = SlowCase;
  v49[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v49[2] = v40;
  v52 = v49;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v40 + 32), (uint64_t *)&v53, (uint64_t *)&v52);
  v45 = (uint64_t)v52;
  if (v52)
    goto LABEL_58;
  return SlowCase;
}

unint64_t WebCore::createHTMLDataListElementWrapper(WebCore::JSHTMLElement **a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  WebCore::JSHTMLElement *v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSHTMLElement *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v18;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  WebCore::JSHTMLElement *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  WTF *v37;
  void *v38;
  int v39;
  unint64_t SlowCase;
  WebCore::JSHTMLElement *v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *Allocator;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  WTF *v53;

  v4 = *(WTF **)a2;
  if ((~*(unsigned __int16 *)(*(_QWORD *)a2 + 28) & 0x110) == 0)
    return WebCore::createWrapper<WebCore::HTMLUnknownElement,WebCore::HTMLElement>((JSC::VM *)a1, a2, a3);
  *(_QWORD *)a2 = 0;
  v6 = a1[412];
  if (v6)
  {
    v7 = *((_DWORD *)v6 - 2);
    v8 = ((unint64_t)&WebCore::JSHTMLDataListElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLDataListElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDataListElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLDataListElement::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = (char **)*((_QWORD *)v6 + 2 * v11);
    if (v12 == &WebCore::JSHTMLDataListElement::s_info)
    {
LABEL_8:
      v14 = *((_QWORD *)v6 + 2 * v11 + 1);
      if (v14)
        goto LABEL_10;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = (char **)*((_QWORD *)v6 + 2 * v11);
        ++v13;
        if (v12 == &WebCore::JSHTMLDataListElement::s_info)
          goto LABEL_8;
      }
    }
  }
  v15 = a1[7];
  v16 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v15, (JSC::VM *)a1, a3);
  Structure = WebCore::JSHTMLDataListElementPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSHTMLDataListElementPrototype::create(v15, Structure, v18, v19);
  v21 = WebCore::JSHTMLDataListElement::createStructure((uint64_t *)v15, (uint64_t)a1, v20);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v21, (uint64_t)&WebCore::JSHTMLDataListElement::s_info);
LABEL_10:
  v22 = a1[7];
  v23 = *((_QWORD *)v22 + 5182);
  v24 = *(_QWORD *)(v23 + 23536);
  v25 = *(_QWORD **)(v24 + 4264);
  if (v25)
    goto LABEL_33;
  v26 = *(_QWORD *)(v23 + 22648);
  if (__ldaxr((unsigned __int8 *)v26))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v26))
  {
    goto LABEL_15;
  }
  MEMORY[0x19AEA534C](v26);
LABEL_15:
  v28 = *(_QWORD *)(v26 + 2824);
  v51 = *(_QWORD *)(v28 + 4264);
  if (!v51)
  {
    v29 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v53, "IsoSpace T");
    v52 = 0;
    MEMORY[0x19AEA3204](v29, &v53, (char *)v22 + 192, (char *)v22 + 1872, 40, 8, &v52);
    v31 = (uint64_t)v52;
    v52 = 0;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = v53;
    v53 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 1)
        WTF::fastFree(v32, v30);
      else
        --*(_DWORD *)v32;
    }
    v51 = v29;
    v33 = *(_QWORD *)(v28 + 4264);
    *(_QWORD *)(v28 + 4264) = v29;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = *(unsigned int *)(v26 + 2844);
    if ((_DWORD)v34 == *(_DWORD *)(v26 + 2840))
    {
      v35 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v26 + 2832, v34 + 1, (unint64_t)&v51);
      v34 = *(unsigned int *)(v26 + 2844);
      *(_QWORD *)(*(_QWORD *)(v26 + 2832) + 8 * v34) = *v35;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v26 + 2832) + 8 * v34) = v29;
    }
    *(_DWORD *)(v26 + 2844) = v34 + 1;
  }
  v25 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v36 = *(_QWORD *)(v24 + 4264);
  *(_QWORD *)(v24 + 4264) = v25;
  if (v36)
  {
    v37 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v37, v38);
  }
  v39 = __ldxr((unsigned __int8 *)v26);
  if (v39 != 1)
  {
    __clrex();
    goto LABEL_32;
  }
  if (__stlxr(0, (unsigned __int8 *)v26))
LABEL_32:
    WTF::Lock::unlockSlow((WTF::Lock *)v26);
LABEL_33:
  SlowCase = v25[3];
  if (SlowCase < v25[4])
  {
LABEL_34:
    v25[3] = SlowCase + 48;
    goto LABEL_35;
  }
  SlowCase = v25[5];
  if ((SlowCase & 1) == 0)
  {
    v50 = *(_QWORD *)(SlowCase + 8) ^ v25[6];
    v25[4] = SlowCase + HIDWORD(v50);
    v25[5] = SlowCase + (int)v50;
    goto LABEL_34;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_35:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v22 + 755))
    __dmb(0xAu);
  v41 = a1[415];
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v42 = (uint64_t *)((char *)v4 + 8);
  else
    v42 = 0;
  if (*((_DWORD *)v41 + 12))
  {
    v53 = v4;
    if ((SlowCase & 8) != 0)
      v47 = (SlowCase - 112) | 1;
    else
      v47 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v47 & 1) != 0)
      v48 = v47 + 47;
    else
      v48 = *(_QWORD *)v47 + 32;
    Allocator = *(_QWORD **)(v48 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v48 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v41;
    v52 = Allocator;
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)v41 + 4, (uint64_t *)&v53, (uint64_t *)&v52);
    v46 = (uint64_t)v52;
    if (!v52)
      return SlowCase;
  }
  else
  {
    if ((SlowCase & 8) != 0)
      v43 = (SlowCase - 112) | 1;
    else
      v43 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v43 & 1) != 0)
      v44 = v43 + 47;
    else
      v44 = *(_QWORD *)v43 + 32;
    v45 = *(_QWORD **)(v44 + 16);
    if (!v45)
      v45 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v44 + 16) = *v45;
    *v45 = SlowCase;
    v45[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    v45[2] = v41;
    v46 = *v42;
    *v42 = (uint64_t)v45;
    if (!v46)
      return SlowCase;
  }
  *(_QWORD *)(v46 + 8) = 3;
  return SlowCase;
}

unint64_t WebCore::createHTMLModElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLModElement::s_info + ~((_QWORD)&WebCore::JSHTMLModElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLModElement::s_info + ~((_QWORD)&WebCore::JSHTMLModElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLModElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLModElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLModElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLModElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLModElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLModElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4512);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4512);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4512);
    *(_QWORD *)(v27 + 4512) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4512);
  *(_QWORD *)(v23 + 4512) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLDetailsElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  unint64_t SlowCase;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *Allocator;
  uint64_t v45;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  WTF *v53;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLDetailsElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLDetailsElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDetailsElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLDetailsElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLDetailsElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLDetailsElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLDetailsElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLDetailsElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLDetailsElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLDetailsElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4272);
  if (v24)
    goto LABEL_31;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v51 = *(_QWORD *)(v27 + 4272);
  if (!v51)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v53, "IsoSpace T");
    v52 = 0;
    MEMORY[0x19AEA3204](v28, &v53, v21 + 192, v21 + 1872, 40, 8, &v52);
    v30 = (uint64_t)v52;
    v52 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v53;
    v53 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v51 = v28;
    v32 = *(_QWORD *)(v27 + 4272);
    *(_QWORD *)(v27 + 4272) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      v34 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v25 + 2832, v33 + 1, (unint64_t)&v51);
      v33 = *(unsigned int *)(v25 + 2844);
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = *v34;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
    }
    *(_DWORD *)(v25 + 2844) = v33 + 1;
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v23 + 4272);
  *(_QWORD *)(v23 + 4272) = v24;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v25);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_30;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_30:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_31:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_32:
    v24[3] = SlowCase + 48;
    goto LABEL_33;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v50 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v50);
    v24[5] = SlowCase + (int)v50;
    goto LABEL_32;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_33:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v40 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v41 = (uint64_t *)((char *)v4 + 8);
  else
    v41 = 0;
  if (!*(_DWORD *)(v40 + 48))
  {
    if ((SlowCase & 8) != 0)
      v42 = (SlowCase - 112) | 1;
    else
      v42 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v42 & 1) != 0)
      v43 = v42 + 47;
    else
      v43 = *(_QWORD *)v42 + 32;
    Allocator = *(_QWORD **)(v43 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v43 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v40;
    v45 = *v41;
    *v41 = (uint64_t)Allocator;
    if (!v45)
      return SlowCase;
LABEL_58:
    *(_QWORD *)(v45 + 8) = 3;
    return SlowCase;
  }
  v53 = v4;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  v49 = *(_QWORD **)(v48 + 16);
  if (!v49)
    v49 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *v49;
  *v49 = SlowCase;
  v49[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v49[2] = v40;
  v52 = v49;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v40 + 32), (uint64_t *)&v53, (uint64_t *)&v52);
  v45 = (uint64_t)v52;
  if (v52)
    goto LABEL_58;
  return SlowCase;
}

unint64_t WebCore::createHTMLDialogElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  unint64_t SlowCase;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *Allocator;
  uint64_t v45;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  WTF *v53;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLDialogElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLDialogElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDialogElement::s_info
                                                                    + ~((_QWORD)&WebCore::JSHTMLDialogElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLDialogElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLDialogElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLDialogElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLDialogElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLDialogElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLDialogElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4280);
  if (v24)
    goto LABEL_31;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v51 = *(_QWORD *)(v27 + 4280);
  if (!v51)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v53, "IsoSpace T");
    v52 = 0;
    MEMORY[0x19AEA3204](v28, &v53, v21 + 192, v21 + 1872, 40, 8, &v52);
    v30 = (uint64_t)v52;
    v52 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v53;
    v53 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v51 = v28;
    v32 = *(_QWORD *)(v27 + 4280);
    *(_QWORD *)(v27 + 4280) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      v34 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v25 + 2832, v33 + 1, (unint64_t)&v51);
      v33 = *(unsigned int *)(v25 + 2844);
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = *v34;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
    }
    *(_DWORD *)(v25 + 2844) = v33 + 1;
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v23 + 4280);
  *(_QWORD *)(v23 + 4280) = v24;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v25);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_30;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_30:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_31:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_32:
    v24[3] = SlowCase + 48;
    goto LABEL_33;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v50 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v50);
    v24[5] = SlowCase + (int)v50;
    goto LABEL_32;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_33:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v40 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v41 = (uint64_t *)((char *)v4 + 8);
  else
    v41 = 0;
  if (!*(_DWORD *)(v40 + 48))
  {
    if ((SlowCase & 8) != 0)
      v42 = (SlowCase - 112) | 1;
    else
      v42 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v42 & 1) != 0)
      v43 = v42 + 47;
    else
      v43 = *(_QWORD *)v42 + 32;
    Allocator = *(_QWORD **)(v43 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v43 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v40;
    v45 = *v41;
    *v41 = (uint64_t)Allocator;
    if (!v45)
      return SlowCase;
LABEL_58:
    *(_QWORD *)(v45 + 8) = 3;
    return SlowCase;
  }
  v53 = v4;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  v49 = *(_QWORD **)(v48 + 16);
  if (!v49)
    v49 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *v49;
  *v49 = SlowCase;
  v49[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v49[2] = v40;
  v52 = v49;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v40 + 32), (uint64_t *)&v53, (uint64_t *)&v52);
  v45 = (uint64_t)v52;
  if (v52)
    goto LABEL_58;
  return SlowCase;
}

unint64_t WebCore::createHTMLDirectoryElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  unint64_t SlowCase;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *Allocator;
  uint64_t v45;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  WTF *v53;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLDirectoryElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLDirectoryElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDirectoryElement::s_info
                                                                       + ~((_QWORD)&WebCore::JSHTMLDirectoryElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLDirectoryElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLDirectoryElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLDirectoryElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLDirectoryElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLDirectoryElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLDirectoryElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4288);
  if (v24)
    goto LABEL_31;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v51 = *(_QWORD *)(v27 + 4288);
  if (!v51)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v53, "IsoSpace T");
    v52 = 0;
    MEMORY[0x19AEA3204](v28, &v53, v21 + 192, v21 + 1872, 40, 8, &v52);
    v30 = (uint64_t)v52;
    v52 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v53;
    v53 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v51 = v28;
    v32 = *(_QWORD *)(v27 + 4288);
    *(_QWORD *)(v27 + 4288) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      v34 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v25 + 2832, v33 + 1, (unint64_t)&v51);
      v33 = *(unsigned int *)(v25 + 2844);
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = *v34;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
    }
    *(_DWORD *)(v25 + 2844) = v33 + 1;
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v23 + 4288);
  *(_QWORD *)(v23 + 4288) = v24;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v25);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_30;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_30:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_31:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_32:
    v24[3] = SlowCase + 48;
    goto LABEL_33;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v50 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v50);
    v24[5] = SlowCase + (int)v50;
    goto LABEL_32;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_33:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v40 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v41 = (uint64_t *)((char *)v4 + 8);
  else
    v41 = 0;
  if (!*(_DWORD *)(v40 + 48))
  {
    if ((SlowCase & 8) != 0)
      v42 = (SlowCase - 112) | 1;
    else
      v42 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v42 & 1) != 0)
      v43 = v42 + 47;
    else
      v43 = *(_QWORD *)v42 + 32;
    Allocator = *(_QWORD **)(v43 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v43 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v40;
    v45 = *v41;
    *v41 = (uint64_t)Allocator;
    if (!v45)
      return SlowCase;
LABEL_58:
    *(_QWORD *)(v45 + 8) = 3;
    return SlowCase;
  }
  v53 = v4;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  v49 = *(_QWORD **)(v48 + 16);
  if (!v49)
    v49 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *v49;
  *v49 = SlowCase;
  v49[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v49[2] = v40;
  v52 = v49;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v40 + 32), (uint64_t *)&v53, (uint64_t *)&v52);
  v45 = (uint64_t)v52;
  if (v52)
    goto LABEL_58;
  return SlowCase;
}

unint64_t WebCore::createHTMLDListElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  unint64_t SlowCase;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *Allocator;
  uint64_t v45;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  WTF *v53;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLDListElement::s_info + ~((_QWORD)&WebCore::JSHTMLDListElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLDListElement::s_info + ~((_QWORD)&WebCore::JSHTMLDListElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLDListElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLDListElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLDListElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLDListElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLDListElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLDListElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4248);
  if (v24)
    goto LABEL_31;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v51 = *(_QWORD *)(v27 + 4248);
  if (!v51)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v53, "IsoSpace T");
    v52 = 0;
    MEMORY[0x19AEA3204](v28, &v53, v21 + 192, v21 + 1872, 40, 8, &v52);
    v30 = (uint64_t)v52;
    v52 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v53;
    v53 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v51 = v28;
    v32 = *(_QWORD *)(v27 + 4248);
    *(_QWORD *)(v27 + 4248) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      v34 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v25 + 2832, v33 + 1, (unint64_t)&v51);
      v33 = *(unsigned int *)(v25 + 2844);
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = *v34;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
    }
    *(_DWORD *)(v25 + 2844) = v33 + 1;
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v23 + 4248);
  *(_QWORD *)(v23 + 4248) = v24;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v25);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_30;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_30:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_31:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_32:
    v24[3] = SlowCase + 48;
    goto LABEL_33;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v50 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v50);
    v24[5] = SlowCase + (int)v50;
    goto LABEL_32;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_33:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v40 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v41 = (uint64_t *)((char *)v4 + 8);
  else
    v41 = 0;
  if (!*(_DWORD *)(v40 + 48))
  {
    if ((SlowCase & 8) != 0)
      v42 = (SlowCase - 112) | 1;
    else
      v42 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v42 & 1) != 0)
      v43 = v42 + 47;
    else
      v43 = *(_QWORD *)v42 + 32;
    Allocator = *(_QWORD **)(v43 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v43 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v40;
    v45 = *v41;
    *v41 = (uint64_t)Allocator;
    if (!v45)
      return SlowCase;
LABEL_58:
    *(_QWORD *)(v45 + 8) = 3;
    return SlowCase;
  }
  v53 = v4;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  v49 = *(_QWORD **)(v48 + 16);
  if (!v49)
    v49 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *v49;
  *v49 = SlowCase;
  v49[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v49[2] = v40;
  v52 = v49;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v40 + 32), (uint64_t *)&v53, (uint64_t *)&v52);
  v45 = (uint64_t)v52;
  if (v52)
    goto LABEL_58;
  return SlowCase;
}

unint64_t WebCore::createHTMLEmbedElementWrapper(WebCore::JSHTMLElement **a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  WebCore::JSHTMLElement *v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSHTMLElement *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v18;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  WebCore::JSHTMLElement *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  unint64_t SlowCase;
  WebCore::JSHTMLElement *v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *Allocator;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *(WTF **)a2;
  if ((~*(unsigned __int16 *)(*(_QWORD *)a2 + 28) & 0x110) == 0)
    return WebCore::createWrapper<WebCore::HTMLUnknownElement,WebCore::HTMLElement>((JSC::VM *)a1, a2, a3);
  *(_QWORD *)a2 = 0;
  v6 = a1[412];
  if (v6)
  {
    v7 = *((_DWORD *)v6 - 2);
    v8 = ((unint64_t)&WebCore::JSHTMLEmbedElement::s_info + ~((_QWORD)&WebCore::JSHTMLEmbedElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLEmbedElement::s_info + ~((_QWORD)&WebCore::JSHTMLEmbedElement::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = (char **)*((_QWORD *)v6 + 2 * v11);
    if (v12 == &WebCore::JSHTMLEmbedElement::s_info)
    {
LABEL_8:
      v14 = *((_QWORD *)v6 + 2 * v11 + 1);
      if (v14)
        goto LABEL_10;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = (char **)*((_QWORD *)v6 + 2 * v11);
        ++v13;
        if (v12 == &WebCore::JSHTMLEmbedElement::s_info)
          goto LABEL_8;
      }
    }
  }
  v15 = a1[7];
  v16 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v15, (JSC::VM *)a1, a3);
  Structure = WebCore::JSHTMLEmbedElementPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSHTMLEmbedElementPrototype::create(v15, Structure, v18, v19);
  v21 = WebCore::JSHTMLEmbedElement::createStructure((uint64_t *)v15, (uint64_t)a1, v20);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v21, (uint64_t)&WebCore::JSHTMLEmbedElement::s_info);
LABEL_10:
  v22 = a1[7];
  v23 = *((_QWORD *)v22 + 5182);
  v24 = *(_QWORD *)(v23 + 23536);
  v25 = *(_QWORD **)(v24 + 4320);
  if (v25)
    goto LABEL_32;
  v26 = *(_QWORD *)(v23 + 22648);
  if (__ldaxr((unsigned __int8 *)v26))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v26))
  {
    goto LABEL_15;
  }
  MEMORY[0x19AEA534C](v26);
LABEL_15:
  v28 = *(_QWORD *)(v26 + 2824);
  v50 = *(_QWORD *)(v28 + 4320);
  if (!v50)
  {
    v29 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v29, &v52, (char *)v22 + 192, (char *)v22 + 1872, 40, 8, &v51);
    v31 = (uint64_t)v51;
    v51 = 0;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = v52;
    v52 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 1)
        WTF::fastFree(v32, v30);
      else
        --*(_DWORD *)v32;
    }
    v50 = v29;
    v33 = *(_QWORD *)(v28 + 4320);
    *(_QWORD *)(v28 + 4320) = v29;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = *(unsigned int *)(v26 + 2844);
    if ((_DWORD)v34 == *(_DWORD *)(v26 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v26 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v26 + 2832) + 8 * v34) = v29;
      *(_DWORD *)(v26 + 2844) = v34 + 1;
    }
  }
  v25 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v24 + 4320);
  *(_QWORD *)(v24 + 4320) = v25;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v26);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_31;
  }
  if (__stlxr(0, (unsigned __int8 *)v26))
LABEL_31:
    WTF::Lock::unlockSlow((WTF::Lock *)v26);
LABEL_32:
  SlowCase = v25[3];
  if (SlowCase < v25[4])
  {
LABEL_33:
    v25[3] = SlowCase + 48;
    goto LABEL_34;
  }
  SlowCase = v25[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v25[6];
    v25[4] = SlowCase + HIDWORD(v49);
    v25[5] = SlowCase + (int)v49;
    goto LABEL_33;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_34:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v22 + 755))
    __dmb(0xAu);
  v40 = a1[415];
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v41 = (uint64_t *)((char *)v4 + 8);
  else
    v41 = 0;
  if (*((_DWORD *)v40 + 12))
  {
    v52 = v4;
    if ((SlowCase & 8) != 0)
      v46 = (SlowCase - 112) | 1;
    else
      v46 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v46 & 1) != 0)
      v47 = v46 + 47;
    else
      v47 = *(_QWORD *)v46 + 32;
    Allocator = *(_QWORD **)(v47 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v47 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v40;
    v51 = Allocator;
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)v40 + 4, (uint64_t *)&v52, (uint64_t *)&v51);
    v45 = (uint64_t)v51;
    if (!v51)
      return SlowCase;
  }
  else
  {
    if ((SlowCase & 8) != 0)
      v42 = (SlowCase - 112) | 1;
    else
      v42 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v42 & 1) != 0)
      v43 = v42 + 47;
    else
      v43 = *(_QWORD *)v42 + 32;
    v44 = *(_QWORD **)(v43 + 16);
    if (!v44)
      v44 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v43 + 16) = *v44;
    *v44 = SlowCase;
    v44[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    v44[2] = v40;
    v45 = *v41;
    *v41 = (uint64_t)v44;
    if (!v45)
      return SlowCase;
  }
  *(_QWORD *)(v45 + 8) = 3;
  return SlowCase;
}

unint64_t WebCore::createHTMLFontElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLFontElement::s_info + ~((_QWORD)&WebCore::JSHTMLFontElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLFontElement::s_info + ~((_QWORD)&WebCore::JSHTMLFontElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLFontElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLFontElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLFontElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLFontElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLFontElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLFontElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4336);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4336);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4336);
    *(_QWORD *)(v27 + 4336) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4336);
  *(_QWORD *)(v23 + 4336) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLFrameElementWrapper(uint64_t a1, WTF **a2)
{
  WTF *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  WTF *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  WTF *v19;
  void *v20;
  int v21;
  unint64_t SlowCase;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *Allocator;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  WTF *v36;

  v3 = *a2;
  *a2 = 0;
  v4 = WebCore::getDOMStructure<WebCore::JSHTMLFrameElement>(*(WebCore::JSHTMLFrameElement **)(a1 + 56), (JSC::VM *)a1);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(v5 + 41456);
  v7 = *(_QWORD *)(v6 + 23536);
  v8 = *(_QWORD **)(v7 + 4360);
  if (!v8)
  {
    v9 = *(_QWORD *)(v6 + 22648);
    if (__ldaxr((unsigned __int8 *)v9))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v9))
    {
      goto LABEL_6;
    }
    MEMORY[0x19AEA534C](v9);
LABEL_6:
    v11 = *(_QWORD *)(v9 + 2824);
    v34 = *(_QWORD *)(v11 + 4360);
    if (!v34)
    {
      v12 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v36, "IsoSpace T");
      v35 = 0;
      MEMORY[0x19AEA3204](v12, &v36, v5 + 192, v5 + 1872, 40, 8, &v35);
      v14 = (uint64_t)v35;
      v35 = 0;
      if (v14)
        (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
      v15 = v36;
      v36 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 1)
          WTF::fastFree(v15, v13);
        else
          --*(_DWORD *)v15;
      }
      v34 = v12;
      v16 = *(_QWORD *)(v11 + 4360);
      *(_QWORD *)(v11 + 4360) = v12;
      if (v16)
        (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
      v17 = *(unsigned int *)(v9 + 2844);
      if ((_DWORD)v17 == *(_DWORD *)(v9 + 2840))
      {
        WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v9 + 2832, (unint64_t)&v34);
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)(v9 + 2832) + 8 * v17) = v12;
        *(_DWORD *)(v9 + 2844) = v17 + 1;
      }
    }
    v8 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v18 = *(_QWORD *)(v7 + 4360);
    *(_QWORD *)(v7 + 4360) = v8;
    if (v18)
    {
      v19 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v19, v20);
    }
    v21 = __ldxr((unsigned __int8 *)v9);
    if (v21 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v9))
        goto LABEL_23;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v9);
  }
LABEL_23:
  SlowCase = v8[3];
  if (SlowCase < v8[4])
  {
LABEL_24:
    v8[3] = SlowCase + 48;
    goto LABEL_25;
  }
  SlowCase = v8[5];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v8[6];
    v8[4] = SlowCase + HIDWORD(v33);
    v8[5] = SlowCase + (int)v33;
    goto LABEL_24;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v4);
  *(_QWORD *)(SlowCase + 24) = v3;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v23 = *(_QWORD *)(a1 + 3320);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v3)
    v24 = (uint64_t *)((char *)v3 + 8);
  else
    v24 = 0;
  if (!*(_DWORD *)(v23 + 48))
  {
    if ((SlowCase & 8) != 0)
      v25 = (SlowCase - 112) | 1;
    else
      v25 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v23;
    v28 = *v24;
    *v24 = (uint64_t)Allocator;
    if (!v28)
      return SlowCase;
LABEL_50:
    *(_QWORD *)(v28 + 8) = 3;
    return SlowCase;
  }
  v36 = v3;
  if ((SlowCase & 8) != 0)
    v30 = (SlowCase - 112) | 1;
  else
    v30 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v30 & 1) != 0)
    v31 = v30 + 47;
  else
    v31 = *(_QWORD *)v30 + 32;
  v32 = *(_QWORD **)(v31 + 16);
  if (!v32)
    v32 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v31 + 16) = *v32;
  *v32 = SlowCase;
  v32[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v32[2] = v23;
  v35 = v32;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v23 + 32), (uint64_t *)&v36, (uint64_t *)&v35);
  v28 = (uint64_t)v35;
  if (v35)
    goto LABEL_50;
  return SlowCase;
}

unint64_t WebCore::createHTMLFrameSetElementWrapper(uint64_t a1, WTF **a2)
{
  WTF *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  WTF *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  WTF *v19;
  void *v20;
  int v21;
  unint64_t SlowCase;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *Allocator;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  WTF *v36;

  v3 = *a2;
  *a2 = 0;
  v4 = WebCore::getDOMStructure<WebCore::JSHTMLFrameSetElement>(*(WebCore::JSHTMLFrameSetElement **)(a1 + 56), (JSC::VM *)a1);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(v5 + 41456);
  v7 = *(_QWORD *)(v6 + 23536);
  v8 = *(_QWORD **)(v7 + 4368);
  if (!v8)
  {
    v9 = *(_QWORD *)(v6 + 22648);
    if (__ldaxr((unsigned __int8 *)v9))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v9))
    {
      goto LABEL_6;
    }
    MEMORY[0x19AEA534C](v9);
LABEL_6:
    v11 = *(_QWORD *)(v9 + 2824);
    v34 = *(_QWORD *)(v11 + 4368);
    if (!v34)
    {
      v12 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v36, "IsoSpace T");
      v35 = 0;
      MEMORY[0x19AEA3204](v12, &v36, v5 + 192, v5 + 1872, 40, 8, &v35);
      v14 = (uint64_t)v35;
      v35 = 0;
      if (v14)
        (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
      v15 = v36;
      v36 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 1)
          WTF::fastFree(v15, v13);
        else
          --*(_DWORD *)v15;
      }
      v34 = v12;
      v16 = *(_QWORD *)(v11 + 4368);
      *(_QWORD *)(v11 + 4368) = v12;
      if (v16)
        (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
      v17 = *(unsigned int *)(v9 + 2844);
      if ((_DWORD)v17 == *(_DWORD *)(v9 + 2840))
      {
        WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v9 + 2832, (unint64_t)&v34);
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)(v9 + 2832) + 8 * v17) = v12;
        *(_DWORD *)(v9 + 2844) = v17 + 1;
      }
    }
    v8 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v18 = *(_QWORD *)(v7 + 4368);
    *(_QWORD *)(v7 + 4368) = v8;
    if (v18)
    {
      v19 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v19, v20);
    }
    v21 = __ldxr((unsigned __int8 *)v9);
    if (v21 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v9))
        goto LABEL_23;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v9);
  }
LABEL_23:
  SlowCase = v8[3];
  if (SlowCase < v8[4])
  {
LABEL_24:
    v8[3] = SlowCase + 48;
    goto LABEL_25;
  }
  SlowCase = v8[5];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v8[6];
    v8[4] = SlowCase + HIDWORD(v33);
    v8[5] = SlowCase + (int)v33;
    goto LABEL_24;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v4);
  *(_QWORD *)(SlowCase + 24) = v3;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v23 = *(_QWORD *)(a1 + 3320);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v3)
    v24 = (uint64_t *)((char *)v3 + 8);
  else
    v24 = 0;
  if (!*(_DWORD *)(v23 + 48))
  {
    if ((SlowCase & 8) != 0)
      v25 = (SlowCase - 112) | 1;
    else
      v25 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v23;
    v28 = *v24;
    *v24 = (uint64_t)Allocator;
    if (!v28)
      return SlowCase;
LABEL_50:
    *(_QWORD *)(v28 + 8) = 3;
    return SlowCase;
  }
  v36 = v3;
  if ((SlowCase & 8) != 0)
    v30 = (SlowCase - 112) | 1;
  else
    v30 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v30 & 1) != 0)
    v31 = v30 + 47;
  else
    v31 = *(_QWORD *)v30 + 32;
  v32 = *(_QWORD **)(v31 + 16);
  if (!v32)
    v32 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v31 + 16) = *v32;
  *v32 = SlowCase;
  v32[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v32[2] = v23;
  v35 = v32;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v23 + 32), (uint64_t *)&v36, (uint64_t *)&v35);
  v28 = (uint64_t)v35;
  if (v35)
    goto LABEL_50;
  return SlowCase;
}

unint64_t WebCore::createHTMLHeadingElementWrapper(JSC::VM *a1, WebCore::Node **a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::Node *v3;
  unint64_t v4;
  unint64_t v6;
  WebCore::Node *v7;

  v3 = *a2;
  *a2 = 0;
  v7 = v3;
  v4 = WebCore::createWrapper<WebCore::HTMLHeadingElement,WebCore::HTMLHeadingElement>(a1, &v7, a3);
  if (v7)
  {
    v6 = v4;
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) != 0)
        return v4;
      WebCore::Node::removedLastRef(v7);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
    return v6;
  }
  return v4;
}

unint64_t WebCore::createHTMLHRElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *Allocator;
  uint64_t v45;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  WTF *v51;
  uint64_t v52;
  _QWORD *v53;
  WTF *v54;

  v4 = *a2;
  *a2 = 0;
  v51 = v4;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLHRElement::s_info + ~((_QWORD)&WebCore::JSHTMLHRElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLHRElement::s_info + ~((_QWORD)&WebCore::JSHTMLHRElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLHRElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLHRElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLHRElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLHRElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLHRElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLHRElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4376);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v52 = *(_QWORD *)(v27 + 4376);
  if (!v52)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v54, "IsoSpace T");
    v53 = 0;
    MEMORY[0x19AEA3204](v28, &v54, v21 + 192, v21 + 1872, 40, 8, &v53);
    v30 = (uint64_t)v53;
    v53 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v54;
    v54 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v52 = v28;
    v32 = *(_QWORD *)(v27 + 4376);
    *(_QWORD *)(v27 + 4376) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v52);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4376);
  *(_QWORD *)(v23 + 4376) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v50 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v50);
    v24[5] = SlowCase + (int)v50;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  v39 = (uint64_t)v51;
  v51 = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v39;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v40 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v41 = (uint64_t *)((char *)v4 + 8);
  else
    v41 = 0;
  if (!*(_DWORD *)(v40 + 48))
  {
    if ((SlowCase & 8) != 0)
      v42 = (SlowCase - 112) | 1;
    else
      v42 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v42 & 1) != 0)
      v43 = v42 + 47;
    else
      v43 = *(_QWORD *)v42 + 32;
    Allocator = *(_QWORD **)(v43 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v43 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v40;
    v45 = *v41;
    *v41 = (uint64_t)Allocator;
    if (!v45)
      goto LABEL_48;
LABEL_57:
    *(_QWORD *)(v45 + 8) = 3;
    goto LABEL_48;
  }
  v54 = v4;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  v49 = *(_QWORD **)(v48 + 16);
  if (!v49)
    v49 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *v49;
  *v49 = SlowCase;
  v49[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v49[2] = v40;
  v53 = v49;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v40 + 32), (uint64_t *)&v54, (uint64_t *)&v53);
  v45 = (uint64_t)v53;
  if (v53)
    goto LABEL_57;
LABEL_48:
  WTF::Ref<WebCore::HTMLElement,WTF::RawPtrTraits<WebCore::HTMLElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLElement>>::~Ref((uint64_t *)&v51);
  return SlowCase;
}

unint64_t WebCore::createHTMLLegendElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLLegendElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLLegendElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLLegendElement::s_info
                                                                    + ~((_QWORD)&WebCore::JSHTMLLegendElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLLegendElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLLegendElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLLegendElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLLegendElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLLegendElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLLegendElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4448);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4448);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4448);
    *(_QWORD *)(v27 + 4448) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4448);
  *(_QWORD *)(v23 + 4448) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLPreElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLPreElement::s_info + ~((_QWORD)&WebCore::JSHTMLPreElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLPreElement::s_info + ~((_QWORD)&WebCore::JSHTMLPreElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLPreElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLPreElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLPreElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLPreElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLPreElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLPreElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4592);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4592);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4592);
    *(_QWORD *)(v27 + 4592) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4592);
  *(_QWORD *)(v23 + 4592) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLMapElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLMapElement::s_info + ~((_QWORD)&WebCore::JSHTMLMapElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLMapElement::s_info + ~((_QWORD)&WebCore::JSHTMLMapElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLMapElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLMapElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLMapElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLMapElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLMapElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLMapElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4464);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4464);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4464);
    *(_QWORD *)(v27 + 4464) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4464);
  *(_QWORD *)(v23 + 4464) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLMarqueeElementWrapper(uint64_t a1, WTF **a2)
{
  WTF *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  WTF *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  WTF *v19;
  void *v20;
  int v21;
  unint64_t SlowCase;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *Allocator;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  WTF *v36;

  v3 = *a2;
  *a2 = 0;
  v4 = WebCore::getDOMStructure<WebCore::JSHTMLMarqueeElement>(*(WebCore::JSHTMLMarqueeElement **)(a1 + 56), (JSC::VM *)a1);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(v5 + 41456);
  v7 = *(_QWORD *)(v6 + 23536);
  v8 = *(_QWORD **)(v7 + 4472);
  if (!v8)
  {
    v9 = *(_QWORD *)(v6 + 22648);
    if (__ldaxr((unsigned __int8 *)v9))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v9))
    {
      goto LABEL_6;
    }
    MEMORY[0x19AEA534C](v9);
LABEL_6:
    v11 = *(_QWORD *)(v9 + 2824);
    v34 = *(_QWORD *)(v11 + 4472);
    if (!v34)
    {
      v12 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v36, "IsoSpace T");
      v35 = 0;
      MEMORY[0x19AEA3204](v12, &v36, v5 + 192, v5 + 1872, 40, 8, &v35);
      v14 = (uint64_t)v35;
      v35 = 0;
      if (v14)
        (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
      v15 = v36;
      v36 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 1)
          WTF::fastFree(v15, v13);
        else
          --*(_DWORD *)v15;
      }
      v34 = v12;
      v16 = *(_QWORD *)(v11 + 4472);
      *(_QWORD *)(v11 + 4472) = v12;
      if (v16)
        (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
      v17 = *(unsigned int *)(v9 + 2844);
      if ((_DWORD)v17 == *(_DWORD *)(v9 + 2840))
      {
        WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v9 + 2832, (unint64_t)&v34);
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)(v9 + 2832) + 8 * v17) = v12;
        *(_DWORD *)(v9 + 2844) = v17 + 1;
      }
    }
    v8 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v18 = *(_QWORD *)(v7 + 4472);
    *(_QWORD *)(v7 + 4472) = v8;
    if (v18)
    {
      v19 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v19, v20);
    }
    v21 = __ldxr((unsigned __int8 *)v9);
    if (v21 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v9))
        goto LABEL_23;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v9);
  }
LABEL_23:
  SlowCase = v8[3];
  if (SlowCase < v8[4])
  {
LABEL_24:
    v8[3] = SlowCase + 48;
    goto LABEL_25;
  }
  SlowCase = v8[5];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v8[6];
    v8[4] = SlowCase + HIDWORD(v33);
    v8[5] = SlowCase + (int)v33;
    goto LABEL_24;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v4);
  *(_QWORD *)(SlowCase + 24) = v3;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v23 = *(_QWORD *)(a1 + 3320);
  if ((byte_1ECE81440 & 1) == 0)
  {
    qword_1ECE81438 = (uint64_t)&off_1E32997F0;
    byte_1ECE81440 = 1;
  }
  if (v3)
    v24 = (uint64_t *)((char *)v3 + 8);
  else
    v24 = 0;
  if (!*(_DWORD *)(v23 + 48))
  {
    if ((SlowCase & 8) != 0)
      v25 = (SlowCase - 112) | 1;
    else
      v25 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1ECE81438;
    Allocator[2] = v23;
    v28 = *v24;
    *v24 = (uint64_t)Allocator;
    if (!v28)
      return SlowCase;
LABEL_50:
    *(_QWORD *)(v28 + 8) = 3;
    return SlowCase;
  }
  v36 = v3;
  if ((SlowCase & 8) != 0)
    v30 = (SlowCase - 112) | 1;
  else
    v30 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v30 & 1) != 0)
    v31 = v30 + 47;
  else
    v31 = *(_QWORD *)v30 + 32;
  v32 = *(_QWORD **)(v31 + 16);
  if (!v32)
    v32 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v31 + 16) = *v32;
  *v32 = SlowCase;
  v32[1] = &qword_1ECE81438;
  v32[2] = v23;
  v35 = v32;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v23 + 32), (uint64_t *)&v36, (uint64_t *)&v35);
  v28 = (uint64_t)v35;
  if (v35)
    goto LABEL_50;
  return SlowCase;
}

unint64_t WebCore::createHTMLMenuElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLMenuElement::s_info + ~((_QWORD)&WebCore::JSHTMLMenuElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLMenuElement::s_info + ~((_QWORD)&WebCore::JSHTMLMenuElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLMenuElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLMenuElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLMenuElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLMenuElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLMenuElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLMenuElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4488);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4488);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4488);
    *(_QWORD *)(v27 + 4488) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4488);
  *(_QWORD *)(v23 + 4488) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLMeterElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLMeterElement::s_info + ~((_QWORD)&WebCore::JSHTMLMeterElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLMeterElement::s_info + ~((_QWORD)&WebCore::JSHTMLMeterElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLMeterElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLMeterElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLMeterElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLMeterElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLMeterElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLMeterElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4504);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4504);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4504);
    *(_QWORD *)(v27 + 4504) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4504);
  *(_QWORD *)(v23 + 4504) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLModelElementWrapper(WebCore::JSHTMLElement **a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  WebCore::JSHTMLElement *v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSHTMLElement *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v18;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  WebCore::JSHTMLElement *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  unint64_t SlowCase;
  WebCore::JSHTMLElement *v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *Allocator;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *(WTF **)a2;
  if ((~*(unsigned __int16 *)(*(_QWORD *)a2 + 28) & 0x110) == 0)
    return WebCore::createWrapper<WebCore::HTMLUnknownElement,WebCore::HTMLElement>((JSC::VM *)a1, a2, a3);
  *(_QWORD *)a2 = 0;
  v6 = a1[412];
  if (v6)
  {
    v7 = *((_DWORD *)v6 - 2);
    v8 = ((unint64_t)&WebCore::JSHTMLModelElement::s_info + ~((_QWORD)&WebCore::JSHTMLModelElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLModelElement::s_info + ~((_QWORD)&WebCore::JSHTMLModelElement::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = (char **)*((_QWORD *)v6 + 2 * v11);
    if (v12 == &WebCore::JSHTMLModelElement::s_info)
    {
LABEL_8:
      v14 = *((_QWORD *)v6 + 2 * v11 + 1);
      if (v14)
        goto LABEL_10;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = (char **)*((_QWORD *)v6 + 2 * v11);
        ++v13;
        if (v12 == &WebCore::JSHTMLModelElement::s_info)
          goto LABEL_8;
      }
    }
  }
  v15 = a1[7];
  v16 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v15, (JSC::VM *)a1, a3);
  Structure = WebCore::JSHTMLModelElementPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSHTMLModelElementPrototype::create(v15, Structure, v18, v19);
  v21 = WebCore::JSHTMLModelElement::createStructure((uint64_t *)v15, (uint64_t)a1, v20);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v21, (uint64_t)&WebCore::JSHTMLModelElement::s_info);
LABEL_10:
  v22 = a1[7];
  v23 = *((_QWORD *)v22 + 5182);
  v24 = *(_QWORD *)(v23 + 23536);
  v25 = *(_QWORD **)(v24 + 1408);
  if (v25)
    goto LABEL_32;
  v26 = *(_QWORD *)(v23 + 22648);
  if (__ldaxr((unsigned __int8 *)v26))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v26))
  {
    goto LABEL_15;
  }
  MEMORY[0x19AEA534C](v26);
LABEL_15:
  v28 = *(_QWORD *)(v26 + 2824);
  v50 = *(_QWORD *)(v28 + 1408);
  if (!v50)
  {
    v29 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v29, &v52, (char *)v22 + 192, (char *)v22 + 1872, 40, 8, &v51);
    v31 = (uint64_t)v51;
    v51 = 0;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = v52;
    v52 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 1)
        WTF::fastFree(v32, v30);
      else
        --*(_DWORD *)v32;
    }
    v50 = v29;
    v33 = *(_QWORD *)(v28 + 1408);
    *(_QWORD *)(v28 + 1408) = v29;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = *(unsigned int *)(v26 + 2844);
    if ((_DWORD)v34 == *(_DWORD *)(v26 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v26 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v26 + 2832) + 8 * v34) = v29;
      *(_DWORD *)(v26 + 2844) = v34 + 1;
    }
  }
  v25 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v24 + 1408);
  *(_QWORD *)(v24 + 1408) = v25;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v26);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_31;
  }
  if (__stlxr(0, (unsigned __int8 *)v26))
LABEL_31:
    WTF::Lock::unlockSlow((WTF::Lock *)v26);
LABEL_32:
  SlowCase = v25[3];
  if (SlowCase < v25[4])
  {
LABEL_33:
    v25[3] = SlowCase + 48;
    goto LABEL_34;
  }
  SlowCase = v25[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v25[6];
    v25[4] = SlowCase + HIDWORD(v49);
    v25[5] = SlowCase + (int)v49;
    goto LABEL_33;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_34:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v22 + 755))
    __dmb(0xAu);
  v40 = a1[415];
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v41 = (uint64_t *)((char *)v4 + 8);
  else
    v41 = 0;
  if (*((_DWORD *)v40 + 12))
  {
    v52 = v4;
    if ((SlowCase & 8) != 0)
      v46 = (SlowCase - 112) | 1;
    else
      v46 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v46 & 1) != 0)
      v47 = v46 + 47;
    else
      v47 = *(_QWORD *)v46 + 32;
    Allocator = *(_QWORD **)(v47 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v47 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v40;
    v51 = Allocator;
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)v40 + 4, (uint64_t *)&v52, (uint64_t *)&v51);
    v45 = (uint64_t)v51;
    if (!v51)
      return SlowCase;
  }
  else
  {
    if ((SlowCase & 8) != 0)
      v42 = (SlowCase - 112) | 1;
    else
      v42 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v42 & 1) != 0)
      v43 = v42 + 47;
    else
      v43 = *(_QWORD *)v42 + 32;
    v44 = *(_QWORD **)(v43 + 16);
    if (!v44)
      v44 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v43 + 16) = *v44;
    *v44 = SlowCase;
    v44[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    v44[2] = v40;
    v45 = *v41;
    *v41 = (uint64_t)v44;
    if (!v45)
      return SlowCase;
  }
  *(_QWORD *)(v45 + 8) = 3;
  return SlowCase;
}

unint64_t WebCore::createHTMLObjectElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLObjectElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLObjectElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLObjectElement::s_info
                                                                    + ~((_QWORD)&WebCore::JSHTMLObjectElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLObjectElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLObjectElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLObjectElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLObjectElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLObjectElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLObjectElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4528);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4528);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4528);
    *(_QWORD *)(v27 + 4528) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4528);
  *(_QWORD *)(v23 + 4528) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLOListElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLOListElement::s_info + ~((_QWORD)&WebCore::JSHTMLOListElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLOListElement::s_info + ~((_QWORD)&WebCore::JSHTMLOListElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLOListElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLOListElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLOListElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLOListElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLOListElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLOListElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4520);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4520);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4520);
    *(_QWORD *)(v27 + 4520) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4520);
  *(_QWORD *)(v23 + 4520) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLOptGroupElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLOptGroupElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLOptGroupElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLOptGroupElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLOptGroupElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLOptGroupElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLOptGroupElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLOptGroupElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLOptGroupElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLOptGroupElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLOptGroupElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4536);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4536);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4536);
    *(_QWORD *)(v27 + 4536) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4536);
  *(_QWORD *)(v23 + 4536) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLOutputElementWrapper(JSC::VM *a1, WebCore::Node **a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::Node *v3;
  unint64_t v4;
  WebCore::Node *v6;

  v3 = *a2;
  *a2 = 0;
  v6 = v3;
  v4 = WebCore::createWrapper<WebCore::HTMLOutputElement,WebCore::HTMLOutputElement>(a1, &v6, a3);
  if (v6)
  {
    if (*((_DWORD *)v6 + 6) == 2)
    {
      if ((*((_WORD *)v6 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v6);
    }
    else
    {
      *((_DWORD *)v6 + 6) -= 2;
    }
  }
  return v4;
}

unint64_t WebCore::createHTMLParamElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLParamElement::s_info + ~((_QWORD)&WebCore::JSHTMLParamElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLParamElement::s_info + ~((_QWORD)&WebCore::JSHTMLParamElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLParamElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLParamElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLParamElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLParamElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLParamElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLParamElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4576);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4576);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4576);
    *(_QWORD *)(v27 + 4576) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4576);
  *(_QWORD *)(v23 + 4576) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLPictureElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLPictureElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLPictureElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLPictureElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLPictureElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLPictureElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLPictureElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLPictureElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLPictureElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLPictureElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLPictureElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4584);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4584);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4584);
    *(_QWORD *)(v27 + 4584) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4584);
  *(_QWORD *)(v23 + 4584) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLSlotElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLSlotElement::s_info + ~((_QWORD)&WebCore::JSHTMLSlotElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLSlotElement::s_info + ~((_QWORD)&WebCore::JSHTMLSlotElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLSlotElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLSlotElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLSlotElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLSlotElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLSlotElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLSlotElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4632);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4632);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4632);
    *(_QWORD *)(v27 + 4632) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4632);
  *(_QWORD *)(v23 + 4632) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLSourceElementWrapper(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  unint64_t SlowCase;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *Allocator;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  WTF *v52;

  v4 = *a2;
  *a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLSourceElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLSourceElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLSourceElement::s_info
                                                                    + ~((_QWORD)&WebCore::JSHTMLSourceElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLSourceElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLSourceElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLSourceElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLSourceElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLSourceElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLSourceElement::s_info);
LABEL_8:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4640);
  if (v24)
    goto LABEL_30;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_13:
  v27 = *(_QWORD *)(v25 + 2824);
  v50 = *(_QWORD *)(v27 + 4640);
  if (!v50)
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v52, "IsoSpace T");
    v51 = 0;
    MEMORY[0x19AEA3204](v28, &v52, v21 + 192, v21 + 1872, 40, 8, &v51);
    v30 = (uint64_t)v51;
    v51 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v52;
    v52 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v50 = v28;
    v32 = *(_QWORD *)(v27 + 4640);
    *(_QWORD *)(v27 + 4640) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = *(unsigned int *)(v25 + 2844);
    if ((_DWORD)v33 == *(_DWORD *)(v25 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v25 + 2832, (unint64_t)&v50);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v25 + 2832) + 8 * v33) = v28;
      *(_DWORD *)(v25 + 2844) = v33 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v23 + 4640);
  *(_QWORD *)(v23 + 4640) = v24;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v25);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_30:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_31:
    v24[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v49 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v49);
    v24[5] = SlowCase + (int)v49;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *((_QWORD *)a1 + 415);
  if ((byte_1ECE81450 & 1) == 0)
  {
    qword_1ECE81448 = (uint64_t)&off_1E3299850;
    byte_1ECE81450 = 1;
  }
  if (v4)
    v40 = (uint64_t *)((char *)v4 + 8);
  else
    v40 = 0;
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v41 = (SlowCase - 112) | 1;
    else
      v41 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v41 & 1) != 0)
      v42 = v41 + 47;
    else
      v42 = *(_QWORD *)v41 + 32;
    Allocator = *(_QWORD **)(v42 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v42 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1ECE81448;
    Allocator[2] = v39;
    v44 = *v40;
    *v40 = (uint64_t)Allocator;
    if (!v44)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v44 + 8) = 3;
    return SlowCase;
  }
  v52 = v4;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  v48 = *(_QWORD **)(v47 + 16);
  if (!v48)
    v48 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *v48;
  *v48 = SlowCase;
  v48[1] = &qword_1ECE81448;
  v48[2] = v39;
  v51 = v48;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v52, (uint64_t *)&v51);
  v44 = (uint64_t)v51;
  if (v51)
    goto LABEL_57;
  return SlowCase;
}

unint64_t WebCore::createHTMLTableSectionElementWrapper(uint64_t a1, WebCore::Node **a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::Node *v3;
  unint64_t result;
  unint64_t v5;
  WebCore::Node *v6;

  v3 = *a2;
  *a2 = 0;
  v6 = v3;
  result = WebCore::createWrapper<WebCore::HTMLTableSectionElement,WebCore::HTMLTableSectionElement>(a1, (uint64_t *)&v6, a3);
  if (v6)
  {
    if (*((_DWORD *)v6 + 6) == 2)
    {
      if ((*((_WORD *)v6 + 15) & 0x400) == 0)
      {
        v5 = result;
        WebCore::Node::removedLastRef(v6);
        return v5;
      }
    }
    else
    {
      *((_DWORD *)v6 + 6) -= 2;
    }
  }
  return result;
}

unint64_t WebCore::createHTMLTableCellElementWrapper(uint64_t *a1, WebCore::Node **a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::Node *v3;
  unint64_t v4;
  unint64_t v6;
  WebCore::Node *v7;

  v3 = *a2;
  *a2 = 0;
  v7 = v3;
  v4 = WebCore::createWrapper<WebCore::HTMLTableCellElement,WebCore::HTMLTableCellElement>(a1, &v7, a3);
  if (v7)
  {
    v6 = v4;
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) != 0)
        return v4;
      WebCore::Node::removedLastRef(v7);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
    return v6;
  }
  return v4;
}

unint64_t WebCore::createHTMLTrackElementWrapper(WebCore::JSHTMLElement **a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v4;
  WebCore::JSHTMLElement *v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSHTMLElement *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  WebCore::JSHTMLTrackElement *v21;
  _QWORD *v22;
  unint64_t SlowCase;
  WebCore::JSHTMLElement *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *Allocator;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v4 = *(_QWORD *)a2;
  if ((~*(unsigned __int16 *)(*(_QWORD *)a2 + 28) & 0x110) == 0)
    return WebCore::createWrapper<WebCore::HTMLUnknownElement,WebCore::HTMLElement>((JSC::VM *)a1, a2, a3);
  *(_QWORD *)a2 = 0;
  v6 = a1[412];
  if (v6)
  {
    v7 = *((_DWORD *)v6 - 2);
    v8 = ((unint64_t)&WebCore::JSHTMLTrackElement::s_info + ~((_QWORD)&WebCore::JSHTMLTrackElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLTrackElement::s_info + ~((_QWORD)&WebCore::JSHTMLTrackElement::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = (char **)*((_QWORD *)v6 + 2 * v11);
    if (v12 == &WebCore::JSHTMLTrackElement::s_info)
    {
LABEL_8:
      v14 = *((_QWORD *)v6 + 2 * v11 + 1);
      if (v14)
        goto LABEL_10;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = (char **)*((_QWORD *)v6 + 2 * v11);
        ++v13;
        if (v12 == &WebCore::JSHTMLTrackElement::s_info)
          goto LABEL_8;
      }
    }
  }
  v15 = a1[7];
  v16 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v15, (JSC::VM *)a1, a3);
  Structure = WebCore::JSHTMLTrackElementPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLTrackElementPrototype::create(v15, (JSC::VM *)a1, Structure, v18);
  v20 = WebCore::JSHTMLTrackElement::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLTrackElement::s_info);
LABEL_10:
  v21 = a1[7];
  v22 = (_QWORD *)WebCore::JSHTMLTrackElement::subspaceForImpl(v21, a2);
  SlowCase = v22[3];
  if (SlowCase < v22[4])
  {
LABEL_11:
    v22[3] = SlowCase + 48;
    goto LABEL_12;
  }
  SlowCase = v22[5];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v22[6];
    v22[4] = SlowCase + HIDWORD(v33);
    v22[5] = SlowCase + (int)v33;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_12:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v21 + 755))
    __dmb(0xAu);
  v24 = a1[415];
  if ((byte_1ECE81460 & 1) == 0)
  {
    qword_1ECE81458 = (uint64_t)&off_1E32AD4A0;
    byte_1ECE81460 = 1;
  }
  if (v4)
    v25 = (uint64_t *)(v4 + 8);
  else
    v25 = 0;
  if (*((_DWORD *)v24 + 12))
  {
    v35 = v4;
    if ((SlowCase & 8) != 0)
      v30 = (SlowCase - 112) | 1;
    else
      v30 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v30 & 1) != 0)
      v31 = v30 + 47;
    else
      v31 = *(_QWORD *)v30 + 32;
    Allocator = *(_QWORD **)(v31 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v31 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1ECE81458;
    Allocator[2] = v24;
    v34 = Allocator;
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)v24 + 4, &v35, (uint64_t *)&v34);
    v29 = (uint64_t)v34;
    if (!v34)
      return SlowCase;
  }
  else
  {
    if ((SlowCase & 8) != 0)
      v26 = (SlowCase - 112) | 1;
    else
      v26 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v26 & 1) != 0)
      v27 = v26 + 47;
    else
      v27 = *(_QWORD *)v26 + 32;
    v28 = *(_QWORD **)(v27 + 16);
    if (!v28)
      v28 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v27 + 16) = *v28;
    *v28 = SlowCase;
    v28[1] = &qword_1ECE81458;
    v28[2] = v24;
    v29 = *v25;
    *v25 = (uint64_t)v28;
    if (!v29)
      return SlowCase;
  }
  *(_QWORD *)(v29 + 8) = 3;
  return SlowCase;
}

unint64_t WebCore::createHTMLVideoElementWrapper(JSC::VM *a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v4;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSHTMLMediaElement *v15;
  uint64_t v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  WebCore::JSHTMLVideoElement *v21;
  _QWORD *v22;
  unint64_t SlowCase;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *Allocator;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v4 = *(_QWORD *)a2;
  if ((~*(unsigned __int16 *)(*(_QWORD *)a2 + 28) & 0x110) == 0)
    return WebCore::createWrapper<WebCore::HTMLUnknownElement,WebCore::HTMLElement>(a1, a2, a3);
  *(_QWORD *)a2 = 0;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSHTMLVideoElement::s_info + ~((_QWORD)&WebCore::JSHTMLVideoElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLVideoElement::s_info + ~((_QWORD)&WebCore::JSHTMLVideoElement::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSHTMLVideoElement::s_info)
    {
LABEL_8:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_10;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSHTMLVideoElement::s_info)
          goto LABEL_8;
      }
    }
  }
  v15 = (WebCore::JSHTMLMediaElement *)*((_QWORD *)a1 + 7);
  v16 = WebCore::getDOMStructure<WebCore::JSHTMLMediaElement>(v15, a1);
  Structure = WebCore::JSHTMLVideoElementPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, *(JSC::JSCell **)(v16 + 48));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLVideoElementPrototype::create(v15, a1, Structure, v18);
  v20 = WebCore::JSHTMLVideoElement::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLVideoElement::s_info);
LABEL_10:
  v21 = (WebCore::JSHTMLVideoElement *)*((_QWORD *)a1 + 7);
  v22 = (_QWORD *)WebCore::JSHTMLVideoElement::subspaceForImpl(v21, a2);
  SlowCase = v22[3];
  if (SlowCase < v22[4])
  {
LABEL_11:
    v22[3] = SlowCase + 48;
    goto LABEL_12;
  }
  SlowCase = v22[5];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v22[6];
    v22[4] = SlowCase + HIDWORD(v33);
    v22[5] = SlowCase + (int)v33;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_12:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v21 + 755))
    __dmb(0xAu);
  v24 = *((_QWORD *)a1 + 415);
  if ((byte_1ECE81470 & 1) == 0)
  {
    qword_1ECE81468 = (uint64_t)&unk_1E32AD6D0;
    byte_1ECE81470 = 1;
  }
  if (v4)
    v25 = (uint64_t *)(v4 + 8);
  else
    v25 = 0;
  if (*(_DWORD *)(v24 + 48))
  {
    v35 = v4;
    if ((SlowCase & 8) != 0)
      v30 = (SlowCase - 112) | 1;
    else
      v30 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v30 & 1) != 0)
      v31 = v30 + 47;
    else
      v31 = *(_QWORD *)v30 + 32;
    Allocator = *(_QWORD **)(v31 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v31 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1ECE81468;
    Allocator[2] = v24;
    v34 = Allocator;
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v24 + 32), &v35, (uint64_t *)&v34);
    v29 = (uint64_t)v34;
    if (!v34)
      return SlowCase;
  }
  else
  {
    if ((SlowCase & 8) != 0)
      v26 = (SlowCase - 112) | 1;
    else
      v26 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v26 & 1) != 0)
      v27 = v26 + 47;
    else
      v27 = *(_QWORD *)v26 + 32;
    v28 = *(_QWORD **)(v27 + 16);
    if (!v28)
      v28 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v27 + 16) = *v28;
    *v28 = SlowCase;
    v28[1] = &qword_1ECE81468;
    v28[2] = v24;
    v29 = *v25;
    *v25 = (uint64_t)v28;
    if (!v29)
      return SlowCase;
  }
  *(_QWORD *)(v29 + 8) = 3;
  return SlowCase;
}

uint64_t WebCore::createWrapper<WebCore::HTMLElement,WebCore::HTMLElement>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  unint64_t v13;
  WebCore::JSElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  uint64_t v20;
  int v22;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_4;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSHTMLElement::s_info + ~((_QWORD)&WebCore::JSHTMLElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLElement::s_info + ~((_QWORD)&WebCore::JSHTMLElement::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSHTMLElement::s_info)
  {
    v22 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v22) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v22;
      if (v12 == &WebCore::JSHTMLElement::s_info)
        goto LABEL_3;
    }
    goto LABEL_4;
  }
LABEL_3:
  v13 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v13)
  {
LABEL_4:
    v14 = (WebCore::JSElement *)*((_QWORD *)a1 + 7);
    v15 = (JSC::JSCell *)WebCore::JSElement::prototype(v14, a1, a3);
    Structure = WebCore::JSHTMLElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v18 = (JSC::JSCell *)WebCore::JSHTMLElementPrototype::create(v14, a1, Structure, v17);
    v19 = WebCore::JSHTMLElement::createStructure((uint64_t *)v14, (uint64_t)a1, v18);
    v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSHTMLElement::s_info);
  }
  v20 = WebCore::JSHTMLElement::create(v13, a1, a2);
  WebCore::cacheWrapper<WebCore::CDATASection,WebCore::JSCDATASection>(*((_QWORD *)a1 + 415), v5, v20);
  return v20;
}

unint64_t WebCore::createWrapper<WebCore::HTMLUnknownElement,WebCore::HTMLElement>(JSC::VM *a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  WebCore::JSHTMLUnknownElement *v20;
  _QWORD *v21;
  unint64_t SlowCase;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *Allocator;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v4 = *(_QWORD *)a2;
  *(_QWORD *)a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLUnknownElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLUnknownElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLUnknownElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLUnknownElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLUnknownElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLUnknownElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLUnknownElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v18 = (JSC::JSCell *)WebCore::JSHTMLUnknownElementPrototype::create(v14, a1, Structure, v17);
  v19 = WebCore::JSHTMLUnknownElement::createStructure((uint64_t *)v14, (uint64_t)a1, v18);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSHTMLUnknownElement::s_info);
LABEL_8:
  v20 = (WebCore::JSHTMLUnknownElement *)*((_QWORD *)a1 + 7);
  v21 = (_QWORD *)WebCore::JSHTMLUnknownElement::subspaceForImpl(v20, a2);
  SlowCase = v21[3];
  if (SlowCase < v21[4])
  {
LABEL_9:
    v21[3] = SlowCase + 48;
    goto LABEL_10;
  }
  SlowCase = v21[5];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v21[6];
    v21[4] = SlowCase + HIDWORD(v33);
    v21[5] = SlowCase + (int)v33;
    goto LABEL_9;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_10:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v20 + 755))
    __dmb(0xAu);
  v23 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v24 = (uint64_t *)(v4 + 8);
  else
    v24 = 0;
  if (!*(_DWORD *)(v23 + 48))
  {
    if ((SlowCase & 8) != 0)
      v25 = (SlowCase - 112) | 1;
    else
      v25 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v23;
    v28 = *v24;
    *v24 = (uint64_t)Allocator;
    if (!v28)
      return SlowCase;
LABEL_35:
    *(_QWORD *)(v28 + 8) = 3;
    return SlowCase;
  }
  v35 = v4;
  if ((SlowCase & 8) != 0)
    v30 = (SlowCase - 112) | 1;
  else
    v30 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v30 & 1) != 0)
    v31 = v30 + 47;
  else
    v31 = *(_QWORD *)v30 + 32;
  v32 = *(_QWORD **)(v31 + 16);
  if (!v32)
    v32 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v31 + 16) = *v32;
  *v32 = SlowCase;
  v32[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v32[2] = v23;
  v34 = v32;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v23 + 32), &v35, (uint64_t *)&v34);
  v28 = (uint64_t)v34;
  if (v34)
    goto LABEL_35;
  return SlowCase;
}

_QWORD *WebCore::JSHTMLEmbedElement::getCallData@<X0>(WebCore::JSHTMLEmbedElement *this@<X0>, JSC::JSCell *a2@<X1>, uint64_t a3@<X8>)
{
  WebCore::HTMLPlugInElement *v4;
  _QWORD *result;
  uint64_t v6;

  *(_BYTE *)a3 = 0;
  v4 = (WebCore::HTMLPlugInElement *)*((_QWORD *)this + 3);
  result = (_QWORD *)(*(uint64_t (**)(WebCore::HTMLPlugInElement *, JSC::JSCell *))(*(_QWORD *)v4 + 200))(v4, a2);
  if ((_DWORD)result)
  {
    result = (_QWORD *)WebCore::HTMLPlugInElement::bindingsInstance(v4);
    if (result)
    {
      v6 = result[2];
      if (v6)
      {
        if (*(_BYTE *)(v6 + 12))
        {
          result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 32))(result);
          if ((_DWORD)result)
          {
            *(_BYTE *)a3 = 1;
            *(_QWORD *)(a3 + 8) = WebCore::callPlugin;
            *(_BYTE *)(a3 + 16) = 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t WebCore::JSHTMLEmbedElement::put(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  JSC::VM *v21;
  WebCore::HTMLPlugInElement *v22;
  JSC::Bindings::Instance *v23;
  uint64_t v24;
  _DWORD *RuntimeObject;
  int v26;

  if (*(_QWORD *)(a5 + 8) != a1)
    return JSC::JSObject::put();
  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_23;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_23;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_23;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_23;
  v20 = *(_QWORD *)(v19 + 680);
  if (!*(_BYTE *)(v20 + 243))
  {
    if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
      goto LABEL_23;
LABEL_22:
    if (!v18[65])
      goto LABEL_23;
    return JSC::JSObject::put();
  }
  if (*(_BYTE *)(v20 + 242))
    goto LABEL_22;
LABEL_23:
  v21 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v22 = *(WebCore::HTMLPlugInElement **)(a1 + 24);
  if (!(*(unsigned int (**)(WebCore::HTMLPlugInElement *))(*(_QWORD *)v22 + 200))(v22))
    goto LABEL_32;
  if (WebCore::DOMTimerFireState::current)
    *(_BYTE *)(WebCore::DOMTimerFireState::current + 10) = 1;
  v23 = (JSC::Bindings::Instance *)WebCore::HTMLPlugInElement::bindingsInstance(v22);
  if (!v23)
    goto LABEL_32;
  v24 = *((_QWORD *)v23 + 2);
  if (!v24 || !*(_BYTE *)(v24 + 12))
    goto LABEL_32;
  RuntimeObject = (_DWORD *)JSC::Bindings::Instance::createRuntimeObject(v23, a2);
  if (!RuntimeObject)
  {
LABEL_33:
    v26 = 0;
    goto LABEL_34;
  }
  if (!JSC::JSObject::hasProperty())
  {
LABEL_32:
    LODWORD(RuntimeObject) = 0;
    goto LABEL_33;
  }
  LODWORD(RuntimeObject) = (*(uint64_t (**)(_DWORD *, WebCore::JSDOMGlobalObject *, uint64_t, uint64_t, uint64_t))(16 * *(unsigned int *)(16 * (*RuntimeObject & 0xFFFFFFFE) + 0x4C) + 0x48))(RuntimeObject, a2, a3, a4, a5);
  v26 = 1;
LABEL_34:
  if (!*((_DWORD *)v21 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) == 0)
  {
    if (v26)
      return (_DWORD)RuntimeObject != 0;
    return JSC::JSObject::put();
  }
  return 0;
}

uint64_t WebCore::JSHTMLEmbedElement::putByIndex(JSC::JSObject *a1, WebCore::JSDOMGlobalObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  JSC::VM *v21;
  WTF::StringImpl *v22;
  WebCore::HTMLPlugInElement *v23;
  WTF::StringImpl *v24;
  JSC::Bindings::Instance *v25;
  uint64_t v26;
  _DWORD *RuntimeObject;
  int v28;
  uint64_t v29;
  JSValue v30;
  WTF::StringImpl *v31;
  JSValue v33;
  _QWORD v34[2];
  int v35;
  char v36;
  __int16 v37;
  char v38;
  uint64_t v39;
  WTF::StringImpl *v40;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (v16)
  {
    v17 = v16;
    if (!*(_BYTE *)(v16 + 274))
    {
      v18 = *(_BYTE **)(v16 + 496);
      if (!v18)
        v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
      if (*(_QWORD *)v18)
      {
        v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
        if (v19)
        {
          v20 = *(_QWORD *)(v19 + 680);
          if (*(_BYTE *)(v20 + 243))
          {
            if (!*(_BYTE *)(v20 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v18[65])
          {
            v33.super.isa = a5;
            return JSC::JSObject::putByIndex(a1, a2, a3, a4, v33);
          }
        }
      }
    }
  }
LABEL_22:
  v21 = (JSC::VM *)*((_QWORD *)a2 + 7);
  JSC::Identifier::from();
  v34[0] = 0;
  v34[1] = a1;
  v35 = -1;
  v36 = (char)a5;
  v37 = 0;
  v38 = 1;
  v39 = 0;
  v22 = v40;
  v23 = (WebCore::HTMLPlugInElement *)*((_QWORD *)a1 + 3);
  if (!(*(unsigned int (**)(WebCore::HTMLPlugInElement *))(*(_QWORD *)v23 + 200))(v23))
    goto LABEL_31;
  if (WebCore::DOMTimerFireState::current)
    *(_BYTE *)(WebCore::DOMTimerFireState::current + 10) = 1;
  v25 = (JSC::Bindings::Instance *)WebCore::HTMLPlugInElement::bindingsInstance(v23);
  if (!v25 || (v26 = *((_QWORD *)v25 + 2)) == 0 || !*(_BYTE *)(v26 + 12))
  {
LABEL_31:
    v28 = 0;
    LODWORD(RuntimeObject) = 0;
    goto LABEL_32;
  }
  RuntimeObject = (_DWORD *)JSC::Bindings::Instance::createRuntimeObject(v25, a2);
  if (RuntimeObject)
  {
    if (JSC::JSObject::hasProperty())
    {
      v28 = (*(uint64_t (**)(_DWORD *, WebCore::JSDOMGlobalObject *, WTF::StringImpl *, uint64_t, _QWORD *))(16 * *(unsigned int *)(16 * (*RuntimeObject & 0xFFFFFFFE) + 0x4C) + 0x48))(RuntimeObject, a2, v22, a4, v34);
      LODWORD(RuntimeObject) = 1;
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  v28 = 0;
LABEL_32:
  if (*((_DWORD *)v21 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
  {
    v29 = 0;
  }
  else if ((_DWORD)RuntimeObject)
  {
    v29 = v28 != 0;
  }
  else
  {
    v30.super.isa = a5;
    v29 = JSC::JSObject::putByIndex(a1, a2, a3, a4, v30);
  }
  v31 = v40;
  v40 = 0;
  if (v31)
  {
    if (*(_DWORD *)v31 == 2)
      WTF::StringImpl::destroy(v31, v24);
    else
      *(_DWORD *)v31 -= 2;
  }
  return v29;
}

uint64_t WebCore::JSHTMLEmbedElement::getOwnPropertySlot(uint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  _BYTE *v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned __int16 *v21;
  uint64_t v22;
  unsigned int v23;
  BOOL v24;
  BOOL v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  unint64_t v36;

  if (WebCore::pluginElementCustomGetOwnPropertySlot(a1, (JSC::JSGlobalObject *)a2, a3, a4))
    return 1;
  if (*(_BYTE *)(a4 + 50) == 3)
    return 0;
  if (!(a3 >> 4)
    || (v9 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v9 + 0x20)) != 0)
    || (v10 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7])) == 0|| (v36 = a3, v11 = JSC::PropertyTable::get(v10, (uint64_t *)&v36), (_DWORD)v11 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      return 1;
    if (!a3)
      return 0;
    v12 = *(_DWORD *)(a3 + 16);
    if ((v12 & 0x20) != 0)
      return 0;
    v13 = *(_BYTE **)(a3 + 8);
    v14 = *(unsigned int *)(a3 + 4);
    if ((v12 & 4) != 0)
    {
      if (!(_DWORD)v14 || (v31 = *v13 - 48, v31 > 9) || v14 >= 2 && *v13 == 48)
      {
LABEL_48:
        v32 = 0;
      }
      else
      {
        v33 = v14 - 1;
        v34 = v13 + 1;
        while (v33)
        {
          if (v31 > 0x19999999)
            goto LABEL_48;
          v35 = *v34 - 48;
          if (v35 > 9)
            goto LABEL_48;
          v32 = 0;
          v24 = __CFADD__(v35, 10 * v31);
          v31 = v35 + 10 * v31;
          --v33;
          ++v34;
          if (v24)
            goto LABEL_49;
        }
        v32 = 0x100000000;
        if (v31 == -1)
          v32 = 0;
      }
LABEL_49:
      if ((v32 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      if ((_DWORD)v14
        && (v15 = *(unsigned __int16 *)v13 - 48, v15 <= 9)
        && (v14 < 2 || *(_WORD *)v13 != 48))
      {
        v21 = (unsigned __int16 *)(v13 + 2);
        v22 = v14 - 1;
        while (v22)
        {
          if (v15 <= 0x19999999)
          {
            v23 = *v21 - 48;
            if (v23 <= 9)
            {
              v24 = __CFADD__(v23, 10 * v15);
              v15 = v23 + 10 * v15;
              ++v21;
              --v22;
              if (!v24)
                continue;
            }
          }
          goto LABEL_16;
        }
        v25 = v15 == -1;
        v16 = 0x100000000;
        if (v25)
          v16 = 0;
      }
      else
      {
LABEL_16:
        v16 = 0;
      }
      if ((v16 & 0x100000000) == 0)
        return 0;
    }
    return JSC::JSObject::getOwnPropertySlotByIndex();
  }
  if ((int)v11 > 63)
  {
    v17 = *(_QWORD *)(a1 + 8) - 8;
    v18 = 0x3F00000000 - (v11 << 32);
  }
  else
  {
    v17 = a1 + 16;
    v18 = v11 << 32;
  }
  v19 = *(_QWORD *)(v17 + (v18 >> 29));
  if ((v19 & 0xFFFE000000000002) != 0)
  {
LABEL_25:
    *(_QWORD *)a4 = v19;
    *(_QWORD *)(a4 + 32) = a1;
    *(_DWORD *)(a4 + 16) = HIDWORD(v11);
    *(_DWORD *)(a4 + 20) = v11;
    result = 1;
    *(_WORD *)(a4 + 48) = 257;
    return result;
  }
  v20 = *(unsigned __int8 *)(v19 + 5);
  if (v20 != 6)
  {
    if (v20 == 5)
    {
      JSC::JSObject::fillGetterPropertySlot();
      return 1;
    }
    goto LABEL_25;
  }
  v26 = *(_DWORD *)(v9 + 16) & 3;
  v28 = *(_QWORD *)(v19 + 8);
  v27 = *(_QWORD *)(v19 + 16);
  if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C))
  {
    v30 = *(_QWORD *)(v19 + 24);
    v29 = *(_QWORD *)(v19 + 32);
    *(_QWORD *)a4 = v28;
    *(_QWORD *)(a4 + 8) = v27;
    *(_DWORD *)(a4 + 16) = HIDWORD(v11);
    *(_QWORD *)(a4 + 32) = a1;
    *(_BYTE *)(a4 + 49) = 3;
    result = 1;
    if (v26 != 2)
      *(_BYTE *)(a4 + 48) = 1;
    *(_BYTE *)(a4 + 51) = 1;
    *(_QWORD *)(a4 + 72) = v30;
    *(_QWORD *)(a4 + 80) = v29;
  }
  else
  {
    *(_QWORD *)a4 = v28;
    *(_QWORD *)(a4 + 8) = v27;
    *(_DWORD *)(a4 + 16) = HIDWORD(v11);
    *(_QWORD *)(a4 + 32) = a1;
    result = 1;
    *(_BYTE *)(a4 + 49) = 3;
    if (v26 != 2)
      *(_BYTE *)(a4 + 48) = 1;
  }
  return result;
}

uint64_t WebCore::JSHTMLEmbedElement::getOwnPropertySlotByIndex(WebCore::JSHTMLEmbedElement *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  WTF::StringImpl *v8;
  uint64_t OwnPropertySlotByIndex;
  WTF::StringImpl *v11;

  JSC::Identifier::from();
  if (WebCore::pluginElementCustomGetOwnPropertySlot((uint64_t)this, a2, (uint64_t)v11, a4))
  {
    OwnPropertySlotByIndex = 1;
  }
  else if (*(_BYTE *)(a4 + 50) == 3)
  {
    OwnPropertySlotByIndex = 0;
  }
  else
  {
    OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
  }
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v8);
    else
      *(_DWORD *)v11 -= 2;
  }
  return OwnPropertySlotByIndex;
}

uint64_t WebCore::JSHTMLEmbedElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLEmbedElement::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  JSC::JSObject::visitChildren();
  WebCore::JSEventTarget::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
  result = WebCore::JSNode::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  v5 = *(_QWORD *)(a1 + 32);
  if ((v5 & 0xFFFE000000000002) == 0 && v5 != 0)
  {
    if ((v5 & 8) != 0)
    {
      if ((*(_BYTE *)(v5 - 79) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    else
    {
      v7 = v5 & 0xFFFFFFFFFFFFC000;
      if (*(_DWORD *)(v5 & 0xFFFFFFFFFFFFC000 | 0x20) != *(_DWORD *)(a2 + 132))
      {
        v8 = *(_QWORD *)(a1 + 32);
        v9 = v5 & 0xFFFFFFFFFFFFC000;
        result = JSC::MarkedBlock::aboutToMarkSlow((JSC::MarkedBlock *)(v5 & 0xFFFFFFFFFFFFC000));
        v5 = v8;
        v7 = v9;
      }
      if (((*(_QWORD *)(v7 + 8 * ((v5 >> 10) & 0xF) + 40) >> (v5 >> 4)) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    if (*(_QWORD *)(a2 + 168))
      return JSC::SlotVisitor::appendSlow();
  }
  return result;
}

uint64_t WebCore::JSHTMLEmbedElement::visitChildren(WebCore::JSHTMLEmbedElement *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;
  _QWORD v10[2];
  _QWORD *v11;
  char v12;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    v10[0] = a2;
    v10[1] = this;
    v12 = 0;
    v11 = v7;
    *((_QWORD *)a2 + 11) = v10;
    result = WebCore::JSNode::visitChildren(this, a2, a3);
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v10[0] + 88) = v11;
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSHTMLEmbedElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLEmbedElementPrototype::create(WebCore::JSHTMLEmbedElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<8u>(this, (uint64_t)&WebCore::JSHTMLEmbedElement::s_info, (uint64_t)&WebCore::JSHTMLEmbedElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLEmbedElement>,(WebCore::DOMConstructorID)529>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4232);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLEmbedElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLEmbedElement::s_info + ~((_QWORD)&WebCore::JSHTMLEmbedElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLEmbedElement::s_info + ~((_QWORD)&WebCore::JSHTMLEmbedElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLEmbedElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLEmbedElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLEmbedElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLEmbedElementPrototype::create((WebCore::JSHTMLEmbedElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLEmbedElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLEmbedElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4232) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLEmbedElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLEmbedElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLEmbedElement>,(WebCore::DOMConstructorID)529>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLEmbedElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLEmbedElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLEmbedElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLEmbedElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLEmbedElement_height(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::heightAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLEmbedElement_height(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLEmbedElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLEmbedElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::heightAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::heightAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLEmbedElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLEmbedElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLEmbedElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLEmbedElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLEmbedElement_src(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  char v23;
  char v24;
  char **v25;
  char *v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::srcAttr, a3, a4, a5);
  v9 = &v22;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v22);
  if ((v23 & 2) == 0)
  {
    v9 = &v22;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v22))
    {
      v21 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v21 != -1)
      {
        v26 = &v24;
        v25 = &v26;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (v11)
    *(_DWORD *)v11 += 2;
  v12 = v22;
  v22 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v13 = *(_QWORD *)(a1 + 56);
  v14 = (uint64_t *)(v13 + 41968);
  if (!v11)
    return *v14;
  v15 = *((_DWORD *)v11 + 1);
  if (v15)
  {
    if (v15 != 1)
    {
LABEL_12:
      v16 = *(_QWORD *)(v13 + 64760);
      if (!v16 || v11 != *(WTF::StringImpl **)(v16 + 8))
        v16 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_15;
    }
    v18 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
    if ((*((_BYTE *)v11 + 16) & 4) != 0)
    {
      v19 = *v18;
    }
    else
    {
      v20 = *(unsigned __int16 *)v18;
      if (v20 > 0xFF)
        goto LABEL_12;
      v19 = v20;
    }
    v16 = *(_QWORD *)(v13 + 8 * v19 + 42216);
  }
  else
  {
    v16 = *v14;
  }
LABEL_15:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(v11, v10);
  else
    *(_DWORD *)v11 -= 2;
  return v16;
}

BOOL WebCore::setJSHTMLEmbedElement_src(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLEmbedElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLEmbedElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::srcAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::srcAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLEmbedElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::typeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLEmbedElement_type(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLEmbedElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLEmbedElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::typeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::typeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLEmbedElement_width(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::widthAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLEmbedElement_width(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLEmbedElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLEmbedElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::widthAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::widthAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLFieldSetElementPrototype::finishCreation(WebCore::JSHTMLFieldSetElementPrototype *this, JSC::VM *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  uint64_t result;
  WTF::StringImpl *v10;
  int v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<12u>(a2, (uint64_t)&WebCore::JSHTMLFieldSetElement::s_info, (uint64_t)&WebCore::JSHTMLFieldSetElementPrototypeTableValues, this);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v4 && *(_BYTE *)(v4 + 274))
  {
    result = 105;
    __break(0xC471u);
  }
  else
  {
    v5 = v4 - 192;
    if (!v4)
      v5 = 0;
    if ((*(_QWORD *)(*(_QWORD *)(v5 + 680) + 680) & 0x20000000) == 0)
    {
      WTF::AtomStringImpl::addLiteral();
      v10 = v13;
      v11 = *((_DWORD *)a2 + 23281);
      *((_DWORD *)a2 + 23281) = 1;
      LODWORD(v13) = -1;
      WORD2(v13) = 1;
      JSC::JSObject::deleteProperty();
      *((_DWORD *)a2 + 23281) = v11;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v12);
        else
          *(_DWORD *)v10 -= 2;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x10) & 3) != 0)
        JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), a2, this);
    }
    v6 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v7 = JSC::jsNontrivialString((uint64_t)a2, &v13);
    JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v6, v7, 6);
    result = (uint64_t)v13;
    v13 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        return WTF::StringImpl::destroy((WTF::StringImpl *)result, v8);
      else
        *(_DWORD *)result -= 2;
    }
  }
  return result;
}

uint64_t WebCore::JSHTMLFieldSetElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLFieldSetElement::createPrototype(WebCore::JSHTMLFieldSetElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLFieldSetElementPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSHTMLFieldSetElementPrototype::create(WebCore::JSHTMLFieldSetElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;
  unint64_t v9;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  v9 = a2;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLFieldSetElementPrototype::finishCreation((uint64_t *)&v9, (WebCore::JSHTMLFieldSetElementPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFieldSetElement>,(WebCore::DOMConstructorID)530>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4240);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFieldSetElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLFieldSetElement>((WebCore::JSHTMLFieldSetElement *)a1, (JSC::VM *)a2, v17)+ 48);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4240) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLFieldSetElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLFieldSetElementPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFieldSetElement>,(WebCore::DOMConstructorID)530>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLFieldSetElement_disabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::disabledAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::IDLAttribute<WebCore::JSHTMLFieldSetElement>::set<&WebCore::setJSHTMLFieldSetElement_disabledSetter,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLFieldSetElement *>(a2);
  if (v5)
    return WebCore::setJSHTMLFieldSetElement_disabledSetter(a1, *(WTF::StringImpl ***)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsHTMLFieldSetElement_form(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  uint64_t v4;
  WebCore::JSDOMGlobalObject *v6;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 120);
  if (v4 && (v6 = *(WebCore::JSDOMGlobalObject **)(v4 + 8)) != 0)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v6, a4);
  else
    return 2;
}

uint64_t WebCore::jsHTMLFieldSetElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLFieldSetElement_name(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLFieldSetElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v21 = v9;
    v10 = *((_QWORD *)v6 + 13);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) == 0)
      {
        v12 = (uint64_t *)(v10 + 32);
        v13 = v11 >> 5;
        if (!v13)
          goto LABEL_15;
LABEL_8:
        v14 = 0;
        while (1)
        {
          v15 = *v12;
          if (*v12 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_16;
          }
          ++v14;
          v12 += 2;
          if (v13 == v14)
            goto LABEL_15;
        }
      }
      v12 = *(uint64_t **)(v10 + 40);
      v13 = *(_DWORD *)(v10 + 52);
      if (v13)
        goto LABEL_8;
    }
LABEL_15:
    v14 = 0xFFFFFFFFLL;
LABEL_16:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v8;
}

uint64_t WebCore::jsHTMLFieldSetElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 328))(*(_QWORD *)(a2 + 24) + 112);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

unint64_t WebCore::jsHTMLFieldSetElement_elements(int a1, WebCore::HTMLFieldSetElement **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLFieldSetElement::elements(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

uint64_t WebCore::jsHTMLFieldSetElement_willValidate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v5;
  char v6;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_BYTE *)(v2 + 160);
  if ((v3 & 4) == 0 || (*(_BYTE *)(v2 + 162) & 3) == 2)
  {
    *(_BYTE *)(v2 + 160) = v3 | 4;
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 112) + 336))(v2 + 112);
    v3 = *(_BYTE *)(v2 + 160);
    if (((v5 ^ ((v3 & 2) == 0)) & 1) == 0)
    {
      if (v5)
        v6 = 2;
      else
        v6 = 0;
      v3 = v3 & 0xFD | v6;
      *(_BYTE *)(v2 + 160) = v3;
    }
  }
  if ((v3 & 2) != 0)
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsHTMLFieldSetElement_validity(uint64_t a1, uint64_t a2)
{
  return WebCore::toJS(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WTF *)(*(_QWORD *)(a2 + 24) + 112));
}

uint64_t WebCore::jsHTMLFieldSetElement_validationMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v3 + 112) + 272))(v3 + 112))
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v5 = *(_QWORD *)(v3 + 144);
  if (!v5)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  v8 = *(_QWORD *)(a1 + 56);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_5:
      v9 = *(_QWORD *)(v8 + 64760);
      if (!v9 || v5 != *(_QWORD *)(v9 + 8))
      {
        v9 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_8;
    }
    v11 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_5;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v8 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *(_QWORD *)(v8 + 41968);
  }
LABEL_8:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, v4);
  return v9;
}

uint64_t WebCore::JSHTMLFontElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLFontElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLFontElementPrototype::create(WebCore::JSHTMLFontElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSHTMLFontElement::s_info, &WebCore::JSHTMLFontElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFontElement>,(WebCore::DOMConstructorID)531>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4248);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFontElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLFontElement::s_info + ~((_QWORD)&WebCore::JSHTMLFontElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLFontElement::s_info + ~((_QWORD)&WebCore::JSHTMLFontElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLFontElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLFontElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLFontElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLFontElementPrototype::create((WebCore::JSHTMLFontElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLFontElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLFontElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4248) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLFontElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLFontElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFontElement>,(WebCore::DOMConstructorID)531>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLFontElement_color(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::colorAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::colorAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::colorAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFontElement_color(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFontElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFontElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::colorAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::colorAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::colorAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::colorAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLFontElement_face(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::faceAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::faceAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::faceAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFontElement_face(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFontElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFontElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::faceAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::faceAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::faceAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::faceAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFontElement_size(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::sizeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::sizeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::sizeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFontElement_size(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFontElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFontElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::sizeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::sizeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::sizeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::sizeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

WTF::StringImpl *WebCore::JSHTMLFormControlsCollectionPrototype::finishCreation(WebCore::JSHTMLFormControlsCollectionPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(a2, (uint64_t)&WebCore::JSHTMLFormControlsCollection::s_info, (uint64_t)&WebCore::JSHTMLFormControlsCollectionPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLFormControlsCollection::put(unint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  JSC::VM *v20;
  int OwnProperty;
  uint64_t result;
  int v23;
  char v24[16];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (!v15)
    goto LABEL_23;
  v16 = v15;
  if (*(_BYTE *)(v15 + 274))
    goto LABEL_23;
  v17 = *(_BYTE **)(v15 + 496);
  if (!v17)
    v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
  if (!*(_QWORD *)v17)
    goto LABEL_23;
  v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
  if (!v18)
    goto LABEL_23;
  v19 = *(_QWORD *)(v18 + 680);
  if (*(_BYTE *)(v19 + 243))
  {
    if (!*(_BYTE *)(v19 + 242))
      goto LABEL_23;
LABEL_22:
    if (!v17[65])
      goto LABEL_23;
    return JSC::JSObject::put();
  }
  if ((*(_QWORD *)(v19 + 688) & 0x80000) != 0)
    goto LABEL_22;
LABEL_23:
  v20 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = 14;
  v25 = 0xFFFFFFFF00000000;
  v27 = 0;
  v28 = 0;
  v26 = v8;
  v29 = 0x20000;
  v30 = 0;
  LOBYTE(v31) = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  OwnProperty = WebCore::JSHTMLFormControlsCollection::legacyPlatformObjectGetOwnProperty(a1, (JSC::VM **)a2, a3, (uint64_t)v24, 1);
  if (*((_DWORD *)v20 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v20 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v32)
  {
    v23 = *(_DWORD *)(v31 + 4);
    if (!v23)
    {
      __break(0xC471u);
      JUMPOUT(0x194C0C460);
    }
    *(_DWORD *)(v31 + 4) = v23 - 1;
  }
  return result;
}

uint64_t WebCore::JSHTMLFormControlsCollection::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSHTMLFormControlsCollection::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _WORD *v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t result;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  int isSupportedPropertyName;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  _BYTE *v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  unsigned __int16 *v50;
  uint64_t v51;
  unsigned int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 *v60;
  unsigned int v61;
  uint64_t v62;
  unsigned __int8 *v63;
  unsigned int v64;
  WTF::StringImpl *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  char v72;
  JSC::VM *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;

  v6 = *(_QWORD **)(a1 + 24);
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMGlobalObject::s_info && v9 != 0);
  }
  if (v8)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (v13)
  {
    v14 = v13;
    if (!*(_BYTE *)(v13 + 274))
    {
      v15 = *(_BYTE **)(v13 + 496);
      if (!v15)
        v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
      if (*(_QWORD *)v15)
      {
        v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
        if (v16)
        {
          v17 = *(_QWORD *)(v16 + 680);
          if (*(_BYTE *)(v17 + 243))
          {
            if (!*(_BYTE *)(v17 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v15[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (a3)
  {
    v18 = *(_DWORD *)(a3 + 16);
    if ((v18 & 0x20) != 0)
      return JSC::JSObject::deleteProperty();
    v19 = *(_WORD **)(a3 + 8);
    v20 = *(unsigned int *)(a3 + 4);
    if ((v18 & 4) == 0)
    {
      if ((_DWORD)v20 && (v21 = (unsigned __int16)*v19 - 48, v21 <= 9))
      {
        if (v20 < 2 || *v19 != 48)
        {
          v25 = v19 + 1;
          v26 = v20 - 1;
          while (v26)
          {
            if (v21 <= 0x19999999)
            {
              v27 = *v25 - 48;
              if (v27 <= 9)
              {
                v28 = __CFADD__(v27, 10 * v21);
                v21 = v27 + 10 * v21;
                ++v25;
                --v26;
                if (!v28)
                  continue;
              }
            }
            goto LABEL_27;
          }
          v29 = v21 == -1;
          v23 = v21 & 0xFFFFFF00;
          v22 = 0x100000000;
          if (v21 == -1)
          {
            v22 = 0;
            LOBYTE(v21) = 0;
          }
          if (v29)
            v23 = 0;
LABEL_29:
          v21 = v21;
          if ((v22 & 0x100000000) != 0)
            return (*(unsigned int (**)(_QWORD *))(*v6 + 16))(v6) <= (v23 | v21);
          goto LABEL_54;
        }
        v22 = 0;
      }
      else
      {
LABEL_27:
        v22 = 0;
        LOBYTE(v21) = 0;
      }
      v23 = 0;
      goto LABEL_29;
    }
    if ((_DWORD)v20)
    {
      v30 = *(unsigned __int8 *)v19 - 48;
      if (v30 <= 9 && (v20 < 2 || *(_BYTE *)v19 != 48))
      {
        v59 = v20 - 1;
        v60 = (unsigned __int8 *)v19 + 1;
        while (v59)
        {
          if (v30 > 0x19999999)
            goto LABEL_51;
          v61 = *v60 - 48;
          if (v61 > 9)
            goto LABEL_51;
          v21 = 0;
          LOBYTE(v20) = 0;
          v31 = 0;
          v28 = __CFADD__(v61, 10 * v30);
          v30 = v61 + 10 * v30;
          --v59;
          ++v60;
          if (v28)
            goto LABEL_53;
        }
        if (v30 == -1)
          v21 = 0;
        else
          v21 = v30 & 0xFFFFFF00;
        if (v30 == -1)
          LOBYTE(v20) = 0;
        else
          LOBYTE(v20) = v30;
        if (v30 == -1)
          v31 = 0;
        else
          v31 = 0x100000000;
LABEL_53:
        v23 = v20;
        if ((v31 & 0x100000000) != 0)
          return (*(unsigned int (**)(_QWORD *))(*v6 + 16))(v6) <= (v23 | v21);
LABEL_54:
        *(_DWORD *)a3 += 2;
        v32 = (WTF::StringImpl *)a3;
        goto LABEL_55;
      }
LABEL_51:
      v21 = 0;
      LOBYTE(v20) = 0;
    }
    else
    {
      v21 = 0;
    }
    v31 = 0;
    goto LABEL_53;
  }
  v32 = 0;
LABEL_55:
  v65 = v32;
  isSupportedPropertyName = WebCore::HTMLCollection::isSupportedPropertyName(v6, (uint64_t *)&v65);
  v35 = v65;
  v65 = 0;
  if (!v35)
    goto LABEL_58;
  if (*(_DWORD *)v35 == 2)
  {
    WTF::StringImpl::destroy(v35, v33);
    if (isSupportedPropertyName)
      goto LABEL_59;
    return JSC::JSObject::deleteProperty();
  }
  *(_DWORD *)v35 -= 2;
LABEL_58:
  if (!isSupportedPropertyName)
    return JSC::JSObject::deleteProperty();
LABEL_59:
  v36 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v67 = 0xFFFFFFFF00000000;
  v69 = 0;
  v70 = 0;
  v68 = a1;
  v71 = 196608;
  v72 = 0;
  v75 = 0;
  v76 = 0;
  v73 = v36;
  ++*((_DWORD *)v36 + 1);
  v74 = 1;
  if ((a3 >> 4))
  {
    v37 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((a3 >> 4) & ~*(_DWORD *)(v37 + 0x20)) == 0)
    {
      v38 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v36);
      if (v38)
      {
        v77 = a3;
        v39 = JSC::PropertyTable::get(v38, (uint64_t *)&v77);
        if ((_DWORD)v39 != -1)
        {
          if ((int)v39 > 63)
          {
            v46 = *(_QWORD *)(a1 + 8) - 8;
            v47 = 0x3F00000000 - (v39 << 32);
          }
          else
          {
            v46 = a1 + 16;
            v47 = v39 << 32;
          }
          v48 = *(_QWORD *)(v46 + (v47 >> 29));
          if ((v48 & 0xFFFE000000000002) == 0)
          {
            v49 = *(unsigned __int8 *)(v48 + 5);
            if (v49 == 6)
            {
              v53 = *(_DWORD *)(v37 + 16) & 3;
              v54 = *(_QWORD *)(v48 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x4C))
              {
                v56 = *(_QWORD *)(v48 + 24);
                v55 = *(_QWORD *)(v48 + 32);
                v65 = *(WTF::StringImpl **)(v48 + 8);
                v66 = v54;
                LODWORD(v67) = HIDWORD(v39);
                v69 = a1;
                BYTE1(v71) = 3;
                result = 1;
                if (v53 != 2)
                  LOBYTE(v71) = 1;
                HIBYTE(v71) = 1;
                v75 = v56;
                v76 = v55;
              }
              else
              {
                v65 = *(WTF::StringImpl **)(v48 + 8);
                v66 = v54;
                LODWORD(v67) = HIDWORD(v39);
                v69 = a1;
                result = 1;
                BYTE1(v71) = 3;
                if (v53 != 2)
                  LOBYTE(v71) = 1;
              }
              goto LABEL_74;
            }
            if (v49 == 5)
            {
              JSC::JSObject::fillGetterPropertySlot();
              result = 1;
              goto LABEL_74;
            }
          }
          v65 = (WTF::StringImpl *)v48;
          v69 = a1;
          v67 = __PAIR64__(v39, HIDWORD(v39));
          result = 1;
          LOWORD(v71) = 257;
          goto LABEL_74;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
  {
    result = JSC::JSObject::getOwnStaticPropertySlot();
    if (!a3 || (result & 1) != 0)
      goto LABEL_74;
  }
  else if (!a3)
  {
LABEL_73:
    result = 0;
    goto LABEL_74;
  }
  v40 = *(_DWORD *)(a3 + 16);
  if ((v40 & 0x20) != 0)
    goto LABEL_73;
  v41 = *(_BYTE **)(a3 + 8);
  v42 = *(unsigned int *)(a3 + 4);
  if ((v40 & 4) != 0)
  {
    if (!(_DWORD)v42 || (v57 = *v41 - 48, v57 > 9) || v42 >= 2 && *v41 == 48)
    {
LABEL_113:
      v58 = 0;
    }
    else
    {
      v62 = v42 - 1;
      v63 = v41 + 1;
      while (v62)
      {
        if (v57 > 0x19999999)
          goto LABEL_113;
        v64 = *v63 - 48;
        if (v64 > 9)
          goto LABEL_113;
        v58 = 0;
        v28 = __CFADD__(v64, 10 * v57);
        v57 = v64 + 10 * v57;
        --v62;
        ++v63;
        if (v28)
          goto LABEL_114;
      }
      v58 = 0x100000000;
      if (v57 == -1)
        v58 = 0;
    }
LABEL_114:
    if ((v58 & 0x100000000) == 0)
      goto LABEL_73;
  }
  else
  {
    if ((_DWORD)v42
      && (v43 = *(unsigned __int16 *)v41 - 48, v43 <= 9)
      && (v42 < 2 || *(_WORD *)v41 != 48))
    {
      v50 = (unsigned __int16 *)(v41 + 2);
      v51 = v42 - 1;
      while (v51)
      {
        if (v43 <= 0x19999999)
        {
          v52 = *v50 - 48;
          if (v52 <= 9)
          {
            v28 = __CFADD__(v52, 10 * v43);
            v43 = v52 + 10 * v43;
            ++v50;
            --v51;
            if (!v28)
              continue;
          }
        }
        goto LABEL_71;
      }
      v10 = v43 == -1;
      v44 = 0x100000000;
      if (v10)
        v44 = 0;
    }
    else
    {
LABEL_71:
      v44 = 0;
    }
    if ((v44 & 0x100000000) == 0)
      goto LABEL_73;
  }
  result = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_74:
  if (v74)
  {
    v45 = *((_DWORD *)v73 + 1);
    if (!v45)
    {
      __break(0xC471u);
      JUMPOUT(0x194C0CB08);
    }
    *((_DWORD *)v73 + 1) = v45 - 1;
  }
  if ((_DWORD)result)
    return JSC::JSObject::deleteProperty();
  return result;
}

uint64_t WebCore::JSHTMLFormControlsCollection::deletePropertyByIndex(WebCore::JSHTMLFormControlsCollection *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  }
  if (!v15[65])
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSHTMLFormControlsCollection::getOwnPropertySlot(unint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4)
{
  return WebCore::JSHTMLFormControlsCollection::legacyPlatformObjectGetOwnProperty(a1, a2, a3, a4, 0);
}

uint64_t WebCore::JSHTMLFormControlsCollection::getOwnPropertySlotByIndex(WebCore::HTMLFormControlsCollection **this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  JSC::VM *v8;
  WebCore::JSDOMGlobalObject *v9;
  WebCore::HTMLElement *v10;
  uint64_t v11;
  uint64_t OwnPropertySlotByIndex;
  WebCore::Element *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  _BYTE v18[8];
  int v19;
  char v20;
  WTF::StringImpl *v21;
  char v22;

  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((_DWORD)a3 == -1)
  {
    JSC::Identifier::from();
    _ZN7WebCoreL26accessVisibleNamedPropertyILNS_22LegacyOverrideBuiltInsE0ENS_28JSHTMLFormControlsCollectionERZNS_L39visibleNamedPropertyItemAccessorFunctorINS_8IDLUnionIJNS_12IDLInterfaceINS_13RadioNodeListEEENS5_INS_7ElementEEEEEES2_ZNS2_34legacyPlatformObjectGetOwnPropertyEPN3JSC8JSObjectEPNSB_14JSGlobalObjectENSB_12PropertyNameERNSB_12PropertySlotEbE3__0EEDcOT1_EUlRS2_SG_E_EEDTclfp2_fp0_fp1_EERSE_RT0_SG_SM_((unint64_t)v18, (uint64_t)a2, (unint64_t)this, (unint64_t)v21);
    if (v20)
    {
      v16 = WebCore::JSConverter<WebCore::IDLNullable<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::RadioNodeList>,WebCore::IDLInterface<WebCore::Element>>>>::convert<std::variant<WTF::RefPtr<WebCore::RadioNodeList,WTF::RawPtrTraits<WebCore::RadioNodeList>,WTF::DefaultRefDerefTraits<WebCore::RadioNodeList>>,WTF::RefPtr<WebCore::Element,WTF::RawPtrTraits<WebCore::Element>,WTF::DefaultRefDerefTraits<WebCore::Element>>>>((uint64_t)a2, *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), (uint64_t)v18, v14);
      if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
      {
        OwnPropertySlotByIndex = 0;
      }
      else
      {
        *(_QWORD *)a4 = v16;
        *(_DWORD *)(a4 + 16) = 2;
        *(_QWORD *)(a4 + 32) = this;
        OwnPropertySlotByIndex = 1;
        *(_BYTE *)(a4 + 49) = 1;
      }
      if (v20 && v19 != -1)
        ((void (*)(char *, _BYTE *))off_1E329B780[v19])(&v22, v18);
    }
    else
    {
      OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
    }
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v15);
      else
        *(_DWORD *)v17 -= 2;
    }
    return OwnPropertySlotByIndex;
  }
  v9 = (WebCore::JSDOMGlobalObject *)WebCore::HTMLFormControlsCollection::item(this[3], a3);
  if (v9)
  {
    v11 = WebCore::toJS(a2, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v9, v10);
    if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
      return 0;
    *(_QWORD *)a4 = v11;
    *(_DWORD *)(a4 + 16) = 2;
    *(_QWORD *)(a4 + 32) = this;
    OwnPropertySlotByIndex = 1;
    *(_BYTE *)(a4 + 49) = 1;
    return OwnPropertySlotByIndex;
  }
  return JSC::JSObject::getOwnPropertySlotByIndex();
}

uint64_t WebCore::JSHTMLFormControlsCollection::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unsigned int v5;
  unsigned int v6;
  int v7;
  uint64_t *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl **v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  int v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  _QWORD *v44;
  WTF::StringImpl *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  WTF::StringImpl *v56;
  int v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unsigned int v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t *v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  unint64_t v76;
  unsigned int v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v86;
  WTF::StringImpl *v87[2];
  char v88;
  WTF::StringImpl *v89;

  v5 = WebCore::CollectionIndexCache<WebCore::HTMLFormControlsCollection,WebCore::Element *>::nodeCount(*(_QWORD *)(a1 + 24) + 40, *(WebCore::HTMLCollection **)(a1 + 24));
  if (v5)
  {
    v6 = v5;
    v7 = 0;
    v8 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v10 = v86;
      v89 = v86;
      v11 = *((_DWORD *)v86 + 4);
      if ((v11 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v86 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v12 = *a3;
      v13 = *(unsigned int *)(*a3 + 20);
      if (v13 <= 0x13)
      {
        if ((_DWORD)v13)
        {
          v14 = *(WTF::StringImpl ***)(v12 + 8);
          while (*v14 != v86)
          {
            ++v14;
            if (!--v13)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v11 & 0x20) != 0)
        {
          v35 = *(_DWORD *)v10 + 2;
        }
        else
        {
          if ((v11 & 0x10) != 0)
          {
            *(_DWORD *)v10 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v10 = v87[0];
          }
          v35 = *(_DWORD *)v10;
          *(_DWORD *)v10 += 2;
          if (!v35)
          {
            WTF::StringImpl::destroy(v10, v9);
LABEL_54:
            v36 = (uint64_t *)(v12 + 8);
            v87[0] = v10;
            v37 = *(unsigned int *)(v12 + 20);
            if ((_DWORD)v37 == *(_DWORD *)(v12 + 16))
            {
              v38 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v36, v37 + 1, (unint64_t)v87);
              v37 = *(unsigned int *)(v12 + 20);
              v39 = *(_QWORD *)(v12 + 8);
              v40 = *v38;
              *v38 = 0;
              *(_QWORD *)(v39 + 8 * v37) = v40;
            }
            else
            {
              v41 = *v36;
              v87[0] = 0;
              *(_QWORD *)(v41 + 8 * v37) = v10;
            }
            *(_DWORD *)(v12 + 20) = v37 + 1;
            v42 = v87[0];
            v87[0] = 0;
            if (v42)
            {
              if (*(_DWORD *)v42 == 2)
                WTF::StringImpl::destroy(v42, v9);
              else
                *(_DWORD *)v42 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v10 = v35;
        goto LABEL_54;
      }
      if (!*v8 || !*(_DWORD *)(*v8 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v89, (uint64_t)v87);
      if (v88)
      {
        v10 = v89;
        v12 = *a3;
        v11 = *((_DWORD *)v89 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v43 = v86;
      v86 = 0;
      if (v43)
      {
        if (*(_DWORD *)v43 == 2)
          WTF::StringImpl::destroy(v43, v9);
        else
          *(_DWORD *)v43 -= 2;
      }
      if (++v7 == v6)
        goto LABEL_69;
    }
    v15 = *(uint64_t **)(v12 + 8);
    v16 = &v15[v13];
    while (1)
    {
      v17 = *v15;
      v18 = *v8;
      if (*v8
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v18 = *v8) != 0))
      {
        v19 = *(_DWORD *)(v18 - 8);
      }
      else
      {
        v19 = 0;
      }
      v20 = (~(v17 << 32) + v17) ^ ((unint64_t)(~(v17 << 32) + v17) >> 22);
      v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
      v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
      v23 = v19 & ((v22 >> 31) ^ v22);
      v24 = (uint64_t *)(v18 + 8 * v23);
      v25 = *v24;
      if (*v24)
      {
        v26 = 0;
        v27 = 1;
        while (v25 != v17)
        {
          if (v25 == -1)
            v26 = v24;
          v23 = (v23 + v27) & v19;
          v24 = (uint64_t *)(v18 + 8 * v23);
          v25 = *v24;
          ++v27;
          if (!*v24)
          {
            if (v26)
            {
              *v26 = 0;
              --*(_DWORD *)(*v8 - 16);
              v24 = v26;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v24 = v17;
      v28 = *v8;
      v29 = *v8 ? *(_DWORD *)(v28 - 12) + 1 : 1;
      *(_DWORD *)(v28 - 12) = v29;
      v30 = *v8;
      v31 = *v8 ? *(_DWORD *)(v30 - 12) : 0;
      v32 = (*(_DWORD *)(v30 - 16) + v31);
      v33 = *(unsigned int *)(v30 - 4);
      if (v33 > 0x400)
        break;
      if (3 * v33 <= 4 * v32)
      {
        if ((_DWORD)v33)
          goto LABEL_43;
        v34 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v15 == v16)
        goto LABEL_17;
    }
    if (v33 > 2 * v32)
      goto LABEL_47;
LABEL_43:
    v34 = (_DWORD)v33 << (6 * *(_DWORD *)(v30 - 12) >= (2 * v33));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v34, v24);
    goto LABEL_47;
  }
LABEL_69:
  v44 = *(_QWORD **)(a1 + 24);
  (*(void (**)(_QWORD *))(*v44 + 80))(v44);
  v46 = v44[4];
  v47 = *(unsigned int *)(v46 + 28);
  if ((_DWORD)v47)
  {
    v48 = *(uint64_t **)(v46 + 16);
    v49 = &v48[v47];
    v50 = a3 + 1;
    while (1)
    {
      v51 = *v48;
      if (*v48)
        *(_DWORD *)v51 += 2;
      v89 = (WTF::StringImpl *)v51;
      v52 = *(_DWORD *)(v51 + 16);
      if ((v52 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*(_BYTE *)(v51 + 36) & 4) != 0)
        {
LABEL_131:
          if (*(_DWORD *)v51 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v51, v45);
          else
            *(_DWORD *)v51 -= 2;
          goto LABEL_133;
        }
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_131;
      }
      v53 = *a3;
      v54 = *(unsigned int *)(*a3 + 20);
      if (v54 > 0x13)
        break;
      if ((_DWORD)v54)
      {
        v55 = *(_QWORD **)(v53 + 8);
        while (*v55 != v51)
        {
          ++v55;
          if (!--v54)
            goto LABEL_84;
        }
LABEL_130:
        if (v51)
          goto LABEL_131;
        goto LABEL_133;
      }
LABEL_84:
      v56 = (WTF::StringImpl *)v51;
      if ((v52 & 0x20) != 0)
      {
LABEL_91:
        v57 = *(_DWORD *)v56 + 2;
LABEL_123:
        *(_DWORD *)v56 = v57;
        goto LABEL_124;
      }
LABEL_85:
      if ((v52 & 0x10) != 0)
      {
        *(_DWORD *)v56 += 2;
      }
      else
      {
        WTF::AtomStringImpl::addSlowCase();
        v56 = v87[0];
      }
      v57 = *(_DWORD *)v56;
      *(_DWORD *)v56 += 2;
      if (v57)
        goto LABEL_123;
      WTF::StringImpl::destroy(v56, v45);
LABEL_124:
      v78 = (uint64_t *)(v53 + 8);
      v87[0] = v56;
      v79 = *(unsigned int *)(v53 + 20);
      if ((_DWORD)v79 == *(_DWORD *)(v53 + 16))
      {
        v80 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v78, v79 + 1, (unint64_t)v87);
        v79 = *(unsigned int *)(v53 + 20);
        v81 = *(_QWORD *)(v53 + 8);
        v82 = *v80;
        *v80 = 0;
        *(_QWORD *)(v81 + 8 * v79) = v82;
      }
      else
      {
        v83 = *v78;
        v87[0] = 0;
        *(_QWORD *)(v83 + 8 * v79) = v56;
      }
      *(_DWORD *)(v53 + 20) = v79 + 1;
      v84 = v87[0];
      v87[0] = 0;
      if (!v84)
        goto LABEL_130;
      if (*(_DWORD *)v84 != 2)
      {
        *(_DWORD *)v84 -= 2;
        goto LABEL_130;
      }
      WTF::StringImpl::destroy(v84, v45);
      if (v51)
        goto LABEL_131;
LABEL_133:
      if (++v48 == v49)
        return JSC::JSObject::getOwnPropertyNames();
    }
    if (*v50 && *(_DWORD *)(*v50 - 12))
    {
LABEL_89:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v89, (uint64_t)v87);
      if (!v88)
        goto LABEL_130;
      v56 = v89;
      v53 = *a3;
      v52 = *((_DWORD *)v89 + 4);
      if ((v52 & 0x20) != 0)
        goto LABEL_91;
      goto LABEL_85;
    }
    v58 = *(uint64_t **)(v53 + 8);
    v59 = &v58[v54];
    while (1)
    {
      v60 = *v58;
      v61 = *v50;
      if (*v50
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v61 = *v50) != 0))
      {
        v62 = *(_DWORD *)(v61 - 8);
      }
      else
      {
        v62 = 0;
      }
      v63 = (~(v60 << 32) + v60) ^ ((unint64_t)(~(v60 << 32) + v60) >> 22);
      v64 = 9 * ((v63 + ~(v63 << 13)) ^ ((v63 + ~(v63 << 13)) >> 8));
      v65 = (v64 ^ (v64 >> 15)) + ~((v64 ^ (v64 >> 15)) << 27);
      v66 = v62 & ((v65 >> 31) ^ v65);
      v67 = (uint64_t *)(v61 + 8 * v66);
      v68 = *v67;
      if (*v67)
      {
        v69 = 0;
        v70 = 1;
        while (v68 != v60)
        {
          if (v68 == -1)
            v69 = v67;
          v66 = (v66 + v70) & v62;
          v67 = (uint64_t *)(v61 + 8 * v66);
          v68 = *v67;
          ++v70;
          if (!*v67)
          {
            if (v69)
            {
              *v69 = 0;
              --*(_DWORD *)(*v50 - 16);
              v67 = v69;
            }
            goto LABEL_104;
          }
        }
        goto LABEL_117;
      }
LABEL_104:
      *v67 = v60;
      v71 = *v50;
      v72 = *v50 ? *(_DWORD *)(v71 - 12) + 1 : 1;
      *(_DWORD *)(v71 - 12) = v72;
      v73 = *v50;
      v74 = *v50 ? *(_DWORD *)(v73 - 12) : 0;
      v75 = (*(_DWORD *)(v73 - 16) + v74);
      v76 = *(unsigned int *)(v73 - 4);
      if (v76 > 0x400)
        break;
      if (3 * v76 <= 4 * v75)
      {
        if ((_DWORD)v76)
          goto LABEL_113;
        v77 = 8;
        goto LABEL_116;
      }
LABEL_117:
      if (++v58 == v59)
        goto LABEL_89;
    }
    if (v76 > 2 * v75)
      goto LABEL_117;
LABEL_113:
    v77 = (_DWORD)v76 << (6 * *(_DWORD *)(v73 - 12) >= (2 * v76));
LABEL_116:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v77, v67);
    goto LABEL_117;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSHTMLFormControlsCollection::defineOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5)
{
  JSC::VM *v8;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  int OwnPropertySlotByIndex;
  int v21;
  int v22;
  unsigned __int16 *v23;
  uint64_t v24;
  unsigned int v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unsigned __int16 *v31;
  uint64_t v32;
  unsigned int v33;
  int OwnStaticPropertySlot;
  BOOL v35;
  int hasExceptionsAfterHandlingTraps;
  _QWORD *v37;
  uint64_t v38;
  WTF::StringImpl *v39;
  int isSupportedPropertyName;
  WTF::StringImpl *v41;
  uint64_t v43;
  unsigned __int8 *v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 *v49;
  unsigned int v50;
  uint64_t v51;
  JSC::VM *v52;
  WTF::StringImpl *v53;

  v8 = *(JSC::VM **)(a2 + 56);
  v52 = v8;
  if (a3)
  {
    v9 = *(_DWORD *)(a3 + 16);
    if ((v9 & 0x20) != 0)
      return JSC::JSObject::defineOwnProperty();
    v10 = *(_BYTE **)(a3 + 8);
    v11 = *(unsigned int *)(a3 + 4);
    if ((v9 & 4) != 0)
    {
      if (!(_DWORD)v11)
        goto LABEL_8;
      v12 = *v10 - 48;
      if (v12 > 9 || v11 >= 2 && *v10 == 48)
        goto LABEL_8;
      v43 = v11 - 1;
      v44 = v10 + 1;
      while (v43)
      {
        if (v12 <= 0x19999999)
        {
          v45 = *v44 - 48;
          if (v45 <= 9)
          {
            v26 = __CFADD__(v45, 10 * v12);
            v12 = v45 + 10 * v12;
            --v43;
            ++v44;
            if (!v26)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v11)
        goto LABEL_8;
      v12 = *(unsigned __int16 *)v10 - 48;
      if (v12 > 9 || v11 >= 2 && *(_WORD *)v10 == 48)
        goto LABEL_8;
      v23 = (unsigned __int16 *)(v10 + 2);
      v24 = v11 - 1;
      while (v24)
      {
        if (v12 <= 0x19999999)
        {
          v25 = *v23 - 48;
          if (v25 <= 9)
          {
            v26 = __CFADD__(v25, 10 * v12);
            v12 = v25 + 10 * v12;
            ++v23;
            --v24;
            if (!v26)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v12 != -1)
    {
      if (a5)
        JSC::throwTypeError();
      return 0;
    }
  }
LABEL_8:
  v51 = *(_QWORD *)(a2 + 56);
  ++*((_DWORD *)v8 + 1);
  if (!(a3 >> 4)
    || ((a3 >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x20)) != 0
    || (v13 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v8)) == 0
    || (v53 = (WTF::StringImpl *)a3, v14 = JSC::PropertyTable::get(v13, (uint64_t *)&v53), (_DWORD)v14 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
    {
      OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
      OwnPropertySlotByIndex = OwnStaticPropertySlot;
      if (!a3 || (OwnStaticPropertySlot & 1) != 0)
        goto LABEL_23;
    }
    else if (!a3)
    {
      goto LABEL_22;
    }
    v15 = *(_DWORD *)(a3 + 16);
    if ((v15 & 0x20) == 0)
    {
      v16 = *(_BYTE **)(a3 + 8);
      v17 = *(unsigned int *)(a3 + 4);
      if ((v15 & 4) != 0)
      {
        if (!(_DWORD)v17 || (v46 = *v16 - 48, v46 > 9) || v17 >= 2 && *v16 == 48)
        {
LABEL_88:
          v47 = 0;
        }
        else
        {
          v48 = v17 - 1;
          v49 = v16 + 1;
          while (v48)
          {
            if (v46 > 0x19999999)
              goto LABEL_88;
            v50 = *v49 - 48;
            if (v50 > 9)
              goto LABEL_88;
            v47 = 0;
            v26 = __CFADD__(v50, 10 * v46);
            v46 = v50 + 10 * v46;
            --v48;
            ++v49;
            if (v26)
              goto LABEL_89;
          }
          v47 = 0x100000000;
          if (v46 == -1)
            v47 = 0;
        }
LABEL_89:
        if ((v47 & 0x100000000) == 0)
          goto LABEL_22;
      }
      else
      {
        if ((_DWORD)v17
          && (v18 = *(unsigned __int16 *)v16 - 48, v18 <= 9)
          && (v17 < 2 || *(_WORD *)v16 != 48))
        {
          v31 = (unsigned __int16 *)(v16 + 2);
          v32 = v17 - 1;
          while (v32)
          {
            if (v18 <= 0x19999999)
            {
              v33 = *v31 - 48;
              if (v33 <= 9)
              {
                v26 = __CFADD__(v33, 10 * v18);
                v18 = v33 + 10 * v18;
                ++v31;
                --v32;
                if (!v26)
                  continue;
              }
            }
            goto LABEL_20;
          }
          v35 = v18 == -1;
          v19 = 0x100000000;
          if (v35)
            v19 = 0;
        }
        else
        {
LABEL_20:
          v19 = 0;
        }
        if ((v19 & 0x100000000) == 0)
          goto LABEL_22;
      }
      OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
      goto LABEL_23;
    }
LABEL_22:
    OwnPropertySlotByIndex = 0;
    goto LABEL_23;
  }
  if ((int)v14 > 63)
  {
    v27 = *(_QWORD *)(a1 + 8) - 8;
    v28 = 0x3F00000000 - (v14 << 32);
  }
  else
  {
    v27 = a1 + 16;
    v28 = v14 << 32;
  }
  v29 = *(_QWORD *)(v27 + (v28 >> 29));
  if ((v29 & 0xFFFE000000000002) != 0)
    goto LABEL_39;
  v30 = *(unsigned __int8 *)(v29 + 5);
  if (v30 == 6)
  {
    OwnPropertySlotByIndex = 1;
    goto LABEL_23;
  }
  if (v30 != 5)
  {
LABEL_39:
    OwnPropertySlotByIndex = 1;
    goto LABEL_23;
  }
  JSC::JSObject::fillGetterPropertySlot();
  OwnPropertySlotByIndex = 1;
LABEL_23:
  v21 = *(_DWORD *)(v51 + 4);
  if (!v21)
  {
    __break(0xC471u);
    JUMPOUT(0x194C0DA60);
  }
  *(_DWORD *)(v51 + 4) = v21 - 1;
  if (*((_DWORD *)v52 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v52);
    if (((hasExceptionsAfterHandlingTraps | OwnPropertySlotByIndex) & 1) != 0)
    {
      v22 = hasExceptionsAfterHandlingTraps ^ 1;
      goto LABEL_66;
    }
  }
  else if ((OwnPropertySlotByIndex & 1) != 0)
  {
    v22 = 1;
    goto LABEL_66;
  }
  v37 = *(_QWORD **)(a1 + 24);
  if (a3)
  {
    *(_DWORD *)a3 += 2;
    v38 = a3;
  }
  else
  {
    v38 = 0;
  }
  v53 = (WTF::StringImpl *)v38;
  isSupportedPropertyName = WebCore::HTMLCollection::isSupportedPropertyName(v37, (uint64_t *)&v53);
  v41 = v53;
  v53 = 0;
  if (v41)
  {
    if (*(_DWORD *)v41 == 2)
      WTF::StringImpl::destroy(v41, v39);
    else
      *(_DWORD *)v41 -= 2;
  }
  if ((isSupportedPropertyName & a5) == 1)
  {
    JSC::throwTypeError();
    v22 = 0;
  }
  else
  {
    v22 = isSupportedPropertyName ^ 1;
  }
LABEL_66:
  if (v22)
    return JSC::JSObject::defineOwnProperty();
  return 0;
}

uint64_t WebCore::JSHTMLFormControlsCollection::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLCollection::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLCollection::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLCollection::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLFormControlsCollection::createPrototype(WebCore::JSHTMLFormControlsCollection *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  uint64_t v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = WebCore::getDOMStructure<WebCore::JSHTMLCollection>((uint64_t *)this, (uint64_t)a2);
  v6 = JSC::Structure::create((uint64_t *)this, v3, *(JSC::JSCell **)(v5 + 48));
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLFormControlsCollectionPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSHTMLFormControlsCollectionPrototype::create(WebCore::JSHTMLFormControlsCollectionPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLFormControlsCollectionPrototype::finishCreation((WebCore::JSHTMLFormControlsCollectionPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFormControlsCollection>,(WebCore::DOMConstructorID)532>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4256);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCollection>,(WebCore::DOMConstructorID)519>(a1, a2);
  v7 = v6;
  LODWORD(v21) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v21, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFormControlsCollection>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v20);
    v10[2848] = v2 + (int)v20;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v21);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLFormControlsCollection>((WebCore::JSHTMLFormControlsCollection *)a1, (JSC::VM *)a2)+ 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4256) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

uint64_t WebCore::JSHTMLFormControlsCollection::legacyPlatformObjectGetOwnProperty(unint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4, char a5)
{
  JSC::VM *v9;
  int v10;
  _WORD *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  WebCore::Element *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BYTE *v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  WebCore::JSDOMGlobalObject *v27;
  WebCore::HTMLElement *v28;
  uint64_t v29;
  unsigned __int16 *v30;
  uint64_t v31;
  unsigned int v32;
  BOOL v33;
  unsigned __int16 *v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  BOOL v38;
  uint64_t OwnStaticPropertySlot;
  uint64_t v40;
  int v41;
  _BYTE *v42;
  uint64_t v43;
  unsigned int v44;
  unsigned __int16 *v45;
  uint64_t i;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  unsigned int v58;
  uint64_t v59;
  unsigned __int8 *v60;
  unsigned int v61;
  uint64_t v62;
  unsigned __int8 *v63;
  unsigned int v64;
  unsigned __int8 *v65;
  uint64_t v66;
  unsigned int v67;
  unint64_t v68;
  int v69;
  char v70;
  char v71;

  v9 = a2[7];
  if (!a3)
    goto LABEL_10;
  v10 = *(_DWORD *)(a3 + 16);
  if ((v10 & 0x20) != 0)
    goto LABEL_10;
  v11 = *(_WORD **)(a3 + 8);
  v12 = *(unsigned int *)(a3 + 4);
  if ((v10 & 4) == 0)
  {
    if ((_DWORD)v12 && (v13 = (unsigned __int16)*v11 - 48, v13 <= 9))
    {
      if (v12 < 2 || *v11 != 48)
      {
        v34 = v11 + 1;
        v35 = v12 - 1;
        while (v35)
        {
          if (v13 <= 0x19999999)
          {
            v36 = *v34 - 48;
            if (v36 <= 9)
            {
              v33 = __CFADD__(v36, 10 * v13);
              v13 = v36 + 10 * v13;
              ++v34;
              --v35;
              if (!v33)
                continue;
            }
          }
          goto LABEL_6;
        }
        v38 = v13 == -1;
        v15 = v13 & 0xFFFFFF00;
        v14 = 0x100000000;
        if (v13 == -1)
        {
          v14 = 0;
          LOBYTE(v13) = 0;
        }
        if (v38)
          v15 = 0;
        goto LABEL_8;
      }
      v14 = 0;
    }
    else
    {
LABEL_6:
      v14 = 0;
      LOBYTE(v13) = 0;
    }
    v15 = 0;
LABEL_8:
    v13 = v13;
    goto LABEL_9;
  }
  if ((_DWORD)v12)
  {
    v57 = *(unsigned __int8 *)v11 - 48;
    if (v57 <= 9 && (v12 < 2 || *(_BYTE *)v11 != 48))
    {
      v62 = v12 - 1;
      v63 = (unsigned __int8 *)v11 + 1;
      while (v62)
      {
        if (v57 > 0x19999999)
          goto LABEL_107;
        v64 = *v63 - 48;
        if (v64 > 9)
          goto LABEL_107;
        v13 = 0;
        LOBYTE(v12) = 0;
        v14 = 0;
        v33 = __CFADD__(v64, 10 * v57);
        v57 = v64 + 10 * v57;
        --v62;
        ++v63;
        if (v33)
          goto LABEL_109;
      }
      if (v57 == -1)
        v13 = 0;
      else
        v13 = v57 & 0xFFFFFF00;
      if (v57 == -1)
        LOBYTE(v12) = 0;
      else
        LOBYTE(v12) = v57;
      if (v57 == -1)
        v14 = 0;
      else
        v14 = 0x100000000;
      goto LABEL_109;
    }
LABEL_107:
    v13 = 0;
    LOBYTE(v12) = 0;
  }
  else
  {
    v13 = 0;
  }
  v14 = 0;
LABEL_109:
  v15 = v12;
LABEL_9:
  if ((v14 & 0x100000000) != 0)
  {
    v27 = (WebCore::JSDOMGlobalObject *)WebCore::HTMLFormControlsCollection::item(*(WebCore::HTMLFormControlsCollection **)(a1 + 24), v15 | v13);
    if (v27)
    {
      v29 = WebCore::toJS((WebCore *)a2, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v27, v28);
      if (!*((_DWORD *)v9 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) == 0)
      {
        *(_QWORD *)a4 = v29;
        *(_DWORD *)(a4 + 16) = 2;
        *(_QWORD *)(a4 + 32) = a1;
        v25 = 1;
        *(_BYTE *)(a4 + 49) = 1;
        return v25;
      }
      return 0;
    }
    if (!(a3 >> 4)
      || (v17 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v17 + 0x20)) != 0)
      || (v40 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7])) == 0|| (v68 = a3, v19 = JSC::PropertyTable::get(v40, (uint64_t *)&v68), (_DWORD)v19 == -1))
    {
      if ((*(_BYTE *)(a1 + 6) & 0x20) == 0 || (JSC::JSObject::getOwnStaticPropertySlot() & 1) == 0)
      {
        v41 = *(_DWORD *)(a3 + 16);
        if ((v41 & 0x20) == 0)
        {
          v42 = *(_BYTE **)(a3 + 8);
          v43 = *(unsigned int *)(a3 + 4);
          if ((v41 & 4) != 0)
          {
            if (!(_DWORD)v43)
              return 0;
            v44 = *v42 - 48;
            if (v44 > 9 || v43 >= 2 && *v42 == 48)
              return 0;
            v59 = v43 - 1;
            v60 = v42 + 1;
            while (v59)
            {
              if (v44 > 0x19999999)
                return 0;
              v61 = *v60 - 48;
              if (v61 > 9)
                return 0;
              v25 = 0;
              v33 = __CFADD__(v61, 10 * v44);
              v44 = v61 + 10 * v44;
              --v59;
              ++v60;
              if (v33)
                return v25;
            }
          }
          else
          {
            if (!(_DWORD)v43)
              return 0;
            v44 = *(unsigned __int16 *)v42 - 48;
            if (v44 > 9 || v43 >= 2 && *(_WORD *)v42 == 48)
              return 0;
            v45 = (unsigned __int16 *)(v42 + 2);
            for (i = v43 - 1; i; --i)
            {
              if (v44 > 0x19999999)
                return 0;
              v47 = *v45 - 48;
              if (v47 > 9)
                return 0;
              v25 = 0;
              v33 = __CFADD__(v47, 10 * v44);
              v44 = v47 + 10 * v44;
              ++v45;
              if (v33)
                return v25;
            }
          }
          if (v44 != -1)
            return JSC::JSObject::getOwnPropertySlotByIndex();
        }
        return 0;
      }
      return 1;
    }
LABEL_84:
    if ((int)v19 > 63)
    {
      v48 = *(_QWORD *)(a1 + 8) - 8;
      v49 = 0x3F00000000 - (v19 << 32);
    }
    else
    {
      v48 = a1 + 16;
      v49 = v19 << 32;
    }
    v50 = *(_QWORD *)(v48 + (v49 >> 29));
    if ((v50 & 0xFFFE000000000002) != 0)
      goto LABEL_87;
    v51 = *(unsigned __int8 *)(v50 + 5);
    if (v51 == 6)
    {
      v52 = *(_DWORD *)(v17 + 16) & 3;
      v54 = *(_QWORD *)(v50 + 8);
      v53 = *(_QWORD *)(v50 + 16);
      if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v50 & 0xFFFFFFFE) + 0x4C))
      {
        v56 = *(_QWORD *)(v50 + 24);
        v55 = *(_QWORD *)(v50 + 32);
        *(_QWORD *)a4 = v54;
        *(_QWORD *)(a4 + 8) = v53;
        *(_DWORD *)(a4 + 16) = HIDWORD(v19);
        *(_QWORD *)(a4 + 32) = a1;
        *(_BYTE *)(a4 + 49) = 3;
        v25 = 1;
        if (v52 != 2)
          *(_BYTE *)(a4 + 48) = 1;
        *(_BYTE *)(a4 + 51) = 1;
        *(_QWORD *)(a4 + 72) = v56;
        *(_QWORD *)(a4 + 80) = v55;
      }
      else
      {
        *(_QWORD *)a4 = v54;
        *(_QWORD *)(a4 + 8) = v53;
        *(_DWORD *)(a4 + 16) = HIDWORD(v19);
        *(_QWORD *)(a4 + 32) = a1;
        v25 = 1;
        *(_BYTE *)(a4 + 49) = 3;
        if (v52 != 2)
          *(_BYTE *)(a4 + 48) = 1;
      }
      return v25;
    }
    if (v51 != 5)
    {
LABEL_87:
      *(_QWORD *)a4 = v50;
      *(_QWORD *)(a4 + 32) = a1;
      *(_DWORD *)(a4 + 16) = HIDWORD(v19);
      *(_DWORD *)(a4 + 20) = v19;
      v25 = 1;
      *(_WORD *)(a4 + 48) = 257;
      return v25;
    }
    JSC::JSObject::fillGetterPropertySlot();
    return 1;
  }
LABEL_10:
  if ((a5 & 1) == 0)
  {
    _ZN7WebCoreL26accessVisibleNamedPropertyILNS_22LegacyOverrideBuiltInsE0ENS_28JSHTMLFormControlsCollectionERZNS_L39visibleNamedPropertyItemAccessorFunctorINS_8IDLUnionIJNS_12IDLInterfaceINS_13RadioNodeListEEENS5_INS_7ElementEEEEEES2_ZNS2_34legacyPlatformObjectGetOwnPropertyEPN3JSC8JSObjectEPNSB_14JSGlobalObjectENSB_12PropertyNameERNSB_12PropertySlotEbE3__0EEDcOT1_EUlRS2_SG_E_EEDTclfp2_fp0_fp1_EERSE_RT0_SG_SM_((unint64_t)&v68, (uint64_t)a2, a1, a3);
    if (v70)
    {
      v37 = WebCore::JSConverter<WebCore::IDLNullable<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::RadioNodeList>,WebCore::IDLInterface<WebCore::Element>>>>::convert<std::variant<WTF::RefPtr<WebCore::RadioNodeList,WTF::RawPtrTraits<WebCore::RadioNodeList>,WTF::DefaultRefDerefTraits<WebCore::RadioNodeList>>,WTF::RefPtr<WebCore::Element,WTF::RawPtrTraits<WebCore::Element>,WTF::DefaultRefDerefTraits<WebCore::Element>>>>((uint64_t)a2, *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), (uint64_t)&v68, v16);
      if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
      {
        v25 = 0;
      }
      else
      {
        *(_QWORD *)a4 = v37;
        *(_DWORD *)(a4 + 16) = 2;
        *(_QWORD *)(a4 + 32) = a1;
        v25 = 1;
        *(_BYTE *)(a4 + 49) = 1;
      }
      if (v70 && v69 != -1)
        ((void (*)(char *, unint64_t *))off_1E329B780[v69])(&v71, &v68);
      return v25;
    }
    v9 = a2[7];
  }
  if ((a3 >> 4))
  {
    v17 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((a3 >> 4) & ~*(_DWORD *)(v17 + 0x20)) == 0)
    {
      v18 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v9);
      if (v18)
      {
        v68 = a3;
        v19 = JSC::PropertyTable::get(v18, (uint64_t *)&v68);
        if ((_DWORD)v19 != -1)
          goto LABEL_84;
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) == 0)
  {
    if (a3)
    {
LABEL_19:
      v20 = *(_DWORD *)(a3 + 16);
      if ((v20 & 0x20) != 0)
        return 0;
      v21 = *(_BYTE **)(a3 + 8);
      v22 = *(unsigned int *)(a3 + 4);
      if ((v20 & 4) != 0)
      {
        if ((_DWORD)v22)
        {
          v58 = *v21 - 48;
          if (v58 > 9 || v22 >= 2 && *v21 == 48)
          {
LABEL_112:
            v24 = 0;
          }
          else
          {
            v65 = v21 + 1;
            v66 = v22 - 1;
            while (v66)
            {
              if (v58 > 0x19999999)
                goto LABEL_112;
              v67 = *v65 - 48;
              if (v67 > 9)
                goto LABEL_112;
              v24 = 0;
              v33 = __CFADD__(v67, 10 * v58);
              v58 = v67 + 10 * v58;
              ++v65;
              --v66;
              if (v33)
                goto LABEL_24;
            }
            v24 = 0x100000000;
            if (v58 == -1)
              v24 = 0;
          }
        }
        else
        {
          v24 = 0;
        }
      }
      else if ((_DWORD)v22)
      {
        v23 = *(unsigned __int16 *)v21 - 48;
        if (v23 > 9 || v22 >= 2 && *(_WORD *)v21 == 48)
        {
LABEL_23:
          v24 = 0;
        }
        else
        {
          v30 = (unsigned __int16 *)(v21 + 2);
          v31 = v22 - 1;
          while (v31)
          {
            if (v23 <= 0x19999999)
            {
              v32 = *v30 - 48;
              if (v32 <= 9)
              {
                v33 = __CFADD__(v32, 10 * v23);
                v23 = v32 + 10 * v23;
                ++v30;
                --v31;
                if (!v33)
                  continue;
              }
            }
            goto LABEL_23;
          }
          v38 = v23 == -1;
          v24 = 0x100000000;
          if (v38)
            v24 = 0;
        }
      }
      else
      {
        v24 = 0;
      }
LABEL_24:
      if ((v24 & 0x100000000) == 0)
        return 0;
      return JSC::JSObject::getOwnPropertySlotByIndex();
    }
    return 0;
  }
  OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
  v25 = OwnStaticPropertySlot;
  if (a3 && (OwnStaticPropertySlot & 1) == 0)
    goto LABEL_19;
  return v25;
}

unint64_t _ZN7WebCoreL26accessVisibleNamedPropertyILNS_22LegacyOverrideBuiltInsE0ENS_28JSHTMLFormControlsCollectionERZNS_L39visibleNamedPropertyItemAccessorFunctorINS_8IDLUnionIJNS_12IDLInterfaceINS_13RadioNodeListEEENS5_INS_7ElementEEEEEES2_ZNS2_34legacyPlatformObjectGetOwnPropertyEPN3JSC8JSObjectEPNSB_14JSGlobalObjectENSB_12PropertyNameERNSB_12PropertySlotEbE3__0EEDcOT1_EUlRS2_SG_E_EEDTclfp2_fp0_fp1_EERSE_RT0_SG_SM_(unint64_t result, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v8;
  WebCore::HTMLFormControlsCollection *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  JSC::VM *v13;
  unint64_t v14;
  unsigned int v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned __int16 *v21;
  unsigned int v22;
  BOOL v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  unsigned int v37;
  uint64_t v38;
  _BYTE *v39;
  JSC::VM *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  _BYTE *v44;
  uint64_t v45;
  unsigned int v46;
  unsigned __int16 *v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  _BYTE *v56;
  uint64_t v57;
  unsigned int v58;
  unsigned __int16 *v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  unsigned __int8 *v63;
  unsigned int v64;
  int v65;
  int v66;
  unint64_t v67;
  JSC::VM *v68;
  uint64_t v69;
  char v70;
  int v71;
  int v72;
  unint64_t v73;
  unint64_t v74;
  char v75;
  unsigned __int8 *v76;
  uint64_t v77;
  unsigned int v78;
  JSC::VM *v79;
  uint64_t v80;
  int v81;
  unint64_t v82;
  char v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  const WTF::StringImpl *v90;
  const unsigned __int8 *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  JSC::VM *v95;
  uint64_t v96;
  int v97;
  int v98;
  int v99;
  unint64_t v100;
  unint64_t v101;
  char v102;
  WTF::StringImpl *v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  int v109;
  char v110;
  JSC::VM *v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  char v115[8];
  int v116;
  char v117;
  char v118;
  unint64_t v119;
  unsigned int v120;
  char v121;
  uint64_t v122;

  v6 = a3;
  v8 = result;
  v122 = *MEMORY[0x1E0C80C00];
  if (a4)
  {
    if ((*(_BYTE *)(a4 + 16) & 0x20) != 0)
    {
LABEL_36:
      *(_BYTE *)v8 = 0;
      *(_BYTE *)(v8 + 16) = 0;
      return result;
    }
    v9 = *(WebCore::HTMLFormControlsCollection **)(a3 + 24);
    *(_DWORD *)a4 += 2;
    v10 = (WTF::StringImpl *)a4;
  }
  else
  {
    v10 = 0;
    v9 = *(WebCore::HTMLFormControlsCollection **)(a3 + 24);
  }
  v103 = v10;
  WebCore::HTMLFormControlsCollection::namedItemOrItems(v9, (const WTF::AtomString *)&v103, (uint64_t)&v119);
  result = (unint64_t)v103;
  v103 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      result = WTF::StringImpl::destroy((WTF::StringImpl *)result, v11);
    else
      *(_DWORD *)result -= 2;
  }
  if (v121)
  {
    LOBYTE(v103) = 0;
    v4 = 0xFFFFFFFFLL;
    LODWORD(v104) = -1;
    v12 = v120;
    if (v120 == -1)
    {
      v115[0] = 0;
      v116 = -1;
      v117 = 1;
    }
    else
    {
      ((void (*)(char *, WTF::StringImpl **, unint64_t *))off_1E329B790[v120])(&v118, &v103, &v119);
      LODWORD(v104) = v12;
      v115[0] = 0;
      v116 = -1;
      result = ((uint64_t (*)(char *, char *, WTF::StringImpl **))off_1E32A0F70[v12])(&v118, v115, &v103);
      v116 = v12;
      v117 = 1;
      if ((_DWORD)v104 != -1)
        result = ((uint64_t (*)(char *, WTF::StringImpl **))off_1E329B780[v104])(&v118, &v103);
    }
    if (v121 && v120 != -1)
      result = ((uint64_t (*)(WTF::StringImpl **, unint64_t *))off_1E329B780[v120])(&v103, &v119);
  }
  else
  {
    v115[0] = 0;
    v117 = 0;
  }
  if (!v117)
    goto LABEL_36;
  v13 = *(JSC::VM **)(a2 + 56);
  v105 = 0xFFFFFFFF00000000;
  v107 = 0;
  v108 = 0;
  v106 = v6;
  v109 = 196608;
  v110 = 0;
  v113 = 0;
  v114 = 0;
  v111 = v13;
  ++*((_DWORD *)v13 + 1);
  v112 = 1;
  v14 = a4 >> 4;
  if ((a4 >> 4))
  {
    v4 = 16 * (*(_DWORD *)v6 & 0xFFFFFFFE);
    if ((v14 & ~*(_DWORD *)(v4 + 0x20)) == 0)
    {
      result = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE)), v13);
      if (result)
      {
        v119 = a4;
        result = JSC::PropertyTable::get(result, (uint64_t *)&v119);
        v15 = result;
        if ((_DWORD)result != -1)
        {
          v24 = HIDWORD(result);
          v25 = (uint64_t *)(v6 + 8 * (int)result + 16);
          if ((int)result >= 64)
            v25 = (uint64_t *)(*(_QWORD *)(v6 + 8) + ((uint64_t)(0x3F00000000 - (result << 32)) >> 29) - 8);
          v26 = *v25;
          if ((*v25 & 0xFFFE000000000002) == 0)
          {
            v27 = *(unsigned __int8 *)(v26 + 5);
            if (v27 == 6)
            {
              v28 = MEMORY[0x1E0CBE830];
              v29 = *(unsigned int *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x4C);
              v30 = *(_DWORD *)(v4 + 16);
              goto LABEL_48;
            }
            goto LABEL_42;
          }
LABEL_43:
          v103 = (WTF::StringImpl *)v26;
          v107 = v6;
LABEL_104:
          v105 = __PAIR64__(v15, v24);
          LOWORD(v109) = 257;
          goto LABEL_105;
        }
      }
    }
  }
  if ((*(_BYTE *)(v6 + 6) & 0x20) != 0)
  {
    result = JSC::JSObject::getOwnStaticPropertySlot();
    if ((result & 1) != 0)
      goto LABEL_105;
  }
  if (a4)
  {
    v16 = *(_DWORD *)(a4 + 16);
    if ((v16 & 0x20) == 0)
    {
      v17 = *(_BYTE **)(a4 + 8);
      v18 = *(unsigned int *)(a4 + 4);
      if ((v16 & 4) != 0)
      {
        if (!(_DWORD)v18)
          goto LABEL_65;
        v19 = *v17 - 48;
        if (v19 > 9 || v18 >= 2 && *v17 == 48)
          goto LABEL_65;
        v35 = v18 - 1;
        v36 = v17 + 1;
        while (v35)
        {
          if (v19 <= 0x19999999)
          {
            v37 = *v36 - 48;
            if (v37 <= 9)
            {
              v23 = __CFADD__(v37, 10 * v19);
              v19 = v37 + 10 * v19;
              --v35;
              ++v36;
              if (!v23)
                continue;
            }
          }
          goto LABEL_65;
        }
      }
      else
      {
        if (!(_DWORD)v18)
          goto LABEL_65;
        v19 = *(unsigned __int16 *)v17 - 48;
        if (v19 > 9 || v18 >= 2 && *(_WORD *)v17 == 48)
          goto LABEL_65;
        v20 = v18 - 1;
        v21 = (unsigned __int16 *)(v17 + 2);
        while (v20)
        {
          if (v19 <= 0x19999999)
          {
            v22 = *v21 - 48;
            if (v22 <= 9)
            {
              v23 = __CFADD__(v22, 10 * v19);
              v19 = v22 + 10 * v19;
              --v20;
              ++v21;
              if (!v23)
                continue;
            }
          }
          goto LABEL_65;
        }
      }
      if (v19 != -1)
      {
        result = JSC::JSObject::getOwnPropertySlotByIndex();
        if ((_DWORD)result)
          goto LABEL_105;
      }
    }
  }
LABEL_65:
  v38 = *(_QWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x30);
  if (!v38)
    v38 = *(_QWORD *)(v6 + 16);
  if ((v38 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v38 + 5) < 0x17u)
    goto LABEL_146;
  v39 = (_BYTE *)(v38 + 6);
  if ((*(_BYTE *)(v38 + 6) & 8) != 0)
  {
    v6 = v38;
LABEL_114:
    if (!a4)
      goto LABEL_203;
    v55 = *(_DWORD *)(a4 + 16);
    if ((v55 & 0x20) != 0)
      goto LABEL_203;
    v56 = *(_BYTE **)(a4 + 8);
    v57 = *(unsigned int *)(a4 + 4);
    if ((v55 & 4) != 0)
    {
      if (!(_DWORD)v57)
        goto LABEL_203;
      v58 = *v56 - 48;
      if (v58 > 9 || v57 >= 2 && *v56 == 48)
        goto LABEL_203;
      v76 = v56 + 1;
      v77 = v57 - 1;
      while (v77)
      {
        if (v58 <= 0x19999999)
        {
          v78 = *v76 - 48;
          if (v78 <= 9)
          {
            v23 = __CFADD__(v78, 10 * v58);
            v58 = v78 + 10 * v58;
            ++v76;
            --v77;
            if (!v23)
              continue;
          }
        }
        goto LABEL_203;
      }
    }
    else
    {
      if (!(_DWORD)v57)
        goto LABEL_203;
      v58 = *(unsigned __int16 *)v56 - 48;
      if (v58 > 9 || v57 >= 2 && *(_WORD *)v56 == 48)
        goto LABEL_203;
      v59 = (unsigned __int16 *)(v56 + 2);
      v60 = v57 - 1;
      while (v60)
      {
        if (v58 <= 0x19999999)
        {
          v61 = *v59 - 48;
          if (v61 <= 9)
          {
            v23 = __CFADD__(v61, 10 * v58);
            v58 = v61 + 10 * v58;
            ++v59;
            --v60;
            if (!v23)
              continue;
          }
        }
        goto LABEL_203;
      }
    }
    if (v58 == -1)
    {
LABEL_203:
      v79 = *(JSC::VM **)(a2 + 56);
      while (1)
      {
        v80 = 16 * (*(_DWORD *)v6 & 0xFFFFFFFE);
        if ((*(_BYTE *)(v6 + 6) & 8) != 0)
          break;
        if ((_DWORD)v14)
        {
          if ((v14 & ~*(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x20)) == 0)
          {
            result = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE)), v79);
            if (result)
            {
              v119 = a4;
              result = JSC::PropertyTable::get(result, (uint64_t *)&v119);
              v15 = result;
              if ((_DWORD)result != -1)
              {
                v24 = HIDWORD(result);
                if ((int)result > 63)
                {
                  v92 = *(_QWORD *)(v6 + 8) - 8;
                  v93 = 0x3F00000000 - (result << 32);
                }
                else
                {
                  v92 = v6 + 16;
                  v93 = result << 32;
                }
                v26 = *(_QWORD *)(v92 + (v93 >> 29));
                if ((v26 & 0xFFFE000000000002) != 0)
                  goto LABEL_43;
                v27 = *(unsigned __int8 *)(v26 + 5);
                if (v27 == 6)
                {
                  v28 = MEMORY[0x1E0CBE830];
                  v29 = *(unsigned int *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x4C);
                  v30 = *(_DWORD *)(v80 + 16);
LABEL_48:
                  v31 = v30 & 3;
                  v32 = *(_QWORD *)(v26 + 16);
                  if (v28 == 16 * v29)
                  {
                    v34 = *(_QWORD *)(v26 + 24);
                    v33 = *(_QWORD *)(v26 + 32);
                    v103 = *(WTF::StringImpl **)(v26 + 8);
                    v104 = v32;
                    LODWORD(v105) = v24;
                    v107 = v6;
                    goto LABEL_109;
                  }
                  v103 = *(WTF::StringImpl **)(v26 + 8);
                  v104 = v32;
                  LODWORD(v105) = v24;
                  v107 = v6;
LABEL_129:
                  BYTE1(v109) = 3;
                  if (v31 != 2)
                    LOBYTE(v109) = 1;
                  goto LABEL_105;
                }
LABEL_42:
                if (v27 != 5)
                  goto LABEL_43;
LABEL_112:
                result = JSC::JSObject::fillGetterPropertySlot();
                goto LABEL_105;
              }
            }
          }
        }
        if ((*(_BYTE *)(v6 + 6) & 0x20) != 0)
        {
          result = JSC::JSObject::getOwnStaticPropertySlot();
          if ((result & 1) != 0)
            goto LABEL_105;
        }
LABEL_210:
        if ((*(_WORD *)(v80 + 12) & 0x800) == 0)
        {
          v81 = *(_DWORD *)v6;
LABEL_212:
          v82 = *(_QWORD *)(16 * (v81 & 0xFFFFFFFE) + 0x30);
          if (!v82)
            v82 = *(_QWORD *)(v6 + 16);
          goto LABEL_214;
        }
        v81 = *(_DWORD *)v6;
        if (BYTE2(v109) == 3)
          goto LABEL_212;
        v89 = 16 * (v81 & 0xFFFFFFFE);
        if ((*(_WORD *)(v89 + 12) & 0x800) != 0)
        {
          result = (*(uint64_t (**)(unint64_t, uint64_t))(16 * *(unsigned int *)(v89 + 76) + 0xB0))(v6, a2);
          v82 = result;
        }
        else
        {
          v82 = *(_QWORD *)(v89 + 48);
          if (!v82)
            v82 = *(_QWORD *)(v6 + 16);
        }
        if (*((_DWORD *)v79 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v79);
          if ((result & 1) != 0)
            goto LABEL_146;
        }
LABEL_214:
        if ((v82 & 0xFFFE000000000002) == 0)
        {
          v6 = v82;
          if (*(unsigned __int8 *)(v82 + 5) > 0x16u)
            continue;
        }
        goto LABEL_146;
      }
      result = (*(uint64_t (**)(unint64_t, uint64_t, unint64_t, WTF::StringImpl **))(16 * *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) + 0x68))(v6, a2, a4, &v103);
      v83 = result;
      if (*((_DWORD *)v79 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v79);
        if ((result & 1) != 0)
          goto LABEL_146;
      }
      if ((v83 & 1) != 0)
        goto LABEL_105;
      if (BYTE2(v109) == 3)
      {
        if (v110)
          goto LABEL_146;
        v84 = *(unsigned __int8 *)(v6 + 5);
        if (v84 == 61)
          goto LABEL_210;
      }
      else
      {
        v84 = *(unsigned __int8 *)(v6 + 5);
        if (v84 == 61)
        {
          if (BYTE2(v109) == 1)
            goto LABEL_146;
          goto LABEL_210;
        }
      }
      if (!a4)
        goto LABEL_210;
      if ((v84 - 50) < 0xFFFFFFF5)
        goto LABEL_210;
      v85 = *(_DWORD *)(a4 + 16);
      if ((v85 & 0x20) != 0)
        goto LABEL_210;
      v86 = *(unsigned int *)(a4 + 4);
      if (!(_DWORD)v86)
        goto LABEL_210;
      result = *(_QWORD *)(a4 + 8);
      if ((v85 & 4) != 0)
      {
        v87 = *(unsigned __int8 *)result;
        if ((_DWORD)v86 == 1)
        {
LABEL_246:
          if ((v87 - 48) < 0xA)
            goto LABEL_146;
          goto LABEL_210;
        }
        if (v87 == 45)
        {
          v88 = *(unsigned __int8 *)(result + 1);
LABEL_250:
          if ((v88 - 48) >= 0xA)
          {
            if ((_DWORD)v86 != 9 || v88 != 73)
              goto LABEL_210;
          }
          else if ((_DWORD)v86 == 2)
          {
            goto LABEL_146;
          }
LABEL_261:
          v4 = v4 & 0xFFFFFF0000000000 | v86 | ((unint64_t)((v85 >> 2) & 1) << 32);
          JSC::jsToNumber();
          v90 = (const WTF::StringImpl *)WTF::numberToString();
          result = WTF::equal((WTF *)a4, v90, v91);
          if ((result & 1) != 0)
            goto LABEL_146;
          goto LABEL_210;
        }
      }
      else
      {
        v87 = *(unsigned __int16 *)result;
        if ((_DWORD)v86 == 1)
          goto LABEL_246;
        if (v87 == 45)
        {
          v88 = *(unsigned __int16 *)(result + 2);
          goto LABEL_250;
        }
      }
      if ((v87 - 48) >= 0xA && ((_DWORD)v86 != 8 || v87 != 73) && ((_DWORD)v86 != 3 || v87 != 78))
        goto LABEL_210;
      goto LABEL_261;
    }
    v94 = v58;
    v95 = *(JSC::VM **)(a2 + 56);
    while (1)
    {
      v96 = 16 * (*(_DWORD *)v38 & 0xFFFFFFFE);
      result = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, WTF::StringImpl **))(16
                                                                                                 * *(unsigned int *)(v96 + 0x4C)
                                                                                                 + 0x70))(v38, a2, v94, &v103);
      v97 = result;
      if (*((_DWORD *)v95 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v95);
        if (((result | v97) & 1) != 0)
        {
          if ((result & 1) == 0)
            goto LABEL_105;
          goto LABEL_146;
        }
      }
      else if ((result & 1) != 0)
      {
        goto LABEL_105;
      }
      v98 = BYTE2(v109);
      if (BYTE2(v109) == 3)
      {
        if (v110)
          goto LABEL_146;
        v99 = *(unsigned __int8 *)(v38 + 5);
        if (v99 == 61)
        {
LABEL_287:
          v101 = *(_QWORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0x30);
          if (!v101)
            v101 = *(_QWORD *)(v38 + 16);
          goto LABEL_289;
        }
      }
      else
      {
        v99 = *(unsigned __int8 *)(v38 + 5);
        if (v99 == 61)
        {
          if (BYTE2(v109) == 1)
            goto LABEL_146;
          goto LABEL_285;
        }
      }
      if ((v99 - 39) <= 0xA)
      {
        if ((*(_BYTE *)(v38 + 40) & 7u) > 2)
        {
          LOBYTE(v119) = 0;
          LOBYTE(v120) = 0;
          result = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v38, (WTF *)&v119);
          if (v102)
            v100 = result;
          else
            v100 = 0;
        }
        else
        {
          v100 = *(_QWORD *)(v38 + 24);
        }
        if (v100 <= v94)
          goto LABEL_146;
        v98 = BYTE2(v109);
      }
LABEL_285:
      if ((*(_WORD *)(v96 + 12) & 0x800) == 0 || v98 == 3)
        goto LABEL_287;
      if ((*(_WORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
      {
        result = (*(uint64_t (**)(uint64_t, uint64_t))(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE)
                                                                               + 0x4C)
                                                             + 0xB0))(v38, a2);
        v101 = result;
      }
      else
      {
        v101 = *(_QWORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0x30);
        if (!v101)
          v101 = *(_QWORD *)(v38 + 16);
      }
      if (*((_DWORD *)v95 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v95);
        if ((result & 1) != 0)
          goto LABEL_146;
      }
LABEL_289:
      if ((v101 & 0xFFFE000000000002) == 0)
      {
        v38 = v101;
        if (*(unsigned __int8 *)(v101 + 5) > 0x16u)
          continue;
      }
      goto LABEL_146;
    }
  }
  v40 = *(JSC::VM **)(a2 + 56);
  v4 = v38;
  while (1)
  {
    v41 = *(_DWORD *)v4 & 0xFFFFFFFE;
    v42 = 16 * v41;
    if ((_DWORD)v14)
    {
      if ((v14 & ~*(_DWORD *)(16 * v41 + 0x20)) == 0)
      {
        result = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v42, v40);
        if (result)
        {
          v119 = a4;
          result = JSC::PropertyTable::get(result, (uint64_t *)&v119);
          v15 = result;
          if ((_DWORD)result != -1)
            break;
        }
      }
    }
    if ((*v39 & 0x20) != 0)
    {
      result = JSC::JSObject::getOwnStaticPropertySlot();
      if ((result & 1) != 0)
        goto LABEL_105;
    }
    v6 = *(_QWORD *)(v42 + 48);
    if (!v6)
      v6 = *(_QWORD *)(v4 + 16);
    if ((v6 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v6 + 5) < 0x17u)
    {
      if (!a4)
        goto LABEL_146;
      v43 = *(_DWORD *)(a4 + 16);
      if ((v43 & 0x20) != 0)
        goto LABEL_146;
      v44 = *(_BYTE **)(a4 + 8);
      v45 = *(unsigned int *)(a4 + 4);
      if ((v43 & 4) != 0)
      {
        if (!(_DWORD)v45)
          goto LABEL_146;
        v46 = *v44 - 48;
        if (v46 > 9 || v45 >= 2 && *v44 == 48)
          goto LABEL_146;
        v62 = v45 - 1;
        v63 = v44 + 1;
        while (v62)
        {
          if (v46 <= 0x19999999)
          {
            v64 = *v63 - 48;
            if (v64 <= 9)
            {
              v23 = __CFADD__(v64, 10 * v46);
              v46 = v64 + 10 * v46;
              --v62;
              ++v63;
              if (!v23)
                continue;
            }
          }
          goto LABEL_146;
        }
      }
      else
      {
        if (!(_DWORD)v45)
          goto LABEL_146;
        v46 = *(unsigned __int16 *)v44 - 48;
        if (v46 > 9 || v45 >= 2 && *(_WORD *)v44 == 48)
          goto LABEL_146;
        v47 = (unsigned __int16 *)(v44 + 2);
        v48 = v45 - 1;
        while (v48)
        {
          if (v46 <= 0x19999999)
          {
            v49 = *v47 - 48;
            if (v49 <= 9)
            {
              v23 = __CFADD__(v49, 10 * v46);
              v46 = v49 + 10 * v46;
              ++v47;
              --v48;
              if (!v23)
                continue;
            }
          }
          goto LABEL_146;
        }
      }
      if (v46 == -1)
      {
LABEL_146:
        *(_BYTE *)v8 = 0;
        *(_BYTE *)(v8 + 16) = 0;
        if (v117)
        {
          *(_DWORD *)(v8 + 8) = -1;
          v65 = v116;
          if (v116 != -1)
          {
            result = ((uint64_t (*)(unint64_t *, unint64_t, char *))off_1E32A0F70[v116])(&v119, v8, v115);
            *(_DWORD *)(v8 + 8) = v65;
          }
          *(_BYTE *)(v8 + 16) = 1;
        }
        goto LABEL_150;
      }
      v67 = v46;
      v68 = *(JSC::VM **)(a2 + 56);
      while (2)
      {
        v69 = 16 * (*(_DWORD *)v38 & 0xFFFFFFFE);
        result = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, WTF::StringImpl **))(16 * *(unsigned int *)(v69 + 0x4C) + 0x70))(v38, a2, v67, &v103);
        v70 = result;
        if (*((_DWORD *)v68 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v68);
          if ((result & 1) != 0)
            goto LABEL_146;
        }
        if ((v70 & 1) != 0)
          goto LABEL_105;
        v71 = BYTE2(v109);
        if (BYTE2(v109) == 3)
        {
          if (v110)
            goto LABEL_146;
          v72 = *(unsigned __int8 *)(v38 + 5);
          if (v72 == 61)
          {
LABEL_174:
            v74 = *(_QWORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0x30);
            if (!v74)
              v74 = *(_QWORD *)(v38 + 16);
            goto LABEL_176;
          }
LABEL_167:
          if ((v72 - 39) <= 0xA)
          {
            if ((*(_BYTE *)(v38 + 40) & 7u) > 2)
            {
              LOBYTE(v119) = 0;
              LOBYTE(v120) = 0;
              result = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v38, (WTF *)&v119);
              if (v75)
                v73 = result;
              else
                v73 = 0;
            }
            else
            {
              v73 = *(_QWORD *)(v38 + 24);
            }
            if (v73 <= v67)
              goto LABEL_146;
            v71 = BYTE2(v109);
          }
        }
        else
        {
          v72 = *(unsigned __int8 *)(v38 + 5);
          if (v72 != 61)
            goto LABEL_167;
          if (BYTE2(v109) == 1)
            goto LABEL_146;
        }
        if ((*(_WORD *)(v69 + 12) & 0x800) == 0 || v71 == 3)
          goto LABEL_174;
        if ((*(_WORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
        {
          result = (*(uint64_t (**)(uint64_t, uint64_t))(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE)
                                                                                 + 0x4C)
                                                               + 0xB0))(v38, a2);
          v74 = result;
        }
        else
        {
          v74 = *(_QWORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0x30);
          if (!v74)
            v74 = *(_QWORD *)(v38 + 16);
        }
        if (*((_DWORD *)v68 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v68);
          if ((result & 1) != 0)
            goto LABEL_146;
        }
LABEL_176:
        if ((v74 & 0xFFFE000000000002) != 0)
          goto LABEL_146;
        v38 = v74;
        if (*(unsigned __int8 *)(v74 + 5) <= 0x16u)
          goto LABEL_146;
        continue;
      }
    }
    v39 = (_BYTE *)(v6 + 6);
    v4 = v6;
    if ((*(_BYTE *)(v6 + 6) & 8) != 0)
      goto LABEL_114;
  }
  v24 = HIDWORD(result);
  if ((int)result > 63)
  {
    v50 = *(_QWORD *)(v4 + 8) - 8;
    v51 = 0x3F00000000 - (result << 32);
  }
  else
  {
    v50 = v4 + 16;
    v51 = result << 32;
  }
  v52 = *(_QWORD *)(v50 + (v51 >> 29));
  if ((v52 & 0xFFFE000000000002) != 0)
    goto LABEL_103;
  v53 = *(unsigned __int8 *)(v52 + 5);
  if (v53 != 6)
  {
    if (v53 == 5)
      goto LABEL_112;
LABEL_103:
    v103 = (WTF::StringImpl *)v52;
    v107 = v4;
    goto LABEL_104;
  }
  v31 = *(_DWORD *)(v42 + 16) & 3;
  v54 = *(_QWORD *)(v52 + 16);
  if (MEMORY[0x1E0CBE830] != 16 * *(unsigned int *)(16 * (*(_DWORD *)v52 & 0xFFFFFFFE) + 0x4C))
  {
    v103 = *(WTF::StringImpl **)(v52 + 8);
    v104 = v54;
    LODWORD(v105) = HIDWORD(result);
    v107 = v4;
    goto LABEL_129;
  }
  v34 = *(_QWORD *)(v52 + 24);
  v33 = *(_QWORD *)(v52 + 32);
  v103 = *(WTF::StringImpl **)(v52 + 8);
  v104 = v54;
  LODWORD(v105) = HIDWORD(result);
  v107 = v4;
LABEL_109:
  BYTE1(v109) = 3;
  if (v31 != 2)
    LOBYTE(v109) = 1;
  HIBYTE(v109) = 1;
  v113 = v34;
  v114 = v33;
LABEL_105:
  *(_BYTE *)v8 = 0;
  *(_BYTE *)(v8 + 16) = 0;
LABEL_150:
  if (v112)
  {
    v66 = *((_DWORD *)v111 + 1);
    if (!v66)
    {
      __break(0xC471u);
      JUMPOUT(0x194C0F0DCLL);
    }
    *((_DWORD *)v111 + 1) = v66 - 1;
  }
  if (v117)
  {
    if (v116 != -1)
      return ((uint64_t (*)(unint64_t *, char *))off_1E329B780[v116])(&v119, v115);
  }
  return result;
}

unint64_t WebCore::jsHTMLFormControlsCollectionConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLFormControlsCollectionPrototype::s_info != (char **)(16
                                                                          * *(unsigned int *)(16
                                                                                            * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                            + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFormControlsCollection>,(WebCore::DOMConstructorID)532>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSHTMLFormControlsCollection::subspaceForImpl(WebCore::JSHTMLFormControlsCollection *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4344);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 4344))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 4344);
    *(_QWORD *)(v9 + 4344) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSHTMLFormControlsCollection::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSHTMLFormControlsCollectionOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, JSC::AbstractSlotVisitor *a4, _QWORD *a5)
{
  uint64_t v7;
  WebCore::Node *v8;

  v7 = WebCore::HTMLFormControlsCollection::ownerNode(*(WebCore::HTMLFormControlsCollection **)(*(_QWORD *)a2 + 24));
  if (a5)
  {
    *a5 = "Reachable from HTMLFormControlsCollection ownerNode";
    a5[1] = 52;
  }
  if ((*(_BYTE *)(v7 + 22) & 8) != 0)
    v8 = *(WebCore::Node **)(*(_QWORD *)(v7 + 40) + 8);
  else
    v8 = WebCore::Node::traverseToOpaqueRoot((WebCore::Node *)v7);
  return JSC::AbstractSlotVisitor::containsOpaqueRoot(a4, v8);
}

uint64_t WebCore::JSHTMLFormControlsCollectionOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[4];
  result = WebCore::uncacheWrapper<WebCore::HTMLFormControlsCollection,WebCore::JSHTMLFormControlsCollection>(a3, (uint64_t)v3);
  if (v3[4] == 1)
    return (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[4];
  return result;
}

uint64_t WebCore::uncacheWrapper<WebCore::HTMLFormControlsCollection,WebCore::JSHTMLFormControlsCollection>(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = a2 + 8;
  if (!a2)
    v2 = 0;
  if (*(_DWORD *)(result + 48))
  {
    v3 = (uint64_t *)(result + 32);
    v5 = a2;
    v4 = (_QWORD *)WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::find((uint64_t *)(result + 32), &v5);
    return WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::remove(v3, v4);
  }
  else if (*(_QWORD *)v2)
  {
    *(_QWORD *)(*(_QWORD *)v2 + 8) = 3;
    *(_QWORD *)v2 = 0;
  }
  return result;
}

uint64_t WebCore::JSHTMLFormElement::put(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v13;
  uint64_t v14;
  uint64_t v15;
  JSC::VM *v16;
  int OwnProperty;
  uint64_t result;
  int v19;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  char v24[16];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v13 = a2;
  else
    v13 = 0;
  v14 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v13);
  if (v14)
  {
    v15 = v14;
    if (!*(_BYTE *)(v14 + 274))
    {
      v21 = *(_BYTE **)(v14 + 496);
      if (!v21)
        v21 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v15 - 192));
      if (*(_QWORD *)v21)
      {
        v22 = *(_QWORD *)(*(_QWORD *)v21 + 8);
        if (v22)
        {
          v23 = *(_QWORD *)(v22 + 680);
          if (*(_BYTE *)(v23 + 243))
          {
            if (!*(_BYTE *)(v23 + 242))
              goto LABEL_12;
          }
          else if ((*(_QWORD *)(v23 + 688) & 0x80000) == 0)
          {
            goto LABEL_12;
          }
          if (v21[65])
            return JSC::JSObject::put();
        }
      }
    }
  }
LABEL_12:
  v16 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = 14;
  v25 = 0xFFFFFFFF00000000;
  v27 = 0;
  v28 = 0;
  v26 = v8;
  v29 = 0x20000;
  v30 = 0;
  LOBYTE(v31) = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  OwnProperty = WebCore::JSHTMLFormElement::legacyPlatformObjectGetOwnProperty(a1, (JSC::VM **)a2, a3, (uint64_t)v24, 1);
  if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v16 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v32)
  {
    v19 = *(_DWORD *)(v31 + 4);
    if (!v19)
    {
      __break(0xC471u);
      JUMPOUT(0x194C0FC3CLL);
    }
    *(_DWORD *)(v31 + 4) = v19 - 1;
  }
  return result;
}

uint64_t WebCore::JSHTMLFormElement::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSHTMLFormElement::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _WORD *v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  WebCore::Node *v29;
  uint64_t v30;
  void *v31;
  int v32;
  uint64_t result;
  unsigned __int16 *v34;
  uint64_t v35;
  unsigned int v36;
  BOOL v37;
  BOOL v38;
  unsigned int v39;
  uint64_t v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  int isSupportedPropertyName;
  WTF::StringImpl *v44;
  JSC::VM *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  _BYTE *v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unsigned __int16 *v59;
  uint64_t v60;
  unsigned int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 *v69;
  unsigned int v70;
  uint64_t v71;
  unsigned __int8 *v72;
  unsigned int v73;
  WTF::StringImpl *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  char v81;
  JSC::VM *v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;

  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMGlobalObject::s_info && v9 != 0);
  }
  if (v8)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (v13)
  {
    v14 = v13;
    if (!*(_BYTE *)(v13 + 274))
    {
      v15 = *(_BYTE **)(v13 + 496);
      if (!v15)
        v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
      if (*(_QWORD *)v15)
      {
        v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
        if (v16)
        {
          v17 = *(_QWORD *)(v16 + 680);
          if (*(_BYTE *)(v17 + 243))
          {
            if (!*(_BYTE *)(v17 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v15[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (a3)
  {
    v18 = *(_DWORD *)(a3 + 16);
    if ((v18 & 0x20) != 0)
      return JSC::JSObject::deleteProperty();
    v19 = *(_WORD **)(a3 + 8);
    v20 = *(unsigned int *)(a3 + 4);
    if ((v18 & 4) == 0)
    {
      if ((_DWORD)v20 && (v21 = (unsigned __int16)*v19 - 48, v21 <= 9))
      {
        if (v20 < 2 || *v19 != 48)
        {
          v34 = v19 + 1;
          v35 = v20 - 1;
          while (v35)
          {
            if (v21 <= 0x19999999)
            {
              v36 = *v34 - 48;
              if (v36 <= 9)
              {
                v37 = __CFADD__(v36, 10 * v21);
                v21 = v36 + 10 * v21;
                ++v34;
                --v35;
                if (!v37)
                  continue;
              }
            }
            goto LABEL_27;
          }
          v38 = v21 == -1;
          v23 = v21 & 0xFFFFFF00;
          v22 = 0x100000000;
          if (v21 == -1)
          {
            v22 = 0;
            LOBYTE(v21) = 0;
          }
          if (v38)
            v23 = 0;
LABEL_29:
          v21 = v21;
          if ((v22 & 0x100000000) != 0)
          {
LABEL_30:
            v24 = v23 | v21;
            v25 = *(unsigned int *)(v6 + 188);
            if ((_DWORD)v25)
            {
              v26 = 0;
              v27 = *(_QWORD *)(v6 + 176);
              v28 = 8 * v25;
              do
              {
                v29 = *(WebCore::Node **)(*(_QWORD *)v27 + 8);
                *((_DWORD *)v29 + 6) += 2;
                v30 = (*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v29 + 456))(v29);
                v32 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v30 + 120))(v30);
                if (*((_DWORD *)v29 + 6) == 2)
                {
                  if ((*((_WORD *)v29 + 15) & 0x400) == 0)
                    WebCore::Node::removedLastRef(v29, v31);
                }
                else
                {
                  *((_DWORD *)v29 + 6) -= 2;
                }
                v26 += v32;
                v27 += 8;
                v28 -= 8;
              }
              while (v28);
            }
            else
            {
              v26 = 0;
            }
            return v26 <= v24;
          }
          goto LABEL_63;
        }
        v22 = 0;
      }
      else
      {
LABEL_27:
        v22 = 0;
        LOBYTE(v21) = 0;
      }
      v23 = 0;
      goto LABEL_29;
    }
    if ((_DWORD)v20)
    {
      v39 = *(unsigned __int8 *)v19 - 48;
      if (v39 <= 9 && (v20 < 2 || *(_BYTE *)v19 != 48))
      {
        v68 = v20 - 1;
        v69 = (unsigned __int8 *)v19 + 1;
        while (v68)
        {
          if (v39 > 0x19999999)
            goto LABEL_60;
          v70 = *v69 - 48;
          if (v70 > 9)
            goto LABEL_60;
          v21 = 0;
          LOBYTE(v20) = 0;
          v40 = 0;
          v37 = __CFADD__(v70, 10 * v39);
          v39 = v70 + 10 * v39;
          --v68;
          ++v69;
          if (v37)
            goto LABEL_62;
        }
        if (v39 == -1)
          v21 = 0;
        else
          v21 = v39 & 0xFFFFFF00;
        if (v39 == -1)
          LOBYTE(v20) = 0;
        else
          LOBYTE(v20) = v39;
        if (v39 == -1)
          v40 = 0;
        else
          v40 = 0x100000000;
LABEL_62:
        v23 = v20;
        if ((v40 & 0x100000000) != 0)
          goto LABEL_30;
LABEL_63:
        *(_DWORD *)a3 += 2;
        v41 = (WTF::StringImpl *)a3;
        goto LABEL_64;
      }
LABEL_60:
      v21 = 0;
      LOBYTE(v20) = 0;
    }
    else
    {
      v21 = 0;
    }
    v40 = 0;
    goto LABEL_62;
  }
  v41 = 0;
LABEL_64:
  v74 = v41;
  isSupportedPropertyName = WebCore::HTMLFormElement::isSupportedPropertyName((WebCore::HTMLFormElement *)v6, (const WTF::AtomString *)&v74);
  v44 = v74;
  v74 = 0;
  if (!v44)
    goto LABEL_67;
  if (*(_DWORD *)v44 == 2)
  {
    WTF::StringImpl::destroy(v44, v42);
    if (isSupportedPropertyName)
      goto LABEL_68;
    return JSC::JSObject::deleteProperty();
  }
  *(_DWORD *)v44 -= 2;
LABEL_67:
  if (!isSupportedPropertyName)
    return JSC::JSObject::deleteProperty();
LABEL_68:
  v45 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v76 = 0xFFFFFFFF00000000;
  v78 = 0;
  v79 = 0;
  v77 = a1;
  v80 = 196608;
  v81 = 0;
  v84 = 0;
  v85 = 0;
  v82 = v45;
  ++*((_DWORD *)v45 + 1);
  v83 = 1;
  if ((a3 >> 4))
  {
    v46 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((a3 >> 4) & ~*(_DWORD *)(v46 + 0x20)) == 0)
    {
      v47 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v45);
      if (v47)
      {
        v86 = a3;
        v48 = JSC::PropertyTable::get(v47, (uint64_t *)&v86);
        if ((_DWORD)v48 != -1)
        {
          if ((int)v48 > 63)
          {
            v55 = *(_QWORD *)(a1 + 8) - 8;
            v56 = 0x3F00000000 - (v48 << 32);
          }
          else
          {
            v55 = a1 + 16;
            v56 = v48 << 32;
          }
          v57 = *(_QWORD *)(v55 + (v56 >> 29));
          if ((v57 & 0xFFFE000000000002) == 0)
          {
            v58 = *(unsigned __int8 *)(v57 + 5);
            if (v58 == 6)
            {
              v62 = *(_DWORD *)(v46 + 16) & 3;
              v63 = *(_QWORD *)(v57 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v57 & 0xFFFFFFFE) + 0x4C))
              {
                v65 = *(_QWORD *)(v57 + 24);
                v64 = *(_QWORD *)(v57 + 32);
                v74 = *(WTF::StringImpl **)(v57 + 8);
                v75 = v63;
                LODWORD(v76) = HIDWORD(v48);
                v78 = a1;
                BYTE1(v80) = 3;
                result = 1;
                if (v62 != 2)
                  LOBYTE(v80) = 1;
                HIBYTE(v80) = 1;
                v84 = v65;
                v85 = v64;
              }
              else
              {
                v74 = *(WTF::StringImpl **)(v57 + 8);
                v75 = v63;
                LODWORD(v76) = HIDWORD(v48);
                v78 = a1;
                result = 1;
                BYTE1(v80) = 3;
                if (v62 != 2)
                  LOBYTE(v80) = 1;
              }
              goto LABEL_83;
            }
            if (v58 == 5)
            {
              JSC::JSObject::fillGetterPropertySlot();
              result = 1;
              goto LABEL_83;
            }
          }
          v74 = (WTF::StringImpl *)v57;
          v78 = a1;
          v76 = __PAIR64__(v48, HIDWORD(v48));
          result = 1;
          LOWORD(v80) = 257;
          goto LABEL_83;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
  {
    result = JSC::JSObject::getOwnStaticPropertySlot();
    if (!a3 || (result & 1) != 0)
      goto LABEL_83;
  }
  else if (!a3)
  {
LABEL_82:
    result = 0;
    goto LABEL_83;
  }
  v49 = *(_DWORD *)(a3 + 16);
  if ((v49 & 0x20) != 0)
    goto LABEL_82;
  v50 = *(_BYTE **)(a3 + 8);
  v51 = *(unsigned int *)(a3 + 4);
  if ((v49 & 4) != 0)
  {
    if (!(_DWORD)v51 || (v66 = *v50 - 48, v66 > 9) || v51 >= 2 && *v50 == 48)
    {
LABEL_122:
      v67 = 0;
    }
    else
    {
      v71 = v51 - 1;
      v72 = v50 + 1;
      while (v71)
      {
        if (v66 > 0x19999999)
          goto LABEL_122;
        v73 = *v72 - 48;
        if (v73 > 9)
          goto LABEL_122;
        v67 = 0;
        v37 = __CFADD__(v73, 10 * v66);
        v66 = v73 + 10 * v66;
        --v71;
        ++v72;
        if (v37)
          goto LABEL_123;
      }
      v67 = 0x100000000;
      if (v66 == -1)
        v67 = 0;
    }
LABEL_123:
    if ((v67 & 0x100000000) == 0)
      goto LABEL_82;
  }
  else
  {
    if ((_DWORD)v51
      && (v52 = *(unsigned __int16 *)v50 - 48, v52 <= 9)
      && (v51 < 2 || *(_WORD *)v50 != 48))
    {
      v59 = (unsigned __int16 *)(v50 + 2);
      v60 = v51 - 1;
      while (v60)
      {
        if (v52 <= 0x19999999)
        {
          v61 = *v59 - 48;
          if (v61 <= 9)
          {
            v37 = __CFADD__(v61, 10 * v52);
            v52 = v61 + 10 * v52;
            ++v59;
            --v60;
            if (!v37)
              continue;
          }
        }
        goto LABEL_80;
      }
      v10 = v52 == -1;
      v53 = 0x100000000;
      if (v10)
        v53 = 0;
    }
    else
    {
LABEL_80:
      v53 = 0;
    }
    if ((v53 & 0x100000000) == 0)
      goto LABEL_82;
  }
  result = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_83:
  if (v83)
  {
    v54 = *((_DWORD *)v82 + 1);
    if (!v54)
    {
      __break(0xC471u);
      JUMPOUT(0x194C10344);
    }
    *((_DWORD *)v82 + 1) = v54 - 1;
  }
  if ((_DWORD)result)
    return JSC::JSObject::deleteProperty();
  return result;
}

uint64_t WebCore::JSHTMLFormElement::deletePropertyByIndex(WebCore::JSHTMLFormElement *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  WebCore::Node *v22;
  uint64_t v23;
  void *v24;
  int v25;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    goto LABEL_22;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    goto LABEL_22;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    goto LABEL_22;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    goto LABEL_22;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v15[65])
    return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
LABEL_22:
  v18 = *(unsigned int *)(v11 + 188);
  if ((_DWORD)v18)
  {
    v19 = 0;
    v20 = *(_QWORD *)(v11 + 176);
    v21 = 8 * v18;
    do
    {
      v22 = *(WebCore::Node **)(*(_QWORD *)v20 + 8);
      *((_DWORD *)v22 + 6) += 2;
      v23 = (*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v22 + 456))(v22);
      v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 120))(v23);
      if (*((_DWORD *)v22 + 6) == 2)
      {
        if ((*((_WORD *)v22 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v22, v24);
      }
      else
      {
        *((_DWORD *)v22 + 6) -= 2;
      }
      v19 += v25;
      v20 += 8;
      v21 -= 8;
    }
    while (v21);
  }
  else
  {
    v19 = 0;
  }
  return v19 <= a3;
}

uint64_t WebCore::JSHTMLFormElement::getOwnPropertySlot(uint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4)
{
  return WebCore::JSHTMLFormElement::legacyPlatformObjectGetOwnProperty(a1, a2, a3, a4, 0);
}

uint64_t WebCore::JSHTMLFormElement::getOwnPropertySlotByIndex(WebCore::HTMLFormElement **this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  unint64_t v5;
  JSC::VM *v9;
  unsigned int v10;
  WebCore::HTMLFormControlsCollection *v11;
  uint64_t v12;
  WebCore::HTMLElement *v13;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t OwnPropertySlotByIndex;
  WTF::StringImpl *v18;
  WebCore::HTMLFormElement *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  JSC::VM *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  int v29;
  _BYTE *v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  unsigned __int16 *v34;
  unsigned int v35;
  BOOL v36;
  unint64_t v37;
  uint64_t *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned int v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  _WORD *v54;
  uint64_t v55;
  unsigned int v56;
  unsigned __int16 *v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  int v65;
  _BYTE *v66;
  uint64_t v67;
  unsigned int v68;
  unsigned __int16 *v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  unsigned __int8 *v73;
  unsigned int v74;
  int v75;
  int v76;
  WTF::StringImpl *v77;
  uint64_t v78;
  WTF::StringImpl *v79;
  unint64_t v80;
  JSC::VM *v81;
  uint64_t v82;
  char v83;
  int v84;
  int v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  unsigned __int8 *v90;
  uint64_t v91;
  unsigned int v92;
  JSC::VM *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  int v98;
  uint64_t v99;
  char v100;
  int v101;
  unsigned int v102;
  uint64_t v103;
  unsigned __int8 *v104;
  int v105;
  int v106;
  uint64_t v107;
  const WTF::StringImpl *v108;
  const unsigned __int8 *v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  unint64_t v114;
  JSC::VM *v115;
  uint64_t v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unint64_t v121;
  uint64_t v122;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v124;
  char v125;
  JSC::VM *v126;
  unint64_t v127;
  char v128[8];
  int v129;
  unsigned __int8 v130;
  WTF::StringImpl *v131;
  WTF::StringImpl *v132;
  uint64_t v133;
  unint64_t v134;
  WebCore::HTMLFormElement **v135;
  WebCore::HTMLFormElement **v136;
  uint64_t v137;
  int v138;
  char v139;
  JSC::VM *v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  char v144[8];
  int v145;
  unsigned __int8 v146;
  char v147;
  WebCore::HTMLFormControlsCollection *v148;
  unsigned int v149;
  char v150;
  uint64_t v151;

  v151 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((_DWORD)a3 != -1)
  {
    v10 = a3;
    WebCore::HTMLFormElement::elements(this[3], a2, (uint64_t *)&v148);
    v11 = v148;
    v12 = WebCore::HTMLFormControlsCollection::item(v148, v10);
    v14 = (WebCore::JSDOMGlobalObject *)v12;
    if (*((_DWORD *)v11 + 4) == 1)
    {
      (*(void (**)(WebCore::HTMLFormControlsCollection *))(*(_QWORD *)v11 + 8))(v11);
      if (v14)
        goto LABEL_4;
    }
    else
    {
      --*((_DWORD *)v11 + 4);
      if (v12)
      {
LABEL_4:
        v15 = WebCore::toJS(a2, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v14, v13);
        if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
          return 0;
        *(_QWORD *)a4 = v15;
        *(_DWORD *)(a4 + 16) = 2;
        *(_QWORD *)(a4 + 32) = this;
        OwnPropertySlotByIndex = 1;
        *(_BYTE *)(a4 + 49) = 1;
        return OwnPropertySlotByIndex;
      }
    }
    return JSC::JSObject::getOwnPropertySlotByIndex();
  }
  JSC::Identifier::from();
  v18 = v131;
  if (v131)
  {
    if ((*((_BYTE *)v131 + 16) & 0x20) != 0)
      goto LABEL_170;
    v19 = this[3];
    *(_DWORD *)v131 += 2;
  }
  else
  {
    v19 = this[3];
  }
  v132 = v18;
  WebCore::HTMLFormElement::namedItem(v19, (const WTF::AtomString *)&v132, (uint64_t)&v148);
  v22 = v132;
  v132 = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v20);
    else
      *(_DWORD *)v22 -= 2;
  }
  if (v150)
  {
    LOBYTE(v132) = 0;
    v5 = 0xFFFFFFFFLL;
    LODWORD(v133) = -1;
    v23 = v149;
    if (v149 == -1)
    {
      v144[0] = 0;
      v145 = -1;
      v146 = 1;
    }
    else
    {
      ((void (*)(char *, WTF::StringImpl **, WebCore::HTMLFormControlsCollection **))off_1E329B790[v149])(&v147, &v132, &v148);
      LODWORD(v133) = v23;
      v144[0] = 0;
      v145 = -1;
      ((void (*)(char *, char *, WTF::StringImpl **))off_1E32A0F70[v23])(&v147, v144, &v132);
      v145 = v23;
      v146 = 1;
      if ((_DWORD)v133 != -1)
        ((void (*)(char *, WTF::StringImpl **))off_1E329B780[v133])(&v147, &v132);
    }
    if (v150 && v149 != -1)
      ((void (*)(WTF::StringImpl **, WebCore::HTMLFormControlsCollection **))off_1E329B780[v149])(&v132, &v148);
  }
  else
  {
    v144[0] = 0;
    v146 = 0;
  }
  if (!v146)
    goto LABEL_170;
  v24 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v134 = 0xFFFFFFFF00000000;
  v136 = 0;
  v137 = 0;
  v135 = this;
  v138 = 196608;
  v139 = 0;
  v142 = 0;
  v143 = 0;
  v140 = v24;
  ++*((_DWORD *)v24 + 1);
  v141 = 1;
  v25 = (unint64_t)v18 >> 4;
  if (((unint64_t)v18 >> 4))
  {
    v5 = 16 * (*(_DWORD *)this & 0xFFFFFFFE);
    if ((v25 & ~*(_DWORD *)(v5 + 0x20)) == 0)
    {
      v26 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), v24);
      if (v26)
      {
        v148 = v18;
        v27 = JSC::PropertyTable::get(v26, (uint64_t *)&v148);
        v28 = v27;
        if ((_DWORD)v27 != -1)
        {
          v37 = HIDWORD(v27);
          v38 = (uint64_t *)&this[(int)v27 + 2];
          if ((int)v27 >= 64)
            v38 = (uint64_t *)((char *)this[1] + ((uint64_t)(0x3F00000000 - (v27 << 32)) >> 29) - 8);
          v21 = *v38;
          if ((*v38 & 0xFFFE000000000002) == 0)
          {
            v39 = *(unsigned __int8 *)(v21 + 5);
            if (v39 == 6)
            {
              v40 = *(_DWORD *)(v5 + 16) & 3;
              v41 = *(_QWORD *)(v21 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x4C))
              {
                v43 = *(_QWORD *)(v21 + 24);
                v42 = *(_QWORD *)(v21 + 32);
                v132 = *(WTF::StringImpl **)(v21 + 8);
                v133 = v41;
                LODWORD(v134) = HIDWORD(v27);
                v136 = this;
LABEL_117:
                BYTE1(v138) = 3;
                if (v40 != 2)
                  LOBYTE(v138) = 1;
                HIBYTE(v138) = 1;
                v142 = v43;
                v143 = v42;
                goto LABEL_113;
              }
              v132 = *(WTF::StringImpl **)(v21 + 8);
              v133 = v41;
              LODWORD(v134) = HIDWORD(v27);
              v136 = this;
LABEL_137:
              BYTE1(v138) = 3;
              if (v40 != 2)
                LOBYTE(v138) = 1;
              goto LABEL_113;
            }
            if (v39 == 5)
              goto LABEL_120;
          }
          v132 = (WTF::StringImpl *)v21;
          v136 = this;
LABEL_112:
          v134 = __PAIR64__(v28, v37);
          LOWORD(v138) = 257;
          goto LABEL_113;
        }
      }
    }
  }
  if ((*((_BYTE *)this + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    goto LABEL_113;
  if (v18)
  {
    v29 = *((_DWORD *)v18 + 4);
    if ((v29 & 0x20) == 0)
    {
      v30 = (_BYTE *)*((_QWORD *)v18 + 1);
      v31 = *((unsigned int *)v18 + 1);
      if ((v29 & 4) != 0)
      {
        if (!(_DWORD)v31)
          goto LABEL_72;
        v32 = *v30 - 48;
        if (v32 > 9 || v31 >= 2 && *v30 == 48)
          goto LABEL_72;
        v44 = v31 - 1;
        v45 = v30 + 1;
        while (v44)
        {
          if (v32 <= 0x19999999)
          {
            v46 = *v45 - 48;
            if (v46 <= 9)
            {
              v36 = __CFADD__(v46, 10 * v32);
              v32 = v46 + 10 * v32;
              --v44;
              ++v45;
              if (!v36)
                continue;
            }
          }
          goto LABEL_72;
        }
      }
      else
      {
        if (!(_DWORD)v31)
          goto LABEL_72;
        v32 = *(unsigned __int16 *)v30 - 48;
        if (v32 > 9 || v31 >= 2 && *(_WORD *)v30 == 48)
          goto LABEL_72;
        v33 = v31 - 1;
        v34 = (unsigned __int16 *)(v30 + 2);
        while (v33)
        {
          if (v32 <= 0x19999999)
          {
            v35 = *v34 - 48;
            if (v35 <= 9)
            {
              v36 = __CFADD__(v35, 10 * v32);
              v32 = v35 + 10 * v32;
              --v33;
              ++v34;
              if (!v36)
                continue;
            }
          }
          goto LABEL_72;
        }
      }
      if (v32 != -1 && JSC::JSObject::getOwnPropertySlotByIndex())
        goto LABEL_113;
    }
  }
LABEL_72:
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28) + 3320) + 53))
    goto LABEL_154;
  v47 = *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x30);
  if (!v47)
    v47 = (uint64_t)this[2];
  if ((v47 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v47 + 5) < 0x17u)
    goto LABEL_154;
  v48 = (_BYTE *)(v47 + 6);
  if ((*(_BYTE *)(v47 + 6) & 8) == 0)
  {
    v126 = (JSC::VM *)*((_QWORD *)a2 + 7);
    v5 = v47;
    while (1)
    {
      v49 = *(_DWORD *)v5 & 0xFFFFFFFE;
      v50 = 16 * v49;
      if ((_DWORD)v25)
      {
        if ((v25 & ~*(_DWORD *)(16 * v49 + 0x20)) == 0)
        {
          v51 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v50, v126);
          if (v51)
          {
            v148 = v18;
            v52 = JSC::PropertyTable::get(v51, (uint64_t *)&v148);
            v28 = v52;
            if ((_DWORD)v52 != -1)
              break;
          }
        }
      }
      if ((*v48 & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
        goto LABEL_113;
      v127 = *(_QWORD *)(v50 + 48);
      if (!v127)
        v127 = *(_QWORD *)(v5 + 16);
      v5 = v127;
      if ((v127 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v127 + 5) < 0x17u)
      {
        if (!v18)
          goto LABEL_154;
        v53 = *((_DWORD *)v18 + 4);
        if ((v53 & 0x20) != 0)
          goto LABEL_154;
        v54 = (_WORD *)*((_QWORD *)v18 + 1);
        v55 = *((unsigned int *)v18 + 1);
        if ((v53 & 4) == 0)
        {
          if ((_DWORD)v55)
          {
            v56 = (unsigned __int16)*v54 - 48;
            if (v56 <= 9 && (v55 < 2 || *v54 != 48))
            {
              v57 = v54 + 1;
              v58 = v55 - 1;
              while (v58)
              {
                if (v56 <= 0x19999999)
                {
                  v59 = *v57 - 48;
                  if (v59 <= 9)
                  {
                    v36 = __CFADD__(v59, 10 * v56);
                    v56 = v59 + 10 * v56;
                    ++v57;
                    --v58;
                    if (!v36)
                      continue;
                  }
                }
                goto LABEL_154;
              }
              goto LABEL_153;
            }
          }
          goto LABEL_154;
        }
        if (!(_DWORD)v55)
          goto LABEL_154;
        v56 = *(unsigned __int8 *)v54 - 48;
        if (v56 > 9 || v55 >= 2 && *(_BYTE *)v54 == 48)
          goto LABEL_154;
        v72 = v55 - 1;
        v73 = (unsigned __int8 *)v54 + 1;
        while (v72)
        {
          if (v56 <= 0x19999999)
          {
            v74 = *v73 - 48;
            if (v74 <= 9)
            {
              v36 = __CFADD__(v74, 10 * v56);
              v56 = v74 + 10 * v56;
              --v72;
              ++v73;
              if (!v36)
                continue;
            }
          }
          goto LABEL_154;
        }
LABEL_153:
        if (v56 == -1)
        {
LABEL_154:
          v128[0] = 0;
          v130 = 0;
          v63 = v146;
          if (v146)
          {
            v129 = -1;
            v75 = v145;
            if (v145 != -1)
            {
              ((void (*)(WebCore::HTMLFormControlsCollection **, char *, char *))off_1E32A0F70[v145])(&v148, v128, v144);
              v129 = v75;
            }
            v63 = 1;
            v130 = 1;
          }
          goto LABEL_158;
        }
        v80 = v56;
        v81 = (JSC::VM *)*((_QWORD *)a2 + 7);
        while (2)
        {
          v82 = 16 * (*(_DWORD *)v47 & 0xFFFFFFFE);
          v83 = (*(uint64_t (**)(uint64_t, JSC::JSObject *, unint64_t, WTF::StringImpl **))(16 * *(unsigned int *)(v82 + 0x4C) + 0x70))(v47, a2, v80, &v132);
          if (*((_DWORD *)v81 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v81) & 1) != 0)
            goto LABEL_154;
          if ((v83 & 1) != 0)
            goto LABEL_113;
          v84 = BYTE2(v138);
          if (BYTE2(v138) == 3)
          {
            if (v139)
              goto LABEL_154;
            v85 = *(unsigned __int8 *)(v47 + 5);
            if (v85 == 61)
            {
LABEL_195:
              v87 = *(_QWORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0x30);
              if (!v87)
                v87 = *(_QWORD *)(v47 + 16);
              goto LABEL_197;
            }
LABEL_188:
            if ((v85 - 39) <= 0xA)
            {
              if ((*(_BYTE *)(v47 + 40) & 7u) > 2)
              {
                LOBYTE(v148) = 0;
                LOBYTE(v149) = 0;
                v88 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v47, (WTF *)&v148);
                if (v89)
                  v86 = v88;
                else
                  v86 = 0;
              }
              else
              {
                v86 = *(_QWORD *)(v47 + 24);
              }
              if (v86 <= v80)
                goto LABEL_154;
              v84 = BYTE2(v138);
            }
          }
          else
          {
            v85 = *(unsigned __int8 *)(v47 + 5);
            if (v85 != 61)
              goto LABEL_188;
            if (BYTE2(v138) == 1)
              goto LABEL_154;
          }
          if ((*(_WORD *)(v82 + 12) & 0x800) == 0 || v84 == 3)
            goto LABEL_195;
          if ((*(_WORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
          {
            v87 = (*(uint64_t (**)(uint64_t, JSC::JSObject *))(16
                                                                      * *(unsigned int *)(16
                                                                                        * (*(_DWORD *)v47 & 0xFFFFFFFE)
                                                                                        + 0x4C)
                                                                      + 0xB0))(v47, a2);
          }
          else
          {
            v87 = *(_QWORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0x30);
            if (!v87)
              v87 = *(_QWORD *)(v47 + 16);
          }
          if (*((_DWORD *)v81 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v81) & 1) != 0)
            goto LABEL_154;
LABEL_197:
          if ((v87 & 0xFFFE000000000002) != 0)
            goto LABEL_154;
          v47 = v87;
          if (*(unsigned __int8 *)(v87 + 5) <= 0x16u)
            goto LABEL_154;
          continue;
        }
      }
      v48 = (_BYTE *)(v127 + 6);
      if ((*(_BYTE *)(v127 + 6) & 8) != 0)
        goto LABEL_122;
    }
    v37 = HIDWORD(v52);
    if ((int)v52 > 63)
    {
      v60 = *(_QWORD *)(v5 + 8) - 8;
      v61 = 0x3F00000000 - (v52 << 32);
    }
    else
    {
      v60 = v5 + 16;
      v61 = v52 << 32;
    }
    v21 = *(_QWORD *)(v60 + (v61 >> 29));
    if ((v21 & 0xFFFE000000000002) != 0)
      goto LABEL_111;
    v62 = *(unsigned __int8 *)(v21 + 5);
    if (v62 != 6)
    {
      if (v62 == 5)
        goto LABEL_120;
LABEL_111:
      v132 = (WTF::StringImpl *)v21;
      v136 = (WebCore::HTMLFormElement **)v5;
      goto LABEL_112;
    }
    v40 = *(_DWORD *)(v50 + 16) & 3;
    v64 = *(_QWORD *)(v21 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x4C))
    {
      v43 = *(_QWORD *)(v21 + 24);
      v42 = *(_QWORD *)(v21 + 32);
      v132 = *(WTF::StringImpl **)(v21 + 8);
      v133 = v64;
      LODWORD(v134) = HIDWORD(v52);
      v136 = (WebCore::HTMLFormElement **)v5;
      goto LABEL_117;
    }
    v132 = *(WTF::StringImpl **)(v21 + 8);
    v133 = v64;
    LODWORD(v134) = HIDWORD(v52);
    v136 = (WebCore::HTMLFormElement **)v5;
    goto LABEL_137;
  }
  v127 = v47;
LABEL_122:
  if (!v18)
    goto LABEL_224;
  v65 = *((_DWORD *)v18 + 4);
  if ((v65 & 0x20) != 0)
    goto LABEL_224;
  v66 = (_BYTE *)*((_QWORD *)v18 + 1);
  v67 = *((unsigned int *)v18 + 1);
  if ((v65 & 4) != 0)
  {
    if (!(_DWORD)v67)
      goto LABEL_224;
    v68 = *v66 - 48;
    if (v68 > 9 || v67 >= 2 && *v66 == 48)
      goto LABEL_224;
    v90 = v66 + 1;
    v91 = v67 - 1;
    while (v91)
    {
      if (v68 <= 0x19999999)
      {
        v92 = *v90 - 48;
        if (v92 <= 9)
        {
          v36 = __CFADD__(v92, 10 * v68);
          v68 = v92 + 10 * v68;
          ++v90;
          --v91;
          if (!v36)
            continue;
        }
      }
      goto LABEL_224;
    }
  }
  else
  {
    if (!(_DWORD)v67)
      goto LABEL_224;
    v68 = *(unsigned __int16 *)v66 - 48;
    if (v68 > 9 || v67 >= 2 && *(_WORD *)v66 == 48)
      goto LABEL_224;
    v69 = (unsigned __int16 *)(v66 + 2);
    v70 = v67 - 1;
    while (v70)
    {
      if (v68 <= 0x19999999)
      {
        v71 = *v69 - 48;
        if (v71 <= 9)
        {
          v36 = __CFADD__(v71, 10 * v68);
          v68 = v71 + 10 * v68;
          ++v69;
          --v70;
          if (!v36)
            continue;
        }
      }
      goto LABEL_224;
    }
  }
  if (v68 != -1)
  {
    v114 = v68;
    v115 = (JSC::VM *)*((_QWORD *)a2 + 7);
    while (1)
    {
      v116 = 16 * (*(_DWORD *)v47 & 0xFFFFFFFE);
      v117 = (*(uint64_t (**)(uint64_t, JSC::JSObject *, unint64_t, WTF::StringImpl **))(16 * *(unsigned int *)(v116 + 0x4C) + 0x70))(v47, a2, v114, &v132);
      v118 = v117;
      if (*((_DWORD *)v115 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v115);
        if (((hasExceptionsAfterHandlingTraps | v118) & 1) != 0)
        {
          if ((hasExceptionsAfterHandlingTraps & 1) == 0)
            goto LABEL_113;
          goto LABEL_154;
        }
      }
      else if ((v117 & 1) != 0)
      {
        goto LABEL_113;
      }
      v119 = BYTE2(v138);
      if (BYTE2(v138) == 3)
      {
        if (v139)
          goto LABEL_154;
        v120 = *(unsigned __int8 *)(v47 + 5);
        if (v120 == 61)
        {
LABEL_313:
          v122 = *(_QWORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0x30);
          if (!v122)
            v122 = *(_QWORD *)(v47 + 16);
          goto LABEL_315;
        }
      }
      else
      {
        v120 = *(unsigned __int8 *)(v47 + 5);
        if (v120 == 61)
        {
          if (BYTE2(v138) == 1)
            goto LABEL_154;
          goto LABEL_311;
        }
      }
      if ((v120 - 39) <= 0xA)
      {
        if ((*(_BYTE *)(v47 + 40) & 7u) > 2)
        {
          LOBYTE(v148) = 0;
          LOBYTE(v149) = 0;
          v124 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v47, (WTF *)&v148);
          if (v125)
            v121 = v124;
          else
            v121 = 0;
        }
        else
        {
          v121 = *(_QWORD *)(v47 + 24);
        }
        if (v121 <= v114)
          goto LABEL_154;
        v119 = BYTE2(v138);
      }
LABEL_311:
      if ((*(_WORD *)(v116 + 12) & 0x800) == 0 || v119 == 3)
        goto LABEL_313;
      if ((*(_WORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
      {
        v122 = (*(uint64_t (**)(uint64_t, JSC::JSObject *))(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)v47 & 0xFFFFFFFE)
                                                                                     + 0x4C)
                                                                   + 0xB0))(v47, a2);
      }
      else
      {
        v122 = *(_QWORD *)(16 * (*(_DWORD *)v47 & 0xFFFFFFFE) + 0x30);
        if (!v122)
          v122 = *(_QWORD *)(v47 + 16);
      }
      if (*((_DWORD *)v115 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v115) & 1) != 0)
        goto LABEL_154;
LABEL_315:
      if ((v122 & 0xFFFE000000000002) == 0)
      {
        v47 = v122;
        if (*(unsigned __int8 *)(v122 + 5) > 0x16u)
          continue;
      }
      goto LABEL_154;
    }
  }
LABEL_224:
  v93 = (JSC::VM *)*((_QWORD *)a2 + 7);
  while (1)
  {
    v94 = *(_DWORD *)v127 & 0xFFFFFFFE;
    v95 = 16 * v94;
    if ((*(_BYTE *)(v127 + 6) & 8) != 0)
    {
      v100 = (*(uint64_t (**)(unint64_t, JSC::JSObject *, WTF::StringImpl *, WTF::StringImpl **))(16 * *(unsigned int *)(16 * v94 + 0x4C) + 0x68))(v127, a2, v18, &v132);
      if (*((_DWORD *)v93 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v93) & 1) != 0)
        goto LABEL_154;
      if ((v100 & 1) != 0)
        goto LABEL_113;
      if (BYTE2(v138) == 3)
      {
        if (v139)
          goto LABEL_154;
        v101 = *(unsigned __int8 *)(v127 + 5);
        if (v101 == 61)
          goto LABEL_231;
      }
      else
      {
        v101 = *(unsigned __int8 *)(v127 + 5);
        if (v101 == 61)
        {
          if (BYTE2(v138) == 1)
            goto LABEL_154;
          goto LABEL_231;
        }
      }
      if (!v18)
        goto LABEL_231;
      if ((v101 - 50) < 0xFFFFFFF5)
        goto LABEL_231;
      v102 = *((_DWORD *)v18 + 4);
      if ((v102 & 0x20) != 0)
        goto LABEL_231;
      v103 = *((unsigned int *)v18 + 1);
      if (!(_DWORD)v103)
        goto LABEL_231;
      v104 = (unsigned __int8 *)*((_QWORD *)v18 + 1);
      if ((v102 & 4) != 0)
      {
        v105 = *v104;
        if ((_DWORD)v103 == 1)
        {
LABEL_267:
          if ((v105 - 48) < 0xA)
            goto LABEL_154;
          goto LABEL_231;
        }
        if (v105 == 45)
        {
          v106 = v104[1];
LABEL_271:
          if ((v106 - 48) >= 0xA)
          {
            if ((_DWORD)v103 != 9 || v106 != 73)
              goto LABEL_231;
          }
          else if ((_DWORD)v103 == 2)
          {
            goto LABEL_154;
          }
LABEL_282:
          v5 = v5 & 0xFFFFFF0000000000 | v103 | ((unint64_t)((v102 >> 2) & 1) << 32);
          JSC::jsToNumber();
          v108 = (const WTF::StringImpl *)WTF::numberToString();
          if ((WTF::equal(v18, v108, v109) & 1) != 0)
            goto LABEL_154;
          goto LABEL_231;
        }
      }
      else
      {
        v105 = *(unsigned __int16 *)v104;
        if ((_DWORD)v103 == 1)
          goto LABEL_267;
        if (v105 == 45)
        {
          v106 = *((unsigned __int16 *)v104 + 1);
          goto LABEL_271;
        }
      }
      if ((v105 - 48) >= 0xA && ((_DWORD)v103 != 8 || v105 != 73) && ((_DWORD)v103 != 3 || v105 != 78))
        goto LABEL_231;
      goto LABEL_282;
    }
    if ((_DWORD)v25)
    {
      if ((v25 & ~*(_DWORD *)(16 * v94 + 0x20)) == 0)
      {
        v96 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * v94), v93);
        if (v96)
        {
          v148 = v18;
          v97 = JSC::PropertyTable::get(v96, (uint64_t *)&v148);
          v28 = v97;
          if ((_DWORD)v97 != -1)
            break;
        }
      }
    }
    if ((*(_BYTE *)(v127 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      goto LABEL_113;
LABEL_231:
    if ((*(_WORD *)(v95 + 12) & 0x800) == 0)
    {
      v98 = *(_DWORD *)v127;
LABEL_233:
      v99 = *(_QWORD *)(16 * (v98 & 0xFFFFFFFE) + 0x30);
      if (!v99)
        v99 = *(_QWORD *)(v127 + 16);
      goto LABEL_235;
    }
    v98 = *(_DWORD *)v127;
    if (BYTE2(v138) == 3)
      goto LABEL_233;
    v107 = 16 * (v98 & 0xFFFFFFFE);
    if ((*(_WORD *)(v107 + 12) & 0x800) != 0)
    {
      v99 = (*(uint64_t (**)(unint64_t, JSC::JSObject *))(16 * *(unsigned int *)(v107 + 76) + 0xB0))(v127, a2);
    }
    else
    {
      v99 = *(_QWORD *)(v107 + 48);
      if (!v99)
        v99 = *(_QWORD *)(v127 + 16);
    }
    if (*((_DWORD *)v93 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v93) & 1) != 0)
      goto LABEL_154;
LABEL_235:
    if ((v99 & 0xFFFE000000000002) == 0)
    {
      v127 = v99;
      if (*(unsigned __int8 *)(v99 + 5) > 0x16u)
        continue;
    }
    goto LABEL_154;
  }
  v37 = HIDWORD(v97);
  if ((int)v97 > 63)
  {
    v110 = *(_QWORD *)(v127 + 8) - 8;
    v111 = 0x3F00000000 - (v97 << 32);
  }
  else
  {
    v110 = v127 + 16;
    v111 = v97 << 32;
  }
  v21 = *(_QWORD *)(v110 + (v111 >> 29));
  if ((v21 & 0xFFFE000000000002) != 0)
  {
LABEL_290:
    v132 = (WTF::StringImpl *)v21;
    v136 = (WebCore::HTMLFormElement **)v127;
    goto LABEL_112;
  }
  v112 = *(unsigned __int8 *)(v21 + 5);
  if (v112 == 6)
  {
    v40 = *(_DWORD *)(v95 + 16) & 3;
    v113 = *(_QWORD *)(v21 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x4C))
    {
      v43 = *(_QWORD *)(v21 + 24);
      v42 = *(_QWORD *)(v21 + 32);
      v132 = *(WTF::StringImpl **)(v21 + 8);
      v133 = v113;
      LODWORD(v134) = HIDWORD(v97);
      v136 = (WebCore::HTMLFormElement **)v127;
      goto LABEL_117;
    }
    v132 = *(WTF::StringImpl **)(v21 + 8);
    v133 = v113;
    LODWORD(v134) = HIDWORD(v97);
    v136 = (WebCore::HTMLFormElement **)v127;
    goto LABEL_137;
  }
  if (v112 != 5)
    goto LABEL_290;
LABEL_120:
  JSC::JSObject::fillGetterPropertySlot();
LABEL_113:
  v63 = 0;
  v128[0] = 0;
  v130 = 0;
LABEL_158:
  if (v141)
  {
    v76 = *((_DWORD *)v140 + 1);
    if (!v76)
    {
      __break(0xC471u);
      JUMPOUT(0x194C11074);
    }
    *((_DWORD *)v140 + 1) = v76 - 1;
  }
  if (v146 && v145 != -1)
  {
    ((void (*)(WebCore::HTMLFormControlsCollection **, char *))off_1E329B780[v145])(&v148, v144);
    v63 = v130;
  }
  if (!v63)
  {
LABEL_170:
    OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
    goto LABEL_171;
  }
  v78 = WebCore::JSConverter<WebCore::IDLNullable<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::RadioNodeList>,WebCore::IDLInterface<WebCore::Element>>>>::convert<std::variant<WTF::RefPtr<WebCore::RadioNodeList,WTF::RawPtrTraits<WebCore::RadioNodeList>,WTF::DefaultRefDerefTraits<WebCore::RadioNodeList>>,WTF::RefPtr<WebCore::Element,WTF::RawPtrTraits<WebCore::Element>,WTF::DefaultRefDerefTraits<WebCore::Element>>>>((uint64_t)a2, *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), (uint64_t)v128, (WebCore::Element *)v21);
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
  {
    OwnPropertySlotByIndex = 0;
  }
  else
  {
    *(_QWORD *)a4 = v78;
    *(_DWORD *)(a4 + 16) = 6;
    *(_QWORD *)(a4 + 32) = this;
    OwnPropertySlotByIndex = 1;
    *(_BYTE *)(a4 + 49) = 1;
  }
  if (v130 && v129 != -1)
    ((void (*)(WebCore::HTMLFormControlsCollection **, char *))off_1E329B780[v129])(&v148, v128);
LABEL_171:
  v79 = v131;
  v131 = 0;
  if (v79)
  {
    if (*(_DWORD *)v79 == 2)
      WTF::StringImpl::destroy(v79, v77);
    else
      *(_DWORD *)v79 -= 2;
  }
  return OwnPropertySlotByIndex;
}

uint64_t WebCore::JSHTMLFormElement::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  WebCore::Node *v9;
  uint64_t v10;
  void *v11;
  int v12;
  int v13;
  uint64_t *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl **v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unsigned int v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  unsigned int v40;
  int v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52[2];
  char v53;
  WTF::StringImpl *v54;

  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned int *)(v4 + 188);
  if ((_DWORD)v5)
  {
    v6 = 0;
    v7 = *(_QWORD *)(v4 + 176);
    v8 = 8 * v5;
    do
    {
      v9 = *(WebCore::Node **)(*(_QWORD *)v7 + 8);
      *((_DWORD *)v9 + 6) += 2;
      v10 = (*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v9 + 456))(v9);
      v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 120))(v10);
      if (*((_DWORD *)v9 + 6) == 2)
      {
        if ((*((_WORD *)v9 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v9, v11);
      }
      else
      {
        *((_DWORD *)v9 + 6) -= 2;
      }
      v6 += v12;
      v7 += 8;
      v8 -= 8;
    }
    while (v8);
    if (v6)
    {
      v13 = 0;
      v14 = a3 + 1;
      while (1)
      {
        JSC::Identifier::from();
        v16 = v51;
        v54 = v51;
        v17 = *((_DWORD *)v51 + 4);
        if ((v17 & 0x20) != 0)
        {
          if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v51 + 36) & 4) != 0)
            goto LABEL_68;
        }
        else if ((a3[3] & 2) == 0)
        {
          goto LABEL_68;
        }
        v18 = *a3;
        v19 = *(unsigned int *)(*a3 + 20);
        if (v19 <= 0x13)
        {
          if ((_DWORD)v19)
          {
            v20 = *(WTF::StringImpl ***)(v18 + 8);
            while (*v20 != v51)
            {
              ++v20;
              if (!--v19)
                goto LABEL_27;
            }
            goto LABEL_68;
          }
LABEL_27:
          if ((v17 & 0x20) != 0)
          {
            v41 = *(_DWORD *)v16 + 2;
          }
          else
          {
            if ((v17 & 0x10) != 0)
            {
              *(_DWORD *)v16 += 2;
            }
            else
            {
              WTF::AtomStringImpl::addSlowCase();
              v16 = v52[0];
            }
            v41 = *(_DWORD *)v16;
            *(_DWORD *)v16 += 2;
            if (!v41)
            {
              WTF::StringImpl::destroy(v16, v15);
LABEL_62:
              v42 = (uint64_t *)(v18 + 8);
              v52[0] = v16;
              v43 = *(unsigned int *)(v18 + 20);
              if ((_DWORD)v43 == *(_DWORD *)(v18 + 16))
              {
                v44 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v42, v43 + 1, (unint64_t)v52);
                v43 = *(unsigned int *)(v18 + 20);
                v45 = *(_QWORD *)(v18 + 8);
                v46 = *v44;
                *v44 = 0;
                *(_QWORD *)(v45 + 8 * v43) = v46;
              }
              else
              {
                v47 = *v42;
                v52[0] = 0;
                *(_QWORD *)(v47 + 8 * v43) = v16;
              }
              *(_DWORD *)(v18 + 20) = v43 + 1;
              v48 = v52[0];
              v52[0] = 0;
              if (v48)
              {
                if (*(_DWORD *)v48 == 2)
                  WTF::StringImpl::destroy(v48, v15);
                else
                  *(_DWORD *)v48 -= 2;
              }
              goto LABEL_68;
            }
          }
          *(_DWORD *)v16 = v41;
          goto LABEL_62;
        }
        if (!*v14 || !*(_DWORD *)(*v14 - 12))
          break;
LABEL_25:
        WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v54, (uint64_t)v52);
        if (v53)
        {
          v16 = v54;
          v18 = *a3;
          v17 = *((_DWORD *)v54 + 4);
          goto LABEL_27;
        }
LABEL_68:
        v49 = v51;
        v51 = 0;
        if (v49)
        {
          if (*(_DWORD *)v49 == 2)
            WTF::StringImpl::destroy(v49, v15);
          else
            *(_DWORD *)v49 -= 2;
        }
        if (++v13 == v6)
          return JSC::JSObject::getOwnPropertyNames();
      }
      v21 = *(uint64_t **)(v18 + 8);
      v22 = &v21[v19];
      while (1)
      {
        v23 = *v21;
        v24 = *v14;
        if (*v14
          || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v24 = *v14) != 0))
        {
          v25 = *(_DWORD *)(v24 - 8);
        }
        else
        {
          v25 = 0;
        }
        v26 = (~(v23 << 32) + v23) ^ ((unint64_t)(~(v23 << 32) + v23) >> 22);
        v27 = 9 * ((v26 + ~(v26 << 13)) ^ ((v26 + ~(v26 << 13)) >> 8));
        v28 = (v27 ^ (v27 >> 15)) + ~((v27 ^ (v27 >> 15)) << 27);
        v29 = v25 & ((v28 >> 31) ^ v28);
        v30 = (uint64_t *)(v24 + 8 * v29);
        v31 = *v30;
        if (*v30)
        {
          v32 = 0;
          v33 = 1;
          while (v31 != v23)
          {
            if (v31 == -1)
              v32 = v30;
            v29 = (v29 + v33) & v25;
            v30 = (uint64_t *)(v24 + 8 * v29);
            v31 = *v30;
            ++v33;
            if (!*v30)
            {
              if (v32)
              {
                *v32 = 0;
                --*(_DWORD *)(*v14 - 16);
                v30 = v32;
              }
              goto LABEL_42;
            }
          }
          goto LABEL_55;
        }
LABEL_42:
        *v30 = v23;
        v34 = *v14;
        v35 = *v14 ? *(_DWORD *)(v34 - 12) + 1 : 1;
        *(_DWORD *)(v34 - 12) = v35;
        v36 = *v14;
        v37 = *v14 ? *(_DWORD *)(v36 - 12) : 0;
        v38 = (*(_DWORD *)(v36 - 16) + v37);
        v39 = *(unsigned int *)(v36 - 4);
        if (v39 > 0x400)
          break;
        if (3 * v39 <= 4 * v38)
        {
          if ((_DWORD)v39)
            goto LABEL_51;
          v40 = 8;
          goto LABEL_54;
        }
LABEL_55:
        if (++v21 == v22)
          goto LABEL_25;
      }
      if (v39 > 2 * v38)
        goto LABEL_55;
LABEL_51:
      v40 = (_DWORD)v39 << (6 * *(_DWORD *)(v36 - 12) >= (2 * v39));
LABEL_54:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v40, v30);
      goto LABEL_55;
    }
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSHTMLFormElement::defineOwnProperty(uint64_t a1, WTF::StringImpl **a2, WTF::StringImpl *this, _OWORD *a4, int a5)
{
  int v7;
  _BYTE *v8;
  uint64_t v9;
  unsigned int v10;
  WebCore::HTMLFormElement *v11;
  _DWORD *v12;
  WTF::StringImpl *v13;
  int isSupportedPropertyName;
  WTF::StringImpl *v15;
  __int128 v16;
  unsigned __int16 *v18;
  uint64_t v19;
  unsigned int v20;
  BOOL v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  _OWORD v25[2];
  WTF::StringImpl *v26[2];

  v26[1] = a2[7];
  if (!this)
    goto LABEL_13;
  v7 = *((_DWORD *)this + 4);
  if ((v7 & 0x20) != 0)
    goto LABEL_13;
  v8 = (_BYTE *)*((_QWORD *)this + 1);
  v9 = *((unsigned int *)this + 1);
  if ((v7 & 4) != 0)
  {
    if (!(_DWORD)v9)
      goto LABEL_6;
    v10 = *v8 - 48;
    if (v10 > 9 || v9 >= 2 && *v8 == 48)
      goto LABEL_6;
    v22 = v9 - 1;
    v23 = v8 + 1;
    while (v22)
    {
      if (v10 <= 0x19999999)
      {
        v24 = *v23 - 48;
        if (v24 <= 9)
        {
          v21 = __CFADD__(v24, 10 * v10);
          v10 = v24 + 10 * v10;
          --v22;
          ++v23;
          if (!v21)
            continue;
        }
      }
      goto LABEL_6;
    }
  }
  else
  {
    if (!(_DWORD)v9)
      goto LABEL_6;
    v10 = *(unsigned __int16 *)v8 - 48;
    if (v10 > 9 || v9 >= 2 && *(_WORD *)v8 == 48)
      goto LABEL_6;
    v18 = (unsigned __int16 *)(v8 + 2);
    v19 = v9 - 1;
    while (v19)
    {
      if (v10 <= 0x19999999)
      {
        v20 = *v18 - 48;
        if (v20 <= 9)
        {
          v21 = __CFADD__(v20, 10 * v10);
          v10 = v20 + 10 * v10;
          ++v18;
          --v19;
          if (!v21)
            continue;
        }
      }
      goto LABEL_6;
    }
  }
  if (v10 != -1)
  {
    if (!a5)
      return 0;
    goto LABEL_27;
  }
LABEL_6:
  v11 = *(WebCore::HTMLFormElement **)(a1 + 24);
  *(_DWORD *)this += 2;
  v26[0] = this;
  if (!(_DWORD)v9)
  {
    if (*(_DWORD *)this == 2)
      WTF::StringImpl::destroy(this, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)this -= 2;
    goto LABEL_13;
  }
  WebCore::HTMLFormElement::elements(v11, (WTF::StringImpl *)a2, (uint64_t *)v25);
  v12 = *(_DWORD **)&v25[0];
  isSupportedPropertyName = WebCore::HTMLCollection::isSupportedPropertyName(*(_QWORD **)&v25[0], (uint64_t *)v26);
  if (v12)
  {
    if (v12[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v12 + 8))(v12);
    else
      --v12[4];
  }
  v15 = v26[0];
  v26[0] = 0;
  if (!v15)
  {
    if (!isSupportedPropertyName)
      goto LABEL_13;
    goto LABEL_26;
  }
  if (*(_DWORD *)v15 == 2)
  {
    WTF::StringImpl::destroy(v15, v13);
    if ((isSupportedPropertyName & 1) == 0)
      goto LABEL_13;
LABEL_26:
    if (!a5)
      return 0;
LABEL_27:
    JSC::throwTypeError();
    return 0;
  }
  *(_DWORD *)v15 -= 2;
  if ((isSupportedPropertyName & 1) != 0)
    goto LABEL_26;
LABEL_13:
  v16 = a4[1];
  v25[0] = *a4;
  v25[1] = v16;
  return JSC::JSObject::defineOwnProperty();
}

uint64_t WebCore::JSHTMLFormElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLFormElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLFormElementPrototype::create(WebCore::JSHTMLFormElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t Direct;
  WTF::StringImpl *v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  JSC::Structure *v20;
  int v21;
  WTF::StringImpl *v23;
  int v24;
  WTF::StringImpl *v25;
  unint64_t v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  uint64_t v29;
  int *v30;
  JSC::Structure **v31;
  int *v32;
  int v33;
  int v34;
  JSC::Structure *v35;
  int v36;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v26 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v26);
    *((_QWORD *)this + 4865) = SlowCase + (int)v26;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<19u>(this, (uint64_t)&WebCore::JSHTMLFormElement::s_info, (uint64_t)&WebCore::JSHTMLFormElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C12384);
  }
  v10 = v9 - 192;
  if (!v9)
    v10 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v10 + 680) + 680) & 0x20000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v23 = v27;
    v24 = *((_DWORD *)this + 23281);
    *((_DWORD *)this + 23281) = 1;
    LODWORD(v27) = -1;
    WORD2(v27) = 1;
    JSC::JSObject::deleteProperty();
    *((_DWORD *)this + 23281) = v24;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v25);
      else
        *(_DWORD *)v23 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v11 = *(_QWORD *)(v6[381] + 2712);
  v12 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) + 672);
  v13 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v12, this, (unint64_t)v13);
  v27 = 0;
  v28 = SlowCase;
  v29 = 0x1000000FFFFFFFFLL;
  v30 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v11, Direct, 4, (uint64_t)&v27);
  if (*v13 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v15);
  else
    *v13 -= 2;
  v16 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v18 = JSC::JSString::create((uint64_t)this, &v27);
  v19 = v27;
  v27 = 0;
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v17);
    else
      *(_DWORD *)v19 -= 2;
  }
  v20 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v36 = *(_DWORD *)SlowCase;
  v35 = v20;
  v21 = JSC::Structure::outOfLineCapacity(v20);
  v33 = 0;
  v34 = v21;
  v27 = (WTF::StringImpl *)&v34;
  v28 = SlowCase;
  v29 = (uint64_t)this;
  v30 = &v36;
  v31 = &v35;
  v32 = &v33;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v20, this, v16, 6, (uint64_t)&v27);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v33, v18);
  *((_DWORD *)v20 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFormElement>,(WebCore::DOMConstructorID)533>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char **v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4264);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v8 = v7;
  LODWORD(v37) = 67099;
  if ((v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v35);
    v6[2] = SlowCase + (int)v35;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v8, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFormElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v6[165];
  v2 = v11[2846];
  if (v2 < v11[2847])
    goto LABEL_11;
  v2 = v11[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v36);
    v11[2848] = v2 + (int)v36;
LABEL_11:
    v11[2846] = v2 + 48;
    goto LABEL_12;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v6[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v37);
  v15 = v37;
  v37 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v6[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v37);
  v18 = *(_QWORD *)(v6[227] + 2160);
  v19 = *(_QWORD *)(a2 + 3296);
  if (v19)
  {
    v20 = *(_DWORD *)(v19 - 8);
    v21 = ((unint64_t)&WebCore::JSHTMLFormElement::s_info + ~((_QWORD)&WebCore::JSHTMLFormElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLFormElement::s_info + ~((_QWORD)&WebCore::JSHTMLFormElement::s_info << 32)) >> 22);
    v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
    v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
    v24 = v20 & ((v23 >> 31) ^ v23);
    v25 = *(char ***)(v19 + 16 * v24);
    if (v25 == &WebCore::JSHTMLFormElement::s_info)
    {
LABEL_18:
      v26 = *(_QWORD *)(v19 + 16 * v24 + 8);
      if (v26)
        goto LABEL_20;
    }
    else
    {
      v34 = 1;
      while (v25)
      {
        v24 = ((_DWORD)v24 + v34) & v20;
        v25 = *(char ***)(v19 + 16 * v24);
        ++v34;
        if (v25 == &WebCore::JSHTMLFormElement::s_info)
          goto LABEL_18;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v17);
  Structure = WebCore::JSHTMLFormElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLFormElementPrototype::create((WebCore::JSHTMLFormElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLFormElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLFormElement::s_info);
LABEL_20:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v18, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4264) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

uint64_t WebCore::JSHTMLFormElement::legacyPlatformObjectGetOwnProperty(uint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4, char a5)
{
  JSC::VM *v9;
  int v10;
  _WORD *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  WebCore::HTMLFormElement *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  JSC::VM *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BYTE *v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  _BYTE *v32;
  JSC::VM *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unsigned int v39;
  uint64_t v40;
  unsigned __int16 *v41;
  uint64_t v42;
  unsigned int v43;
  BOOL v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int16 *v48;
  unsigned int v49;
  uint64_t *v50;
  int v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  int v60;
  _BYTE *v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int16 *v67;
  uint64_t v68;
  unsigned int v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t OwnStaticPropertySlot;
  BOOL v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  unsigned __int16 *v81;
  uint64_t v82;
  unsigned int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  WebCore::JSDOMGlobalObject *v99;
  WebCore::HTMLElement *v100;
  uint64_t v101;
  int v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  JSC::VM *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int16 *v114;
  uint64_t v115;
  unsigned int v116;
  int v117;
  uint64_t v118;
  unsigned int v119;
  unsigned int v120;
  char v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  int v126;
  _BYTE *v127;
  uint64_t v128;
  unsigned int v129;
  unsigned __int16 *v130;
  uint64_t i;
  unsigned int v132;
  uint64_t v133;
  unsigned __int8 *v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned __int8 *v139;
  unsigned int v140;
  JSC::VM *v141;
  uint64_t v142;
  char v143;
  int v144;
  int v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unsigned __int8 *v149;
  uint64_t v150;
  unsigned int v151;
  JSC::VM *v152;
  uint64_t v153;
  int v154;
  int v155;
  int v156;
  int v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  unsigned __int8 *v164;
  int v165;
  int v166;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v168;
  unsigned __int8 *v169;
  unsigned int v170;
  const WTF::StringImpl *v171;
  const unsigned __int8 *v172;
  unsigned __int8 *v173;
  uint64_t v174;
  unsigned int v175;
  unint64_t v176;
  char v177;
  uint64_t v178;
  unsigned __int8 *v179;
  unsigned int v180;
  BOOL v181;
  unint64_t v182;
  uint64_t v183;
  char v184[8];
  int v185;
  unsigned __int8 v186;
  WTF::StringImpl *v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  char v194;
  JSC::VM *v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  char v199[8];
  unsigned int v200;
  unsigned __int8 v201;
  char v202;
  unint64_t v203;
  unsigned int v204;
  char v205;
  uint64_t v206;

  v206 = *MEMORY[0x1E0C80C00];
  v9 = a2[7];
  if (a3)
  {
    v10 = *(_DWORD *)(a3 + 16);
    if ((v10 & 0x20) != 0)
    {
      if ((a5 & 1) == 0)
        goto LABEL_96;
      goto LABEL_97;
    }
    v11 = *(_WORD **)(a3 + 8);
    v12 = *(unsigned int *)(a3 + 4);
    if ((v10 & 4) == 0)
    {
      if ((_DWORD)v12 && (v13 = (unsigned __int16)*v11 - 48, v13 <= 9))
      {
        if (v12 < 2 || *v11 != 48)
        {
          v41 = v11 + 1;
          v42 = v12 - 1;
          while (v42)
          {
            if (v13 <= 0x19999999)
            {
              v43 = *v41 - 48;
              if (v43 <= 9)
              {
                v44 = __CFADD__(v43, 10 * v13);
                v13 = v43 + 10 * v13;
                ++v41;
                --v42;
                if (!v44)
                  continue;
              }
            }
            goto LABEL_6;
          }
          v76 = v13 == -1;
          v15 = v13 & 0xFFFFFF00;
          v14 = 0x100000000;
          if (v13 == -1)
          {
            v14 = 0;
            LOBYTE(v13) = 0;
          }
          if (v76)
            v15 = 0;
          goto LABEL_8;
        }
        v14 = 0;
      }
      else
      {
LABEL_6:
        v14 = 0;
        LOBYTE(v13) = 0;
      }
      v15 = 0;
LABEL_8:
      v13 = v13;
LABEL_9:
      if ((v14 & 0x100000000) != 0)
      {
        v99 = (WebCore::JSDOMGlobalObject *)WebCore::HTMLFormElement::item(*(WebCore::HTMLFormElement **)(a1 + 24), (WTF::StringImpl *)(v15 | v13));
        if (v99)
        {
          v101 = WebCore::toJS((WebCore *)a2, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v99, v100);
          if (!*((_DWORD *)v9 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) == 0)
          {
            *(_QWORD *)a4 = v101;
            *(_DWORD *)(a4 + 16) = 2;
            *(_QWORD *)(a4 + 32) = a1;
            v65 = 1;
            *(_BYTE *)(a4 + 49) = 1;
            return v65;
          }
          return 0;
        }
        if (!(a3 >> 4)
          || (v123 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v123 + 0x20)) != 0)
          || (v124 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7])) == 0|| (v203 = a3, v125 = JSC::PropertyTable::get(v124, (uint64_t *)&v203), v59 = v125, (_DWORD)v125 == -1))
        {
          if ((*(_BYTE *)(a1 + 6) & 0x20) == 0 || (JSC::JSObject::getOwnStaticPropertySlot() & 1) == 0)
          {
            v126 = *(_DWORD *)(a3 + 16);
            if ((v126 & 0x20) == 0)
            {
              v127 = *(_BYTE **)(a3 + 8);
              v128 = *(unsigned int *)(a3 + 4);
              if ((v126 & 4) != 0)
              {
                if (!(_DWORD)v128)
                  return 0;
                v129 = *v127 - 48;
                if (v129 > 9 || v128 >= 2 && *v127 == 48)
                  return 0;
                v178 = v128 - 1;
                v179 = v127 + 1;
                while (v178)
                {
                  if (v129 > 0x19999999)
                    return 0;
                  v180 = *v179 - 48;
                  if (v180 > 9)
                    return 0;
                  v65 = 0;
                  v44 = __CFADD__(v180, 10 * v129);
                  v129 = v180 + 10 * v129;
                  --v178;
                  ++v179;
                  if (v44)
                    return v65;
                }
              }
              else
              {
                if (!(_DWORD)v128)
                  return 0;
                v129 = *(unsigned __int16 *)v127 - 48;
                if (v129 > 9 || v128 >= 2 && *(_WORD *)v127 == 48)
                  return 0;
                v130 = (unsigned __int16 *)(v127 + 2);
                for (i = v128 - 1; i; --i)
                {
                  if (v129 > 0x19999999)
                    return 0;
                  v132 = *v130 - 48;
                  if (v132 > 9)
                    return 0;
                  v65 = 0;
                  v44 = __CFADD__(v132, 10 * v129);
                  v129 = v132 + 10 * v129;
                  ++v130;
                  if (v44)
                    return v65;
                }
              }
              if (v129 != -1)
                return JSC::JSObject::getOwnPropertySlotByIndex();
            }
            return 0;
          }
          return 1;
        }
        v70 = HIDWORD(v125);
        if ((int)v125 > 63)
        {
          v136 = *(_QWORD *)(a1 + 8) - 8;
          v137 = 0x3F00000000 - (v125 << 32);
        }
        else
        {
          v136 = a1 + 16;
          v137 = v125 << 32;
        }
        v73 = *(_QWORD *)(v136 + (v137 >> 29));
        if ((v73 & 0xFFFE000000000002) != 0)
          goto LABEL_124;
        v74 = *(unsigned __int8 *)(v73 + 5);
        if (v74 != 6)
        {
LABEL_127:
          if (v74 != 5)
            goto LABEL_124;
          JSC::JSObject::fillGetterPropertySlot();
          return 1;
        }
        v84 = *(_DWORD *)(v123 + 16) & 3;
        v86 = *(_QWORD *)(v73 + 8);
        v85 = *(_QWORD *)(v73 + 16);
        if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v73 & 0xFFFFFFFE) + 0x4C))
        {
          v88 = *(_QWORD *)(v73 + 24);
          v87 = *(_QWORD *)(v73 + 32);
          goto LABEL_165;
        }
LABEL_349:
        *(_QWORD *)a4 = v86;
        *(_QWORD *)(a4 + 8) = v85;
        *(_DWORD *)(a4 + 16) = v70;
        *(_QWORD *)(a4 + 32) = a1;
        v65 = 1;
        *(_BYTE *)(a4 + 49) = 3;
        if (v84 != 2)
          *(_BYTE *)(a4 + 48) = 1;
        return v65;
      }
      if ((a5 & 1) == 0)
      {
        v16 = *(WebCore::HTMLFormElement **)(a1 + 24);
        *(_DWORD *)a3 += 2;
        v17 = (WTF::StringImpl *)a3;
        goto LABEL_12;
      }
LABEL_97:
      if (!(a3 >> 4)
        || (v56 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v56 + 0x20)) != 0)
        || (v57 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v9)) == 0|| (v203 = a3, v58 = JSC::PropertyTable::get(v57, (uint64_t *)&v203), v59 = v58, (_DWORD)v58 == -1))
      {
        if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
        {
          OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
          v65 = OwnStaticPropertySlot;
          if (!a3 || (OwnStaticPropertySlot & 1) != 0)
            return v65;
LABEL_103:
          v60 = *(_DWORD *)(a3 + 16);
          if ((v60 & 0x20) != 0)
            return 0;
          v61 = *(_BYTE **)(a3 + 8);
          v62 = *(unsigned int *)(a3 + 4);
          if ((v60 & 4) != 0)
          {
            if ((_DWORD)v62)
            {
              v120 = *v61 - 48;
              if (v120 > 9 || v62 >= 2 && *v61 == 48)
              {
LABEL_252:
                v64 = 0;
              }
              else
              {
                v173 = v61 + 1;
                v174 = v62 - 1;
                while (v174)
                {
                  if (v120 > 0x19999999)
                    goto LABEL_252;
                  v175 = *v173 - 48;
                  if (v175 > 9)
                    goto LABEL_252;
                  v64 = 0;
                  v44 = __CFADD__(v175, 10 * v120);
                  v120 = v175 + 10 * v120;
                  ++v173;
                  --v174;
                  if (v44)
                    goto LABEL_108;
                }
                v64 = 0x100000000;
                if (v120 == -1)
                  v64 = 0;
              }
            }
            else
            {
              v64 = 0;
            }
          }
          else if ((_DWORD)v62)
          {
            v63 = *(unsigned __int16 *)v61 - 48;
            if (v63 > 9 || v62 >= 2 && *(_WORD *)v61 == 48)
            {
LABEL_107:
              v64 = 0;
            }
            else
            {
              v67 = (unsigned __int16 *)(v61 + 2);
              v68 = v62 - 1;
              while (v68)
              {
                if (v63 <= 0x19999999)
                {
                  v69 = *v67 - 48;
                  if (v69 <= 9)
                  {
                    v44 = __CFADD__(v69, 10 * v63);
                    v63 = v69 + 10 * v63;
                    ++v67;
                    --v68;
                    if (!v44)
                      continue;
                  }
                }
                goto LABEL_107;
              }
              v76 = v63 == -1;
              v64 = 0x100000000;
              if (v76)
                v64 = 0;
            }
          }
          else
          {
            v64 = 0;
          }
LABEL_108:
          if ((v64 & 0x100000000) == 0)
            return 0;
          return JSC::JSObject::getOwnPropertySlotByIndex();
        }
        if (a3)
          goto LABEL_103;
        return 0;
      }
      v70 = HIDWORD(v58);
      if ((int)v58 > 63)
      {
        v71 = *(_QWORD *)(a1 + 8) - 8;
        v72 = 0x3F00000000 - (v58 << 32);
      }
      else
      {
        v71 = a1 + 16;
        v72 = v58 << 32;
      }
      v73 = *(_QWORD *)(v71 + (v72 >> 29));
      if ((v73 & 0xFFFE000000000002) != 0)
      {
LABEL_124:
        *(_QWORD *)a4 = v73;
        *(_QWORD *)(a4 + 32) = a1;
        *(_DWORD *)(a4 + 16) = v70;
        *(_DWORD *)(a4 + 20) = v59;
        v65 = 1;
        *(_WORD *)(a4 + 48) = 257;
        return v65;
      }
      v74 = *(unsigned __int8 *)(v73 + 5);
      if (v74 != 6)
        goto LABEL_127;
      v84 = *(_DWORD *)(v56 + 16) & 3;
      v86 = *(_QWORD *)(v73 + 8);
      v85 = *(_QWORD *)(v73 + 16);
      if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v73 & 0xFFFFFFFE) + 0x4C))
      {
        v88 = *(_QWORD *)(v73 + 24);
        v87 = *(_QWORD *)(v73 + 32);
LABEL_165:
        *(_QWORD *)a4 = v86;
        *(_QWORD *)(a4 + 8) = v85;
        *(_DWORD *)(a4 + 16) = v70;
        *(_QWORD *)(a4 + 32) = a1;
        *(_BYTE *)(a4 + 49) = 3;
        v65 = 1;
        if (v84 != 2)
          *(_BYTE *)(a4 + 48) = 1;
        *(_BYTE *)(a4 + 51) = 1;
        *(_QWORD *)(a4 + 72) = v88;
        *(_QWORD *)(a4 + 80) = v87;
        return v65;
      }
      goto LABEL_349;
    }
    if ((_DWORD)v12)
    {
      v119 = *(unsigned __int8 *)v11 - 48;
      if (v119 <= 9 && (v12 < 2 || *(_BYTE *)v11 != 48))
      {
        v168 = v12 - 1;
        v169 = (unsigned __int8 *)v11 + 1;
        while (v168)
        {
          if (v119 > 0x19999999)
            goto LABEL_245;
          v170 = *v169 - 48;
          if (v170 > 9)
            goto LABEL_245;
          v13 = 0;
          LOBYTE(v12) = 0;
          v14 = 0;
          v44 = __CFADD__(v170, 10 * v119);
          v119 = v170 + 10 * v119;
          --v168;
          ++v169;
          if (v44)
            goto LABEL_247;
        }
        if (v119 == -1)
          v13 = 0;
        else
          v13 = v119 & 0xFFFFFF00;
        if (v119 == -1)
          LOBYTE(v12) = 0;
        else
          LOBYTE(v12) = v119;
        if (v119 == -1)
          v14 = 0;
        else
          v14 = 0x100000000;
        goto LABEL_247;
      }
LABEL_245:
      v13 = 0;
      LOBYTE(v12) = 0;
    }
    else
    {
      v13 = 0;
    }
    v14 = 0;
LABEL_247:
    v15 = v12;
    goto LABEL_9;
  }
  if ((a5 & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
      return JSC::JSObject::getOwnStaticPropertySlot();
    return 0;
  }
  v17 = 0;
  v16 = *(WebCore::HTMLFormElement **)(a1 + 24);
LABEL_12:
  v187 = v17;
  WebCore::HTMLFormElement::namedItem(v16, (const WTF::AtomString *)&v187, (uint64_t)&v203);
  v20 = v187;
  v187 = 0;
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v18);
    else
      *(_DWORD *)v20 -= 2;
  }
  if (v205)
  {
    LOBYTE(v187) = 0;
    LODWORD(v188) = -1;
    v21 = v204;
    if (v204 == -1)
    {
      v199[0] = 0;
      v200 = -1;
      v201 = 1;
    }
    else
    {
      ((void (*)(char *, WTF::StringImpl **, unint64_t *))off_1E329B790[v204])(&v202, &v187, &v203);
      LODWORD(v188) = v21;
      v199[0] = 0;
      v200 = -1;
      ((void (*)(char *, char *, WTF::StringImpl **))off_1E32A0F70[v21])(&v202, v199, &v187);
      v200 = v21;
      v201 = 1;
      if ((_DWORD)v188 != -1)
        ((void (*)(char *, WTF::StringImpl **))off_1E329B780[v188])(&v202, &v187);
    }
    if (v205 && v204 != -1)
      ((void (*)(WTF::StringImpl **, unint64_t *))off_1E329B780[v204])(&v187, &v203);
  }
  else
  {
    v199[0] = 0;
    v201 = 0;
  }
  if (!v201)
    goto LABEL_96;
  v22 = a2[7];
  v189 = 0xFFFFFFFF00000000;
  v191 = 0;
  v192 = 0;
  v190 = a1;
  v193 = 196608;
  v194 = 0;
  v197 = 0;
  v198 = 0;
  v195 = v22;
  ++*((_DWORD *)v22 + 1);
  v196 = 1;
  v23 = a3 >> 4;
  if ((a3 >> 4))
  {
    v24 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if ((v23 & ~*(_DWORD *)(v24 + 0x20)) == 0)
    {
      v25 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v22);
      if (v25)
      {
        v203 = a3;
        v26 = JSC::PropertyTable::get(v25, (uint64_t *)&v203);
        if ((_DWORD)v26 != -1)
        {
          v50 = (uint64_t *)(a1 + 8 * (int)v26 + 16);
          if ((int)v26 >= 64)
            v50 = (uint64_t *)(*(_QWORD *)(a1 + 8) + ((uint64_t)(0x3F00000000 - (v26 << 32)) >> 29) - 8);
          v19 = *v50;
          if ((*v50 & 0xFFFE000000000002) != 0)
            goto LABEL_78;
          v80 = *(unsigned __int8 *)(v19 + 5);
          if (v80 == 6)
          {
            v90 = *(_DWORD *)(v24 + 16) & 3;
            v91 = *(_QWORD *)(v19 + 16);
            if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C))
            {
              v93 = *(_QWORD *)(v19 + 24);
              v92 = *(_QWORD *)(v19 + 32);
              v187 = *(WTF::StringImpl **)(v19 + 8);
              v188 = v91;
              LODWORD(v189) = HIDWORD(v26);
              v191 = a1;
              BYTE1(v193) = 3;
              if (v90 != 2)
                LOBYTE(v193) = 1;
              HIBYTE(v193) = 1;
              v197 = v93;
              v198 = v92;
            }
            else
            {
              v187 = *(WTF::StringImpl **)(v19 + 8);
              v188 = v91;
              LODWORD(v189) = HIDWORD(v26);
              v191 = a1;
              BYTE1(v193) = 3;
              if (v90 != 2)
                LOBYTE(v193) = 1;
            }
            goto LABEL_79;
          }
          if (v80 != 5)
          {
LABEL_78:
            v187 = (WTF::StringImpl *)v19;
            v191 = a1;
            v189 = __PAIR64__(v26, HIDWORD(v26));
            LOWORD(v193) = 257;
          }
          else
          {
            JSC::JSObject::fillGetterPropertySlot();
          }
LABEL_79:
          v45 = 0;
          v184[0] = 0;
          v186 = 0;
          goto LABEL_89;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    goto LABEL_79;
  if (a3)
  {
    v27 = *(_DWORD *)(a3 + 16);
    if ((v27 & 0x20) == 0)
    {
      v28 = *(_BYTE **)(a3 + 8);
      v29 = *(unsigned int *)(a3 + 4);
      if ((v27 & 4) != 0)
      {
        if (!(_DWORD)v29)
          goto LABEL_37;
        v30 = *v28 - 48;
        if (v30 > 9 || v29 >= 2 && *v28 == 48)
          goto LABEL_37;
        v133 = v29 - 1;
        v134 = v28 + 1;
        while (v133)
        {
          if (v30 <= 0x19999999)
          {
            v135 = *v134 - 48;
            if (v135 <= 9)
            {
              v44 = __CFADD__(v135, 10 * v30);
              v30 = v135 + 10 * v30;
              --v133;
              ++v134;
              if (!v44)
                continue;
            }
          }
          goto LABEL_37;
        }
      }
      else
      {
        if (!(_DWORD)v29)
          goto LABEL_37;
        v30 = *(unsigned __int16 *)v28 - 48;
        if (v30 > 9 || v29 >= 2 && *(_WORD *)v28 == 48)
          goto LABEL_37;
        v47 = v29 - 1;
        v48 = (unsigned __int16 *)(v28 + 2);
        while (v47)
        {
          if (v30 <= 0x19999999)
          {
            v49 = *v48 - 48;
            if (v49 <= 9)
            {
              v44 = __CFADD__(v49, 10 * v30);
              v30 = v49 + 10 * v30;
              --v47;
              ++v48;
              if (!v44)
                continue;
            }
          }
          goto LABEL_37;
        }
      }
      if (v30 != -1 && JSC::JSObject::getOwnPropertySlotByIndex())
        goto LABEL_79;
    }
  }
LABEL_37:
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28) + 3320) + 53))
  {
    v184[0] = 0;
    v186 = 0;
    v45 = v201;
    if (!v201)
      goto LABEL_89;
    v185 = -1;
    v46 = v200;
    if (v200 != -1)
      goto LABEL_87;
    goto LABEL_88;
  }
  v183 = a4;
  v31 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x30);
  if (!v31)
    v31 = *(_QWORD *)(a1 + 16);
  if ((v31 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v31 + 5) < 0x17u)
    goto LABEL_85;
  v32 = (_BYTE *)(v31 + 6);
  if ((*(_BYTE *)(v31 + 6) & 8) == 0)
  {
    v33 = a2[7];
    v34 = v31;
    while (1)
    {
      v35 = *(_DWORD *)v34 & 0xFFFFFFFE;
      v36 = 16 * v35;
      if ((_DWORD)v23)
      {
        if ((v23 & ~*(_DWORD *)(16 * v35 + 0x20)) == 0)
        {
          v37 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v36, v33);
          if (v37)
          {
            v203 = a3;
            v38 = JSC::PropertyTable::get(v37, (uint64_t *)&v203);
            v39 = v38;
            if ((_DWORD)v38 != -1)
              break;
          }
        }
      }
      if ((*v32 & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
        goto LABEL_147;
      v40 = *(_QWORD *)(v36 + 48);
      if (!v40)
        v40 = *(_QWORD *)(v34 + 16);
      if ((v40 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v40 + 5) < 0x17u)
      {
        if (!a3)
          goto LABEL_85;
        v51 = *(_DWORD *)(a3 + 16);
        if ((v51 & 0x20) != 0)
          goto LABEL_85;
        v52 = *(_BYTE **)(a3 + 8);
        v53 = *(unsigned int *)(a3 + 4);
        if ((v51 & 4) != 0)
        {
          if (!(_DWORD)v53)
            goto LABEL_85;
          v54 = *v52 - 48;
          if (v54 > 9 || v53 >= 2 && *v52 == 48)
            goto LABEL_85;
          v138 = v53 - 1;
          v139 = v52 + 1;
          while (v138)
          {
            if (v54 <= 0x19999999)
            {
              v140 = *v139 - 48;
              if (v140 <= 9)
              {
                v44 = __CFADD__(v140, 10 * v54);
                v54 = v140 + 10 * (_DWORD)v54;
                --v138;
                ++v139;
                if (!v44)
                  continue;
              }
            }
            goto LABEL_85;
          }
        }
        else
        {
          if (!(_DWORD)v53)
            goto LABEL_85;
          v54 = *(unsigned __int16 *)v52 - 48;
          if (v54 > 9 || v53 >= 2 && *(_WORD *)v52 == 48)
            goto LABEL_85;
          v81 = (unsigned __int16 *)(v52 + 2);
          v82 = v53 - 1;
          while (v82)
          {
            if (v54 <= 0x19999999)
            {
              v83 = *v81 - 48;
              if (v83 <= 9)
              {
                v44 = __CFADD__(v83, 10 * v54);
                v54 = v83 + 10 * (_DWORD)v54;
                ++v81;
                --v82;
                if (!v44)
                  continue;
              }
            }
            goto LABEL_85;
          }
        }
        if ((_DWORD)v54 == -1)
          goto LABEL_85;
        v141 = a2[7];
        while (2)
        {
          v142 = 16 * (*(_DWORD *)v31 & 0xFFFFFFFE);
          v143 = (*(uint64_t (**)(uint64_t, JSC::VM **, uint64_t, WTF::StringImpl **))(16
                                                                                             * *(unsigned int *)(v142 + 0x4C)
                                                                                             + 0x70))(v31, a2, v54, &v187);
          if (*((_DWORD *)v141 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v141) & 1) != 0)
            goto LABEL_85;
          if ((v143 & 1) != 0)
            goto LABEL_147;
          v144 = BYTE2(v193);
          if (BYTE2(v193) == 3)
          {
            if (v194)
              goto LABEL_85;
            v145 = *(unsigned __int8 *)(v31 + 5);
            if (v145 != 61)
              goto LABEL_326;
            goto LABEL_333;
          }
          v145 = *(unsigned __int8 *)(v31 + 5);
          if (v145 == 61)
          {
            if (BYTE2(v193) == 1)
              goto LABEL_85;
          }
          else
          {
LABEL_326:
            if ((v145 - 39) <= 0xA)
            {
              if ((*(_BYTE *)(v31 + 40) & 7u) > 2)
              {
                LOBYTE(v203) = 0;
                LOBYTE(v204) = 0;
                v160 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v31, (WTF *)&v203);
                if (v161)
                  v146 = v160;
                else
                  v146 = 0;
              }
              else
              {
                v146 = *(_QWORD *)(v31 + 24);
              }
              if (v146 <= v54)
                goto LABEL_85;
              v144 = BYTE2(v193);
            }
          }
          if ((*(_WORD *)(v142 + 12) & 0x800) != 0 && v144 != 3)
          {
            if ((*(_WORD *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
            {
              v147 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)v31 & 0xFFFFFFFE)
                                                                                      + 0x4C)
                                                                    + 0xB0))(v31, a2);
            }
            else
            {
              v147 = *(_QWORD *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x30);
              if (!v147)
                v147 = *(_QWORD *)(v31 + 16);
            }
            if (*((_DWORD *)v141 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v141) & 1) != 0)
              goto LABEL_85;
          }
          else
          {
LABEL_333:
            v147 = *(_QWORD *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x30);
            if (!v147)
              v147 = *(_QWORD *)(v31 + 16);
          }
          if ((v147 & 0xFFFE000000000002) != 0)
            goto LABEL_85;
          v31 = v147;
          if (*(unsigned __int8 *)(v147 + 5) <= 0x16u)
            goto LABEL_85;
          continue;
        }
      }
      v32 = (_BYTE *)(v40 + 6);
      v34 = v40;
      if ((*(_BYTE *)(v40 + 6) & 8) != 0)
        goto LABEL_197;
    }
    v77 = HIDWORD(v38);
    if ((int)v38 > 63)
    {
      v78 = *(_QWORD *)(v34 + 8) - 8;
      v79 = 0x3F00000000 - (v38 << 32);
    }
    else
    {
      v78 = v34 + 16;
      v79 = v38 << 32;
    }
    v19 = *(_QWORD *)(v78 + (v79 >> 29));
    if ((v19 & 0xFFFE000000000002) != 0)
    {
LABEL_145:
      v187 = (WTF::StringImpl *)v19;
      v191 = v34;
      goto LABEL_146;
    }
    v89 = *(unsigned __int8 *)(v19 + 5);
    if (v89 != 6)
    {
      if (v89 != 5)
        goto LABEL_145;
LABEL_170:
      JSC::JSObject::fillGetterPropertySlot();
      goto LABEL_147;
    }
    v94 = *(_DWORD *)(v36 + 16) & 3;
    v95 = *(_QWORD *)(v19 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C))
    {
      v97 = *(_QWORD *)(v19 + 24);
      v96 = *(_QWORD *)(v19 + 32);
      v187 = *(WTF::StringImpl **)(v19 + 8);
      v188 = v95;
      LODWORD(v189) = HIDWORD(v38);
      v191 = v34;
LABEL_180:
      BYTE1(v193) = 3;
      if (v94 != 2)
        LOBYTE(v193) = 1;
      HIBYTE(v193) = 1;
      v197 = v97;
      v198 = v96;
      goto LABEL_147;
    }
    v187 = *(WTF::StringImpl **)(v19 + 8);
    v188 = v95;
    LODWORD(v189) = HIDWORD(v38);
    v191 = v34;
    goto LABEL_217;
  }
  v40 = v31;
LABEL_197:
  if (a3)
  {
    v102 = *(_DWORD *)(a3 + 16);
    if ((v102 & 0x20) == 0)
    {
      v103 = *(_BYTE **)(a3 + 8);
      v104 = *(unsigned int *)(a3 + 4);
      if ((v102 & 4) != 0)
      {
        if ((_DWORD)v104)
        {
          v105 = *v103 - 48;
          if (v105 <= 9 && (v104 < 2 || *v103 != 48))
          {
            v149 = v103 + 1;
            v150 = v104 - 1;
            while (v150)
            {
              if (v105 <= 0x19999999)
              {
                v151 = *v149 - 48;
                if (v151 <= 9)
                {
                  v44 = __CFADD__(v151, 10 * v105);
                  v105 = v151 + 10 * (_DWORD)v105;
                  ++v149;
                  --v150;
                  if (!v44)
                    continue;
                }
              }
              goto LABEL_202;
            }
LABEL_362:
            if ((_DWORD)v105 != -1)
            {
              v152 = a2[7];
              while (1)
              {
                v153 = 16 * (*(_DWORD *)v31 & 0xFFFFFFFE);
                v154 = (*(uint64_t (**)(uint64_t, JSC::VM **, uint64_t, WTF::StringImpl **))(16 * *(unsigned int *)(v153 + 0x4C) + 0x70))(v31, a2, v105, &v187);
                v155 = v154;
                if (*((_DWORD *)v152 + 20))
                {
                  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v152);
                  if (((hasExceptionsAfterHandlingTraps | v155) & 1) != 0)
                  {
                    if ((hasExceptionsAfterHandlingTraps & 1) == 0)
                      goto LABEL_147;
LABEL_85:
                    v184[0] = 0;
                    v186 = 0;
                    v45 = v201;
                    if (!v201)
                      goto LABEL_148;
                    v185 = -1;
                    v46 = v200;
                    a4 = v183;
                    if (v200 != -1)
                    {
LABEL_87:
                      ((void (*)(unint64_t *, char *, char *))off_1E32A0F70[v46])(&v203, v184, v199);
                      v185 = v46;
                    }
LABEL_88:
                    v45 = 1;
                    v186 = 1;
                    goto LABEL_89;
                  }
                }
                else if ((v154 & 1) != 0)
                {
                  goto LABEL_147;
                }
                v156 = BYTE2(v193);
                if (BYTE2(v193) == 3)
                {
                  if (v194)
                    goto LABEL_85;
                  v157 = *(unsigned __int8 *)(v31 + 5);
                  if (v157 == 61)
                  {
LABEL_380:
                    v159 = *(_QWORD *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x30);
                    if (!v159)
                      v159 = *(_QWORD *)(v31 + 16);
                    goto LABEL_382;
                  }
                }
                else
                {
                  v157 = *(unsigned __int8 *)(v31 + 5);
                  if (v157 == 61)
                  {
                    if (BYTE2(v193) == 1)
                      goto LABEL_85;
                    goto LABEL_378;
                  }
                }
                if ((v157 - 39) <= 0xA)
                {
                  if ((*(_BYTE *)(v31 + 40) & 7u) > 2)
                  {
                    LOBYTE(v203) = 0;
                    LOBYTE(v204) = 0;
                    v176 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v31, (WTF *)&v203);
                    if (v177)
                      v158 = v176;
                    else
                      v158 = 0;
                  }
                  else
                  {
                    v158 = *(_QWORD *)(v31 + 24);
                  }
                  if (v158 <= v105)
                    goto LABEL_85;
                  v156 = BYTE2(v193);
                }
LABEL_378:
                if ((*(_WORD *)(v153 + 12) & 0x800) == 0 || v156 == 3)
                  goto LABEL_380;
                if ((*(_WORD *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
                {
                  v159 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16
                                                                        * *(unsigned int *)(16
                                                                                          * (*(_DWORD *)v31 & 0xFFFFFFFE)
                                                                                          + 0x4C)
                                                                        + 0xB0))(v31, a2);
                }
                else
                {
                  v159 = *(_QWORD *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x30);
                  if (!v159)
                    v159 = *(_QWORD *)(v31 + 16);
                }
                if (*((_DWORD *)v152 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v152) & 1) != 0)
                  goto LABEL_85;
LABEL_382:
                if ((v159 & 0xFFFE000000000002) == 0)
                {
                  v31 = v159;
                  if (*(unsigned __int8 *)(v159 + 5) > 0x16u)
                    continue;
                }
                goto LABEL_85;
              }
            }
          }
        }
      }
      else if ((_DWORD)v104)
      {
        v105 = *(unsigned __int16 *)v103 - 48;
        if (v105 <= 9 && (v104 < 2 || *(_WORD *)v103 != 48))
        {
          v114 = (unsigned __int16 *)(v103 + 2);
          v115 = v104 - 1;
          while (v115)
          {
            if (v105 <= 0x19999999)
            {
              v116 = *v114 - 48;
              if (v116 <= 9)
              {
                v44 = __CFADD__(v116, 10 * v105);
                v105 = v116 + 10 * (_DWORD)v105;
                ++v114;
                --v115;
                if (!v44)
                  continue;
              }
            }
            goto LABEL_202;
          }
          goto LABEL_362;
        }
      }
    }
  }
LABEL_202:
  v106 = a2[7];
  while (1)
  {
    v107 = 16 * (*(_DWORD *)v40 & 0xFFFFFFFE);
    if ((*(_BYTE *)(v40 + 6) & 8) != 0)
    {
      v121 = (*(uint64_t (**)(uint64_t, JSC::VM **, unint64_t, WTF::StringImpl **))(16 * *(unsigned int *)(16 * (*(_DWORD *)v40 & 0xFFFFFFFE) + 0x4C)
                                                                                                  + 0x68))(v40, a2, a3, &v187);
      if (*((_DWORD *)v106 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v106) & 1) != 0)
        goto LABEL_85;
      if ((v121 & 1) != 0)
        goto LABEL_147;
      if (BYTE2(v193) == 3)
      {
        if (v194)
          goto LABEL_85;
        v122 = *(unsigned __int8 *)(v40 + 5);
        if (v122 == 61)
          goto LABEL_209;
      }
      else
      {
        v122 = *(unsigned __int8 *)(v40 + 5);
        if (v122 == 61)
        {
          if (BYTE2(v193) == 1)
            goto LABEL_85;
          goto LABEL_209;
        }
      }
      if (!a3)
        goto LABEL_209;
      if ((v122 - 50) < 0xFFFFFFF5)
        goto LABEL_209;
      v162 = *(_DWORD *)(a3 + 16);
      if ((v162 & 0x20) != 0)
        goto LABEL_209;
      v163 = *(unsigned int *)(a3 + 4);
      if (!(_DWORD)v163)
        goto LABEL_209;
      v164 = *(unsigned __int8 **)(a3 + 8);
      if ((v162 & 4) != 0)
      {
        v165 = *v164;
        if ((_DWORD)v163 == 1)
        {
LABEL_410:
          if ((v165 - 48) < 0xA)
            goto LABEL_85;
          goto LABEL_209;
        }
        if (v165 == 45)
        {
          v166 = v164[1];
          goto LABEL_429;
        }
      }
      else
      {
        v165 = *(unsigned __int16 *)v164;
        if ((_DWORD)v163 == 1)
          goto LABEL_410;
        if (v165 == 45)
        {
          v166 = *((unsigned __int16 *)v164 + 1);
LABEL_429:
          if ((v166 - 48) < 0xA)
          {
            if ((_DWORD)v163 == 2)
              goto LABEL_85;
LABEL_433:
            v182 = v182 & 0xFFFFFF0000000000 | v163 | ((unint64_t)((v162 >> 2) & 1) << 32);
            JSC::jsToNumber();
            v171 = (const WTF::StringImpl *)WTF::numberToString();
            if ((WTF::equal((WTF *)a3, v171, v172) & 1) != 0)
              goto LABEL_85;
            goto LABEL_209;
          }
          if ((_DWORD)v163 != 9)
            goto LABEL_209;
          v181 = v166 == 73;
LABEL_463:
          if (!v181)
            goto LABEL_209;
          goto LABEL_433;
        }
      }
      if ((v165 - 48) < 0xA || (_DWORD)v163 == 8 && v165 == 73)
        goto LABEL_433;
      if ((_DWORD)v163 != 3)
        goto LABEL_209;
      v181 = v165 == 78;
      goto LABEL_463;
    }
    if ((_DWORD)v23)
    {
      if ((v23 & ~*(_DWORD *)(16 * (*(_DWORD *)v40 & 0xFFFFFFFE) + 0x20)) == 0)
      {
        v108 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v40 & 0xFFFFFFFE)), v106);
        if (v108)
        {
          v203 = a3;
          v109 = JSC::PropertyTable::get(v108, (uint64_t *)&v203);
          v39 = v109;
          if ((_DWORD)v109 != -1)
            break;
        }
      }
    }
    if ((*(_BYTE *)(v40 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      goto LABEL_147;
LABEL_209:
    if ((*(_WORD *)(v107 + 12) & 0x800) == 0)
    {
      v110 = *(_DWORD *)v40;
LABEL_211:
      v111 = *(_QWORD *)(16 * (v110 & 0xFFFFFFFE) + 0x30);
      if (!v111)
        v111 = *(_QWORD *)(v40 + 16);
      goto LABEL_213;
    }
    v110 = *(_DWORD *)v40;
    if (BYTE2(v193) == 3)
      goto LABEL_211;
    v148 = 16 * (v110 & 0xFFFFFFFE);
    if ((*(_WORD *)(v148 + 12) & 0x800) != 0)
    {
      v111 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16 * *(unsigned int *)(v148 + 76) + 0xB0))(v40, a2);
    }
    else
    {
      v111 = *(_QWORD *)(v148 + 48);
      if (!v111)
        v111 = *(_QWORD *)(v40 + 16);
    }
    if (*((_DWORD *)v106 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v106) & 1) != 0)
      goto LABEL_85;
LABEL_213:
    if ((v111 & 0xFFFE000000000002) == 0)
    {
      v40 = v111;
      if (*(unsigned __int8 *)(v111 + 5) > 0x16u)
        continue;
    }
    goto LABEL_85;
  }
  v77 = HIDWORD(v109);
  if ((int)v109 > 63)
  {
    v112 = *(_QWORD *)(v40 + 8) - 8;
    v113 = 0x3F00000000 - (v109 << 32);
  }
  else
  {
    v112 = v40 + 16;
    v113 = v109 << 32;
  }
  v19 = *(_QWORD *)(v112 + (v113 >> 29));
  if ((v19 & 0xFFFE000000000002) == 0)
  {
    v117 = *(unsigned __int8 *)(v19 + 5);
    if (v117 != 6)
    {
      if (v117 != 5)
        goto LABEL_222;
      goto LABEL_170;
    }
    v94 = *(_DWORD *)(v107 + 16) & 3;
    v118 = *(_QWORD *)(v19 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C))
    {
      v97 = *(_QWORD *)(v19 + 24);
      v96 = *(_QWORD *)(v19 + 32);
      v187 = *(WTF::StringImpl **)(v19 + 8);
      v188 = v118;
      LODWORD(v189) = HIDWORD(v109);
      v191 = v40;
      goto LABEL_180;
    }
    v187 = *(WTF::StringImpl **)(v19 + 8);
    v188 = v118;
    LODWORD(v189) = HIDWORD(v109);
    v191 = v40;
LABEL_217:
    BYTE1(v193) = 3;
    if (v94 != 2)
      LOBYTE(v193) = 1;
    goto LABEL_147;
  }
LABEL_222:
  v187 = (WTF::StringImpl *)v19;
  v191 = v40;
LABEL_146:
  v189 = __PAIR64__(v39, v77);
  LOWORD(v193) = 257;
LABEL_147:
  v45 = 0;
  v184[0] = 0;
  v186 = 0;
LABEL_148:
  a4 = v183;
LABEL_89:
  if (v196)
  {
    v55 = *((_DWORD *)v195 + 1);
    if (!v55)
    {
      __break(0xC471u);
      JUMPOUT(0x194C1329CLL);
    }
    *((_DWORD *)v195 + 1) = v55 - 1;
  }
  if (v201 && v200 != -1)
  {
    ((void (*)(unint64_t *, char *))off_1E329B780[v200])(&v203, v199);
    v45 = v186;
  }
  if (!v45)
  {
LABEL_96:
    v9 = a2[7];
    goto LABEL_97;
  }
  v98 = WebCore::JSConverter<WebCore::IDLNullable<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::RadioNodeList>,WebCore::IDLInterface<WebCore::Element>>>>::convert<std::variant<WTF::RefPtr<WebCore::RadioNodeList,WTF::RawPtrTraits<WebCore::RadioNodeList>,WTF::DefaultRefDerefTraits<WebCore::RadioNodeList>>,WTF::RefPtr<WebCore::Element,WTF::RawPtrTraits<WebCore::Element>,WTF::DefaultRefDerefTraits<WebCore::Element>>>>((uint64_t)a2, *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), (uint64_t)v184, (WebCore::Element *)v19);
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
  {
    v65 = 0;
  }
  else
  {
    *(_QWORD *)a4 = v98;
    *(_DWORD *)(a4 + 16) = 6;
    *(_QWORD *)(a4 + 32) = a1;
    v65 = 1;
    *(_BYTE *)(a4 + 49) = 1;
  }
  if (v186 && v185 != -1)
    ((void (*)(unint64_t *, char *))off_1E329B780[v185])(&v203, v184);
  return v65;
}

unint64_t WebCore::jsHTMLFormElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLFormElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFormElement>,(WebCore::DOMConstructorID)533>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLFormElement_acceptCharset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::accept_charsetAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::accept_charsetAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::accept_charsetAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFormElement_acceptCharset(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFormElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFormElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::accept_charsetAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::accept_charsetAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::accept_charsetAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::accept_charsetAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFormElement_action(uint64_t a1, uint64_t a2)
{
  return WebCore::jsHTMLFormElement_actionGetter(a1, *(WebCore::HTMLFormElement **)(a2 + 24));
}

BOOL WebCore::setJSHTMLFormElement_action(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFormElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFormElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::actionAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::actionAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::actionAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::actionAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFormElement_autocomplete(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = WebCore::HTMLFormElement::autocomplete(*(WebCore::HTMLFormElement **)(a2 + 24));
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSHTMLFormElement_autocomplete(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFormElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFormElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::autocompleteAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::autocompleteAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::autocompleteAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::autocompleteAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFormElement_enctype(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 136);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

BOOL WebCore::setJSHTMLFormElement_enctype(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFormElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFormElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::enctypeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::enctypeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::enctypeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::enctypeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFormElement_encoding(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 136);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

BOOL WebCore::setJSHTMLFormElement_encoding(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFormElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFormElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::enctypeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::enctypeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::enctypeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::enctypeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFormElement_method(uint64_t a1, uint64_t a2)
{
  return WebCore::jsHTMLFormElement_methodGetter(a1, *(WebCore::HTMLFormElement **)(a2 + 24));
}

BOOL WebCore::setJSHTMLFormElement_method(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFormElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFormElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::methodAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::methodAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::methodAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::methodAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFormElement_name(uint64_t a1, uint64_t a2)
{
  return WebCore::jsHTMLFormElement_nameGetter(a1, *(WebCore::Element **)(a2 + 24));
}

BOOL WebCore::setJSHTMLFormElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFormElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFormElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFormElement_noValidate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::novalidateAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::novalidateAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::novalidateAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLFormElement_noValidate(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFormElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFormElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::novalidateAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLFormElement_target(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::targetAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFormElement_target(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFormElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFormElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::targetAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::targetAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFormElement_rel(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::relAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::relAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::relAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFormElement_rel(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFormElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFormElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::relAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::relAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::relAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::relAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLFormElement_relList(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WTF *)WebCore::HTMLFormElement::relList(*(WebCore::HTMLFormElement **)(a2 + 24));
  return WebCore::wrap<WebCore::DOMTokenList>(a1, v3, v4);
}

BOOL WebCore::setJSHTMLFormElement_relList(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLFormElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLFormElement::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

unint64_t WebCore::jsHTMLFormElement_elements(WebCore *a1, WebCore::JSHTMLFormElement **a2)
{
  return WebCore::jsHTMLFormElement_elementsGetter(a1, (JSC::JSGlobalObject *)*(unsigned int *)a2, a2[3]);
}

unint64_t WebCore::jsHTMLFormElement_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  WebCore::Node *v7;
  uint64_t v8;
  void *v9;
  int v10;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 188);
  if ((_DWORD)v3)
  {
    v4 = 0;
    v5 = *(_QWORD *)(v2 + 176);
    v6 = 8 * v3;
    do
    {
      v7 = *(WebCore::Node **)(*(_QWORD *)v5 + 8);
      *((_DWORD *)v7 + 6) += 2;
      v8 = (*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v7 + 456))(v7);
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 120))(v8);
      if (*((_DWORD *)v7 + 6) == 2)
      {
        if ((*((_WORD *)v7 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v7, v9);
      }
      else
      {
        *((_DWORD *)v7 + 6) -= 2;
      }
      v4 += v10;
      v5 += 8;
      v6 -= 8;
    }
    while (v6);
    if ((v4 & 0x80000000) != 0)
      return COERCE__INT64((double)v4) + 0x2000000000000;
  }
  else
  {
    v4 = 0;
  }
  return v4 | 0xFFFE000000000000;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameElement>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSHTMLFrameElement>((WebCore::JSHTMLFrameElement *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

WTF::StringImpl *WebCore::JSHTMLFrameElementPrototype::finishCreation(WebCore::JSHTMLFrameElementPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<12u>(a2, (uint64_t)&WebCore::JSHTMLFrameElement::s_info, (uint64_t)&WebCore::JSHTMLFrameElementPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLFrameElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLFrameElement::createPrototype(WebCore::JSHTMLFrameElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLFrameElementPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSHTMLFrameElementPrototype::create(WebCore::JSHTMLFrameElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLFrameElementPrototype::finishCreation((WebCore::JSHTMLFrameElementPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameElement>,(WebCore::DOMConstructorID)534>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4272);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameElement>::createStructure((uint64_t *)a1, a2, v5);
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameElement>::create(a1, Structure, (JSC::VM *)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4272) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v7 = (JSC::Heap *)(a1 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)a2);
        return v8;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsHTMLFrameElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLFrameElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameElement>,(WebCore::DOMConstructorID)534>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLFrameElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLFrameElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFrameElement_scrolling(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::scrollingAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::scrollingAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::scrollingAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFrameElement_scrolling(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::scrollingAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::scrollingAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::scrollingAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::scrollingAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFrameElement_src(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  char v23;
  char v24;
  char **v25;
  char *v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::srcAttr, a3, a4, a5);
  v9 = &v22;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v22);
  if ((v23 & 2) == 0)
  {
    v9 = &v22;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v22))
    {
      v21 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v21 != -1)
      {
        v26 = &v24;
        v25 = &v26;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (v11)
    *(_DWORD *)v11 += 2;
  v12 = v22;
  v22 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v13 = *(_QWORD *)(a1 + 56);
  v14 = (uint64_t *)(v13 + 41968);
  if (!v11)
    return *v14;
  v15 = *((_DWORD *)v11 + 1);
  if (v15)
  {
    if (v15 != 1)
    {
LABEL_12:
      v16 = *(_QWORD *)(v13 + 64760);
      if (!v16 || v11 != *(WTF::StringImpl **)(v16 + 8))
        v16 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_15;
    }
    v18 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
    if ((*((_BYTE *)v11 + 16) & 4) != 0)
    {
      v19 = *v18;
    }
    else
    {
      v20 = *(unsigned __int16 *)v18;
      if (v20 > 0xFF)
        goto LABEL_12;
      v19 = v20;
    }
    v16 = *(_QWORD *)(v13 + 8 * v19 + 42216);
  }
  else
  {
    v16 = *v14;
  }
LABEL_15:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(v11, v10);
  else
    *(_DWORD *)v11 -= 2;
  return v16;
}

BOOL WebCore::setJSHTMLFrameElement_src(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::srcAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::srcAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFrameElement_frameBorder(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::frameborderAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::frameborderAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::frameborderAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFrameElement_frameBorder(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::frameborderAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::frameborderAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::frameborderAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::frameborderAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFrameElement_longDesc(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  char v23;
  char v24;
  char **v25;
  char *v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::longdescAttr, a3, a4, a5);
  v9 = &v22;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v22);
  if ((v23 & 2) == 0)
  {
    v9 = &v22;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v22))
    {
      v21 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v21 != -1)
      {
        v26 = &v24;
        v25 = &v26;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (v11)
    *(_DWORD *)v11 += 2;
  v12 = v22;
  v22 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v13 = *(_QWORD *)(a1 + 56);
  v14 = (uint64_t *)(v13 + 41968);
  if (!v11)
    return *v14;
  v15 = *((_DWORD *)v11 + 1);
  if (v15)
  {
    if (v15 != 1)
    {
LABEL_12:
      v16 = *(_QWORD *)(v13 + 64760);
      if (!v16 || v11 != *(WTF::StringImpl **)(v16 + 8))
        v16 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_15;
    }
    v18 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
    if ((*((_BYTE *)v11 + 16) & 4) != 0)
    {
      v19 = *v18;
    }
    else
    {
      v20 = *(unsigned __int16 *)v18;
      if (v20 > 0xFF)
        goto LABEL_12;
      v19 = v20;
    }
    v16 = *(_QWORD *)(v13 + 8 * v19 + 42216);
  }
  else
  {
    v16 = *v14;
  }
LABEL_15:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(v11, v10);
  else
    *(_DWORD *)v11 -= 2;
  return v16;
}

BOOL WebCore::setJSHTMLFrameElement_longDesc(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::longdescAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::longdescAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::longdescAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::longdescAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFrameElement_noResize(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::noresizeAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::noresizeAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::noresizeAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLFrameElement_noResize(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::noresizeAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLFrameElement_contentDocument(WebCore::DOMWrapperWorld **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  JSC::JSGlobalObject *v6;
  WebCore::Document *v7;
  uint64_t result;
  void *v9;
  unint64_t v10;
  WebCore::Node *v11;
  WebCore::Node *v12;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 112);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(v2 + 8);
  if (!v3)
    return 2;
  if (*(_BYTE *)(v3 + 144))
    return 2;
  v4 = *(_QWORD *)(v3 + 296);
  if (!v4)
    return 2;
  v6 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (!WebCore::canAccessDocument((uint64_t)a1, *(WTF::StringImpl **)(*(_QWORD *)(v4 + 40) + 8), 1))
    return 2;
  result = WebCore::cachedDocumentWrapper(a1, v6, (WebCore::JSDOMGlobalObject *)v4, v7);
  if (!result)
  {
    *(_DWORD *)(v4 + 24) += 2;
    v12 = (WebCore::Node *)v4;
    v10 = WebCore::toJSNewlyCreated((uint64_t)a1, v6, &v12);
    v11 = v12;
    v12 = 0;
    if (v11)
    {
      if (*((_DWORD *)v11 + 6) == 2)
      {
        if ((*((_WORD *)v11 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v11, v9);
      }
      else
      {
        *((_DWORD *)v11 + 6) -= 2;
      }
    }
    return v10;
  }
  return result;
}

uint64_t WebCore::jsHTMLFrameElement_contentWindow(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  WebCore::WindowProxy *v4;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 112);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(v2 + 8);
  if (!v3)
    return 2;
  v4 = *(WebCore::WindowProxy **)(v3 + 112);
  if (!v4)
    return 2;
  result = (uint64_t)WebCore::WindowProxy::jsWindowProxy(v4, *(WebCore::DOMWrapperWorld **)(a1 + 3320));
  if (!result)
    return 2;
  return result;
}

uint64_t WebCore::jsHTMLFrameElement_marginHeight(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::marginheightAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::marginheightAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::marginheightAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFrameElement_marginHeight(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::marginheightAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::marginheightAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::marginheightAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::marginheightAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLFrameElement_marginWidth(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::marginwidthAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::marginwidthAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::marginwidthAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFrameElement_marginWidth(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::marginwidthAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::marginwidthAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::marginwidthAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::marginwidthAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameSetElement>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSHTMLFrameSetElement>((WebCore::JSHTMLFrameSetElement *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

WTF::StringImpl *WebCore::JSHTMLFrameSetElementPrototype::finishCreation(WebCore::JSHTMLFrameSetElementPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<29u>(a2, (uint64_t)&WebCore::JSHTMLFrameSetElement::s_info, (uint64_t)&WebCore::JSHTMLFrameSetElementPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLFrameSetElement::put(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  JSC::VM *v20;
  int OwnProperty;
  uint64_t result;
  int v23;
  char v24[16];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (!v15)
    goto LABEL_23;
  v16 = v15;
  if (*(_BYTE *)(v15 + 274))
    goto LABEL_23;
  v17 = *(_BYTE **)(v15 + 496);
  if (!v17)
    v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
  if (!*(_QWORD *)v17)
    goto LABEL_23;
  v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
  if (!v18)
    goto LABEL_23;
  v19 = *(_QWORD *)(v18 + 680);
  if (*(_BYTE *)(v19 + 243))
  {
    if (!*(_BYTE *)(v19 + 242))
      goto LABEL_23;
LABEL_22:
    if (!v17[65])
      goto LABEL_23;
    return JSC::JSObject::put();
  }
  if ((*(_QWORD *)(v19 + 688) & 0x80000) != 0)
    goto LABEL_22;
LABEL_23:
  v20 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = 14;
  v25 = 0xFFFFFFFF00000000;
  v27 = 0;
  v28 = 0;
  v26 = v8;
  v29 = 0x20000;
  v30 = 0;
  LOBYTE(v31) = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  OwnProperty = WebCore::JSHTMLFrameSetElement::legacyPlatformObjectGetOwnProperty(a1, (JSC::VM **)a2, a3, (uint64_t)v24, 1);
  if (*((_DWORD *)v20 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v20 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v32)
  {
    v23 = *(_DWORD *)(v31 + 4);
    if (!v23)
    {
      __break(0xC471u);
      JUMPOUT(0x194C17D80);
    }
    *(_DWORD *)(v31 + 4) = v23 - 1;
  }
  return result;
}

uint64_t WebCore::JSHTMLFrameSetElement::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSHTMLFrameSetElement::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLFrameSetElement *v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSC::VM *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t result;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unsigned __int16 *v37;
  uint64_t v38;
  unsigned int v39;
  BOOL v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  unsigned int v49;
  WTF::StringImpl *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  char v57;
  JSC::VM *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *(WebCore::HTMLFrameSetElement **)(a1 + 24);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (v13)
  {
    v14 = v13;
    if (!*(_BYTE *)(v13 + 274))
    {
      v15 = *(_BYTE **)(v13 + 496);
      if (!v15)
        v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
      if (*(_QWORD *)v15)
      {
        v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
        if (v16)
        {
          v17 = *(_QWORD *)(v16 + 680);
          if (*(_BYTE *)(v17 + 243))
          {
            if (!*(_BYTE *)(v17 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v15[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (a3)
  {
    if ((*(_BYTE *)(a3 + 16) & 0x20) != 0)
      return JSC::JSObject::deleteProperty();
    *(_DWORD *)a3 += 2;
    v18 = (WTF::StringImpl *)a3;
  }
  else
  {
    v18 = 0;
  }
  v50 = v18;
  v20 = WebCore::HTMLFrameSetElement::namedItem(v11, (const WTF::AtomString *)&v50);
  v21 = v50;
  v50 = 0;
  if (!v21)
    goto LABEL_28;
  if (*(_DWORD *)v21 == 2)
  {
    WTF::StringImpl::destroy(v21, v19);
    if (v20)
      goto LABEL_29;
    return JSC::JSObject::deleteProperty();
  }
  *(_DWORD *)v21 -= 2;
LABEL_28:
  if (!v20)
    return JSC::JSObject::deleteProperty();
LABEL_29:
  v22 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v52 = 0xFFFFFFFF00000000;
  v54 = 0;
  v55 = 0;
  v53 = a1;
  v56 = 196608;
  v57 = 0;
  v60 = 0;
  v61 = 0;
  v58 = v22;
  ++*((_DWORD *)v22 + 1);
  v59 = 1;
  if ((a3 >> 4))
  {
    v23 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((a3 >> 4) & ~*(_DWORD *)(v23 + 0x20)) == 0)
    {
      v24 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v22);
      if (v24)
      {
        v62 = a3;
        v25 = JSC::PropertyTable::get(v24, (uint64_t *)&v62);
        if ((_DWORD)v25 != -1)
        {
          if ((int)v25 > 63)
          {
            v33 = *(_QWORD *)(a1 + 8) - 8;
            v34 = 0x3F00000000 - (v25 << 32);
          }
          else
          {
            v33 = a1 + 16;
            v34 = v25 << 32;
          }
          v35 = *(_QWORD *)(v33 + (v34 >> 29));
          if ((v35 & 0xFFFE000000000002) == 0)
          {
            v36 = *(unsigned __int8 *)(v35 + 5);
            if (v36 == 6)
            {
              v41 = *(_DWORD *)(v23 + 16) & 3;
              v42 = *(_QWORD *)(v35 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v35 & 0xFFFFFFFE) + 0x4C))
              {
                v44 = *(_QWORD *)(v35 + 24);
                v43 = *(_QWORD *)(v35 + 32);
                v50 = *(WTF::StringImpl **)(v35 + 8);
                v51 = v42;
                LODWORD(v52) = HIDWORD(v25);
                v54 = a1;
                BYTE1(v56) = 3;
                result = 1;
                if (v41 != 2)
                  LOBYTE(v56) = 1;
                HIBYTE(v56) = 1;
                v60 = v44;
                v61 = v43;
              }
              else
              {
                v50 = *(WTF::StringImpl **)(v35 + 8);
                v51 = v42;
                LODWORD(v52) = HIDWORD(v25);
                v54 = a1;
                result = 1;
                BYTE1(v56) = 3;
                if (v41 != 2)
                  LOBYTE(v56) = 1;
              }
              goto LABEL_45;
            }
            if (v36 == 5)
            {
              JSC::JSObject::fillGetterPropertySlot();
              result = 1;
              goto LABEL_45;
            }
          }
          v50 = (WTF::StringImpl *)v35;
          v54 = a1;
          v52 = __PAIR64__(v25, HIDWORD(v25));
          result = 1;
          LOWORD(v56) = 257;
          goto LABEL_45;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
  {
    result = JSC::JSObject::getOwnStaticPropertySlot();
    if (!a3 || (result & 1) != 0)
      goto LABEL_45;
  }
  else if (!a3)
  {
LABEL_44:
    result = 0;
    goto LABEL_45;
  }
  v26 = *(_DWORD *)(a3 + 16);
  if ((v26 & 0x20) != 0)
    goto LABEL_44;
  v27 = *(_BYTE **)(a3 + 8);
  v28 = *(unsigned int *)(a3 + 4);
  if ((v26 & 4) != 0)
  {
    if ((_DWORD)v28)
    {
      v45 = *v27 - 48;
      if (v45 > 9 || v28 >= 2 && *v27 == 48)
      {
LABEL_87:
        v46 = 0;
      }
      else
      {
        v47 = v27 + 1;
        v48 = v28 - 1;
        while (v48)
        {
          if (v45 > 0x19999999)
            goto LABEL_87;
          v49 = *v47 - 48;
          if (v49 > 9)
            goto LABEL_87;
          v46 = 0;
          v40 = __CFADD__(v49, 10 * v45);
          v45 = v49 + 10 * v45;
          ++v47;
          --v48;
          if (v40)
            goto LABEL_88;
        }
        v46 = 0x100000000;
        if (v45 == -1)
          v46 = 0;
      }
    }
    else
    {
      v46 = 0;
    }
LABEL_88:
    if ((v46 & 0x100000000) == 0)
      goto LABEL_44;
  }
  else
  {
    if ((_DWORD)v28)
    {
      v29 = *(unsigned __int16 *)v27 - 48;
      if (v29 > 9 || v28 >= 2 && *(_WORD *)v27 == 48)
      {
LABEL_41:
        v30 = 0;
      }
      else
      {
        v37 = (unsigned __int16 *)(v27 + 2);
        v38 = v28 - 1;
        while (v38)
        {
          if (v29 <= 0x19999999)
          {
            v39 = *v37 - 48;
            if (v39 <= 9)
            {
              v40 = __CFADD__(v39, 10 * v29);
              v29 = v39 + 10 * v29;
              ++v37;
              --v38;
              if (!v40)
                continue;
            }
          }
          goto LABEL_41;
        }
        v9 = v29 == -1;
        v30 = 0x100000000;
        if (v9)
          v30 = 0;
      }
    }
    else
    {
      v30 = 0;
    }
    if ((v30 & 0x100000000) == 0)
      goto LABEL_44;
  }
  result = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_45:
  if (v59)
  {
    v32 = *((_DWORD *)v58 + 1);
    if (!v32)
    {
      __break(0xC471u);
      JUMPOUT(0x194C18338);
    }
    *((_DWORD *)v58 + 1) = v32 - 1;
  }
  if ((_DWORD)result)
    return JSC::JSObject::deleteProperty();
  return result;
}

uint64_t WebCore::JSHTMLFrameSetElement::deletePropertyByIndex(WebCore::JSHTMLFrameSetElement *this, JSC::VM **a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLFrameSetElement *v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSC::VM *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BYTE *v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  int OwnPropertySlotByIndex;
  int v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unsigned __int16 *v41;
  uint64_t v42;
  unsigned int v43;
  BOOL v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t v52;
  unsigned int v53;
  WTF::StringImpl *v54;
  uint64_t v55;
  unint64_t v56;
  WebCore::JSHTMLFrameSetElement *v57;
  WebCore::JSHTMLFrameSetElement *v58;
  uint64_t v59;
  int v60;
  char v61;
  JSC::VM *v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = (WebCore::HTMLFrameSetElement *)*((_QWORD *)this + 3);
  if (v7)
    v12 = (WebCore::JSDOMGlobalObject *)a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (v13)
  {
    v14 = v13;
    if (!*(_BYTE *)(v13 + 274))
    {
      v15 = *(_BYTE **)(v13 + 496);
      if (!v15)
        v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
      if (*(_QWORD *)v15)
      {
        v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
        if (v16)
        {
          v17 = *(_QWORD *)(v16 + 680);
          if (*(_BYTE *)(v17 + 243))
          {
            if (!*(_BYTE *)(v17 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v15[65])
            return JSC::JSObject::deletePropertyByIndex(this, (JSC::JSCell *)a2, a3);
        }
      }
    }
  }
LABEL_22:
  JSC::Identifier::from();
  v18 = (WTF::StringImpl *)v66;
  if (v66)
    *(_DWORD *)v66 += 2;
  v54 = v18;
  v20 = WebCore::HTMLFrameSetElement::namedItem(v11, (const WTF::AtomString *)&v54);
  v21 = v54;
  v54 = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
    {
      WTF::StringImpl::destroy(v21, v19);
      if (!v20)
        goto LABEL_48;
      goto LABEL_28;
    }
    *(_DWORD *)v21 -= 2;
  }
  if (!v20)
    goto LABEL_48;
LABEL_28:
  v22 = a2[7];
  v56 = 0xFFFFFFFF00000000;
  v58 = 0;
  v59 = 0;
  v57 = this;
  v60 = 196608;
  v61 = 0;
  v64 = 0;
  v65 = 0;
  v62 = v22;
  ++*((_DWORD *)v22 + 1);
  v63 = 1;
  v23 = v66;
  if ((v66 >> 4))
  {
    v24 = 16 * (*(_DWORD *)this & 0xFFFFFFFE);
    if (((v66 >> 4) & ~*(_DWORD *)(v24 + 0x20)) == 0)
    {
      v25 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), v22);
      if (v25)
      {
        v67 = v23;
        v26 = JSC::PropertyTable::get(v25, &v67);
        if ((_DWORD)v26 != -1)
        {
          if ((int)v26 > 63)
          {
            v37 = (char *)(*((_QWORD *)this + 1) - 8);
            v38 = 0x3F00000000 - (v26 << 32);
          }
          else
          {
            v37 = (char *)this + 16;
            v38 = v26 << 32;
          }
          v39 = *(_QWORD *)&v37[v38 >> 29];
          if ((v39 & 0xFFFE000000000002) == 0)
          {
            v40 = *(unsigned __int8 *)(v39 + 5);
            if (v40 == 6)
            {
              v45 = *(_DWORD *)(v24 + 16) & 3;
              v46 = *(_QWORD *)(v39 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v39 & 0xFFFFFFFE) + 0x4C))
              {
                v48 = *(_QWORD *)(v39 + 24);
                v47 = *(_QWORD *)(v39 + 32);
                v54 = *(WTF::StringImpl **)(v39 + 8);
                v55 = v46;
                LODWORD(v56) = HIDWORD(v26);
                v58 = this;
                BYTE1(v60) = 3;
                OwnPropertySlotByIndex = 1;
                if (v45 != 2)
                  LOBYTE(v60) = 1;
                HIBYTE(v60) = 1;
                v64 = v48;
                v65 = v47;
              }
              else
              {
                v54 = *(WTF::StringImpl **)(v39 + 8);
                v55 = v46;
                LODWORD(v56) = HIDWORD(v26);
                v58 = this;
                OwnPropertySlotByIndex = 1;
                BYTE1(v60) = 3;
                if (v45 != 2)
                  LOBYTE(v60) = 1;
              }
              goto LABEL_44;
            }
            if (v40 == 5)
            {
              JSC::JSObject::fillGetterPropertySlot();
LABEL_81:
              OwnPropertySlotByIndex = 1;
              goto LABEL_44;
            }
          }
          v54 = (WTF::StringImpl *)v39;
          v58 = this;
          v56 = __PAIR64__(v26, HIDWORD(v26));
          OwnPropertySlotByIndex = 1;
          LOWORD(v60) = 257;
          goto LABEL_44;
        }
      }
    }
  }
  if ((*((_BYTE *)this + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    goto LABEL_81;
  if (!v23 || (v27 = *(_DWORD *)(v23 + 16), (v27 & 0x20) != 0))
  {
LABEL_43:
    OwnPropertySlotByIndex = 0;
    goto LABEL_44;
  }
  v28 = *(_BYTE **)(v23 + 8);
  v29 = *(unsigned int *)(v23 + 4);
  if ((v27 & 4) != 0)
  {
    if ((_DWORD)v29)
    {
      v49 = *v28 - 48;
      if (v49 > 9 || v29 >= 2 && *v28 == 48)
      {
LABEL_90:
        v50 = 0;
      }
      else
      {
        v51 = v28 + 1;
        v52 = v29 - 1;
        while (v52)
        {
          if (v49 > 0x19999999)
            goto LABEL_90;
          v53 = *v51 - 48;
          if (v53 > 9)
            goto LABEL_90;
          v50 = 0;
          v44 = __CFADD__(v53, 10 * v49);
          v49 = v53 + 10 * v49;
          ++v51;
          --v52;
          if (v44)
            goto LABEL_91;
        }
        v50 = 0x100000000;
        if (v49 == -1)
          v50 = 0;
      }
    }
    else
    {
      v50 = 0;
    }
LABEL_91:
    if ((v50 & 0x100000000) == 0)
      goto LABEL_43;
  }
  else
  {
    if ((_DWORD)v29)
    {
      v30 = *(unsigned __int16 *)v28 - 48;
      if (v30 > 9 || v29 >= 2 && *(_WORD *)v28 == 48)
      {
LABEL_40:
        v31 = 0;
      }
      else
      {
        v41 = (unsigned __int16 *)(v28 + 2);
        v42 = v29 - 1;
        while (v42)
        {
          if (v30 <= 0x19999999)
          {
            v43 = *v41 - 48;
            if (v43 <= 9)
            {
              v44 = __CFADD__(v43, 10 * v30);
              v30 = v43 + 10 * v30;
              ++v41;
              --v42;
              if (!v44)
                continue;
            }
          }
          goto LABEL_40;
        }
        v9 = v30 == -1;
        v31 = 0x100000000;
        if (v9)
          v31 = 0;
      }
    }
    else
    {
      v31 = 0;
    }
    if ((v31 & 0x100000000) == 0)
      goto LABEL_43;
  }
  OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_44:
  if (v63)
  {
    v33 = *((_DWORD *)v62 + 1);
    if (!v33)
    {
      __break(0xC471u);
      JUMPOUT(0x194C18848);
    }
    *((_DWORD *)v62 + 1) = v33 - 1;
  }
  if (!OwnPropertySlotByIndex)
  {
    v34 = 0;
    goto LABEL_50;
  }
LABEL_48:
  v34 = JSC::JSObject::deletePropertyByIndex(this, (JSC::JSCell *)a2, a3);
LABEL_50:
  v35 = (WTF::StringImpl *)v66;
  v66 = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v19);
    else
      *(_DWORD *)v35 -= 2;
  }
  return v34;
}

uint64_t WebCore::JSHTMLFrameSetElement::getOwnPropertySlot(uint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4)
{
  return WebCore::JSHTMLFrameSetElement::legacyPlatformObjectGetOwnProperty(a1, a2, a3, a4, 0);
}

uint64_t WebCore::JSHTMLFrameSetElement::getOwnPropertySlotByIndex(WebCore::JSHTMLFrameSetElement *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  JSC::VM *v8;
  WebCore::HTMLFrameSetElement *v9;
  WTF::StringImpl *v10;
  WebCore::WindowProxy *v11;
  WTF::StringImpl *v12;
  JSC::VM *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  _BYTE *v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned __int16 *v23;
  unsigned int v24;
  BOOL v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  WebCore::WindowProxy *v29;
  char v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  unsigned int v37;
  uint64_t v38;
  _BYTE *v39;
  WebCore::JSHTMLFrameSetElement *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  _BYTE *v48;
  uint64_t v49;
  unsigned int v50;
  unsigned __int16 *v51;
  uint64_t v52;
  unsigned int v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t OwnPropertySlotByIndex;
  uint64_t *v62;
  unsigned int *v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  unsigned int *v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  _BYTE *v78;
  uint64_t v79;
  unsigned int v80;
  unsigned __int16 *v81;
  uint64_t v82;
  unsigned int v83;
  WebCore::JSWindowProxy *v84;
  unsigned __int8 *v85;
  uint64_t v86;
  unsigned int v87;
  unsigned __int8 *v88;
  uint64_t v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  int v94;
  uint64_t v95;
  char v96;
  int v97;
  uint64_t v98;
  unsigned int v99;
  uint64_t v100;
  unsigned __int8 *v101;
  int v102;
  int v103;
  BOOL v104;
  const WTF::StringImpl *v105;
  const unsigned __int8 *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  JSC::VM *v115;
  uint64_t v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unint64_t v121;
  uint64_t v122;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v124;
  unint64_t v125;
  JSC::VM *v126;
  uint64_t v127;
  char v128;
  int v129;
  int v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  JSC::VM *v135;
  JSC::VM *v136;
  uint64_t v137;
  JSC::VM *v138;
  WTF::StringImpl *v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  WebCore::JSHTMLFrameSetElement *v143;
  WebCore::JSHTMLFrameSetElement *v144;
  uint64_t v145;
  int v146;
  char v147;
  JSC::VM *v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  WTF::StringImpl *v152;
  char v153;
  uint64_t v154;

  v154 = *MEMORY[0x1E0C80C00];
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  JSC::Identifier::from();
  if (v139)
  {
    if ((*((_BYTE *)v139 + 16) & 0x20) != 0)
      goto LABEL_112;
    v9 = (WebCore::HTMLFrameSetElement *)*((_QWORD *)this + 3);
    *(_DWORD *)v139 += 2;
  }
  else
  {
    v9 = (WebCore::HTMLFrameSetElement *)*((_QWORD *)this + 3);
  }
  v152 = v139;
  v11 = (WebCore::WindowProxy *)WebCore::HTMLFrameSetElement::namedItem(v9, (const WTF::AtomString *)&v152);
  v12 = v152;
  v152 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
    {
      WTF::StringImpl::destroy(v12, v10);
      if (!v11)
        goto LABEL_112;
      goto LABEL_8;
    }
    *(_DWORD *)v12 -= 2;
  }
  if (!v11)
    goto LABEL_112;
LABEL_8:
  ++*(_DWORD *)v11;
  v13 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v142 = 0xFFFFFFFF00000000;
  v144 = 0;
  v145 = 0;
  v143 = this;
  v146 = 196608;
  v147 = 0;
  v150 = 0;
  v151 = 0;
  v148 = v13;
  ++*((_DWORD *)v13 + 1);
  v149 = 1;
  v14 = (unint64_t)v139 >> 4;
  if (((unint64_t)v139 >> 4))
  {
    v15 = 16 * (*(_DWORD *)this & 0xFFFFFFFE);
    if ((v14 & ~*(_DWORD *)(v15 + 0x20)) == 0)
    {
      v16 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), v13);
      if (v16)
      {
        v152 = v139;
        v17 = JSC::PropertyTable::get(v16, (uint64_t *)&v152);
        if ((_DWORD)v17 != -1)
        {
          v26 = (uint64_t *)((char *)this + 8 * (int)v17 + 16);
          if ((int)v17 >= 64)
            v26 = (uint64_t *)(*((_QWORD *)this + 1) + ((uint64_t)(0x3F00000000 - (v17 << 32)) >> 29) - 8);
          v27 = *v26;
          if ((*v26 & 0xFFFE000000000002) != 0)
            goto LABEL_32;
          v28 = *(unsigned __int8 *)(v27 + 5);
          if (v28 == 6)
          {
            v31 = *(_DWORD *)(v15 + 16) & 3;
            v32 = *(_QWORD *)(v27 + 16);
            if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C))
            {
              v34 = *(_QWORD *)(v27 + 24);
              v33 = *(_QWORD *)(v27 + 32);
              v140 = *(_QWORD *)(v27 + 8);
              v141 = v32;
              LODWORD(v142) = HIDWORD(v17);
              v144 = this;
              BYTE1(v146) = 3;
              v29 = 0;
              v30 = 1;
              if (v31 != 2)
                LOBYTE(v146) = 1;
              HIBYTE(v146) = 1;
              v150 = v34;
              v151 = v33;
            }
            else
            {
              v140 = *(_QWORD *)(v27 + 8);
              v141 = v32;
              LODWORD(v142) = HIDWORD(v17);
              v144 = this;
              v30 = 1;
              BYTE1(v146) = 3;
              v29 = 0;
              if (v31 != 2)
                LOBYTE(v146) = 1;
            }
            goto LABEL_105;
          }
          if (v28 != 5)
          {
LABEL_32:
            v29 = 0;
            v140 = v27;
            v144 = this;
            v142 = __PAIR64__(v17, HIDWORD(v17));
            v30 = 1;
            LOWORD(v146) = 257;
            goto LABEL_105;
          }
          JSC::JSObject::fillGetterPropertySlot();
          goto LABEL_42;
        }
      }
    }
  }
  if ((*((_BYTE *)this + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    goto LABEL_42;
  if (v139)
  {
    v18 = *((_DWORD *)v139 + 4);
    if ((v18 & 0x20) == 0)
    {
      v19 = (_BYTE *)*((_QWORD *)v139 + 1);
      v20 = *((unsigned int *)v139 + 1);
      if ((v18 & 4) != 0)
      {
        if ((_DWORD)v20)
        {
          v21 = *v19 - 48;
          if (v21 <= 9 && (v20 < 2 || *v19 != 48))
          {
            v35 = v20 - 1;
            v36 = v19 + 1;
            while (v35)
            {
              if (v21 <= 0x19999999)
              {
                v37 = *v36 - 48;
                if (v37 <= 9)
                {
                  v25 = __CFADD__(v37, 10 * v21);
                  v21 = v37 + 10 * v21;
                  --v35;
                  ++v36;
                  if (!v25)
                    continue;
                }
              }
              goto LABEL_60;
            }
LABEL_59:
            if (v21 == -1 || (JSC::JSObject::getOwnPropertySlotByIndex() & 1) == 0)
              goto LABEL_60;
LABEL_42:
            v29 = 0;
            v30 = 1;
            goto LABEL_105;
          }
        }
      }
      else if ((_DWORD)v20)
      {
        v21 = *(unsigned __int16 *)v19 - 48;
        if (v21 <= 9 && (v20 < 2 || *(_WORD *)v19 != 48))
        {
          v22 = v20 - 1;
          v23 = (unsigned __int16 *)(v19 + 2);
          while (v22)
          {
            if (v21 <= 0x19999999)
            {
              v24 = *v23 - 48;
              if (v24 <= 9)
              {
                v25 = __CFADD__(v24, 10 * v21);
                v21 = v24 + 10 * v21;
                --v22;
                ++v23;
                if (!v25)
                  continue;
              }
            }
            goto LABEL_60;
          }
          goto LABEL_59;
        }
      }
    }
  }
LABEL_60:
  v138 = v8;
  v38 = *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x30);
  if (!v38)
    v38 = *((_QWORD *)this + 2);
  if ((v38 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v38 + 5) < 0x17u)
    goto LABEL_103;
  v137 = a4;
  v39 = (_BYTE *)(v38 + 6);
  if ((*(_BYTE *)(v38 + 6) & 8) == 0)
  {
    v135 = (JSC::VM *)*((_QWORD *)a2 + 7);
    v40 = (WebCore::JSHTMLFrameSetElement *)v38;
    while (1)
    {
      v41 = *(_DWORD *)v40 & 0xFFFFFFFE;
      v42 = 16 * v41;
      if ((_DWORD)v14)
      {
        if ((v14 & ~*(_DWORD *)(16 * v41 + 0x20)) == 0)
        {
          v43 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v42, v135);
          if (v43)
          {
            v152 = v139;
            v44 = JSC::PropertyTable::get(v43, (uint64_t *)&v152);
            v45 = v44;
            if ((_DWORD)v44 != -1)
              break;
          }
        }
      }
      if ((*v39 & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
        goto LABEL_147;
      v46 = *(_QWORD *)(v42 + 48);
      if (!v46)
        v46 = *((_QWORD *)v40 + 2);
      if ((v46 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v46 + 5) < 0x17u)
      {
        a4 = v137;
        if (!v139)
          goto LABEL_103;
        v47 = *((_DWORD *)v139 + 4);
        if ((v47 & 0x20) != 0)
          goto LABEL_103;
        v48 = (_BYTE *)*((_QWORD *)v139 + 1);
        v49 = *((unsigned int *)v139 + 1);
        if ((v47 & 4) != 0)
        {
          if (!(_DWORD)v49)
            goto LABEL_103;
          v50 = *v48 - 48;
          if (v50 > 9 || v49 >= 2 && *v48 == 48)
            goto LABEL_103;
          v85 = v48 + 1;
          v86 = v49 - 1;
          a4 = v137;
          while (v86)
          {
            if (v50 <= 0x19999999)
            {
              v87 = *v85 - 48;
              if (v87 <= 9)
              {
                v25 = __CFADD__(v87, 10 * v50);
                v50 = v87 + 10 * v50;
                ++v85;
                --v86;
                if (!v25)
                  continue;
              }
            }
            goto LABEL_103;
          }
          a4 = v137;
          if (v50 == -1)
            goto LABEL_103;
        }
        else
        {
          if (!(_DWORD)v49)
            goto LABEL_103;
          v50 = *(unsigned __int16 *)v48 - 48;
          if (v50 > 9 || v49 >= 2 && *(_WORD *)v48 == 48)
            goto LABEL_103;
          v51 = (unsigned __int16 *)(v48 + 2);
          v52 = v49 - 1;
          while (v52)
          {
            if (v50 <= 0x19999999)
            {
              v53 = *v51 - 48;
              if (v53 <= 9)
              {
                v25 = __CFADD__(v53, 10 * v50);
                v50 = v53 + 10 * v50;
                ++v51;
                --v52;
                if (!v25)
                  continue;
              }
            }
            goto LABEL_103;
          }
          if (v50 == -1)
          {
LABEL_103:
            v30 = 0;
            v29 = v11;
            v11 = 0;
            goto LABEL_104;
          }
        }
        v125 = v50;
        v126 = (JSC::VM *)*((_QWORD *)a2 + 7);
        while (2)
        {
          v127 = 16 * (*(_DWORD *)v38 & 0xFFFFFFFE);
          v128 = (*(uint64_t (**)(uint64_t, JSC::JSObject *, unint64_t, uint64_t *))(16 * *(unsigned int *)(v127 + 0x4C)
                                                                                                  + 0x70))(v38, a2, v125, &v140);
          if (*((_DWORD *)v126 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v126) & 1) != 0)
            goto LABEL_103;
          if ((v128 & 1) != 0)
            goto LABEL_147;
          v129 = BYTE2(v146);
          if (BYTE2(v146) == 3)
          {
            a4 = v137;
            if (v147)
              goto LABEL_103;
            v130 = *(unsigned __int8 *)(v38 + 5);
            if (v130 == 61)
            {
LABEL_332:
              v132 = *(_QWORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0x30);
              a4 = v137;
              if (!v132)
                v132 = *(_QWORD *)(v38 + 16);
              goto LABEL_334;
            }
LABEL_325:
            if ((v130 - 39) <= 0xA)
            {
              if ((*(_BYTE *)(v38 + 40) & 7u) > 2)
              {
                LOBYTE(v152) = 0;
                v153 = 0;
                v133 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v38, (WTF *)&v152);
                if ((_BYTE)v10)
                  v131 = v133;
                else
                  v131 = 0;
              }
              else
              {
                v131 = *(_QWORD *)(v38 + 24);
              }
              a4 = v137;
              if (v131 <= v125)
                goto LABEL_103;
              v129 = BYTE2(v146);
            }
          }
          else
          {
            v130 = *(unsigned __int8 *)(v38 + 5);
            if (v130 != 61)
              goto LABEL_325;
            a4 = v137;
            if (BYTE2(v146) == 1)
              goto LABEL_103;
          }
          if ((*(_WORD *)(v127 + 12) & 0x800) == 0 || v129 == 3)
            goto LABEL_332;
          if ((*(_WORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
          {
            v132 = (*(uint64_t (**)(uint64_t, JSC::JSObject *))(16
                                                                       * *(unsigned int *)(16
                                                                                         * (*(_DWORD *)v38 & 0xFFFFFFFE)
                                                                                         + 0x4C)
                                                                       + 0xB0))(v38, a2);
          }
          else
          {
            v132 = *(_QWORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0x30);
            if (!v132)
              v132 = *(_QWORD *)(v38 + 16);
          }
          if (*((_DWORD *)v126 + 20))
          {
            a4 = v137;
            if ((JSC::VM::hasExceptionsAfterHandlingTraps(v126) & 1) != 0)
              goto LABEL_103;
          }
          else
          {
            a4 = v137;
          }
LABEL_334:
          if ((v132 & 0xFFFE000000000002) != 0)
            goto LABEL_103;
          v38 = v132;
          if (*(unsigned __int8 *)(v132 + 5) <= 0x16u)
            goto LABEL_103;
          continue;
        }
      }
      v39 = (_BYTE *)(v46 + 6);
      v40 = (WebCore::JSHTMLFrameSetElement *)v46;
      if ((*(_BYTE *)(v46 + 6) & 8) != 0)
        goto LABEL_153;
    }
    v54 = HIDWORD(v44);
    if ((int)v44 > 63)
    {
      v55 = *((_QWORD *)v40 + 1) - 8;
      v56 = 0x3F00000000 - (v44 << 32);
    }
    else
    {
      v55 = (uint64_t)v40 + 16;
      v56 = v44 << 32;
    }
    v57 = *(_QWORD *)(v55 + (v56 >> 29));
    if ((v57 & 0xFFFE000000000002) != 0)
      goto LABEL_98;
    v58 = *(unsigned __int8 *)(v57 + 5);
    if (v58 != 6)
    {
      if (v58 == 5)
        goto LABEL_146;
LABEL_98:
      v29 = 0;
      v140 = v57;
      v144 = v40;
LABEL_99:
      v142 = __PAIR64__(v45, v54);
      v30 = 1;
      LOWORD(v146) = 257;
      goto LABEL_100;
    }
    v72 = *(_DWORD *)(v42 + 16) & 3;
    v73 = *(_QWORD *)(v57 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v57 & 0xFFFFFFFE) + 0x4C))
    {
      v75 = *(_QWORD *)(v57 + 24);
      v74 = *(_QWORD *)(v57 + 32);
      v140 = *(_QWORD *)(v57 + 8);
      v141 = v73;
      LODWORD(v142) = HIDWORD(v44);
      v144 = v40;
      BYTE1(v146) = 3;
      a4 = v137;
      v29 = 0;
      v30 = 1;
      if (v72 != 2)
        LOBYTE(v146) = 1;
      HIBYTE(v146) = 1;
      v150 = v75;
      v151 = v74;
      goto LABEL_104;
    }
    v140 = *(_QWORD *)(v57 + 8);
    v141 = v73;
    LODWORD(v142) = HIDWORD(v44);
    v144 = v40;
LABEL_168:
    v30 = 1;
    BYTE1(v146) = 3;
    v29 = 0;
    if (v72 != 2)
      LOBYTE(v146) = 1;
    goto LABEL_100;
  }
  v46 = v38;
LABEL_153:
  v76 = v46;
  if (!v139)
    goto LABEL_199;
  v77 = *((_DWORD *)v139 + 4);
  if ((v77 & 0x20) != 0)
    goto LABEL_199;
  v78 = (_BYTE *)*((_QWORD *)v139 + 1);
  v79 = *((unsigned int *)v139 + 1);
  if ((v77 & 4) != 0)
  {
    if (!(_DWORD)v79)
      goto LABEL_199;
    v80 = *v78 - 48;
    if (v80 > 9 || v79 >= 2 && *v78 == 48)
      goto LABEL_199;
    v88 = v78 + 1;
    v89 = v79 - 1;
    while (v89)
    {
      if (v80 <= 0x19999999)
      {
        v90 = *v88 - 48;
        if (v90 <= 9)
        {
          v25 = __CFADD__(v90, 10 * v80);
          v80 = v90 + 10 * v80;
          ++v88;
          --v89;
          if (!v25)
            continue;
        }
      }
      goto LABEL_199;
    }
  }
  else
  {
    if (!(_DWORD)v79)
      goto LABEL_199;
    v80 = *(unsigned __int16 *)v78 - 48;
    if (v80 > 9 || v79 >= 2 && *(_WORD *)v78 == 48)
      goto LABEL_199;
    v81 = (unsigned __int16 *)(v78 + 2);
    v82 = v79 - 1;
    while (v82)
    {
      if (v80 <= 0x19999999)
      {
        v83 = *v81 - 48;
        if (v83 <= 9)
        {
          v25 = __CFADD__(v83, 10 * v80);
          v80 = v83 + 10 * v80;
          ++v81;
          --v82;
          if (!v25)
            continue;
        }
      }
      goto LABEL_199;
    }
  }
  if (v80 != -1)
  {
    v114 = v80;
    v115 = (JSC::VM *)*((_QWORD *)a2 + 7);
    while (1)
    {
      v116 = 16 * (*(_DWORD *)v38 & 0xFFFFFFFE);
      v117 = (*(uint64_t (**)(uint64_t, JSC::JSObject *, unint64_t, uint64_t *))(16
                                                                                              * *(unsigned int *)(v116 + 0x4C)
                                                                                              + 0x70))(v38, a2, v114, &v140);
      v118 = v117;
      if (*((_DWORD *)v115 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v115);
        if (((hasExceptionsAfterHandlingTraps | v118) & 1) != 0)
        {
          a4 = v137;
          if (!hasExceptionsAfterHandlingTraps)
          {
LABEL_313:
            v29 = 0;
            v30 = 1;
            goto LABEL_104;
          }
          goto LABEL_103;
        }
      }
      else if ((v117 & 1) != 0)
      {
        goto LABEL_147;
      }
      v119 = BYTE2(v146);
      if (BYTE2(v146) == 3)
      {
        a4 = v137;
        if (v147)
          goto LABEL_103;
        v120 = *(unsigned __int8 *)(v38 + 5);
        if (v120 == 61)
          goto LABEL_294;
      }
      else
      {
        v120 = *(unsigned __int8 *)(v38 + 5);
        if (v120 == 61)
        {
          a4 = v137;
          if (BYTE2(v146) == 1)
            goto LABEL_103;
          goto LABEL_292;
        }
      }
      if ((v120 - 39) <= 0xA)
      {
        if ((*(_BYTE *)(v38 + 40) & 7u) > 2)
        {
          LOBYTE(v152) = 0;
          v153 = 0;
          v124 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v38, (WTF *)&v152);
          if ((_BYTE)v10)
            v121 = v124;
          else
            v121 = 0;
        }
        else
        {
          v121 = *(_QWORD *)(v38 + 24);
        }
        a4 = v137;
        if (v121 <= v114)
          goto LABEL_103;
        v119 = BYTE2(v146);
      }
LABEL_292:
      if ((*(_WORD *)(v116 + 12) & 0x800) != 0 && v119 != 3)
      {
        if ((*(_WORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
        {
          v122 = (*(uint64_t (**)(uint64_t, JSC::JSObject *))(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)v38 & 0xFFFFFFFE)
                                                                                       + 0x4C)
                                                                     + 0xB0))(v38, a2);
        }
        else
        {
          v122 = *(_QWORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0x30);
          if (!v122)
            v122 = *(_QWORD *)(v38 + 16);
        }
        if (*((_DWORD *)v115 + 20))
        {
          a4 = v137;
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v115) & 1) != 0)
            goto LABEL_103;
        }
        else
        {
          a4 = v137;
        }
        goto LABEL_296;
      }
LABEL_294:
      v122 = *(_QWORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0x30);
      a4 = v137;
      if (!v122)
        v122 = *(_QWORD *)(v38 + 16);
LABEL_296:
      if ((v122 & 0xFFFE000000000002) == 0)
      {
        v38 = v122;
        if (*(unsigned __int8 *)(v122 + 5) > 0x16u)
          continue;
      }
      goto LABEL_103;
    }
  }
LABEL_199:
  v136 = (JSC::VM *)*((_QWORD *)a2 + 7);
  a4 = v137;
  while (1)
  {
    v91 = 16 * (*(_DWORD *)v76 & 0xFFFFFFFE);
    if ((*(_BYTE *)(v76 + 6) & 8) != 0)
    {
      v96 = (*(uint64_t (**)(uint64_t, JSC::JSObject *, WTF::StringImpl *, uint64_t *))(16
                                                                                              * *(unsigned int *)(16 * (*(_DWORD *)v76 & 0xFFFFFFFE) + 0x4C)
                                                                                              + 0x68))(v76, a2, v139, &v140);
      if (*((_DWORD *)v136 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v136) & 1) != 0)
        goto LABEL_103;
      if ((v96 & 1) != 0)
        goto LABEL_147;
      if (BYTE2(v146) == 3)
      {
        a4 = v137;
        if (v147)
          goto LABEL_103;
        v97 = *(unsigned __int8 *)(v76 + 5);
        if (v97 == 61)
        {
LABEL_221:
          a4 = v137;
          goto LABEL_206;
        }
      }
      else
      {
        v97 = *(unsigned __int8 *)(v76 + 5);
        if (v97 == 61)
        {
          a4 = v137;
          if (BYTE2(v146) == 1)
            goto LABEL_103;
          goto LABEL_206;
        }
      }
      if (!v139)
        goto LABEL_221;
      if ((v97 - 50) < 0xFFFFFFF5)
        goto LABEL_221;
      v99 = *((_DWORD *)v139 + 4);
      if ((v99 & 0x20) != 0)
        goto LABEL_221;
      v100 = *((unsigned int *)v139 + 1);
      if (!(_DWORD)v100)
        goto LABEL_221;
      v101 = (unsigned __int8 *)*((_QWORD *)v139 + 1);
      if ((v99 & 4) != 0)
      {
        v102 = *v101;
        if ((_DWORD)v100 == 1)
        {
LABEL_242:
          a4 = v137;
          if ((v102 - 48) < 0xA)
            goto LABEL_103;
          goto LABEL_206;
        }
        if (v102 == 45)
        {
          v103 = v101[1];
          goto LABEL_246;
        }
      }
      else
      {
        v102 = *(unsigned __int16 *)v101;
        if ((_DWORD)v100 == 1)
          goto LABEL_242;
        if (v102 == 45)
        {
          v103 = *((unsigned __int16 *)v101 + 1);
LABEL_246:
          if ((v103 - 48) < 0xA)
          {
            a4 = v137;
            if ((_DWORD)v100 == 2)
              goto LABEL_103;
LABEL_258:
            v134 = v134 & 0xFFFFFF0000000000 | v100 | ((unint64_t)((v99 >> 2) & 1) << 32);
            JSC::jsToNumber();
            v105 = (const WTF::StringImpl *)WTF::numberToString();
            if ((WTF::equal(v139, v105, v106) & 1) != 0)
              goto LABEL_103;
            goto LABEL_206;
          }
          if ((_DWORD)v100 != 9)
            goto LABEL_221;
          v104 = v103 == 73;
LABEL_256:
          a4 = v137;
          if (!v104)
            goto LABEL_206;
          goto LABEL_258;
        }
      }
      a4 = v137;
      if ((v102 - 48) < 0xA || (_DWORD)v100 == 8 && v102 == 73)
        goto LABEL_258;
      if ((_DWORD)v100 != 3)
        goto LABEL_221;
      v104 = v102 == 78;
      goto LABEL_256;
    }
    if ((_DWORD)v14)
    {
      if ((v14 & ~*(_DWORD *)(16 * (*(_DWORD *)v76 & 0xFFFFFFFE) + 0x20)) == 0)
      {
        v92 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v76 & 0xFFFFFFFE)), v136);
        if (v92)
        {
          v152 = v139;
          v93 = JSC::PropertyTable::get(v92, (uint64_t *)&v152);
          v45 = v93;
          if ((_DWORD)v93 != -1)
            break;
        }
      }
    }
    if ((*(_BYTE *)(v76 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      goto LABEL_313;
LABEL_206:
    if ((*(_WORD *)(v91 + 12) & 0x800) != 0)
    {
      v94 = *(_DWORD *)v76;
      if (BYTE2(v146) != 3)
      {
        v98 = 16 * (v94 & 0xFFFFFFFE);
        if ((*(_WORD *)(v98 + 12) & 0x800) != 0)
        {
          v95 = (*(uint64_t (**)(uint64_t, JSC::JSObject *))(16 * *(unsigned int *)(v98 + 76) + 0xB0))(v76, a2);
        }
        else
        {
          v95 = *(_QWORD *)(v98 + 48);
          if (!v95)
            v95 = *(_QWORD *)(v76 + 16);
        }
        if (*((_DWORD *)v136 + 20))
        {
          a4 = v137;
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v136) & 1) != 0)
            goto LABEL_103;
        }
        else
        {
          a4 = v137;
        }
        goto LABEL_210;
      }
    }
    else
    {
      v94 = *(_DWORD *)v76;
    }
    v95 = *(_QWORD *)(16 * (v94 & 0xFFFFFFFE) + 0x30);
    if (!v95)
      v95 = *(_QWORD *)(v76 + 16);
LABEL_210:
    if ((v95 & 0xFFFE000000000002) == 0)
    {
      v76 = v95;
      if (*(unsigned __int8 *)(v95 + 5) > 0x16u)
        continue;
    }
    goto LABEL_103;
  }
  v54 = HIDWORD(v93);
  if ((int)v93 > 63)
  {
    v107 = *(_QWORD *)(v76 + 8) - 8;
    v108 = 0x3F00000000 - (v93 << 32);
  }
  else
  {
    v107 = v76 + 16;
    v108 = v93 << 32;
  }
  v109 = *(_QWORD *)(v107 + (v108 >> 29));
  if ((v109 & 0xFFFE000000000002) != 0)
  {
LABEL_268:
    v29 = 0;
    v140 = v109;
    v144 = (WebCore::JSHTMLFrameSetElement *)v76;
    goto LABEL_99;
  }
  v110 = *(unsigned __int8 *)(v109 + 5);
  if (v110 == 6)
  {
    v72 = *(_DWORD *)(v91 + 16) & 3;
    v111 = *(_QWORD *)(v109 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v109 & 0xFFFFFFFE) + 0x4C))
    {
      v113 = *(_QWORD *)(v109 + 24);
      v112 = *(_QWORD *)(v109 + 32);
      v140 = *(_QWORD *)(v109 + 8);
      v141 = v111;
      LODWORD(v142) = HIDWORD(v93);
      v144 = (WebCore::JSHTMLFrameSetElement *)v76;
      BYTE1(v146) = 3;
      v29 = 0;
      v30 = 1;
      if (v72 != 2)
        LOBYTE(v146) = 1;
      HIBYTE(v146) = 1;
      v150 = v113;
      v151 = v112;
      goto LABEL_100;
    }
    v140 = *(_QWORD *)(v109 + 8);
    v141 = v111;
    LODWORD(v142) = HIDWORD(v93);
    v144 = (WebCore::JSHTMLFrameSetElement *)v76;
    goto LABEL_168;
  }
  if (v110 != 5)
    goto LABEL_268;
LABEL_146:
  JSC::JSObject::fillGetterPropertySlot();
LABEL_147:
  v29 = 0;
  v30 = 1;
LABEL_100:
  a4 = v137;
LABEL_104:
  v8 = v138;
LABEL_105:
  if (v149)
  {
    v59 = *((_DWORD *)v148 + 1);
    if (!v59)
    {
      __break(0xC471u);
      JUMPOUT(0x194C19138);
    }
    *((_DWORD *)v148 + 1) = v59 - 1;
  }
  if (!v11)
  {
LABEL_111:
    if ((v30 & 1) == 0)
      goto LABEL_127;
    goto LABEL_112;
  }
  if (*(_DWORD *)v11 != 1)
  {
    --*(_DWORD *)v11;
    goto LABEL_111;
  }
  v62 = (uint64_t *)*((_QWORD *)v11 + 2);
  *((_QWORD *)v11 + 2) = 0;
  if (v62)
  {
    if (*v62)
      WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v62, v10);
    WTF::fastFree((WTF *)v62, v10);
  }
  v63 = (unsigned int *)*((_QWORD *)v11 + 1);
  *((_QWORD *)v11 + 1) = 0;
  if (v63)
  {
    do
    {
      v64 = __ldaxr(v63);
      v65 = v64 - 1;
    }
    while (__stlxr(v65, v63));
    if (!v65)
    {
      atomic_store(1u, v63);
      WTF::fastFree((WTF *)v63, v10);
    }
  }
  WTF::fastFree(v11, v10);
  if ((v30 & 1) != 0)
  {
LABEL_112:
    OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
    goto LABEL_113;
  }
LABEL_127:
  v66 = a4;
  if (v29)
  {
    v84 = WebCore::WindowProxy::jsWindowProxy(v29, *((WebCore::DOMWrapperWorld **)a2 + 415));
    if (v84)
      v67 = (uint64_t)v84;
    else
      v67 = 2;
  }
  else
  {
    v67 = 2;
  }
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
  {
    OwnPropertySlotByIndex = 0;
    if (!v29)
      goto LABEL_113;
  }
  else
  {
    *(_QWORD *)v66 = v67;
    *(_DWORD *)(v66 + 16) = 2;
    *(_QWORD *)(v66 + 32) = this;
    OwnPropertySlotByIndex = 1;
    *(_BYTE *)(v66 + 49) = 1;
    if (!v29)
      goto LABEL_113;
  }
  if (*(_DWORD *)v29 == 1)
  {
    v68 = (uint64_t *)*((_QWORD *)v29 + 2);
    *((_QWORD *)v29 + 2) = 0;
    if (v68)
    {
      if (*v68)
        WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v68, v10);
      WTF::fastFree((WTF *)v68, v10);
    }
    v69 = (unsigned int *)*((_QWORD *)v29 + 1);
    *((_QWORD *)v29 + 1) = 0;
    if (v69)
    {
      do
      {
        v70 = __ldaxr(v69);
        v71 = v70 - 1;
      }
      while (__stlxr(v71, v69));
      if (!v71)
      {
        atomic_store(1u, v69);
        WTF::fastFree((WTF *)v69, v10);
      }
    }
    WTF::fastFree(v29, v10);
  }
  else
  {
    --*(_DWORD *)v29;
  }
LABEL_113:
  if (v139)
  {
    if (*(_DWORD *)v139 == 2)
      WTF::StringImpl::destroy(v139, v10);
    else
      *(_DWORD *)v139 -= 2;
  }
  return OwnPropertySlotByIndex;
}

uint64_t WebCore::JSHTMLFrameSetElement::defineOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5)
{
  JSC::VM *v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  _BYTE *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  int OwnPropertySlotByIndex;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unsigned __int16 *v23;
  uint64_t v24;
  unsigned int v25;
  BOOL v26;
  int OwnStaticPropertySlot;
  BOOL v28;
  int hasExceptionsAfterHandlingTraps;
  WebCore::HTMLFrameSetElement *v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  unsigned int v36;
  uint64_t v37;
  unsigned __int8 *v38;
  uint64_t v39;
  unsigned int v40;
  WTF::StringImpl *v41;

  v8 = *(JSC::VM **)(a2 + 56);
  if (a3 && (*(_BYTE *)(a3 + 16) & 0x20) != 0)
    return JSC::JSObject::defineOwnProperty();
  ++*((_DWORD *)v8 + 1);
  if (!(a3 >> 4)
    || ((a3 >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x20)) != 0
    || (v9 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v8)) == 0
    || (v41 = (WTF::StringImpl *)a3, v10 = JSC::PropertyTable::get(v9, (uint64_t *)&v41), (_DWORD)v10 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
    {
      OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
      OwnPropertySlotByIndex = OwnStaticPropertySlot;
      if (!a3 || (OwnStaticPropertySlot & 1) != 0)
        goto LABEL_19;
    }
    else if (!a3)
    {
      goto LABEL_18;
    }
    v11 = *(_DWORD *)(a3 + 16);
    if ((v11 & 0x20) == 0)
    {
      v12 = *(_BYTE **)(a3 + 8);
      v13 = *(unsigned int *)(a3 + 4);
      if ((v11 & 4) != 0)
      {
        if ((_DWORD)v13)
        {
          v36 = *v12 - 48;
          if (v36 > 9 || v13 >= 2 && *v12 == 48)
          {
LABEL_63:
            v37 = 0;
          }
          else
          {
            v38 = v12 + 1;
            v39 = v13 - 1;
            while (v39)
            {
              if (v36 > 0x19999999)
                goto LABEL_63;
              v40 = *v38 - 48;
              if (v40 > 9)
                goto LABEL_63;
              v37 = 0;
              v26 = __CFADD__(v40, 10 * v36);
              v36 = v40 + 10 * v36;
              ++v38;
              --v39;
              if (v26)
                goto LABEL_64;
            }
            v37 = 0x100000000;
            if (v36 == -1)
              v37 = 0;
          }
        }
        else
        {
          v37 = 0;
        }
LABEL_64:
        if ((v37 & 0x100000000) == 0)
          goto LABEL_18;
      }
      else
      {
        if ((_DWORD)v13)
        {
          v14 = *(unsigned __int16 *)v12 - 48;
          if (v14 > 9 || v13 >= 2 && *(_WORD *)v12 == 48)
          {
LABEL_15:
            v15 = 0;
          }
          else
          {
            v23 = (unsigned __int16 *)(v12 + 2);
            v24 = v13 - 1;
            while (v24)
            {
              if (v14 <= 0x19999999)
              {
                v25 = *v23 - 48;
                if (v25 <= 9)
                {
                  v26 = __CFADD__(v25, 10 * v14);
                  v14 = v25 + 10 * v14;
                  ++v23;
                  --v24;
                  if (!v26)
                    continue;
                }
              }
              goto LABEL_15;
            }
            v28 = v14 == -1;
            v15 = 0x100000000;
            if (v28)
              v15 = 0;
          }
        }
        else
        {
          v15 = 0;
        }
        if ((v15 & 0x100000000) == 0)
          goto LABEL_18;
      }
      OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
      goto LABEL_19;
    }
LABEL_18:
    OwnPropertySlotByIndex = 0;
    goto LABEL_19;
  }
  if ((int)v10 > 63)
  {
    v19 = *(_QWORD *)(a1 + 8) - 8;
    v20 = 0x3F00000000 - (v10 << 32);
  }
  else
  {
    v19 = a1 + 16;
    v20 = v10 << 32;
  }
  v21 = *(_QWORD *)(v19 + (v20 >> 29));
  if ((v21 & 0xFFFE000000000002) != 0)
    goto LABEL_28;
  v22 = *(unsigned __int8 *)(v21 + 5);
  if (v22 == 6)
  {
    OwnPropertySlotByIndex = 1;
    goto LABEL_19;
  }
  if (v22 != 5)
  {
LABEL_28:
    OwnPropertySlotByIndex = 1;
    goto LABEL_19;
  }
  JSC::JSObject::fillGetterPropertySlot();
  OwnPropertySlotByIndex = 1;
LABEL_19:
  v17 = *((_DWORD *)v8 + 1);
  if (!v17)
  {
    __break(0xC471u);
    JUMPOUT(0x194C19EBCLL);
  }
  *((_DWORD *)v8 + 1) = v17 - 1;
  if (*((_DWORD *)v8 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v8);
    if (((hasExceptionsAfterHandlingTraps | OwnPropertySlotByIndex) & 1) != 0)
    {
      v18 = hasExceptionsAfterHandlingTraps ^ 1;
      goto LABEL_55;
    }
  }
  else if ((OwnPropertySlotByIndex & 1) != 0)
  {
    v18 = 1;
    goto LABEL_55;
  }
  v30 = *(WebCore::HTMLFrameSetElement **)(a1 + 24);
  if (a3)
  {
    *(_DWORD *)a3 += 2;
    v31 = a3;
  }
  else
  {
    v31 = 0;
  }
  v41 = (WTF::StringImpl *)v31;
  v33 = WebCore::HTMLFrameSetElement::namedItem(v30, (const WTF::AtomString *)&v41);
  v34 = v41;
  v41 = 0;
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v32);
    else
      *(_DWORD *)v34 -= 2;
  }
  v18 = v33 == 0;
  if (v33)
  {
    if (a5)
    {
      JSC::throwTypeError();
      v18 = 0;
    }
  }
LABEL_55:
  if (v18)
    return JSC::JSObject::defineOwnProperty();
  return 0;
}

uint64_t WebCore::JSHTMLFrameSetElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLFrameSetElement::createPrototype(WebCore::JSHTMLFrameSetElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLFrameSetElementPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSHTMLFrameSetElementPrototype::create(WebCore::JSHTMLFrameSetElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLFrameSetElementPrototype::finishCreation((WebCore::JSHTMLFrameSetElementPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameSetElement>,(WebCore::DOMConstructorID)535>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4280);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameSetElement>::createStructure((uint64_t *)a1, a2, v5);
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameSetElement>::create(a1, Structure, (JSC::VM *)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4280) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v7 = (JSC::Heap *)(a1 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)a2);
        return v8;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSHTMLFrameSetElement::legacyPlatformObjectGetOwnProperty(uint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4, char a5)
{
  JSC::VM *v9;
  unint64_t v10;
  WebCore::ContainerNode *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  WebCore::WindowProxy *v20;
  WTF::StringImpl *v21;
  JSC::VM *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  int v27;
  _BYTE *v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unsigned __int16 *v32;
  unsigned int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  int v57;
  WebCore::WindowProxy *v58;
  int v59;
  unsigned int v60;
  int v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 *v75;
  unsigned int v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  int v85;
  _WORD *v86;
  uint64_t v87;
  unsigned int v88;
  unsigned __int16 *v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  int v96;
  uint64_t v97;
  int v98;
  _BYTE *v99;
  uint64_t v100;
  unsigned int v101;
  unsigned __int16 *v102;
  uint64_t v103;
  unsigned int v104;
  unsigned __int8 *v105;
  uint64_t v106;
  unsigned int v107;
  int v108;
  int v109;
  _BYTE *v110;
  uint64_t v111;
  unsigned int v112;
  uint64_t v113;
  unsigned __int16 *v115;
  uint64_t v116;
  unsigned int v117;
  BOOL v118;
  uint64_t *v119;
  unsigned int *v120;
  unsigned int v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t *v124;
  unsigned int *v125;
  unsigned int v126;
  unsigned int v127;
  WebCore::JSWindowProxy *v128;
  unsigned int v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  char v133;
  int v134;
  int v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unsigned __int8 *v139;
  uint64_t v140;
  unsigned int v141;
  JSC::VM *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  int v146;
  uint64_t v147;
  char v148;
  int v149;
  unsigned int v150;
  uint64_t v151;
  unsigned __int8 *v152;
  int v153;
  int v154;
  uint64_t v155;
  const WTF::StringImpl *v156;
  const unsigned __int8 *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  int v165;
  int v166;
  int v167;
  int v168;
  unint64_t v169;
  uint64_t v170;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v172;
  unsigned __int8 *v173;
  uint64_t v174;
  unsigned int v175;
  unint64_t v176;
  JSC::VM *v177;
  JSC::VM *v178;
  JSC::VM *v179;
  WTF::StringImpl *v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  int v186;
  char v187;
  JSC::VM *v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  _DWORD *v192;
  char v193;
  uint64_t v194;

  v194 = *MEMORY[0x1E0C80C00];
  v9 = a2[7];
  v10 = a3 >> 4;
  if ((a5 & 1) != 0)
  {
LABEL_47:
    if (!(_DWORD)v10)
      goto LABEL_208;
LABEL_48:
    v35 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if ((v10 & ~*(_DWORD *)(v35 + 0x20)) != 0)
      goto LABEL_208;
    v36 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x58);
    if (!v36)
    {
      v47 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x40);
      if (!v47 || *(_BYTE *)(v47 + 5) != 1 && *(_DWORD *)(v47 + 80) < 2u)
        goto LABEL_208;
      v36 = JSC::Structure::materializePropertyTable((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v9);
      if (!v36)
        goto LABEL_208;
    }
    if (!*(_DWORD *)(v36 + 24))
      goto LABEL_208;
    v37 = *(_QWORD *)(v36 + 16);
    v38 = v37 & 0xFFFFFFFFFFFFFFFELL;
    v39 = *(unsigned int *)(v36 + 8);
    v40 = *(_DWORD *)(a3 + 16);
    if ((v37 & 1) != 0)
    {
      if ((v40 & 0x20) != 0)
        v40 = *(_DWORD *)(a3 + 32);
      v41 = *(_DWORD *)(v36 + 12);
      v42 = (v40 >> 8) & *(_QWORD *)&v41;
      v43 = *(unsigned __int8 *)(v38 + v42);
      if (!*(_BYTE *)(v38 + v42))
        goto LABEL_208;
      v44 = v38 + v39;
      v45 = 1;
      while (1)
      {
        v46 = *(_QWORD *)(v44 + 8 * (v43 - 1));
        if (a3 == (v46 & 0xFFFFFFFFFFFFLL))
          break;
        v42 = ((_DWORD)v42 + v45) & v41;
        v43 = *(unsigned __int8 *)(v38 + v42);
        ++v45;
        if (!*(_BYTE *)(v38 + v42))
          goto LABEL_208;
      }
      v48 = (v46 >> 16) & 0xFF00000000 | HIBYTE(v46);
    }
    else
    {
      if ((v40 & 0x20) != 0)
        v40 = *(_DWORD *)(a3 + 32);
      v59 = *(_DWORD *)(v36 + 12);
      v60 = v59 & (v40 >> 8);
      v61 = *(_DWORD *)(v38 + 4 * v60);
      if (!v61)
        goto LABEL_208;
      v62 = v38 + 4 * v39;
      v63 = 1;
      while (1)
      {
        v64 = (v61 - 1);
        if (*(_QWORD *)(v62 + 16 * v64) == a3)
          break;
        v60 = (v60 + v63) & v59;
        v61 = *(_DWORD *)(v38 + 4 * v60);
        ++v63;
        if (!v61)
          goto LABEL_208;
      }
      v48 = *(unsigned int *)(v62 + 16 * v64 + 8) | ((unint64_t)*(unsigned __int8 *)(v62 + 16 * v64 + 12) << 32);
    }
    if ((_DWORD)v48 != -1)
    {
      if ((int)v48 > 63)
      {
        v49 = *(_QWORD *)(a1 + 8) - 8;
        v50 = 0x3F00000000 - (v48 << 32);
      }
      else
      {
        v49 = a1 + 16;
        v50 = v48 << 32;
      }
      v51 = *(_QWORD *)(v49 + (v50 >> 29));
      if ((v51 & 0xFFFE000000000002) != 0)
        goto LABEL_71;
      v52 = *(unsigned __int8 *)(v51 + 5);
      if (v52 == 6)
      {
        v65 = *(_DWORD *)(v35 + 16) & 3;
        v67 = *(_QWORD *)(v51 + 8);
        v66 = *(_QWORD *)(v51 + 16);
        if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v51 & 0xFFFFFFFE) + 0x4C))
        {
          v69 = *(_QWORD *)(v51 + 24);
          v68 = *(_QWORD *)(v51 + 32);
          *(_QWORD *)a4 = v67;
          *(_QWORD *)(a4 + 8) = v66;
          *(_DWORD *)(a4 + 16) = HIDWORD(v48);
          *(_QWORD *)(a4 + 32) = a1;
          *(_BYTE *)(a4 + 49) = 3;
          v53 = 1;
          if (v65 != 2)
            *(_BYTE *)(a4 + 48) = 1;
          *(_BYTE *)(a4 + 51) = 1;
          *(_QWORD *)(a4 + 72) = v69;
          *(_QWORD *)(a4 + 80) = v68;
        }
        else
        {
          *(_QWORD *)a4 = v67;
          *(_QWORD *)(a4 + 8) = v66;
          *(_DWORD *)(a4 + 16) = HIDWORD(v48);
          *(_QWORD *)(a4 + 32) = a1;
          v53 = 1;
          *(_BYTE *)(a4 + 49) = 3;
          if (v65 != 2)
            *(_BYTE *)(a4 + 48) = 1;
        }
        return v53;
      }
      if (v52 != 5)
      {
LABEL_71:
        *(_QWORD *)a4 = v51;
        *(_QWORD *)(a4 + 32) = a1;
        *(_DWORD *)(a4 + 16) = HIDWORD(v48);
        *(_DWORD *)(a4 + 20) = v48;
        v53 = 1;
        *(_WORD *)(a4 + 48) = 257;
        return v53;
      }
      JSC::JSObject::fillGetterPropertySlot();
      return 1;
    }
LABEL_208:
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      return 1;
    if (a3)
    {
      v109 = *(_DWORD *)(a3 + 16);
      if ((v109 & 0x20) == 0)
      {
        v110 = *(_BYTE **)(a3 + 8);
        v111 = *(unsigned int *)(a3 + 4);
        if ((v109 & 4) != 0)
        {
          if ((_DWORD)v111)
          {
            v129 = *v110 - 48;
            if (v129 > 9 || v111 >= 2 && *v110 == 48)
            {
LABEL_266:
              v130 = 0;
            }
            else
            {
              v173 = v110 + 1;
              v174 = v111 - 1;
              while (v174)
              {
                if (v129 > 0x19999999)
                  goto LABEL_266;
                v175 = *v173 - 48;
                if (v175 > 9)
                  goto LABEL_266;
                v130 = 0;
                v34 = __CFADD__(v175, 10 * v129);
                v129 = v175 + 10 * v129;
                ++v173;
                --v174;
                if (v34)
                  goto LABEL_267;
              }
              v130 = 0x100000000;
              if (v129 == -1)
                v130 = 0;
            }
          }
          else
          {
            v130 = 0;
          }
LABEL_267:
          if ((v130 & 0x100000000) == 0)
            return 0;
        }
        else
        {
          if ((_DWORD)v111)
          {
            v112 = *(unsigned __int16 *)v110 - 48;
            if (v112 > 9 || v111 >= 2 && *(_WORD *)v110 == 48)
            {
LABEL_216:
              v113 = 0;
            }
            else
            {
              v115 = (unsigned __int16 *)(v110 + 2);
              v116 = v111 - 1;
              while (v116)
              {
                if (v112 <= 0x19999999)
                {
                  v117 = *v115 - 48;
                  if (v117 <= 9)
                  {
                    v34 = __CFADD__(v117, 10 * v112);
                    v112 = v117 + 10 * v112;
                    ++v115;
                    --v116;
                    if (!v34)
                      continue;
                  }
                }
                goto LABEL_216;
              }
              v118 = v112 == -1;
              v113 = 0x100000000;
              if (v118)
                v113 = 0;
            }
          }
          else
          {
            v113 = 0;
          }
          if ((v113 & 0x100000000) == 0)
            return 0;
        }
        return JSC::JSObject::getOwnPropertySlotByIndex();
      }
    }
    return 0;
  }
  if (a3)
  {
    if ((*(_BYTE *)(a3 + 16) & 0x20) != 0)
      goto LABEL_47;
    v11 = *(WebCore::ContainerNode **)(a1 + 24);
    *(_DWORD *)a3 += 2;
    v12 = (WTF::StringImpl *)a3;
  }
  else
  {
    v12 = 0;
    v11 = *(WebCore::ContainerNode **)(a1 + 24);
  }
  v180 = v12;
  WebCore::ContainerNode::children(v11, (WTF::StringImpl *)a2, &v192);
  v13 = (*(uint64_t (**)(_DWORD *, WTF::StringImpl **))(*(_QWORD *)v192 + 64))(v192, &v180);
  v15 = v13;
  if (v13)
  {
    if ((*(_WORD *)(v13 + 28) & 0x10) != 0
      && *(_QWORD *)(*(_QWORD *)(v13 + 96) + 24) == *(_QWORD *)(WebCore::HTMLNames::frameTag + 24))
    {
      v16 = 0;
      *(_DWORD *)(v13 + 24) += 2;
      goto LABEL_11;
    }
    v15 = 0;
  }
  v16 = 1;
LABEL_11:
  v17 = v192;
  v192 = 0;
  if (v17)
  {
    if (v17[4] == 1)
    {
      (*(void (**)(_DWORD *))(*(_QWORD *)v17 + 8))(v17);
      if (!v15)
        goto LABEL_20;
      goto LABEL_15;
    }
    --v17[4];
  }
  if (!v15)
    goto LABEL_20;
LABEL_15:
  v18 = *(_QWORD *)(v15 + 112);
  if (v18)
  {
    v19 = *(_QWORD *)(v18 + 8);
    if (v19)
    {
      v20 = *(WebCore::WindowProxy **)(v19 + 112);
      if ((v16 & 1) != 0)
        goto LABEL_23;
      goto LABEL_21;
    }
  }
LABEL_20:
  v20 = 0;
  if ((v16 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  if (*(_DWORD *)(v15 + 24) == 2)
  {
    if ((*(_WORD *)(v15 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v15, v14);
  }
  else
  {
    *(_DWORD *)(v15 + 24) -= 2;
  }
LABEL_23:
  v21 = v180;
  v180 = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, (WTF::StringImpl *)v14);
    else
      *(_DWORD *)v21 -= 2;
  }
  v22 = a2[7];
  if (!v20)
  {
    v9 = a2[7];
    goto LABEL_47;
  }
  ++*(_DWORD *)v20;
  v182 = 0xFFFFFFFF00000000;
  v184 = 0;
  v185 = 0;
  v183 = a1;
  v186 = 196608;
  v187 = 0;
  v190 = 0;
  v191 = 0;
  v188 = v22;
  ++*((_DWORD *)v22 + 1);
  v189 = 1;
  v179 = v9;
  if ((_DWORD)v10)
  {
    v23 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if ((v10 & ~*(_DWORD *)(v23 + 0x20)) == 0)
    {
      v24 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v22);
      if (v24)
      {
        v192 = (_DWORD *)a3;
        v25 = JSC::PropertyTable::get(v24, (uint64_t *)&v192);
        v26 = v25;
        if ((_DWORD)v25 != -1)
        {
          v54 = HIDWORD(v25);
          v55 = (uint64_t *)(a1 + 8 * (int)v25 + 16);
          if ((int)v25 >= 64)
            v55 = (uint64_t *)(*(_QWORD *)(a1 + 8) + ((uint64_t)(0x3F00000000 - (v25 << 32)) >> 29) - 8);
          v56 = *v55;
          if ((*v55 & 0xFFFE000000000002) == 0)
          {
            v57 = *(unsigned __int8 *)(v56 + 5);
            if (v57 == 6)
            {
              v70 = *(_DWORD *)(v23 + 16) & 3;
              v71 = *(_QWORD *)(v56 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v56 & 0xFFFFFFFE) + 0x4C))
              {
                v73 = *(_QWORD *)(v56 + 24);
                v72 = *(_QWORD *)(v56 + 32);
                v180 = *(WTF::StringImpl **)(v56 + 8);
                v181 = v71;
                LODWORD(v182) = HIDWORD(v25);
                v184 = a1;
LABEL_160:
                BYTE1(v186) = 3;
                v58 = 0;
                v96 = 1;
                if (v70 != 2)
                  LOBYTE(v186) = 1;
                HIBYTE(v186) = 1;
                v190 = v73;
                v191 = v72;
                goto LABEL_200;
              }
              v180 = *(WTF::StringImpl **)(v56 + 8);
              v181 = v71;
              LODWORD(v182) = HIDWORD(v25);
              v184 = a1;
LABEL_181:
              v96 = 1;
              BYTE1(v186) = 3;
              v58 = 0;
              if (v70 != 2)
                LOBYTE(v186) = 1;
              goto LABEL_200;
            }
            if (v57 == 5)
              goto LABEL_163;
          }
          v58 = 0;
          v180 = (WTF::StringImpl *)v56;
          v184 = a1;
LABEL_156:
          v182 = __PAIR64__(v26, v54);
          v96 = 1;
          LOWORD(v186) = 257;
          goto LABEL_200;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    goto LABEL_164;
  if (a3)
  {
    v27 = *(_DWORD *)(a3 + 16);
    if ((v27 & 0x20) == 0)
    {
      v28 = *(_BYTE **)(a3 + 8);
      v29 = *(unsigned int *)(a3 + 4);
      if ((v27 & 4) != 0)
      {
        if (!(_DWORD)v29)
          goto LABEL_117;
        v30 = *v28 - 48;
        if (v30 > 9 || v29 >= 2 && *v28 == 48)
          goto LABEL_117;
        v74 = v29 - 1;
        v75 = v28 + 1;
        while (v74)
        {
          if (v30 <= 0x19999999)
          {
            v76 = *v75 - 48;
            if (v76 <= 9)
            {
              v34 = __CFADD__(v76, 10 * v30);
              v30 = v76 + 10 * v30;
              --v74;
              ++v75;
              if (!v34)
                continue;
            }
          }
          goto LABEL_117;
        }
      }
      else
      {
        if (!(_DWORD)v29)
          goto LABEL_117;
        v30 = *(unsigned __int16 *)v28 - 48;
        if (v30 > 9 || v29 >= 2 && *(_WORD *)v28 == 48)
          goto LABEL_117;
        v31 = v29 - 1;
        v32 = (unsigned __int16 *)(v28 + 2);
        while (v31)
        {
          if (v30 <= 0x19999999)
          {
            v33 = *v32 - 48;
            if (v33 <= 9)
            {
              v34 = __CFADD__(v33, 10 * v30);
              v30 = v33 + 10 * v30;
              --v31;
              ++v32;
              if (!v34)
                continue;
            }
          }
          goto LABEL_117;
        }
      }
      if (v30 != -1 && (JSC::JSObject::getOwnPropertySlotByIndex() & 1) != 0)
        goto LABEL_164;
    }
  }
LABEL_117:
  v77 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x30);
  if (!v77)
    v77 = *(_QWORD *)(a1 + 16);
  if ((v77 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v77 + 5) < 0x17u)
    goto LABEL_199;
  v78 = (_BYTE *)(v77 + 6);
  if ((*(_BYTE *)(v77 + 6) & 8) == 0)
  {
    v176 = (unint64_t)a2[7];
    v79 = v77;
    while (1)
    {
      v80 = *(_DWORD *)v79 & 0xFFFFFFFE;
      v81 = 16 * v80;
      if ((_DWORD)v10)
      {
        if ((v10 & ~*(_DWORD *)(16 * v80 + 0x20)) == 0)
        {
          v82 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v81, (JSC::VM *)v176);
          if (v82)
          {
            v192 = (_DWORD *)a3;
            v83 = JSC::PropertyTable::get(v82, (uint64_t *)&v192);
            v26 = v83;
            if ((_DWORD)v83 != -1)
              break;
          }
        }
      }
      if ((*v78 & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
        goto LABEL_164;
      v84 = *(_QWORD *)(v81 + 48);
      if (!v84)
        v84 = *(_QWORD *)(v79 + 16);
      if ((v84 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v84 + 5) < 0x17u)
      {
        if (!a3)
          goto LABEL_199;
        v85 = *(_DWORD *)(a3 + 16);
        if ((v85 & 0x20) != 0)
          goto LABEL_199;
        v86 = *(_WORD **)(a3 + 8);
        v87 = *(unsigned int *)(a3 + 4);
        if ((v85 & 4) == 0)
        {
          if ((_DWORD)v87)
          {
            v88 = (unsigned __int16)*v86 - 48;
            if (v88 <= 9 && (v87 < 2 || *v86 != 48))
            {
              v89 = v86 + 1;
              v90 = v87 - 1;
              while (v90)
              {
                if (v88 <= 0x19999999)
                {
                  v91 = *v89 - 48;
                  if (v91 <= 9)
                  {
                    v34 = __CFADD__(v91, 10 * v88);
                    v88 = v91 + 10 * v88;
                    ++v89;
                    --v90;
                    if (!v34)
                      continue;
                  }
                }
                goto LABEL_199;
              }
              goto LABEL_198;
            }
          }
          goto LABEL_199;
        }
        if (!(_DWORD)v87)
          goto LABEL_199;
        v88 = *(unsigned __int8 *)v86 - 48;
        if (v88 > 9 || v87 >= 2 && *(_BYTE *)v86 == 48)
          goto LABEL_199;
        v105 = (unsigned __int8 *)v86 + 1;
        v106 = v87 - 1;
        while (v106)
        {
          if (v88 <= 0x19999999)
          {
            v107 = *v105 - 48;
            if (v107 <= 9)
            {
              v34 = __CFADD__(v107, 10 * v88);
              v88 = v107 + 10 * v88;
              ++v105;
              --v106;
              if (!v34)
                continue;
            }
          }
          goto LABEL_199;
        }
LABEL_198:
        if (v88 == -1)
        {
LABEL_199:
          v96 = 0;
          v58 = v20;
          v20 = 0;
          goto LABEL_200;
        }
        v131 = v88;
        v177 = a2[7];
        while (2)
        {
          v132 = 16 * (*(_DWORD *)v77 & 0xFFFFFFFE);
          v133 = (*(uint64_t (**)(uint64_t, JSC::VM **, unint64_t, WTF::StringImpl **))(16 * *(unsigned int *)(v132 + 0x4C) + 0x70))(v77, a2, v131, &v180);
          if (*((_DWORD *)v177 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v177) & 1) != 0)
            goto LABEL_199;
          if ((v133 & 1) != 0)
            goto LABEL_164;
          v134 = BYTE2(v186);
          if (BYTE2(v186) == 3)
          {
            if (v187)
              goto LABEL_199;
            v135 = *(unsigned __int8 *)(v77 + 5);
            if (v135 != 61)
              goto LABEL_279;
            goto LABEL_286;
          }
          v135 = *(unsigned __int8 *)(v77 + 5);
          if (v135 == 61)
          {
            if (BYTE2(v186) == 1)
              goto LABEL_199;
          }
          else
          {
LABEL_279:
            if ((v135 - 39) <= 0xA)
            {
              if ((*(_BYTE *)(v77 + 40) & 7u) > 2)
              {
                LOBYTE(v192) = 0;
                v193 = 0;
                v138 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v77, (WTF *)&v192);
                if ((_BYTE)v14)
                  v136 = v138;
                else
                  v136 = 0;
              }
              else
              {
                v136 = *(_QWORD *)(v77 + 24);
              }
              if (v136 <= v131)
                goto LABEL_199;
              v134 = BYTE2(v186);
            }
          }
          if ((*(_WORD *)(v132 + 12) & 0x800) != 0 && v134 != 3)
          {
            if ((*(_WORD *)(16 * (*(_DWORD *)v77 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
            {
              v137 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)v77 & 0xFFFFFFFE)
                                                                                      + 0x4C)
                                                                    + 0xB0))(v77, a2);
            }
            else
            {
              v137 = *(_QWORD *)(16 * (*(_DWORD *)v77 & 0xFFFFFFFE) + 0x30);
              if (!v137)
                v137 = *(_QWORD *)(v77 + 16);
            }
            if (*((_DWORD *)v177 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v177) & 1) != 0)
              goto LABEL_199;
          }
          else
          {
LABEL_286:
            v137 = *(_QWORD *)(16 * (*(_DWORD *)v77 & 0xFFFFFFFE) + 0x30);
            if (!v137)
              v137 = *(_QWORD *)(v77 + 16);
          }
          if ((v137 & 0xFFFE000000000002) != 0)
            goto LABEL_199;
          v77 = v137;
          if (*(unsigned __int8 *)(v137 + 5) <= 0x16u)
            goto LABEL_199;
          continue;
        }
      }
      v78 = (_BYTE *)(v84 + 6);
      v79 = v84;
      if ((*(_BYTE *)(v84 + 6) & 8) != 0)
        goto LABEL_166;
    }
    v54 = HIDWORD(v83);
    if ((int)v83 > 63)
    {
      v92 = *(_QWORD *)(v79 + 8) - 8;
      v93 = 0x3F00000000 - (v83 << 32);
    }
    else
    {
      v92 = v79 + 16;
      v93 = v83 << 32;
    }
    v94 = *(_QWORD *)(v92 + (v93 >> 29));
    if ((v94 & 0xFFFE000000000002) != 0)
      goto LABEL_155;
    v95 = *(unsigned __int8 *)(v94 + 5);
    if (v95 != 6)
    {
      if (v95 == 5)
        goto LABEL_163;
LABEL_155:
      v58 = 0;
      v180 = (WTF::StringImpl *)v94;
      v184 = v79;
      goto LABEL_156;
    }
    v70 = *(_DWORD *)(v81 + 16) & 3;
    v97 = *(_QWORD *)(v94 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v94 & 0xFFFFFFFE) + 0x4C))
    {
      v73 = *(_QWORD *)(v94 + 24);
      v72 = *(_QWORD *)(v94 + 32);
      v180 = *(WTF::StringImpl **)(v94 + 8);
      v181 = v97;
      LODWORD(v182) = HIDWORD(v83);
      v184 = v79;
      goto LABEL_160;
    }
    v180 = *(WTF::StringImpl **)(v94 + 8);
    v181 = v97;
    LODWORD(v182) = HIDWORD(v83);
    v184 = v79;
    goto LABEL_181;
  }
  v84 = v77;
LABEL_166:
  if (!a3)
    goto LABEL_316;
  v98 = *(_DWORD *)(a3 + 16);
  if ((v98 & 0x20) != 0)
    goto LABEL_316;
  v99 = *(_BYTE **)(a3 + 8);
  v100 = *(unsigned int *)(a3 + 4);
  if ((v98 & 4) != 0)
  {
    if (!(_DWORD)v100)
      goto LABEL_316;
    v101 = *v99 - 48;
    if (v101 > 9 || v100 >= 2 && *v99 == 48)
      goto LABEL_316;
    v139 = v99 + 1;
    v140 = v100 - 1;
    while (v140)
    {
      if (v101 <= 0x19999999)
      {
        v141 = *v139 - 48;
        if (v141 <= 9)
        {
          v34 = __CFADD__(v141, 10 * v101);
          v101 = v141 + 10 * v101;
          ++v139;
          --v140;
          if (!v34)
            continue;
        }
      }
      goto LABEL_316;
    }
  }
  else
  {
    if (!(_DWORD)v100)
      goto LABEL_316;
    v101 = *(unsigned __int16 *)v99 - 48;
    if (v101 > 9 || v100 >= 2 && *(_WORD *)v99 == 48)
      goto LABEL_316;
    v102 = (unsigned __int16 *)(v99 + 2);
    v103 = v100 - 1;
    while (v103)
    {
      if (v101 <= 0x19999999)
      {
        v104 = *v102 - 48;
        if (v104 <= 9)
        {
          v34 = __CFADD__(v104, 10 * v101);
          v101 = v104 + 10 * v101;
          ++v102;
          --v103;
          if (!v34)
            continue;
        }
      }
      goto LABEL_316;
    }
  }
  if (v101 != -1)
  {
    v163 = v101;
    v178 = a2[7];
    while (1)
    {
      v164 = 16 * (*(_DWORD *)v77 & 0xFFFFFFFE);
      v165 = (*(uint64_t (**)(uint64_t, JSC::VM **, unint64_t, WTF::StringImpl **))(16 * *(unsigned int *)(v164 + 0x4C)
                                                                                                  + 0x70))(v77, a2, v163, &v180);
      v166 = v165;
      if (*((_DWORD *)v178 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v178);
        if (((hasExceptionsAfterHandlingTraps | v166) & 1) != 0)
        {
          if (!hasExceptionsAfterHandlingTraps)
            goto LABEL_164;
          goto LABEL_199;
        }
      }
      else if ((v165 & 1) != 0)
      {
        goto LABEL_164;
      }
      v167 = BYTE2(v186);
      if (BYTE2(v186) == 3)
      {
        if (v187)
          goto LABEL_199;
        v168 = *(unsigned __int8 *)(v77 + 5);
        if (v168 == 61)
        {
LABEL_406:
          v170 = *(_QWORD *)(16 * (*(_DWORD *)v77 & 0xFFFFFFFE) + 0x30);
          if (!v170)
            v170 = *(_QWORD *)(v77 + 16);
          goto LABEL_408;
        }
      }
      else
      {
        v168 = *(unsigned __int8 *)(v77 + 5);
        if (v168 == 61)
        {
          if (BYTE2(v186) == 1)
            goto LABEL_199;
          goto LABEL_404;
        }
      }
      if ((v168 - 39) <= 0xA)
      {
        if ((*(_BYTE *)(v77 + 40) & 7u) > 2)
        {
          LOBYTE(v192) = 0;
          v193 = 0;
          v172 = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v77, (WTF *)&v192);
          if ((_BYTE)v14)
            v169 = v172;
          else
            v169 = 0;
        }
        else
        {
          v169 = *(_QWORD *)(v77 + 24);
        }
        if (v169 <= v163)
          goto LABEL_199;
        v167 = BYTE2(v186);
      }
LABEL_404:
      if ((*(_WORD *)(v164 + 12) & 0x800) == 0 || v167 == 3)
        goto LABEL_406;
      if ((*(_WORD *)(16 * (*(_DWORD *)v77 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
      {
        v170 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)v77 & 0xFFFFFFFE)
                                                                                + 0x4C)
                                                              + 0xB0))(v77, a2);
      }
      else
      {
        v170 = *(_QWORD *)(16 * (*(_DWORD *)v77 & 0xFFFFFFFE) + 0x30);
        if (!v170)
          v170 = *(_QWORD *)(v77 + 16);
      }
      if (*((_DWORD *)v178 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v178) & 1) != 0)
        goto LABEL_199;
LABEL_408:
      if ((v170 & 0xFFFE000000000002) == 0)
      {
        v77 = v170;
        if (*(unsigned __int8 *)(v170 + 5) > 0x16u)
          continue;
      }
      goto LABEL_199;
    }
  }
LABEL_316:
  v142 = a2[7];
  while (1)
  {
    v143 = 16 * (*(_DWORD *)v84 & 0xFFFFFFFE);
    if ((*(_BYTE *)(v84 + 6) & 8) != 0)
    {
      v148 = (*(uint64_t (**)(uint64_t, JSC::VM **, unint64_t, WTF::StringImpl **))(16 * *(unsigned int *)(16 * (*(_DWORD *)v84 & 0xFFFFFFFE) + 0x4C)
                                                                                                  + 0x68))(v84, a2, a3, &v180);
      if (*((_DWORD *)v142 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v142) & 1) != 0)
        goto LABEL_199;
      if ((v148 & 1) != 0)
        goto LABEL_164;
      if (BYTE2(v186) == 3)
      {
        if (v187)
          goto LABEL_199;
        v149 = *(unsigned __int8 *)(v84 + 5);
        if (v149 == 61)
          goto LABEL_323;
      }
      else
      {
        v149 = *(unsigned __int8 *)(v84 + 5);
        if (v149 == 61)
        {
          if (BYTE2(v186) == 1)
            goto LABEL_199;
          goto LABEL_323;
        }
      }
      if (!a3)
        goto LABEL_323;
      if ((v149 - 50) < 0xFFFFFFF5)
        goto LABEL_323;
      v150 = *(_DWORD *)(a3 + 16);
      if ((v150 & 0x20) != 0)
        goto LABEL_323;
      v151 = *(unsigned int *)(a3 + 4);
      if (!(_DWORD)v151)
        goto LABEL_323;
      v152 = *(unsigned __int8 **)(a3 + 8);
      if ((v150 & 4) != 0)
      {
        v153 = *v152;
        if ((_DWORD)v151 == 1)
        {
LABEL_358:
          if ((v153 - 48) < 0xA)
            goto LABEL_199;
          goto LABEL_323;
        }
        if (v153 == 45)
        {
          v154 = v152[1];
LABEL_362:
          if ((v154 - 48) >= 0xA)
          {
            if ((_DWORD)v151 != 9 || v154 != 73)
              goto LABEL_323;
          }
          else if ((_DWORD)v151 == 2)
          {
            goto LABEL_199;
          }
LABEL_373:
          v176 = v176 & 0xFFFFFF0000000000 | v151 | ((unint64_t)((v150 >> 2) & 1) << 32);
          JSC::jsToNumber();
          v156 = (const WTF::StringImpl *)WTF::numberToString();
          if ((WTF::equal((WTF *)a3, v156, v157) & 1) != 0)
            goto LABEL_199;
          goto LABEL_323;
        }
      }
      else
      {
        v153 = *(unsigned __int16 *)v152;
        if ((_DWORD)v151 == 1)
          goto LABEL_358;
        if (v153 == 45)
        {
          v154 = *((unsigned __int16 *)v152 + 1);
          goto LABEL_362;
        }
      }
      if ((v153 - 48) >= 0xA && ((_DWORD)v151 != 8 || v153 != 73) && ((_DWORD)v151 != 3 || v153 != 78))
        goto LABEL_323;
      goto LABEL_373;
    }
    if ((_DWORD)v10)
    {
      if ((v10 & ~*(_DWORD *)(16 * (*(_DWORD *)v84 & 0xFFFFFFFE) + 0x20)) == 0)
      {
        v144 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v84 & 0xFFFFFFFE)), v142);
        if (v144)
        {
          v192 = (_DWORD *)a3;
          v145 = JSC::PropertyTable::get(v144, (uint64_t *)&v192);
          v26 = v145;
          if ((_DWORD)v145 != -1)
            break;
        }
      }
    }
    if ((*(_BYTE *)(v84 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      goto LABEL_164;
LABEL_323:
    if ((*(_WORD *)(v143 + 12) & 0x800) == 0)
    {
      v146 = *(_DWORD *)v84;
LABEL_325:
      v147 = *(_QWORD *)(16 * (v146 & 0xFFFFFFFE) + 0x30);
      if (!v147)
        v147 = *(_QWORD *)(v84 + 16);
      goto LABEL_327;
    }
    v146 = *(_DWORD *)v84;
    if (BYTE2(v186) == 3)
      goto LABEL_325;
    v155 = 16 * (v146 & 0xFFFFFFFE);
    if ((*(_WORD *)(v155 + 12) & 0x800) != 0)
    {
      v147 = (*(uint64_t (**)(uint64_t, JSC::VM **))(16 * *(unsigned int *)(v155 + 76) + 0xB0))(v84, a2);
    }
    else
    {
      v147 = *(_QWORD *)(v155 + 48);
      if (!v147)
        v147 = *(_QWORD *)(v84 + 16);
    }
    if (*((_DWORD *)v142 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v142) & 1) != 0)
      goto LABEL_199;
LABEL_327:
    if ((v147 & 0xFFFE000000000002) == 0)
    {
      v84 = v147;
      if (*(unsigned __int8 *)(v147 + 5) > 0x16u)
        continue;
    }
    goto LABEL_199;
  }
  v54 = HIDWORD(v145);
  if ((int)v145 > 63)
  {
    v158 = *(_QWORD *)(v84 + 8) - 8;
    v159 = 0x3F00000000 - (v145 << 32);
  }
  else
  {
    v158 = v84 + 16;
    v159 = v145 << 32;
  }
  v160 = *(_QWORD *)(v158 + (v159 >> 29));
  if ((v160 & 0xFFFE000000000002) != 0)
  {
LABEL_383:
    v58 = 0;
    v180 = (WTF::StringImpl *)v160;
    v184 = v84;
    goto LABEL_156;
  }
  v161 = *(unsigned __int8 *)(v160 + 5);
  if (v161 == 6)
  {
    v70 = *(_DWORD *)(v143 + 16) & 3;
    v162 = *(_QWORD *)(v160 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v160 & 0xFFFFFFFE) + 0x4C))
    {
      v73 = *(_QWORD *)(v160 + 24);
      v72 = *(_QWORD *)(v160 + 32);
      v180 = *(WTF::StringImpl **)(v160 + 8);
      v181 = v162;
      LODWORD(v182) = HIDWORD(v145);
      v184 = v84;
      goto LABEL_160;
    }
    v180 = *(WTF::StringImpl **)(v160 + 8);
    v181 = v162;
    LODWORD(v182) = HIDWORD(v145);
    v184 = v84;
    goto LABEL_181;
  }
  if (v161 != 5)
    goto LABEL_383;
LABEL_163:
  JSC::JSObject::fillGetterPropertySlot();
LABEL_164:
  v58 = 0;
  v96 = 1;
LABEL_200:
  if (v189)
  {
    v108 = *((_DWORD *)v188 + 1);
    if (!v108)
    {
      __break(0xC471u);
      JUMPOUT(0x194C1AEE0);
    }
    *((_DWORD *)v188 + 1) = v108 - 1;
  }
  if (!v20)
  {
LABEL_206:
    if (!v96)
      goto LABEL_242;
LABEL_207:
    v9 = a2[7];
    if (!(_DWORD)v10)
      goto LABEL_208;
    goto LABEL_48;
  }
  if (*(_DWORD *)v20 != 1)
  {
    --*(_DWORD *)v20;
    goto LABEL_206;
  }
  v119 = (uint64_t *)*((_QWORD *)v20 + 2);
  *((_QWORD *)v20 + 2) = 0;
  if (v119)
  {
    if (*v119)
      WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v119, (WTF::StringImpl *)v14);
    WTF::fastFree((WTF *)v119, v14);
  }
  v120 = (unsigned int *)*((_QWORD *)v20 + 1);
  *((_QWORD *)v20 + 1) = 0;
  if (v120)
  {
    do
    {
      v121 = __ldaxr(v120);
      v122 = v121 - 1;
    }
    while (__stlxr(v122, v120));
    if (!v122)
    {
      atomic_store(1u, v120);
      WTF::fastFree((WTF *)v120, v14);
    }
  }
  WTF::fastFree(v20, v14);
  if (v96)
    goto LABEL_207;
LABEL_242:
  if (v58)
  {
    v128 = WebCore::WindowProxy::jsWindowProxy(v58, a2[415]);
    if (v128)
      v123 = (uint64_t)v128;
    else
      v123 = 2;
  }
  else
  {
    v123 = 2;
  }
  if (*((_DWORD *)v179 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v179) & 1) != 0)
  {
    v53 = 0;
    if (!v58)
      return v53;
LABEL_246:
    if (*(_DWORD *)v58 == 1)
    {
      v124 = (uint64_t *)*((_QWORD *)v58 + 2);
      *((_QWORD *)v58 + 2) = 0;
      if (v124)
      {
        if (*v124)
          WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v124, (WTF::StringImpl *)v14);
        WTF::fastFree((WTF *)v124, v14);
      }
      v125 = (unsigned int *)*((_QWORD *)v58 + 1);
      *((_QWORD *)v58 + 1) = 0;
      if (v125)
      {
        do
        {
          v126 = __ldaxr(v125);
          v127 = v126 - 1;
        }
        while (__stlxr(v127, v125));
        if (!v127)
        {
          atomic_store(1u, v125);
          WTF::fastFree((WTF *)v125, v14);
        }
      }
      WTF::fastFree(v58, v14);
    }
    else
    {
      --*(_DWORD *)v58;
    }
  }
  else
  {
    *(_QWORD *)a4 = v123;
    *(_DWORD *)(a4 + 16) = 2;
    *(_QWORD *)(a4 + 32) = a1;
    v53 = 1;
    *(_BYTE *)(a4 + 49) = 1;
    if (v58)
      goto LABEL_246;
  }
  return v53;
}

unint64_t WebCore::jsHTMLFrameSetElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLFrameSetElementPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameSetElement>,(WebCore::DOMConstructorID)535>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLFrameSetElement_cols(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::colsAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::colsAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::colsAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFrameSetElement_cols(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFrameSetElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::colsAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::colsAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::colsAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::colsAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFrameSetElement_rows(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::rowsAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::rowsAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::rowsAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLFrameSetElement_rows(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLFrameSetElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::rowsAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::rowsAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::rowsAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::rowsAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLFrameSetElement_onblur(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 304), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onblur(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 304), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onerror(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 784), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onerror(WebCore *a1, unint64_t a2, WebCore::JSErrorHandler *a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::InspectorInstrumentation *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::InspectorInstrumentation **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSErrorHandler>(v15, (WTF::StringImpl **)(v14 + 784), a3, *(JSC::JSObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3
    && ((unint64_t)a3 & 0xFFFE000000000002) == 0
    && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
  {
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  }
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onfocus(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 816), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onfocus(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 816), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onload(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1104), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onload(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1104), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onresize(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1696), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onresize(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1696), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onscroll(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1736), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onscroll(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1736), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onfocusin(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 824), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onfocusin(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 824), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onfocusout(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 832), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onfocusout(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 832), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onafterprint(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 112), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onafterprint(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 112), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onbeforeprint(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 264), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onbeforeprint(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 264), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onbeforeunload(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 280), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onbeforeunload(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 280), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onhashchange(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 960), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onhashchange(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 960), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onlanguagechange(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1080), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onlanguagechange(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1080), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onmessage(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1192), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onmessage(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1192), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onmessageerror(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1200), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onmessageerror(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1200), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onoffline(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1360), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onoffline(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1360), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_ononline(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1368), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_ononline(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1368), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onpagehide(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1400), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onpagehide(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1400), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onpageshow(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1408), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onpageshow(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1408), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onpopstate(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1560), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onpopstate(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1560), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onrejectionhandled(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 1640), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onrejectionhandled(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 1640), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onstorage(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 2000), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onstorage(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 2000), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onunhandledrejection(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 2160), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onunhandledrejection(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 2160), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_onunload(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 2168), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_onunload(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 2168), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_ongamepadconnected(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 864), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_ongamepadconnected(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 864), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLFrameSetElement_ongamepaddisconnected(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore *v9;
  uint64_t v10;

  v5 = a2[3];
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = *(WebCore **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 696);
  if (v9)
    v10 = WebCore::eventHandlerAttribute(v9, (WebCore::EventTarget *)(v8 + 872), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  else
    v10 = 2;
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSHTMLFrameSetElement_ongamepaddisconnected(WebCore *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::EventTarget *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameSetElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameSetElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  v15 = *(WebCore::EventTarget **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8) + 696);
  if (v15)
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v15, (WTF::StringImpl **)(v14 + 872), a3, *(_DWORD **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, (void *)a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::JSHTMLHRElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLHRElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLHRElementPrototype::create(WebCore::JSHTMLHRElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(this, (uint64_t)&WebCore::JSHTMLHRElement::s_info, &WebCore::JSHTMLHRElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHRElement>,(WebCore::DOMConstructorID)536>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4288);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHRElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLHRElement::s_info + ~((_QWORD)&WebCore::JSHTMLHRElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLHRElement::s_info + ~((_QWORD)&WebCore::JSHTMLHRElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLHRElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLHRElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLHRElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLHRElementPrototype::create((WebCore::JSHTMLHRElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLHRElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLHRElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4288) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLHRElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLHRElementPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHRElement>,(WebCore::DOMConstructorID)536>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLHRElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLHRElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLHRElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLHRElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLHRElement_color(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::colorAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::colorAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::colorAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLHRElement_color(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLHRElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLHRElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::colorAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::colorAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::colorAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::colorAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLHRElement_noShade(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::noshadeAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::noshadeAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::noshadeAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLHRElement_noShade(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLHRElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLHRElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::noshadeAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLHRElement_size(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::sizeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::sizeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::sizeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLHRElement_size(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLHRElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLHRElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::sizeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::sizeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::sizeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::sizeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLHRElement_width(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::widthAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLHRElement_width(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLHRElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLHRElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::widthAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::widthAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLHeadElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLHeadElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLHeadElementPrototype::create(WebCore::JSHTMLHeadElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSHTMLHeadElement::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSHTMLHeadElementPrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHeadElement>,(WebCore::DOMConstructorID)537>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4296);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHeadElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLHeadElement::s_info + ~((_QWORD)&WebCore::JSHTMLHeadElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLHeadElement::s_info + ~((_QWORD)&WebCore::JSHTMLHeadElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLHeadElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLHeadElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLHeadElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLHeadElementPrototype::create((WebCore::JSHTMLHeadElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLHeadElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLHeadElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4296) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLHeadElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLHeadElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHeadElement>,(WebCore::DOMConstructorID)537>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSHTMLHeadingElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLHeadingElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLHeadingElementPrototype::create(WebCore::JSHTMLHeadingElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSHTMLHeadingElement::s_info, (uint64_t)&WebCore::JSHTMLHeadingElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHeadingElement>,(WebCore::DOMConstructorID)538>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4304);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHeadingElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLHeadingElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLHeadingElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLHeadingElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLHeadingElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLHeadingElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLHeadingElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLHeadingElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLHeadingElementPrototype::create((WebCore::JSHTMLHeadingElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLHeadingElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLHeadingElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4304) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLHeadingElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLHeadingElementPrototype::s_info != (char **)(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                    + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHeadingElement>,(WebCore::DOMConstructorID)538>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLHeadingElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLHeadingElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLHeadingElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLHeadingElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLHtmlElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLHtmlElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLHtmlElementPrototype::create(WebCore::JSHTMLHtmlElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSHTMLHtmlElement::s_info, (uint64_t)&WebCore::JSHTMLHtmlElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHtmlElement>,(WebCore::DOMConstructorID)539>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4312);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHtmlElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLHtmlElement::s_info + ~((_QWORD)&WebCore::JSHTMLHtmlElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLHtmlElement::s_info + ~((_QWORD)&WebCore::JSHTMLHtmlElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLHtmlElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLHtmlElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLHtmlElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLHtmlElementPrototype::create((WebCore::JSHTMLHtmlElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLHtmlElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLHtmlElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4312) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLHtmlElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLHtmlElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLHtmlElement>,(WebCore::DOMConstructorID)539>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLHtmlElement_version(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::versionAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::versionAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::versionAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLHtmlElement_version(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLHtmlElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLHtmlElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::versionAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::versionAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::versionAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::versionAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLIFrameElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLIFrameElement>,(WebCore::DOMConstructorID)540>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char **v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4320);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v8 = v7;
  LODWORD(v37) = 67099;
  if ((v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v35);
    v6[2] = SlowCase + (int)v35;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v8, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLIFrameElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v6[165];
  v2 = v11[2846];
  if (v2 < v11[2847])
    goto LABEL_11;
  v2 = v11[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v36);
    v11[2848] = v2 + (int)v36;
LABEL_11:
    v11[2846] = v2 + 48;
    goto LABEL_12;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v6[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v37);
  v15 = v37;
  v37 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v6[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v37);
  v18 = *(_QWORD *)(v6[227] + 2160);
  v19 = *(_QWORD *)(a2 + 3296);
  if (v19)
  {
    v20 = *(_DWORD *)(v19 - 8);
    v21 = ((unint64_t)&WebCore::JSHTMLIFrameElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLIFrameElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLIFrameElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLIFrameElement::s_info << 32)) >> 22);
    v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
    v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
    v24 = v20 & ((v23 >> 31) ^ v23);
    v25 = *(char ***)(v19 + 16 * v24);
    if (v25 == &WebCore::JSHTMLIFrameElement::s_info)
    {
LABEL_18:
      v26 = *(_QWORD *)(v19 + 16 * v24 + 8);
      if (v26)
        goto LABEL_20;
    }
    else
    {
      v34 = 1;
      while (v25)
      {
        v24 = ((_DWORD)v24 + v34) & v20;
        v25 = *(char ***)(v19 + 16 * v24);
        ++v34;
        if (v25 == &WebCore::JSHTMLIFrameElement::s_info)
          goto LABEL_18;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v17);
  Structure = WebCore::JSHTMLIFrameElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLIFrameElementPrototype::create((WebCore::JSHTMLIFrameElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLIFrameElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLIFrameElement::s_info);
LABEL_20:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v18, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4320) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

