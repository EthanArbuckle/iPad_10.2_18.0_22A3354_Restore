WTF::StringImpl *WebCore::JSPageTransitionEventPrototype::finishCreation(WebCore::JSPageTransitionEventPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(a2, (uint64_t)&WebCore::JSPageTransitionEvent::s_info, (uint64_t)&WebCore::JSPageTransitionEventPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSPageTransitionEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSPageTransitionEvent::createPrototype(WebCore::JSPageTransitionEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSEvent::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSPageTransitionEventPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSPageTransitionEventPrototype::create(WebCore::JSPageTransitionEventPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSPageTransitionEventPrototype::finishCreation((WebCore::JSPageTransitionEventPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPageTransitionEvent>,(WebCore::DOMConstructorID)471>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3768);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v21) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v21, &WebCore::JSDOMConstructor<WebCore::JSPageTransitionEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v20);
    v10[2848] = v2 + (int)v20;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v21);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSPageTransitionEvent>((WebCore::JSPageTransitionEvent *)a1, (JSC::VM *)a2)+ 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3768) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPageTransitionEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPageTransitionEventPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPageTransitionEvent>,(WebCore::DOMConstructorID)471>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPageTransitionEvent_persisted(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 72))
    return 7;
  else
    return 6;
}

uint64_t WebCore::JSPageTransitionEvent::subspaceForImpl(WebCore::JSPageTransitionEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3848);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 3848))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 3848);
    *(_QWORD *)(v9 + 3848) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSPageTransitionEvent::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSPaintRenderingContext2D::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSPaintRenderingContext2D::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPaintRenderingContext2D::destroy(uint64_t this, JSCell *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 24))(*(_QWORD *)(v2 + 32));
  return this;
}

uint64_t WebCore::JSPaintRenderingContext2D::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPaintRenderingContext2D::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  return WebCore::JSPaintRenderingContext2D::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
}

uint64_t WebCore::JSPaintRenderingContext2D::visitChildren(WebCore::JSPaintRenderingContext2D *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = WebCore::JSPaintRenderingContext2D::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSPaintRenderingContext2DPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPaintRenderingContext2DPrototype::create(WebCore::JSPaintRenderingContext2DPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t i;
  char *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  JSC::Structure *v18;
  int v19;
  unint64_t v21;
  WTF::StringImpl *v22[6];
  int v23;
  int v24;
  JSC::Structure *v25;
  int v26;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v21 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v21);
    *((_QWORD *)this + 4865) = SlowCase + (int)v21;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  for (i = 0; i != 260; i += 5)
  {
    v10 = (&WebCore::JSPaintRenderingContext2DPrototypeTableValues)[i + 1];
    if (v10)
    {
      if (v10 == (char *)2)
        JSC::SmallStrings::singleCharacterStringRep((WebCore::JSPaintRenderingContext2DPrototype *)((char *)this + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v11 = v22[0];
      JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSPaintRenderingContext2D::s_info, (unint64_t *)v22, (uint64_t)&(&WebCore::JSPaintRenderingContext2DPrototypeTableValues)[i], (unsigned __int8 *)SlowCase);
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v12);
        else
          *(_DWORD *)v11 -= 2;
      }
    }
  }
  v13 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create((uint64_t)this, v22);
  v16 = v14;
  v17 = v22[0];
  v22[0] = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v15);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v26 = *(_DWORD *)SlowCase;
  v25 = v18;
  v19 = JSC::Structure::outOfLineCapacity(v18);
  v23 = 0;
  v24 = v19;
  v22[0] = (WTF::StringImpl *)&v24;
  v22[1] = (WTF::StringImpl *)SlowCase;
  v22[2] = this;
  v22[3] = (WTF::StringImpl *)&v26;
  v22[4] = (WTF::StringImpl *)&v25;
  v22[5] = (WTF::StringImpl *)&v23;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v18, this, v13, 6, (uint64_t)v22);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v23, v16);
  *((_DWORD *)v18 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaintRenderingContext2D>,(WebCore::DOMConstructorID)641>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5128);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaintRenderingContext2D>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSPaintRenderingContext2D::s_info
         + ~((_QWORD)&WebCore::JSPaintRenderingContext2D::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaintRenderingContext2D::s_info
                                                                           + ~((_QWORD)&WebCore::JSPaintRenderingContext2D::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSPaintRenderingContext2D::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSPaintRenderingContext2D::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSPaintRenderingContext2DPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSPaintRenderingContext2DPrototype::create((WebCore::JSPaintRenderingContext2DPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSPaintRenderingContext2D::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSPaintRenderingContext2D::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5128) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPaintRenderingContext2DConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPaintRenderingContext2DPrototype::s_info != (char **)(16
                                                                       * *(unsigned int *)(16
                                                                                         * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                         + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaintRenderingContext2D>,(WebCore::DOMConstructorID)641>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsPaintRenderingContext2D_globalAlpha(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  double v4;
  uint64_t v5;
  unint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    v4 = *(double *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 464);
    if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v5 = (int)v4, v4 == (double)(int)v5)
      && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
    {
      return v5 | 0xFFFE000000000000;
    }
    else
    {
      return *(_QWORD *)&v4 + 0x2000000000000;
    }
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_globalAlpha(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  WebCore::CanvasRenderingContext2DBase::setGlobalAlpha(v10, v11);
  return 1;
}

uint64_t WebCore::jsPaintRenderingContext2D_globalCompositeOperation(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char **v7;
  char *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;
  WTF::StringImpl *v17;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    v4 = result;
    v5 = *(_QWORD *)(v2 + 120) + 560 * v3 - 560;
    v6 = *(unsigned __int8 *)(v5 + 105);
    if (v6 < 2)
      v7 = &(&WebCore::compositeOperatorNames)[2 * *(unsigned __int8 *)(v5 + 104)];
    else
      v7 = &(&WebCore::blendOperatorNames)[2 * (v6 - 1)];
    v8 = v7[1];
    if (v8)
    {
      v9 = (WTF::StringImpl *)(v8 - 1);
      if (v8 == (char *)1)
      {
        v10 = (WTF::StringImpl *)MEMORY[0x1E0CBEF70];
        *MEMORY[0x1E0CBEF70] += 2;
      }
      else
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v10 = v17;
      }
      v11 = *(_QWORD *)(v4 + 56);
      if (v10)
      {
        v12 = *((_DWORD *)v10 + 1);
        if (v12)
        {
          if (v12 != 1)
          {
LABEL_11:
            v13 = *(_QWORD *)(v11 + 64760);
            if (!v13 || v10 != *(WTF::StringImpl **)(v13 + 8))
              v13 = JSC::jsStringWithCacheSlowCase();
            goto LABEL_14;
          }
          v14 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
          if ((*((_BYTE *)v10 + 16) & 4) != 0)
          {
            v15 = *v14;
          }
          else
          {
            v16 = *(unsigned __int16 *)v14;
            if (v16 > 0xFF)
              goto LABEL_11;
            v15 = v16;
          }
          v13 = *(_QWORD *)(v11 + 8 * v15 + 42216);
        }
        else
        {
          v13 = *(_QWORD *)(v11 + 41968);
        }
LABEL_14:
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v9);
        else
          *(_DWORD *)v10 -= 2;
        return v13;
      }
    }
    else
    {
      v11 = *(_QWORD *)(result + 56);
    }
    return *(_QWORD *)(v11 + 41968);
  }
  __break(0xC471u);
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_globalCompositeOperation(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CanvasRenderingContext2DBase *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPaintRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CanvasRenderingContext2DBase **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CanvasRenderingContext2DBase::setGlobalCompositeOperation(v9, (const WTF::String *)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32C9390[v14])(&v22, &v19);
  return v15;
}

uint64_t WebCore::jsPaintRenderingContext2D_strokeStyle(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  WebCore::CanvasGradient *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  _QWORD v13[5];
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (!v3)
    goto LABEL_11;
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(_QWORD *)(v2 + 120) + 560 * v3;
  v17 = &v14;
  v18 = &v14;
  v19 = &v14;
  v6 = *(unsigned int *)(v5 - 536);
  if ((_DWORD)v6 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_10:
    result = std::__throw_bad_optional_access[abi:sn180100]();
LABEL_11:
    __break(0xC471u);
    return result;
  }
  v7 = (uint64_t *)result;
  v13[0] = &v17;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))*(&__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZNK7WebCore11CanvasStyle5visitIJZNS8_L14toStyleVariantERKS9_E3__0ZNS8_L14toStyleVariantESC_E3__1ZNS8_L14toStyleVariantESC_E3__2EEEDcDpOT_EUlRKNS8_5ColorEE_JZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNS6_3RefINS8_14CanvasGradientENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEEE_ZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNSO_INS8_13CanvasPatternENSQ_ISY_EENSS_ISY_EEEEE_EEEEEJRKNS0_6__implIJSK_SU_S11_EEEEEESG_OT_DpOT0____fmatrix
                                                                  + v6))(&v11, v13, v5 - 544);
  v9 = v12;
  if (v12 == -1)
    v9 = -1;
  v16 = v9;
  LOBYTE(v14) = 0;
  v15 = 0;
  v17 = &v16;
  v18 = &v14;
  v19 = v7;
  v20 = v4;
  v21 = &v11;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLDOMStringENS_12IDLInterfaceINS_14CanvasGradientEEENS5_INS_13CanvasPatternEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSJ_6RefPtrIS6_NSJ_12RawPtrTraitsIS6_EENSJ_21DefaultRefDerefTraitsIS6_EEEENSL_IS8_NSM_IS8_EENSO_IS8_EEEEEEEEUlTyvE_JNSH_17integral_constantIlLl0EEENSY_IlLl1EEENSY_IlLl2EEEEEET_S12_((uint64_t)&v17, v8, (uint64_t)v13);
  if (!v15)
    goto LABEL_10;
  v10 = v14;
  if (v12 != -1)
    ((void (*)(uint64_t **, uint64_t *))off_1E32CCC88[v12])(&v17, &v11);
  return v10;
}

BOOL WebCore::setJSPaintRenderingContext2D_strokeStyle(JSC::VM **a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  _BYTE v13[8];
  int v14;
  _QWORD v15[3];
  _QWORD *v16;
  _BYTE v17[8];
  uint64_t v18;
  unsigned int v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSPaintRenderingContext2D::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CanvasGradient>,WebCore::IDLInterface<WebCore::CanvasPattern>>>(a1, (unint64_t)this, (uint64_t)v17);
  v9 = v20;
  v10 = v20 == 0;
  if (!v20)
  {
    v13[0] = 0;
    v14 = -1;
    v11 = v19;
    if (v19 == -1)
      std::__throw_bad_variant_access[abi:sn180100]();
    ((void (*)(_QWORD *, _BYTE *, uint64_t *))off_1E32CCCA0[v19])(v15, v13, &v18);
    v14 = v11;
    v15[0] = v8;
    v15[1] = v8;
    v15[2] = v8;
    v16 = v15;
    ((void (*)(_QWORD **, _BYTE *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase14setStrokeStyleEONS_7variantIJNS6_6StringENS6_6RefPtrINS8_14CanvasGradientENS6_12RawPtrTraitsISD_EENS6_21DefaultRefDerefTraitsISD_EEEENSC_INS8_13CanvasPatternENSE_ISJ_EENSG_ISJ_EEEEEEEE3__0JZNS9_14setStrokeStyleESO_E3__1ZNS9_14setStrokeStyleESO_E3__2EEEEEJNS0_6__implIJSB_SI_SM_EEEEEEDcOT_DpOT0____fmatrix[v11])(&v16, v13);
    if (v14 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_1E32CCC88[v14])(v15, v13);
    v9 = v20;
  }
  if (v9 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32CCCB8[v9])(v15, &v18);
  return v10;
}

uint64_t WebCore::jsPaintRenderingContext2D_fillStyle(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  WebCore::CanvasGradient *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  _QWORD v13[5];
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (!v3)
    goto LABEL_11;
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(_QWORD *)(v2 + 120) + 560 * v3;
  v17 = &v14;
  v18 = &v14;
  v19 = &v14;
  v6 = *(unsigned int *)(v5 - 520);
  if ((_DWORD)v6 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_10:
    result = std::__throw_bad_optional_access[abi:sn180100]();
LABEL_11:
    __break(0xC471u);
    return result;
  }
  v7 = (uint64_t *)result;
  v13[0] = &v17;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))*(&__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZNK7WebCore11CanvasStyle5visitIJZNS8_L14toStyleVariantERKS9_E3__0ZNS8_L14toStyleVariantESC_E3__1ZNS8_L14toStyleVariantESC_E3__2EEEDcDpOT_EUlRKNS8_5ColorEE_JZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNS6_3RefINS8_14CanvasGradientENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEEE_ZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNSO_INS8_13CanvasPatternENSQ_ISY_EENSS_ISY_EEEEE_EEEEEJRKNS0_6__implIJSK_SU_S11_EEEEEESG_OT_DpOT0____fmatrix
                                                                  + v6))(&v11, v13, v5 - 528);
  v9 = v12;
  if (v12 == -1)
    v9 = -1;
  v16 = v9;
  LOBYTE(v14) = 0;
  v15 = 0;
  v17 = &v16;
  v18 = &v14;
  v19 = v7;
  v20 = v4;
  v21 = &v11;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLDOMStringENS_12IDLInterfaceINS_14CanvasGradientEEENS5_INS_13CanvasPatternEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSJ_6RefPtrIS6_NSJ_12RawPtrTraitsIS6_EENSJ_21DefaultRefDerefTraitsIS6_EEEENSL_IS8_NSM_IS8_EENSO_IS8_EEEEEEEEUlTyvE_JNSH_17integral_constantIlLl0EEENSY_IlLl1EEENSY_IlLl2EEEEEET_S12_((uint64_t)&v17, v8, (uint64_t)v13);
  if (!v15)
    goto LABEL_10;
  v10 = v14;
  if (v12 != -1)
    ((void (*)(uint64_t **, uint64_t *))off_1E32CCC88[v12])(&v17, &v11);
  return v10;
}

BOOL WebCore::setJSPaintRenderingContext2D_fillStyle(JSC::VM **a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  _BYTE v13[8];
  int v14;
  _QWORD v15[3];
  _QWORD *v16;
  _BYTE v17[8];
  uint64_t v18;
  unsigned int v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSPaintRenderingContext2D::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CanvasGradient>,WebCore::IDLInterface<WebCore::CanvasPattern>>>(a1, (unint64_t)this, (uint64_t)v17);
  v9 = v20;
  v10 = v20 == 0;
  if (!v20)
  {
    v13[0] = 0;
    v14 = -1;
    v11 = v19;
    if (v19 == -1)
      std::__throw_bad_variant_access[abi:sn180100]();
    ((void (*)(_QWORD *, _BYTE *, uint64_t *))off_1E32CCCA0[v19])(v15, v13, &v18);
    v14 = v11;
    v15[0] = v8;
    v15[1] = v8;
    v15[2] = v8;
    v16 = v15;
    ((void (*)(_QWORD **, _BYTE *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase12setFillStyleEONS_7variantIJNS6_6StringENS6_6RefPtrINS8_14CanvasGradientENS6_12RawPtrTraitsISD_EENS6_21DefaultRefDerefTraitsISD_EEEENSC_INS8_13CanvasPatternENSE_ISJ_EENSG_ISJ_EEEEEEEE3__0JZNS9_12setFillStyleESO_E3__1ZNS9_12setFillStyleESO_E3__2EEEEEJNS0_6__implIJSB_SI_SM_EEEEEEDcOT_DpOT0____fmatrix[v11])(&v16, v13);
    if (v14 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_1E32CCC88[v14])(v15, v13);
    v9 = v20;
  }
  if (v9 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32CCCB8[v9])(v15, &v18);
  return v10;
}

uint64_t WebCore::jsPaintRenderingContext2D_imageSmoothingEnabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    if (*(_BYTE *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 368))
      return 7;
    else
      return 6;
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_imageSmoothingEnabled(uint64_t a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  double v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  char v18;
  unsigned __int8 v19;
  BOOL v21;
  int v22;
  uint64_t v23;
  int *v24;
  int v25;

  v4 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v21 = (_DWORD)a3 == 0;
    goto LABEL_49;
  }
  *(_QWORD *)&v10 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v11 = a3 == 7;
      goto LABEL_16;
    }
    v22 = *(unsigned __int8 *)(a3 + 5);
    if (v22 == 3)
    {
      v25 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v22 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v11 = 1;
          goto LABEL_16;
        }
        v21 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_49;
      }
      v23 = *(_QWORD *)(a3 + 8);
      if ((v23 & 1) != 0)
        v24 = (int *)(a3 + 16);
      else
        v24 = (int *)(v23 + 4);
      v25 = *v24;
    }
    v21 = v25 == 0;
LABEL_49:
    v11 = !v21;
    goto LABEL_16;
  }
  v11 = v10 > 0.0 || v10 < 0.0;
LABEL_16:
  v12 = *(_QWORD *)(a2 + 24);
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    v13 = *(_DWORD *)(v12 + 132);
    if (v13)
    {
      if (*(unsigned __int8 *)(*(_QWORD *)(v12 + 120) + 560 * v13 - 368) == v11)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v12);
      v14 = *(_DWORD *)(v12 + 132);
      if (!v14)
      {
        __break(0xC471u);
        JUMPOUT(0x194DB9AD4);
      }
      *(_BYTE *)(*(_QWORD *)(v12 + 120) + 560 * v14 - 368) = v11;
      v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 240))(v12);
      if (!v15)
        return 1;
      if (!v11)
      {
        v19 = 1;
LABEL_30:
        if (*(unsigned __int8 *)(v15 + 340) != v19)
        {
          *(_BYTE *)(v15 + 340) = v19;
          *(_DWORD *)(v15 + 184) |= 0x400u;
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v15 + 88))(v15, v15 + 8);
        return 1;
      }
      v16 = *(_DWORD *)(v12 + 132);
      if (v16)
      {
        v17 = *(_DWORD *)(*(_QWORD *)(v12 + 120) + 560 * v16 - 364);
        if (v17 == 1)
          v18 = 3;
        else
          v18 = 2;
        if (v17 == 2)
          v19 = 4;
        else
          v19 = v18;
        goto LABEL_30;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194DB9ACCLL);
  }
  return 0;
}

uint64_t WebCore::jsPaintRenderingContext2D_imageSmoothingQuality(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
    return WebCore::convertEnumerationToJS<WebCore::ImageSmoothingQuality>(*(_QWORD *)(result + 56), (WTF::StringImpl *)*(unsigned int *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 364));
  __break(0xC471u);
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_imageSmoothingQuality(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPaintRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::ImageSmoothingQuality>(a1, (unint64_t)this);
  v11 = v10;
  v12 = BYTE4(v10);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v10))
      return 0;
LABEL_14:
    v13 = *(_DWORD *)(v9 + 132);
    if (v13)
    {
      if (*(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v13 - 364) == v11)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v9);
      v14 = *(_DWORD *)(v9 + 132);
      if (v14)
      {
        v15 = *(_QWORD *)(v9 + 120) + 560 * v14 - 560;
        *(_DWORD *)(v15 + 196) = v11;
        if (*(_BYTE *)(v15 + 192))
        {
          v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 240))(v9);
          if (v16)
          {
            if (v11 == 1)
              v17 = 3;
            else
              v17 = 2;
            if (v11 == 2)
              v17 = 4;
            if (*(unsigned __int8 *)(v16 + 340) != v17)
            {
              *(_BYTE *)(v16 + 340) = v17;
              *(_DWORD *)(v16 + 184) |= 0x400u;
            }
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v16 + 88))(v16, v16 + 8);
          }
        }
        return 1;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194DB9CACLL);
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v12)
    goto LABEL_14;
  return result;
}

unint64_t WebCore::jsPaintRenderingContext2D_lineWidth(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  double v4;
  uint64_t v5;
  unint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    v4 = *(double *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 512);
    if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v5 = (int)v4, v4 == (double)(int)v5)
      && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
    {
      return v5 | 0xFFFE000000000000;
    }
    else
    {
      return *(_QWORD *)&v4 + 0x2000000000000;
    }
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_lineWidth(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  float v17;
  uint64_t v19;
  double v20;
  JSC::VM *v21;
  unint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v22 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v21 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v22, a1);
    v4 = v21;
    v11 = v20;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  if (v11 >= 0.0 && ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 <= 0x3FE
    || (unint64_t)(*(_QWORD *)&v11 - 1) <= 0xFFFFFFFFFFFFELL)
  {
    v14 = *(_DWORD *)(v10 + 132);
    if (!v14)
    {
      __break(0xC471u);
      JUMPOUT(0x194DB9F64);
    }
    if (*(double *)(*(_QWORD *)(v10 + 120) + 560 * v14 - 512) != v11)
    {
      if (*(_DWORD *)(v10 + 712))
      {
        WebCore::CanvasRenderingContext2DBase::realizeSavesLoop((WebCore::CanvasRenderingContext2DBase *)v10);
        if (*(_DWORD *)(v10 + 712))
        {
          {
            WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::$_0::operator() const(void)::impl += 2;
            WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::consoleMessage = (uint64_t)&WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::$_0::operator() const(void)::impl;
          }
          v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t *, _QWORD))(*(_QWORD *)v19 + 248))(v19, 6, 2, &WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::consoleMessage, 0);
        }
      }
      v15 = *(_DWORD *)(v10 + 132);
      if (!v15)
      {
        __break(0xC471u);
        JUMPOUT(0x194DB9F6CLL);
      }
      *(double *)(*(_QWORD *)(v10 + 120) + 560 * v15 - 512) = v11;
      v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 240))(v10);
      if (v16)
      {
        v17 = v11;
        if (*(float *)(v16 + 188) != v17)
        {
          *(float *)(v16 + 188) = v17;
          *(_DWORD *)(v16 + 184) |= 8u;
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v16 + 88))(v16, v16 + 8);
      }
    }
  }
  return 1;
}

uint64_t WebCore::jsPaintRenderingContext2D_lineCap(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 504);
    if (v4 == 2)
      v5 = 2;
    else
      v5 = v4 == 1;
    return WebCore::convertEnumerationToJS<WebCore::CanvasLineCap>(*(_QWORD *)(result + 56), (WTF::StringImpl *)v5);
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WebCore::setJSPaintRenderingContext2D_lineCap(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t result;
  char hasExceptionsAfterHandlingTraps;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPaintRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::CanvasLineCap>(a1, a3);
  v11 = v10;
  v12 = BYTE4(v10);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v10))
      return 0;
    goto LABEL_14;
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v12)
  {
LABEL_14:
    WebCore::CanvasRenderingContext2DBase::setLineCap(v9, v11);
    return 1;
  }
  return result;
}

uint64_t WebCore::jsPaintRenderingContext2D_lineJoin(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 503);
    if (v4)
      v5 = v4 == 2;
    else
      v5 = 2;
    return WebCore::convertEnumerationToJS<WebCore::CanvasLineJoin>(*(_QWORD *)(result + 56), (WTF::StringImpl *)v5);
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_lineJoin(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPaintRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::CanvasLineJoin>(a1, (unint64_t)this);
  v11 = v10;
  v12 = BYTE4(v10);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v10))
      return 0;
    goto LABEL_14;
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v12)
  {
LABEL_14:
    WebCore::CanvasRenderingContext2DBase::setLineJoin(v9, v11);
    return 1;
  }
  return result;
}

unint64_t WebCore::jsPaintRenderingContext2D_miterLimit(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  double v4;
  uint64_t v5;
  unint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    v4 = *(double *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 496);
    if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v5 = (int)v4, v4 == (double)(int)v5)
      && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
    {
      return v5 | 0xFFFE000000000000;
    }
    else
    {
      return *(_QWORD *)&v4 + 0x2000000000000;
    }
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_miterLimit(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  WebCore::CanvasRenderingContext2DBase::setMiterLimit(v10, v11);
  return 1;
}

unint64_t WebCore::jsPaintRenderingContext2D_lineDashOffset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  double v4;
  uint64_t v5;
  unint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    v4 = *(double *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 376);
    if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v5 = (int)v4, v4 == (double)(int)v5)
      && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
    {
      return v5 | 0xFFFE000000000000;
    }
    else
    {
      return *(_QWORD *)&v4 + 0x2000000000000;
    }
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_lineDashOffset(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  unsigned int v12;
  unsigned int v14;
  double v15;
  JSC::VM *v16;
  unint64_t v17;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v17 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v16 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v17, a1);
    v4 = v16;
    v11 = v15;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v4))
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
    {
      v12 = *(_DWORD *)(v10 + 132);
      if (v12)
      {
        if (*(double *)(*(_QWORD *)(v10 + 120) + 560 * v12 - 376) == v11)
          return 1;
        WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v10);
        v14 = *(_DWORD *)(v10 + 132);
        if (v14)
        {
          *(double *)(*(_QWORD *)(v10 + 120) + 560 * v14 - 376) = v11;
          WebCore::CanvasRenderingContext2DBase::applyLineDash((WebCore::CanvasRenderingContext2DBase *)v10);
          return 1;
        }
      }
      __break(0xC471u);
      JUMPOUT(0x194DBA5C8);
    }
    return 1;
  }
  return 0;
}

unint64_t WebCore::jsPaintRenderingContext2D_shadowOffsetX(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  double v4;
  uint64_t v5;
  unint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    v4 = *(float *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 488);
    if (COERCE_UNSIGNED_INT64(fabs(v4)) <= 0x7FEFFFFFFFFFFFFFLL
      && (v5 = (int)*(float *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 488), v4 == (double)(int)v5)
      && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
    {
      return v5 | 0xFFFE000000000000;
    }
    else
    {
      return *(_QWORD *)&v4 + 0x2000000000000;
    }
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_shadowOffsetX(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double v12;
  JSC::VM *v14;
  unint64_t v15;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPaintRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v5;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v5 = v14;
    v12 = a4.n128_f64[0];
  }
  else
  {
    *(_QWORD *)&v12 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    return 0;
  a4.n128_f32[0] = v12;
  WebCore::CanvasRenderingContext2DBase::setShadowOffsetX(v11, a4);
  return 1;
}

unint64_t WebCore::jsPaintRenderingContext2D_shadowOffsetY(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  double v4;
  uint64_t v5;
  unint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    v4 = *(float *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 484);
    if (COERCE_UNSIGNED_INT64(fabs(v4)) <= 0x7FEFFFFFFFFFFFFFLL
      && (v5 = (int)*(float *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 484), v4 == (double)(int)v5)
      && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
    {
      return v5 | 0xFFFE000000000000;
    }
    else
    {
      return *(_QWORD *)&v4 + 0x2000000000000;
    }
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_shadowOffsetY(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double v12;
  JSC::VM *v14;
  unint64_t v15;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPaintRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v5;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v5 = v14;
    v12 = a4.n128_f64[0];
  }
  else
  {
    *(_QWORD *)&v12 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    return 0;
  a4.n128_f32[0] = v12;
  WebCore::CanvasRenderingContext2DBase::setShadowOffsetY(v11, a4);
  return 1;
}

unint64_t WebCore::jsPaintRenderingContext2D_shadowBlur(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  double v4;
  uint64_t v5;
  unint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    v4 = *(float *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 480);
    if (COERCE_UNSIGNED_INT64(fabs(v4)) <= 0x7FEFFFFFFFFFFFFFLL
      && (v5 = (int)*(float *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 480), v4 == (double)(int)v5)
      && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
    {
      return v5 | 0xFFFE000000000000;
    }
    else
    {
      return *(_QWORD *)&v4 + 0x2000000000000;
    }
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_shadowBlur(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double v12;
  JSC::VM *v14;
  unint64_t v15;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPaintRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v5;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v5 = v14;
    v12 = a4.n128_f64[0];
  }
  else
  {
    *(_QWORD *)&v12 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    return 0;
  a4.n128_f32[0] = v12;
  WebCore::CanvasRenderingContext2DBase::setShadowBlur(v11, a4);
  return 1;
}

uint64_t WebCore::jsPaintRenderingContext2D_shadowColor(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  WTF::StringImpl *v12;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 132);
  if (v3)
  {
    v4 = result;
    WebCore::serializationForHTML((WebCore *)(*(_QWORD *)(v2 + 120) + 560 * v3 - 472), &v12);
    v5 = *(_QWORD *)(v4 + 56);
    v6 = v12;
    if (!v12 || (v7 = *((_DWORD *)v12 + 1)) == 0)
    {
      v8 = *(_QWORD *)(v5 + 41968);
LABEL_8:
      v12 = 0;
      if (!v6)
        return v8;
LABEL_15:
      if (*(_DWORD *)v6 == 2)
        WTF::StringImpl::destroy(v6, v6);
      else
        *(_DWORD *)v6 -= 2;
      return v8;
    }
    if (v7 != 1)
      goto LABEL_5;
    v9 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
    if ((*((_BYTE *)v12 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
      {
LABEL_5:
        v8 = *(_QWORD *)(v5 + 64760);
        if (!v8 || v12 != *(WTF::StringImpl **)(v8 + 8))
        {
          v8 = JSC::jsStringWithCacheSlowCase();
          v6 = v12;
          goto LABEL_8;
        }
LABEL_14:
        v12 = 0;
        goto LABEL_15;
      }
      v10 = v11;
    }
    v8 = *(_QWORD *)(v5 + 8 * v10 + 42216);
    goto LABEL_14;
  }
  __break(0xC471u);
  return result;
}

BOOL WebCore::setJSPaintRenderingContext2D_shadowColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  const WTF::String **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPaintRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(const WTF::String ***)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CanvasRenderingContext2DBase::setShadowColor(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32C9390[v14])(&v22, &v19);
  return v15;
}

_QWORD *WebCore::JSPaintRenderingContext2DOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  BOOL v26;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  result = (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 16))(*(_QWORD *)(v4 + 32));
  v6 = v4 + 8;
  if (!v4)
    v6 = 0;
  if (!*(_DWORD *)(a3 + 48))
  {
    if (*(_QWORD *)v6)
    {
      *(_QWORD *)(*(_QWORD *)v6 + 8) = 3;
      *(_QWORD *)v6 = 0;
    }
    return (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 24))(*(_QWORD *)(v4 + 32));
  }
  v9 = *(_QWORD *)(a3 + 32);
  v8 = (uint64_t *)(a3 + 32);
  v7 = v9;
  if (!v9)
    return (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 24))(*(_QWORD *)(v4 + 32));
  v10 = *(_DWORD *)(v7 - 8);
  v11 = (~(v4 << 32) + v4) ^ ((unint64_t)(~(v4 << 32) + v4) >> 22);
  v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
  v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
  v14 = v10 & ((v13 >> 31) ^ v13);
  v15 = *(_QWORD *)(v7 + 16 * v14);
  if (v15 != v4)
  {
    v16 = 1;
    while (v15)
    {
      v14 = ((_DWORD)v14 + v16) & v10;
      v15 = *(_QWORD *)(v7 + 16 * v14);
      ++v16;
      if (v15 == v4)
        goto LABEL_12;
    }
    v14 = *(unsigned int *)(v7 - 4);
  }
LABEL_12:
  if (v14 == *(_DWORD *)(v7 - 4))
    goto LABEL_22;
  v17 = (_QWORD *)(v7 + 16 * v14);
  *v17 = -1;
  v20 = v17[1];
  v19 = v17 + 1;
  v18 = v20;
  if (v20)
  {
    *(_QWORD *)(v18 + 8) = 3;
    *v19 = 0;
  }
  ++*(_DWORD *)(*v8 - 16);
  v21 = *v8;
  v22 = *v8 ? *(_DWORD *)(v21 - 12) - 1 : -1;
  *(_DWORD *)(v21 - 12) = v22;
  v23 = *v8;
  if (!*v8
    || ((v24 = 6 * *(_DWORD *)(v23 - 12), v25 = *(_DWORD *)(v23 - 4), v24 < v25) ? (v26 = v25 >= 9) : (v26 = 0), !v26))
  {
LABEL_22:
    if (!v4)
      return result;
    return (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 24))(*(_QWORD *)(v4 + 32));
  }
  result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v8, v25 >> 1, 0);
  if (v4)
    return (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 24))(*(_QWORD *)(v4 + 32));
  return result;
}

unint64_t WebCore::wrap<WebCore::PaintRenderingContext2D>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v19;
  JSC::Structure *v20;
  JSC::JSCell *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  WTF *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  WTF *v38;
  void *v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *Allocator;
  uint64_t v45;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unsigned int v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  WTF *v61;

  v5 = *(_QWORD *)(a2 + 3320);
  if (*(_DWORD *)(v5 + 48))
  {
    v50 = *(_QWORD *)(v5 + 32);
    if (!v50)
      goto LABEL_5;
    v51 = *(_DWORD *)(v50 - 8);
    v52 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v53 = 9 * ((v52 + ~(v52 << 13)) ^ ((v52 + ~(v52 << 13)) >> 8));
    v54 = (v53 ^ (v53 >> 15)) + ~((v53 ^ (v53 >> 15)) << 27);
    v55 = v51 & ((v54 >> 31) ^ v54);
    v56 = *(_QWORD *)(v50 + 16 * v55);
    if (v56 != a3)
    {
      v57 = 1;
      while (v56)
      {
        v55 = ((_DWORD)v55 + v57) & v51;
        v56 = *(_QWORD *)(v50 + 16 * v55);
        ++v57;
        if (v56 == a3)
          goto LABEL_66;
      }
      goto LABEL_5;
    }
LABEL_66:
    v6 = *(_QWORD *)(v50 + 16 * v55 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)(a3 + 8);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  (*(void (**)(_QWORD))(**(_QWORD **)(a3 + 32) + 16))(*(_QWORD *)(a3 + 32));
  if (*(void (***)(WebCore::PaintRenderingContext2D *__hidden))a3 != off_1E33DD4F8)
  {
    __break(0xC471u);
    JUMPOUT(0x194DBB3ECLL);
  }
  v8 = *(_QWORD *)(a2 + 3296);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSPaintRenderingContext2D::s_info
         + ~((_QWORD)&WebCore::JSPaintRenderingContext2D::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaintRenderingContext2D::s_info
                                                                           + ~((_QWORD)&WebCore::JSPaintRenderingContext2D::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSPaintRenderingContext2D::s_info)
    {
LABEL_11:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_13;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSPaintRenderingContext2D::s_info)
          goto LABEL_11;
      }
    }
  }
  v17 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSPaintRenderingContext2DPrototype::createStructure(v17, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v21 = (JSC::JSCell *)WebCore::JSPaintRenderingContext2DPrototype::create((WebCore::JSPaintRenderingContext2DPrototype *)v17, Structure, v19, v20);
  v22 = WebCore::JSPaintRenderingContext2D::createStructure(v17, a2, v21);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v22, (uint64_t)&WebCore::JSPaintRenderingContext2D::s_info);
LABEL_13:
  v23 = *(_QWORD *)(a2 + 56);
  v24 = *(_QWORD *)(v23 + 41456);
  v25 = *(_QWORD *)(v24 + 23536);
  v26 = *(_QWORD **)(v25 + 5208);
  if (v26)
    goto LABEL_36;
  v27 = *(_QWORD *)(v24 + 22648);
  if (__ldaxr((unsigned __int8 *)v27))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v27))
  {
    goto LABEL_18;
  }
  MEMORY[0x19AEA534C](v27);
LABEL_18:
  v29 = *(_QWORD *)(v27 + 2824);
  v59 = *(_QWORD *)(v29 + 5208);
  if (!v59)
  {
    v30 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v61, "IsoSpace T");
    v60 = 0;
    MEMORY[0x19AEA3204](v30, &v61, v23 + 192, v23 + 1872, 32, 8, &v60);
    v32 = (uint64_t)v60;
    v60 = 0;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = v61;
    v61 = 0;
    if (v33)
    {
      if (*(_DWORD *)v33 == 1)
        WTF::fastFree(v33, v31);
      else
        --*(_DWORD *)v33;
    }
    v59 = v30;
    v34 = *(_QWORD *)(v29 + 5208);
    *(_QWORD *)(v29 + 5208) = v30;
    if (v34)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
    v35 = *(unsigned int *)(v27 + 2844);
    if ((_DWORD)v35 == *(_DWORD *)(v27 + 2840))
    {
      v36 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v27 + 2832, v35 + 1, (unint64_t)&v59);
      v35 = *(unsigned int *)(v27 + 2844);
      *(_QWORD *)(*(_QWORD *)(v27 + 2832) + 8 * v35) = *v36;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v27 + 2832) + 8 * v35) = v30;
    }
    *(_DWORD *)(v27 + 2844) = v35 + 1;
  }
  v26 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v37 = *(_QWORD *)(v25 + 5208);
  *(_QWORD *)(v25 + 5208) = v26;
  if (v37)
  {
    v38 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v38, v39);
  }
  v40 = __ldxr((unsigned __int8 *)v27);
  if (v40 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v27))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v27);
LABEL_36:
  SlowCase = v26[3];
  if (SlowCase < v26[4])
  {
LABEL_37:
    v26[3] = SlowCase + 32;
    goto LABEL_38;
  }
  SlowCase = v26[5];
  if ((SlowCase & 1) == 0)
  {
    v58 = *(_QWORD *)(SlowCase + 8) ^ v26[6];
    v26[4] = SlowCase + HIDWORD(v58);
    v26[5] = SlowCase + (int)v58;
    goto LABEL_37;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v23 + 755))
    __dmb(0xAu);
  v41 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336358 & 1) == 0)
  {
    qword_1EE336350 = (uint64_t)&off_1E3393690;
    byte_1EE336358 = 1;
  }
  if (!*(_DWORD *)(v41 + 48))
  {
    if ((SlowCase & 8) != 0)
      v42 = (SlowCase - 112) | 1;
    else
      v42 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v42 & 1) != 0)
      v43 = v42 + 47;
    else
      v43 = *(_QWORD *)v42 + 32;
    Allocator = *(_QWORD **)(v43 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v43 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE336350;
    Allocator[2] = v41;
    v45 = *(_QWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = Allocator;
    if (!v45)
      return SlowCase;
LABEL_60:
    *(_QWORD *)(v45 + 8) = 3;
    return SlowCase;
  }
  v61 = (WTF *)a3;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  v49 = *(_QWORD **)(v48 + 16);
  if (!v49)
    v49 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *v49;
  *v49 = SlowCase;
  v49[1] = &qword_1EE336350;
  v49[2] = v41;
  v60 = v49;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v41 + 32), (uint64_t *)&v61, (uint64_t *)&v60);
  v45 = (uint64_t)v60;
  if (v60)
    goto LABEL_60;
  return SlowCase;
}

uint64_t WebCore::JSPaintWorkletGlobalScope::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSPaintWorkletGlobalScope::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPaintWorkletGlobalScopePrototype::finishCreation(WebCore::JSPaintWorkletGlobalScopePrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  JSC::Structure *v8;
  int v9;
  uint64_t result;
  WTF::StringImpl *v11[6];
  int v12;
  int v13;
  JSC::Structure *v14;
  int v15;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v6 = JSC::JSString::create((uint64_t)a2, v11);
  v7 = v11[0];
  v11[0] = 0;
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, v5);
    else
      *(_DWORD *)v7 -= 2;
  }
  v8 = (JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE));
  v15 = *(_DWORD *)this;
  v14 = (JSC::Structure *)(16 * (v15 & 0xFFFFFFFE));
  v9 = JSC::Structure::outOfLineCapacity(v14);
  v12 = 0;
  v13 = v9;
  v11[0] = (WTF::StringImpl *)&v13;
  v11[1] = this;
  v11[2] = a2;
  v11[3] = (WTF::StringImpl *)&v15;
  v11[4] = (WTF::StringImpl *)&v14;
  v11[5] = (WTF::StringImpl *)&v12;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v8, a2, v4, 6, (uint64_t)v11);
  if ((*(_BYTE *)((16 * *(unsigned int *)this) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  result = JSC::JSObject::putDirectOffset((uint64_t)this, (uint64_t)a2, v12, v6);
  *((_DWORD *)v8 + 4) |= 0x10u;
  return result;
}

uint64_t WebCore::JSPaintWorkletGlobalScope::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 3400));
  v4 = *(_QWORD *)(a1 + 3400);
  if (!v4)
    return WebCore::JSWorkletGlobalScope::analyzeHeap(a1, a2);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSWorkletGlobalScope::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSWorkletGlobalScope::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPaintWorkletGlobalScope::visitChildren(uint64_t a1, uint64_t a2)
{
  WebCore::JSWorkletGlobalScopeBase::visitChildren(a1, a2);
  return WebCore::JSPaintWorkletGlobalScope::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
}

uint64_t WebCore::JSPaintWorkletGlobalScope::visitChildren(WebCore::JSPaintWorkletGlobalScope *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;
  _QWORD v10[2];
  _QWORD *v11;
  char v12;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    v10[0] = a2;
    v10[1] = this;
    v12 = 0;
    v11 = v7;
    *((_QWORD *)a2 + 11) = v10;
    WebCore::JSDOMGlobalObject::visitChildren(this, a2, a3);
    (*(void (**)(JSC::JSCell *, _QWORD))(*(_QWORD *)a2 + 24))(a2, *((_QWORD *)this + 417));
    *(_QWORD *)(v10[0] + 88) = v11;
    result = WebCore::JSPaintWorkletGlobalScope::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSPaintWorkletGlobalScope::finishCreation(WebCore::JSPaintWorkletGlobalScope *this, JSC::VM *a2, JSC::JSGlobalProxy *a3)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t SlowCase;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  uint64_t v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  unint64_t v77;
  int v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  uint64_t v82;
  unint64_t v83;
  int v84;
  uint64_t v85;
  unint64_t v86;
  int v87;
  uint64_t v88;
  unint64_t v89;
  int v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  uint64_t v97;
  unint64_t v98;
  int v99;
  uint64_t v100;
  unint64_t v101;
  int v102;
  uint64_t v103;
  unint64_t v104;
  int v105;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;

  v5 = (uint64_t *)((char *)a2 + 37936);
  *((_QWORD *)this + 417) = a3;
  if (this && a3 && *((_DWORD *)a2 + 190) >= *((unsigned __int8 *)this + 7))
  {
    JSC::Heap::writeBarrierSlowPath((JSC::VM *)((char *)a2 + 192), (const JSCell *)this);
    a3 = (JSC::JSGlobalProxy *)*((_QWORD *)this + 417);
  }
  WebCore::JSDOMGlobalObject::finishCreation(this, a2, a3);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 136))(v6) + 432) & 0x80000000000000) != 0)
  {
    SlowCase = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      SlowCase = v5[2];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_6;
      }
      v119 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
      v5[1] = SlowCase + HIDWORD(v119);
      v5[2] = SlowCase + (int)v119;
    }
    *v5 = SlowCase + 32;
LABEL_6:
    *(_DWORD *)SlowCase = 0;
    v8 = v5[450];
    v9 = *(_DWORD *)(v8 + 8);
    *(_DWORD *)SlowCase = v8 >> 4;
    *(_DWORD *)(SlowCase + 4) = v9;
    *(_QWORD *)(SlowCase + 8) = WebCore::jsPaintWorkletGlobalScope_CompressionStreamConstructor;
    *(_QWORD *)(SlowCase + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v10 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 136))(v10) + 432) & 0x80000000000000) == 0)
    goto LABEL_15;
  v11 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v11 = v5[2];
    if ((v11 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v11 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_12;
    }
    v120 = *(_QWORD *)(v11 + 8) ^ v5[3];
    v5[1] = v11 + HIDWORD(v120);
    v5[2] = v11 + (int)v120;
  }
  *v5 = v11 + 32;
LABEL_12:
  *(_DWORD *)v11 = 0;
  v12 = v5[450];
  v13 = *(_DWORD *)(v12 + 8);
  *(_DWORD *)v11 = v12 >> 4;
  *(_DWORD *)(v11 + 4) = v13;
  *(_QWORD *)(v11 + 8) = WebCore::jsPaintWorkletGlobalScope_CompressionStreamEncoderConstructor;
  *(_QWORD *)(v11 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_15:
  v14 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 136))(v14) + 432) & 0x80000000000000) == 0)
    goto LABEL_21;
  v15 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v15 = v5[2];
    if ((v15 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v15 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_18;
    }
    v121 = *(_QWORD *)(v15 + 8) ^ v5[3];
    v5[1] = v15 + HIDWORD(v121);
    v5[2] = v15 + (int)v121;
  }
  *v5 = v15 + 32;
LABEL_18:
  *(_DWORD *)v15 = 0;
  v16 = v5[450];
  v17 = *(_DWORD *)(v16 + 8);
  *(_DWORD *)v15 = v16 >> 4;
  *(_DWORD *)(v15 + 4) = v17;
  *(_QWORD *)(v15 + 8) = WebCore::jsPaintWorkletGlobalScope_DecompressionStreamConstructor;
  *(_QWORD *)(v15 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_21:
  v18 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 136))(v18) + 432) & 0x80000000000000) == 0)
    goto LABEL_27;
  v19 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v19 = v5[2];
    if ((v19 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v19 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_24;
    }
    v122 = *(_QWORD *)(v19 + 8) ^ v5[3];
    v5[1] = v19 + HIDWORD(v122);
    v5[2] = v19 + (int)v122;
  }
  *v5 = v19 + 32;
LABEL_24:
  *(_DWORD *)v19 = 0;
  v20 = v5[450];
  v21 = *(_DWORD *)(v20 + 8);
  *(_DWORD *)v19 = v20 >> 4;
  *(_DWORD *)(v19 + 4) = v21;
  *(_QWORD *)(v19 + 8) = WebCore::jsPaintWorkletGlobalScope_DecompressionStreamDecoderConstructor;
  *(_QWORD *)(v19 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_27:
  v22 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 136))(v22) + 440) & 0x80000) == 0)
    goto LABEL_33;
  v23 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v23 = v5[2];
    if ((v23 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v23 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_30;
    }
    v123 = *(_QWORD *)(v23 + 8) ^ v5[3];
    v5[1] = v23 + HIDWORD(v123);
    v5[2] = v23 + (int)v123;
  }
  *v5 = v23 + 32;
LABEL_30:
  *(_DWORD *)v23 = 0;
  v24 = v5[450];
  v25 = *(_DWORD *)(v24 + 8);
  *(_DWORD *)v23 = v24 >> 4;
  *(_DWORD *)(v23 + 4) = v25;
  *(_QWORD *)(v23 + 8) = WebCore::jsPaintWorkletGlobalScope_CSSPaintSizeConstructor;
  *(_QWORD *)(v23 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_33:
  v26 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v26 + 136))(v26) + 440) & 0x800000000) == 0)
    goto LABEL_39;
  v27 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v27 = v5[2];
    if ((v27 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v27 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_36;
    }
    v124 = *(_QWORD *)(v27 + 8) ^ v5[3];
    v5[1] = v27 + HIDWORD(v124);
    v5[2] = v27 + (int)v124;
  }
  *v5 = v27 + 32;
LABEL_36:
  *(_DWORD *)v27 = 0;
  v28 = v5[450];
  v29 = *(_DWORD *)(v28 + 8);
  *(_DWORD *)v27 = v28 >> 4;
  *(_DWORD *)(v27 + 4) = v29;
  *(_QWORD *)(v27 + 8) = WebCore::jsPaintWorkletGlobalScope_CSSColorConstructor;
  *(_QWORD *)(v27 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_39:
  v30 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v30 + 136))(v30) + 440) & 0x800000000) == 0)
    goto LABEL_45;
  v31 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v31 = v5[2];
    if ((v31 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v31 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_42;
    }
    v125 = *(_QWORD *)(v31 + 8) ^ v5[3];
    v5[1] = v31 + HIDWORD(v125);
    v5[2] = v31 + (int)v125;
  }
  *v5 = v31 + 32;
LABEL_42:
  *(_DWORD *)v31 = 0;
  v32 = v5[450];
  v33 = *(_DWORD *)(v32 + 8);
  *(_DWORD *)v31 = v32 >> 4;
  *(_DWORD *)(v31 + 4) = v33;
  *(_QWORD *)(v31 + 8) = WebCore::jsPaintWorkletGlobalScope_CSSColorValueConstructor;
  *(_QWORD *)(v31 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_45:
  v34 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 136))(v34) + 440) & 0x800000000) == 0)
    goto LABEL_51;
  v35 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v35 = v5[2];
    if ((v35 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v35 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_48;
    }
    v126 = *(_QWORD *)(v35 + 8) ^ v5[3];
    v5[1] = v35 + HIDWORD(v126);
    v5[2] = v35 + (int)v126;
  }
  *v5 = v35 + 32;
LABEL_48:
  *(_DWORD *)v35 = 0;
  v36 = v5[450];
  v37 = *(_DWORD *)(v36 + 8);
  *(_DWORD *)v35 = v36 >> 4;
  *(_DWORD *)(v35 + 4) = v37;
  *(_QWORD *)(v35 + 8) = WebCore::jsPaintWorkletGlobalScope_CSSHSLConstructor;
  *(_QWORD *)(v35 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_51:
  v38 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v38 + 136))(v38) + 440) & 0x800000000) == 0)
    goto LABEL_57;
  v39 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v39 = v5[2];
    if ((v39 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v39 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_54;
    }
    v127 = *(_QWORD *)(v39 + 8) ^ v5[3];
    v5[1] = v39 + HIDWORD(v127);
    v5[2] = v39 + (int)v127;
  }
  *v5 = v39 + 32;
LABEL_54:
  *(_DWORD *)v39 = 0;
  v40 = v5[450];
  v41 = *(_DWORD *)(v40 + 8);
  *(_DWORD *)v39 = v40 >> 4;
  *(_DWORD *)(v39 + 4) = v41;
  *(_QWORD *)(v39 + 8) = WebCore::jsPaintWorkletGlobalScope_CSSHWBConstructor;
  *(_QWORD *)(v39 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_57:
  v42 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v42 + 136))(v42) + 440) & 0x800000000) == 0)
    goto LABEL_63;
  v43 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v43 = v5[2];
    if ((v43 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v43 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_60;
    }
    v128 = *(_QWORD *)(v43 + 8) ^ v5[3];
    v5[1] = v43 + HIDWORD(v128);
    v5[2] = v43 + (int)v128;
  }
  *v5 = v43 + 32;
LABEL_60:
  *(_DWORD *)v43 = 0;
  v44 = v5[450];
  v45 = *(_DWORD *)(v44 + 8);
  *(_DWORD *)v43 = v44 >> 4;
  *(_DWORD *)(v43 + 4) = v45;
  *(_QWORD *)(v43 + 8) = WebCore::jsPaintWorkletGlobalScope_CSSLCHConstructor;
  *(_QWORD *)(v43 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_63:
  v46 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v46 + 136))(v46) + 440) & 0x800000000) == 0)
    goto LABEL_69;
  v47 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v47 = v5[2];
    if ((v47 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v47 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_66;
    }
    v129 = *(_QWORD *)(v47 + 8) ^ v5[3];
    v5[1] = v47 + HIDWORD(v129);
    v5[2] = v47 + (int)v129;
  }
  *v5 = v47 + 32;
LABEL_66:
  *(_DWORD *)v47 = 0;
  v48 = v5[450];
  v49 = *(_DWORD *)(v48 + 8);
  *(_DWORD *)v47 = v48 >> 4;
  *(_DWORD *)(v47 + 4) = v49;
  *(_QWORD *)(v47 + 8) = WebCore::jsPaintWorkletGlobalScope_CSSLabConstructor;
  *(_QWORD *)(v47 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_69:
  v50 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 136))(v50) + 440) & 0x800000000) == 0)
    goto LABEL_75;
  v51 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v51 = v5[2];
    if ((v51 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v51 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_72;
    }
    v130 = *(_QWORD *)(v51 + 8) ^ v5[3];
    v5[1] = v51 + HIDWORD(v130);
    v5[2] = v51 + (int)v130;
  }
  *v5 = v51 + 32;
LABEL_72:
  *(_DWORD *)v51 = 0;
  v52 = v5[450];
  v53 = *(_DWORD *)(v52 + 8);
  *(_DWORD *)v51 = v52 >> 4;
  *(_DWORD *)(v51 + 4) = v53;
  *(_QWORD *)(v51 + 8) = WebCore::jsPaintWorkletGlobalScope_CSSOKLCHConstructor;
  *(_QWORD *)(v51 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_75:
  v54 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v54 + 136))(v54) + 440) & 0x800000000) == 0)
    goto LABEL_81;
  v55 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v55 = v5[2];
    if ((v55 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v55 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_78;
    }
    v131 = *(_QWORD *)(v55 + 8) ^ v5[3];
    v5[1] = v55 + HIDWORD(v131);
    v5[2] = v55 + (int)v131;
  }
  *v5 = v55 + 32;
LABEL_78:
  *(_DWORD *)v55 = 0;
  v56 = v5[450];
  v57 = *(_DWORD *)(v56 + 8);
  *(_DWORD *)v55 = v56 >> 4;
  *(_DWORD *)(v55 + 4) = v57;
  *(_QWORD *)(v55 + 8) = WebCore::jsPaintWorkletGlobalScope_CSSOKLabConstructor;
  *(_QWORD *)(v55 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_81:
  v58 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v58 + 136))(v58) + 440) & 0x800000000) == 0)
    goto LABEL_87;
  v59 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v59 = v5[2];
    if ((v59 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v59 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_84;
    }
    v132 = *(_QWORD *)(v59 + 8) ^ v5[3];
    v5[1] = v59 + HIDWORD(v132);
    v5[2] = v59 + (int)v132;
  }
  *v5 = v59 + 32;
LABEL_84:
  *(_DWORD *)v59 = 0;
  v60 = v5[450];
  v61 = *(_DWORD *)(v60 + 8);
  *(_DWORD *)v59 = v60 >> 4;
  *(_DWORD *)(v59 + 4) = v61;
  *(_QWORD *)(v59 + 8) = WebCore::jsPaintWorkletGlobalScope_CSSRGBConstructor;
  *(_QWORD *)(v59 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_87:
  v62 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v62 + 136))(v62) + 440) & 0x80000) == 0)
    goto LABEL_93;
  v63 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v63 = v5[2];
    if ((v63 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v63 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_90;
    }
    v133 = *(_QWORD *)(v63 + 8) ^ v5[3];
    v5[1] = v63 + HIDWORD(v133);
    v5[2] = v63 + (int)v133;
  }
  *v5 = v63 + 32;
LABEL_90:
  *(_DWORD *)v63 = 0;
  v64 = v5[450];
  v65 = *(_DWORD *)(v64 + 8);
  *(_DWORD *)v63 = v64 >> 4;
  *(_DWORD *)(v63 + 4) = v65;
  *(_QWORD *)(v63 + 8) = WebCore::jsPaintWorkletGlobalScope_PaintRenderingContext2DConstructor;
  *(_QWORD *)(v63 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_93:
  v66 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v66 + 136))(v66) + 440) & 0x80000) == 0)
    goto LABEL_99;
  v67 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v67 = v5[2];
    if ((v67 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v67 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_96;
    }
    v134 = *(_QWORD *)(v67 + 8) ^ v5[3];
    v5[1] = v67 + HIDWORD(v134);
    v5[2] = v67 + (int)v134;
  }
  *v5 = v67 + 32;
LABEL_96:
  *(_DWORD *)v67 = 0;
  v68 = v5[450];
  v69 = *(_DWORD *)(v68 + 8);
  *(_DWORD *)v67 = v68 >> 4;
  *(_DWORD *)(v67 + 4) = v69;
  *(_QWORD *)(v67 + 8) = WebCore::jsPaintWorkletGlobalScope_PaintWorkletGlobalScopeConstructor;
  *(_QWORD *)(v67 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_99:
  v70 = *v5;
  if (*v5 < (unint64_t)v5[1])
  {
LABEL_100:
    *v5 = v70 + 32;
    goto LABEL_101;
  }
  v70 = v5[2];
  if ((v70 & 1) == 0)
  {
    v107 = *(_QWORD *)(v70 + 8) ^ v5[3];
    v5[1] = v70 + HIDWORD(v107);
    v5[2] = v70 + (int)v107;
    goto LABEL_100;
  }
  JSC::sanitizeStackForVM();
  v70 = JSC::LocalAllocator::allocateSlowCase();
LABEL_101:
  *(_DWORD *)v70 = 0;
  v71 = v5[450];
  v72 = *(_DWORD *)(v71 + 8);
  *(_DWORD *)v70 = v71 >> 4;
  *(_DWORD *)(v70 + 4) = v72;
  *(_QWORD *)(v70 + 8) = WebCore::jsPaintWorkletGlobalScope_ReadableByteStreamControllerConstructor;
  *(_QWORD *)(v70 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v73 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_104;
  v73 = v5[2];
  if ((v73 & 1) == 0)
  {
    v108 = *(_QWORD *)(v73 + 8) ^ v5[3];
    v5[1] = v73 + HIDWORD(v108);
    v5[2] = v73 + (int)v108;
LABEL_104:
    *v5 = v73 + 32;
    goto LABEL_105;
  }
  JSC::sanitizeStackForVM();
  v73 = JSC::LocalAllocator::allocateSlowCase();
LABEL_105:
  *(_DWORD *)v73 = 0;
  v74 = v5[450];
  v75 = *(_DWORD *)(v74 + 8);
  *(_DWORD *)v73 = v74 >> 4;
  *(_DWORD *)(v73 + 4) = v75;
  *(_QWORD *)(v73 + 8) = WebCore::jsPaintWorkletGlobalScope_ReadableStreamConstructor;
  *(_QWORD *)(v73 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v76 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_108;
  v76 = v5[2];
  if ((v76 & 1) == 0)
  {
    v109 = *(_QWORD *)(v76 + 8) ^ v5[3];
    v5[1] = v76 + HIDWORD(v109);
    v5[2] = v76 + (int)v109;
LABEL_108:
    *v5 = v76 + 32;
    goto LABEL_109;
  }
  JSC::sanitizeStackForVM();
  v76 = JSC::LocalAllocator::allocateSlowCase();
LABEL_109:
  *(_DWORD *)v76 = 0;
  v77 = v5[450];
  v78 = *(_DWORD *)(v77 + 8);
  *(_DWORD *)v76 = v77 >> 4;
  *(_DWORD *)(v76 + 4) = v78;
  *(_QWORD *)(v76 + 8) = WebCore::jsPaintWorkletGlobalScope_ReadableStreamBYOBReaderConstructor;
  *(_QWORD *)(v76 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v79 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_112;
  v79 = v5[2];
  if ((v79 & 1) == 0)
  {
    v110 = *(_QWORD *)(v79 + 8) ^ v5[3];
    v5[1] = v79 + HIDWORD(v110);
    v5[2] = v79 + (int)v110;
LABEL_112:
    *v5 = v79 + 32;
    goto LABEL_113;
  }
  JSC::sanitizeStackForVM();
  v79 = JSC::LocalAllocator::allocateSlowCase();
LABEL_113:
  *(_DWORD *)v79 = 0;
  v80 = v5[450];
  v81 = *(_DWORD *)(v80 + 8);
  *(_DWORD *)v79 = v80 >> 4;
  *(_DWORD *)(v79 + 4) = v81;
  *(_QWORD *)(v79 + 8) = WebCore::jsPaintWorkletGlobalScope_ReadableStreamBYOBRequestConstructor;
  *(_QWORD *)(v79 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v82 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_116;
  v82 = v5[2];
  if ((v82 & 1) == 0)
  {
    v111 = *(_QWORD *)(v82 + 8) ^ v5[3];
    v5[1] = v82 + HIDWORD(v111);
    v5[2] = v82 + (int)v111;
LABEL_116:
    *v5 = v82 + 32;
    goto LABEL_117;
  }
  JSC::sanitizeStackForVM();
  v82 = JSC::LocalAllocator::allocateSlowCase();
LABEL_117:
  *(_DWORD *)v82 = 0;
  v83 = v5[450];
  v84 = *(_DWORD *)(v83 + 8);
  *(_DWORD *)v82 = v83 >> 4;
  *(_DWORD *)(v82 + 4) = v84;
  *(_QWORD *)(v82 + 8) = WebCore::jsPaintWorkletGlobalScope_ReadableStreamDefaultControllerConstructor;
  *(_QWORD *)(v82 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v85 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_120;
  v85 = v5[2];
  if ((v85 & 1) == 0)
  {
    v112 = *(_QWORD *)(v85 + 8) ^ v5[3];
    v5[1] = v85 + HIDWORD(v112);
    v5[2] = v85 + (int)v112;
LABEL_120:
    *v5 = v85 + 32;
    goto LABEL_121;
  }
  JSC::sanitizeStackForVM();
  v85 = JSC::LocalAllocator::allocateSlowCase();
LABEL_121:
  *(_DWORD *)v85 = 0;
  v86 = v5[450];
  v87 = *(_DWORD *)(v86 + 8);
  *(_DWORD *)v85 = v86 >> 4;
  *(_DWORD *)(v85 + 4) = v87;
  *(_QWORD *)(v85 + 8) = WebCore::jsPaintWorkletGlobalScope_ReadableStreamDefaultReaderConstructor;
  *(_QWORD *)(v85 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v88 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_124;
  v88 = v5[2];
  if ((v88 & 1) == 0)
  {
    v113 = *(_QWORD *)(v88 + 8) ^ v5[3];
    v5[1] = v88 + HIDWORD(v113);
    v5[2] = v88 + (int)v113;
LABEL_124:
    *v5 = v88 + 32;
    goto LABEL_125;
  }
  JSC::sanitizeStackForVM();
  v88 = JSC::LocalAllocator::allocateSlowCase();
LABEL_125:
  *(_DWORD *)v88 = 0;
  v89 = v5[450];
  v90 = *(_DWORD *)(v89 + 8);
  *(_DWORD *)v88 = v89 >> 4;
  *(_DWORD *)(v88 + 4) = v90;
  *(_QWORD *)(v88 + 8) = WebCore::jsPaintWorkletGlobalScope_TransformStreamConstructor;
  *(_QWORD *)(v88 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v91 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_128;
  v91 = v5[2];
  if ((v91 & 1) == 0)
  {
    v114 = *(_QWORD *)(v91 + 8) ^ v5[3];
    v5[1] = v91 + HIDWORD(v114);
    v5[2] = v91 + (int)v114;
LABEL_128:
    *v5 = v91 + 32;
    goto LABEL_129;
  }
  JSC::sanitizeStackForVM();
  v91 = JSC::LocalAllocator::allocateSlowCase();
LABEL_129:
  *(_DWORD *)v91 = 0;
  v92 = v5[450];
  v93 = *(_DWORD *)(v92 + 8);
  *(_DWORD *)v91 = v92 >> 4;
  *(_DWORD *)(v91 + 4) = v93;
  *(_QWORD *)(v91 + 8) = WebCore::jsPaintWorkletGlobalScope_TransformStreamDefaultControllerConstructor;
  *(_QWORD *)(v91 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v94 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_132;
  v94 = v5[2];
  if ((v94 & 1) == 0)
  {
    v115 = *(_QWORD *)(v94 + 8) ^ v5[3];
    v5[1] = v94 + HIDWORD(v115);
    v5[2] = v94 + (int)v115;
LABEL_132:
    *v5 = v94 + 32;
    goto LABEL_133;
  }
  JSC::sanitizeStackForVM();
  v94 = JSC::LocalAllocator::allocateSlowCase();
LABEL_133:
  *(_DWORD *)v94 = 0;
  v95 = v5[450];
  v96 = *(_DWORD *)(v95 + 8);
  *(_DWORD *)v94 = v95 >> 4;
  *(_DWORD *)(v94 + 4) = v96;
  *(_QWORD *)(v94 + 8) = WebCore::jsPaintWorkletGlobalScope_WritableStreamConstructor;
  *(_QWORD *)(v94 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v97 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_136;
  v97 = v5[2];
  if ((v97 & 1) == 0)
  {
    v116 = *(_QWORD *)(v97 + 8) ^ v5[3];
    v5[1] = v97 + HIDWORD(v116);
    v5[2] = v97 + (int)v116;
LABEL_136:
    *v5 = v97 + 32;
    goto LABEL_137;
  }
  JSC::sanitizeStackForVM();
  v97 = JSC::LocalAllocator::allocateSlowCase();
LABEL_137:
  *(_DWORD *)v97 = 0;
  v98 = v5[450];
  v99 = *(_DWORD *)(v98 + 8);
  *(_DWORD *)v97 = v98 >> 4;
  *(_DWORD *)(v97 + 4) = v99;
  *(_QWORD *)(v97 + 8) = WebCore::jsPaintWorkletGlobalScope_WritableStreamDefaultControllerConstructor;
  *(_QWORD *)(v97 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v100 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_140;
  v100 = v5[2];
  if ((v100 & 1) == 0)
  {
    v117 = *(_QWORD *)(v100 + 8) ^ v5[3];
    v5[1] = v100 + HIDWORD(v117);
    v5[2] = v100 + (int)v117;
LABEL_140:
    *v5 = v100 + 32;
    goto LABEL_141;
  }
  JSC::sanitizeStackForVM();
  v100 = JSC::LocalAllocator::allocateSlowCase();
LABEL_141:
  *(_DWORD *)v100 = 0;
  v101 = v5[450];
  v102 = *(_DWORD *)(v101 + 8);
  *(_DWORD *)v100 = v101 >> 4;
  *(_DWORD *)(v100 + 4) = v102;
  *(_QWORD *)(v100 + 8) = WebCore::jsPaintWorkletGlobalScope_WritableStreamDefaultWriterConstructor;
  *(_QWORD *)(v100 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v103 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_144;
  v103 = v5[2];
  if ((v103 & 1) == 0)
  {
    v118 = *(_QWORD *)(v103 + 8) ^ v5[3];
    v5[1] = v103 + HIDWORD(v118);
    v5[2] = v103 + (int)v118;
LABEL_144:
    *v5 = v103 + 32;
    goto LABEL_145;
  }
  JSC::sanitizeStackForVM();
  v103 = JSC::LocalAllocator::allocateSlowCase();
LABEL_145:
  *(_DWORD *)v103 = 0;
  v104 = v5[450];
  v105 = *(_DWORD *)(v104 + 8);
  *(_DWORD *)v103 = v104 >> 4;
  *(_DWORD *)(v103 + 4) = v105;
  *(_QWORD *)(v103 + 8) = WebCore::jsPaintWorkletGlobalScope_AbortSignalConstructor;
  *(_QWORD *)(v103 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  return JSC::JSObject::putDirectCustomAccessor();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CompressionStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 512);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSCompressionStream>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSCompressionStream>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 512) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CompressionStreamEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCompressionStreamEncoder>,(WebCore::DOMConstructorID)65>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCompressionStreamEncoder>,(WebCore::DOMConstructorID)65>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_DecompressionStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 528);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSDecompressionStream>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSDecompressionStream>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 528) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_DecompressionStreamDecoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDecompressionStreamDecoder>,(WebCore::DOMConstructorID)67>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDecompressionStreamDecoder>,(WebCore::DOMConstructorID)67>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSPaintSizeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSPaintSize>,(WebCore::DOMConstructorID)346>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSPaintSize>,(WebCore::DOMConstructorID)346>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSColorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSColor>,(WebCore::DOMConstructorID)383>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSColor>,(WebCore::DOMConstructorID)383>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSColorValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSHSLConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHSL>,(WebCore::DOMConstructorID)385>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHSL>,(WebCore::DOMConstructorID)385>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSHWBConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHWB>,(WebCore::DOMConstructorID)386>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHWB>,(WebCore::DOMConstructorID)386>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSLCHConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLCH>,(WebCore::DOMConstructorID)387>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLCH>,(WebCore::DOMConstructorID)387>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSLabConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLab>,(WebCore::DOMConstructorID)388>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLab>,(WebCore::DOMConstructorID)388>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSOKLCHConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLCH>,(WebCore::DOMConstructorID)389>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLCH>,(WebCore::DOMConstructorID)389>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSOKLabConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLab>,(WebCore::DOMConstructorID)390>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLab>,(WebCore::DOMConstructorID)390>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSRGBConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRGB>,(WebCore::DOMConstructorID)391>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRGB>,(WebCore::DOMConstructorID)391>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_PaintRenderingContext2DConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaintRenderingContext2D>,(WebCore::DOMConstructorID)641>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaintRenderingContext2D>,(WebCore::DOMConstructorID)641>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_PaintWorkletGlobalScopeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaintWorkletGlobalScope>,(WebCore::DOMConstructorID)917>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaintWorkletGlobalScope>,(WebCore::DOMConstructorID)917>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_ReadableByteStreamControllerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1720);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSReadableByteStreamController>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSReadableByteStreamController>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1720) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_ReadableStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSReadableStream>,(WebCore::DOMConstructorID)216>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSReadableStream>,(WebCore::DOMConstructorID)216>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_ReadableStreamBYOBReaderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1736);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSReadableStreamBYOBReader>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSReadableStreamBYOBReader>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1736) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_ReadableStreamBYOBRequestConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1744);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSReadableStreamBYOBRequest>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSReadableStreamBYOBRequest>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1744) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_ReadableStreamDefaultControllerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1752);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSReadableStreamDefaultController>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSReadableStreamDefaultController>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1752) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_ReadableStreamDefaultReaderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1760);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSReadableStreamDefaultReader>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSReadableStreamDefaultReader>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1760) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_TransformStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTransformStream>,(WebCore::DOMConstructorID)223>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTransformStream>,(WebCore::DOMConstructorID)223>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_TransformStreamDefaultControllerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1792);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSTransformStreamDefaultController>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSTransformStreamDefaultController>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1792) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_WritableStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWritableStream>,(WebCore::DOMConstructorID)225>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWritableStream>,(WebCore::DOMConstructorID)225>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_WritableStreamDefaultControllerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1808);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSWritableStreamDefaultController>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSWritableStreamDefaultController>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1808) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_WritableStreamDefaultWriterConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1816);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSWritableStreamDefaultWriter>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSWritableStreamDefaultWriter>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1816) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_AbortSignalConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAbortSignal>,(WebCore::DOMConstructorID)412>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAbortSignal>,(WebCore::DOMConstructorID)412>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaintWorkletGlobalScope>,(WebCore::DOMConstructorID)917>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7336);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkletGlobalScope>,(WebCore::DOMConstructorID)919>(a1, a2);
  v7 = v6;
  LODWORD(v21) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v21, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaintWorkletGlobalScope>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v20);
    v10[2848] = v2 + (int)v20;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v21);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x30);
  if (!v17)
    v17 = *(_QWORD *)(a2 + 16);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7336) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPaintWorkletGlobalScopeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPaintWorkletGlobalScopePrototype::s_info != (char **)(16
                                                                       * *(unsigned int *)(16
                                                                                         * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                         + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaintWorkletGlobalScope>,(WebCore::DOMConstructorID)917>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsPaintWorkletGlobalScope_devicePixelRatio(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  double v9;
  uint64_t v10;
  WebCore::LocalDOMWindow *v11;
  uint64_t v12;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v14 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSPaintWorkletGlobalScope::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  Object = *(_QWORD *)(Object + 16);
  v3 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSPaintWorkletGlobalScope::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v8 = *(_QWORD *)(*(_QWORD *)(Object + 3400) + 432);
  v9 = 1.0;
  if (v8)
  {
    v10 = *(_QWORD *)(v8 + 8);
    if (v10)
    {
      v11 = *(WebCore::LocalDOMWindow **)(v10 + 696);
      if (v11)
        v9 = WebCore::LocalDOMWindow::devicePixelRatio(v11);
    }
  }
  if ((*(_QWORD *)&v9 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v12 = (int)v9, v9 == (double)(int)v12)
    && ((_DWORD)v12 || (*(_QWORD *)&v9 & 0x8000000000000000) == 0))
  {
    return v12 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v9 + 0x2000000000000;
  }
}

uint64_t WebCore::jsPaintWorkletGlobalScope_ByteLengthQueuingStrategyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1704);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSByteLengthQueuingStrategy>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSByteLengthQueuingStrategy>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1704) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CountQueuingStrategyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1712);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSCountQueuingStrategy>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSCountQueuingStrategy>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 1712) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSKeywordValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSKeywordValue>,(WebCore::DOMConstructorID)374>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSKeywordValue>,(WebCore::DOMConstructorID)374>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSNumericValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericValue>,(WebCore::DOMConstructorID)375>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericValue>,(WebCore::DOMConstructorID)375>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSVariableReferenceValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOMVariableReferenceValue>,(WebCore::DOMConstructorID)376>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOMVariableReferenceValue>,(WebCore::DOMConstructorID)376>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSImageValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleImageValue>,(WebCore::DOMConstructorID)377>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleImageValue>,(WebCore::DOMConstructorID)377>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSStyleValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSUnitValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnitValue>,(WebCore::DOMConstructorID)379>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnitValue>,(WebCore::DOMConstructorID)379>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSUnparsedValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnparsedValue>,(WebCore::DOMConstructorID)380>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnparsedValue>,(WebCore::DOMConstructorID)380>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_StylePropertyMapReadOnlyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSStylePropertyMapReadOnly>,(WebCore::DOMConstructorID)382>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSStylePropertyMapReadOnly>,(WebCore::DOMConstructorID)382>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSMathClampConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathClamp>,(WebCore::DOMConstructorID)392>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathClamp>,(WebCore::DOMConstructorID)392>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSMathInvertConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathInvert>,(WebCore::DOMConstructorID)393>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathInvert>,(WebCore::DOMConstructorID)393>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSMathMaxConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMax>,(WebCore::DOMConstructorID)394>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMax>,(WebCore::DOMConstructorID)394>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSMathMinConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMin>,(WebCore::DOMConstructorID)395>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMin>,(WebCore::DOMConstructorID)395>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSMathNegateConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathNegate>,(WebCore::DOMConstructorID)396>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathNegate>,(WebCore::DOMConstructorID)396>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSMathProductConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathProduct>,(WebCore::DOMConstructorID)397>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathProduct>,(WebCore::DOMConstructorID)397>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSMathSumConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathSum>,(WebCore::DOMConstructorID)398>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathSum>,(WebCore::DOMConstructorID)398>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSMathValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSNumericArrayConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericArray>,(WebCore::DOMConstructorID)400>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericArray>,(WebCore::DOMConstructorID)400>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSMatrixComponentConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMatrixComponent>,(WebCore::DOMConstructorID)401>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMatrixComponent>,(WebCore::DOMConstructorID)401>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSPerspectiveConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSPerspective>,(WebCore::DOMConstructorID)402>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSPerspective>,(WebCore::DOMConstructorID)402>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSRotateConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRotate>,(WebCore::DOMConstructorID)403>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRotate>,(WebCore::DOMConstructorID)403>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSScaleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSScale>,(WebCore::DOMConstructorID)404>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSScale>,(WebCore::DOMConstructorID)404>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSSkewConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkew>,(WebCore::DOMConstructorID)405>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkew>,(WebCore::DOMConstructorID)405>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSSkewXConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewX>,(WebCore::DOMConstructorID)406>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewX>,(WebCore::DOMConstructorID)406>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSSkewYConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewY>,(WebCore::DOMConstructorID)407>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewY>,(WebCore::DOMConstructorID)407>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSTransformComponentConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSTransformValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTransformValue>,(WebCore::DOMConstructorID)409>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTransformValue>,(WebCore::DOMConstructorID)409>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CSSTranslateConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTranslate>,(WebCore::DOMConstructorID)410>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTranslate>,(WebCore::DOMConstructorID)410>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_AbortControllerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSAbortController>,(WebCore::DOMConstructorID)411>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSAbortController>,(WebCore::DOMConstructorID)411>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_CustomEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  JSC::JSCell *v12;
  uint64_t Structure;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v14 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSPaintWorkletGlobalScope::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 3392);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    v12 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(v11, v4);
    Structure = WebCore::JSDOMConstructor<WebCore::JSCustomEvent>::createStructure((uint64_t *)v11, v4, v12);
    v10 = WebCore::JSDOMConstructor<WebCore::JSCustomEvent>::create(v11, Structure, (JSC::VM *)v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 3392) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_ErrorEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSErrorEvent>,(WebCore::DOMConstructorID)447>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSErrorEvent>,(WebCore::DOMConstructorID)447>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_EventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_EventTargetConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_PromiseRejectionEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPromiseRejectionEvent>,(WebCore::DOMConstructorID)476>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPromiseRejectionEvent>,(WebCore::DOMConstructorID)476>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_TextDecoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTextDecoder>,(WebCore::DOMConstructorID)482>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTextDecoder>,(WebCore::DOMConstructorID)482>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_TextDecoderStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 3864);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSTextDecoderStream>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSTextDecoderStream>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 3864) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_TextEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTextEncoder>,(WebCore::DOMConstructorID)485>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTextEncoder>,(WebCore::DOMConstructorID)485>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_TextEncoderStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 3888);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSTextEncoderStream>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMBuiltinConstructor<WebCore::JSTextEncoderStream>::create(v11, Structure, v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 3888) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_URLConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMURL>,(WebCore::DOMConstructorID)507>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMURL>,(WebCore::DOMConstructorID)507>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_URLSearchParamsConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSURLSearchParams>,(WebCore::DOMConstructorID)598>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSURLSearchParams>,(WebCore::DOMConstructorID)598>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_PerformanceConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformance>,(WebCore::DOMConstructorID)727>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformance>,(WebCore::DOMConstructorID)727>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_PerformanceEntryConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceEntry>,(WebCore::DOMConstructorID)728>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceEntry>,(WebCore::DOMConstructorID)728>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_PerformanceMarkConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPerformanceMark>,(WebCore::DOMConstructorID)729>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPerformanceMark>,(WebCore::DOMConstructorID)729>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_PerformanceMeasureConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceMeasure>,(WebCore::DOMConstructorID)730>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceMeasure>,(WebCore::DOMConstructorID)730>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_PerformanceObserverConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t Structure;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSPaintWorkletGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 5864);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    Structure = WebCore::JSDOMConstructor<WebCore::JSPerformanceObserver>::createStructure((uint64_t *)v11, v4, *(JSC::JSCell **)(v4 + 664));
    v10 = WebCore::JSDOMConstructor<WebCore::JSPerformanceObserver>::create(v11, Structure, (JSC::VM *)v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 5864) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsPaintWorkletGlobalScope_PerformanceObserverEntryListConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceObserverEntryList>,(WebCore::DOMConstructorID)734>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceObserverEntryList>,(WebCore::DOMConstructorID)734>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_PerformanceResourceTimingConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceResourceTiming>,(WebCore::DOMConstructorID)736>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceResourceTiming>,(WebCore::DOMConstructorID)736>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsPaintWorkletGlobalScope_PerformanceServerTimingConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSPaintWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceServerTiming>,(WebCore::DOMConstructorID)737>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSPaintWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSPaintWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceServerTiming>,(WebCore::DOMConstructorID)737>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::JSPaintWorkletGlobalScope::subspaceForImpl(WebCore::JSPaintWorkletGlobalScope *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 7416);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 7416);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, v6 + 272, 3408, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 7416);
    *(_QWORD *)(v8 + 7416) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 7416);
  *(_QWORD *)(v3 + 7416) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPannerNode>::construct(JSC *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  int v9;
  unsigned int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char **v19;
  BOOL v20;
  JSCell *v22;
  uint64_t v23;
  JSC::JSCell *v24;
  uint64_t Object;
  JSC::Structure *v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned __int8 v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  int v38;
  float v39;
  float v40;
  double v41;
  uint64_t v42;
  double v43;
  float v44;
  float v45;
  uint64_t v46;
  float v47;
  float v48;
  double v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  unint64_t v52;
  char v53;
  WebCore::AudioNode *v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  unint64_t v57;
  char v58;
  WebCore::AudioNode *v59;
  WTF::StringImpl *v60;
  WTF::StringImpl *v61;
  WebCore::AudioNode *v62;
  double v63;
  JSC::VM *v64;
  WTF::StringImpl *v65;
  WTF::StringImpl *v66;
  WebCore::AudioNode *v67;
  JSC::VM *v68;
  WTF::StringImpl *v69;
  WTF::StringImpl *v70;
  WebCore::AudioNode *v71;
  double v72;
  JSC::VM *v73;
  WTF::StringImpl *v74;
  WTF::StringImpl *v75;
  unint64_t v76;
  WebCore::AudioNode *v77;
  uint64_t v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  WebCore::AudioNode *v81;
  double v82;
  JSC::VM *v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v85;
  WebCore::AudioNode *v86;
  JSC::VM *v87;
  double v88;
  WTF::StringImpl *v89;
  WTF::StringImpl *v90;
  WebCore::AudioNode *v91;
  JSC::VM *v92;
  double v93;
  WTF::StringImpl *v94;
  WTF::StringImpl *v95;
  WebCore::AudioNode *v96;
  JSC::VM *v97;
  double v98;
  WTF::StringImpl *v99;
  WTF::StringImpl *v100;
  unint64_t v101;
  WebCore::AudioNode *v102;
  WTF::StringImpl *v103;
  WTF::StringImpl *v104;
  WebCore::AudioNode *v105;
  JSC::VM *v106;
  double v107;
  WTF::StringImpl *v108;
  WTF::StringImpl *v109;
  WebCore::AudioNode *v110;
  JSC::VM *v111;
  double v112;
  WTF::StringImpl *v113;
  WTF::StringImpl *v114;
  WebCore::AudioNode *v115;
  JSC::VM *v116;
  JSC::VM *v117;
  double v118;
  WTF::StringImpl *v119;
  WTF::StringImpl *v120;
  WebCore::AudioNode *v121;
  JSC::VM *v122;
  WTF::StringImpl *v123;
  WTF::StringImpl *v124;
  WebCore::AudioNode *v125;
  JSC::VM *v126;
  WebCore::JSDOMGlobalObject *v127;
  JSC::VM *v128;
  WebCore::AudioNode *v129;
  WebCore::AudioNode *v130;
  JSC::JSCell *v131;
  JSC::JSGlobalObject *v132;
  JSC::JSObject *v133;
  JSC::JSGlobalObject *v134;
  JSC::VM *v135;
  JSC::JSObject *v136;
  JSC::Structure *v137;
  JSC::VM *FunctionRealm;
  uint64_t v139;
  unsigned int v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  char **v145;
  int v146;
  JSC::JSCell *v147;
  unint64_t Structure;
  JSC::Structure *v149;
  JSC::JSCell *v150;
  uint64_t v151;
  unint64_t SubclassStructure;
  JSValue v154;
  WTF::StringImpl *v155;
  WTF::StringImpl *v156;
  JSValue v157;
  char hasExceptionsAfterHandlingTraps;
  double v159;
  double v160;
  double v161;
  double v162;
  double v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  double v169;
  uint64_t v170;
  double v171;
  unsigned int v172;
  uint64_t v173;
  int v174;
  double v175;
  uint64_t v176;
  int v177;
  char v178;
  unsigned int v179;
  char v180;
  unsigned __int8 v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  WebCore::AudioNode *v185;
  WTF::StringImpl *v186;
  int v187;
  char v188;
  __int16 v189;
  char v190;
  int v191;
  int v192;
  float v193;
  float v194;
  float v195;
  float v196;
  float v197;
  float v198;
  double v199;
  uint64_t v200;
  double v201;
  uint64_t v202;
  double v203;
  double v204;
  WebCore::AudioNode *v205;
  WTF::StringImpl *v206;
  int v207;
  __int16 v208;
  char v209;
  __int16 v210;
  char v211;
  __int16 v212;
  char v213;
  JSC::VM *v214;

  v12 = *((_QWORD *)this + 7);
  v13 = *(int *)(a2 + 32);
  if ((_DWORD)v13 == 1)
  {
    v154.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v12, this, v154);
  }
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 48);
  v185 = (WebCore::AudioNode *)*((_QWORD *)this + 7);
  if ((v16 & 0xFFFE000000000002) != 0)
    goto LABEL_13;
  v17 = *(unsigned int *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C);
  v18 = *(_DWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C) != 0;
  v19 = (char **)(16 * v17);
  if ((_DWORD)v17)
    v20 = v19 == &WebCore::JSBaseAudioContext::s_info;
  else
    v20 = 1;
  if (!v20)
  {
    do
    {
      v19 = (char **)v19[2];
      v18 = v19 != 0;
    }
    while (v19 != &WebCore::JSBaseAudioContext::s_info && v19 != 0);
  }
  if (!v18)
  {
LABEL_13:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v185, 0, "context", 8, "PannerNode", 11, a8, 0, 0, "BaseAudioContext", 17);
    return 0;
  }
  v23 = *(_QWORD *)(v16 + 24);
  if ((unint64_t)(v13 - 3) < 0xFFFFFFFFFFFFFFFELL)
  {
    v24 = *(JSC::JSCell **)(a2 + 56);
    v214 = (JSC::VM *)v12;
    if (((unint64_t)v24 & 0xFFFFFFFFFFFFFFF7) != 2)
    {
      v183 = v23;
      v184 = v15;
      if (((unint64_t)v24 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v24)) == 0)
      {
        JSC::throwTypeError();
        return 0;
      }
      v26 = (JSC::Structure *)Object;
      WTF::AtomStringImpl::addLiteral();
      v28 = JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v185)
      {
        if (*(_DWORD *)v185 == 2)
          WTF::StringImpl::destroy(v185, v27);
        else
          *(_DWORD *)v185 -= 2;
      }
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      if (v28 == 10)
      {
        v29 = 0;
        v181 = 0;
      }
      else
      {
        WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v28, &v185);
        if (HIDWORD(v185))
          return 0;
        v181 = v185;
        v172 = v185 >> 8;
        v29 = 1;
      }
      WTF::AtomStringImpl::addLiteral();
      v50 = v185;
      v52 = JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v50)
      {
        if (*(_DWORD *)v50 == 2)
          WTF::StringImpl::destroy(v50, v51);
        else
          *(_DWORD *)v50 -= 2;
      }
      v182 = v29;
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      if (v52 == 10)
      {
        v53 = 0;
        LOBYTE(v33) = 0;
      }
      else
      {
        v185 = (WebCore::AudioNode *)*((_QWORD *)this + 7);
        v54 = v185;
        v33 = WebCore::parseEnumeration<WebCore::ChannelCountMode>(this, v52);
        if (*((_DWORD *)v54 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v54) & 1) != 0)
          return 0;
        if ((v33 & 0xFF00000000) == 0)
          goto LABEL_274;
        v10 = v33 >> 8;
        v53 = 1;
      }
      WTF::AtomStringImpl::addLiteral();
      v55 = v185;
      v57 = JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v55)
      {
        if (*(_DWORD *)v55 == 2)
          WTF::StringImpl::destroy(v55, v56);
        else
          *(_DWORD *)v55 -= 2;
      }
      v179 = v10;
      v180 = v53;
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      if (v57 == 10)
      {
        v58 = 0;
        LOBYTE(v35) = 0;
      }
      else
      {
        v185 = (WebCore::AudioNode *)*((_QWORD *)this + 7);
        v59 = v185;
        v35 = WebCore::parseEnumeration<WebCore::ChannelInterpretation>(this, v57);
        if (*((_DWORD *)v59 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v59) & 1) != 0)
          return 0;
        if ((v35 & 0xFF00000000) == 0)
          goto LABEL_274;
        LODWORD(v24) = v35 >> 8;
        v58 = 1;
      }
      WTF::AtomStringImpl::addLiteral();
      v60 = v185;
      v62 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v60)
      {
        if (*(_DWORD *)v60 == 2)
          WTF::StringImpl::destroy(v60, v61);
        else
          *(_DWORD *)v60 -= 2;
      }
      v177 = (int)v24;
      v178 = v58;
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      if (v62 == (WebCore::AudioNode *)10)
      {
        v63 = 360.0;
      }
      else
      {
        v185 = v62;
        v64 = (JSC::VM *)*((_QWORD *)this + 7);
        v205 = v64;
        if ((unint64_t)v62 >= 0xFFFE000000000000)
        {
          v63 = (double)(int)v62;
        }
        else if ((unint64_t)v62 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
          v63 = v159;
        }
        else
        {
          *(_QWORD *)&v63 = (char *)v62 - 0x2000000000000;
        }
        if (*((_DWORD *)v64 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v64) & 1) != 0)
          return 0;
        if ((*(_QWORD *)&v63 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
          goto LABEL_272;
      }
      WTF::AtomStringImpl::addLiteral();
      v65 = v185;
      v67 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v65)
      {
        if (*(_DWORD *)v65 == 2)
          WTF::StringImpl::destroy(v65, v66);
        else
          *(_DWORD *)v65 -= 2;
      }
      v176 = *(_QWORD *)&v63;
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      if (v67 == (WebCore::AudioNode *)10)
      {
        v43 = 360.0;
      }
      else
      {
        v185 = v67;
        v68 = (JSC::VM *)*((_QWORD *)this + 7);
        v205 = v68;
        if ((unint64_t)v67 >= 0xFFFE000000000000)
        {
          v43 = (double)(int)v67;
        }
        else if ((unint64_t)v67 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
          v43 = v160;
        }
        else
        {
          *(_QWORD *)&v43 = (char *)v67 - 0x2000000000000;
        }
        if (*((_DWORD *)v68 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v68) & 1) != 0)
          return 0;
        if ((*(_QWORD *)&v43 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
          goto LABEL_272;
      }
      WTF::AtomStringImpl::addLiteral();
      v69 = v185;
      v71 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v69)
      {
        if (*(_DWORD *)v69 == 2)
          WTF::StringImpl::destroy(v69, v70);
        else
          *(_DWORD *)v69 -= 2;
      }
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      v72 = 0.0;
      if (v71 != (WebCore::AudioNode *)10)
      {
        v185 = v71;
        v73 = (JSC::VM *)*((_QWORD *)this + 7);
        v205 = v73;
        if ((unint64_t)v71 >= 0xFFFE000000000000)
        {
          v72 = (double)(int)v71;
        }
        else if ((unint64_t)v71 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
          v72 = v161;
        }
        else
        {
          *(_QWORD *)&v72 = (char *)v71 - 0x2000000000000;
        }
        if (*((_DWORD *)v73 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v73) & 1) != 0)
          return 0;
        if ((*(_QWORD *)&v72 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
          goto LABEL_272;
      }
      WTF::AtomStringImpl::addLiteral();
      v74 = v185;
      v76 = JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v74)
      {
        if (*(_DWORD *)v74 == 2)
          WTF::StringImpl::destroy(v74, v75);
        else
          *(_DWORD *)v74 -= 2;
      }
      v175 = v72;
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      if (v76 == 10)
      {
        v174 = 1;
      }
      else
      {
        v185 = (WebCore::AudioNode *)*((_QWORD *)this + 7);
        v77 = v185;
        v78 = WebCore::parseEnumeration<WebCore::DistanceModelType>(this, v76);
        if (*((_DWORD *)v77 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v77) & 1) != 0)
          return 0;
        if ((v78 & 0xFF00000000) == 0)
          goto LABEL_274;
        v174 = v78;
      }
      WTF::AtomStringImpl::addLiteral();
      v79 = v185;
      v81 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v79)
      {
        if (*(_DWORD *)v79 == 2)
          WTF::StringImpl::destroy(v79, v80);
        else
          *(_DWORD *)v79 -= 2;
      }
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      if (v81 == (WebCore::AudioNode *)10)
      {
        v82 = 10000.0;
      }
      else
      {
        v185 = v81;
        v83 = (JSC::VM *)*((_QWORD *)this + 7);
        v205 = v83;
        if ((unint64_t)v81 >= 0xFFFE000000000000)
        {
          v82 = (double)(int)v81;
        }
        else if ((unint64_t)v81 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
          v82 = v162;
        }
        else
        {
          *(_QWORD *)&v82 = (char *)v81 - 0x2000000000000;
        }
        if (*((_DWORD *)v83 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v83) & 1) != 0)
          return 0;
        if ((*(_QWORD *)&v82 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
          goto LABEL_272;
      }
      WTF::AtomStringImpl::addLiteral();
      v84 = v185;
      v86 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v84)
      {
        if (*(_DWORD *)v84 == 2)
          WTF::StringImpl::destroy(v84, v85);
        else
          *(_DWORD *)v84 -= 2;
      }
      v173 = *(_QWORD *)&v82;
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      v39 = 1.0;
      if (v86 != (WebCore::AudioNode *)10)
      {
        v185 = v86;
        v87 = (JSC::VM *)*((_QWORD *)this + 7);
        v205 = v87;
        if ((unint64_t)v86 >= 0xFFFE000000000000)
        {
          v88 = (double)(int)v86;
        }
        else if ((unint64_t)v86 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
          v88 = v163;
        }
        else
        {
          *(_QWORD *)&v88 = (char *)v86 - 0x2000000000000;
        }
        if (*((_DWORD *)v87 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v87) & 1) != 0)
          return 0;
        if ((*(_QWORD *)&v88 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || v88 < -3.40282347e38
          || v88 > 3.40282347e38)
        {
          goto LABEL_272;
        }
        v39 = v88;
      }
      WTF::AtomStringImpl::addLiteral();
      v89 = v185;
      v91 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v89)
      {
        if (*(_DWORD *)v89 == 2)
          WTF::StringImpl::destroy(v89, v90);
        else
          *(_DWORD *)v89 -= 2;
      }
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      v47 = 0.0;
      if (v91 != (WebCore::AudioNode *)10)
      {
        v185 = v91;
        v92 = (JSC::VM *)*((_QWORD *)this + 7);
        v205 = v92;
        if ((unint64_t)v91 >= 0xFFFE000000000000)
        {
          v93 = (double)(int)v91;
        }
        else if ((unint64_t)v91 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
          v93 = v164;
        }
        else
        {
          *(_QWORD *)&v93 = (char *)v91 - 0x2000000000000;
        }
        if (*((_DWORD *)v92 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v92) & 1) != 0)
          return 0;
        if ((*(_QWORD *)&v93 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || v93 < -3.40282347e38
          || v93 > 3.40282347e38)
        {
          goto LABEL_272;
        }
        v47 = v93;
      }
      WTF::AtomStringImpl::addLiteral();
      v94 = v185;
      v96 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v94)
      {
        if (*(_DWORD *)v94 == 2)
          WTF::StringImpl::destroy(v94, v95);
        else
          *(_DWORD *)v94 -= 2;
      }
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      v45 = 0.0;
      if (v96 != (WebCore::AudioNode *)10)
      {
        v185 = v96;
        v97 = (JSC::VM *)*((_QWORD *)this + 7);
        v205 = v97;
        if ((unint64_t)v96 >= 0xFFFE000000000000)
        {
          v98 = (double)(int)v96;
        }
        else if ((unint64_t)v96 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
          v98 = v165;
        }
        else
        {
          *(_QWORD *)&v98 = (char *)v96 - 0x2000000000000;
        }
        if (*((_DWORD *)v97 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v97) & 1) != 0)
          return 0;
        if ((*(_QWORD *)&v98 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || v98 < -3.40282347e38
          || v98 > 3.40282347e38)
        {
          goto LABEL_272;
        }
        v45 = v98;
      }
      WTF::AtomStringImpl::addLiteral();
      v99 = v185;
      v101 = JSC::JSObject::get(v26, this, (unint64_t)v185);
      if (v99)
      {
        if (*(_DWORD *)v99 == 2)
          WTF::StringImpl::destroy(v99, v100);
        else
          *(_DWORD *)v99 -= 2;
      }
      if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
        return 0;
      if (v101 == 10)
      {
        LODWORD(v36) = 0;
LABEL_144:
        WTF::AtomStringImpl::addLiteral();
        v103 = v185;
        v105 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
        if (v103)
        {
          if (*(_DWORD *)v103 == 2)
            WTF::StringImpl::destroy(v103, v104);
          else
            *(_DWORD *)v103 -= 2;
        }
        if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
          return 0;
        v44 = 0.0;
        if (v105 != (WebCore::AudioNode *)10)
        {
          v185 = v105;
          v106 = (JSC::VM *)*((_QWORD *)this + 7);
          v205 = v106;
          if ((unint64_t)v105 >= 0xFFFE000000000000)
          {
            v107 = (double)(int)v105;
          }
          else if ((unint64_t)v105 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
            v107 = v166;
          }
          else
          {
            *(_QWORD *)&v107 = (char *)v105 - 0x2000000000000;
          }
          if (*((_DWORD *)v106 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v106) & 1) != 0)
            return 0;
          if ((*(_QWORD *)&v107 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
            || v107 < -3.40282347e38
            || v107 > 3.40282347e38)
          {
            goto LABEL_272;
          }
          v44 = v107;
        }
        WTF::AtomStringImpl::addLiteral();
        v108 = v185;
        v110 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
        if (v108)
        {
          if (*(_DWORD *)v108 == 2)
            WTF::StringImpl::destroy(v108, v109);
          else
            *(_DWORD *)v108 -= 2;
        }
        if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
          return 0;
        v48 = 0.0;
        if (v110 != (WebCore::AudioNode *)10)
        {
          v185 = v110;
          v111 = (JSC::VM *)*((_QWORD *)this + 7);
          v205 = v111;
          if ((unint64_t)v110 >= 0xFFFE000000000000)
          {
            v112 = (double)(int)v110;
          }
          else if ((unint64_t)v110 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
            v112 = v167;
          }
          else
          {
            *(_QWORD *)&v112 = (char *)v110 - 0x2000000000000;
          }
          if (*((_DWORD *)v111 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v111) & 1) != 0)
            return 0;
          if ((*(_QWORD *)&v112 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
            || v112 < -3.40282347e38
            || v112 > 3.40282347e38)
          {
            goto LABEL_272;
          }
          v48 = v112;
        }
        WTF::AtomStringImpl::addLiteral();
        v113 = v185;
        v115 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
        if (v113)
        {
          if (*(_DWORD *)v113 == 2)
            WTF::StringImpl::destroy(v113, v114);
          else
            *(_DWORD *)v113 -= 2;
        }
        v116 = v214;
        if (*((_DWORD *)v214 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v214) & 1) != 0)
          return 0;
        v40 = 0.0;
        if (v115 != (WebCore::AudioNode *)10)
        {
          v185 = v115;
          v117 = (JSC::VM *)*((_QWORD *)this + 7);
          v205 = v117;
          if ((unint64_t)v115 >= 0xFFFE000000000000)
          {
            v118 = (double)(int)v115;
          }
          else if ((unint64_t)v115 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
            v118 = v168;
          }
          else
          {
            *(_QWORD *)&v118 = (char *)v115 - 0x2000000000000;
          }
          if (*((_DWORD *)v117 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v117) & 1) != 0)
            return 0;
          if ((*(_QWORD *)&v118 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
            || v118 < -3.40282347e38
            || v118 > 3.40282347e38)
          {
            goto LABEL_272;
          }
          v40 = v118;
        }
        WTF::AtomStringImpl::addLiteral();
        v119 = v185;
        v121 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
        if (v119)
        {
          if (*(_DWORD *)v119 == 2)
            WTF::StringImpl::destroy(v119, v120);
          else
            *(_DWORD *)v119 -= 2;
        }
        if (*((_DWORD *)v116 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v116) & 1) != 0)
          return 0;
        v49 = 1.0;
        if (v121 == (WebCore::AudioNode *)10)
          goto LABEL_202;
        v185 = v121;
        v122 = (JSC::VM *)*((_QWORD *)this + 7);
        v205 = v122;
        if ((unint64_t)v121 >= 0xFFFE000000000000)
        {
          v49 = (double)(int)v121;
        }
        else if ((unint64_t)v121 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
          v49 = v169;
        }
        else
        {
          *(_QWORD *)&v49 = (char *)v121 - 0x2000000000000;
        }
        if (*((_DWORD *)v122 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v122) & 1) != 0)
          return 0;
        if ((*(_QWORD *)&v49 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
        {
LABEL_202:
          WTF::AtomStringImpl::addLiteral();
          v123 = v185;
          v125 = (WebCore::AudioNode *)JSC::JSObject::get(v26, this, (unint64_t)v185);
          if (v123)
          {
            if (*(_DWORD *)v123 == 2)
              WTF::StringImpl::destroy(v123, v124);
            else
              *(_DWORD *)v123 -= 2;
          }
          if (*((_DWORD *)v116 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v116) & 1) != 0)
            return 0;
          v41 = 1.0;
          if (v125 == (WebCore::AudioNode *)10)
            goto LABEL_203;
          v185 = v125;
          v126 = (JSC::VM *)*((_QWORD *)this + 7);
          v205 = v126;
          if ((unint64_t)v125 >= 0xFFFE000000000000)
          {
            v41 = (double)(int)v125;
          }
          else if ((unint64_t)v125 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v185, this);
          }
          else
          {
            *(_QWORD *)&v41 = (char *)v125 - 0x2000000000000;
          }
          if (*((_DWORD *)v126 + 20))
          {
            v171 = v41;
            hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v126);
            v41 = v171;
            if ((hasExceptionsAfterHandlingTraps & 1) != 0)
              return 0;
          }
          if ((*(_QWORD *)&v41 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
          {
LABEL_203:
            v23 = v183;
            v15 = v184;
            v31 = v181;
            v30 = v182;
            LODWORD(v19) = v172;
            v8 = v179;
            v32 = v180;
            v9 = v177;
            v34 = v178;
            v37 = v175;
            v46 = v176;
            v38 = v174;
            v42 = v173;
            goto LABEL_204;
          }
        }
LABEL_272:
        JSC::throwTypeError();
        return 0;
      }
      v185 = (WebCore::AudioNode *)*((_QWORD *)this + 7);
      v102 = v185;
      v36 = WebCore::parseEnumeration<WebCore::PanningModelType>(this, v101);
      if (*((_DWORD *)v102 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v102) & 1) != 0)
        return 0;
      if ((v36 & 0xFF00000000) != 0)
        goto LABEL_144;
LABEL_274:
      JSC::throwTypeError();
      return 0;
    }
  }
  v30 = 0;
  v31 = 0;
  v32 = 0;
  LOBYTE(v33) = 0;
  v34 = 0;
  LOBYTE(v35) = 0;
  LODWORD(v36) = 0;
  v37 = 0.0;
  v38 = 1;
  v39 = 1.0;
  v40 = 0.0;
  v41 = 1.0;
  v42 = 0x40C3880000000000;
  v43 = 360.0;
  v44 = 0.0;
  v45 = 0.0;
  v46 = 0x4076800000000000;
  v47 = 0.0;
  v48 = 0.0;
  v49 = 1.0;
LABEL_204:
  *(_WORD *)((char *)&v185 + 5) = v212;
  HIBYTE(v185) = v213;
  *(_WORD *)((char *)&v186 + 5) = v210;
  HIBYTE(v186) = v211;
  v189 = v208;
  v190 = v209;
  LODWORD(v185) = v31 | ((_DWORD)v19 << 8);
  BYTE4(v185) = v30;
  LODWORD(v186) = v33 | (v8 << 8);
  BYTE4(v186) = v32;
  v187 = v35 | (v9 << 8);
  v188 = v34;
  v191 = v36;
  v192 = v38;
  v193 = v44;
  v194 = v48;
  v195 = v40;
  v196 = v39;
  v197 = v47;
  v198 = v45;
  v199 = v49;
  v200 = v42;
  v201 = v41;
  v202 = v46;
  v203 = v43;
  v204 = v37;
  WebCore::PannerNode::create((unsigned int *)(v23 - 32), (uint64_t)&v185, (uint64_t)&v205);
  if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
    goto LABEL_271;
  if (!v207)
  {
    v128 = *(JSC::VM **)(v15 + 40);
    v129 = v205;
    v205 = 0;
    v185 = v129;
    if (*(uint64_t (***)(WebCore::AudioNode *__hidden))v129 != off_1E336C170)
    {
      __break(0xC471u);
      JUMPOUT(0x194DC48BCLL);
    }
    v22 = (JSCell *)WebCore::createWrapper<WebCore::PannerNode,WebCore::PannerNode>(v128, (uint64_t *)&v185, v127);
    v130 = v185;
    v185 = 0;
    if (v130)
      WebCore::AudioNode::deref(v130);
    goto LABEL_209;
  }
  if (v207 == 1)
  {
    v155 = (WTF::StringImpl *)v205;
    LOBYTE(v185) = (_BYTE)v205;
    v156 = v206;
    v206 = 0;
    v186 = v156;
    if (!*(_QWORD *)(v12 + 16))
    {
      v157.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v205, (JSC::JSGlobalObject *)&v186);
      JSC::VM::throwException((JSC::VM *)v12, this, v157);
      v156 = v186;
    }
    v186 = 0;
    if (v156)
    {
      if (*(_DWORD *)v156 == 2)
        WTF::StringImpl::destroy(v156, v155);
      else
        *(_DWORD *)v156 -= 2;
    }
    v22 = 0;
LABEL_209:
    if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
    {
LABEL_271:
      v22 = 0;
LABEL_224:
      if (v207 != -1)
        ((void (*)(WebCore::AudioNode **, WebCore::AudioNode **))off_1E32CA9D0[v207])(&v185, &v205);
      return v22;
    }
    v131 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v131 & 0xFFFE000000000002) != 0
      || (v132 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v131)) == 0
      || (v134 = v132, v132 == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v135 = (JSC::VM *)*((_QWORD *)this + 7),
          FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, v132, v133),
          *((_DWORD *)v135 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
    {
LABEL_223:
      if (!*(_DWORD *)(v12 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) == 0)
        goto LABEL_224;
      goto LABEL_271;
    }
    v139 = *((_QWORD *)FunctionRealm + 412);
    if (v139)
    {
      v140 = *(_DWORD *)(v139 - 8);
      v141 = ((unint64_t)&WebCore::JSPannerNode::s_info + ~((_QWORD)&WebCore::JSPannerNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSPannerNode::s_info + ~((_QWORD)&WebCore::JSPannerNode::s_info << 32)) >> 22);
      v142 = 9 * ((v141 + ~(v141 << 13)) ^ ((v141 + ~(v141 << 13)) >> 8));
      v143 = (v142 ^ (v142 >> 15)) + ~((v142 ^ (v142 >> 15)) << 27);
      v144 = v140 & ((v143 >> 31) ^ v143);
      v145 = *(char ***)(v139 + 16 * v144);
      if (v145 == &WebCore::JSPannerNode::s_info)
      {
LABEL_219:
        v136 = *(JSC::JSObject **)(v139 + 16 * v144 + 8);
        if (v136)
        {
LABEL_221:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v134, v136, v137);
          if (!*((_DWORD *)v135 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) == 0)
            JSC::JSObject::setStructure(v22, v135, SubclassStructure);
          goto LABEL_223;
        }
      }
      else
      {
        v146 = 1;
        while (v145)
        {
          v144 = ((_DWORD)v144 + v146) & v140;
          v145 = *(char ***)(v139 + 16 * v144);
          ++v146;
          if (v145 == &WebCore::JSPannerNode::s_info)
            goto LABEL_219;
        }
      }
    }
    v147 = (JSC::JSCell *)WebCore::JSAudioNode::prototype(v135, FunctionRealm, v136);
    Structure = WebCore::JSPannerNodePrototype::createStructure((uint64_t *)v135, (uint64_t)FunctionRealm, v147);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v150 = (JSC::JSCell *)WebCore::JSPannerNodePrototype::create(v135, FunctionRealm, Structure, v149);
    v151 = WebCore::JSPannerNode::createStructure((uint64_t *)v135, (uint64_t)FunctionRealm, v150);
    v136 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v151, (uint64_t)&WebCore::JSPannerNode::s_info);
    goto LABEL_221;
  }
  v170 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSPannerNode::analyzeHeap(v170);
}

uint64_t WebCore::JSPannerNode::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSAudioNode::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSAudioNode::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSAudioNode::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPannerNodePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPannerNodePrototype::create(WebCore::JSPannerNodePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<17u>(this, (uint64_t)&WebCore::JSPannerNode::s_info, (uint64_t)&WebCore::JSPannerNodePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPannerNode>,(WebCore::DOMConstructorID)262>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2096);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioNode>,(WebCore::DOMConstructorID)237>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSPannerNode>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPannerNode::s_info + ~((_QWORD)&WebCore::JSPannerNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSPannerNode::s_info + ~((_QWORD)&WebCore::JSPannerNode::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPannerNode::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPannerNode::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSAudioNode::prototype((WebCore::JSAudioNode *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPannerNodePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSPannerNodePrototype::create((WebCore::JSPannerNodePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSPannerNode::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSPannerNode::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2096) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPannerNodeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPannerNodePrototype::s_info != (char **)(16
                                                          * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPannerNode>,(WebCore::DOMConstructorID)262>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPannerNode_panningModel(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(int *)(*((_QWORD *)a2 + 3) + 160);
  if ((_MergedGlobals_827[0] & 1) == 0)
  {
    qword_1EE336440 = (uint64_t)&_MergedGlobals_22;
    _MergedGlobals_22 += 2;
    dword_1ECE79160 += 2;
    qword_1EE336448 = (uint64_t)&dword_1ECE79160;
    _MergedGlobals_827[0] = 1;
  }
  v5 = *(_QWORD *)&_MergedGlobals_827[8 * v4 + 264];
  if (!v5)
    return *v3;
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_6:
      v8 = *(_QWORD *)(v2 + 64760);
      if (!v8 || v5 != *(_QWORD *)(v8 + 8))
      {
        v8 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_9;
    }
    v10 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_6;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v3;
  }
LABEL_9:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
  return v8;
}

BOOL WebCore::setJSPannerNode_panningModel(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPannerNode::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPannerNode::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::PanningModelType>(a1, (unint64_t)this);
  v11 = v10;
  v12 = BYTE4(v10);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v10))
      return 0;
    goto LABEL_14;
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v12)
  {
LABEL_14:
    WebCore::PannerNode::setPanningModelForBindings(v9, v11);
    return 1;
  }
  return result;
}

uint64_t WebCore::jsPannerNode_distanceModel(uint64_t a1, uint64_t a2)
{
  return WebCore::convertEnumerationToJS<WebCore::DistanceModelType>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(*(_QWORD *)(a2 + 24) + 176));
}

BOOL WebCore::setJSPannerNode_distanceModel(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned __int8 *v13;
  int v15;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPannerNode::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPannerNode::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::DistanceModelType>(a1, (unint64_t)this);
  v11 = v10;
  v12 = BYTE4(v10);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v10))
      return 0;
LABEL_14:
    v13 = (unsigned __int8 *)(v9 + 336);
    if (__ldaxr((unsigned __int8 *)(v9 + 336)))
    {
      __clrex();
    }
    else if (!__stxr(1u, v13))
    {
      goto LABEL_18;
    }
    MEMORY[0x19AEA534C](v9 + 336);
LABEL_18:
    if (*(_DWORD *)(v9 + 176) != v11)
    {
      *(_DWORD *)(v9 + 176) = v11;
      *(_BYTE *)(v9 + 180) = 1;
      if (*(_BYTE *)(v9 + 308))
        *(_BYTE *)(v9 + 308) = 0;
    }
    v15 = __ldxr(v13);
    if (v15 == 1)
    {
      if (!__stlxr(0, v13))
        return 1;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)(v9 + 336));
    return 1;
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v12)
    goto LABEL_14;
  return result;
}

unint64_t WebCore::jsPannerNode_refDistance(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 184);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSPannerNode_refDistance(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  unsigned __int8 *v12;
  int v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WTF::StringImpl *v19;
  double v20;
  WTF::StringImpl *v21;
  int v22[2];
  WTF::StringImpl *v23;
  uint64_t v24;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPannerNode::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPannerNode::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)v22 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v22, a1);
    v11 = v20;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  if (v11 < 0.0)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    LOBYTE(v22[0]) = 32;
    LOBYTE(v24) = 1;
    goto LABEL_31;
  }
  v12 = (unsigned __int8 *)(v10 + 336);
  if (__ldaxr((unsigned __int8 *)(v10 + 336)))
  {
    __clrex();
  }
  else if (!__stxr(1u, v12))
  {
    goto LABEL_23;
  }
  MEMORY[0x19AEA534C](v10 + 336);
LABEL_23:
  if (*(double *)(v10 + 184) != v11)
  {
    *(double *)(v10 + 184) = v11;
    if (*(_BYTE *)(v10 + 308))
      *(_BYTE *)(v10 + 308) = 0;
  }
  *(_QWORD *)v22 = 0;
  v23 = 0;
  v24 = 0;
  v14 = __ldxr(v12);
  if (v14 == 1)
  {
    if (!__stlxr(0, v12))
      goto LABEL_31;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)(v10 + 336));
LABEL_31:
  if ((_BYTE)v24)
  {
    v16 = (WTF::StringImpl *)LOBYTE(v22[0]);
    v17 = v23;
    v23 = 0;
    v21 = v17;
    if (!*(_QWORD *)(v4 + 16))
    {
      v18.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v22[0]), (JSC::JSGlobalObject *)&v21);
      JSC::VM::throwException((JSC::VM *)v4, a1, v18);
      v17 = v21;
    }
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    if ((_BYTE)v24)
    {
      v19 = v23;
      v23 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v16);
        else
          *(_DWORD *)v19 -= 2;
      }
    }
  }
  return 1;
}

unint64_t WebCore::jsPannerNode_maxDistance(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 192);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSPannerNode_maxDistance(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  unsigned __int8 *v12;
  int v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WTF::StringImpl *v19;
  double v20;
  WTF::StringImpl *v21;
  int v22[2];
  WTF::StringImpl *v23;
  uint64_t v24;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPannerNode::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPannerNode::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)v22 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v22, a1);
    v11 = v20;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  if (v11 <= 0.0)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    LOBYTE(v22[0]) = 32;
    LOBYTE(v24) = 1;
    goto LABEL_31;
  }
  v12 = (unsigned __int8 *)(v10 + 336);
  if (__ldaxr((unsigned __int8 *)(v10 + 336)))
  {
    __clrex();
  }
  else if (!__stxr(1u, v12))
  {
    goto LABEL_23;
  }
  MEMORY[0x19AEA534C](v10 + 336);
LABEL_23:
  if (*(double *)(v10 + 192) != v11)
  {
    *(double *)(v10 + 192) = v11;
    if (*(_BYTE *)(v10 + 308))
      *(_BYTE *)(v10 + 308) = 0;
  }
  *(_QWORD *)v22 = 0;
  v23 = 0;
  v24 = 0;
  v14 = __ldxr(v12);
  if (v14 == 1)
  {
    if (!__stlxr(0, v12))
      goto LABEL_31;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)(v10 + 336));
LABEL_31:
  if ((_BYTE)v24)
  {
    v16 = (WTF::StringImpl *)LOBYTE(v22[0]);
    v17 = v23;
    v23 = 0;
    v21 = v17;
    if (!*(_QWORD *)(v4 + 16))
    {
      v18.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v22[0]), (JSC::JSGlobalObject *)&v21);
      JSC::VM::throwException((JSC::VM *)v4, a1, v18);
      v17 = v21;
    }
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    if ((_BYTE)v24)
    {
      v19 = v23;
      v23 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v16);
        else
          *(_DWORD *)v19 -= 2;
      }
    }
  }
  return 1;
}

unint64_t WebCore::jsPannerNode_rolloffFactor(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 200);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSPannerNode_rolloffFactor(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  unsigned __int8 *v12;
  int v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WTF::StringImpl *v19;
  double v20;
  WTF::StringImpl *v21;
  int v22[2];
  WTF::StringImpl *v23;
  uint64_t v24;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPannerNode::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPannerNode::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)v22 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v22, a1);
    v11 = v20;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  if (v11 < 0.0)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    LOBYTE(v22[0]) = 32;
    LOBYTE(v24) = 1;
    goto LABEL_31;
  }
  v12 = (unsigned __int8 *)(v10 + 336);
  if (__ldaxr((unsigned __int8 *)(v10 + 336)))
  {
    __clrex();
  }
  else if (!__stxr(1u, v12))
  {
    goto LABEL_23;
  }
  MEMORY[0x19AEA534C](v10 + 336);
LABEL_23:
  if (*(double *)(v10 + 200) != v11)
  {
    *(double *)(v10 + 200) = v11;
    if (*(_BYTE *)(v10 + 308))
      *(_BYTE *)(v10 + 308) = 0;
  }
  *(_QWORD *)v22 = 0;
  v23 = 0;
  v24 = 0;
  v14 = __ldxr(v12);
  if (v14 == 1)
  {
    if (!__stlxr(0, v12))
      goto LABEL_31;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)(v10 + 336));
LABEL_31:
  if ((_BYTE)v24)
  {
    v16 = (WTF::StringImpl *)LOBYTE(v22[0]);
    v17 = v23;
    v23 = 0;
    v21 = v17;
    if (!*(_QWORD *)(v4 + 16))
    {
      v18.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v22[0]), (JSC::JSGlobalObject *)&v21);
      JSC::VM::throwException((JSC::VM *)v4, a1, v18);
      v17 = v21;
    }
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    if ((_BYTE)v24)
    {
      v19 = v23;
      v23 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v16);
        else
          *(_DWORD *)v19 -= 2;
      }
    }
  }
  return 1;
}

unint64_t WebCore::jsPannerNode_coneInnerAngle(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 208);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSPannerNode_coneInnerAngle(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  unsigned __int8 *v12;
  int v14;
  double v16;
  JSC::VM *v17;
  unint64_t v18;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPannerNode::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPannerNode::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v18 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v17 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v18, a1);
    v4 = v17;
    v11 = v16;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v12 = (unsigned __int8 *)(v10 + 336);
    if (__ldaxr((unsigned __int8 *)(v10 + 336)))
    {
      __clrex();
    }
    else if (!__stxr(1u, v12))
    {
      goto LABEL_21;
    }
    MEMORY[0x19AEA534C](v10 + 336);
LABEL_21:
    if (*(double *)(v10 + 208) != v11)
    {
      *(double *)(v10 + 208) = v11;
      if (*(_BYTE *)(v10 + 308))
        *(_BYTE *)(v10 + 308) = 0;
    }
    v14 = __ldxr(v12);
    if (v14 == 1)
    {
      if (!__stlxr(0, v12))
        return 1;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)(v10 + 336));
    return 1;
  }
  return 0;
}

unint64_t WebCore::jsPannerNode_coneOuterAngle(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 216);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSPannerNode_coneOuterAngle(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  unsigned __int8 *v12;
  int v14;
  double v16;
  JSC::VM *v17;
  unint64_t v18;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPannerNode::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPannerNode::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v18 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v17 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v18, a1);
    v4 = v17;
    v11 = v16;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v12 = (unsigned __int8 *)(v10 + 336);
    if (__ldaxr((unsigned __int8 *)(v10 + 336)))
    {
      __clrex();
    }
    else if (!__stxr(1u, v12))
    {
      goto LABEL_21;
    }
    MEMORY[0x19AEA534C](v10 + 336);
LABEL_21:
    if (*(double *)(v10 + 216) != v11)
    {
      *(double *)(v10 + 216) = v11;
      if (*(_BYTE *)(v10 + 308))
        *(_BYTE *)(v10 + 308) = 0;
    }
    v14 = __ldxr(v12);
    if (v14 == 1)
    {
      if (!__stlxr(0, v12))
        return 1;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)(v10 + 336));
    return 1;
  }
  return 0;
}

unint64_t WebCore::jsPannerNode_coneOuterGain(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 224);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSPannerNode_coneOuterGain(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  unsigned __int8 *v13;
  int v15;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  JSValue v19;
  WTF::StringImpl *v20;
  double v21;
  WTF::StringImpl *v22;
  int v23[2];
  WTF::StringImpl *v24;
  uint64_t v25;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPannerNode::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPannerNode::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)v23 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v23, a1);
    v11 = v21;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  if (v11 < 0.0 || v11 > 1.0)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    LOBYTE(v23[0]) = 8;
    LOBYTE(v25) = 1;
    goto LABEL_34;
  }
  v13 = (unsigned __int8 *)(v10 + 336);
  if (__ldaxr((unsigned __int8 *)(v10 + 336)))
  {
    __clrex();
  }
  else if (!__stxr(1u, v13))
  {
    goto LABEL_26;
  }
  MEMORY[0x19AEA534C](v10 + 336);
LABEL_26:
  if (*(double *)(v10 + 224) != v11)
  {
    *(double *)(v10 + 224) = v11;
    if (*(_BYTE *)(v10 + 308))
      *(_BYTE *)(v10 + 308) = 0;
  }
  *(_QWORD *)v23 = 0;
  v24 = 0;
  v25 = 0;
  v15 = __ldxr(v13);
  if (v15 == 1)
  {
    if (!__stlxr(0, v13))
      goto LABEL_34;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)(v10 + 336));
LABEL_34:
  if ((_BYTE)v25)
  {
    v17 = (WTF::StringImpl *)LOBYTE(v23[0]);
    v18 = v24;
    v24 = 0;
    v22 = v18;
    if (!*(_QWORD *)(v4 + 16))
    {
      v19.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v23[0]), (JSC::JSGlobalObject *)&v22);
      JSC::VM::throwException((JSC::VM *)v4, a1, v19);
      v18 = v22;
    }
    v22 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    if ((_BYTE)v25)
    {
      v20 = v24;
      v24 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 == 2)
          WTF::StringImpl::destroy(v20, v17);
        else
          *(_DWORD *)v20 -= 2;
      }
    }
  }
  return 1;
}

unint64_t WebCore::jsPannerNode_positionX(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::AudioParam>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 232));
}

unint64_t WebCore::jsPannerNode_positionY(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::AudioParam>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 240));
}

unint64_t WebCore::jsPannerNode_positionZ(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::AudioParam>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 248));
}

unint64_t WebCore::jsPannerNode_orientationX(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::AudioParam>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 256));
}

unint64_t WebCore::jsPannerNode_orientationY(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::AudioParam>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 264));
}

unint64_t WebCore::jsPannerNode_orientationZ(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::AudioParam>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 272));
}

uint64_t WebCore::JSPannerNode::subspaceForImpl(WebCore::JSPannerNode *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2120);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2120);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2120);
    *(_QWORD *)(v8 + 2120) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2120);
  *(_QWORD *)(v3 + 2120) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::PannerNode,WebCore::PannerNode>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSAudioNode *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSPannerNode::s_info + ~((_QWORD)&WebCore::JSPannerNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSPannerNode::s_info + ~((_QWORD)&WebCore::JSPannerNode::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSPannerNode::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSPannerNode::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSAudioNode *)*((_QWORD *)a1 + 7);
    v16 = (JSC::JSCell *)WebCore::JSAudioNode::prototype(v15, a1, a3);
    Structure = WebCore::JSPannerNodePrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSPannerNodePrototype::create(v15, a1, Structure, v18);
    v20 = WebCore::JSPannerNode::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSPannerNode::s_info);
  }
  v21 = WebCore::JSPannerNode::create(v14, a1, a2);
  WebCore::cacheWrapper<WebCore::AnalyserNode,WebCore::JSAnalyserNode>(*((_QWORD *)a1 + 415), v5, v21);
  return v21;
}

uint64_t WebCore::wrap<WebCore::PannerNode>(int a1, JSC::VM *a2, WebCore::AudioNode *this)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::JSDOMGlobalObject *v8;
  WebCore::AudioNode *v9;
  uint64_t result;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  WebCore::AudioNode *v17;
  int v18;
  WebCore::AudioNode *v19;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v11 = *(_QWORD *)(v5 + 32);
    if (!v11)
      goto LABEL_5;
    v12 = *(_DWORD *)(v11 - 8);
    v13 = ((unint64_t)this + ~((_QWORD)this << 32)) ^ (((unint64_t)this + ~((_QWORD)this << 32)) >> 22);
    v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
    v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
    v16 = v12 & ((v15 >> 31) ^ v15);
    v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
    if (v17 != this)
    {
      v18 = 1;
      while (v17)
      {
        v16 = ((_DWORD)v16 + v18) & v12;
        v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
        ++v18;
        if (v17 == this)
          goto LABEL_14;
      }
      goto LABEL_5;
    }
LABEL_14:
    v6 = *(_QWORD *)(v11 + 16 * v16 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *((_QWORD *)this + 1);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return v7;
  }
LABEL_5:
  WebCore::AudioNode::ref(this);
  v19 = this;
  if (*(uint64_t (***)(WebCore::AudioNode *__hidden))this == off_1E336C170)
  {
    v7 = WebCore::createWrapper<WebCore::PannerNode,WebCore::PannerNode>(a2, (uint64_t *)&v19, v8);
    v9 = v19;
    v19 = 0;
    if (v9)
      WebCore::AudioNode::deref(v9);
    return v7;
  }
  result = 689;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::parseEnumeration<WebCore::PanningModelType>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  uint64_t v9;
  char **v12;
  int v13;
  int v14;
  uint16x8_t v17;
  uint16x8_t v18;
  uint64_t v20;
  unint64_t v21;

  v3 = a1;
  v21 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
        return 0;
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v21, a1);
  v4 = v20;
  if (!v20)
    return 0;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "HRTF" && v7 == 4)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 72 || *(_WORD *)(v6 + 1) != 21586 || *((_WORD *)v6 + 1) != 18004)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 72)
        goto LABEL_16;
      v13 = *(_DWORD *)(v6 + 2);
      v14 = *((_DWORD *)v6 + 1);
      if (v13 != 5505106 || v14 != 4587604)
        goto LABEL_16;
    }
LABEL_41:
    v12 = &WebCore::parseEnumerationFromString<WebCore::PanningModelType>(WTF::String const&)::mappings;
    goto LABEL_42;
  }
  if (v6 == "HRTF" && v7 == 4)
    goto LABEL_41;
  if (v6 == "equalpower" || v7 != 10)
  {
    if (v7 != 10 || v6 != "equalpower")
      goto LABEL_16;
    goto LABEL_30;
  }
  if ((v5 & 4) == 0)
  {
    if (*(_WORD *)v6 == 101)
    {
      v17 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 2), (int16x8_t)xmmword_1968C04E0);
      v17.i16[0] = vminvq_u16(v17);
      if (v17.i32[0])
      {
        v18 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 4), (int16x8_t)xmmword_1968C04F0);
        v18.i16[0] = vminvq_u16(v18);
        if (v18.i32[0])
          goto LABEL_30;
      }
    }
LABEL_16:
    v9 = 0;
    goto LABEL_43;
  }
  if (*v6 != 101 || *(_QWORD *)(v6 + 1) != 0x65776F706C617571 || *(_QWORD *)(v6 + 2) != 0x7265776F706C6175)
    goto LABEL_16;
LABEL_30:
  v12 = &off_1E32C5118;
LABEL_42:
  v9 = *((unsigned int *)v12 + 4) | 0x100000000;
LABEL_43:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v9;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPath2D>::construct(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v10;
  uint64_t v11;
  WTF *v12;
  void *v13;
  JSCell *v14;
  JSC::JSCell *v15;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v17;
  JSC::JSGlobalObject *v18;
  WebCore::JSPath2D *v19;
  JSC::JSCell **FunctionRealm;
  JSC::JSObject *v21;
  JSC::Structure *v22;
  unint64_t SubclassStructure;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  char **v27;
  BOOL v28;
  JSC::JSGlobalObject **v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  WTF *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  WTF *v37;
  unint64_t v38;
  _DWORD *v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  uint64_t v42;
  void *v43;
  JSC::JSCell *v44;
  JSC::JSGlobalObject *v45;
  JSC::JSObject *v46;
  JSC::JSGlobalObject *v47;
  WebCore::JSPath2D *v48;
  JSC::JSCell **v49;
  JSC::JSObject *v50;
  JSC::Structure *v51;
  unint64_t v52;
  unsigned int *v53;
  uint64_t v54;
  uint64_t v55;
  void *v58;
  JSC::JSCell *v59;
  JSC::JSGlobalObject *v60;
  JSC::JSObject *v61;
  JSC::JSGlobalObject *v62;
  WebCore::JSPath2D *v63;
  JSC::JSCell **v64;
  JSC::JSObject *v65;
  JSC::Structure *v66;
  unint64_t v67;
  unsigned int *v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  WTF::StringImpl *v73;
  uint64_t v74;
  int v75;
  char v76;
  WTF::StringImpl *v77;
  WTF *v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;

  v81 = *MEMORY[0x1E0C80C00];
  v10 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v11 = *(_QWORD *)(a2 + 24);
    v12 = (WTF *)WTF::fastMalloc((WTF *)0x58);
    *((_DWORD *)v12 + 20) = 1;
    *((_DWORD *)v12 + 18) = 0;
    *(_QWORD *)v12 = &unk_1E33DDF78;
    v78 = v12;
    v14 = (JSCell *)WebCore::toJSNewlyCreated((uint64_t)v12, *(_QWORD *)(v11 + 40), &v78);
    v15 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v15 & 0xFFFE000000000002) == 0)
    {
      Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v15);
      if (Object)
      {
        v18 = Object;
        if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
        {
          v19 = (WebCore::JSPath2D *)*((_QWORD *)a1 + 7);
          FunctionRealm = (JSC::JSCell **)JSC::getFunctionRealm(a1, Object, v17);
          if (!*((_DWORD *)v19 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) == 0)
          {
            v21 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSPath2D>(v19, FunctionRealm);
            SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v18, v21, v22);
            if (!*((_DWORD *)v19 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) == 0)
              JSC::JSObject::setStructure(v14, v19, SubclassStructure);
          }
        }
      }
    }
    if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
      v14 = 0;
    v24 = (unsigned int *)v78;
    if (v78)
    {
      if (*((_DWORD *)v78 + 20) == 1)
      {
        *(_QWORD *)v78 = off_1E32CDB50;
        v70 = v24[18];
        if ((_DWORD)v70 != -1)
          ((void (*)(uint64_t *, unsigned int *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_2[v70])(&v74, v24 + 4);
        v24[18] = -1;
        WTF::fastFree((WTF *)v24, v13);
      }
      else
      {
        --*((_DWORD *)v78 + 20);
      }
    }
    return v14;
  }
  v25 = *(_QWORD *)(a2 + 48);
  if ((v25 & 0xFFFE000000000002) != 0)
  {
    v29 = (JSC::JSGlobalObject **)(a2 + 24);
    v30 = *(_QWORD *)(a2 + 24);
    v78 = *(WTF **)(a2 + 48);
    goto LABEL_31;
  }
  if (*(unsigned __int8 *)(v25 + 5) < 0x17u)
    goto LABEL_24;
  v26 = *(unsigned int *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0x4C);
  v27 = (char **)(16 * v26);
  if ((_DWORD)v26)
    v28 = v27 == &WebCore::JSPath2D::s_info;
  else
    v28 = 1;
  if (v28)
  {
    if ((_DWORD)v26)
    {
      v29 = (JSC::JSGlobalObject **)(a2 + 24);
      v30 = *(_QWORD *)(a2 + 24);
      v78 = (WTF *)*((_QWORD *)a1 + 7);
      goto LABEL_21;
    }
LABEL_24:
    v29 = (JSC::JSGlobalObject **)(a2 + 24);
    v30 = *(_QWORD *)(a2 + 24);
    goto LABEL_25;
  }
  v55 = 16 * v26;
  do
    v55 = *(_QWORD *)(v55 + 16);
  while ((char **)v55 != &WebCore::JSPath2D::s_info && v55 != 0);
  v29 = (JSC::JSGlobalObject **)(a2 + 24);
  v30 = *(_QWORD *)(a2 + 24);
  if (!v55)
  {
LABEL_25:
    v78 = *(WTF **)(a2 + 48);
    if (*(_BYTE *)(v25 + 5) == 2)
    {
      v35 = *(WTF::StringImpl **)(v25 + 8);
      if ((v35 & 1) != 0)
      {
        v35 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v25, a1);
        if (!v35)
          goto LABEL_29;
      }
      else if (!v35)
      {
LABEL_29:
        v77 = v35;
        goto LABEL_32;
      }
      *(_DWORD *)v35 += 2;
      goto LABEL_29;
    }
LABEL_31:
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v78, a1);
LABEL_32:
    if (*((_DWORD *)v10 + 20))
    {
      v36 = v77;
      if (JSC::VM::hasExceptionsAfterHandlingTraps(v10))
      {
        v75 = 1;
        v77 = 0;
        if (v36)
        {
          if (*(_DWORD *)v36 == 2)
            WTF::StringImpl::destroy(v36, v73);
          else
            *(_DWORD *)v36 -= 2;
        }
        v14 = 0;
        v54 = 1;
        goto LABEL_54;
      }
    }
    else
    {
      v36 = v77;
    }
    v75 = 0;
    v74 = 0;
    if (v36)
    {
      v37 = (WTF *)*((_QWORD *)v36 + 1);
      v38 = *((unsigned int *)v36 + 1) | ((unint64_t)((*((_DWORD *)v36 + 4) >> 2) & 1) << 32);
    }
    else
    {
      v37 = 0;
      v38 = 0x100000000;
    }
    WebCore::buildPathFromString(v37, v38, (uint64_t)&v78);
    v39 = (_DWORD *)WTF::fastMalloc((WTF *)0x58);
    v41 = (WTF::StringImpl *)v39;
    v39[20] = 1;
    *(_QWORD *)v39 = off_1E32CDB50;
    v39[18] = 0;
    if (v80 == -1)
    {
      v39[18] = -1;
      *(_QWORD *)v39 = &unk_1E33DDF78;
      v77 = (WTF::StringImpl *)v39;
    }
    else
    {
      v77 = (WTF::StringImpl *)(v39 + 4);
      v39 = (_DWORD *)((uint64_t (*)(WTF::StringImpl **))__const__ZNSt3__116__variant_detail12__visitation6__base14__visit_alt_atB8sn180100IZNS0_12__assignmentINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEEE16__generic_assignB8sn180100IRKNS0_17__copy_assignmentISD_LNS0_6_TraitE1EEEEEvOT_EUlRSL_OT0_E_JRSE_SK_EEEDcmSM_DpOT0____fdiagonal_1[v80])(&v77);
      v42 = v80;
      *(_QWORD *)v41 = &unk_1E33DDF78;
      v77 = v41;
      if ((_DWORD)v42 != -1)
        v39 = (_DWORD *)((uint64_t (*)(char *, uint64_t *))off_1E32CAC88[v42])(&v76, &v79);
    }
    if (v36)
    {
      if (*(_DWORD *)v36 == 2)
        v39 = (_DWORD *)WTF::StringImpl::destroy(v36, v40);
      else
        *(_DWORD *)v36 -= 2;
    }
    v14 = (JSCell *)WebCore::toJSNewlyCreated((uint64_t)v39, *(_QWORD *)(v30 + 40), &v77);
    v44 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v44 & 0xFFFE000000000002) == 0)
    {
      v45 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v44);
      if (v45)
      {
        v47 = v45;
        if (v45 != *v29)
        {
          v48 = (WebCore::JSPath2D *)*((_QWORD *)a1 + 7);
          v49 = (JSC::JSCell **)JSC::getFunctionRealm(a1, v45, v46);
          if (!*((_DWORD *)v48 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v48) & 1) == 0)
          {
            v50 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSPath2D>(v48, v49);
            v52 = JSC::InternalFunction::createSubclassStructure(a1, v47, v50, v51);
            if (!*((_DWORD *)v48 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v48) & 1) == 0)
              JSC::JSObject::setStructure(v14, v48, v52);
          }
        }
      }
    }
    if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
      v14 = 0;
    v53 = (unsigned int *)v77;
    if (v77)
    {
      if (*((_DWORD *)v77 + 20) == 1)
      {
        *(_QWORD *)v77 = off_1E32CDB50;
        v71 = v53[18];
        if ((_DWORD)v71 != -1)
          ((void (*)(WTF **, unsigned int *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_2[v71])(&v78, v53 + 4);
        v53[18] = -1;
        WTF::fastFree((WTF *)v53, v43);
      }
      else
      {
        --*((_DWORD *)v77 + 20);
      }
    }
    v54 = 0;
LABEL_54:
    ((void (*)(WTF **, uint64_t *))off_1E32C9390[v54])(&v78, &v74);
    return v14;
  }
  v78 = (WTF *)*((_QWORD *)a1 + 7);
  do
    v27 = (char **)v27[2];
  while (v27 != &WebCore::JSPath2D::s_info && v27 != 0);
  if (!v27)
    goto LABEL_68;
LABEL_21:
  v31 = *(_QWORD *)(v25 + 24);
  if (!v31)
  {
LABEL_68:
    WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)&v78, 0, "path", 5, "Path2D", 7, a8, 0, 0, "Path2D", 7);
    return 0;
  }
  v32 = WTF::fastMalloc((WTF *)0x58);
  v33 = (WTF *)v32;
  *(_DWORD *)(v32 + 80) = 1;
  *(_QWORD *)v32 = off_1E32CDB50;
  *(_DWORD *)(v32 + 72) = 0;
  v34 = *(unsigned int *)(v31 + 72);
  if ((_DWORD)v34 == -1)
  {
    *(_DWORD *)(v32 + 72) = -1;
  }
  else
  {
    v78 = (WTF *)(v32 + 16);
    v32 = ((uint64_t (*)(WTF **))__const__ZNSt3__116__variant_detail12__visitation6__base14__visit_alt_atB8sn180100IZNS0_12__assignmentINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEEE16__generic_assignB8sn180100IRKNS0_17__copy_assignmentISD_LNS0_6_TraitE1EEEEEvOT_EUlRSL_OT0_E_JRSE_SK_EEEDcmSM_DpOT0____fdiagonal_1[v34])(&v78);
  }
  *(_QWORD *)v33 = &unk_1E33DDF78;
  v78 = v33;
  v14 = (JSCell *)WebCore::toJSNewlyCreated(v32, *(_QWORD *)(v30 + 40), &v78);
  v59 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v59 & 0xFFFE000000000002) == 0)
  {
    v60 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v59);
    if (v60)
    {
      v62 = v60;
      if (v60 != *v29)
      {
        v63 = (WebCore::JSPath2D *)*((_QWORD *)a1 + 7);
        v64 = (JSC::JSCell **)JSC::getFunctionRealm(a1, v60, v61);
        if (!*((_DWORD *)v63 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v63) & 1) == 0)
        {
          v65 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSPath2D>(v63, v64);
          v67 = JSC::InternalFunction::createSubclassStructure(a1, v62, v65, v66);
          if (!*((_DWORD *)v63 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v63) & 1) == 0)
            JSC::JSObject::setStructure(v14, v63, v67);
        }
      }
    }
  }
  if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
    v14 = 0;
  v68 = (unsigned int *)v78;
  if (v78)
  {
    if (*((_DWORD *)v78 + 20) == 1)
    {
      *(_QWORD *)v78 = off_1E32CDB50;
      v72 = v68[18];
      if ((_DWORD)v72 != -1)
        ((void (*)(uint64_t *, unsigned int *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_2[v72])(&v74, v68 + 4);
      v68[18] = -1;
      WTF::fastFree((WTF *)v68, v58);
    }
    else
    {
      --*((_DWORD *)v78 + 20);
    }
  }
  return v14;
}

BOOL WebCore::JSDOMConstructor<WebCore::JSPath2D>::initializeProperties(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSPath2D>((WebCore::JSPath2D *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

uint64_t WebCore::JSPath2D::prototype(WebCore::JSPath2D *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  return *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSPath2D>(this, a2) + 48);
}

WTF::StringImpl *WebCore::JSPath2DPrototype::finishCreation(WebCore::JSPath2DPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<12u>(a2, (uint64_t)&WebCore::JSPath2D::s_info, (uint64_t)&WebCore::JSPath2DPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSPath2D::destroy(uint64_t this, JSC::JSCell *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v4;

  v2 = *(unsigned int **)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (v2[20] == 1)
    {
      *(_QWORD *)v2 = off_1E32CDB50;
      v3 = v2[18];
      if ((_DWORD)v3 != -1)
        ((void (*)(char *, unsigned int *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_2[v3])(&v4, v2 + 4);
      v2[18] = -1;
      return WTF::fastFree((WTF *)v2, a2);
    }
    else
    {
      --v2[20];
    }
  }
  return this;
}

uint64_t WebCore::JSPath2D::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPath2D::JSPath2D(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

unint64_t WebCore::JSPath2D::createPrototype(WebCore::JSPath2D *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSPath2DPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSPath2DPrototype::create(WebCore::JSPath2DPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSPath2DPrototype::finishCreation((WebCore::JSPath2DPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPath2D>,(WebCore::DOMConstructorID)642>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5136);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructor<WebCore::JSPath2D>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructor<WebCore::JSPath2D>::create(a1, Structure, (JSC::JSCell **)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5136) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsPath2DConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPath2DPrototype::s_info != (char **)(16
                                                      * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPath2D>,(WebCore::DOMConstructorID)642>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSPath2D::subspaceForImpl(WebCore::JSPath2D *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5216);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 5216))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 5216);
    *(_QWORD *)(v8 + 5216) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 5216);
  *(_QWORD *)(v3 + 5216) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSPath2DOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

_QWORD *WebCore::JSPath2DOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v24;
  _QWORD *result;
  char v26;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*((_DWORD *)v3 + 20);
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(unsigned int **)(v5 + 16 * v11);
    if (v12 != (unsigned int *)v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(unsigned int **)(v5 + 16 * v11);
        ++v13;
        if (v12 == (unsigned int *)v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*((_DWORD *)v3 + 20) == 1)
  {
    *(_QWORD *)v3 = off_1E32CDB50;
    v24 = *((unsigned int *)v3 + 18);
    if ((_DWORD)v24 != -1)
      ((void (*)(char *, char *, uint64_t *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_2[v24])(&v26, (char *)v3 + 16, v4);
    *((_DWORD *)v3 + 18) = -1;
    return (_QWORD *)WTF::fastFree(v3, a2);
  }
  else
  {
    --*((_DWORD *)v3 + 20);
  }
  return result;
}

unint64_t WebCore::toJSNewlyCreated(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _UNKNOWN **v3;
  unint64_t v6;
  WebCore::JSPath2D *v7;
  JSC::VM *v8;
  _QWORD *v9;
  unint64_t SlowCase;
  _UNKNOWN **v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *Allocator;
  unint64_t v17;
  _QWORD *v18;
  _UNKNOWN **v19;

  v3 = (_UNKNOWN **)*a3;
  if (*(_UNKNOWN **)*a3 != &unk_1E33DDF78)
  {
    __break(0xC471u);
    JUMPOUT(0x194DC80CCLL);
  }
  v6 = WebCore::getDOMStructure<WebCore::JSPath2D>(*(WebCore::JSPath2D **)(a2 + 56), (JSC::JSCell **)a2);
  v7 = *(WebCore::JSPath2D **)(a2 + 56);
  v9 = (_QWORD *)WebCore::JSPath2D::subspaceForImpl(v7, v8);
  SlowCase = v9[3];
  if (SlowCase < v9[4])
    goto LABEL_3;
  SlowCase = v9[5];
  if ((SlowCase & 1) == 0)
  {
    v17 = *(_QWORD *)(SlowCase + 8) ^ v9[6];
    v9[4] = SlowCase + HIDWORD(v17);
    v9[5] = SlowCase + (int)v17;
LABEL_3:
    v9[3] = SlowCase + 32;
    goto LABEL_4;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_4:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v6);
  v11 = (_UNKNOWN **)*a3;
  *a3 = 0;
  *(_QWORD *)(SlowCase + 24) = v11;
  if (*((_BYTE *)v7 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336368 & 1) == 0)
  {
    qword_1EE336360 = (uint64_t)&off_1E32C9130;
    byte_1EE336368 = 1;
  }
  v19 = v3;
  if ((SlowCase & 8) != 0)
    v13 = (SlowCase - 112) | 1;
  else
    v13 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v13 & 1) != 0)
    v14 = v13 + 47;
  else
    v14 = *(_QWORD *)v13 + 32;
  Allocator = *(_QWORD **)(v14 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v14 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE336360;
  Allocator[2] = v12;
  v18 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v12 + 32), (uint64_t *)&v19, (uint64_t *)&v18);
  if (v18)
    v18[1] = 3;
  return SlowCase;
}

unint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::Path2D *a4)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  unsigned int *v15;
  uint64_t v17;
  WTF *v18;
  char v19;

  v4 = *(_QWORD *)(*((_QWORD *)a2 + 415) + 32);
  if (v4)
  {
    v5 = *(_DWORD *)(v4 - 8);
    v6 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v7 = 9 * ((v6 + ~(v6 << 13)) ^ ((v6 + ~(v6 << 13)) >> 8));
    v8 = (v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27);
    v9 = v5 & ((v8 >> 31) ^ v8);
    v10 = *(WebCore::JSDOMGlobalObject **)(v4 + 16 * v9);
    if (v10 == a3)
    {
LABEL_6:
      v12 = *(_QWORD *)(v4 + 16 * v9 + 8);
      if (v12)
      {
        if ((*(_BYTE *)(v12 + 8) & 3) == 0)
        {
          v13 = *(_QWORD *)v12;
          if (*(_QWORD *)v12)
            return v13;
        }
      }
    }
    else
    {
      v11 = 1;
      while (v10)
      {
        v9 = ((_DWORD)v9 + v11) & v5;
        v10 = *(WebCore::JSDOMGlobalObject **)(v4 + 16 * v9);
        ++v11;
        if (v10 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 20);
  v18 = a3;
  v13 = WebCore::toJSNewlyCreated((uint64_t)this, (uint64_t)a2, &v18);
  v15 = (unsigned int *)v18;
  if (v18)
  {
    if (*((_DWORD *)v18 + 20) == 1)
    {
      *(_QWORD *)v18 = off_1E32CDB50;
      v17 = v15[18];
      if ((_DWORD)v17 != -1)
        ((void (*)(char *, unsigned int *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_2[v17])(&v19, v15 + 4);
      v15[18] = -1;
      WTF::fastFree((WTF *)v15, v14);
    }
    else
    {
      --*((_DWORD *)v18 + 20);
    }
  }
  return v13;
}

uint64_t WebCore::JSPath2D::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSPath2D::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSPath2D::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

uint64_t WebCore::convertDictionary<WebCore::PayerErrorFields>(uint64_t result, JSC::JSGlobalObject *a2, JSC::JSCell *this)
{
  uint64_t v3;
  JSC::VM *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  uint64_t Object;
  JSC::Structure *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  JSC::VM *v12;
  WTF::StringImpl *v13;
  int v14;
  int v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  JSC::VM *v20;
  WTF::StringImpl *v21;
  int v22;
  int v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  JSC::VM *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  int v31;
  WTF::StringImpl *v32;
  char hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v34;
  int v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  int v38;
  JSC::VM *v39;
  WTF::StringImpl *v40;
  uint64_t v41;

  v3 = result;
  v4 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v39 = v4;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v5 = 0;
    v6 = 0;
LABEL_43:
    v27 = 0;
LABEL_44:
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v6;
    *(_QWORD *)(v3 + 16) = v27;
    *(_DWORD *)(v3 + 24) = 0;
    return result;
  }
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = JSC::throwTypeError();
LABEL_81:
    *(_DWORD *)(v3 + 24) = 1;
    return result;
  }
  v9 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v11 = JSC::JSObject::get(v9, a2, (unint64_t)v37);
  if (v37)
  {
    if (*(_DWORD *)v37 == 2)
      WTF::StringImpl::destroy(v37, v10);
    else
      *(_DWORD *)v37 -= 2;
  }
  if (*((_DWORD *)v4 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    if ((_DWORD)result)
      goto LABEL_81;
  }
  if (v11 == 10)
  {
    v5 = 0;
    goto LABEL_21;
  }
  v41 = v11;
  v12 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((v11 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v11 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v11 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, a2);
      if (!v13)
        goto LABEL_16;
    }
    else if (!v13)
    {
LABEL_16:
      v40 = v13;
      goto LABEL_17;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_16;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v41, a2);
LABEL_17:
  if (!*((_DWORD *)v12 + 20))
  {
    v5 = v40;
LABEL_19:
    v38 = 0;
    v14 = 0;
    v37 = 0;
    v15 = 1;
    goto LABEL_20;
  }
  v5 = v40;
  if ((JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) == 0)
    goto LABEL_19;
  v14 = 1;
  v38 = 1;
  v40 = 0;
  if (!v5)
    goto LABEL_92;
  if (*(_DWORD *)v5 != 2)
  {
    *(_DWORD *)v5 -= 2;
LABEL_92:
    v5 = 0;
    v15 = 0;
    *(_DWORD *)(v3 + 24) = 1;
    goto LABEL_20;
  }
  WTF::StringImpl::destroy(v5, v32);
  v14 = v38;
  *(_DWORD *)(v3 + 24) = 1;
  v5 = 0;
  v15 = 0;
LABEL_20:
  result = ((uint64_t (*)(uint64_t *, WTF::StringImpl **))off_1E32C9390[v14])(&v41, &v37);
  if (!v15)
    goto LABEL_61;
LABEL_21:
  WTF::AtomStringImpl::addLiteral();
  v17 = v37;
  v19 = JSC::JSObject::get(v9, a2, (unint64_t)v37);
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v18);
    else
      *(_DWORD *)v17 -= 2;
  }
  if (*((_DWORD *)v4 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    if ((_DWORD)result)
    {
      *(_DWORD *)(v3 + 24) = 1;
      goto LABEL_61;
    }
  }
  if (v19 == 10)
  {
    v6 = 0;
    goto LABEL_38;
  }
  v41 = v19;
  v20 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((v19 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v19 + 5) == 2)
  {
    v21 = *(WTF::StringImpl **)(v19 + 8);
    if ((v21 & 1) != 0)
    {
      v21 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v19, a2);
      if (!v21)
        goto LABEL_32;
    }
    else if (!v21)
    {
LABEL_32:
      v40 = v21;
      goto LABEL_33;
    }
    *(_DWORD *)v21 += 2;
    goto LABEL_32;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v41, a2);
LABEL_33:
  if (!*((_DWORD *)v20 + 20))
  {
    v6 = v40;
LABEL_35:
    v38 = 0;
LABEL_36:
    v22 = 0;
    v37 = 0;
    v23 = 1;
    goto LABEL_37;
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v20);
  v6 = v40;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0)
    goto LABEL_35;
  v22 = 1;
  v38 = 1;
  v40 = 0;
  if (!v6)
    goto LABEL_97;
  if (*(_DWORD *)v6 != 2)
  {
    *(_DWORD *)v6 -= 2;
LABEL_97:
    v6 = 0;
    v23 = 0;
    *(_DWORD *)(v3 + 24) = 1;
    goto LABEL_37;
  }
  result = WTF::StringImpl::destroy(v6, v34);
  v22 = v38;
  if (!v38)
  {
    v6 = v37;
    goto LABEL_36;
  }
  *(_DWORD *)(v3 + 24) = 1;
  if (v22 != -1)
  {
    v6 = 0;
    v23 = 0;
LABEL_37:
    result = ((uint64_t (*)(uint64_t *, WTF::StringImpl **))off_1E32C9390[v22])(&v41, &v37);
    if (!v23)
      goto LABEL_58;
LABEL_38:
    WTF::AtomStringImpl::addLiteral();
    v24 = v37;
    result = JSC::JSObject::get(v9, a2, (unint64_t)v37);
    v26 = result;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        result = WTF::StringImpl::destroy(v24, v25);
      else
        *(_DWORD *)v24 -= 2;
    }
    if (*((_DWORD *)v4 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
      if ((_DWORD)result)
      {
        *(_DWORD *)(v3 + 24) = 1;
LABEL_58:
        if (v6)
        {
          if (*(_DWORD *)v6 == 2)
            result = WTF::StringImpl::destroy(v6, v16);
          else
            *(_DWORD *)v6 -= 2;
        }
        goto LABEL_61;
      }
    }
    if (v26 == 10)
      goto LABEL_43;
    v41 = v26;
    v28 = (JSC::VM *)*((_QWORD *)a2 + 7);
    if ((v26 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v26 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v41, a2);
LABEL_51:
      if (*((_DWORD *)v28 + 20))
      {
        v35 = JSC::VM::hasExceptionsAfterHandlingTraps(v28);
        v27 = v40;
        if (v35)
        {
          v30 = 1;
          v38 = 1;
          v40 = 0;
          if (v27)
          {
            if (*(_DWORD *)v27 == 2)
              WTF::StringImpl::destroy(v27, v36);
            else
              *(_DWORD *)v27 -= 2;
          }
          v31 = 0;
          v27 = 0;
          *(_DWORD *)(v3 + 24) = 1;
          goto LABEL_54;
        }
      }
      else
      {
        v27 = v40;
      }
      v30 = 0;
      v38 = 0;
      v37 = 0;
      v31 = 1;
LABEL_54:
      result = ((uint64_t (*)(uint64_t *, WTF::StringImpl **))off_1E32C9390[v30])(&v41, &v37);
      if (v31)
        goto LABEL_44;
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          result = WTF::StringImpl::destroy(v27, v16);
        else
          *(_DWORD *)v27 -= 2;
      }
      goto LABEL_58;
    }
    v29 = *(WTF::StringImpl **)(v26 + 8);
    if ((v29 & 1) != 0)
    {
      v29 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v26, a2);
      if (!v29)
        goto LABEL_50;
    }
    else if (!v29)
    {
LABEL_50:
      v40 = v29;
      goto LABEL_51;
    }
    *(_DWORD *)v29 += 2;
    goto LABEL_50;
  }
LABEL_61:
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      return WTF::StringImpl::destroy(v5, v16);
    else
      *(_DWORD *)v5 -= 2;
  }
  return result;
}

WebCore::PaymentAddress *WebCore::JSPaymentAddress::destroy(WebCore::JSPaymentAddress *this, JSC::JSCell *a2)
{
  WebCore::PaymentAddress *result;
  WTF *v4;
  void *v5;

  result = (WebCore::PaymentAddress *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::PaymentAddress::~PaymentAddress(result, a2);
      return (WebCore::PaymentAddress *)WTF::fastFree(v4, v5);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSPaymentAddress::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPaymentAddressPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPaymentAddressPrototype::create(WebCore::JSPaymentAddressPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<12u>(this, (uint64_t)&WebCore::JSPaymentAddress::s_info, (uint64_t)&WebCore::JSPaymentAddressPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaymentAddress>,(WebCore::DOMConstructorID)177>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1416);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaymentAddress>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSPaymentAddress::s_info + ~((_QWORD)&WebCore::JSPaymentAddress::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentAddress::s_info + ~((_QWORD)&WebCore::JSPaymentAddress::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSPaymentAddress::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSPaymentAddress::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSPaymentAddressPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSPaymentAddressPrototype::create((WebCore::JSPaymentAddressPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSPaymentAddress::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSPaymentAddress::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1416) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPaymentAddressConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPaymentAddressPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaymentAddress>,(WebCore::DOMConstructorID)177>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPaymentAddress_country(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentAddress_addressLine(JSC *a1, uint64_t a2)
{
  return WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDOMString>>::convert<WTF::String,0ul>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(a2 + 24) + 16);
}

uint64_t WebCore::jsPaymentAddress_region(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentAddress_city(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 40);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentAddress_dependentLocality(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 48);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentAddress_postalCode(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 56);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentAddress_sortingCode(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 64);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentAddress_organization(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentAddress_recipient(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentAddress_phone(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 88);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::JSPaymentAddressOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSPaymentAddressOwner::finalize(uint64_t a1, WTF::StringImpl *a2, uint64_t a3)
{
  WebCore::PaymentAddress *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WebCore::PaymentAddress *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  WTF *v24;
  void *v25;

  v3 = *(WebCore::PaymentAddress **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WebCore::PaymentAddress **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WebCore::PaymentAddress **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    WebCore::PaymentAddress::~PaymentAddress(v3, a2);
    WTF::fastFree(v24, v25);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::wrap<WebCore::PaymentAddress>(uint64_t a1, WTF *a2)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  WTF *v10;
  int v11;
  uint64_t v12;
  unint64_t SlowCase;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char **v20;
  int v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v25;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  WTF *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  WTF *v43;
  void *v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *Allocator;
  unint64_t v51;
  _QWORD *v52;
  WTF *v53;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 3320) + 32);
  if (v4)
  {
    v5 = *(_DWORD *)(v4 - 8);
    v6 = ((unint64_t)a2 + ~((_QWORD)a2 << 32)) ^ (((unint64_t)a2 + ~((_QWORD)a2 << 32)) >> 22);
    v7 = 9 * ((v6 + ~(v6 << 13)) ^ ((v6 + ~(v6 << 13)) >> 8));
    v8 = (v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27);
    v9 = v5 & ((v8 >> 31) ^ v8);
    v10 = *(WTF **)(v4 + 16 * v9);
    if (v10 == a2)
    {
LABEL_6:
      v12 = *(_QWORD *)(v4 + 16 * v9 + 8);
      if (v12)
      {
        if ((*(_BYTE *)(v12 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v12;
          if (*(_QWORD *)v12)
            return SlowCase;
        }
      }
    }
    else
    {
      v11 = 1;
      while (v10)
      {
        v9 = ((_DWORD)v9 + v11) & v5;
        v10 = *(WTF **)(v4 + 16 * v9);
        ++v11;
        if (v10 == a2)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a2;
  v14 = *(_QWORD *)(a1 + 3296);
  if (v14)
  {
    v15 = *(_DWORD *)(v14 - 8);
    v16 = ((unint64_t)&WebCore::JSPaymentAddress::s_info + ~((_QWORD)&WebCore::JSPaymentAddress::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentAddress::s_info + ~((_QWORD)&WebCore::JSPaymentAddress::s_info << 32)) >> 22);
    v17 = 9 * ((v16 + ~(v16 << 13)) ^ ((v16 + ~(v16 << 13)) >> 8));
    v18 = (v17 ^ (v17 >> 15)) + ~((v17 ^ (v17 >> 15)) << 27);
    v19 = v15 & ((v18 >> 31) ^ v18);
    v20 = *(char ***)(v14 + 16 * v19);
    if (v20 == &WebCore::JSPaymentAddress::s_info)
    {
LABEL_14:
      v22 = *(_QWORD *)(v14 + 16 * v19 + 8);
      if (v22)
        goto LABEL_16;
    }
    else
    {
      v21 = 1;
      while (v20)
      {
        v19 = ((_DWORD)v19 + v21) & v15;
        v20 = *(char ***)(v14 + 16 * v19);
        ++v21;
        if (v20 == &WebCore::JSPaymentAddress::s_info)
          goto LABEL_14;
      }
    }
  }
  v23 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSPaymentAddressPrototype::createStructure(v23, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSPaymentAddressPrototype::create((WebCore::JSPaymentAddressPrototype *)v23, Structure, v25, v26);
  v28 = WebCore::JSPaymentAddress::createStructure(v23, a1, v27);
  v22 = WebCore::cacheDOMStructure((JSCell *)a1, v28, (uint64_t)&WebCore::JSPaymentAddress::s_info);
LABEL_16:
  v29 = *(_QWORD *)(a1 + 56);
  v30 = *(_QWORD *)(v29 + 41456);
  v31 = *(_QWORD *)(v30 + 23536);
  v32 = *(_QWORD **)(v31 + 1440);
  if (v32)
    goto LABEL_36;
  v33 = *(_QWORD *)(v30 + 22648);
  if (__ldaxr((unsigned __int8 *)v33))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v33))
  {
    goto LABEL_21;
  }
  MEMORY[0x19AEA534C](v33);
LABEL_21:
  v35 = *(_QWORD *)(v33 + 2824);
  if (!*(_QWORD *)(v35 + 1440))
  {
    v36 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v53, "IsoSpace T");
    v52 = 0;
    MEMORY[0x19AEA3204](v36, &v53, v29 + 192, v29 + 1872, 32, 8, &v52);
    v38 = (uint64_t)v52;
    v52 = 0;
    if (v38)
      (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
    v39 = v53;
    v53 = 0;
    if (v39)
    {
      if (*(_DWORD *)v39 == 1)
        WTF::fastFree(v39, v37);
      else
        --*(_DWORD *)v39;
    }
    v40 = *(_QWORD *)(v35 + 1440);
    *(_QWORD *)(v35 + 1440) = v36;
    if (v40)
      (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
  }
  v32 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v42 = *(_QWORD *)(v31 + 1440);
  *(_QWORD *)(v31 + 1440) = v32;
  if (v42)
  {
    v43 = (WTF *)MEMORY[0x19AEA3528](v42, v41);
    WTF::fastFree(v43, v44);
  }
  v45 = __ldxr((unsigned __int8 *)v33);
  if (v45 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v33))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v33);
LABEL_36:
  SlowCase = v32[3];
  if (SlowCase >= v32[4])
  {
    SlowCase = v32[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_38;
    }
    v51 = *(_QWORD *)(SlowCase + 8) ^ v32[6];
    v32[4] = SlowCase + HIDWORD(v51);
    v32[5] = SlowCase + (int)v51;
  }
  v32[3] = SlowCase + 32;
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v22);
  *(_QWORD *)(SlowCase + 24) = a2;
  if (*(_BYTE *)(v29 + 755))
    __dmb(0xAu);
  v46 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE336378 & 1) == 0)
  {
    qword_1EE336370 = (uint64_t)&off_1E32C9160;
    byte_1EE336378 = 1;
  }
  v53 = a2;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  Allocator = *(_QWORD **)(v48 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE336370;
  Allocator[2] = v46;
  v52 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v46 + 32), (uint64_t *)&v53, (uint64_t *)&v52);
  if (v52)
    v52[1] = 3;
  return SlowCase;
}

uint64_t WebCore::convertDictionary<WebCore::PaymentCurrencyAmount>(uint64_t a1, JSC::VM **a2, JSC::JSCell *this)
{
  uint64_t Object;
  JSC::Structure *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  uint64_t result;
  JSC::VM *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  uint64_t v16;
  JSC::VM *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  int v21;
  WTF::StringImpl *v22;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  int v26;
  WTF::StringImpl *v27;
  int v28;
  WTF::StringImpl *v29;
  int v30;
  JSC::VM *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;

  v31 = a2[7];
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
    goto LABEL_9;
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = JSC::throwTypeError();
    goto LABEL_10;
  }
  v6 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v8 = JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v29);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v7);
    else
      *(_DWORD *)v29 -= 2;
  }
  if (*((_DWORD *)v31 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v31);
    if ((_DWORD)result)
      goto LABEL_10;
  }
  if (v8 == 10)
  {
LABEL_9:
    result = (uint64_t)WebCore::throwRequiredMemberTypeError((int)a2, (int)&v31, "currency", 9, "PaymentCurrencyAmount", 22, "DOMString", 10);
LABEL_10:
    *(_DWORD *)(a1 + 16) = 1;
    return result;
  }
  v27 = (WTF::StringImpl *)v8;
  v10 = a2[7];
  if ((v8 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v8 + 5) == 2)
  {
    v11 = *(WTF::StringImpl **)(v8 + 8);
    if ((v11 & 1) != 0)
    {
      v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, (JSC::JSGlobalObject *)a2);
      if (!v11)
        goto LABEL_16;
    }
    else if (!v11)
    {
LABEL_16:
      v33 = v11;
      goto LABEL_17;
    }
    *(_DWORD *)v11 += 2;
    goto LABEL_16;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v27, (JSC::JSGlobalObject *)a2);
LABEL_17:
  if (*((_DWORD *)v10 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v10);
    v12 = v33;
    if (hasExceptionsAfterHandlingTraps)
    {
      v16 = 1;
      v30 = 1;
      v33 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v24);
        else
          *(_DWORD *)v12 -= 2;
      }
      v12 = 0;
      *(_DWORD *)(a1 + 16) = 1;
      goto LABEL_36;
    }
  }
  else
  {
    v12 = v33;
  }
  v30 = 0;
  v29 = 0;
  WTF::AtomStringImpl::addLiteral();
  v13 = v27;
  v15 = JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v27);
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v14);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (*((_DWORD *)v31 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v31))
    goto LABEL_25;
  if (v15 == 10)
  {
    WebCore::throwRequiredMemberTypeError((int)a2, (int)&v31, "value", 6, "PaymentCurrencyAmount", 22, "DOMString", 10);
LABEL_25:
    v16 = 0;
    *(_DWORD *)(a1 + 16) = 1;
    goto LABEL_36;
  }
  v33 = (WTF::StringImpl *)v15;
  v17 = a2[7];
  if ((v15 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v15 + 5) == 2)
  {
    v18 = *(WTF::StringImpl **)(v15 + 8);
    if ((v18 & 1) != 0)
    {
      v18 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v15, (JSC::JSGlobalObject *)a2);
      if (!v18)
        goto LABEL_31;
    }
    else if (!v18)
    {
LABEL_31:
      v32 = v18;
      goto LABEL_32;
    }
    *(_DWORD *)v18 += 2;
    goto LABEL_31;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v33, (JSC::JSGlobalObject *)a2);
LABEL_32:
  if (*((_DWORD *)v17 + 20))
  {
    v26 = JSC::VM::hasExceptionsAfterHandlingTraps(v17);
    v19 = v32;
    if (v26)
    {
      v28 = 1;
      v32 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v25);
        else
          *(_DWORD *)v19 -= 2;
      }
      v20 = 1;
      v21 = 1;
      goto LABEL_35;
    }
  }
  else
  {
    v19 = v32;
  }
  v20 = 0;
  v21 = 0;
  v28 = 0;
  v27 = 0;
  *(_QWORD *)a1 = v12;
  *(_QWORD *)(a1 + 8) = v19;
  v12 = 0;
LABEL_35:
  *(_DWORD *)(a1 + 16) = v21;
  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C9390[v20])(&v33, &v27);
  v16 = 0;
LABEL_36:
  result = ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C9390[v16])(&v27, &v29);
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      return WTF::StringImpl::destroy(v12, v22);
    else
      *(_DWORD *)v12 -= 2;
  }
  return result;
}

void WebCore::convertDictionary<WebCore::PaymentDetailsUpdate>(JSC::JSCell *this@<X1>, JSC::JSGlobalObject *a2@<X0>, uint64_t a3@<X8>)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::Structure *Object;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  __int128 v12;
  WTF::StringImpl *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  WTF::StringImpl **v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34;
  int v35;
  WTF *v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  WTF::StringImpl **v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  int v45;
  WTF *v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  uint64_t v50;
  JSC::VM *v51;
  WebCore::PaymentDetailsModifier *hasExceptionsAfterHandlingTraps;
  int v53;
  WTF *v54;
  unsigned int v55;
  unsigned int v56;
  WTF *v57;
  uint64_t v58;
  uint64_t v59;
  WTF *v60;
  int v61;
  WTF::StringImpl *v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64;
  uint64_t v65;
  int v66;
  WTF *v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  WTF *v71;
  WTF::StringImpl *v72;
  uint64_t v73;
  JSC::VM *v74;
  WTF::StringImpl **v75;
  WTF::StringImpl *v76;
  WTF::StringImpl *v77;
  WTF::StringImpl *v78;
  WTF::StringImpl *v79;
  JSC::JSCell *v80;
  int v81;
  WTF::StringImpl *v82;
  WTF::StringImpl *v83;
  uint64_t v84;
  WTF::StringImpl *v85;
  WTF::StringImpl *v86;
  WTF::StringImpl *v87;
  int v88;
  WTF::StringImpl *v89;
  WTF::StringImpl *v90;
  uint64_t v91;
  int v92;
  WTF::StringImpl *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t *v100;
  uint64_t v101;
  _QWORD *v102;
  unint64_t v103;
  unint64_t *v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  int v109;
  WTF::StringImpl *v110;
  WTF::StringImpl *v111;
  JSC::JSCell *v112;
  JSC::VM *v113;
  unsigned int v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  WTF::StringImpl *v121;
  unsigned int v122;
  WTF::StringImpl *v123;
  JSC::JSCell *v124;
  WTF::StringImpl *v125;
  uint64_t v126;
  WTF::StringImpl *v127;
  WTF::StringImpl *v128;
  WTF::StringImpl *v129;
  char v130;
  WTF::StringImpl *v131;
  WTF::StringImpl *v132;
  char v133;
  int v134;
  _QWORD *v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  WTF::StringImpl *v149[2];
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  WTF::StringImpl *v155[2];
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  unsigned int v161;
  WTF *v162;
  unint64_t v163;
  char v164;
  WTF *v165;
  unint64_t v166;
  unsigned __int8 v167;
  WTF *v168;
  unint64_t v169;
  char v170;
  WTF::StringImpl *v171;
  __int128 v172;
  WTF::StringImpl *v173;
  char v174;
  char v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  JSC::VM *v184;
  JSC::VM *v185;
  WTF::StringImpl **v186;

  v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v184 = v5;
  v6 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    Object = 0;
    goto LABEL_5;
  }
  if (((unint64_t)this & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::Structure *)JSC::JSCell::getObject(this);
    if (Object)
    {
LABEL_5:
      LOBYTE(v162) = 0;
      v164 = 0;
      LOBYTE(v165) = 0;
      v167 = 0;
      LOBYTE(v168) = 0;
      v170 = 0;
      v171 = 0;
      LOBYTE(v172) = 0;
      v175 = 0;
      v176 = 0u;
      v177 = 0u;
      v178 = 0u;
      v179 = 0u;
      v180 = 0u;
      v181 = 0u;
      v182 = 0u;
      v183 = 0u;
      if (v6 == 2)
      {
LABEL_6:
        *(_BYTE *)(a3 + 8) = 0;
        *(_BYTE *)(a3 + 24) = 0;
        if (v164)
        {
          *(_QWORD *)(a3 + 8) = v162;
          v8 = v163;
          v162 = 0;
          v163 = 0;
          *(_QWORD *)(a3 + 16) = v8;
          *(_BYTE *)(a3 + 24) = 1;
        }
        *(_BYTE *)(a3 + 32) = 0;
        *(_BYTE *)(a3 + 48) = 0;
        if (v167)
        {
          *(_QWORD *)(a3 + 32) = v165;
          v9 = v166;
          v165 = 0;
          v166 = 0;
          *(_QWORD *)(a3 + 40) = v9;
          *(_BYTE *)(a3 + 48) = 1;
        }
        *(_BYTE *)(a3 + 56) = 0;
        *(_BYTE *)(a3 + 72) = 0;
        if (v170)
        {
          *(_QWORD *)(a3 + 56) = v168;
          v10 = v169;
          v168 = 0;
          v169 = 0;
          *(_QWORD *)(a3 + 64) = v10;
          *(_BYTE *)(a3 + 72) = 1;
        }
        v11 = v171;
        v171 = 0;
        *(_QWORD *)(a3 + 80) = v11;
        *(_BYTE *)(a3 + 88) = 0;
        *(_BYTE *)(a3 + 120) = 0;
        if (v175)
        {
          v12 = v172;
          v172 = 0uLL;
          *(_OWORD *)(a3 + 88) = v12;
          v13 = v173;
          v173 = 0;
          *(_QWORD *)(a3 + 104) = v13;
          *(_BYTE *)(a3 + 112) = v174;
          *(_BYTE *)(a3 + 120) = 1;
        }
        v14 = v176;
        v176 = 0u;
        v15 = v177;
        v177 = 0u;
        *(_OWORD *)(a3 + 128) = v14;
        *(_OWORD *)(a3 + 144) = v15;
        v16 = v178;
        v178 = 0u;
        v17 = v179;
        v179 = 0u;
        *(_OWORD *)(a3 + 160) = v16;
        *(_OWORD *)(a3 + 176) = v17;
        v18 = v180;
        v180 = 0u;
        v19 = v181;
        v181 = 0u;
        *(_OWORD *)(a3 + 192) = v18;
        *(_OWORD *)(a3 + 208) = v19;
        v20 = v182;
        v182 = 0u;
        *(_OWORD *)(a3 + 224) = v20;
        v21 = v183;
        *(_QWORD *)&v183 = 0;
        *(_OWORD *)(a3 + 240) = (unint64_t)v21;
        if (*((_QWORD *)&v21 + 1))
        {
          v22 = *(_QWORD *)(((*((_QWORD *)&v21 + 1) - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
          v23 = *(_QWORD **)(v22 + 40);
          if (!v23)
          {
            JSC::HandleSet::grow(*(JSC::HandleSet **)(((*((_QWORD *)&v21 + 1) - 16) & 0xFFFFFFFFFFFFF000) + 0x10));
            v23 = *(_QWORD **)(v22 + 40);
          }
          *(_QWORD *)(v22 + 40) = *v23;
          v23[2] = 0;
          v24 = v23 + 2;
          *v23 = 0;
          v23[1] = 0;
          *(_QWORD *)(a3 + 248) = v23 + 2;
          v25 = *((_QWORD *)&v183 + 1);
          if (*((_QWORD *)&v183 + 1))
            v25 = **((_QWORD **)&v183 + 1);
          v26 = (unint64_t)(v24 - 2);
          if ((v25 != 0) != (*v24 != 0))
          {
            if (v25)
            {
              v27 = *(unint64_t **)((v26 & 0xFFFFFFFFFFFFF000) + 0x10);
              v28 = v27[3];
              v27 += 3;
              *(_QWORD *)v26 = v28;
              *(v24 - 1) = v27;
              *v27 = v26;
              *(_QWORD *)(v28 + 8) = v26;
            }
            else
            {
              v146 = *(_QWORD *)v26;
              v145 = (_QWORD *)*(v24 - 1);
              *v145 = *(_QWORD *)v26;
              *(_QWORD *)(v146 + 8) = v145;
              *(_QWORD *)v26 = 0;
              *(_QWORD *)(v26 + 8) = 0;
              v24 = *(_QWORD **)(a3 + 248);
            }
          }
          *v24 = v25;
        }
        *(_DWORD *)(a3 + 256) = 0;
        goto LABEL_24;
      }
      WTF::AtomStringImpl::addLiteral();
      v30 = JSC::JSObject::get(Object, a2, (unint64_t)v155[0]);
      if (v155[0])
      {
        if (*(_DWORD *)v155[0] == 2)
          WTF::StringImpl::destroy(v155[0], v29);
        else
          *(_DWORD *)v155[0] -= 2;
      }
      if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
        goto LABEL_259;
      if (v30 == 10)
      {
LABEL_66:
        WTF::AtomStringImpl::addLiteral();
        v48 = v155[0];
        v50 = JSC::JSObject::get(Object, a2, (unint64_t)v155[0]);
        if (v48)
        {
          if (*(_DWORD *)v48 == 2)
            WTF::StringImpl::destroy(v48, v49);
          else
            *(_DWORD *)v48 -= 2;
        }
        if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
          goto LABEL_259;
        if (v50 == 10)
          goto LABEL_95;
        v51 = (JSC::VM *)*((_QWORD *)a2 + 7);
        v185 = v51;
        if ((v50 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v50 + 5) <= 0x16u)
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          JSC::throwTypeError();
          v62 = v149[0];
          v149[0] = 0;
          if (v62)
          {
            if (*(_DWORD *)v62 == 2)
              WTF::StringImpl::destroy(v62, this);
            else
              *(_DWORD *)v62 -= 2;
          }
          v53 = 1;
          LODWORD(v156) = 1;
        }
        else
        {
          v149[0] = 0;
          v149[1] = 0;
          v186 = v149;
          JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PaymentDetailsModifier>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<WebCore::PaymentDetailsModifier,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(a2, v50, (uint64_t *)&v186);
          if (*((_DWORD *)v51 + 20)
            && (hasExceptionsAfterHandlingTraps = (WebCore::PaymentDetailsModifier *)JSC::VM::hasExceptionsAfterHandlingTraps(v51),
                (hasExceptionsAfterHandlingTraps & 1) != 0))
          {
            hasExceptionsAfterHandlingTraps = v149[0];
            LODWORD(v156) = 1;
            if (HIDWORD(v149[1]))
            {
              v138 = 72 * HIDWORD(v149[1]);
              do
              {
                WebCore::PaymentDetailsModifier::~PaymentDetailsModifier(hasExceptionsAfterHandlingTraps, this);
                hasExceptionsAfterHandlingTraps = (WebCore::PaymentDetailsModifier *)(v139 + 72);
                v138 -= 72;
              }
              while (v138);
              hasExceptionsAfterHandlingTraps = v149[0];
            }
            if (hasExceptionsAfterHandlingTraps)
            {
              v149[0] = 0;
              LODWORD(v149[1]) = 0;
              hasExceptionsAfterHandlingTraps = (WebCore::PaymentDetailsModifier *)WTF::fastFree(hasExceptionsAfterHandlingTraps, this);
            }
          }
          else
          {
            v155[0] = v149[0];
            v155[1] = v149[1];
            LODWORD(v156) = 0;
          }
          v53 = v156;
          if (!(_DWORD)v156)
          {
            v54 = v155[0];
            v56 = v155[1];
            v55 = HIDWORD(v155[1]);
            v155[0] = 0;
            v155[1] = 0;
            if (!v170)
            {
              v168 = v54;
              v169 = __PAIR64__(v55, v56);
              v170 = 1;
              _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore22PaymentDetailsModifierELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_((uint64_t)hasExceptionsAfterHandlingTraps, (WTF::StringImpl *)v155);
              goto LABEL_95;
            }
            if (HIDWORD(v169))
            {
              v57 = v168;
              v58 = 72 * HIDWORD(v169);
              do
              {
                WebCore::PaymentDetailsModifier::~PaymentDetailsModifier(v57, this);
                v57 = (WTF *)(v59 + 72);
                v58 -= 72;
              }
              while (v58);
            }
            v60 = v168;
            if (v168)
            {
              v168 = 0;
              LODWORD(v169) = 0;
              WTF::fastFree(v60, this);
            }
            v168 = v54;
            v169 = __PAIR64__(v55, v56);
            v61 = 1;
            v53 = v156;
            goto LABEL_88;
          }
        }
        v61 = 0;
        *(_DWORD *)(a3 + 256) = 1;
LABEL_88:
        if (v53 == -1)
        {
          if (!v61)
            goto LABEL_24;
        }
        else
        {
          ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32CB080[v53])(v149, v155);
          if ((v61 & 1) == 0)
            goto LABEL_24;
        }
LABEL_95:
        WTF::AtomStringImpl::addLiteral();
        v63 = v155[0];
        v65 = JSC::JSObject::get(Object, a2, (unint64_t)v155[0]);
        if (v63)
        {
          if (*(_DWORD *)v63 == 2)
            WTF::StringImpl::destroy(v63, v64);
          else
            *(_DWORD *)v63 -= 2;
        }
        if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
          goto LABEL_259;
        if (v65 == 10)
          goto LABEL_112;
        WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PaymentShippingOption>>>::convert((uint64_t)v155, a2, v65);
        v66 = v156;
        if ((_DWORD)v156)
        {
          *(_DWORD *)(a3 + 256) = 1;
          v70 = v66;
        }
        else
        {
          v67 = v155[0];
          v68 = v155[1];
          v69 = HIDWORD(v155[1]);
          v155[0] = 0;
          v155[1] = 0;
          v70 = v167;
          if (!v167)
          {
            v165 = v67;
            v166 = __PAIR64__(v69, v68);
            v167 = 1;
            goto LABEL_111;
          }
          if (HIDWORD(v166))
            WTF::VectorDestructor<true,WebCore::PaymentShippingOption>::destruct(v165, (WTF *)((char *)v165 + 40 * HIDWORD(v166)));
          v71 = v165;
          if (v165)
          {
            v165 = 0;
            LODWORD(v166) = 0;
            WTF::fastFree(v71, this);
          }
          v165 = v67;
          v166 = __PAIR64__(v69, v68);
          v70 = v156;
        }
        if (v70 == -1)
        {
          if (!v66)
          {
LABEL_112:
            WTF::AtomStringImpl::addLiteral();
            v72 = v155[0];
            v73 = JSC::JSObject::get(Object, a2, (unint64_t)v155[0]);
            if (v72)
            {
              if (*(_DWORD *)v72 == 2)
                WTF::StringImpl::destroy(v72, this);
              else
                *(_DWORD *)v72 -= 2;
            }
            if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
            {
LABEL_259:
              *(_DWORD *)(a3 + 256) = 1;
              goto LABEL_24;
            }
            if (v73 == 10)
            {
LABEL_130:
              WTF::AtomStringImpl::addLiteral();
              v78 = v155[0];
              v80 = (JSC::JSCell *)JSC::JSObject::get(Object, a2, (unint64_t)v155[0]);
              if (v78)
              {
                if (*(_DWORD *)v78 == 2)
                  WTF::StringImpl::destroy(v78, v79);
                else
                  *(_DWORD *)v78 -= 2;
              }
              if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
                goto LABEL_259;
              if (v80 != (JSC::JSCell *)10)
              {
                WebCore::convertDictionary<WebCore::PayerErrorFields>((uint64_t)v155, a2, v80);
                v81 = DWORD2(v156);
                if (DWORD2(v156))
                {
                  *(_DWORD *)(a3 + 256) = 1;
                  v88 = v81;
                }
                else
                {
                  v82 = v155[0];
                  v83 = v155[1];
                  v155[0] = 0;
                  v155[1] = 0;
                  v84 = v156;
                  *(_QWORD *)&v156 = 0;
                  v85 = (WTF::StringImpl *)v182;
                  *(_QWORD *)&v182 = v82;
                  if (v85)
                  {
                    if (*(_DWORD *)v85 == 2)
                      WTF::StringImpl::destroy(v85, this);
                    else
                      *(_DWORD *)v85 -= 2;
                  }
                  v86 = (WTF::StringImpl *)*((_QWORD *)&v182 + 1);
                  *((_QWORD *)&v182 + 1) = v83;
                  if (v86)
                  {
                    if (*(_DWORD *)v86 == 2)
                      WTF::StringImpl::destroy(v86, this);
                    else
                      *(_DWORD *)v86 -= 2;
                  }
                  v87 = (WTF::StringImpl *)v183;
                  *(_QWORD *)&v183 = v84;
                  if (v87)
                  {
                    if (*(_DWORD *)v87 == 2)
                      WTF::StringImpl::destroy(v87, this);
                    else
                      *(_DWORD *)v87 -= 2;
                  }
                  v88 = DWORD2(v156);
                }
                if (v88 != -1)
                  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32CB0B0[v88])(v149, v155);
                if (v81)
                  goto LABEL_24;
              }
              WTF::AtomStringImpl::addLiteral();
              v89 = v155[0];
              v91 = JSC::JSObject::get(Object, a2, (unint64_t)v155[0]);
              if (v89)
              {
                if (*(_DWORD *)v89 == 2)
                  WTF::StringImpl::destroy(v89, v90);
                else
                  *(_DWORD *)v89 -= 2;
              }
              if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
                goto LABEL_259;
              if (v91 == 10)
              {
LABEL_174:
                WTF::AtomStringImpl::addLiteral();
                v110 = v155[0];
                v112 = (JSC::JSCell *)JSC::JSObject::get(Object, a2, (unint64_t)v155[0]);
                if (v110)
                {
                  if (*(_DWORD *)v110 == 2)
                    WTF::StringImpl::destroy(v110, v111);
                  else
                    *(_DWORD *)v110 -= 2;
                }
                v113 = v184;
                if (!*((_DWORD *)v184 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v184))
                {
                  if (v112 != (JSC::JSCell *)10)
                  {
                    WebCore::convertDictionary<WebCore::AddressErrors>(v112, a2, (uint64_t)v155);
                    v114 = v161;
                    if (v161)
                    {
                      *(_DWORD *)(a3 + 256) = 1;
                      v122 = v114;
                    }
                    else
                    {
                      v115 = *(_OWORD *)v155;
                      v116 = v156;
                      *(_OWORD *)v155 = 0u;
                      v156 = 0u;
                      *(_OWORD *)v149 = v115;
                      v150 = v116;
                      v117 = v157;
                      v118 = v158;
                      v157 = 0u;
                      v158 = 0u;
                      v151 = v117;
                      v152 = v118;
                      v119 = v159;
                      v120 = v160;
                      v159 = 0u;
                      v160 = 0u;
                      v153 = v119;
                      v154 = v120;
                      WebCore::AddressErrors::operator=((WTF::StringImpl **)&v176, (WTF::StringImpl *)v149);
                      WebCore::AddressErrors::~AddressErrors((WebCore::AddressErrors *)v149, v121);
                      v122 = v161;
                    }
                    if (v122 != -1)
                      (*(&off_1E32CB0C0 + v122))((int)v149, (WebCore::AddressErrors *)v155);
                    if (v114)
                      goto LABEL_24;
                  }
                  WTF::AtomStringImpl::addLiteral();
                  v123 = v155[0];
                  v124 = (JSC::JSCell *)JSC::JSObject::get(Object, a2, (unint64_t)v155[0]);
                  if (v123)
                  {
                    if (*(_DWORD *)v123 == 2)
                      WTF::StringImpl::destroy(v123, this);
                    else
                      *(_DWORD *)v123 -= 2;
                  }
                  if (!*((_DWORD *)v113 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v113))
                  {
                    if (v124 != (JSC::JSCell *)10)
                    {
                      v125 = (WTF::StringImpl *)WebCore::convertDictionary<WebCore::PaymentItem>((uint64_t)v155, (JSC::VM **)a2, v124);
                      v126 = v157;
                      if ((_DWORD)v157)
                      {
                        *(_DWORD *)(a3 + 256) = 1;
                        if ((_DWORD)v126 != -1)
                          ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32CB0A0[v126])(v149, v155);
                        goto LABEL_24;
                      }
                      v127 = v155[0];
                      v128 = v155[1];
                      v155[0] = 0;
                      v155[1] = 0;
                      v129 = (WTF::StringImpl *)v156;
                      *(_QWORD *)&v156 = 0;
                      v130 = BYTE8(v156);
                      if (v175)
                      {
                        v131 = (WTF::StringImpl *)v172;
                        *(_QWORD *)&v172 = v127;
                        if (v131)
                        {
                          if (*(_DWORD *)v131 == 2)
                            WTF::StringImpl::destroy(v131, this);
                          else
                            *(_DWORD *)v131 -= 2;
                        }
                        v132 = (WTF::StringImpl *)*((_QWORD *)&v172 + 1);
                        *((_QWORD *)&v172 + 1) = v128;
                        if (v132)
                        {
                          if (*(_DWORD *)v132 == 2)
                            WTF::StringImpl::destroy(v132, this);
                          else
                            *(_DWORD *)v132 -= 2;
                        }
                        v125 = v173;
                        v173 = v129;
                        if (v125)
                        {
                          if (*(_DWORD *)v125 == 2)
                            v125 = (WTF::StringImpl *)WTF::StringImpl::destroy(v125, this);
                          else
                            *(_DWORD *)v125 -= 2;
                        }
                        v174 = v130;
                      }
                      else
                      {
                        *(_QWORD *)&v172 = v127;
                        *((_QWORD *)&v172 + 1) = v128;
                        v173 = v129;
                        v174 = BYTE8(v156);
                        v175 = 1;
                      }
                      _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore11PaymentItemENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_((uint64_t)v125, (WTF::StringImpl *)v155);
                    }
                    goto LABEL_6;
                  }
                }
                goto LABEL_259;
              }
              WebCore::Converter<WebCore::IDLObject>::convert<WebCore::DefaultExceptionThrower>((uint64_t)a2, v91, (uint64_t)v155);
              v92 = (int)v155[1];
              if (LODWORD(v155[1]))
              {
                *(_DWORD *)(a3 + 256) = 1;
                v109 = v92;
LABEL_171:
                if (v109 != -1)
                  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32CB060[v109])(v149, v155);
                if (v92)
                  goto LABEL_24;
                goto LABEL_174;
              }
              v93 = v155[0];
              if (!v155[0])
              {
                if (*((_QWORD *)&v183 + 1))
                {
                  v140 = (uint64_t *)(*((_QWORD *)&v183 + 1) - 16);
                  v141 = *(_QWORD *)(((*((_QWORD *)&v183 + 1) - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
                  v142 = *(uint64_t **)(*((_QWORD *)&v183 + 1) - 8);
                  if (v142)
                  {
                    v143 = *v140;
                    *v142 = *v140;
                    *(_QWORD *)(v143 + 8) = v142;
                    *v140 = 0;
                    v140[1] = 0;
                  }
                  *v140 = *(_QWORD *)(v141 + 40);
                  *(_QWORD *)(v141 + 40) = v140;
                  *((_QWORD *)&v183 + 1) = 0;
                }
                goto LABEL_170;
              }
              v94 = *(_QWORD *)((((unint64_t)v155[0] - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
              v95 = *(_QWORD **)(v94 + 40);
              if (v95)
              {
                *(_QWORD *)(v94 + 40) = *v95;
                v95[2] = 0;
                v96 = v95 + 2;
                *v95 = 0;
                v95[1] = 0;
              }
              else
              {
                JSC::HandleSet::grow(*(JSC::HandleSet **)((((unint64_t)v155[0] - 16) & 0xFFFFFFFFFFFFF000)
                                                        + 0x10));
                v144 = *(_QWORD **)(v94 + 40);
                v93 = v155[0];
                *(_QWORD *)(v94 + 40) = *v144;
                *v144 = 0;
                v144[1] = 0;
                v144[2] = 0;
                v96 = v144 + 2;
                if (!v93)
                {
                  v97 = 0;
LABEL_160:
                  *v96 = v97;
                  v98 = (unint64_t)(v96 - 2);
                  v99 = (_QWORD *)*((_QWORD *)&v183 + 1);
                  if (!*((_QWORD *)&v183 + 1))
                  {
                    v100 = *(uint64_t **)((v98 & 0xFFFFFFFFFFFFF000) + 0x10);
                    v101 = *v100;
                    v102 = *(_QWORD **)(*v100 + 712);
                    if (!v102)
                    {
                      JSC::HandleSet::grow((JSC::HandleSet *)(v101 + 672));
                      v102 = *(_QWORD **)(v101 + 712);
                    }
                    *(_QWORD *)(v101 + 712) = *v102;
                    v102[2] = 0;
                    v99 = v102 + 2;
                    *v102 = 0;
                    v102[1] = 0;
                    *((_QWORD *)&v183 + 1) = v102 + 2;
                  }
                  v103 = (unint64_t)(v99 - 2);
                  if ((v97 != 0) != (*v99 != 0))
                  {
                    if (v97)
                    {
                      v104 = *(unint64_t **)((v103 & 0xFFFFFFFFFFFFF000) + 0x10);
                      v105 = v104[3];
                      v104 += 3;
                      *(_QWORD *)v103 = v105;
                      *(v99 - 1) = v104;
                      *v104 = v103;
                      *(_QWORD *)(v105 + 8) = v103;
                    }
                    else
                    {
                      v148 = *(_QWORD *)v103;
                      v147 = (_QWORD *)*(v99 - 1);
                      *v147 = *(_QWORD *)v103;
                      *(_QWORD *)(v148 + 8) = v147;
                      *(_QWORD *)v103 = 0;
                      *(_QWORD *)(v103 + 8) = 0;
                      v99 = (_QWORD *)*((_QWORD *)&v183 + 1);
                    }
                  }
                  *v99 = v97;
                  v106 = *(_QWORD *)((v98 & 0xFFFFFFFFFFFFF000) + 0x10);
                  v107 = *(_QWORD **)(v98 + 8);
                  if (v107)
                  {
                    v108 = *(_QWORD *)v98;
                    *v107 = *(_QWORD *)v98;
                    *(_QWORD *)(v108 + 8) = v107;
                    *(_QWORD *)v98 = 0;
                    *(_QWORD *)(v98 + 8) = 0;
                  }
                  *(_QWORD *)v98 = *(_QWORD *)(v106 + 40);
                  *(_QWORD *)(v106 + 40) = v98;
LABEL_170:
                  v109 = (int)v155[1];
                  goto LABEL_171;
                }
              }
              v97 = *(_QWORD *)v93;
              if (*(_QWORD *)v93)
              {
                v135 = *(_QWORD **)(((unint64_t)(v96 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
                v136 = v135[3];
                v135 += 3;
                *(v96 - 2) = v136;
                *(v96 - 1) = v135;
                *v135 = v96 - 2;
                *(_QWORD *)(v136 + 8) = v96 - 2;
              }
              goto LABEL_160;
            }
            v149[0] = (WTF::StringImpl *)v73;
            v74 = (JSC::VM *)*((_QWORD *)a2 + 7);
            if ((v73 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v73 + 5) != 2)
            {
              JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v149, a2);
LABEL_123:
              if (!*((_DWORD *)v74 + 20))
              {
                v76 = (WTF::StringImpl *)v186;
LABEL_125:
                LODWORD(v155[1]) = 0;
LABEL_126:
                v155[0] = 0;
                v77 = v171;
                v171 = v76;
                if (!v77)
                {
LABEL_129:
                  _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)v149, (WTF::StringImpl *)v155);
                  goto LABEL_130;
                }
                if (*(_DWORD *)v77 != 2)
                {
                  *(_DWORD *)v77 -= 2;
                  goto LABEL_129;
                }
                WTF::StringImpl::destroy(v77, this);
                v133 = 1;
                v134 = (int)v155[1];
LABEL_212:
                if (v134 != -1)
                  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C9390[v134])(v149, v155);
                if ((v133 & 1) == 0)
                  goto LABEL_24;
                goto LABEL_130;
              }
              v137 = JSC::VM::hasExceptionsAfterHandlingTraps(v74);
              v76 = (WTF::StringImpl *)v186;
              if ((v137 & 1) == 0)
                goto LABEL_125;
              LODWORD(v155[1]) = 1;
              v186 = 0;
              if (v76)
              {
                if (*(_DWORD *)v76 == 2)
                {
                  WTF::StringImpl::destroy(v76, this);
                  v134 = (int)v155[1];
                  if (!LODWORD(v155[1]))
                  {
                    v76 = v155[0];
                    goto LABEL_126;
                  }
LABEL_244:
                  v133 = 0;
                  *(_DWORD *)(a3 + 256) = 1;
                  goto LABEL_212;
                }
                *(_DWORD *)v76 -= 2;
              }
              v134 = 1;
              goto LABEL_244;
            }
            v75 = *(WTF::StringImpl ***)(v73 + 8);
            if ((v75 & 1) != 0)
            {
              v75 = *(WTF::StringImpl ***)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v73, a2);
              if (!v75)
                goto LABEL_122;
            }
            else if (!v75)
            {
LABEL_122:
              v186 = v75;
              goto LABEL_123;
            }
            *(_DWORD *)v75 += 2;
            goto LABEL_122;
          }
LABEL_24:
          WebCore::PaymentDetailsUpdate::~PaymentDetailsUpdate((WebCore::PaymentDetailsUpdate *)&v162, this);
          return;
        }
LABEL_111:
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32CB090[v70])(v149, v155);
        if (!v66)
          goto LABEL_112;
        goto LABEL_24;
      }
      v31 = (WTF::StringImpl **)*((_QWORD *)a2 + 7);
      v186 = v31;
      if ((v30 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v30 + 5) <= 0x16u)
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        JSC::throwTypeError();
        v44 = v155[0];
        v155[0] = 0;
        if (v44)
        {
          if (*(_DWORD *)v44 == 2)
            WTF::StringImpl::destroy(v44, this);
          else
            *(_DWORD *)v44 -= 2;
        }
        v35 = 1;
        LODWORD(v156) = 1;
      }
      else
      {
        v149[0] = 0;
        v149[1] = 0;
        v155[0] = (WTF::StringImpl *)v149;
        JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PaymentItem>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<WebCore::PaymentItem,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(a2, v30, (uint64_t *)v155);
        if (*((_DWORD *)v31 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v31) & 1) != 0)
        {
          v33 = 1;
        }
        else
        {
          v33 = 0;
          v155[0] = v149[0];
          v34 = v149[1];
          v149[0] = 0;
          v149[1] = 0;
          v155[1] = v34;
        }
        LODWORD(v156) = v33;
        WTF::Vector<WebCore::InspectorFrontendClientSaveData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((unsigned int *)v149, v32);
        v35 = v156;
        if (!(_DWORD)v156)
        {
          v36 = v155[0];
          v149[0] = v155[0];
          v37 = v155[1];
          v38 = HIDWORD(v155[1]);
          v155[0] = 0;
          v155[1] = 0;
          v149[1] = (WTF::StringImpl *)__PAIR64__(v38, v37);
          if (v164)
          {
            if (HIDWORD(v163))
            {
              v39 = 32 * HIDWORD(v163);
              v40 = (WTF::StringImpl **)((char *)v162 + 16);
              do
              {
                v41 = *v40;
                *v40 = 0;
                if (v41)
                {
                  if (*(_DWORD *)v41 == 2)
                    WTF::StringImpl::destroy(v41, this);
                  else
                    *(_DWORD *)v41 -= 2;
                }
                v42 = *(v40 - 1);
                *(v40 - 1) = 0;
                if (v42)
                {
                  if (*(_DWORD *)v42 == 2)
                    WTF::StringImpl::destroy(v42, this);
                  else
                    *(_DWORD *)v42 -= 2;
                }
                v43 = *(v40 - 2);
                *(v40 - 2) = 0;
                if (v43)
                {
                  if (*(_DWORD *)v43 == 2)
                    WTF::StringImpl::destroy(v43, this);
                  else
                    *(_DWORD *)v43 -= 2;
                }
                v40 += 4;
                v39 -= 32;
              }
              while (v39);
            }
            v46 = v162;
            if (v162)
            {
              v162 = 0;
              LODWORD(v163) = 0;
              WTF::fastFree(v46, this);
            }
            v162 = v149[0];
            v47 = v149[1];
            v149[0] = 0;
            v149[1] = 0;
            v163 = (unint64_t)v47;
          }
          else
          {
            v149[0] = 0;
            v149[1] = 0;
            v162 = v36;
            v163 = __PAIR64__(v38, v37);
            v164 = 1;
          }
          WTF::Vector<WebCore::InspectorFrontendClientSaveData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((unsigned int *)v149, this);
          v45 = 1;
          v35 = v156;
LABEL_63:
          if (v35 != -1)
            ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32CB070[v35])(v149, v155);
          if (!v45)
            goto LABEL_24;
          goto LABEL_66;
        }
      }
      v45 = 0;
      *(_DWORD *)(a3 + 256) = 1;
      goto LABEL_63;
    }
  }
  JSC::throwTypeError();
  *(_DWORD *)(a3 + 256) = 1;
}

WTF::StringImpl **WebCore::AddressErrors::operator=(WTF::StringImpl **a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;

  v4 = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  v5 = *a1;
  *a1 = v4;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, a2);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  v7 = a1[1];
  a1[1] = v6;
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, a2);
    else
      *(_DWORD *)v7 -= 2;
  }
  v8 = (WTF::StringImpl *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  v9 = a1[2];
  a1[2] = v8;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, a2);
    else
      *(_DWORD *)v9 -= 2;
  }
  v10 = (WTF::StringImpl *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  v11 = a1[3];
  a1[3] = v10;
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, a2);
    else
      *(_DWORD *)v11 -= 2;
  }
  v12 = (WTF::StringImpl *)*((_QWORD *)a2 + 4);
  *((_QWORD *)a2 + 4) = 0;
  v13 = a1[4];
  a1[4] = v12;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, a2);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = (WTF::StringImpl *)*((_QWORD *)a2 + 5);
  *((_QWORD *)a2 + 5) = 0;
  v15 = a1[5];
  a1[5] = v14;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, a2);
    else
      *(_DWORD *)v15 -= 2;
  }
  v16 = (WTF::StringImpl *)*((_QWORD *)a2 + 6);
  *((_QWORD *)a2 + 6) = 0;
  v17 = a1[6];
  a1[6] = v16;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, a2);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
  *((_QWORD *)a2 + 7) = 0;
  v19 = a1[7];
  a1[7] = v18;
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, a2);
    else
      *(_DWORD *)v19 -= 2;
  }
  v20 = (WTF::StringImpl *)*((_QWORD *)a2 + 8);
  *((_QWORD *)a2 + 8) = 0;
  v21 = a1[8];
  a1[8] = v20;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, a2);
    else
      *(_DWORD *)v21 -= 2;
  }
  v22 = (WTF::StringImpl *)*((_QWORD *)a2 + 9);
  *((_QWORD *)a2 + 9) = 0;
  v23 = a1[9];
  a1[9] = v22;
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, a2);
    else
      *(_DWORD *)v23 -= 2;
  }
  v24 = (WTF::StringImpl *)*((_QWORD *)a2 + 10);
  *((_QWORD *)a2 + 10) = 0;
  v25 = a1[10];
  a1[10] = v24;
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, a2);
    else
      *(_DWORD *)v25 -= 2;
  }
  v26 = (WTF::StringImpl *)*((_QWORD *)a2 + 11);
  *((_QWORD *)a2 + 11) = 0;
  v27 = a1[11];
  a1[11] = v26;
  if (v27)
  {
    if (*(_DWORD *)v27 == 2)
      WTF::StringImpl::destroy(v27, a2);
    else
      *(_DWORD *)v27 -= 2;
  }
  return a1;
}

uint64_t WebCore::convertDictionary<WebCore::PaymentItem>(uint64_t a1, JSC::VM **a2, JSC::JSCell *this)
{
  uint64_t Object;
  JSC::Structure *v6;
  WTF::StringImpl *v7;
  JSC::JSCell *v8;
  uint64_t result;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  BOOL v21;
  JSC::VM *v22;
  double v23;
  int v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v28;
  BOOL v29;
  int v30;
  uint64_t v31;
  int *v32;
  int v33;
  WTF::StringImpl *v34;
  int v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  unsigned int v38;
  JSC::VM *v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;

  v39 = a2[7];
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
    goto LABEL_9;
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = JSC::throwTypeError();
    goto LABEL_10;
  }
  v6 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v8 = (JSC::JSCell *)JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v36);
  if (v36)
  {
    if (*(_DWORD *)v36 == 2)
      WTF::StringImpl::destroy(v36, v7);
    else
      *(_DWORD *)v36 -= 2;
  }
  if (*((_DWORD *)v39 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v39);
    if ((_DWORD)result)
      goto LABEL_10;
  }
  if (v8 == (JSC::JSCell *)10)
  {
LABEL_9:
    result = (uint64_t)WebCore::throwRequiredMemberTypeError((int)a2, (int)&v39, "amount", 7, "PaymentItem", 12, "PaymentCurrencyAmount", 22);
LABEL_10:
    *(_DWORD *)(a1 + 32) = 1;
    return result;
  }
  result = WebCore::convertDictionary<WebCore::PaymentCurrencyAmount>((uint64_t)&v36, a2, v8);
  v10 = v38;
  if (!v38)
  {
    v11 = v36;
    v12 = v37;
    v36 = 0;
    v37 = 0;
    WTF::AtomStringImpl::addLiteral();
    v14 = JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v34);
    if (v34)
    {
      if (*(_DWORD *)v34 == 2)
        WTF::StringImpl::destroy(v34, v13);
      else
        *(_DWORD *)v34 -= 2;
    }
    if (*((_DWORD *)v39 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v39))
      goto LABEL_18;
    if (v14 == 10)
    {
      WebCore::throwRequiredMemberTypeError((int)a2, (int)&v39, "label", 6, "PaymentItem", 12, "DOMString", 10);
LABEL_18:
      v15 = 0;
      *(_DWORD *)(a1 + 32) = 1;
      goto LABEL_40;
    }
    v41 = (WTF::StringImpl *)v14;
    v16 = a2[7];
    if ((v14 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v14 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v41, (JSC::JSGlobalObject *)a2);
LABEL_25:
      if (*((_DWORD *)v16 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
        v15 = v40;
        if (hasExceptionsAfterHandlingTraps)
        {
          v35 = 1;
          v40 = 0;
          if (v15)
          {
            if (*(_DWORD *)v15 == 2)
              WTF::StringImpl::destroy(v15, v28);
            else
              *(_DWORD *)v15 -= 2;
          }
          v15 = 0;
          v24 = 1;
          v25 = 1;
          goto LABEL_39;
        }
      }
      else
      {
        v15 = v40;
      }
      v35 = 0;
      v34 = 0;
      WTF::AtomStringImpl::addLiteral();
      v18 = v41;
      v20 = JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v41);
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v19);
        else
          *(_DWORD *)v18 -= 2;
      }
      if (*((_DWORD *)v39 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v39) & 1) != 0)
        goto LABEL_75;
      if (v20 == 10)
      {
        v21 = 0;
        goto LABEL_38;
      }
      v22 = a2[7];
      if (v20 >= 0xFFFE000000000000)
      {
        v29 = (_DWORD)v20 == 0;
        goto LABEL_91;
      }
      *(_QWORD *)&v23 = v20 - 0x2000000000000;
      if (v20 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        if (v23 <= 0.0)
        {
          v21 = v23 < 0.0;
          goto LABEL_37;
        }
      }
      else
      {
        if ((v20 & 0xFFFE000000000002) != 0)
        {
          v21 = v20 == 7;
          goto LABEL_37;
        }
        v30 = *(unsigned __int8 *)(v20 + 5);
        if (v30 == 3)
        {
          v33 = *(_DWORD *)(v20 + 8);
LABEL_87:
          v29 = v33 == 0;
          goto LABEL_91;
        }
        if (v30 == 2)
        {
          v31 = *(_QWORD *)(v20 + 8);
          if ((v31 & 1) != 0)
            v32 = (int *)(v20 + 16);
          else
            v32 = (int *)(v31 + 4);
          v33 = *v32;
          goto LABEL_87;
        }
        if ((*(_BYTE *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0xA) & 1) != 0)
        {
          v29 = *(_QWORD *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x28) == (_QWORD)a2;
LABEL_91:
          v21 = !v29;
LABEL_37:
          if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
          {
LABEL_75:
            v25 = 0;
            v24 = 1;
            goto LABEL_39;
          }
LABEL_38:
          v24 = 0;
          v25 = 0;
          *(_QWORD *)a1 = v15;
          *(_QWORD *)(a1 + 8) = v11;
          *(_QWORD *)(a1 + 16) = v12;
          *(_BYTE *)(a1 + 24) = v21;
          v12 = 0;
          v11 = 0;
          v15 = 0;
LABEL_39:
          *(_DWORD *)(a1 + 32) = v24;
          ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C9390[v25])(&v41, &v34);
          goto LABEL_40;
        }
      }
      v21 = 1;
      goto LABEL_37;
    }
    v17 = *(WTF::StringImpl **)(v14 + 8);
    if ((v17 & 1) != 0)
    {
      v17 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v14, (JSC::JSGlobalObject *)a2);
      if (!v17)
        goto LABEL_24;
    }
    else if (!v17)
    {
LABEL_24:
      v40 = v17;
      goto LABEL_25;
    }
    *(_DWORD *)v17 += 2;
    goto LABEL_24;
  }
  *(_DWORD *)(a1 + 32) = 1;
  if ((_DWORD)v10 == -1)
    return result;
  v15 = 0;
  v11 = 0;
  v12 = 0;
LABEL_40:
  result = ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32CB0D0[v10])(&v34, &v36);
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
    {
      result = WTF::StringImpl::destroy(v12, v26);
      if (!v11)
        goto LABEL_46;
      goto LABEL_44;
    }
    *(_DWORD *)v12 -= 2;
  }
  if (!v11)
    goto LABEL_46;
LABEL_44:
  if (*(_DWORD *)v11 == 2)
    result = WTF::StringImpl::destroy(v11, v26);
  else
    *(_DWORD *)v11 -= 2;
LABEL_46:
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      return WTF::StringImpl::destroy(v15, v26);
    else
      *(_DWORD *)v15 -= 2;
  }
  return result;
}

uint64_t WebCore::JSPaymentMethodChangeEvent::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v4 = a2[11];
  if (v4 && *(_BYTE *)(v4 + 24))
  {
    __break(0xC471u);
    JUMPOUT(0x194DCB85CLL);
  }
  v5 = *(_QWORD *)(a1 + 24);
  v11 = a2;
  v6 = *(unsigned int *)(v5 + 120);
  if ((_DWORD)v6 == -1)
  {
    v10 = std::__throw_bad_variant_access[abi:sn180100]();
    return WebCore::JSPaymentMethodChangeEvent::visitOutputConstraints<JSC::SlotVisitor>(v10);
  }
  else
  {
    v12 = &v11;
    ((void (*)(_QWORD **, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore26JSPaymentMethodChangeEvent23visitAdditionalChildrenIN3JSC19AbstractSlotVisitorEEEvRT_EUlRKNS8_22JSValueInWrappedObjectEE_JZNSA_ISC_EEvSE_EUlRKNS_8functionIFNSB_6StrongINSB_8JSObjectELNSB_30ShouldStrongDestructorGrabLockE0EEERNSB_14JSGlobalObjectEEEEE_EEEEEJRKNS0_6__implIJSF_SR_EEEEEEDcOSD_DpOT0____fmatrix[v6])(&v12, v5 + 88);
    v7 = *(uint64_t **)(*(_QWORD *)(a1 + 24) + 136);
    if (!v7 || (v7[1] & 3) != 0)
      v8 = 0;
    else
      v8 = *v7;
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*a2 + 24))(a2, v8);
  }
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPaymentMethodChangeEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  JSC::HandleSet *v7;
  unint64_t v8;
  int v9;
  JSC::JSCell *v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  uint64_t *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  void (***v32)(WebCore::PaymentMethodChangeEvent *__hidden);
  WTF::StringImpl *v33;
  WebCore::JSDOMGlobalObject *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  JSC::VM *v41;
  uint64_t v42;
  unsigned int v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char **v48;
  int v49;
  unint64_t v50;
  WebCore::JSPaymentRequestUpdateEvent *v51;
  JSC::JSCell *v52;
  unint64_t Structure;
  JSC::Structure *v54;
  JSC::JSCell *v55;
  uint64_t v56;
  JSCell *v57;
  JSC::JSCell *v58;
  JSC::JSGlobalObject *v59;
  JSC::JSObject *v60;
  JSC::JSGlobalObject *v61;
  JSC::VM *v62;
  WebCore::JSDOMGlobalObject *v63;
  JSC::Structure *v64;
  JSC::VM *FunctionRealm;
  uint64_t v66;
  unsigned int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char **v72;
  int v73;
  JSC::JSCell *v74;
  unint64_t v75;
  JSC::Structure *v76;
  JSC::JSCell *v77;
  uint64_t v78;
  unint64_t SubclassStructure;
  uint64_t *v80;
  JSCell *v81;
  uint64_t Object;
  WTF::StringImpl *v84;
  unint64_t v85;
  JSC::VM *v86;
  double v87;
  BOOL v88;
  WTF::StringImpl *v89;
  unint64_t v90;
  JSC::VM *v91;
  double v92;
  WTF::StringImpl *v93;
  unint64_t v94;
  JSC::VM *v95;
  double v96;
  WTF::StringImpl *v97;
  uint64_t v98;
  int v99;
  uint64_t *v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t *v108;
  unint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  char v113;
  WTF::StringImpl *v114;
  WTF::StringImpl *v115;
  _DWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  JSValue v119;
  _QWORD *v120;
  uint64_t v121;
  WTF::StringImpl *v122;
  int hasExceptionsAfterHandlingTraps;
  _QWORD *v124;
  BOOL v125;
  int v126;
  uint64_t v127;
  int *v128;
  int v129;
  BOOL v130;
  int v131;
  uint64_t v132;
  int *v133;
  int v134;
  BOOL v135;
  int v136;
  uint64_t v137;
  int *v138;
  int v139;
  BOOL v140;
  JSC::HandleSet *v141;
  JSC::VM *v142;
  WTF::StringImpl *v143;
  WTF::StringImpl *v144;
  _QWORD *v145;
  __int16 v146;
  char v147;
  WTF::StringImpl *v148;
  uint64_t *v149;
  unsigned int v150;
  uint64_t v151;
  int v152;
  uint64_t *v153;
  int v154;
  uint64_t v155;
  _QWORD v156[2];

  v142 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v119.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v142, a1, v119);
  }
  v7 = *(JSC::HandleSet **)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 48);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, v8, (uint64_t)&v151);
  v9 = v152;
  if (v152)
  {
    v81 = 0;
    goto LABEL_66;
  }
  if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v2 = v8;
    v155 = *((_QWORD *)a1 + 7);
    goto LABEL_7;
  }
  v10 = *(JSC::JSCell **)(a2 + 56);
  v3 = *((_QWORD *)a1 + 7);
  v155 = v3;
  if (((unint64_t)v10 & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)v10 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v10)) == 0)
    {
      JSC::throwTypeError();
      v150 = 1;
      goto LABEL_21;
    }
    v4 = Object;
    v141 = v7;
    WTF::AtomStringImpl::addLiteral();
    v85 = JSC::JSObject::get((JSC::Structure *)v4, a1, (unint64_t)v143);
    if (v143)
    {
      if (*(_DWORD *)v143 == 2)
        WTF::StringImpl::destroy(v143, v84);
      else
        *(_DWORD *)v143 -= 2;
    }
    if (*(_DWORD *)(v3 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3))
      goto LABEL_181;
    if (v85 == 10)
    {
      v140 = 0;
      goto LABEL_82;
    }
    v86 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v85 >= 0xFFFE000000000000)
    {
      v125 = (_DWORD)v85 == 0;
      goto LABEL_228;
    }
    *(_QWORD *)&v87 = v85 - 0x2000000000000;
    if (v85 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v87 <= 0.0)
      {
        v88 = v87 < 0.0;
        goto LABEL_81;
      }
    }
    else
    {
      if ((v85 & 0xFFFE000000000002) != 0)
      {
        v88 = v85 == 7;
        goto LABEL_81;
      }
      v126 = *(unsigned __int8 *)(v85 + 5);
      if (v126 == 3)
      {
        v129 = *(_DWORD *)(v85 + 8);
LABEL_227:
        v125 = v129 == 0;
        goto LABEL_228;
      }
      if (v126 == 2)
      {
        v127 = *(_QWORD *)(v85 + 8);
        if ((v127 & 1) != 0)
          v128 = (int *)(v85 + 16);
        else
          v128 = (int *)(v127 + 4);
        v129 = *v128;
        goto LABEL_227;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v85 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v125 = *(_QWORD *)(16 * (*(_DWORD *)v85 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_228:
        v88 = !v125;
LABEL_81:
        v140 = v88;
        if (*((_DWORD *)v86 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v86))
        {
LABEL_181:
          v150 = 1;
LABEL_187:
          v7 = v141;
          goto LABEL_21;
        }
LABEL_82:
        WTF::AtomStringImpl::addLiteral();
        v90 = JSC::JSObject::get((JSC::Structure *)v4, a1, (unint64_t)v143);
        if (v143)
        {
          if (*(_DWORD *)v143 == 2)
            WTF::StringImpl::destroy(v143, v89);
          else
            *(_DWORD *)v143 -= 2;
        }
        if (*(_DWORD *)(v3 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3))
          goto LABEL_181;
        if (v90 == 10)
        {
          v2 = v8;
          LOBYTE(v8) = 0;
          goto LABEL_93;
        }
        v91 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v90 >= 0xFFFE000000000000)
        {
          v2 = v8;
          v130 = (_DWORD)v90 == 0;
          goto LABEL_246;
        }
        *(_QWORD *)&v92 = v90 - 0x2000000000000;
        v2 = v8;
        if (v90 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          if (v92 <= 0.0)
          {
            LOBYTE(v8) = v92 < 0.0;
            goto LABEL_92;
          }
        }
        else
        {
          if ((v90 & 0xFFFE000000000002) != 0)
          {
            LOBYTE(v8) = v90 == 7;
            goto LABEL_92;
          }
          v131 = *(unsigned __int8 *)(v90 + 5);
          if (v131 == 3)
          {
            v134 = *(_DWORD *)(v90 + 8);
LABEL_234:
            v130 = v134 == 0;
            goto LABEL_246;
          }
          if (v131 == 2)
          {
            v132 = *(_QWORD *)(v90 + 8);
            if ((v132 & 1) != 0)
              v133 = (int *)(v90 + 16);
            else
              v133 = (int *)(v132 + 4);
            v134 = *v133;
            goto LABEL_234;
          }
          if ((*(_BYTE *)(16 * (*(_DWORD *)v90 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v130 = *(_QWORD *)(16 * (*(_DWORD *)v90 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_246:
            LOBYTE(v8) = !v130;
LABEL_92:
            if (*((_DWORD *)v91 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v91))
              goto LABEL_185;
LABEL_93:
            WTF::AtomStringImpl::addLiteral();
            v94 = JSC::JSObject::get((JSC::Structure *)v4, a1, (unint64_t)v143);
            if (v143)
            {
              if (*(_DWORD *)v143 == 2)
                WTF::StringImpl::destroy(v143, v93);
              else
                *(_DWORD *)v143 -= 2;
            }
            if (*(_DWORD *)(v3 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3))
              goto LABEL_185;
            if (v94 == 10)
            {
              LOBYTE(v12) = 0;
LABEL_104:
              WTF::AtomStringImpl::addLiteral();
              v98 = JSC::JSObject::get((JSC::Structure *)v4, a1, (unint64_t)v143);
              if (v143)
              {
                if (*(_DWORD *)v143 == 2)
                  WTF::StringImpl::destroy(v143, v97);
                else
                  *(_DWORD *)v143 -= 2;
              }
              if (!*(_DWORD *)(v3 + 80) || !JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3))
              {
                if (v98 == 10)
                {
                  v13 = 0;
                  goto LABEL_130;
                }
                if ((v98 & 0xFFFFFFFFFFFFFFF7) == 2)
                {
                  v13 = 0;
                  v99 = 0;
                  v153 = 0;
                  v154 = 0;
                  goto LABEL_128;
                }
                WebCore::Converter<WebCore::IDLObject>::convert<WebCore::DefaultExceptionThrower>((uint64_t)a1, v98, (uint64_t)&v143);
                LOBYTE(v153) = 0;
                v154 = -1;
                v99 = (int)v144;
                if ((_DWORD)v144 != -1)
                {
                  ((void (*)(_QWORD *, uint64_t **, WTF::StringImpl **))off_1E32CCCC8[v144])(v156, &v153, &v143);
                  v154 = v99;
                  if ((_DWORD)v144 != -1)
                  {
                    ((void (*)(_QWORD *, WTF::StringImpl **))off_1E32CB060[v144])(v156, &v143);
                    v99 = v154;
                  }
                  if (!v99)
                  {
                    v100 = v153;
                    if (v153)
                    {
                      v7 = *(JSC::HandleSet **)(((unint64_t)(v153 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
                      v101 = (_QWORD *)*((_QWORD *)v7 + 5);
                      if (v101)
                      {
                        *((_QWORD *)v7 + 5) = *v101;
                        v101[2] = 0;
                        v102 = v101 + 2;
                        *v101 = 0;
                        v101[1] = 0;
                        goto LABEL_119;
                      }
                      goto LABEL_197;
                    }
                    v13 = 0;
                    v99 = 0;
                    goto LABEL_128;
                  }
                  v150 = 1;
                  if (v99 != -1)
                  {
                    v13 = 0;
                    v113 = 0;
                    goto LABEL_129;
                  }
                  goto LABEL_186;
                }
              }
LABEL_185:
              v150 = 1;
LABEL_186:
              LOBYTE(v8) = v2;
              goto LABEL_187;
            }
            v95 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v94 >= 0xFFFE000000000000)
            {
              v135 = (_DWORD)v94 == 0;
              goto LABEL_239;
            }
            *(_QWORD *)&v96 = v94 - 0x2000000000000;
            if (v94 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
            {
              if (v96 <= 0.0)
              {
                LOBYTE(v12) = v96 < 0.0;
                goto LABEL_103;
              }
            }
            else
            {
              if ((v94 & 0xFFFE000000000002) != 0)
              {
                LOBYTE(v12) = v94 == 7;
                goto LABEL_103;
              }
              v136 = *(unsigned __int8 *)(v94 + 5);
              if (v136 == 3)
              {
                v139 = *(_DWORD *)(v94 + 8);
LABEL_238:
                v135 = v139 == 0;
                goto LABEL_239;
              }
              if (v136 == 2)
              {
                v137 = *(_QWORD *)(v94 + 8);
                if ((v137 & 1) != 0)
                  v138 = (int *)(v94 + 16);
                else
                  v138 = (int *)(v137 + 4);
                v139 = *v138;
                goto LABEL_238;
              }
              if ((*(_BYTE *)(16 * (*(_DWORD *)v94 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v135 = *(_QWORD *)(16 * (*(_DWORD *)v94 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_239:
                LOBYTE(v12) = !v135;
LABEL_103:
                if (*((_DWORD *)v95 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v95))
                  goto LABEL_185;
                goto LABEL_104;
              }
            }
            LOBYTE(v12) = 1;
            goto LABEL_103;
          }
        }
        LOBYTE(v8) = 1;
        goto LABEL_92;
      }
    }
    v88 = 1;
    goto LABEL_81;
  }
  v2 = v8;
LABEL_7:
  v11 = 0;
  LOBYTE(v8) = 0;
  LOBYTE(v12) = 0;
  v13 = 0;
LABEL_8:
  v14 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
  if (*MEMORY[0x1E0CBF738])
    *(_DWORD *)v14 += 2;
  LODWORD(v144) = 0;
LABEL_11:
  v143 = 0;
  LOBYTE(v146) = v11;
  HIBYTE(v146) = v8;
  v147 = v12;
  v148 = v14;
  v149 = 0;
  if (v13)
  {
    v3 = *(_QWORD *)(((unint64_t)(v13 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
    v15 = *(_QWORD *)(v3 + 40);
    LOBYTE(v8) = v2;
    if (!v15)
    {
      JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v13 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
      v15 = *(_QWORD *)(v3 + 40);
    }
    *(_QWORD *)(v3 + 40) = *(_QWORD *)v15;
    *(_QWORD *)(v15 + 16) = 0;
    v16 = (_QWORD *)(v15 + 16);
    *(_QWORD *)v15 = 0;
    *(_QWORD *)(v15 + 8) = 0;
    v149 = (uint64_t *)(v15 + 16);
    v17 = *v13;
    if (*v13)
    {
      v18 = *(unint64_t **)((v15 & 0xFFFFFFFFFFFFF000) + 0x10);
      v19 = v18[3];
      v18 += 3;
      *(_QWORD *)v15 = v19;
      *(_QWORD *)(v15 + 8) = v18;
      *v18 = v15;
      *(_QWORD *)(v19 + 8) = v15;
    }
    v20 = 0;
    *v16 = v17;
  }
  else
  {
    v20 = 0;
    LOBYTE(v8) = v2;
  }
LABEL_17:
  v150 = v20;
  ((void (*)(uint64_t **, WTF::StringImpl **))off_1E32C9390[v20])(&v153, &v143);
  if (!v13)
    goto LABEL_21;
LABEL_18:
  v21 = v13 - 2;
  v22 = *(_QWORD *)(((unint64_t)(v13 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
  v23 = (uint64_t *)*(v13 - 1);
  if (v23)
  {
    v24 = *v21;
    *v23 = *v21;
    *(_QWORD *)(v24 + 8) = v23;
    *v21 = 0;
    *(v13 - 1) = 0;
  }
  *v21 = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v22 + 40) = v21;
LABEL_21:
  while (1)
  {
    v12 = v150;
    if (v150)
      break;
    if (!v152)
    {
      v25 = v151;
      v151 = 0;
      v156[0] = v25;
      LOWORD(v143) = v146;
      BYTE2(v143) = v147;
      v26 = v148;
      v27 = v149;
      v148 = 0;
      v144 = v26;
      v145 = 0;
      if (v149)
      {
        v28 = *(_QWORD *)(((unint64_t)(v149 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v29 = *(_QWORD **)(v28 + 40);
        if (!v29)
        {
          JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v149 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
          v29 = *(_QWORD **)(v28 + 40);
        }
        *(_QWORD *)(v28 + 40) = *v29;
        v29[2] = 0;
        v30 = v29 + 2;
        *v29 = 0;
        v29[1] = 0;
        v145 = v29 + 2;
        v31 = *v27;
        if (*v27)
        {
          v117 = *(_QWORD **)(((unint64_t)(v30 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
          v118 = v117[3];
          v117 += 3;
          *(v30 - 2) = v118;
          *(v30 - 1) = v117;
          *v117 = v30 - 2;
          *(_QWORD *)(v118 + 8) = v30 - 2;
        }
        *v30 = v31;
      }
      v32 = (void (***)(WebCore::PaymentMethodChangeEvent *__hidden))bmalloc::api::isoAllocate();
      v153 = (uint64_t *)WebCore::PaymentMethodChangeEvent::PaymentMethodChangeEvent((uint64_t)v32, v156, (unsigned __int8 *)&v143);
      if (v145)
      {
        v35 = v145 - 2;
        v36 = *(_QWORD *)(((unint64_t)(v145 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v37 = (uint64_t *)*(v145 - 1);
        if (v37)
        {
          v38 = *v35;
          *v37 = *v35;
          *(_QWORD *)(v38 + 8) = v37;
          *v35 = 0;
          v35[1] = 0;
        }
        *v35 = *(_QWORD *)(v36 + 40);
        *(_QWORD *)(v36 + 40) = v35;
        v145 = 0;
      }
      v39 = v144;
      v144 = 0;
      if (v39)
      {
        if (*(_DWORD *)v39 == 2)
          WTF::StringImpl::destroy(v39, v33);
        else
          *(_DWORD *)v39 -= 2;
      }
      v40 = (WTF::StringImpl *)v156[0];
      v156[0] = 0;
      if (v40)
      {
        if (*(_DWORD *)v40 == 2)
          WTF::StringImpl::destroy(v40, v33);
        else
          *(_DWORD *)v40 -= 2;
      }
      if (*v32 != off_1E3364D70)
      {
        __break(0xC471u);
        JUMPOUT(0x194DCC3A0);
      }
      v41 = (JSC::VM *)*((_QWORD *)v7 + 5);
      v42 = *((_QWORD *)v41 + 412);
      if (!v42)
        goto LABEL_46;
      v43 = *(_DWORD *)(v42 - 8);
      v44 = ((unint64_t)&WebCore::JSPaymentMethodChangeEvent::s_info
           + ~((_QWORD)&WebCore::JSPaymentMethodChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentMethodChangeEvent::s_info
                                                                              + ~((_QWORD)&WebCore::JSPaymentMethodChangeEvent::s_info << 32)) >> 22);
      v45 = 9 * ((v44 + ~(v44 << 13)) ^ ((v44 + ~(v44 << 13)) >> 8));
      v46 = (v45 ^ (v45 >> 15)) + ~((v45 ^ (v45 >> 15)) << 27);
      v47 = v43 & ((v46 >> 31) ^ v46);
      v48 = *(char ***)(v42 + 16 * v47);
      if (v48 == &WebCore::JSPaymentMethodChangeEvent::s_info)
      {
LABEL_45:
        v50 = *(_QWORD *)(v42 + 16 * v47 + 8);
        if (!v50)
          goto LABEL_46;
      }
      else
      {
        v49 = 1;
        while (v48)
        {
          v47 = ((_DWORD)v47 + v49) & v43;
          v48 = *(char ***)(v42 + 16 * v47);
          ++v49;
          if (v48 == &WebCore::JSPaymentMethodChangeEvent::s_info)
            goto LABEL_45;
        }
LABEL_46:
        v51 = (WebCore::JSPaymentRequestUpdateEvent *)*((_QWORD *)v41 + 7);
        v52 = (JSC::JSCell *)WebCore::JSPaymentRequestUpdateEvent::prototype(v51, v41, v34);
        Structure = WebCore::JSPaymentMethodChangeEventPrototype::createStructure((uint64_t *)v51, (uint64_t)v41, v52);
        *(_DWORD *)(Structure + 16) |= 0x80000u;
        v55 = (JSC::JSCell *)WebCore::JSPaymentMethodChangeEventPrototype::create(v51, v41, Structure, v54);
        v56 = WebCore::JSPaymentMethodChangeEvent::createStructure((uint64_t *)v51, (uint64_t)v41, v55);
        v50 = WebCore::cacheDOMStructure((JSCell *)v41, v56, (uint64_t)&WebCore::JSPaymentMethodChangeEvent::s_info);
      }
      v57 = (JSCell *)WebCore::JSPaymentMethodChangeEvent::create(v50, v41, (uint64_t *)&v153);
      WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v41 + 415), (uint64_t)v32, (uint64_t)v57);
      v58 = *(JSC::JSCell **)(a2 + 40);
      if (((unint64_t)v58 & 0xFFFE000000000002) != 0
        || (v59 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v58)) == 0
        || (v61 = v59, v59 == *(JSC::JSGlobalObject **)(a2 + 24))
        || (v62 = (JSC::VM *)*((_QWORD *)a1 + 7),
            FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v59, v60),
            *((_DWORD *)v62 + 20))
        && (JSC::VM::hasExceptionsAfterHandlingTraps(v62) & 1) != 0)
      {
LABEL_60:
        if (*((_DWORD *)v142 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v142) & 1) != 0)
          v57 = 0;
        v80 = v153;
        v153 = 0;
        if (v80)
        {
          if (*((_DWORD *)v80 + 4) == 1)
            (*(void (**)(uint64_t *))(*v80 + 8))(v80);
          else
            --*((_DWORD *)v80 + 4);
        }
        goto LABEL_64;
      }
      v66 = *((_QWORD *)FunctionRealm + 412);
      if (v66)
      {
        v67 = *(_DWORD *)(v66 - 8);
        v68 = ((unint64_t)&WebCore::JSPaymentMethodChangeEvent::s_info
             + ~((_QWORD)&WebCore::JSPaymentMethodChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentMethodChangeEvent::s_info
                                                                                + ~((_QWORD)&WebCore::JSPaymentMethodChangeEvent::s_info << 32)) >> 22);
        v69 = 9 * ((v68 + ~(v68 << 13)) ^ ((v68 + ~(v68 << 13)) >> 8));
        v70 = (v69 ^ (v69 >> 15)) + ~((v69 ^ (v69 >> 15)) << 27);
        v71 = v67 & ((v70 >> 31) ^ v70);
        v72 = *(char ***)(v66 + 16 * v71);
        if (v72 != &WebCore::JSPaymentMethodChangeEvent::s_info)
        {
          v73 = 1;
          while (v72)
          {
            v71 = ((_DWORD)v71 + v73) & v67;
            v72 = *(char ***)(v66 + 16 * v71);
            ++v73;
            if (v72 == &WebCore::JSPaymentMethodChangeEvent::s_info)
              goto LABEL_56;
          }
          goto LABEL_57;
        }
LABEL_56:
        v63 = *(WebCore::JSDOMGlobalObject **)(v66 + 16 * v71 + 8);
        if (!v63)
          goto LABEL_57;
      }
      else
      {
LABEL_57:
        v74 = (JSC::JSCell *)WebCore::JSPaymentRequestUpdateEvent::prototype(v62, FunctionRealm, v63);
        v75 = WebCore::JSPaymentMethodChangeEventPrototype::createStructure((uint64_t *)v62, (uint64_t)FunctionRealm, v74);
        *(_DWORD *)(v75 + 16) |= 0x80000u;
        v77 = (JSC::JSCell *)WebCore::JSPaymentMethodChangeEventPrototype::create(v62, FunctionRealm, v75, v76);
        v78 = WebCore::JSPaymentMethodChangeEvent::createStructure((uint64_t *)v62, (uint64_t)FunctionRealm, v77);
        v63 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v78, (uint64_t)&WebCore::JSPaymentMethodChangeEvent::s_info);
      }
      SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v61, v63, v64);
      if (!*((_DWORD *)v62 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v62) & 1) == 0)
        JSC::JSObject::setStructure(v57, v62, SubclassStructure);
      goto LABEL_60;
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_197:
    JSC::HandleSet::grow(v7);
    v124 = (_QWORD *)*((_QWORD *)v7 + 5);
    v100 = v153;
    *((_QWORD *)v7 + 5) = *v124;
    *v124 = 0;
    v124[1] = 0;
    v124[2] = 0;
    v102 = v124 + 2;
    if (v100)
    {
LABEL_119:
      v103 = *v100;
      if (*v100)
      {
        v120 = *(_QWORD **)(((unint64_t)(v102 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v121 = v120[3];
        v120 += 3;
        *(v102 - 2) = v121;
        *(v102 - 1) = v120;
        *v120 = v102 - 2;
        *(_QWORD *)(v121 + 8) = v102 - 2;
      }
    }
    else
    {
      v103 = 0;
    }
    *v102 = v103;
    v104 = (unint64_t)(v102 - 2);
    v105 = v104 & 0xFFFFFFFFFFFFF000;
    v106 = **(_QWORD **)((v104 & 0xFFFFFFFFFFFFF000) + 0x10);
    v107 = *(_QWORD *)(v106 + 712);
    if (!v107)
    {
      JSC::HandleSet::grow((JSC::HandleSet *)(v106 + 672));
      v105 = v104 & 0xFFFFFFFFFFFFF000;
      v107 = *(_QWORD *)(v106 + 712);
    }
    *(_QWORD *)(v106 + 712) = *(_QWORD *)v107;
    *(_QWORD *)(v107 + 16) = 0;
    v13 = (uint64_t *)(v107 + 16);
    *(_QWORD *)v107 = 0;
    *(_QWORD *)(v107 + 8) = 0;
    if (v103)
    {
      v108 = *(unint64_t **)((v107 & 0xFFFFFFFFFFFFF000) + 0x10);
      v109 = v108[3];
      v108 += 3;
      *(_QWORD *)v107 = v109;
      *(_QWORD *)(v107 + 8) = v108;
      *v108 = v107;
      *(_QWORD *)(v109 + 8) = v107;
    }
    *v13 = v103;
    v110 = *(_QWORD *)(v105 + 16);
    v111 = *(_QWORD **)(v104 + 8);
    if (v111)
    {
      v112 = *(_QWORD *)v104;
      *v111 = *(_QWORD *)v104;
      *(_QWORD *)(v112 + 8) = v111;
      *(_QWORD *)v104 = 0;
      *(_QWORD *)(v104 + 8) = 0;
    }
    *(_QWORD *)v104 = *(_QWORD *)(v110 + 40);
    *(_QWORD *)(v110 + 40) = v104;
    v99 = v154;
    if (v154 != -1)
    {
LABEL_128:
      v113 = 1;
LABEL_129:
      ((void (*)(WTF::StringImpl **, uint64_t **))off_1E32CB060[v99])(&v143, &v153);
      if ((v113 & 1) == 0)
        goto LABEL_178;
    }
LABEL_130:
    WTF::AtomStringImpl::addLiteral();
    v114 = v143;
    v4 = JSC::JSObject::get((JSC::Structure *)v4, a1, (unint64_t)v143);
    if (v114)
    {
      if (*(_DWORD *)v114 == 2)
        WTF::StringImpl::destroy(v114, v115);
      else
        *(_DWORD *)v114 -= 2;
    }
    if (!*(_DWORD *)(v3 + 80) || !JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3))
    {
      v7 = v141;
      if (v4 == 10)
      {
        v11 = v140;
        goto LABEL_8;
      }
      v153 = (uint64_t *)v4;
      v3 = *((_QWORD *)a1 + 7);
      if ((v4 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v4 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v153, a1);
      }
      else
      {
        v116 = *(_DWORD **)(v4 + 8);
        if ((v116 & 1) != 0)
        {
          v116 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v4, a1);
          if (v116)
LABEL_140:
            *v116 += 2;
        }
        else if (v116)
        {
          goto LABEL_140;
        }
        v156[0] = v116;
      }
      if (!*(_DWORD *)(v3 + 80))
      {
        v14 = (WTF::StringImpl *)v156[0];
        goto LABEL_144;
      }
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3);
      v14 = (WTF::StringImpl *)v156[0];
      if (hasExceptionsAfterHandlingTraps)
      {
        LODWORD(v144) = 1;
        v156[0] = 0;
        if (v14)
        {
          if (*(_DWORD *)v14 == 2)
            WTF::StringImpl::destroy(v14, v122);
          else
            *(_DWORD *)v14 -= 2;
        }
        v20 = 1;
        LOBYTE(v8) = v2;
        v7 = v141;
        goto LABEL_17;
      }
      v7 = v141;
LABEL_144:
      LODWORD(v144) = 0;
      v11 = v140;
      goto LABEL_11;
    }
    v150 = 1;
LABEL_178:
    LOBYTE(v8) = v2;
    v7 = v141;
    if (v13)
      goto LABEL_18;
  }
  v57 = 0;
  v81 = 0;
  if (v150 != -1)
  {
LABEL_64:
    ((void (*)(WTF::StringImpl **, __int16 *))off_1E32CB0E0[v12])(&v143, &v146);
    v81 = v57;
  }
  v9 = v152;
LABEL_66:
  if (v9 != -1)
    ((void (*)(__int16 *, uint64_t *))off_1E32C9518[v9])(&v146, &v151);
  return v81;
}

uint64_t WebCore::JSPaymentMethodChangeEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSPaymentRequestUpdateEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSPaymentRequestUpdateEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSPaymentRequestUpdateEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPaymentMethodChangeEvent::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  return WebCore::JSPaymentMethodChangeEvent::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
}

uint64_t WebCore::JSPaymentMethodChangeEvent::visitChildren(WebCore::JSPaymentMethodChangeEvent *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t *v11;
  uint64_t v12;
  JSC::JSCell *v13;
  _QWORD v14[2];
  uint64_t v15;
  char v16;
  JSC::JSCell *v17;
  JSC::JSCell **v18;

  v14[0] = a2;
  v14[1] = this;
  v16 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v15 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    __break(0xC471u);
    JUMPOUT(0x194DCC978);
  }
  *((_QWORD *)a2 + 11) = v14;
  JSC::JSObject::visitChildren();
  v6 = *((_QWORD *)this + 3);
  v17 = a2;
  v7 = *(unsigned int *)(v6 + 120);
  if ((_DWORD)v7 == -1)
  {
    v11 = (uint64_t *)std::__throw_bad_variant_access[abi:sn180100]();
    return WebCore::JSPaymentMethodChangeEventPrototype::createStructure(v11, v12, v13);
  }
  else
  {
    v18 = &v17;
    ((void (*)(JSC::JSCell ***, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore26JSPaymentMethodChangeEvent23visitAdditionalChildrenIN3JSC19AbstractSlotVisitorEEEvRT_EUlRKNS8_22JSValueInWrappedObjectEE_JZNSA_ISC_EEvSE_EUlRKNS_8functionIFNSB_6StrongINSB_8JSObjectELNSB_30ShouldStrongDestructorGrabLockE0EEERNSB_14JSGlobalObjectEEEEE_EEEEEJRKNS0_6__implIJSF_SR_EEEEEEDcOSD_DpOT0____fmatrix[v7])(&v18, v6 + 88);
    v8 = *(uint64_t **)(*((_QWORD *)this + 3) + 136);
    if (!v8 || (v8[1] & 3) != 0)
      v9 = 0;
    else
      v9 = *v8;
    result = (*(uint64_t (**)(JSC::JSCell *, uint64_t))(*(_QWORD *)a2 + 24))(a2, v9);
    *(_QWORD *)(v14[0] + 88) = v15;
  }
  return result;
}

uint64_t WebCore::JSPaymentMethodChangeEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPaymentRequestUpdateEvent::prototype(WebCore::JSPaymentRequestUpdateEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSPaymentRequestUpdateEvent::s_info
      + ~((_QWORD)&WebCore::JSPaymentRequestUpdateEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentRequestUpdateEvent::s_info
                                                                          + ~((_QWORD)&WebCore::JSPaymentRequestUpdateEvent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSPaymentRequestUpdateEvent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSPaymentRequestUpdateEvent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    v14 = (JSC::JSCell *)WebCore::JSEvent::prototype(this, a2, a3);
    Structure = WebCore::JSPaymentRequestUpdateEventPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSPaymentRequestUpdateEventPrototype::create(this, a2, Structure, v16);
    v18 = WebCore::JSPaymentRequestUpdateEvent::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSPaymentRequestUpdateEvent::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

unint64_t WebCore::JSPaymentMethodChangeEventPrototype::create(WebCore::JSPaymentMethodChangeEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSPaymentMethodChangeEvent::s_info, &WebCore::JSPaymentMethodChangeEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPaymentMethodChangeEvent>,(WebCore::DOMConstructorID)178>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1424);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPaymentRequestUpdateEvent>,(WebCore::DOMConstructorID)180>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSPaymentMethodChangeEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPaymentMethodChangeEvent::s_info
         + ~((_QWORD)&WebCore::JSPaymentMethodChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentMethodChangeEvent::s_info
                                                                            + ~((_QWORD)&WebCore::JSPaymentMethodChangeEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPaymentMethodChangeEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPaymentMethodChangeEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSPaymentRequestUpdateEvent::prototype((WebCore::JSPaymentRequestUpdateEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPaymentMethodChangeEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSPaymentMethodChangeEventPrototype::create((WebCore::JSPaymentMethodChangeEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSPaymentMethodChangeEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSPaymentMethodChangeEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1424) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPaymentMethodChangeEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPaymentMethodChangeEventPrototype::s_info != (char **)(16
                                                                        * *(unsigned int *)(16
                                                                                          * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                          + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPaymentMethodChangeEvent>,(WebCore::DOMConstructorID)178>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPaymentMethodChangeEvent_methodName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentMethodChangeEvent_methodDetails(JSC::JSGlobalObject *a1, WebCore::JSPaymentMethodChangeEvent *a2)
{
  return WebCore::JSPaymentMethodChangeEvent::methodDetails(a2, a1);
}

uint64_t WebCore::JSPaymentMethodChangeEvent::subspaceForImpl(WebCore::JSPaymentMethodChangeEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 1448);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 1448);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 1448);
    *(_QWORD *)(v8 + 1448) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 1448);
  *(_QWORD *)(v3 + 1448) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSPaymentRequestUpdateEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPaymentRequest>::construct(JSC *this, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  JSValue v10;
  int i;
  unsigned int v12;
  uint64_t v13;
  JSC::JSCell *IndexQuickly;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSCell *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  JSC::JSCell *v22;
  uint64_t v23;
  unint64_t v24;
  WTF *v25;
  JSC::JSCell *v26;
  JSC::Structure *Object;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  JSC::VM *v31;
  WTF::StringImpl *v32;
  int v33;
  WTF *v34;
  int v35;
  WTF *v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  int v44;
  WTF *v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  WTF *v55;
  JSC::VM *v56;
  int v57;
  WTF *v58;
  unsigned int v59;
  unsigned int v60;
  WTF *v61;
  uint64_t v62;
  uint64_t v63;
  WTF *v64;
  WTF::StringImpl *v65;
  WTF::StringImpl *v66;
  WTF::StringImpl *v67;
  JSC::VM *v68;
  WTF::StringImpl *v69;
  WTF::StringImpl *v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  JSC::JSCell *v73;
  uint64_t v74;
  unint64_t v75;
  WTF::StringImpl *v76;
  char v77;
  WTF::StringImpl *v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  WTF::StringImpl *v81;
  unint64_t v82;
  unint64_t v83;
  __int128 v84;
  __int128 v85;
  unsigned int v86;
  JSC::JSCell *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _BOOL8 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  JSC::Structure *v95;
  WTF::StringImpl *v96;
  WTF::StringImpl *v97;
  unint64_t v98;
  JSC::VM *v99;
  double v100;
  _BOOL4 v101;
  WTF::StringImpl *v102;
  WTF::StringImpl *v103;
  unint64_t v104;
  JSC::VM *v105;
  double v106;
  _BOOL4 v107;
  WTF::StringImpl *v108;
  WTF::StringImpl *v109;
  unint64_t v110;
  JSC::VM *v111;
  double v112;
  _BOOL4 v113;
  WTF::StringImpl *v114;
  WTF::StringImpl *v115;
  unint64_t v116;
  JSC::VM *v117;
  double v118;
  _BOOL4 v119;
  WTF::StringImpl *v120;
  WTF::StringImpl *v121;
  unint64_t v122;
  JSC::VM *v123;
  double v124;
  WTF::StringImpl *v125;
  WTF::StringImpl *v126;
  uint64_t v127;
  unint64_t v128;
  const char *v129;
  int v130;
  unint64_t v131;
  uint64_t v132;
  BOOL v133;
  int v134;
  char **v135;
  JSValue v137;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  WTF::StringImpl *v148;
  uint64_t v150;
  uint64_t v151;
  WTF *v152;
  WTF::StringImpl *v153;
  uint64_t v154;
  unint64_t v155;
  WTF::StringImpl *v156;
  unint64_t v157;
  __int128 v158;
  WTF::StringImpl *v159;
  WTF::StringImpl *v160;
  WebCore::JSDOMGlobalObject *v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  WTF::StringImpl *v168;
  WTF *v169;
  JSC::VM *v170;
  WTF *v171;
  void *v172;
  JSC::JSCell *v173;
  JSC::JSGlobalObject *v174;
  JSC::JSObject *v175;
  JSC::JSGlobalObject *v176;
  JSC::VM *v177;
  JSC::JSObject *v178;
  JSC::Structure *v179;
  JSC::VM *FunctionRealm;
  uint64_t v181;
  unsigned int v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  char **v187;
  int v188;
  JSC::JSCell *v189;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v191;
  JSC::Structure *v192;
  JSC::JSCell *v193;
  uint64_t v194;
  unint64_t SubclassStructure;
  bmalloc::api *v197;
  void *v198;
  WTF::StringImpl *v199;
  WTF::StringImpl *v200;
  JSValue v201;
  char v202;
  int v203;
  WebCore::PaymentDetailsModifier *v204;
  uint64_t v205;
  uint64_t v206;
  BOOL v207;
  int v208;
  uint64_t v209;
  int *v210;
  int v211;
  BOOL v212;
  int v213;
  uint64_t v214;
  int *v215;
  int v216;
  BOOL v217;
  int v218;
  uint64_t v219;
  int *v220;
  int v221;
  BOOL v222;
  int v223;
  uint64_t v224;
  int *v225;
  int v226;
  BOOL v227;
  int v228;
  uint64_t v229;
  int *v230;
  int v231;
  _BOOL4 v232;
  _BOOL4 v233;
  _BOOL4 v234;
  _BOOL4 v235;
  int v236;
  uint64_t v237;
  WTF::StringImpl *v238;
  int v239;
  uint64_t v240;
  WTF *v241;
  int v242;
  JSC::VM *v243;
  int v244[2];
  WTF::StringImpl *v245;
  uint64_t v246;
  char v247;
  unsigned int v248;
  WTF *v249;
  WTF::StringImpl *v250;
  char v251;
  WTF *v252;
  unint64_t v253;
  unsigned __int8 v254;
  WTF *v255;
  unint64_t v256;
  char v257;
  __int128 v258;
  __int128 v259;
  char v260;
  JSC::VM *v261[2];
  uint64_t *v262;
  WTF::StringImpl *v263;
  WTF *v264;
  WTF *v265;
  WTF::StringImpl *v266;
  char v267;
  WTF *v268;
  unint64_t v269;
  char v270;
  WTF *v271;
  unint64_t v272;
  char v273;
  __int128 v274;
  __int128 v275;
  char v276;
  int v277;
  uint64_t v278;

  v278 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v243 = v3;
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v137.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, this, v137);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(this, &v243, (uint64_t)"PaymentRequest", 15);
  v7 = v6;
  if (*(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194DCE7D4);
  }
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *((_QWORD *)this + 7);
  v249 = (WTF *)v9;
  if ((v8 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v8 + 5) <= 0x16u)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    v16 = v264;
    v264 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v15);
      else
        *(_DWORD *)v16 -= 2;
    }
    v17 = 0;
    v18 = 1;
    v242 = 1;
    goto LABEL_392;
  }
  v264 = 0;
  v265 = 0;
  if (JSC::getIterationMode() == 2)
  {
    for (i = 1; ; ++i)
    {
      v12 = (*(_BYTE *)(v8 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v8 + 8) - 8) : 0;
      v13 = (i - 1);
      if (v13 >= v12)
        break;
      IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v8, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)v8, this, (i - 1));
      if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
        break;
      WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentMethodData>>::convert((JSC::VM **)this, IndexQuickly, (uint64_t)&v264);
      if (*(_QWORD *)(v9 + 16))
      {
        v23 = JSC::JSArrayIterator::create();
        v24 = i | 0xFFFE000000000000;
        if (i < 0)
          v24 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v23 + 16) = v24;
        goto LABEL_37;
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(this, (JSC::JSGlobalObject *)v8, v10);
    v13 = v19;
    if (!*(_DWORD *)(v9 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) == 0)
    {
      while (1)
      {
        v20 = JSC::iteratorStep();
        if (*(_QWORD *)(v9 + 16) || v20 == 6)
          break;
        v22 = (JSC::JSCell *)JSC::iteratorValue();
        if (*(_DWORD *)(v9 + 80))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
            break;
        }
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentMethodData>>::convert((JSC::VM **)this, v22, (uint64_t)&v264);
        if (*(_QWORD *)(v9 + 16))
        {
LABEL_37:
          JSC::iteratorClose();
          break;
        }
      }
    }
  }
  v237 = v5;
  if (*(_DWORD *)(v9 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9);
    v25 = v264;
    if (hasExceptionsAfterHandlingTraps)
    {
      v242 = 1;
      if (HIDWORD(v265))
      {
        v141 = 16 * HIDWORD(v265);
        v142 = (uint64_t *)((char *)v264 + 8);
        do
        {
          v143 = *v142;
          if (*v142)
          {
            v144 = (uint64_t *)(v143 - 16);
            v145 = *(_QWORD *)(((v143 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
            v146 = *(uint64_t **)(v143 - 8);
            if (v146)
            {
              v147 = *v144;
              *v146 = *v144;
              *(_QWORD *)(v147 + 8) = v146;
              *v144 = 0;
              v144[1] = 0;
            }
            *v144 = *(_QWORD *)(v145 + 40);
            *(_QWORD *)(v145 + 40) = v144;
            *v142 = 0;
          }
          v148 = (WTF::StringImpl *)*(v142 - 1);
          *(v142 - 1) = 0;
          if (v148)
          {
            if (*(_DWORD *)v148 == 2)
              WTF::StringImpl::destroy(v148, v140);
            else
              *(_DWORD *)v148 -= 2;
          }
          v142 += 2;
          v141 -= 16;
        }
        while (v141);
      }
      if (v25)
        WTF::fastFree(v25, v140);
      v17 = 0;
      v18 = 1;
      goto LABEL_392;
    }
  }
  else
  {
    v25 = v264;
  }
  v240 = (uint64_t)v25;
  v241 = v265;
  v242 = 0;
  v26 = *(JSC::JSCell **)(a2 + 56);
  v261[0] = *((JSC::VM **)this + 7);
  if (((unint64_t)v26 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    Object = 0;
  }
  else if (((unint64_t)v26 & 0xFFFE000000000002) != 0
         || (Object = (JSC::Structure *)JSC::JSCell::getObject(v26)) == 0)
  {
    JSC::throwTypeError();
    v17 = 0;
    v86 = 1;
    v277 = 1;
    goto LABEL_390;
  }
  LOBYTE(v249) = 0;
  v251 = 0;
  LOBYTE(v252) = 0;
  v254 = 0;
  LOBYTE(v255) = 0;
  v257 = 0;
  v258 = 0u;
  v259 = 0u;
  v260 = 0;
  if (((unint64_t)v26 & 0xFFFFFFFFFFFFFFF7) == 2)
    goto LABEL_45;
  WTF::AtomStringImpl::addLiteral();
  v29 = v264;
  v13 = JSC::JSObject::get(Object, this, (unint64_t)v264);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v30);
    else
      *(_DWORD *)v29 -= 2;
  }
  if (*((_DWORD *)v261[0] + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v261[0]))
    goto LABEL_46;
  if (v13 == 10)
    goto LABEL_88;
  v31 = (JSC::VM *)*((_QWORD *)this + 7);
  v262 = (uint64_t *)v31;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    v43 = v264;
    v264 = 0;
    if (v43)
    {
      if (*(_DWORD *)v43 == 2)
        WTF::StringImpl::destroy(v43, v28);
      else
        *(_DWORD *)v43 -= 2;
    }
    v35 = 1;
    LODWORD(v246) = 1;
    goto LABEL_78;
  }
  v264 = 0;
  v265 = 0;
  *(_QWORD *)v244 = &v264;
  JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PaymentItem>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<WebCore::PaymentItem,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(this, v13, (uint64_t *)v244);
  if (*((_DWORD *)v31 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v31) & 1) != 0)
  {
    v33 = 1;
  }
  else
  {
    v33 = 0;
    *(_QWORD *)v244 = v264;
    v34 = v265;
    v264 = 0;
    v265 = 0;
    v245 = v34;
  }
  LODWORD(v246) = v33;
  WTF::Vector<WebCore::InspectorFrontendClientSaveData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((unsigned int *)&v264, v32);
  v35 = v246;
  if ((_DWORD)v246)
  {
LABEL_78:
    v44 = 0;
    v277 = 1;
    goto LABEL_85;
  }
  v36 = *(WTF **)v244;
  v264 = *(WTF **)v244;
  v37 = v245;
  v38 = HIDWORD(v245);
  *(_QWORD *)v244 = 0;
  v245 = 0;
  v265 = (WTF *)__PAIR64__(v38, v37);
  if (v251)
  {
    if (HIDWORD(v250))
    {
      v39 = 32 * HIDWORD(v250);
      v13 = (uint64_t)v249 + 16;
      do
      {
        v40 = *(WTF::StringImpl **)v13;
        *(_QWORD *)v13 = 0;
        if (v40)
        {
          if (*(_DWORD *)v40 == 2)
            WTF::StringImpl::destroy(v40, v28);
          else
            *(_DWORD *)v40 -= 2;
        }
        v41 = *(WTF::StringImpl **)(v13 - 8);
        *(_QWORD *)(v13 - 8) = 0;
        if (v41)
        {
          if (*(_DWORD *)v41 == 2)
            WTF::StringImpl::destroy(v41, v28);
          else
            *(_DWORD *)v41 -= 2;
        }
        v42 = *(WTF::StringImpl **)(v13 - 16);
        *(_QWORD *)(v13 - 16) = 0;
        if (v42)
        {
          if (*(_DWORD *)v42 == 2)
            WTF::StringImpl::destroy(v42, v28);
          else
            *(_DWORD *)v42 -= 2;
        }
        v13 += 32;
        v39 -= 32;
      }
      while (v39);
    }
    v45 = v249;
    if (v249)
    {
      v249 = 0;
      LODWORD(v250) = 0;
      WTF::fastFree(v45, v28);
    }
    v249 = v264;
    v46 = v265;
    v264 = 0;
    v265 = 0;
    v250 = v46;
  }
  else
  {
    v264 = 0;
    v265 = 0;
    v249 = v36;
    v250 = (WTF::StringImpl *)__PAIR64__(v38, v37);
    v251 = 1;
  }
  WTF::Vector<WebCore::InspectorFrontendClientSaveData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((unsigned int *)&v264, v28);
  v44 = 1;
  v35 = v246;
LABEL_85:
  if (v35 != -1)
    ((void (*)(uint64_t **, int *))off_1E32CB070[v35])(&v262, v244);
  if (!v44)
    goto LABEL_168;
LABEL_88:
  WTF::AtomStringImpl::addLiteral();
  v47 = *(WTF::StringImpl **)v244;
  v13 = JSC::JSObject::get(Object, this, *(unint64_t *)v244);
  if (v47)
  {
    if (*(_DWORD *)v47 == 2)
      WTF::StringImpl::destroy(v47, v48);
    else
      *(_DWORD *)v47 -= 2;
  }
  if (*((_DWORD *)v261[0] + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v261[0]))
    goto LABEL_46;
  if (v13 != 10)
  {
    v56 = (JSC::VM *)*((_QWORD *)this + 7);
    v261[1] = v56;
    if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      JSC::throwTypeError();
      v66 = (WTF::StringImpl *)v262;
      v262 = 0;
      if (v66)
      {
        if (*(_DWORD *)v66 == 2)
          WTF::StringImpl::destroy(v66, v65);
        else
          *(_DWORD *)v66 -= 2;
      }
      v57 = 1;
      LODWORD(v246) = 1;
      v277 = 1;
    }
    else
    {
      v262 = 0;
      v263 = 0;
      v238 = (WTF::StringImpl *)&v262;
      JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PaymentDetailsModifier>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<WebCore::PaymentDetailsModifier,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(this, v13, (uint64_t *)&v238);
      if (*((_DWORD *)v56 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v56) & 1) != 0)
      {
        v204 = (WebCore::PaymentDetailsModifier *)v262;
        LODWORD(v246) = 1;
        if (HIDWORD(v263))
        {
          v205 = 72 * HIDWORD(v263);
          do
          {
            WebCore::PaymentDetailsModifier::~PaymentDetailsModifier(v204, v28);
            v204 = (WebCore::PaymentDetailsModifier *)(v206 + 72);
            v205 -= 72;
          }
          while (v205);
          v204 = (WebCore::PaymentDetailsModifier *)v262;
        }
        if (v204)
        {
          v262 = 0;
          LODWORD(v263) = 0;
          WTF::fastFree(v204, v28);
        }
      }
      else
      {
        *(_QWORD *)v244 = v262;
        v245 = v263;
        LODWORD(v246) = 0;
      }
      v57 = v246;
      if (!(_DWORD)v246)
      {
        v58 = *(WTF **)v244;
        v60 = v245;
        v59 = HIDWORD(v245);
        *(_QWORD *)v244 = 0;
        v245 = 0;
        if (v257)
        {
          if (HIDWORD(v256))
          {
            v61 = v255;
            v62 = 72 * HIDWORD(v256);
            do
            {
              WebCore::PaymentDetailsModifier::~PaymentDetailsModifier(v61, v28);
              v61 = (WTF *)(v63 + 72);
              v62 -= 72;
            }
            while (v62);
          }
          v64 = v255;
          if (v255)
          {
            v255 = 0;
            LODWORD(v256) = 0;
            WTF::fastFree(v64, v28);
          }
          v255 = v58;
          v256 = __PAIR64__(v59, v60);
          if ((_DWORD)v246 != -1)
            ((void (*)(uint64_t **, int *))off_1E32CB080[v246])(&v262, v244);
        }
        else
        {
          v255 = v58;
          v256 = __PAIR64__(v59, v60);
          v257 = 1;
        }
        goto LABEL_93;
      }
      v277 = 1;
      if ((_DWORD)v246 == -1)
        goto LABEL_168;
    }
    ((void (*)(uint64_t **, int *))off_1E32CB080[v57])(&v262, v244);
    goto LABEL_168;
  }
LABEL_93:
  WTF::AtomStringImpl::addLiteral();
  v49 = *(WTF::StringImpl **)v244;
  v13 = JSC::JSObject::get(Object, this, *(unint64_t *)v244);
  if (v49)
  {
    if (*(_DWORD *)v49 == 2)
      WTF::StringImpl::destroy(v49, v50);
    else
      *(_DWORD *)v49 -= 2;
  }
  if (*((_DWORD *)v261[0] + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v261[0]))
    goto LABEL_46;
  if (v13 == 10)
    goto LABEL_128;
  WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PaymentShippingOption>>>::convert((uint64_t)v244, this, v13);
  v51 = v246;
  if ((_DWORD)v246)
  {
    v277 = 1;
    v54 = v246;
  }
  else
  {
    v13 = *(_QWORD *)v244;
    v53 = v245;
    v52 = HIDWORD(v245);
    *(_QWORD *)v244 = 0;
    v245 = 0;
    v54 = v254;
    if (!v254)
    {
      v252 = (WTF *)v13;
      v253 = __PAIR64__(v52, v53);
      v254 = 1;
      goto LABEL_126;
    }
    if (HIDWORD(v253))
      WTF::VectorDestructor<true,WebCore::PaymentShippingOption>::destruct(v252, (WTF *)((char *)v252 + 40 * HIDWORD(v253)));
    v55 = v252;
    if (v252)
    {
      v252 = 0;
      LODWORD(v253) = 0;
      WTF::fastFree(v55, v28);
    }
    v252 = (WTF *)v13;
    v253 = __PAIR64__(v52, v53);
    v54 = v246;
  }
  if (v54 != -1)
LABEL_126:
    ((void (*)(uint64_t **, int *))off_1E32CB090[v54])(&v262, v244);
  if (v51)
    goto LABEL_168;
LABEL_128:
  WTF::AtomStringImpl::addLiteral();
  v67 = *(WTF::StringImpl **)v244;
  v13 = JSC::JSObject::get(Object, this, *(unint64_t *)v244);
  if (v67)
  {
    if (*(_DWORD *)v67 == 2)
      WTF::StringImpl::destroy(v67, v28);
    else
      *(_DWORD *)v67 -= 2;
  }
  if (*((_DWORD *)v261[0] + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v261[0]))
    goto LABEL_46;
  if (v13 == 10)
    goto LABEL_145;
  v262 = (uint64_t *)v13;
  v68 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v13 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v13 + 5) == 2)
  {
    v69 = *(WTF::StringImpl **)(v13 + 8);
    if ((v69 & 1) != 0)
    {
      v69 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v13, this);
      if (!v69)
        goto LABEL_138;
    }
    else if (!v69)
    {
LABEL_138:
      v238 = v69;
      goto LABEL_139;
    }
    *(_DWORD *)v69 += 2;
    goto LABEL_138;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v262, this);
LABEL_139:
  if (!*((_DWORD *)v68 + 20))
  {
    v70 = v238;
LABEL_141:
    LODWORD(v245) = 0;
    goto LABEL_142;
  }
  v202 = JSC::VM::hasExceptionsAfterHandlingTraps(v68);
  v70 = v238;
  if ((v202 & 1) == 0)
    goto LABEL_141;
  v203 = 1;
  LODWORD(v245) = 1;
  v238 = 0;
  if (!v70)
    goto LABEL_465;
  if (*(_DWORD *)v70 != 2)
  {
    *(_DWORD *)v70 -= 2;
LABEL_465:
    v277 = 1;
    goto LABEL_466;
  }
  WTF::StringImpl::destroy(v70, v28);
  v203 = (int)v245;
  if ((_DWORD)v245)
  {
    v277 = 1;
    if ((_DWORD)v245 == -1)
      goto LABEL_168;
LABEL_466:
    ((void (*)(uint64_t **, int *))off_1E32C9390[v203])(&v262, v244);
    goto LABEL_168;
  }
  v70 = *(WTF::StringImpl **)v244;
LABEL_142:
  *(_QWORD *)v244 = 0;
  v71 = (WTF::StringImpl *)v258;
  *(_QWORD *)&v258 = v70;
  if (v71)
  {
    if (*(_DWORD *)v71 == 2)
    {
      WTF::StringImpl::destroy(v71, v28);
      if ((_DWORD)v245 != -1)
        ((void (*)(uint64_t **, int *))off_1E32C9390[v245])(&v262, v244);
    }
    else
    {
      *(_DWORD *)v71 -= 2;
    }
  }
LABEL_145:
  WTF::AtomStringImpl::addLiteral();
  v13 = *(_QWORD *)v244;
  v73 = (JSC::JSCell *)JSC::JSObject::get(Object, this, *(unint64_t *)v244);
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v13, v72);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (*((_DWORD *)v261[0] + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v261[0]))
    goto LABEL_46;
  if (v73 == (JSC::JSCell *)10)
  {
LABEL_45:
    WebCore::throwRequiredMemberTypeError((int)this, (int)v261, "total", 6, "PaymentDetailsInit", 19, "PaymentItem", 12);
LABEL_46:
    v277 = 1;
    goto LABEL_168;
  }
  WebCore::convertDictionary<WebCore::PaymentItem>((uint64_t)v244, (JSC::VM **)this, v73);
  v74 = v248;
  if (!v248)
  {
    v75 = *(_QWORD *)v244;
    v76 = v245;
    *(_QWORD *)v244 = 0;
    v245 = 0;
    v13 = v246;
    v246 = 0;
    v77 = v247;
    v78 = (WTF::StringImpl *)*((_QWORD *)&v258 + 1);
    *((_QWORD *)&v258 + 1) = v75;
    if (v78)
    {
      if (*(_DWORD *)v78 == 2)
        WTF::StringImpl::destroy(v78, v28);
      else
        *(_DWORD *)v78 -= 2;
    }
    v79 = (WTF::StringImpl *)v259;
    *(_QWORD *)&v259 = v76;
    if (v79)
    {
      if (*(_DWORD *)v79 == 2)
        WTF::StringImpl::destroy(v79, v28);
      else
        *(_DWORD *)v79 -= 2;
    }
    v80 = (WTF::StringImpl *)*((_QWORD *)&v259 + 1);
    *((_QWORD *)&v259 + 1) = v13;
    if (v80)
    {
      if (*(_DWORD *)v80 == 2)
        WTF::StringImpl::destroy(v80, v28);
      else
        *(_DWORD *)v80 -= 2;
    }
    v260 = v77;
    LOBYTE(v265) = 0;
    v267 = 0;
    if (v251)
    {
      v265 = v249;
      v81 = v250;
      v249 = 0;
      v250 = 0;
      v266 = v81;
      v267 = 1;
    }
    LOBYTE(v268) = 0;
    v270 = 0;
    if (v254)
    {
      v268 = v252;
      v82 = v253;
      v252 = 0;
      v253 = 0;
      v269 = v82;
      v270 = 1;
    }
    LOBYTE(v271) = 0;
    v273 = 0;
    if (v257)
    {
      v271 = v255;
      v83 = v256;
      v255 = 0;
      v256 = 0;
      v272 = v83;
      v273 = 1;
    }
    v84 = v258;
    v258 = 0u;
    v85 = v259;
    v259 = 0u;
    v274 = v84;
    v275 = v85;
    v276 = v77;
    v277 = 0;
    goto LABEL_167;
  }
  v277 = 1;
  if (v248 != -1)
LABEL_167:
    ((void (*)(uint64_t **, int *))off_1E32CB0A0[v74])(&v262, v244);
LABEL_168:
  WebCore::PaymentDetailsInit::~PaymentDetailsInit((WebCore::PaymentDetailsInit *)&v249, v28);
  v86 = v277;
  if (v277)
  {
    v17 = 0;
    goto LABEL_389;
  }
  if ((unint64_t)(*(int *)(a2 + 32) - 4) < 0xFFFFFFFFFFFFFFFDLL)
  {
    v87 = *(JSC::JSCell **)(a2 + 64);
    v13 = *((_QWORD *)this + 7);
    v238 = (WTF::StringImpl *)v13;
    if (((unint64_t)v87 & 0xFFFFFFFFFFFFFFF7) != 2)
    {
      v236 = (int)v26;
      if (((unint64_t)v87 & 0xFFFE000000000002) != 0 || (v94 = JSC::JSCell::getObject(v87)) == 0)
      {
LABEL_310:
        JSC::throwTypeError();
        goto LABEL_311;
      }
      v95 = (JSC::Structure *)v94;
      WTF::AtomStringImpl::addLiteral();
      v96 = v249;
      v98 = JSC::JSObject::get(v95, this, (unint64_t)v249);
      if (v96)
      {
        if (*(_DWORD *)v96 == 2)
          WTF::StringImpl::destroy(v96, v97);
        else
          *(_DWORD *)v96 -= 2;
      }
      if (*(_DWORD *)(v13 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v13) & 1) != 0)
        goto LABEL_311;
      if (v98 == 10)
      {
        v235 = 0;
        goto LABEL_186;
      }
      v99 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v98 >= 0xFFFE000000000000)
      {
        v207 = (_DWORD)v98 == 0;
        goto LABEL_559;
      }
      *(_QWORD *)&v100 = v98 - 0x2000000000000;
      if (v98 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        if (v100 <= 0.0)
        {
          v101 = v100 < 0.0;
          goto LABEL_185;
        }
      }
      else
      {
        if ((v98 & 0xFFFE000000000002) != 0)
        {
          v101 = v98 == 7;
          goto LABEL_185;
        }
        v208 = *(unsigned __int8 *)(v98 + 5);
        if (v208 == 3)
        {
          v211 = *(_DWORD *)(v98 + 8);
LABEL_530:
          v207 = v211 == 0;
          goto LABEL_559;
        }
        if (v208 == 2)
        {
          v209 = *(_QWORD *)(v98 + 8);
          if ((v209 & 1) != 0)
            v210 = (int *)(v98 + 16);
          else
            v210 = (int *)(v209 + 4);
          v211 = *v210;
          goto LABEL_530;
        }
        if ((*(_BYTE *)(16 * (*(_DWORD *)v98 & 0xFFFFFFFE) + 0xA) & 1) != 0)
        {
          v207 = *(_QWORD *)(16 * (*(_DWORD *)v98 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_559:
          v101 = !v207;
LABEL_185:
          v235 = v101;
          if (*((_DWORD *)v99 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v99) & 1) != 0)
            goto LABEL_311;
LABEL_186:
          WTF::AtomStringImpl::addLiteral();
          v102 = v249;
          v104 = JSC::JSObject::get(v95, this, (unint64_t)v249);
          if (v102)
          {
            if (*(_DWORD *)v102 == 2)
              WTF::StringImpl::destroy(v102, v103);
            else
              *(_DWORD *)v102 -= 2;
          }
          if (*(_DWORD *)(v13 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v13) & 1) != 0)
            goto LABEL_311;
          if (v104 == 10)
          {
            v234 = 0;
            goto LABEL_197;
          }
          v105 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v104 >= 0xFFFE000000000000)
          {
            v212 = (_DWORD)v104 == 0;
            goto LABEL_563;
          }
          *(_QWORD *)&v106 = v104 - 0x2000000000000;
          if (v104 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            if (v106 <= 0.0)
            {
              v107 = v106 < 0.0;
              goto LABEL_196;
            }
          }
          else
          {
            if ((v104 & 0xFFFE000000000002) != 0)
            {
              v107 = v104 == 7;
              goto LABEL_196;
            }
            v213 = *(unsigned __int8 *)(v104 + 5);
            if (v213 == 3)
            {
              v216 = *(_DWORD *)(v104 + 8);
LABEL_534:
              v212 = v216 == 0;
              goto LABEL_563;
            }
            if (v213 == 2)
            {
              v214 = *(_QWORD *)(v104 + 8);
              if ((v214 & 1) != 0)
                v215 = (int *)(v104 + 16);
              else
                v215 = (int *)(v214 + 4);
              v216 = *v215;
              goto LABEL_534;
            }
            if ((*(_BYTE *)(16 * (*(_DWORD *)v104 & 0xFFFFFFFE) + 0xA) & 1) != 0)
            {
              v212 = *(_QWORD *)(16 * (*(_DWORD *)v104 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_563:
              v107 = !v212;
LABEL_196:
              v234 = v107;
              if (*((_DWORD *)v105 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v105) & 1) != 0)
                goto LABEL_311;
LABEL_197:
              WTF::AtomStringImpl::addLiteral();
              v108 = v249;
              v110 = JSC::JSObject::get(v95, this, (unint64_t)v249);
              if (v108)
              {
                if (*(_DWORD *)v108 == 2)
                  WTF::StringImpl::destroy(v108, v109);
                else
                  *(_DWORD *)v108 -= 2;
              }
              if (*(_DWORD *)(v13 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v13) & 1) != 0)
                goto LABEL_311;
              if (v110 == 10)
              {
                v233 = 0;
                goto LABEL_208;
              }
              v111 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v110 >= 0xFFFE000000000000)
              {
                v217 = (_DWORD)v110 == 0;
                goto LABEL_539;
              }
              *(_QWORD *)&v112 = v110 - 0x2000000000000;
              if (v110 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
              {
                if (v112 <= 0.0)
                {
                  v113 = v112 < 0.0;
                  goto LABEL_207;
                }
              }
              else
              {
                if ((v110 & 0xFFFE000000000002) != 0)
                {
                  v113 = v110 == 7;
                  goto LABEL_207;
                }
                v218 = *(unsigned __int8 *)(v110 + 5);
                if (v218 == 3)
                {
                  v221 = *(_DWORD *)(v110 + 8);
LABEL_538:
                  v217 = v221 == 0;
                  goto LABEL_539;
                }
                if (v218 == 2)
                {
                  v219 = *(_QWORD *)(v110 + 8);
                  if ((v219 & 1) != 0)
                    v220 = (int *)(v110 + 16);
                  else
                    v220 = (int *)(v219 + 4);
                  v221 = *v220;
                  goto LABEL_538;
                }
                if ((*(_BYTE *)(16 * (*(_DWORD *)v110 & 0xFFFFFFFE) + 0xA) & 1) != 0)
                {
                  v217 = *(_QWORD *)(16 * (*(_DWORD *)v110 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_539:
                  v113 = !v217;
LABEL_207:
                  v233 = v113;
                  if (*((_DWORD *)v111 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v111) & 1) != 0)
                    goto LABEL_311;
LABEL_208:
                  WTF::AtomStringImpl::addLiteral();
                  v114 = v249;
                  v116 = JSC::JSObject::get(v95, this, (unint64_t)v249);
                  if (v114)
                  {
                    if (*(_DWORD *)v114 == 2)
                      WTF::StringImpl::destroy(v114, v115);
                    else
                      *(_DWORD *)v114 -= 2;
                  }
                  if (*(_DWORD *)(v13 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v13) & 1) != 0)
                    goto LABEL_311;
                  if (v116 == 10)
                  {
                    v232 = 0;
                    goto LABEL_219;
                  }
                  v117 = (JSC::VM *)*((_QWORD *)this + 7);
                  if (v116 >= 0xFFFE000000000000)
                  {
                    v222 = (_DWORD)v116 == 0;
                    goto LABEL_546;
                  }
                  *(_QWORD *)&v118 = v116 - 0x2000000000000;
                  if (v116 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
                  {
                    if (v118 <= 0.0)
                    {
                      v119 = v118 < 0.0;
                      goto LABEL_218;
                    }
                  }
                  else
                  {
                    if ((v116 & 0xFFFE000000000002) != 0)
                    {
                      v119 = v116 == 7;
                      goto LABEL_218;
                    }
                    v223 = *(unsigned __int8 *)(v116 + 5);
                    if (v223 == 3)
                    {
                      v226 = *(_DWORD *)(v116 + 8);
LABEL_545:
                      v222 = v226 == 0;
                      goto LABEL_546;
                    }
                    if (v223 == 2)
                    {
                      v224 = *(_QWORD *)(v116 + 8);
                      if ((v224 & 1) != 0)
                        v225 = (int *)(v116 + 16);
                      else
                        v225 = (int *)(v224 + 4);
                      v226 = *v225;
                      goto LABEL_545;
                    }
                    if ((*(_BYTE *)(16 * (*(_DWORD *)v116 & 0xFFFFFFFE) + 0xA) & 1) != 0)
                    {
                      v222 = *(_QWORD *)(16 * (*(_DWORD *)v116 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_546:
                      v119 = !v222;
LABEL_218:
                      v232 = v119;
                      if (*((_DWORD *)v117 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v117) & 1) != 0)
                        goto LABEL_311;
LABEL_219:
                      WTF::AtomStringImpl::addLiteral();
                      v120 = v249;
                      v122 = JSC::JSObject::get(v95, this, (unint64_t)v249);
                      if (v120)
                      {
                        if (*(_DWORD *)v120 == 2)
                          WTF::StringImpl::destroy(v120, v121);
                        else
                          *(_DWORD *)v120 -= 2;
                      }
                      if (*(_DWORD *)(v13 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v13) & 1) != 0)
                        goto LABEL_311;
                      if (v122 == 10)
                      {
                        LODWORD(v26) = 0;
                        goto LABEL_230;
                      }
                      v123 = (JSC::VM *)*((_QWORD *)this + 7);
                      if (v122 >= 0xFFFE000000000000)
                      {
                        v227 = (_DWORD)v122 == 0;
                        goto LABEL_553;
                      }
                      *(_QWORD *)&v124 = v122 - 0x2000000000000;
                      if (v122 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
                      {
                        if (v124 <= 0.0)
                        {
                          LODWORD(v26) = v124 < 0.0;
                          goto LABEL_229;
                        }
                      }
                      else
                      {
                        if ((v122 & 0xFFFE000000000002) != 0)
                        {
                          LODWORD(v26) = v122 == 7;
                          goto LABEL_229;
                        }
                        v228 = *(unsigned __int8 *)(v122 + 5);
                        if (v228 == 3)
                        {
                          v231 = *(_DWORD *)(v122 + 8);
LABEL_552:
                          v227 = v231 == 0;
                          goto LABEL_553;
                        }
                        if (v228 == 2)
                        {
                          v229 = *(_QWORD *)(v122 + 8);
                          if ((v229 & 1) != 0)
                            v230 = (int *)(v122 + 16);
                          else
                            v230 = (int *)(v229 + 4);
                          v231 = *v230;
                          goto LABEL_552;
                        }
                        if ((*(_BYTE *)(16 * (*(_DWORD *)v122 & 0xFFFFFFFE) + 0xA) & 1) != 0)
                        {
                          v227 = *(_QWORD *)(16 * (*(_DWORD *)v122 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_553:
                          LODWORD(v26) = !v227;
LABEL_229:
                          if (!*((_DWORD *)v123 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v123) & 1) == 0)
                          {
LABEL_230:
                            WTF::AtomStringImpl::addLiteral();
                            v125 = v249;
                            v127 = JSC::JSObject::get(v95, this, (unint64_t)v249);
                            if (v125)
                            {
                              if (*(_DWORD *)v125 == 2)
                                WTF::StringImpl::destroy(v125, v126);
                              else
                                *(_DWORD *)v125 -= 2;
                            }
                            if (*(_DWORD *)(v13 + 80)
                              && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v13) & 1) != 0)
                            {
                              goto LABEL_311;
                            }
                            if (v127 == 10)
                            {
                              LODWORD(v90) = 0;
                              v91 = v233;
                              if (!v234)
                                goto LABEL_340;
                              goto LABEL_236;
                            }
                            v13 = *((_QWORD *)this + 7);
                            v262 = (uint64_t *)v13;
                            v249 = (WTF *)v127;
                            if ((v127 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v127 + 5) != 2)
                            {
                              JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v249, this);
                              v128 = *(_QWORD *)v244;
                              if (*(_QWORD *)v244)
                                goto LABEL_246;
                              goto LABEL_303;
                            }
                            v128 = *(_QWORD *)(v127 + 8);
                            if ((v128 & 1) != 0)
                            {
                              v128 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v127, this);
                              if (!v128)
                              {
LABEL_245:
                                *(_QWORD *)v244 = v128;
                                if (v128)
                                {
LABEL_246:
                                  v129 = *(const char **)(v128 + 8);
                                  v130 = *(_DWORD *)(v128 + 4);
                                  v131 = ((unint64_t)*(unsigned int *)(v128 + 16) >> 2) & 1;
                                  v132 = v131 << 32;
                                  v133 = v130 != 8;
                                  if (v129 == "delivery" || v130 != 8)
                                  {
                                    if (v129 != "delivery" || v130 != 8)
                                    {
                                      if (v129 == "pickup" || v130 != 6)
                                      {
                                        v134 = *(_DWORD *)(v128 + 4);
                                        if (v129 != "pickup" || v130 != 6)
                                          goto LABEL_254;
                                      }
                                      else if ((_DWORD)v131)
                                      {
                                        if (*v129 != 112
                                          || *(_DWORD *)(v129 + 1) != 1969972073
                                          || *(_DWORD *)(v129 + 2) != 1886743395)
                                        {
                                          goto LABEL_253;
                                        }
                                      }
                                      else
                                      {
                                        if (*(_WORD *)v129 != 112)
                                          goto LABEL_483;
                                        v134 = 6;
                                        if (*(_QWORD *)(v129 + 2) != 0x75006B00630069
                                          || *(_QWORD *)(v129 + 4) != 0x700075006B0063)
                                        {
                                          goto LABEL_254;
                                        }
                                      }
                                      v135 = &off_1E32C6098;
                                      goto LABEL_288;
                                    }
                                  }
                                  else if ((_DWORD)v131)
                                  {
                                    if (*v129 != 100
                                      || *(_DWORD *)(v129 + 1) != 1986620517
                                      || *((_DWORD *)v129 + 1) != 2037540214)
                                    {
                                      v133 = 0;
LABEL_253:
                                      v134 = 6;
                                      v132 = 0x100000000;
                                      goto LABEL_254;
                                    }
                                  }
                                  else
                                  {
                                    if (*(_WORD *)v129 != 100)
                                      goto LABEL_482;
                                    v133 = 0;
                                    v134 = 6;
                                    if (*(_QWORD *)(v129 + 2) != 0x760069006C0065
                                      || *((_QWORD *)v129 + 1) != 0x79007200650076)
                                    {
                                      goto LABEL_254;
                                    }
                                  }
                                  v135 = &WebCore::parseEnumerationFromString<WebCore::PaymentShippingType>(WTF::String const&)::mappings;
                                  goto LABEL_288;
                                }
LABEL_303:
                                v90 = 0;
                                goto LABEL_337;
                              }
                            }
                            else if (!v128)
                            {
                              goto LABEL_245;
                            }
                            *(_DWORD *)v128 += 2;
                            goto LABEL_245;
                          }
LABEL_311:
                          v17 = 0;
                          goto LABEL_389;
                        }
                      }
                      LODWORD(v26) = 1;
                      goto LABEL_229;
                    }
                  }
                  v119 = 1;
                  goto LABEL_218;
                }
              }
              v113 = 1;
              goto LABEL_207;
            }
          }
          v107 = 1;
          goto LABEL_196;
        }
      }
      v101 = 1;
      goto LABEL_185;
    }
  }
  v88 = 0;
  v89 = 0;
  LODWORD(v90) = 0;
  v91 = 0;
  v92 = 0;
  v93 = 0;
  while (1)
  {
    if (!v242)
    {
      v150 = v92 | v88;
      v151 = v91 | v89;
      v262 = (uint64_t *)v240;
      v152 = v241;
      v240 = 0;
      v241 = 0;
      v263 = v152;
      LOBYTE(v249) = 0;
      v251 = 0;
      if (v267)
      {
        v249 = v265;
        v153 = v266;
        v265 = 0;
        v266 = 0;
        v250 = v153;
        v251 = 1;
      }
      v154 = v150 | v151;
      LOBYTE(v252) = 0;
      v254 = 0;
      if (v270)
      {
        v252 = v268;
        v155 = v269;
        v268 = 0;
        v269 = 0;
        v253 = v155;
        v254 = 1;
      }
      v156 = (WTF::StringImpl *)(v154 | v93);
      LOBYTE(v255) = 0;
      v257 = 0;
      if (v273)
      {
        v255 = v271;
        v157 = v272;
        v271 = 0;
        v272 = 0;
        v256 = v157;
        v257 = 1;
      }
      v158 = v275;
      v258 = v274;
      v274 = 0u;
      v275 = 0u;
      v259 = v158;
      v260 = v276;
      v238 = v156;
      v239 = v90;
      WebCore::PaymentRequest::create((WebCore::PaymentSession *)(v7 - 192), (uint64_t *)&v262, (uint64_t)&v249, (uint64_t *)&v238, (uint64_t)v244);
      WebCore::PaymentDetailsInit::~PaymentDetailsInit((WebCore::PaymentDetailsInit *)&v249, v159);
      if (HIDWORD(v263))
      {
        v7 = 16 * HIDWORD(v263);
        v162 = v262 + 1;
        do
        {
          v163 = *v162;
          if (*v162)
          {
            v164 = (uint64_t *)(v163 - 16);
            v165 = *(_QWORD *)(((v163 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
            v166 = *(uint64_t **)(v163 - 8);
            if (v166)
            {
              v167 = *v164;
              *v166 = *v164;
              *(_QWORD *)(v167 + 8) = v166;
              *v164 = 0;
              v164[1] = 0;
            }
            *v164 = *(_QWORD *)(v165 + 40);
            *(_QWORD *)(v165 + 40) = v164;
            *v162 = 0;
          }
          v168 = (WTF::StringImpl *)*(v162 - 1);
          *(v162 - 1) = 0;
          if (v168)
          {
            if (*(_DWORD *)v168 == 2)
              WTF::StringImpl::destroy(v168, v160);
            else
              *(_DWORD *)v168 -= 2;
          }
          v162 += 2;
          v7 -= 16;
        }
        while (v7);
      }
      v169 = (WTF *)v262;
      if (v262)
      {
        v262 = 0;
        LODWORD(v263) = 0;
        WTF::fastFree(v169, v160);
      }
      v13 = (uint64_t)v243;
      if (*((_DWORD *)v243 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v243) & 1) != 0)
        goto LABEL_409;
      if (!(_DWORD)v246)
      {
        v170 = *(JSC::VM **)(v237 + 40);
        v171 = *(WTF **)v244;
        *(_QWORD *)v244 = 0;
        v249 = v171;
        if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))v171 != &off_1E3364E38)
        {
          __break(0xC471u);
          JUMPOUT(0x194DCEE48);
        }
        v17 = (JSCell *)WebCore::createWrapper<WebCore::PaymentRequest,WebCore::PaymentRequest>(v170, &v249, v161);
        if (v249)
        {
          if (*((_DWORD *)v249 + 12) == 1)
          {
            WebCore::PaymentRequest::~PaymentRequest(v249, v172);
            bmalloc::api::isoDeallocate(v197, v198);
          }
          else
          {
            --*((_DWORD *)v249 + 12);
          }
        }
        goto LABEL_372;
      }
      if ((_DWORD)v246 == 1)
        break;
    }
    v128 = std::__throw_bad_variant_access[abi:sn180100]();
LABEL_482:
    v133 = 0;
LABEL_483:
    v134 = 6;
LABEL_254:
    if (v129 == "shipping" || v133)
    {
      if (v130 == 8 && v129 == "shipping")
      {
LABEL_287:
        v135 = &off_1E32C60B0;
LABEL_288:
        v90 = *((unsigned int *)v135 + 4) | 0x100000000;
        goto LABEL_335;
      }
    }
    else
    {
      if (!v134)
        goto LABEL_287;
      if (v132)
      {
        if (*v129 == 115 && *(_DWORD *)(v129 + 1) == 1886415208 && *((_DWORD *)v129 + 1) == 1735289200)
          goto LABEL_287;
      }
      else if (*(_WORD *)v129 == 115
             && *((_QWORD *)v129 + 1) == 0x67006E00690070
             && *(_QWORD *)(v129 + 2) == 0x70007000690068)
      {
        goto LABEL_287;
      }
    }
    v90 = 0;
LABEL_335:
    *(_QWORD *)v244 = 0;
    if (*(_DWORD *)v128 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v128, v126);
    else
      *(_DWORD *)v128 -= 2;
LABEL_337:
    if (*(_DWORD *)(v13 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v13) & 1) != 0)
      goto LABEL_311;
    if (!HIDWORD(v90))
      goto LABEL_310;
    v91 = v233;
    if (v234)
    {
LABEL_236:
      v89 = 256;
      if (v232)
        goto LABEL_341;
LABEL_237:
      v92 = 0;
      if ((_DWORD)v26)
        goto LABEL_238;
LABEL_342:
      v88 = 0;
      LODWORD(v26) = v236;
      if (v235)
LABEL_343:
        v93 = 0x100000000;
      else
        v93 = 0;
    }
    else
    {
LABEL_340:
      v89 = 0;
      if (!v232)
        goto LABEL_237;
LABEL_341:
      v92 = 0x10000;
      if ((v26 & 1) == 0)
        goto LABEL_342;
LABEL_238:
      v88 = 0x1000000;
      if (v235)
      {
        LODWORD(v26) = v236;
        goto LABEL_343;
      }
      v93 = 0;
      LODWORD(v26) = v236;
    }
  }
  v199 = (WTF::StringImpl *)LOBYTE(v244[0]);
  LOBYTE(v249) = v244[0];
  v200 = v245;
  v245 = 0;
  v250 = v200;
  if (!*(_QWORD *)(v13 + 16))
  {
    v201.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v244[0]), (JSC::JSGlobalObject *)&v250);
    JSC::VM::throwException((JSC::VM *)v13, this, v201);
    v200 = v250;
  }
  v250 = 0;
  if (v200)
  {
    if (*(_DWORD *)v200 == 2)
      WTF::StringImpl::destroy(v200, v199);
    else
      *(_DWORD *)v200 -= 2;
  }
  v17 = 0;
LABEL_372:
  if (*(_DWORD *)(v13 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v13) & 1) != 0)
  {
LABEL_409:
    v17 = 0;
    goto LABEL_387;
  }
  v173 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v173 & 0xFFFE000000000002) == 0)
  {
    v174 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v173);
    if (v174)
    {
      v176 = v174;
      if (v174 != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v177 = (JSC::VM *)*((_QWORD *)this + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, v174, v175);
        if (!*((_DWORD *)v177 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v177) & 1) == 0)
        {
          v181 = *((_QWORD *)FunctionRealm + 412);
          if (v181)
          {
            v182 = *(_DWORD *)(v181 - 8);
            v183 = ((unint64_t)&WebCore::JSPaymentRequest::s_info
                  + ~((_QWORD)&WebCore::JSPaymentRequest::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentRequest::s_info
                                                                           + ~((_QWORD)&WebCore::JSPaymentRequest::s_info << 32)) >> 22);
            v184 = 9 * ((v183 + ~(v183 << 13)) ^ ((v183 + ~(v183 << 13)) >> 8));
            v185 = (v184 ^ (v184 >> 15)) + ~((v184 ^ (v184 >> 15)) << 27);
            v186 = v182 & ((v185 >> 31) ^ v185);
            v187 = *(char ***)(v181 + 16 * v186);
            if (v187 == &WebCore::JSPaymentRequest::s_info)
            {
LABEL_382:
              v178 = *(JSC::JSObject **)(v181 + 16 * v186 + 8);
              if (v178)
              {
LABEL_384:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v176, v178, v179);
                if (!*((_DWORD *)v177 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v177) & 1) == 0)
                  JSC::JSObject::setStructure(v17, v177, SubclassStructure);
                goto LABEL_386;
              }
            }
            else
            {
              v188 = 1;
              while (v187)
              {
                v186 = ((_DWORD)v186 + v188) & v182;
                v187 = *(char ***)(v181 + 16 * v186);
                ++v188;
                if (v187 == &WebCore::JSPaymentRequest::s_info)
                  goto LABEL_382;
              }
            }
          }
          v189 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v177, FunctionRealm, v178);
          Structure = WebCore::JSPaymentRequestPrototype::createStructure((uint64_t *)v177, (uint64_t)FunctionRealm, v189);
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v193 = (JSC::JSCell *)WebCore::JSPaymentRequestPrototype::create(v177, Structure, v191, v192);
          v194 = WebCore::JSPaymentRequest::createStructure((uint64_t *)v177, (uint64_t)FunctionRealm, v193);
          v178 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v194, (uint64_t)&WebCore::JSPaymentRequest::s_info);
          goto LABEL_384;
        }
      }
    }
  }
LABEL_386:
  if (*(_DWORD *)(v13 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v13) & 1) != 0)
    goto LABEL_409;
LABEL_387:
  if ((_DWORD)v246 != -1)
    ((void (*)(WTF **, int *))off_1E32CB168[v246])(&v249, v244);
LABEL_389:
  if (v86 != -1)
LABEL_390:
    (*(&off_1E32CB178 + v86))((int)&v249, (WebCore::PaymentDetailsInit *)&v265);
  v18 = v242;
  if (v242 != -1)
LABEL_392:
    ((void (*)(WTF **, uint64_t *))off_1E32CB188[v18])(&v264, &v240);
  return v17;
}

uint64_t WebCore::JSPaymentRequest::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24) - 24);
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPaymentRequestPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPaymentRequestPrototype::create(WebCore::JSPaymentRequestPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<12u>(this, (uint64_t)&WebCore::JSPaymentRequest::s_info, (uint64_t)&WebCore::JSPaymentRequestPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPaymentRequest>,(WebCore::DOMConstructorID)179>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1432);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSPaymentRequest>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPaymentRequest::s_info + ~((_QWORD)&WebCore::JSPaymentRequest::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentRequest::s_info + ~((_QWORD)&WebCore::JSPaymentRequest::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPaymentRequest::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPaymentRequest::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPaymentRequestPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSPaymentRequestPrototype::create((WebCore::JSPaymentRequestPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSPaymentRequest::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSPaymentRequest::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1432) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPaymentRequestConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPaymentRequestPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPaymentRequest>,(WebCore::DOMConstructorID)179>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPaymentRequest_id(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 112);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

unint64_t WebCore::jsPaymentRequest_shippingAddress(uint64_t a1, uint64_t a2)
{
  WTF *v3;

  v3 = *(WTF **)(*(_QWORD *)(a2 + 24) + 192);
  if (v3)
    return WebCore::wrap<WebCore::PaymentAddress>(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v3);
  else
    return 2;
}

uint64_t WebCore::jsPaymentRequest_shippingOption(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 184);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_DWORD *)(v2 + 4);
  if (!v4)
    return *(_QWORD *)(v3 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v3 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v3 + 64760);
  if (!v5 || v2 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentRequest_shippingType(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;

  v2 = *((_QWORD *)a2 + 3);
  if (!*(_BYTE *)(v2 + 31))
    return 2;
  v3 = *(int *)(v2 + 36);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::PaymentShippingType)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::PaymentShippingType)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::PaymentShippingType)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::PaymentShippingType)::$_0::operator() const(void)::impl;
    unk_1EE2F4930 = &WebCore::convertEnumerationToString(WebCore::PaymentShippingType)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::PaymentShippingType)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F4938 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::PaymentShippingType)::$_2::operator() const(void)::impl;
  }
  v6 = WebCore::convertEnumerationToString(WebCore::PaymentShippingType)::values[v3];
  if (!v6)
    return *v5;
  v7 = *(_DWORD *)v6;
  v8 = *(_DWORD *)(v6 + 4);
  *(_DWORD *)v6 += 2;
  if (v8)
  {
    if (v8 != 1)
    {
LABEL_7:
      v9 = *(_QWORD *)(v4 + 64760);
      if (!v9 || v6 != *(_QWORD *)(v9 + 8))
      {
        v9 = JSC::jsStringWithCacheSlowCase();
        v7 = *(_DWORD *)v6 - 2;
      }
      goto LABEL_10;
    }
    v11 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_7;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v4 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *v5;
  }
LABEL_10:
  if (v7)
    *(_DWORD *)v6 = v7;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v6, a2);
  return v9;
}

uint64_t WebCore::jsPaymentRequest_onmerchantvalidation(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1184), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
  {
    WebCore::PaymentRequest::~PaymentRequest((WebCore *)((char *)v5 - 24), v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 + 6);
  }
  return v10;
}

BOOL WebCore::setJSPaymentRequest_onmerchantvalidation(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSPaymentRequest::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSPaymentRequest::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1184), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        WebCore::PaymentRequest::~PaymentRequest((WebCore::EventTarget *)((char *)v11 - 24), v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsPaymentRequest_onshippingaddresschange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1816), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
  {
    WebCore::PaymentRequest::~PaymentRequest((WebCore *)((char *)v5 - 24), v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 + 6);
  }
  return v10;
}

BOOL WebCore::setJSPaymentRequest_onshippingaddresschange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSPaymentRequest::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSPaymentRequest::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1816), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        WebCore::PaymentRequest::~PaymentRequest((WebCore::EventTarget *)((char *)v11 - 24), v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsPaymentRequest_onshippingoptionchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1840), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
  {
    WebCore::PaymentRequest::~PaymentRequest((WebCore *)((char *)v5 - 24), v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 + 6);
  }
  return v10;
}

BOOL WebCore::setJSPaymentRequest_onshippingoptionchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSPaymentRequest::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSPaymentRequest::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1840), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        WebCore::PaymentRequest::~PaymentRequest((WebCore::EventTarget *)((char *)v11 - 24), v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsPaymentRequest_onpaymentmethodchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1448), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
  {
    WebCore::PaymentRequest::~PaymentRequest((WebCore *)((char *)v5 - 24), v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 + 6);
  }
  return v10;
}

BOOL WebCore::setJSPaymentRequest_onpaymentmethodchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSPaymentRequest::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSPaymentRequest::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1448), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        WebCore::PaymentRequest::~PaymentRequest((WebCore::EventTarget *)((char *)v11 - 24), v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::JSPaymentRequestOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v6 = *(_QWORD *)(v5 - 16);
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (*(_QWORD *)(v5 - 8)
    || (result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 24) + 64))(v5 - 24), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

void WebCore::JSPaymentRequestOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  WebCore::PaymentRequest *v4;
  int v5;
  uint64_t v6;
  bmalloc::api *v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  WebCore::PaymentRequest *v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v29;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = (WebCore::PaymentRequest *)(v3 - 24);
  v5 = *(_DWORD *)(v3 + 24);
  *(_DWORD *)(v3 + 24) = v5 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v11 = *(_QWORD *)(a3 + 32);
    v9 = (uint64_t *)(a3 + 32);
    v10 = v11;
    if (v11)
    {
      v12 = *(_DWORD *)(v10 - 8);
      v13 = ((unint64_t)v4 + ~((_QWORD)v4 << 32)) ^ (((unint64_t)v4 + ~((_QWORD)v4 << 32)) >> 22);
      v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
      v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
      v16 = v12 & ((v15 >> 31) ^ v15);
      v17 = *(WebCore::PaymentRequest **)(v10 + 16 * v16);
      if (v17 != v4)
      {
        v18 = 1;
        while (v17)
        {
          v16 = ((_DWORD)v16 + v18) & v12;
          v17 = *(WebCore::PaymentRequest **)(v10 + 16 * v16);
          ++v18;
          if (v17 == v4)
            goto LABEL_12;
        }
        v16 = *(unsigned int *)(v10 - 4);
      }
LABEL_12:
      if (v16 != *(_DWORD *)(v10 - 4))
      {
        v19 = (_QWORD *)(v10 + 16 * v16);
        *v19 = -1;
        v22 = v19[1];
        v21 = v19 + 1;
        v20 = v22;
        if (v22)
        {
          *(_QWORD *)(v20 + 8) = 3;
          *v21 = 0;
        }
        ++*(_DWORD *)(*v9 - 16);
        v23 = *v9;
        if (*v9)
          v24 = *(_DWORD *)(v23 - 12) - 1;
        else
          v24 = -1;
        *(_DWORD *)(v23 - 12) = v24;
        v25 = *v9;
        if (*v9)
        {
          v26 = 6 * *(_DWORD *)(v25 - 12);
          v27 = *(_DWORD *)(v25 - 4);
          if (v26 < v27 && v27 >= 9)
          {
            v29 = v3;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v9, v27 >> 1, 0);
            v3 = v29;
          }
        }
      }
    }
    v5 = *(_DWORD *)(v3 + 24) - 1;
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 8);
    if (v6)
    {
      *(_QWORD *)(v6 + 8) = 3;
      *(_QWORD *)(v3 + 8) = 0;
    }
  }
  if (v5)
  {
    *(_DWORD *)(v3 + 24) = v5;
  }
  else
  {
    WebCore::PaymentRequest::~PaymentRequest(v4, a2);
    bmalloc::api::isoDeallocate(v7, v8);
  }
}

unint64_t WebCore::createWrapper<WebCore::PaymentRequest,WebCore::PaymentRequest>(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSEventTarget *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v18;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  WTF *v37;
  void *v38;
  int v39;
  unint64_t SlowCase;
  WTF *v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *Allocator;
  uint64_t v48;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  WTF *v56;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSPaymentRequest::s_info + ~((_QWORD)&WebCore::JSPaymentRequest::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentRequest::s_info + ~((_QWORD)&WebCore::JSPaymentRequest::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSPaymentRequest::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSPaymentRequest::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSEventTarget *)*((_QWORD *)a1 + 7);
  v16 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v15, a1, a3);
  Structure = WebCore::JSPaymentRequestPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSPaymentRequestPrototype::create(v15, Structure, v18, v19);
  v21 = WebCore::JSPaymentRequest::createStructure((uint64_t *)v15, (uint64_t)a1, v20);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v21, (uint64_t)&WebCore::JSPaymentRequest::s_info);
LABEL_8:
  v22 = *((_QWORD *)a1 + 7);
  v23 = *(_QWORD *)(v22 + 41456);
  v24 = *(_QWORD *)(v23 + 23536);
  v25 = *(_QWORD **)(v24 + 1456);
  if (v25)
    goto LABEL_31;
  v26 = *(_QWORD *)(v23 + 22648);
  if (__ldaxr((unsigned __int8 *)v26))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v26))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v26);
LABEL_13:
  v28 = *(_QWORD *)(v26 + 2824);
  v54 = *(_QWORD *)(v28 + 1456);
  if (!v54)
  {
    v29 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v56, "IsoSpace T");
    v55 = 0;
    MEMORY[0x19AEA3204](v29, &v56, v22 + 192, v22 + 1872, 32, 8, &v55);
    v31 = (uint64_t)v55;
    v55 = 0;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = v56;
    v56 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 1)
        WTF::fastFree(v32, v30);
      else
        --*(_DWORD *)v32;
    }
    v54 = v29;
    v33 = *(_QWORD *)(v28 + 1456);
    *(_QWORD *)(v28 + 1456) = v29;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = *(unsigned int *)(v26 + 2844);
    if ((_DWORD)v34 == *(_DWORD *)(v26 + 2840))
    {
      v35 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v26 + 2832, v34 + 1, (unint64_t)&v54);
      v34 = *(unsigned int *)(v26 + 2844);
      *(_QWORD *)(*(_QWORD *)(v26 + 2832) + 8 * v34) = *v35;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v26 + 2832) + 8 * v34) = v29;
    }
    *(_DWORD *)(v26 + 2844) = v34 + 1;
  }
  v25 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v36 = *(_QWORD *)(v24 + 1456);
  *(_QWORD *)(v24 + 1456) = v25;
  if (v36)
  {
    v37 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v37, v38);
  }
  v39 = __ldxr((unsigned __int8 *)v26);
  if (v39 != 1)
  {
    __clrex();
    goto LABEL_30;
  }
  if (__stlxr(0, (unsigned __int8 *)v26))
LABEL_30:
    WTF::Lock::unlockSlow((WTF::Lock *)v26);
LABEL_31:
  SlowCase = v25[3];
  if (SlowCase < v25[4])
  {
LABEL_32:
    v25[3] = SlowCase + 32;
    goto LABEL_33;
  }
  SlowCase = v25[5];
  if ((SlowCase & 1) == 0)
  {
    v53 = *(_QWORD *)(SlowCase + 8) ^ v25[6];
    v25[4] = SlowCase + HIDWORD(v53);
    v25[5] = SlowCase + (int)v53;
    goto LABEL_32;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_33:
  *(_DWORD *)SlowCase = 0;
  v41 = *a2;
  *a2 = 0;
  v42 = (char *)v41 + 24;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  *(_QWORD *)(SlowCase + 24) = v42;
  if (*(_BYTE *)(v22 + 755))
    __dmb(0xAu);
  v43 = *((_QWORD *)a1 + 415);
  if ((byte_1EE336388 & 1) == 0)
  {
    qword_1EE336380 = (uint64_t)&off_1E32C9190;
    byte_1EE336388 = 1;
  }
  if (v5)
    v44 = (uint64_t *)((char *)v5 + 32);
  else
    v44 = 0;
  if (!*(_DWORD *)(v43 + 48))
  {
    if ((SlowCase & 8) != 0)
      v45 = (SlowCase - 112) | 1;
    else
      v45 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v45 & 1) != 0)
      v46 = v45 + 47;
    else
      v46 = *(_QWORD *)v45 + 32;
    Allocator = *(_QWORD **)(v46 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v46 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE336380;
    Allocator[2] = v43;
    v48 = *v44;
    *v44 = (uint64_t)Allocator;
    if (!v48)
      return SlowCase;
LABEL_58:
    *(_QWORD *)(v48 + 8) = 3;
    return SlowCase;
  }
  v56 = v5;
  if ((SlowCase & 8) != 0)
    v50 = (SlowCase - 112) | 1;
  else
    v50 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v50 & 1) != 0)
    v51 = v50 + 47;
  else
    v51 = *(_QWORD *)v50 + 32;
  v52 = *(_QWORD **)(v51 + 16);
  if (!v52)
    v52 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v51 + 16) = *v52;
  *v52 = SlowCase;
  v52[1] = &qword_1EE336380;
  v52[2] = v43;
  v55 = v52;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v43 + 32), (uint64_t *)&v56, (uint64_t *)&v55);
  v48 = (uint64_t)v55;
  if (v55)
    goto LABEL_58;
  return SlowCase;
}

uint64_t WebCore::wrap<WebCore::PaymentRequest>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t result;
  bmalloc::api *v8;
  void *v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  WebCore::PaymentRequest *v18;

  v3 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v3 + 48))
  {
    v10 = *(_QWORD *)(v3 + 32);
    if (!v10)
      goto LABEL_5;
    v11 = *(_DWORD *)(v10 - 8);
    v12 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
    v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
    v15 = v11 & ((v14 >> 31) ^ v14);
    v16 = *(_QWORD *)(v10 + 16 * v15);
    if (v16 != a3)
    {
      v17 = 1;
      while (v16)
      {
        v15 = ((_DWORD)v15 + v17) & v11;
        v16 = *(_QWORD *)(v10 + 16 * v15);
        ++v17;
        if (v16 == a3)
          goto LABEL_16;
      }
      goto LABEL_5;
    }
LABEL_16:
    v4 = *(_QWORD *)(v10 + 16 * v15 + 8);
    if (!v4)
      goto LABEL_5;
  }
  else
  {
    v4 = *(_QWORD *)(a3 + 32);
    if (!v4)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v4 + 8) & 3) == 0)
  {
    v5 = *(_QWORD *)v4;
    if (*(_QWORD *)v4)
      return v5;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 48);
  v18 = (WebCore::PaymentRequest *)a3;
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))a3 == &off_1E3364E38)
  {
    v5 = WebCore::createWrapper<WebCore::PaymentRequest,WebCore::PaymentRequest>(a2, &v18, (WebCore::JSDOMGlobalObject *)a3);
    if (v18)
    {
      if (*((_DWORD *)v18 + 12) == 1)
      {
        WebCore::PaymentRequest::~PaymentRequest(v18, v6);
        bmalloc::api::isoDeallocate(v8, v9);
      }
      else
      {
        --*((_DWORD *)v18 + 12);
      }
    }
    return v5;
  }
  result = 532;
  __break(0xC471u);
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPaymentRequestUpdateEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v2;
  unint64_t v3;
  JSC::VM *v5;
  uint64_t v7;
  int v8;
  JSC::JSCell *v9;
  _BOOL4 v10;
  _BOOL4 v11;
  unint64_t v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  double v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  double v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  WTF::StringImpl *v29;
  WebCore::JSDOMGlobalObject *v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  JSC::VM *v36;
  uint64_t v37;
  unsigned int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char **v43;
  int v44;
  unint64_t v45;
  WebCore::JSEvent *v46;
  JSC::JSCell *v47;
  unint64_t Structure;
  JSC::Structure *v49;
  JSC::JSCell *v50;
  uint64_t v51;
  JSCell *v52;
  JSC::JSCell *v53;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v55;
  JSC::JSGlobalObject *v56;
  JSC::VM *v57;
  WebCore::JSDOMGlobalObject *v58;
  JSC::Structure *v59;
  JSC::VM *FunctionRealm;
  uint64_t v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char **v67;
  int v68;
  JSC::JSCell *v69;
  unint64_t v70;
  JSC::Structure *v71;
  JSC::JSCell *v72;
  uint64_t v73;
  unint64_t SubclassStructure;
  _DWORD *v75;
  JSValue v77;
  BOOL v78;
  int v79;
  uint64_t v80;
  int *v81;
  int v82;
  BOOL v83;
  int v84;
  uint64_t v85;
  int *v86;
  int v87;
  BOOL v88;
  int v89;
  uint64_t v90;
  int *v91;
  int v92;
  JSC::VM *v93;
  WTF::StringImpl *v94;
  int v95;
  JSC::VM *v96;
  unint64_t v97;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v77.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v5, a1, v77);
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 24);
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v94);
    v8 = v95;
    if (v95)
    {
      v52 = 0;
    }
    else
    {
      v93 = v5;
      if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
      {
        v10 = 0;
        v11 = 0;
        LODWORD(v12) = 0;
        goto LABEL_42;
      }
      v9 = *(JSC::JSCell **)(a2 + 56);
      v2 = (JSC::VM *)*((_QWORD *)a1 + 7);
      v96 = v2;
      if (((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v10 = 0;
        v11 = 0;
LABEL_36:
        LODWORD(v12) = 0;
        while (1)
        {
LABEL_42:
          if (!v95)
          {
            v27 = v94;
            v94 = 0;
            v28 = bmalloc::api::isoAllocate();
            WTF::MonotonicTime::now((WTF::MonotonicTime *)v28);
            *(_QWORD *)(v28 + 8) = 0;
            if (v11)
              v32 = 4;
            else
              v32 = 0;
            if ((_DWORD)v12)
              v33 = 8;
            else
              v33 = 0;
            if (v10)
              v34 = 819202;
            else
              v34 = 819200;
            v35 = v32 | v33 | v34 | (v27 != 0) | *(_DWORD *)(v28 + 20) & 0xFFC00000;
            *(_DWORD *)(v28 + 16) = 1;
            *(_DWORD *)(v28 + 20) = v35;
            if (v27)
            {
              *(_DWORD *)v27 += 2;
              v35 = *(_DWORD *)(v28 + 20);
            }
            *(_QWORD *)(v28 + 24) = v27;
            *(_QWORD *)(v28 + 32) = 0;
            *(_QWORD *)(v28 + 40) = 0;
            *(_QWORD *)(v28 + 48) = 0;
            *(_QWORD *)(v28 + 56) = v31;
            *(_QWORD *)(v28 + 64) = 0;
            *(_DWORD *)(v28 + 20) = v35 | 0x4000;
            *(_QWORD *)v28 = off_1E3364F30;
            *(_BYTE *)(v28 + 72) = 0;
            v97 = v28;
            if (v27)
            {
              if (*(_DWORD *)v27 == 2)
              {
                WTF::StringImpl::destroy(v27, v29);
                if (*(void (***)(WebCore::PaymentRequestUpdateEvent *__hidden))v28 != off_1E3364F30)
                {
                  __break(0xC471u);
                  JUMPOUT(0x194DD1650);
                }
              }
              else
              {
                *(_DWORD *)v27 -= 2;
              }
            }
            v36 = *(JSC::VM **)(v7 + 40);
            v37 = *((_QWORD *)v36 + 412);
            if (!v37)
              goto LABEL_63;
            v38 = *(_DWORD *)(v37 - 8);
            v39 = ((unint64_t)&WebCore::JSPaymentRequestUpdateEvent::s_info
                 + ~((_QWORD)&WebCore::JSPaymentRequestUpdateEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentRequestUpdateEvent::s_info
                                                                                     + ~((_QWORD)&WebCore::JSPaymentRequestUpdateEvent::s_info << 32)) >> 22);
            v40 = 9 * ((v39 + ~(v39 << 13)) ^ ((v39 + ~(v39 << 13)) >> 8));
            v41 = (v40 ^ (v40 >> 15)) + ~((v40 ^ (v40 >> 15)) << 27);
            v42 = v38 & ((v41 >> 31) ^ v41);
            v43 = *(char ***)(v37 + 16 * v42);
            if (v43 == &WebCore::JSPaymentRequestUpdateEvent::s_info)
            {
LABEL_62:
              v45 = *(_QWORD *)(v37 + 16 * v42 + 8);
              if (!v45)
                goto LABEL_63;
            }
            else
            {
              v44 = 1;
              while (v43)
              {
                v42 = ((_DWORD)v42 + v44) & v38;
                v43 = *(char ***)(v37 + 16 * v42);
                ++v44;
                if (v43 == &WebCore::JSPaymentRequestUpdateEvent::s_info)
                  goto LABEL_62;
              }
LABEL_63:
              v46 = (WebCore::JSEvent *)*((_QWORD *)v36 + 7);
              v47 = (JSC::JSCell *)WebCore::JSEvent::prototype(v46, *(JSC::VM **)(v7 + 40), v30);
              Structure = WebCore::JSPaymentRequestUpdateEventPrototype::createStructure((uint64_t *)v46, (uint64_t)v36, v47);
              *(_DWORD *)(Structure + 16) |= 0x80000u;
              v50 = (JSC::JSCell *)WebCore::JSPaymentRequestUpdateEventPrototype::create(v46, v36, Structure, v49);
              v51 = WebCore::JSPaymentRequestUpdateEvent::createStructure((uint64_t *)v46, (uint64_t)v36, v50);
              v45 = WebCore::cacheDOMStructure((JSCell *)v36, v51, (uint64_t)&WebCore::JSPaymentRequestUpdateEvent::s_info);
            }
            v52 = (JSCell *)WebCore::JSPaymentRequestUpdateEvent::create(v45, v36, (uint64_t *)&v97);
            WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v36 + 415), v28, (uint64_t)v52);
            v53 = *(JSC::JSCell **)(a2 + 40);
            if (((unint64_t)v53 & 0xFFFE000000000002) != 0
              || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v53)) == 0
              || (v56 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
              || (v57 = (JSC::VM *)*((_QWORD *)a1 + 7),
                  FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v55),
                  *((_DWORD *)v57 + 20))
              && (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) != 0)
            {
LABEL_77:
              if (*((_DWORD *)v93 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v93) & 1) != 0)
                v52 = 0;
              v75 = (_DWORD *)v97;
              v97 = 0;
              if (v75)
              {
                if (v75[4] == 1)
                  (*(void (**)(_DWORD *))(*(_QWORD *)v75 + 8))(v75);
                else
                  --v75[4];
              }
              goto LABEL_81;
            }
            v61 = *((_QWORD *)FunctionRealm + 412);
            if (v61)
            {
              v62 = *(_DWORD *)(v61 - 8);
              v63 = ((unint64_t)&WebCore::JSPaymentRequestUpdateEvent::s_info
                   + ~((_QWORD)&WebCore::JSPaymentRequestUpdateEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentRequestUpdateEvent::s_info
                                                                                       + ~((_QWORD)&WebCore::JSPaymentRequestUpdateEvent::s_info << 32)) >> 22);
              v64 = 9 * ((v63 + ~(v63 << 13)) ^ ((v63 + ~(v63 << 13)) >> 8));
              v65 = (v64 ^ (v64 >> 15)) + ~((v64 ^ (v64 >> 15)) << 27);
              v66 = v62 & ((v65 >> 31) ^ v65);
              v67 = *(char ***)(v61 + 16 * v66);
              if (v67 != &WebCore::JSPaymentRequestUpdateEvent::s_info)
              {
                v68 = 1;
                while (v67)
                {
                  v66 = ((_DWORD)v66 + v68) & v62;
                  v67 = *(char ***)(v61 + 16 * v66);
                  ++v68;
                  if (v67 == &WebCore::JSPaymentRequestUpdateEvent::s_info)
                    goto LABEL_73;
                }
                goto LABEL_74;
              }
LABEL_73:
              v58 = *(WebCore::JSDOMGlobalObject **)(v61 + 16 * v66 + 8);
              if (!v58)
                goto LABEL_74;
            }
            else
            {
LABEL_74:
              v69 = (JSC::JSCell *)WebCore::JSEvent::prototype(v57, FunctionRealm, v58);
              v70 = WebCore::JSPaymentRequestUpdateEventPrototype::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v69);
              *(_DWORD *)(v70 + 16) |= 0x80000u;
              v72 = (JSC::JSCell *)WebCore::JSPaymentRequestUpdateEventPrototype::create(v57, FunctionRealm, v70, v71);
              v73 = WebCore::JSPaymentRequestUpdateEvent::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v72);
              v58 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v73, (uint64_t)&WebCore::JSPaymentRequestUpdateEvent::s_info);
            }
            SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v56, v58, v59);
            if (!*((_DWORD *)v57 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) == 0)
              JSC::JSObject::setStructure(v52, v57, SubclassStructure);
            goto LABEL_77;
          }
          v16 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_114:
          v78 = (_DWORD)v12 == 0;
LABEL_155:
          v10 = !v78;
LABEL_19:
          if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
            goto LABEL_92;
LABEL_20:
          WTF::AtomStringImpl::addLiteral();
          v18 = (WTF::StringImpl *)v97;
          v20 = JSC::JSObject::get((JSC::Structure *)v3, a1, v97);
          if (v18)
          {
            if (*(_DWORD *)v18 == 2)
              WTF::StringImpl::destroy(v18, v19);
            else
              *(_DWORD *)v18 -= 2;
          }
          if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v2) & 1) != 0)
            goto LABEL_92;
          if (v20 == 10)
          {
            v11 = 0;
            goto LABEL_31;
          }
          v21 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v20 >= 0xFFFE000000000000)
            break;
          *(_QWORD *)&v22 = v20 - 0x2000000000000;
          if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            if ((v20 & 0xFFFE000000000002) != 0)
            {
              v11 = v20 == 7;
              goto LABEL_30;
            }
            v84 = *(unsigned __int8 *)(v20 + 5);
            if (v84 == 3)
            {
              v87 = *(_DWORD *)(v20 + 8);
              goto LABEL_147;
            }
            if (v84 == 2)
            {
              v85 = *(_QWORD *)(v20 + 8);
              if ((v85 & 1) != 0)
                v86 = (int *)(v20 + 16);
              else
                v86 = (int *)(v85 + 4);
              v87 = *v86;
LABEL_147:
              v83 = v87 == 0;
            }
            else
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0xA) & 1) == 0)
              {
LABEL_149:
                v11 = 1;
                goto LABEL_30;
              }
              v83 = *(_QWORD *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            }
LABEL_159:
            v11 = !v83;
            goto LABEL_30;
          }
          if (v22 > 0.0)
            goto LABEL_149;
          v11 = v22 < 0.0;
LABEL_30:
          if (*((_DWORD *)v21 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
            goto LABEL_92;
LABEL_31:
          WTF::AtomStringImpl::addLiteral();
          v23 = (WTF::StringImpl *)v97;
          v3 = JSC::JSObject::get((JSC::Structure *)v3, a1, v97);
          if (v23)
          {
            if (*(_DWORD *)v23 == 2)
              WTF::StringImpl::destroy(v23, v24);
            else
              *(_DWORD *)v23 -= 2;
          }
          if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v2) & 1) != 0)
            goto LABEL_92;
          if (v3 == 10)
            goto LABEL_36;
          v25 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v3 >= 0xFFFE000000000000)
          {
            v88 = (_DWORD)v3 == 0;
            goto LABEL_163;
          }
          *(_QWORD *)&v26 = v3 - 0x2000000000000;
          if (v3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            if (v26 <= 0.0)
            {
              LODWORD(v12) = v26 < 0.0;
              goto LABEL_41;
            }
          }
          else
          {
            if ((v3 & 0xFFFE000000000002) != 0)
            {
              LODWORD(v12) = v3 == 7;
              goto LABEL_41;
            }
            v89 = *(unsigned __int8 *)(v3 + 5);
            if (v89 == 3)
            {
              v92 = *(_DWORD *)(v3 + 8);
LABEL_151:
              v88 = v92 == 0;
              goto LABEL_163;
            }
            if (v89 == 2)
            {
              v90 = *(_QWORD *)(v3 + 8);
              if ((v90 & 1) != 0)
                v91 = (int *)(v3 + 16);
              else
                v91 = (int *)(v90 + 4);
              v92 = *v91;
              goto LABEL_151;
            }
            if ((*(_BYTE *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
            {
              v88 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_163:
              LODWORD(v12) = !v88;
              goto LABEL_41;
            }
          }
          LODWORD(v12) = 1;
LABEL_41:
          if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            goto LABEL_92;
        }
        v83 = (_DWORD)v20 == 0;
        goto LABEL_159;
      }
      if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (v13 = JSC::JSCell::getObject(v9)) == 0)
      {
        JSC::throwTypeError();
      }
      else
      {
        v3 = v13;
        WTF::AtomStringImpl::addLiteral();
        v14 = (WTF::StringImpl *)v97;
        v12 = JSC::JSObject::get((JSC::Structure *)v3, a1, v97);
        if (v14)
        {
          if (*(_DWORD *)v14 == 2)
            WTF::StringImpl::destroy(v14, v15);
          else
            *(_DWORD *)v14 -= 2;
        }
        if (!*((_DWORD *)v2 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v2) & 1) == 0)
        {
          if (v12 == 10)
          {
            v10 = 0;
            goto LABEL_20;
          }
          v16 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v12 >= 0xFFFE000000000000)
            goto LABEL_114;
          *(_QWORD *)&v17 = v12 - 0x2000000000000;
          if (v12 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            v10 = v17 > 0.0 || v17 < 0.0;
            goto LABEL_19;
          }
          if ((v12 & 0xFFFE000000000002) != 0)
          {
            v10 = v12 == 7;
            goto LABEL_19;
          }
          v79 = *(unsigned __int8 *)(v12 + 5);
          if (v79 == 3)
          {
            v82 = *(_DWORD *)(v12 + 8);
          }
          else
          {
            if (v79 != 2)
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v78 = *(_QWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                goto LABEL_155;
              }
              v10 = 1;
              goto LABEL_19;
            }
            v80 = *(_QWORD *)(v12 + 8);
            if ((v80 & 1) != 0)
              v81 = (int *)(v12 + 16);
            else
              v81 = (int *)(v80 + 4);
            v82 = *v81;
          }
          v78 = v82 == 0;
          goto LABEL_155;
        }
      }
LABEL_92:
      v52 = 0;
LABEL_81:
      v8 = v95;
    }
    if (v8 != -1)
      ((void (*)(unint64_t *, WTF::StringImpl **))off_1E32C9518[v8])(&v97, &v94);
  }
  return v52;
}

uint64_t WebCore::JSPaymentRequestUpdateEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPaymentRequestUpdateEventPrototype::create(WebCore::JSPaymentRequestUpdateEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSPaymentRequestUpdateEvent::s_info, (uint64_t)&WebCore::JSPaymentRequestUpdateEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPaymentRequestUpdateEvent>,(WebCore::DOMConstructorID)180>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1440);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructor<WebCore::JSPaymentRequestUpdateEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSPaymentRequestUpdateEvent::prototype((WebCore::JSPaymentRequestUpdateEvent *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1440) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPaymentRequestUpdateEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPaymentRequestUpdateEventPrototype::s_info != (char **)(16
                                                                         * *(unsigned int *)(16
                                                                                           * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                           + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPaymentRequestUpdateEvent>,(WebCore::DOMConstructorID)180>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSPaymentRequestUpdateEvent::subspaceForImpl(WebCore::JSPaymentRequestUpdateEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 1464);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 1464))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 1464);
    *(_QWORD *)(v8 + 1464) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 1464);
  *(_QWORD *)(v3 + 1464) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSPaymentResponse::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;

  WebCore::JSEventTarget::visitOutputConstraints<JSC::AbstractSlotVisitor>(a1, a2);
  v4 = *(uint64_t **)(*(_QWORD *)(a1 + 24) + 72);
  if (!v4 || (v4[1] & 3) != 0)
    v5 = 0;
  else
    v5 = *v4;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 24))(a2, v5);
}

uint64_t WebCore::JSPaymentResponse::visitOutputConstraints<JSC::SlotVisitor>(uint64_t a1, uint64_t a2)
{
  WebCore::JSEventTarget::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
  return WebCore::JSPaymentResponse::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
}

uint64_t WebCore::JSPaymentResponse::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24) - 24);
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPaymentResponse::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  WebCore::JSEventTarget::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
  return WebCore::JSPaymentResponse::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
}

uint64_t WebCore::JSPaymentResponse::visitChildren(WebCore::JSPaymentResponse *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];
  uint64_t v10;
  char v11;

  v9[0] = a2;
  v9[1] = this;
  v11 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v10 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v9;
    WebCore::JSEventTarget::visitChildren(this, a2, a3);
    v6 = *(uint64_t **)(*((_QWORD *)this + 3) + 72);
    if (!v6 || (v6[1] & 3) != 0)
      v7 = 0;
    else
      v7 = *v6;
    result = (*(uint64_t (**)(JSC::JSCell *, uint64_t))(*(_QWORD *)a2 + 24))(a2, v7);
    *(_QWORD *)(v9[0] + 88) = v10;
  }
  return result;
}

uint64_t WebCore::JSPaymentResponsePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPaymentResponsePrototype::create(WebCore::JSPaymentResponsePrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<13u>(this, (uint64_t)&WebCore::JSPaymentResponse::s_info, (uint64_t)&WebCore::JSPaymentResponsePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaymentResponse>,(WebCore::DOMConstructorID)181>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1448);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaymentResponse>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPaymentResponse::s_info + ~((_QWORD)&WebCore::JSPaymentResponse::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentResponse::s_info + ~((_QWORD)&WebCore::JSPaymentResponse::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPaymentResponse::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPaymentResponse::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPaymentResponsePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSPaymentResponsePrototype::create((WebCore::JSPaymentResponsePrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSPaymentResponse::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSPaymentResponse::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1448) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPaymentResponseConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPaymentResponsePrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPaymentResponse>,(WebCore::DOMConstructorID)181>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPaymentResponse_requestId(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 40);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentResponse_methodName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 48);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentResponse_details(JSC::JSGlobalObject *a1, WebCore::JSPaymentResponse *a2)
{
  return WebCore::JSPaymentResponse::details(a2, a1);
}

unint64_t WebCore::jsPaymentResponse_shippingAddress(uint64_t a1, uint64_t a2)
{
  WTF *v3;

  v3 = *(WTF **)(*(_QWORD *)(a2 + 24) + 80);
  if (v3)
    return WebCore::wrap<WebCore::PaymentAddress>(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v3);
  else
    return 2;
}

uint64_t WebCore::jsPaymentResponse_shippingOption(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 88);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_DWORD *)(v2 + 4);
  if (!v4)
    return *(_QWORD *)(v3 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v3 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v3 + 64760);
  if (!v5 || v2 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentResponse_payerName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 96);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_DWORD *)(v2 + 4);
  if (!v4)
    return *(_QWORD *)(v3 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v3 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v3 + 64760);
  if (!v5 || v2 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentResponse_payerEmail(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_DWORD *)(v2 + 4);
  if (!v4)
    return *(_QWORD *)(v3 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v3 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v3 + 64760);
  if (!v5 || v2 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentResponse_payerPhone(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 112);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_DWORD *)(v2 + 4);
  if (!v4)
    return *(_QWORD *)(v3 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v3 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v3 + 64760);
  if (!v5 || v2 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPaymentResponse_onpayerdetailchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1432), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
  {
    WebCore::PaymentResponse::~PaymentResponse((WebCore *)((char *)v5 - 24), v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 + 6);
  }
  return v10;
}

BOOL WebCore::setJSPaymentResponse_onpayerdetailchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSPaymentResponse::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSPaymentResponse::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1432), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        WebCore::PaymentResponse::~PaymentResponse((WebCore::EventTarget *)((char *)v11 - 24), v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::JSPaymentResponseOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v6 = *(_QWORD *)(v5 - 16);
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (*(_QWORD *)(v5 - 8)
    || (result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 24) + 64))(v5 - 24), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

void WebCore::JSPaymentResponseOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  WebCore::PaymentResponse *v4;
  int v5;
  uint64_t v6;
  bmalloc::api *v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  WebCore::PaymentResponse *v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v29;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = (WebCore::PaymentResponse *)(v3 - 24);
  v5 = *(_DWORD *)(v3 + 24);
  *(_DWORD *)(v3 + 24) = v5 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v11 = *(_QWORD *)(a3 + 32);
    v9 = (uint64_t *)(a3 + 32);
    v10 = v11;
    if (v11)
    {
      v12 = *(_DWORD *)(v10 - 8);
      v13 = ((unint64_t)v4 + ~((_QWORD)v4 << 32)) ^ (((unint64_t)v4 + ~((_QWORD)v4 << 32)) >> 22);
      v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
      v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
      v16 = v12 & ((v15 >> 31) ^ v15);
      v17 = *(WebCore::PaymentResponse **)(v10 + 16 * v16);
      if (v17 != v4)
      {
        v18 = 1;
        while (v17)
        {
          v16 = ((_DWORD)v16 + v18) & v12;
          v17 = *(WebCore::PaymentResponse **)(v10 + 16 * v16);
          ++v18;
          if (v17 == v4)
            goto LABEL_12;
        }
        v16 = *(unsigned int *)(v10 - 4);
      }
LABEL_12:
      if (v16 != *(_DWORD *)(v10 - 4))
      {
        v19 = (_QWORD *)(v10 + 16 * v16);
        *v19 = -1;
        v22 = v19[1];
        v21 = v19 + 1;
        v20 = v22;
        if (v22)
        {
          *(_QWORD *)(v20 + 8) = 3;
          *v21 = 0;
        }
        ++*(_DWORD *)(*v9 - 16);
        v23 = *v9;
        if (*v9)
          v24 = *(_DWORD *)(v23 - 12) - 1;
        else
          v24 = -1;
        *(_DWORD *)(v23 - 12) = v24;
        v25 = *v9;
        if (*v9)
        {
          v26 = 6 * *(_DWORD *)(v25 - 12);
          v27 = *(_DWORD *)(v25 - 4);
          if (v26 < v27 && v27 >= 9)
          {
            v29 = v3;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v9, v27 >> 1, 0);
            v3 = v29;
          }
        }
      }
    }
    v5 = *(_DWORD *)(v3 + 24) - 1;
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 8);
    if (v6)
    {
      *(_QWORD *)(v6 + 8) = 3;
      *(_QWORD *)(v3 + 8) = 0;
    }
  }
  if (v5)
  {
    *(_DWORD *)(v3 + 24) = v5;
  }
  else
  {
    WebCore::PaymentResponse::~PaymentResponse(v4, a2);
    bmalloc::api::isoDeallocate(v7, v8);
  }
}

unint64_t WebCore::wrap<WebCore::PaymentResponse>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  WebCore::JSEventTarget *v17;
  JSC::JSCell *v18;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v20;
  JSC::Structure *v21;
  JSC::JSCell *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  WTF *v39;
  void *v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *Allocator;
  uint64_t v46;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  WTF *v62;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v51 = *(_QWORD *)(v5 + 32);
    if (!v51)
      goto LABEL_5;
    v52 = *(_DWORD *)(v51 - 8);
    v53 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v54 = 9 * ((v53 + ~(v53 << 13)) ^ ((v53 + ~(v53 << 13)) >> 8));
    v55 = (v54 ^ (v54 >> 15)) + ~((v54 ^ (v54 >> 15)) << 27);
    v56 = v52 & ((v55 >> 31) ^ v55);
    v57 = *(_QWORD *)(v51 + 16 * v56);
    if (v57 != a3)
    {
      v58 = 1;
      while (v57)
      {
        v56 = ((_DWORD)v56 + v58) & v52;
        v57 = *(_QWORD *)(v51 + 16 * v56);
        ++v58;
        if (v57 == a3)
          goto LABEL_66;
      }
      goto LABEL_5;
    }
LABEL_66:
    v6 = *(_QWORD *)(v51 + 16 * v56 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)(a3 + 32);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 48);
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))a3 != &off_1E33652B8)
  {
    __break(0xC471u);
    JUMPOUT(0x194DD3810);
  }
  v8 = *((_QWORD *)a2 + 412);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSPaymentResponse::s_info + ~((_QWORD)&WebCore::JSPaymentResponse::s_info << 32)) ^ (((unint64_t)&WebCore::JSPaymentResponse::s_info + ~((_QWORD)&WebCore::JSPaymentResponse::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSPaymentResponse::s_info)
    {
LABEL_11:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_13;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSPaymentResponse::s_info)
          goto LABEL_11;
      }
    }
  }
  v17 = (WebCore::JSEventTarget *)*((_QWORD *)a2 + 7);
  v18 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v17, a2, (WebCore::JSDOMGlobalObject *)a3);
  Structure = WebCore::JSPaymentResponsePrototype::createStructure((uint64_t *)v17, (uint64_t)a2, v18);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v22 = (JSC::JSCell *)WebCore::JSPaymentResponsePrototype::create(v17, Structure, v20, v21);
  v23 = WebCore::JSPaymentResponse::createStructure((uint64_t *)v17, (uint64_t)a2, v22);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v23, (uint64_t)&WebCore::JSPaymentResponse::s_info);
LABEL_13:
  v24 = *((_QWORD *)a2 + 7);
  v25 = *(_QWORD *)(v24 + 41456);
  v26 = *(_QWORD *)(v25 + 23536);
  v27 = *(_QWORD **)(v26 + 1472);
  if (v27)
    goto LABEL_36;
  v28 = *(_QWORD *)(v25 + 22648);
  if (__ldaxr((unsigned __int8 *)v28))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v28))
  {
    goto LABEL_18;
  }
  MEMORY[0x19AEA534C](v28);
LABEL_18:
  v30 = *(_QWORD *)(v28 + 2824);
  v60 = *(_QWORD *)(v30 + 1472);
  if (!v60)
  {
    v31 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v62, "IsoSpace T");
    v61 = 0;
    MEMORY[0x19AEA3204](v31, &v62, v24 + 192, v24 + 1872, 32, 8, &v61);
    v33 = (uint64_t)v61;
    v61 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v62;
    v62 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 1)
        WTF::fastFree(v34, v32);
      else
        --*(_DWORD *)v34;
    }
    v60 = v31;
    v35 = *(_QWORD *)(v30 + 1472);
    *(_QWORD *)(v30 + 1472) = v31;
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
    v36 = *(unsigned int *)(v28 + 2844);
    if ((_DWORD)v36 == *(_DWORD *)(v28 + 2840))
    {
      v37 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v28 + 2832, v36 + 1, (unint64_t)&v60);
      v36 = *(unsigned int *)(v28 + 2844);
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = *v37;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = v31;
    }
    *(_DWORD *)(v28 + 2844) = v36 + 1;
  }
  v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v38 = *(_QWORD *)(v26 + 1472);
  *(_QWORD *)(v26 + 1472) = v27;
  if (v38)
  {
    v39 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v39, v40);
  }
  v41 = __ldxr((unsigned __int8 *)v28);
  if (v41 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v28))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v28);
LABEL_36:
  SlowCase = v27[3];
  if (SlowCase < v27[4])
  {
LABEL_37:
    v27[3] = SlowCase + 32;
    goto LABEL_38;
  }
  SlowCase = v27[5];
  if ((SlowCase & 1) == 0)
  {
    v59 = *(_QWORD *)(SlowCase + 8) ^ v27[6];
    v27[4] = SlowCase + HIDWORD(v59);
    v27[5] = SlowCase + (int)v59;
    goto LABEL_37;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3 + 24;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v42 = *((_QWORD *)a2 + 415);
  if ((byte_1EE336398 & 1) == 0)
  {
    qword_1EE336390 = (uint64_t)&off_1E32C91C0;
    byte_1EE336398 = 1;
  }
  if (!*(_DWORD *)(v42 + 48))
  {
    if ((SlowCase & 8) != 0)
      v43 = (SlowCase - 112) | 1;
    else
      v43 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v43 & 1) != 0)
      v44 = v43 + 47;
    else
      v44 = *(_QWORD *)v43 + 32;
    Allocator = *(_QWORD **)(v44 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v44 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE336390;
    Allocator[2] = v42;
    v46 = *(_QWORD *)(a3 + 32);
    *(_QWORD *)(a3 + 32) = Allocator;
    if (!v46)
      return SlowCase;
LABEL_60:
    *(_QWORD *)(v46 + 8) = 3;
    return SlowCase;
  }
  v62 = (WTF *)a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  v50 = *(_QWORD **)(v49 + 16);
  if (!v50)
    v50 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *v50;
  *v50 = SlowCase;
  v50[1] = &qword_1EE336390;
  v50[2] = v42;
  v61 = v50;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v42 + 32), (uint64_t *)&v62, (uint64_t *)&v61);
  v46 = (uint64_t)v61;
  if (v61)
    goto LABEL_60;
  return SlowCase;
}

WTF::StringImpl *WebCore::convertDictionary<WebCore::CryptoAlgorithmPbkdf2Params>@<X0>(JSC::JSCell *this@<X1>, JSC::VM **a2@<X0>, uint64_t a3@<X8>)
{
  unint64_t v5;
  JSC::Structure *Object;
  WTF::StringImpl *v7;
  uint64_t v8;
  JSC::VM *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  char *v22;
  char *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  JSC::JSArrayBufferView *v29;
  WTF *v30;
  WTF::StringImpl *result;
  JSC::ArrayBufferView *v32;
  int v33;
  int v34;
  uint64_t (*v35)();
  WTF::StringImpl *v36;
  int v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v42;
  int v43;
  uint64_t v44;
  int v45;
  void (**v46)(WebCore::CryptoAlgorithmParameters *__hidden);
  WTF::StringImpl *v47;
  char v48;
  uint64_t v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  char v54;
  WTF *v55;
  uint64_t v56;
  JSC::VM *v57;
  JSC::ArrayBufferView *v58;
  int v59;
  uint64_t *v60;
  unint64_t v61;
  JSC::ArrayBufferView *v62;
  int v63;
  int v64;
  WTF::StringImpl *v65;
  uint64_t v66;
  unsigned int v67;
  int v68;
  uint64_t v69;

  v69 = *MEMORY[0x1E0C80C00];
  v57 = a2[7];
  v5 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    Object = 0;
  }
  else if (((unint64_t)this & 0xFFFE000000000002) != 0
         || (Object = (JSC::Structure *)JSC::JSCell::getObject(this)) == 0)
  {
    result = (WTF::StringImpl *)JSC::throwTypeError();
    *(_DWORD *)(a3 + 88) = 1;
    return result;
  }
  v46 = off_1E32CB620;
  v47 = 0;
  v49 = 0;
  v50 = 0;
  v52 = 0;
  v53 = 0;
  v55 = 0;
  v56 = 0;
  if (v5 != 2)
  {
    WTF::AtomStringImpl::addLiteral();
    v8 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v65);
    if (v65)
    {
      if (*(_DWORD *)v65 == 2)
        WTF::StringImpl::destroy(v65, v7);
      else
        *(_DWORD *)v65 -= 2;
    }
    if (*((_DWORD *)v57 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v57))
      goto LABEL_12;
    if (v8 != 10)
    {
      v65 = (WTF::StringImpl *)v8;
      v9 = a2[7];
      if ((v8 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v8 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v65, (JSC::JSGlobalObject *)a2);
LABEL_19:
        if (*((_DWORD *)v9 + 20))
        {
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v9);
          v11 = (WTF::StringImpl *)v61;
          if (hasExceptionsAfterHandlingTraps)
          {
            v16 = 1;
            v45 = 1;
            v61 = 0;
            if (v11)
            {
              if (*(_DWORD *)v11 == 2)
                WTF::StringImpl::destroy(v11, v7);
              else
                *(_DWORD *)v11 -= 2;
            }
            *(_DWORD *)(a3 + 88) = 1;
            goto LABEL_57;
          }
        }
        else
        {
          v11 = (WTF::StringImpl *)v61;
        }
        v45 = 0;
        v44 = 0;
        v12 = v47;
        v47 = v11;
        if (v12)
        {
          if (*(_DWORD *)v12 == 2)
            WTF::StringImpl::destroy(v12, v7);
          else
            *(_DWORD *)v12 -= 2;
        }
        WTF::AtomStringImpl::addLiteral();
        v13 = v65;
        v15 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v65);
        if (v13)
        {
          if (*(_DWORD *)v13 == 2)
            WTF::StringImpl::destroy(v13, v14);
          else
            *(_DWORD *)v13 -= 2;
        }
        if (*((_DWORD *)v57 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v57))
          goto LABEL_30;
        if (v15 == 10)
        {
          WebCore::throwRequiredMemberTypeError((int)a2, (int)&v57, "hash", 5, "Pbkdf2Params", 13, "(object or DOMString)", 22);
LABEL_30:
          v16 = 0;
          *(_DWORD *)(a3 + 88) = 1;
LABEL_57:
          ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32C9390[v16])(&v65, &v44);
          goto LABEL_58;
        }
        WebCore::Converter<WebCore::IDLUnion<WebCore::IDLObject,WebCore::IDLDOMString>>::convert((uint64_t *)a2, v15, (uint64_t)&v65);
        v17 = v68;
        if (v68)
        {
          *(_DWORD *)(a3 + 88) = 1;
          goto LABEL_54;
        }
        LOBYTE(v61) = 0;
        LODWORD(v62) = -1;
        v18 = v67;
        if (v67 == -1)
        {
          if (v53 != -1)
          {
            ((void (*)(JSC::ArrayBufferView **, uint64_t *))off_1E32CB638[v53])(&v58, &v52);
            v53 = -1;
          }
        }
        else
        {
          ((void (*)(JSC::ArrayBufferView **, unint64_t *, uint64_t *))off_1E32CB648[v67])(&v58, &v61, &v66);
          LODWORD(v62) = v18;
          v58 = (JSC::ArrayBufferView *)&v52;
          ((void (*)(JSC::ArrayBufferView **, uint64_t *, unint64_t *))off_1E32CB658[v18])(&v58, &v52, &v61);
        }
        if ((_DWORD)v62 != -1)
          ((void (*)(JSC::ArrayBufferView **, unint64_t *))off_1E32CB638[v62])(&v58, &v61);
        WTF::AtomStringImpl::addLiteral();
        v19 = (WTF::StringImpl *)v61;
        v21 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, v61);
        if (v19)
        {
          if (*(_DWORD *)v19 == 2)
            WTF::StringImpl::destroy(v19, v20);
          else
            *(_DWORD *)v19 -= 2;
        }
        if (*((_DWORD *)v57 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v57))
          goto LABEL_52;
        if (v21 == 10)
        {
          v22 = "iterations";
          v23 = "unsigned long";
          v24 = (int)a2;
          v25 = 11;
          v26 = 14;
LABEL_51:
          WebCore::throwRequiredMemberTypeError(v24, (int)&v57, v22, v25, "Pbkdf2Params", 13, v23, v26);
LABEL_52:
          *(_DWORD *)(a3 + 88) = 1;
LABEL_53:
          v17 = v68;
LABEL_54:
          if (v17 != -1)
            ((void (*)(unint64_t *, uint64_t *))off_1E32CB6A8[v17])(&v61, &v66);
          v16 = 0;
          goto LABEL_57;
        }
        WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>((WTF::StringImpl *)a2, v21, &v61);
        if (HIDWORD(v61))
          goto LABEL_52;
        v51 = v61;
        WTF::AtomStringImpl::addLiteral();
        v27 = (WTF::StringImpl *)v61;
        v29 = (JSC::JSArrayBufferView *)JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, v61);
        if (v27)
        {
          if (*(_DWORD *)v27 == 2)
            WTF::StringImpl::destroy(v27, v28);
          else
            *(_DWORD *)v27 -= 2;
        }
        if (*((_DWORD *)v57 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v57))
          goto LABEL_52;
        if (v29 == (JSC::JSArrayBufferView *)10)
        {
          v22 = "salt";
          v23 = "(ArrayBufferView or ArrayBuffer)";
          v24 = (int)a2;
          v25 = 5;
          v26 = 33;
          goto LABEL_51;
        }
        v42 = a2[7];
        v32 = (JSC::ArrayBufferView *)JSC::JSArrayBuffer::toWrapped((uint64_t)v42, (uint64_t)v29);
        if (v32)
        {
          *(_DWORD *)v32 += 2;
          v59 = 1;
          v58 = 0;
          v62 = v32;
          v63 = 1;
          v64 = 0;
          _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_((uint64_t)&v60);
          v33 = v64;
          if (!v64)
          {
            v34 = v63;
            LOBYTE(v42) = 0;
            v43 = -1;
            if (v63 == -1)
            {
              LOBYTE(v58) = 0;
              v59 = -1;
              if (v50 == -1)
              {
LABEL_84:
                v59 = -1;
                if (v43 != -1)
                  ((void (*)(uint64_t **, JSC::VM **))off_1E32CB668[v43])(&v60, &v42);
                v36 = v47;
                if (v47)
                  *(_DWORD *)v47 += 2;
                *(_BYTE *)(a3 + 16) = v48;
                *(_QWORD *)a3 = off_1E32CB620;
                *(_QWORD *)(a3 + 8) = v36;
                *(_BYTE *)(a3 + 24) = 0;
                *(_DWORD *)(a3 + 32) = -1;
                v37 = v50;
                if (v50 != -1)
                {
                  ((void (*)(JSC::ArrayBufferView **, uint64_t, uint64_t *))off_1E32CB678[v50])(&v58, a3 + 24, &v49);
                  *(_DWORD *)(a3 + 32) = v37;
                }
                v38 = v51;
                *(_BYTE *)(a3 + 48) = 0;
                *(_QWORD *)(a3 + 40) = v38;
                *(_DWORD *)(a3 + 56) = -1;
                v39 = v53;
                if (v53 != -1)
                {
                  ((void (*)(JSC::ArrayBufferView **))off_1E32CB648[v53])(&v58);
                  *(_DWORD *)(a3 + 56) = v39;
                }
                *(_BYTE *)(a3 + 64) = v54;
                *(_QWORD *)(a3 + 72) = v55;
                v40 = v56;
                v55 = 0;
                v56 = 0;
                *(_QWORD *)(a3 + 80) = v40;
                *(_DWORD *)(a3 + 88) = 0;
                v33 = v64;
                goto LABEL_93;
              }
              ((void (*)(uint64_t **, uint64_t *))off_1E32CB668[v50])(&v60, &v49);
              v50 = -1;
LABEL_82:
              if (v59 != -1)
                ((void (*)(uint64_t **, JSC::ArrayBufferView **))off_1E32CB668[v59])(&v60, &v58);
              goto LABEL_84;
            }
LABEL_81:
            v35 = off_1E32CB678[v34];
            ((void (*)(uint64_t **, JSC::VM **, JSC::ArrayBufferView **))v35)(&v60, &v42, &v62);
            v43 = v34;
            LOBYTE(v58) = 0;
            v59 = -1;
            ((void (*)(uint64_t **, JSC::ArrayBufferView **, JSC::VM **))v35)(&v60, &v58, &v42);
            v59 = v34;
            v60 = &v49;
            ((void (*)(uint64_t **, uint64_t *, JSC::ArrayBufferView **))off_1E32CB688[v34])(&v60, &v49, &v58);
            goto LABEL_82;
          }
        }
        else
        {
          JSC::JSArrayBufferView::toWrapped(v29, &v58);
          if (v58)
          {
            v34 = 0;
            v62 = v58;
            v63 = 0;
            v64 = 0;
            LOBYTE(v42) = 0;
            v43 = -1;
            goto LABEL_81;
          }
          JSC::throwTypeError();
          v33 = 1;
          v64 = 1;
        }
        *(_DWORD *)(a3 + 88) = 1;
LABEL_93:
        if (v33 != -1)
          ((void (*)(JSC::ArrayBufferView **, JSC::ArrayBufferView **))off_1E32CB698[v33])(&v58, &v62);
        goto LABEL_53;
      }
      v10 = *(_QWORD *)(v8 + 8);
      if ((v10 & 1) != 0)
      {
        v10 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, (JSC::JSGlobalObject *)a2);
        if (!v10)
          goto LABEL_18;
      }
      else if (!v10)
      {
LABEL_18:
        v61 = v10;
        goto LABEL_19;
      }
      *(_DWORD *)v10 += 2;
      goto LABEL_18;
    }
  }
  WebCore::throwRequiredMemberTypeError((int)a2, (int)&v57, "name", 5, "Pbkdf2Params", 13, "DOMString", 10);
LABEL_12:
  *(_DWORD *)(a3 + 88) = 1;
LABEL_58:
  v30 = v55;
  if (v55)
  {
    v55 = 0;
    LODWORD(v56) = 0;
    WTF::fastFree(v30, v7);
  }
  if (v53 != -1)
    ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32CB638[v53])(&v65, &v52);
  v53 = -1;
  if (v50 != -1)
    ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32CB668[v50])(&v65, &v49);
  v50 = -1;
  result = v47;
  v46 = off_1E3226840;
  v47 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v7);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void WebCore::CryptoAlgorithmPbkdf2Params::~CryptoAlgorithmPbkdf2Params(WebCore::CryptoAlgorithmPbkdf2Params *this, void *a2)
{
  WTF *v3;
  uint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  char v7;
  char v8;

  v3 = (WTF *)*((_QWORD *)this + 9);
  if (v3)
  {
    *((_QWORD *)this + 9) = 0;
    *((_DWORD *)this + 20) = 0;
    WTF::fastFree(v3, a2);
  }
  v4 = *((unsigned int *)this + 14);
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, char *))off_1E32CB638[v4])(&v7, (char *)this + 48);
  *((_DWORD *)this + 14) = -1;
  v5 = *((unsigned int *)this + 8);
  if ((_DWORD)v5 != -1)
    ((void (*)(char *, char *))off_1E32CB668[v5])(&v8, (char *)this + 24);
  *((_DWORD *)this + 8) = -1;
  v6 = (WTF::StringImpl *)*((_QWORD *)this + 1);
  *(_QWORD *)this = off_1E3226840;
  *((_QWORD *)this + 1) = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v6 -= 2;
  }
}

{
  WTF *v3;
  uint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  char v7;
  char v8;

  v3 = (WTF *)*((_QWORD *)this + 9);
  if (v3)
  {
    *((_QWORD *)this + 9) = 0;
    *((_DWORD *)this + 20) = 0;
    WTF::fastFree(v3, a2);
  }
  v4 = *((unsigned int *)this + 14);
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, char *))off_1E32CB638[v4])(&v7, (char *)this + 48);
  *((_DWORD *)this + 14) = -1;
  v5 = *((unsigned int *)this + 8);
  if ((_DWORD)v5 != -1)
    ((void (*)(char *, char *))off_1E32CB668[v5])(&v8, (char *)this + 24);
  *((_DWORD *)this + 8) = -1;
  v6 = (WTF::StringImpl *)*((_QWORD *)this + 1);
  *(_QWORD *)this = off_1E3226840;
  *((_QWORD *)this + 1) = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v6 -= 2;
  }
  WTF::fastFree(this, a2);
}

uint64_t WebCore::JSPerformance::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24) - 24);
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformance>,(WebCore::DOMConstructorID)727>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5816);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformance>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPerformance::s_info + ~((_QWORD)&WebCore::JSPerformance::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformance::s_info + ~((_QWORD)&WebCore::JSPerformance::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPerformance::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPerformance::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPerformancePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSPerformancePrototype::create((WebCore::JSPerformancePrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSPerformance::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSPerformance::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5816) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPerformanceConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformancePrototype::s_info != (char **)(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformance>,(WebCore::DOMConstructorID)727>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsPerformance_timeOrigin(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  uint64_t v4;

  WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)(*(_QWORD *)(a2 + 24) + 144));
  v3 = *(double *)&WebCore::timePrecision * floor(v2 / *(double *)&WebCore::timePrecision) * 1000.0;
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

uint64_t WebCore::jsPerformance_onresourcetimingbufferfull(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 - 2);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1704), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 - 2) == 1)
  {
    WebCore::Performance::~Performance((WebCore *)((char *)v5 - 24), v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 - 2);
  }
  return v10;
}

BOOL WebCore::setJSPerformance_onresourcetimingbufferfull(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  WebCore *v5;
  WebCore *v6;
  WebCore::EventTarget *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  bmalloc::api *v13;
  void *v14;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = (WebCore *)WebCore::IDLOperation<WebCore::JSPerformance>::cast(a2);
  if (v5)
  {
    v6 = v5;
    v7 = (WebCore::EventTarget *)*((_QWORD *)v5 + 3);
    ++*((_DWORD *)v7 - 2);
    v8 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
    if (!v8 || (v9 = *(_QWORD *)(v8 + 96)) == 0)
      v9 = WebCore::threadGlobalDataSlow(v5);
    v10 = *(_QWORD *)(v9 + 40);
    if (!v10)
    {
      WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v9);
      v10 = *(_QWORD *)(v9 + 40);
    }
    WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v7, (WTF::StringImpl **)(v10 + 1704), a3, v6);
    if (*((_DWORD *)v7 - 2) == 1)
    {
      WebCore::Performance::~Performance((WebCore::EventTarget *)((char *)v7 - 24), v11);
      bmalloc::api::isoDeallocate(v13, v14);
      if (a3)
      {
LABEL_9:
        if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v4 + 760) >= *((unsigned __int8 *)v6 + 7))
          JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v4 + 192), (const JSCell *)v6);
      }
    }
    else
    {
      --*((_DWORD *)v7 - 2);
      if (a3)
        goto LABEL_9;
    }
    return 1;
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::JSPerformanceOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  WTF::ConcurrentPtrHashSet *v8;
  _DWORD *v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  void *v16;
  uint64_t result;
  uint64_t v18;
  void *v19;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) - 16);
  if (!v5)
    return 0;
  v6 = *(_QWORD *)(v5 + 8);
  if (!v6)
    return 0;
  v7 = (void *)(v6 - 96);
  if (a5)
  {
    *a5 = "Reachable from ScriptExecutionContext";
    a5[1] = 38;
  }
  v8 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v9 = (_DWORD *)*((_QWORD *)v8 + 6);
  if ((_DWORD *)((char *)v8 + 56) != v9)
  {
    v10 = v9[1];
    v11 = ((unint64_t)v7 + ~((_QWORD)v7 << 32)) ^ (((unint64_t)v7 + ~((_QWORD)v7 << 32)) >> 22);
    v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
    v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
    v14 = v10 & ((v13 >> 31) ^ v13);
    v15 = v14;
    while (1)
    {
      v16 = *(void **)&v9[2 * v15 + 4];
      if (!v16)
        return 0;
      if (v7 == v16)
        goto LABEL_14;
      v15 = (v15 + 1) & v10;
      if (v15 == v14)
      {
        __break(0xC471u);
        JUMPOUT(0x194DD4B1CLL);
      }
    }
  }
  v18 = a4;
  v19 = v7;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v8, v7);
  a4 = v18;
  v7 = v19;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v7);
    return 1;
  }
  return result;
}

void WebCore::JSPerformanceOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  bmalloc::api *v6;
  void *v7;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = *(_DWORD *)(v3 - 8);
  *(_DWORD *)(v3 - 8) = v4 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    JSC::weakRemove<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,WebCore::JSBlob *>((uint64_t *)(a3 + 32), v3 - 24);
    v4 = *(_DWORD *)(v3 - 8) - 1;
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 8);
    if (v5)
    {
      *(_QWORD *)(v5 + 8) = 3;
      *(_QWORD *)(v3 + 8) = 0;
    }
  }
  if (v4)
  {
    *(_DWORD *)(v3 - 8) = v4;
  }
  else
  {
    WebCore::Performance::~Performance((WebCore::Performance *)(v3 - 24), a2);
    bmalloc::api::isoDeallocate(v6, v7);
  }
}

uint64_t WebCore::JSPerformanceEntry::prototype(WebCore::JSPerformanceEntry *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t CachedDOMStructure;
  unint64_t Structure;
  JSC::Structure *v7;
  JSC::JSCell *v8;
  uint64_t v9;

  CachedDOMStructure = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSPerformanceEntry::s_info);
  if (!CachedDOMStructure)
  {
    Structure = WebCore::JSPerformanceEntryPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v8 = (JSC::JSCell *)WebCore::JSPerformanceEntryPrototype::create(this, (JSC::VM *)a2, Structure, v7);
    v9 = WebCore::JSPerformanceEntry::createStructure((uint64_t *)this, (uint64_t)a2, v8);
    CachedDOMStructure = WebCore::cacheDOMStructure((JSCell *)a2, v9, (uint64_t)&WebCore::JSPerformanceEntry::s_info);
  }
  return *(_QWORD *)(CachedDOMStructure + 48);
}

uint64_t WebCore::JSPerformanceEntry::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSPerformanceEntry::createPrototype(WebCore::JSPerformanceEntry *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t Structure;
  JSC::Structure *v6;

  Structure = WebCore::JSPerformanceEntryPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSPerformanceEntryPrototype::create(this, (JSC::VM *)a2, Structure, v6);
}

uint64_t WebCore::JSPerformanceEntryPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPerformanceEntryPrototype::create(WebCore::JSPerformanceEntryPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(this, (uint64_t)&WebCore::JSPerformanceEntry::s_info, &WebCore::JSPerformanceEntryPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceEntry>,(WebCore::DOMConstructorID)728>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5824);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v33) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v33, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceEntry>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v32);
    v9[2848] = v2 + (int)v32;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v33);
  v13 = v33;
  v33 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v33);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSPerformanceEntry::s_info + ~((_QWORD)&WebCore::JSPerformanceEntry::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformanceEntry::s_info + ~((_QWORD)&WebCore::JSPerformanceEntry::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSPerformanceEntry::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSPerformanceEntry::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSPerformanceEntryPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSPerformanceEntryPrototype::create((WebCore::JSPerformanceEntryPrototype *)a1, (JSC::VM *)a2, Structure, v26);
  v28 = WebCore::JSPerformanceEntry::createStructure((uint64_t *)a1, a2, v27);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSPerformanceEntry::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v24 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5824) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPerformanceEntryConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformanceEntryPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceEntry>,(WebCore::DOMConstructorID)728>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPerformanceEntry_name(uint64_t a1, uint64_t a2)
{
  return WebCore::toJS<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>,WTF::AtomString>(*(_QWORD *)(a1 + 56), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16));
}

uint64_t WebCore::jsPerformanceEntry_entryType(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;

  v3 = (WTF::StringImpl *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 40))(*(_QWORD *)(a2 + 24));
  return WebCore::JSConverterOverloader<WebCore::IDLDOMString,true,false>::convert<WTF::ASCIILiteral>(a1, v3, v4);
}

unint64_t WebCore::jsPerformanceEntry_startTime(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = (*(double (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 16))(*(_QWORD *)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceEntry_duration(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = (*(double (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

uint64_t WebCore::JSPerformanceEntry::subspaceForImpl(WebCore::JSPerformanceEntry *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5904);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 5904))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 5904);
    *(_QWORD *)(v8 + 5904) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 5904);
  *(_QWORD *)(v3 + 5904) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSPerformanceEntryOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPerformanceMark>::construct(JSC *this, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  WebCore *v7;
  uint64_t v8;
  JSC::VM *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF *v13;
  WTF::StringImpl *v14;
  WebCore::JSDOMGlobalObject *v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  WTF::StringImpl *v18;
  JSCell *v19;
  WTF::StringImpl *v20;
  JSC::JSCell *v21;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v23;
  JSC::JSGlobalObject *v24;
  WebCore::JSPerformanceMark *v25;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v27;
  JSC::Structure *v28;
  unint64_t SubclassStructure;
  uint64_t v30;
  JSValue v32;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  JSValue v37;
  uint64_t v38;
  WTF::StringImpl *v39[2];
  uint64_t v40;
  char v41;
  WTF::StringImpl *v42;
  int v43[2];
  WTF::StringImpl *v44;
  int v45;
  __int128 v46;
  uint64_t v47;
  int v48;
  WTF::StringImpl *v49;
  int v50;
  JSC::VM *v51;

  v3 = *((_QWORD *)this + 7);
  v51 = (JSC::VM *)v3;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v3, this, v32);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(this, &v51, (uint64_t)"PerformanceMark", 16);
  v7 = (WebCore *)v6;
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)&v46 = v8;
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v8 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v8 + 5) == 2)
  {
    v10 = *(WTF::StringImpl **)(v8 + 8);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, this);
      if (!v10)
        goto LABEL_8;
    }
    else if (!v10)
    {
LABEL_8:
      v39[0] = v10;
      goto LABEL_9;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_8;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v46, this);
LABEL_9:
  if (*((_DWORD *)v9 + 20))
  {
    v11 = v39[0];
    if (JSC::VM::hasExceptionsAfterHandlingTraps(v9))
    {
      v50 = 1;
      v39[0] = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v34);
        else
          *(_DWORD *)v11 -= 2;
      }
      v19 = 0;
      v30 = 1;
      goto LABEL_33;
    }
  }
  else
  {
    v11 = v39[0];
  }
  v49 = v11;
  v50 = 0;
  if ((unint64_t)(*(int *)(a2 + 32) - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v12 = 10;
  else
    v12 = *(_QWORD *)(a2 + 56);
  WebCore::convertDictionary<WebCore::PerformanceMarkOptions>((uint64_t)&v46, this, (JSC::JSCell *)v12);
  if (v48)
  {
    v19 = 0;
LABEL_32:
    v30 = 0;
LABEL_33:
    ((void (*)(__int128 *, WTF::StringImpl **))off_1E32C9390[v30])(&v46, &v49);
    return v19;
  }
  v13 = *(WTF **)(v5 + 40);
  v49 = 0;
  v42 = v11;
  *(_OWORD *)v39 = v46;
  v40 = v47;
  v41 = 1;
  WebCore::PerformanceMark::create(v13, v7, &v42, (uint64_t)v39, (uint64_t)v43);
  v16 = v42;
  v42 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
  {
LABEL_64:
    v19 = 0;
LABEL_30:
    if (v45 != -1)
      ((void (*)(WTF::StringImpl **, int *))off_1E32CBAA8[v45])(v39, v43);
    goto LABEL_32;
  }
  if (!v45)
  {
    v17 = *(JSC::VM **)(v5 + 40);
    v18 = *(WTF::StringImpl **)v43;
    *(_QWORD *)v43 = 0;
    v39[0] = v18;
    if (*(void (***)(WebCore::PerformanceMark *__hidden))v18 != off_1E3401960)
    {
      __break(0xC471u);
      JUMPOUT(0x194DD5C08);
    }
    v19 = (JSCell *)WebCore::createWrapper<WebCore::PerformanceMark,WebCore::PerformanceMark>(v17, (uint64_t *)v39, v15);
    v20 = v39[0];
    v39[0] = 0;
    if (v20)
    {
      if (*((_DWORD *)v20 + 2) == 1)
        (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v20 + 8))(v20);
      else
        --*((_DWORD *)v20 + 2);
    }
    goto LABEL_22;
  }
  if (v45 == 1)
  {
    v35 = (WTF::StringImpl *)LOBYTE(v43[0]);
    LOBYTE(v39[0]) = v43[0];
    v36 = v44;
    v44 = 0;
    v39[1] = v36;
    if (!*(_QWORD *)(v3 + 16))
    {
      v37.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v43[0]), (JSC::JSGlobalObject *)&v39[1]);
      JSC::VM::throwException((JSC::VM *)v3, this, v37);
      v36 = v39[1];
    }
    v39[1] = 0;
    if (v36)
    {
      if (*(_DWORD *)v36 == 2)
        WTF::StringImpl::destroy(v36, v35);
      else
        *(_DWORD *)v36 -= 2;
    }
    v19 = 0;
LABEL_22:
    if (!*(_DWORD *)(v3 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) == 0)
    {
      v21 = *(JSC::JSCell **)(a2 + 40);
      if (((unint64_t)v21 & 0xFFFE000000000002) == 0)
      {
        Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v21);
        if (Object)
        {
          v24 = Object;
          if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
          {
            v25 = (WebCore::JSPerformanceMark *)*((_QWORD *)this + 7);
            FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v23);
            if (!*((_DWORD *)v25 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) == 0)
            {
              v27 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSPerformanceMark>(v25, FunctionRealm);
              SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v24, v27, v28);
              if (!*((_DWORD *)v25 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) == 0)
                JSC::JSObject::setStructure(v19, v25, SubclassStructure);
            }
          }
        }
      }
      if (!*(_DWORD *)(v3 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) == 0)
        goto LABEL_30;
    }
    goto LABEL_64;
  }
  v38 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSPerformanceMark::analyzeHeap(v38);
}

uint64_t WebCore::JSPerformanceMark::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPerformanceMark::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;

  result = JSC::JSObject::visitChildren();
  v5 = *(_QWORD *)(a1 + 32);
  if ((v5 & 0xFFFE000000000002) == 0 && v5 != 0)
  {
    if ((v5 & 8) != 0)
    {
      result = 0;
      if ((*(_BYTE *)(v5 - 79) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    else
    {
      result = JSC::MarkedBlock::aboutToMark((JSC::MarkedBlock *)(v5 & 0xFFFFFFFFFFFFC000), *(_DWORD *)(a2 + 132));
      if (((*(_QWORD *)((v5 & 0xFFFFFFFFFFFFC000) + result + 8 * ((v5 >> 10) & 0xF) + 0x28) >> (v5 >> 4)) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    if (*(_QWORD *)(a2 + 168))
      return JSC::SlotVisitor::appendSlow();
  }
  return result;
}

uint64_t WebCore::JSPerformanceMark::visitChildren(WebCore::JSPerformanceMark *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    result = JSC::JSObject::visitChildren();
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

unint64_t WebCore::JSPerformanceMark::createPrototype(WebCore::JSPerformanceMark *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t v12;
  unint64_t Structure;
  JSC::Structure *v14;
  JSC::JSCell *v15;
  uint64_t v16;
  unint64_t v17;
  JSC::Structure *v18;
  int v20;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_4;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSPerformanceEntry::s_info + ~((_QWORD)&WebCore::JSPerformanceEntry::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformanceEntry::s_info + ~((_QWORD)&WebCore::JSPerformanceEntry::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSPerformanceEntry::s_info)
  {
    v20 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v20) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v20;
      if (v11 == &WebCore::JSPerformanceEntry::s_info)
        goto LABEL_3;
    }
    goto LABEL_4;
  }
LABEL_3:
  v12 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v12)
  {
LABEL_4:
    Structure = WebCore::JSPerformanceEntryPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v15 = (JSC::JSCell *)WebCore::JSPerformanceEntryPrototype::create(this, a2, Structure, v14);
    v16 = WebCore::JSPerformanceEntry::createStructure((uint64_t *)this, (uint64_t)a2, v15);
    v12 = WebCore::cacheDOMStructure((JSCell *)a2, v16, (uint64_t)&WebCore::JSPerformanceEntry::s_info);
  }
  v17 = WebCore::JSPerformanceMarkPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v12 + 48));
  *(_DWORD *)(v17 + 16) |= 0x80000u;
  return WebCore::JSPerformanceMarkPrototype::create(this, a2, v17, v18);
}

uint64_t WebCore::JSPerformanceMarkPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPerformanceMarkPrototype::create(WebCore::JSPerformanceMarkPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSPerformanceMark::s_info, (uint64_t)&WebCore::JSPerformanceMarkPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPerformanceMark>,(WebCore::DOMConstructorID)729>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5832);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceEntry>,(WebCore::DOMConstructorID)728>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSPerformanceMark>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPerformanceMark::s_info + ~((_QWORD)&WebCore::JSPerformanceMark::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformanceMark::s_info + ~((_QWORD)&WebCore::JSPerformanceMark::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPerformanceMark::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPerformanceMark::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSPerformanceMark::createPrototype((WebCore::JSPerformanceMark *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPerformanceMark::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSPerformanceMark::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5832) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPerformanceMarkConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformanceMarkPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPerformanceMark>,(WebCore::DOMConstructorID)729>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsPerformanceMark_detail(WTF::StringImpl *a1, uint64_t a2)
{
  unint64_t v2;
  JSC::VM *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 32);
  if (!v2)
  {
    v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v2 = (unint64_t)WebCore::SerializedScriptValue::deserialize(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 40), a1, a1, 1, 0);
    if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v6 = *((_QWORD *)a1 + 7);
      *(_QWORD *)(a2 + 32) = v2;
      if ((v2 & 0xFFFE000000000002) == 0 && v2 && *(_DWORD *)(v6 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v6 + 192), (const JSCell *)a2);
    }
  }
  return v2;
}

uint64_t WebCore::JSPerformanceMark::subspaceForImpl(WebCore::JSPerformanceMark *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  WTF *v12;
  void *v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5912);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 5912))
  {
    v15 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v15, &v21, (char *)this + 192, (char *)this + 1872, 40, 8, &v20);
    v17 = v20;
    v20 = 0;
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v21;
    v21 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 1)
        WTF::fastFree(v18, v16);
      else
        --*(_DWORD *)v18;
    }
    v19 = *(_QWORD *)(v9 + 5912);
    *(_QWORD *)(v9 + 5912) = v15;
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v11 = *(_QWORD *)(v3 + 5912);
  *(_QWORD *)(v3 + 5912) = v4;
  if (v11)
  {
    v12 = (WTF *)MEMORY[0x19AEA3528](v11, v10);
    WTF::fastFree(v12, v13);
  }
  v14 = __ldxr((unsigned __int8 *)v7);
  if (v14 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::PerformanceMark,WebCore::PerformanceMark>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  unint64_t v13;
  WebCore::JSPerformanceMark *v14;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *Allocator;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSPerformanceMark::s_info + ~((_QWORD)&WebCore::JSPerformanceMark::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformanceMark::s_info + ~((_QWORD)&WebCore::JSPerformanceMark::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSPerformanceMark::s_info)
    {
LABEL_3:
      v13 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v13)
        goto LABEL_5;
    }
    else
    {
      v23 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v23) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v23;
        if (v12 == &WebCore::JSPerformanceMark::s_info)
          goto LABEL_3;
      }
    }
  }
  v14 = (WebCore::JSPerformanceMark *)*((_QWORD *)a1 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSPerformanceMark::createPrototype(v14, a1, a3);
  Structure = WebCore::JSPerformanceMark::createStructure((uint64_t *)v14, (uint64_t)a1, Prototype);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSPerformanceMark::s_info);
LABEL_5:
  v17 = WebCore::JSPerformanceMark::create(v13, a1, a2);
  v18 = v17;
  v19 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::PerformanceEntry *)::owner = (uint64_t)&off_1E32CD620;
  }
  v20 = (uint64_t *)(v19 + 32);
  v28 = v5;
  if (v17)
  {
    v24 = v19;
    if ((v17 & 8) != 0)
      v25 = (v17 - 112) | 1;
    else
      v25 = v17 & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = v18;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::PerformanceEntry *)::owner;
    Allocator[2] = v24;
  }
  else
  {
    Allocator = 0;
  }
  v27 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v20, &v28, (uint64_t *)&v27);
  if (v27)
    v27[1] = 3;
  return v18;
}

uint64_t WebCore::convertDictionary<WebCore::PerformanceMarkOptions>(uint64_t result, JSC::JSGlobalObject *a2, JSC::JSCell *this)
{
  JSC::VM *v3;
  char v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  uint64_t Object;
  JSC::Structure *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  int v16;
  _BYTE v17[7];
  JSC::VM *v18;

  v3 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v18 = v3;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v14 = result;
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      result = JSC::throwTypeError();
    }
    else
    {
      v9 = (JSC::Structure *)Object;
      WTF::AtomStringImpl::addLiteral();
      v13 = JSC::JSObject::get(v9, a2, (unint64_t)v15);
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v10);
        else
          *(_DWORD *)v15 -= 2;
      }
      if (*((_DWORD *)v3 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
        if ((_DWORD)result)
          goto LABEL_22;
      }
      WTF::AtomStringImpl::addLiteral();
      v12 = JSC::JSObject::get(v9, a2, (unint64_t)v15);
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v11);
        else
          *(_DWORD *)v15 -= 2;
      }
      if (*((_DWORD *)v3 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
        if ((_DWORD)result)
          goto LABEL_22;
      }
      if (v12 == 10)
      {
        v4 = 0;
        v5 = 0;
        goto LABEL_18;
      }
      result = (uint64_t)WebCore::Converter<WebCore::IDLDouble>::convert(a2, v12, (uint64_t)&v15);
      if (!v16)
      {
        v5 = v15;
        v4 = 1;
LABEL_18:
        v6 = v13;
        result = v14;
        goto LABEL_3;
      }
    }
LABEL_22:
    *(_DWORD *)(v14 + 24) = 1;
    return result;
  }
  v4 = 0;
  v5 = 0;
  v6 = 10;
LABEL_3:
  *(_QWORD *)result = v6;
  *(_QWORD *)(result + 8) = v5;
  *(_BYTE *)(result + 16) = v4;
  *(_DWORD *)(result + 17) = *(_DWORD *)v17;
  *(_QWORD *)(result + 20) = *(unsigned int *)&v17[3];
  return result;
}

uint64_t WebCore::JSPerformanceMeasure::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPerformanceMeasure::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  result = JSC::JSObject::visitChildren();
  v5 = *(_QWORD *)(a1 + 32);
  if ((v5 & 0xFFFE000000000002) == 0 && v5 != 0)
  {
    if ((v5 & 8) != 0)
    {
      if ((*(_BYTE *)(v5 - 79) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    else
    {
      v7 = v5 & 0xFFFFFFFFFFFFC000;
      if (*(_DWORD *)(v5 & 0xFFFFFFFFFFFFC000 | 0x20) != *(_DWORD *)(a2 + 132))
      {
        v8 = *(_QWORD *)(a1 + 32);
        v9 = v5 & 0xFFFFFFFFFFFFC000;
        result = JSC::MarkedBlock::aboutToMarkSlow((JSC::MarkedBlock *)(v5 & 0xFFFFFFFFFFFFC000));
        v5 = v8;
        v7 = v9;
      }
      if (((*(_QWORD *)(v7 + 8 * ((v5 >> 10) & 0xF) + 40) >> (v5 >> 4)) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    if (*(_QWORD *)(a2 + 168))
      return JSC::SlotVisitor::appendSlow();
  }
  return result;
}

uint64_t WebCore::JSPerformanceMeasure::visitChildren(WebCore::JSPerformanceMeasure *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    result = JSC::JSObject::visitChildren();
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

unint64_t WebCore::JSPerformanceMeasure::createPrototype(WebCore::JSPerformanceMeasure *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t v12;
  unint64_t Structure;
  JSC::Structure *v14;
  JSC::JSCell *v15;
  uint64_t v16;
  unint64_t v17;
  JSC::Structure *v18;
  int v20;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_4;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSPerformanceEntry::s_info + ~((_QWORD)&WebCore::JSPerformanceEntry::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformanceEntry::s_info + ~((_QWORD)&WebCore::JSPerformanceEntry::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSPerformanceEntry::s_info)
  {
    v20 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v20) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v20;
      if (v11 == &WebCore::JSPerformanceEntry::s_info)
        goto LABEL_3;
    }
    goto LABEL_4;
  }
LABEL_3:
  v12 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v12)
  {
LABEL_4:
    Structure = WebCore::JSPerformanceEntryPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v15 = (JSC::JSCell *)WebCore::JSPerformanceEntryPrototype::create(this, a2, Structure, v14);
    v16 = WebCore::JSPerformanceEntry::createStructure((uint64_t *)this, (uint64_t)a2, v15);
    v12 = WebCore::cacheDOMStructure((JSCell *)a2, v16, (uint64_t)&WebCore::JSPerformanceEntry::s_info);
  }
  v17 = WebCore::JSPerformanceMeasurePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v12 + 48));
  *(_DWORD *)(v17 + 16) |= 0x80000u;
  return WebCore::JSPerformanceMeasurePrototype::create(this, a2, v17, v18);
}

uint64_t WebCore::JSPerformanceMeasurePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPerformanceMeasurePrototype::create(WebCore::JSPerformanceMeasurePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSPerformanceMeasure::s_info, (uint64_t)&WebCore::JSPerformanceMeasurePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceMeasure>,(WebCore::DOMConstructorID)730>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  unint64_t Prototype;
  unint64_t v28;
  JSC::JSObject *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5840);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceEntry>,(WebCore::DOMConstructorID)728>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v33);
    v5[2] = SlowCase + (int)v33;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceMeasure>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v34 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v34);
    v10[2848] = v2 + (int)v34;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (!v18)
    goto LABEL_21;
  v19 = *(_DWORD *)(v18 - 8);
  v20 = ((unint64_t)&WebCore::JSPerformanceMeasure::s_info
       + ~((_QWORD)&WebCore::JSPerformanceMeasure::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformanceMeasure::s_info
                                                                    + ~((_QWORD)&WebCore::JSPerformanceMeasure::s_info << 32)) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(char ***)(v18 + 16 * v23);
  if (v24 != &WebCore::JSPerformanceMeasure::s_info)
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(char ***)(v18 + 16 * v23);
      ++v25;
      if (v24 == &WebCore::JSPerformanceMeasure::s_info)
        goto LABEL_20;
    }
LABEL_21:
    Prototype = WebCore::JSPerformanceMeasure::createPrototype((WebCore::JSPerformanceMeasure *)a1, (JSC::VM *)a2, v16);
    v28 = Prototype;
    LODWORD(v36) = 23;
    if ((Prototype & 0xFFFE000000000002) == 0)
    {
      v29 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)Prototype);
      if (v29)
        JSC::JSObject::didBecomePrototype(v29, (JSC::VM *)a1);
    }
    v30 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v30 = v5[2];
      if ((v30 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v30 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_26;
      }
      v35 = *(_QWORD *)(v30 + 8) ^ v5[3];
      v5[1] = v30 + HIDWORD(v35);
      v5[2] = v30 + (int)v35;
    }
    *v5 = v30 + 128;
LABEL_26:
    *(_DWORD *)v30 = 0;
    MEMORY[0x19AEA4278](v30, a1, a2, v28, &v36, &WebCore::JSPerformanceMeasure::s_info, 0, 0);
    if (*(_BYTE *)(a1 + 755))
      __dmb(0xAu);
    v26 = WebCore::cacheDOMStructure((JSCell *)a2, v30, (uint64_t)&WebCore::JSPerformanceMeasure::s_info);
    goto LABEL_29;
  }
LABEL_20:
  v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
  if (!v26)
    goto LABEL_21;
LABEL_29:
  v31 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v31, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5840) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPerformanceMeasureConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformanceMeasurePrototype::s_info != (char **)(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                    + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceMeasure>,(WebCore::DOMConstructorID)730>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsPerformanceMeasure_detail(WTF::StringImpl *a1, uint64_t a2)
{
  unint64_t v2;
  JSC::VM *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 32);
  if (!v2)
  {
    v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v2 = (unint64_t)WebCore::SerializedScriptValue::deserialize(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 40), a1, a1, 1, 0);
    if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v6 = *((_QWORD *)a1 + 7);
      *(_QWORD *)(a2 + 32) = v2;
      if ((v2 & 0xFFFE000000000002) == 0 && v2 && *(_DWORD *)(v6 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v6 + 192), (const JSCell *)a2);
    }
  }
  return v2;
}

uint64_t WebCore::JSPerformanceMeasure::subspaceForImpl(WebCore::JSPerformanceMeasure *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  WTF *v12;
  void *v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5920);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 5920))
  {
    v15 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v15, &v21, (char *)this + 192, (char *)this + 1872, 40, 8, &v20);
    v17 = v20;
    v20 = 0;
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v21;
    v21 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 1)
        WTF::fastFree(v18, v16);
      else
        --*(_DWORD *)v18;
    }
    v19 = *(_QWORD *)(v9 + 5920);
    *(_QWORD *)(v9 + 5920) = v15;
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v11 = *(_QWORD *)(v3 + 5920);
  *(_QWORD *)(v3 + 5920) = v4;
  if (v11)
  {
    v12 = (WTF *)MEMORY[0x19AEA3528](v11, v10);
    WTF::fastFree(v12, v13);
  }
  v14 = __ldxr((unsigned __int8 *)v7);
  if (v14 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::convertDictionary<WebCore::PerformanceMeasureOptions>(uint64_t result, JSC::JSGlobalObject *a2, JSC::JSCell *this)
{
  uint64_t v4;
  JSC::VM *v5;
  unint64_t v6;
  JSC::Structure *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  JSC::VM *v12;
  double v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  int v17;
  JSC::VM *v18;
  uint64_t v19;
  uint64_t (*v20)();
  int v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  int v25;
  JSC::VM *v26;
  uint64_t v27;
  uint64_t (*v28)();
  int v29;
  int v30;
  __int128 v31;
  int v32;
  int v33;
  JSC::VM *v34;
  double v35;
  uint64_t v36;
  char v37[8];
  int v38;
  char v39;
  __int128 v40;
  char v41[8];
  int v42;
  unsigned __int8 v43;
  JSC::VM *v44;
  JSC::VM *v45;
  int v46;
  char *v47;
  WTF::StringImpl *v48;
  JSC::VM *v49;
  unsigned int v50;
  int v51;
  uint64_t v52;

  v4 = result;
  v52 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v44 = v5;
  v6 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v7 = 0;
  }
  else if (((unint64_t)this & 0xFFFE000000000002) != 0
         || (result = JSC::JSCell::getObject(this), (v7 = (JSC::Structure *)result) == 0))
  {
    result = JSC::throwTypeError();
    *(_DWORD *)(v4 + 72) = 1;
    return result;
  }
  v37[0] = 0;
  v39 = 0;
  LOBYTE(v40) = 0;
  BYTE8(v40) = 0;
  v41[0] = 0;
  v43 = 0;
  if (v6 == 2)
  {
    v36 = 10;
LABEL_86:
    *(_QWORD *)v4 = v36;
    *(_BYTE *)(v4 + 8) = 0;
    *(_BYTE *)(v4 + 24) = 0;
    if (v39)
    {
      *(_DWORD *)(v4 + 16) = -1;
      v30 = v38;
      if (v38 != -1)
      {
        result = ((uint64_t (*)(WTF::StringImpl **, uint64_t, char *))off_1E32CB968[v38])(&v48, v4 + 8, v37);
        *(_DWORD *)(v4 + 16) = v30;
      }
      *(_BYTE *)(v4 + 24) = 1;
    }
    v31 = v40;
    *(_BYTE *)(v4 + 48) = 0;
    *(_OWORD *)(v4 + 32) = v31;
    *(_BYTE *)(v4 + 64) = 0;
    v32 = v43;
    if (v43)
    {
      *(_DWORD *)(v4 + 56) = -1;
      v33 = v42;
      if (v42 != -1)
      {
        result = ((uint64_t (*)(WTF::StringImpl **))off_1E32CB968[v42])(&v48);
        *(_DWORD *)(v4 + 56) = v33;
      }
      v32 = 0;
      *(_BYTE *)(v4 + 64) = 1;
    }
    goto LABEL_94;
  }
  WTF::AtomStringImpl::addLiteral();
  v9 = JSC::JSObject::get(v7, a2, (unint64_t)v48);
  if (v48)
  {
    if (*(_DWORD *)v48 == 2)
      WTF::StringImpl::destroy(v48, v8);
    else
      *(_DWORD *)v48 -= 2;
  }
  if (!*((_DWORD *)v5 + 20) || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v5), (result & 1) == 0))
  {
    v36 = v9;
    WTF::AtomStringImpl::addLiteral();
    v11 = (WTF::StringImpl *)JSC::JSObject::get(v7, a2, (unint64_t)v48);
    if (v48)
    {
      if (*(_DWORD *)v48 == 2)
        WTF::StringImpl::destroy(v48, v10);
      else
        *(_DWORD *)v48 -= 2;
    }
    if (!*((_DWORD *)v5 + 20) || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v5), (result & 1) == 0))
    {
      if (v11 != (WTF::StringImpl *)10)
      {
        v48 = v11;
        v12 = (JSC::VM *)*((_QWORD *)a2 + 7);
        v45 = v12;
        if ((unint64_t)v11 >= 0xFFFE000000000000)
        {
          v13 = (double)(int)v11;
        }
        else if ((unint64_t)v11 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v34 = v12;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v48, a2);
          v12 = v34;
        }
        else
        {
          *(_QWORD *)&v13 = (char *)v11 - 0x2000000000000;
        }
        if (*((_DWORD *)v12 + 20))
        {
          v35 = v13;
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
          v13 = v35;
          if ((result & 1) != 0)
            goto LABEL_116;
        }
        if ((*(_QWORD *)&v13 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
        {
          result = JSC::throwTypeError();
          goto LABEL_116;
        }
        *(double *)&v40 = v13;
        BYTE8(v40) = 1;
      }
      WTF::AtomStringImpl::addLiteral();
      v14 = v48;
      v16 = JSC::JSObject::get(v7, a2, (unint64_t)v48);
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v15);
        else
          *(_DWORD *)v14 -= 2;
      }
      if (*((_DWORD *)v5 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
        if ((result & 1) != 0)
          goto LABEL_116;
      }
      if (v16 == 10)
      {
LABEL_55:
        WTF::AtomStringImpl::addLiteral();
        v22 = v48;
        result = JSC::JSObject::get(v7, a2, (unint64_t)v48);
        v24 = result;
        if (v22)
        {
          if (*(_DWORD *)v22 == 2)
            result = WTF::StringImpl::destroy(v22, v23);
          else
            *(_DWORD *)v22 -= 2;
        }
        if (*((_DWORD *)v5 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
          if ((result & 1) != 0)
            goto LABEL_116;
        }
        if (v24 == 10)
          goto LABEL_86;
        if (v24 >> 49)
        {
          result = (uint64_t)WebCore::Converter<WebCore::IDLDouble>::convert(a2, v24, (uint64_t)&v45);
          v25 = 1;
          if (!v46)
          {
            v49 = v45;
            v50 = 1;
            v25 = 0;
          }
          v51 = v25;
LABEL_69:
          if (v25)
          {
            *(_DWORD *)(v4 + 72) = 1;
            v29 = v25;
LABEL_83:
            if (v29 != -1)
              result = ((uint64_t (*)(JSC::VM **, JSC::VM **))off_1E32CBB68[v29])(&v45, &v49);
            if (v25)
              goto LABEL_95;
            goto LABEL_86;
          }
          LOBYTE(v45) = 0;
          v46 = -1;
          v27 = v50;
          if (v50 == -1)
          {
            if (v39)
            {
              if (v38 == -1)
              {
LABEL_82:
                v29 = v51;
                goto LABEL_83;
              }
              result = ((uint64_t (*)(char **, char *))off_1E32CB958[v38])(&v47, v37);
              v38 = -1;
LABEL_80:
              if (v46 != -1)
                result = ((uint64_t (*)(char **, JSC::VM **))off_1E32CB958[v46])(&v47, &v45);
              goto LABEL_82;
            }
            v37[0] = 0;
            v38 = -1;
          }
          else
          {
            v28 = off_1E32CB968[v50];
            ((void (*)(char **, JSC::VM **, JSC::VM **))v28)(&v47, &v45, &v49);
            v46 = v27;
            if (v39)
            {
              v47 = v37;
              result = ((uint64_t (*)(char **, char *, JSC::VM **))off_1E32CBB58[v27])(&v47, v37, &v45);
              goto LABEL_80;
            }
            v37[0] = 0;
            v38 = -1;
            result = ((uint64_t (*)(char **, char *, JSC::VM **))v28)(&v47, v37, &v45);
            v38 = v27;
          }
          v39 = 1;
          goto LABEL_80;
        }
        result = (uint64_t)WebCore::Converter<WebCore::IDLDOMString>::convert(a2, v24, (uint64_t)&v45);
        if (v46)
        {
          v25 = 1;
          v51 = 1;
          if (v46 == -1)
            goto LABEL_69;
        }
        else
        {
          v26 = v45;
          v45 = 0;
          v49 = v26;
          v50 = 0;
          v51 = 0;
        }
        result = ((uint64_t (*)(char **, JSC::VM **))off_1E32C9390[v46])(&v47, &v45);
        v25 = v51;
        goto LABEL_69;
      }
      if (v16 >> 49)
      {
        result = (uint64_t)WebCore::Converter<WebCore::IDLDouble>::convert(a2, v16, (uint64_t)&v45);
        v17 = 1;
        if (!v46)
        {
          v49 = v45;
          v50 = 1;
          v17 = 0;
        }
        v51 = v17;
LABEL_36:
        if (v17)
        {
          *(_DWORD *)(v4 + 72) = 1;
          v21 = v17;
LABEL_52:
          if (v21 != -1)
            result = ((uint64_t (*)(JSC::VM **, JSC::VM **))off_1E32CBB68[v21])(&v45, &v49);
          if (v17)
            goto LABEL_95;
          goto LABEL_55;
        }
        LOBYTE(v45) = 0;
        v46 = -1;
        v19 = v50;
        if (v50 == -1)
        {
          if (v43)
          {
            if (v42 == -1)
            {
LABEL_51:
              v21 = v51;
              goto LABEL_52;
            }
            result = ((uint64_t (*)(char **, char *))off_1E32CB958[v42])(&v47, v41);
            v42 = -1;
LABEL_49:
            if (v46 != -1)
              result = ((uint64_t (*)(char **, JSC::VM **))off_1E32CB958[v46])(&v47, &v45);
            goto LABEL_51;
          }
          v41[0] = 0;
          v42 = -1;
        }
        else
        {
          v20 = off_1E32CB968[v50];
          ((void (*)(char **, JSC::VM **, JSC::VM **))v20)(&v47, &v45, &v49);
          v46 = v19;
          if (v43)
          {
            v47 = v41;
            result = ((uint64_t (*)(char **, char *, JSC::VM **))off_1E32CBB58[v19])(&v47, v41, &v45);
            goto LABEL_49;
          }
          v41[0] = 0;
          v42 = -1;
          result = ((uint64_t (*)(char **, char *, JSC::VM **))v20)(&v47, v41, &v45);
          v42 = v19;
        }
        v43 = 1;
        goto LABEL_49;
      }
      result = (uint64_t)WebCore::Converter<WebCore::IDLDOMString>::convert(a2, v16, (uint64_t)&v45);
      if (v46)
      {
        v17 = 1;
        v51 = 1;
        if (v46 == -1)
          goto LABEL_36;
      }
      else
      {
        v18 = v45;
        v45 = 0;
        v49 = v18;
        v50 = 0;
        v51 = 0;
      }
      result = ((uint64_t (*)(char **, JSC::VM **))off_1E32C9390[v46])(&v47, &v45);
      v17 = v51;
      goto LABEL_36;
    }
  }
LABEL_116:
  v32 = 1;
LABEL_94:
  *(_DWORD *)(v4 + 72) = v32;
LABEL_95:
  if (v43)
  {
    if (v42 != -1)
      result = ((uint64_t (*)(WTF::StringImpl **, char *))off_1E32CB958[v42])(&v48, v41);
    v42 = -1;
  }
  if (v39)
  {
    if (v38 != -1)
      return ((uint64_t (*)(WTF::StringImpl **, char *))off_1E32CB958[v38])(&v48, v37);
  }
  return result;
}

_QWORD *WebCore::JSPerformanceNavigation::destroy(WebCore::JSPerformanceNavigation *this, JSC::JSCell *a2)
{
  _QWORD *result;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  WTF *v8;
  _QWORD *v9;
  WTF *v10;

  result = (_QWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      v4 = (unsigned int *)result[1];
      result[1] = 0;
      if (v4)
      {
        do
        {
          v5 = __ldaxr(v4);
          v6 = v5 - 1;
        }
        while (__stlxr(v6, v4));
        if (!v6)
        {
          v9 = result;
          v10 = (WTF *)v4;
          atomic_store(1u, v4);
          v7 = v4[7];
          if ((_DWORD)v7)
            WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*((WTF::StringImpl **)v10 + 2), (WTF::StringImpl *)(*((_QWORD *)v10 + 2) + 32 * v7));
          v8 = (WTF *)*((_QWORD *)v10 + 2);
          if (v8)
          {
            *((_QWORD *)v10 + 2) = 0;
            *((_DWORD *)v10 + 6) = 0;
            WTF::fastFree(v8, a2);
          }
          WTF::fastFree(v10, a2);
          result = v9;
        }
      }
      return (_QWORD *)WTF::fastFree((WTF *)result, a2);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSPerformanceNavigation::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPerformanceNavigationPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPerformanceNavigationPrototype::create(WebCore::JSPerformanceNavigationPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<8u>(this, (uint64_t)&WebCore::JSPerformanceNavigation::s_info, (uint64_t)&WebCore::JSPerformanceNavigationPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceNavigation>,(WebCore::DOMConstructorID)731>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5848);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceNavigation>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSPerformanceNavigation::s_info
         + ~((_QWORD)&WebCore::JSPerformanceNavigation::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformanceNavigation::s_info
                                                                         + ~((_QWORD)&WebCore::JSPerformanceNavigation::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSPerformanceNavigation::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSPerformanceNavigation::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSPerformanceNavigationPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSPerformanceNavigationPrototype::create((WebCore::JSPerformanceNavigationPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSPerformanceNavigation::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSPerformanceNavigation::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  JSC::reifyStaticProperties<4u>((JSC::VM *)a1, (uint64_t)&WebCore::JSPerformanceNavigation::s_info, &WebCore::JSPerformanceNavigationConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5848) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPerformanceNavigationConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformanceNavigationPrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceNavigation>,(WebCore::DOMConstructorID)731>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsPerformanceNavigation_redirectCount(uint64_t a1, uint64_t a2)
{
  return WebCore::PerformanceNavigation::redirectCount(*(WebCore::PerformanceNavigation **)(a2 + 24)) | 0xFFFE000000000000;
}

uint64_t WebCore::JSPerformanceNavigationOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSPerformanceNavigationOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  WTF *v28;
  WTF *v29;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = (unsigned int *)*((_QWORD *)v3 + 1);
    *((_QWORD *)v3 + 1) = 0;
    if (v24)
    {
      do
      {
        v25 = __ldaxr(v24);
        v26 = v25 - 1;
      }
      while (__stlxr(v26, v24));
      if (!v26)
      {
        atomic_store(1u, v24);
        v29 = (WTF *)v24;
        v27 = v24[7];
        if ((_DWORD)v27)
          WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*((WTF::StringImpl **)v29 + 2), (WTF::StringImpl *)(*((_QWORD *)v29 + 2) + 32 * v27));
        v28 = (WTF *)*((_QWORD *)v29 + 2);
        if (v28)
        {
          *((_QWORD *)v29 + 2) = 0;
          *((_DWORD *)v29 + 6) = 0;
          WTF::fastFree(v28, a2);
        }
        WTF::fastFree(v29, a2);
      }
    }
    WTF::fastFree(v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

uint64_t WebCore::convertEnumerationToJS<WebCore::PerformanceNavigationTiming::NavigationType>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned int v8;

  v3 = (uint64_t *)(a1 + 41968);
  if ((byte_1EE336339 & 1) == 0)
  {
    dword_1ECE79180 += 2;
    byte_1EE336339 = 1;
    dword_1ECE791A0 += 2;
    qword_1EE336468 = (uint64_t)&dword_1ECE79180;
    unk_1EE336470 = &dword_1ECE791A0;
    dword_1ECE791C0 += 2;
    dword_1ECE791E0 += 2;
    qword_1EE336478 = (uint64_t)&dword_1ECE791C0;
    unk_1EE336480 = &dword_1ECE791E0;
  }
  v4 = *(WTF::StringImpl **)&_MergedGlobals_827[8 * a2 + 304];
  if (!v4)
    return *v3;
  v5 = *((_DWORD *)v4 + 1);
  *(_DWORD *)v4 += 2;
  if (v5)
  {
    if (v5 == 1 && (v8 = WTF::StringImpl::operator[]((uint64_t)v4, 0), v8 <= 0xFF))
    {
      v6 = *(_QWORD *)(a1 + 8 * v8 + 42216);
    }
    else
    {
      v6 = v3[2849];
      if (!v6 || v4 != *(WTF::StringImpl **)(v6 + 8))
        v6 = JSC::jsStringWithCacheSlowCase();
    }
  }
  else
  {
    v6 = *v3;
  }
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, a2);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

WTF::StringImpl *WebCore::JSPerformanceNavigationTimingPrototype::finishCreation(WebCore::JSPerformanceNavigationTimingPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<12u>(a2, (uint64_t)&WebCore::JSPerformanceNavigationTiming::s_info, (uint64_t)&WebCore::JSPerformanceNavigationTimingPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSPerformanceNavigationTiming::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSPerformanceResourceTiming::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSPerformanceResourceTiming::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSPerformanceResourceTiming::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSPerformanceNavigationTiming::createPrototype(WebCore::JSPerformanceNavigationTiming *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  uint64_t v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = WebCore::getDOMStructure<WebCore::JSPerformanceResourceTiming>(this, a2);
  v6 = JSC::Structure::create((uint64_t *)this, v3, *(JSC::JSCell **)(v5 + 48));
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSPerformanceNavigationTimingPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSPerformanceNavigationTimingPrototype::create(WebCore::JSPerformanceNavigationTimingPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSPerformanceNavigationTimingPrototype::finishCreation((WebCore::JSPerformanceNavigationTimingPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceNavigationTiming>,(WebCore::DOMConstructorID)732>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5856);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceResourceTiming>,(WebCore::DOMConstructorID)736>(a1, a2);
  v7 = v6;
  LODWORD(v21) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v21, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceNavigationTiming>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v20);
    v10[2848] = v2 + (int)v20;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v21);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSPerformanceNavigationTiming>((WebCore::JSPerformanceNavigationTiming *)a1, (JSC::JSCell **)a2)+ 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5856) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPerformanceNavigationTimingConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformanceNavigationTimingPrototype::s_info != (char **)(16
                                                                           * *(unsigned int *)(16
                                                                                             * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                             + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceNavigationTiming>,(WebCore::DOMConstructorID)732>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsPerformanceNavigationTiming_unloadEventStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = 0.0;
  if ((*(char *)(v2 + 210) & 0x80000000) == 0)
  {
    if (*(_BYTE *)(v2 + 368))
    {
      v4 = *(double *)(v2 + 336);
      if (v4 != 0.0)
        v3 = *(double *)&WebCore::timePrecision
           * floor((v4 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
           * 1000.0;
    }
  }
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v3, v3 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceNavigationTiming_unloadEventEnd(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = 0.0;
  if ((*(char *)(v2 + 210) & 0x80000000) == 0)
  {
    if (*(_BYTE *)(v2 + 368))
    {
      v4 = *(double *)(v2 + 344);
      if (v4 != 0.0)
        v3 = *(double *)&WebCore::timePrecision
           * floor((v4 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
           * 1000.0;
    }
  }
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v3, v3 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceNavigationTiming_domInteractive(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(double *)(v2 + 288);
  if (v3 == 0.0)
    v4 = 0.0;
  else
    v4 = *(double *)&WebCore::timePrecision
       * floor((v3 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v4, v4 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v4 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceNavigationTiming_domContentLoadedEventStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(double *)(v2 + 296);
  if (v3 == 0.0)
    v4 = 0.0;
  else
    v4 = *(double *)&WebCore::timePrecision
       * floor((v3 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v4, v4 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v4 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceNavigationTiming_domContentLoadedEventEnd(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(double *)(v2 + 304);
  if (v3 == 0.0)
    v4 = 0.0;
  else
    v4 = *(double *)&WebCore::timePrecision
       * floor((v3 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v4, v4 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v4 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceNavigationTiming_domComplete(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(double *)(v2 + 312);
  if (v3 == 0.0)
    v4 = 0.0;
  else
    v4 = *(double *)&WebCore::timePrecision
       * floor((v3 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v4, v4 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v4 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceNavigationTiming_loadEventStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(double *)(v2 + 352);
  if (v3 == 0.0)
    v4 = 0.0;
  else
    v4 = *(double *)&WebCore::timePrecision
       * floor((v3 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v4, v4 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v4 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceNavigationTiming_loadEventEnd(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(double *)(v2 + 360);
  if (v3 == 0.0)
    v4 = 0.0;
  else
    v4 = *(double *)&WebCore::timePrecision
       * floor((v3 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v4, v4 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v4 + 0x2000000000000;
  }
}

uint64_t WebCore::jsPerformanceNavigationTiming_type(uint64_t a1, uint64_t a2)
{
  return WebCore::convertEnumerationToJS<WebCore::PerformanceNavigationTiming::NavigationType>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned __int8 *)(*(_QWORD *)(a2 + 24) + 376));
}

unint64_t WebCore::jsPerformanceNavigationTiming_redirectCount(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(char *)(v2 + 210) < 0)
    return 0xFFFE000000000000;
  else
    return *(unsigned __int16 *)(v2 + 208) | 0xFFFE000000000000;
}

uint64_t WebCore::JSPerformanceNavigationTiming::subspaceForImpl(WebCore::JSPerformanceNavigationTiming *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5936);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 5936))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 5936);
    *(_QWORD *)(v9 + 5936) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSPerformanceNavigationTiming::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSPerformanceResourceTiming::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPerformanceObserver::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a1 + 24) + 32) + 24))(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 32));
  result = 75;
  __break(0xC471u);
  return result;
}

void WebCore::convertDictionary<WebCore::PerformanceObserver::Init>(uint64_t a1, JSC::JSGlobalObject *a2, JSC::JSCell *this)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t Object;
  JSC::Structure *v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  int v17;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  int v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  int v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  uint64_t v27;
  int v28;
  _BYTE v29[4];
  int v30;
  uint64_t v31[2];
  char v32;
  WTF::StringImpl *v33;
  unsigned __int8 v34;
  char v35;
  JSC::VM *v36;

  v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v36 = v5;
  v6 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v8 = 0;
    LOBYTE(v31[0]) = 0;
    v32 = 0;
    LOBYTE(v33) = 0;
    v10 = 10;
    v34 = 0;
    goto LABEL_8;
  }
  if (((unint64_t)this & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(this);
    if (Object)
    {
      v8 = (JSC::Structure *)Object;
      LOBYTE(v31[0]) = 0;
      v32 = 0;
      LOBYTE(v33) = 0;
      v34 = 0;
      WTF::AtomStringImpl::addLiteral();
      v10 = JSC::JSObject::get(v8, a2, (unint64_t)v26);
      if (v26)
      {
        if (*(_DWORD *)v26 == 2)
          WTF::StringImpl::destroy(v26, v9);
        else
          *(_DWORD *)v26 -= 2;
      }
      if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
        goto LABEL_49;
LABEL_8:
      WebCore::convertOptionalWithDefault<WebCore::IDLBoolean,WebCore::ConversionResult<WebCore::IDLDictionary<WebCore::PerformanceObserver::Init>> WebCore::convertDictionary<WebCore::PerformanceObserver::Init>(JSC::JSGlobalObject &,JSC::JSValue)::$_0>((uint64_t)v29, (uint64_t)a2, v10);
      if (v30)
      {
LABEL_49:
        *(_DWORD *)(a1 + 56) = 1;
        goto LABEL_28;
      }
      v35 = v29[0];
      if (v6 == 2)
        goto LABEL_27;
      WTF::AtomStringImpl::addLiteral();
      v13 = JSC::JSObject::get(v8, a2, (unint64_t)v26);
      if (v26)
      {
        if (*(_DWORD *)v26 == 2)
          WTF::StringImpl::destroy(v26, v12);
        else
          *(_DWORD *)v26 -= 2;
      }
      if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
        goto LABEL_49;
      if (v13 != 10)
      {
        WebCore::convert<WebCore::IDLSequence<WebCore::IDLDOMString>>(a2, v13, (uint64_t)&v26);
        v21 = v28;
        if (v28)
        {
          *(_DWORD *)(a1 + 56) = 1;
          v24 = v21;
        }
        else
        {
          v25[0] = v26;
          v22 = v27;
          v26 = 0;
          v27 = 0;
          v25[1] = v22;
          std::optional<WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>>::operator=[abi:sn180100]<WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,void>((uint64_t)v31, (WTF::StringImpl *)v25);
          WTF::Vector<WTF::AtomString,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)v25, v23);
          v24 = v28;
        }
        if (v24 != -1)
          ((void (*)(_QWORD *, WTF::StringImpl **))off_1E32CBF38[v24])(v25, &v26);
        if (v21)
          goto LABEL_28;
      }
      WTF::AtomStringImpl::addLiteral();
      v14 = v26;
      v16 = JSC::JSObject::get(v8, a2, (unint64_t)v26);
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v15);
        else
          *(_DWORD *)v14 -= 2;
      }
      if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
        goto LABEL_49;
      if (v16 == 10)
        goto LABEL_27;
      WebCore::Converter<WebCore::IDLDOMString>::convert(a2, v16, (uint64_t)&v26);
      v17 = v27;
      if ((_DWORD)v27)
      {
        *(_DWORD *)(a1 + 56) = 1;
        v19 = v17;
      }
      else
      {
        v18 = v26;
        v26 = 0;
        v19 = v34;
        if (!v34)
        {
          v33 = v18;
          v34 = 1;
          goto LABEL_25;
        }
        v20 = v33;
        v33 = v18;
        if (!v20)
        {
          v19 = 0;
          goto LABEL_25;
        }
        if (*(_DWORD *)v20 != 2)
        {
          v19 = 0;
          *(_DWORD *)v20 -= 2;
          goto LABEL_25;
        }
        WTF::StringImpl::destroy(v20, v11);
        v19 = v27;
      }
      if (v19 == -1)
      {
LABEL_26:
        if (v17)
        {
LABEL_28:
          WebCore::PerformanceObserver::Init::~Init((WebCore::PerformanceObserver::Init *)v31, v11);
          return;
        }
LABEL_27:
        WebCore::ConversionResult<WebCore::IDLDictionary<WebCore::PerformanceObserver::Init>>::ConversionResult(a1, v31);
        goto LABEL_28;
      }
LABEL_25:
      ((void (*)(_QWORD *, WTF::StringImpl **))off_1E32C9390[v19])(v25, &v26);
      goto LABEL_26;
    }
  }
  JSC::throwTypeError();
  *(_DWORD *)(a1 + 56) = 1;
}

uint64_t WebCore::convertOptionalWithDefault<WebCore::IDLBoolean,WebCore::ConversionResult<WebCore::IDLDictionary<WebCore::PerformanceObserver::Init>> WebCore::convertDictionary<WebCore::PerformanceObserver::Init>(JSC::JSGlobalObject &,JSC::JSValue)::$_0>(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  double v5;
  int v6;
  BOOL v7;
  int v8;
  uint64_t v9;
  int *v10;
  int v11;

  v3 = result;
  if (a3 == 10)
  {
    v4 = 0;
    goto LABEL_8;
  }
  result = *(_QWORD *)(a2 + 56);
  if (a3 >= 0xFFFE000000000000)
  {
    v7 = (_DWORD)a3 == 0;
    goto LABEL_27;
  }
  *(_QWORD *)&v5 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v4 = a3 == 7;
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 *)(a3 + 5);
    if (v8 == 3)
    {
      v11 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v8 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v4 = 1;
          goto LABEL_7;
        }
        v7 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a2;
        goto LABEL_27;
      }
      v9 = *(_QWORD *)(a3 + 8);
      if ((v9 & 1) != 0)
        v10 = (int *)(a3 + 16);
      else
        v10 = (int *)(v9 + 4);
      v11 = *v10;
    }
    v7 = v11 == 0;
LABEL_27:
    v4 = !v7;
    goto LABEL_7;
  }
  v4 = v5 > 0.0 || v5 < 0.0;
LABEL_7:
  if (*(_DWORD *)(result + 80))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result);
    if ((result & 1) != 0)
    {
      v6 = 1;
      goto LABEL_9;
    }
  }
LABEL_8:
  v6 = 0;
  *(_BYTE *)v3 = v4;
LABEL_9:
  *(_DWORD *)(v3 + 4) = v6;
  return result;
}

uint64_t WebCore::convert<WebCore::IDLSequence<WebCore::IDLDOMString>>@<X0>(JSC::JSGlobalObject *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;

  if ((a2 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(a2 + 5) > 0x16u)
    return WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDOMString>>::convert(a1, a2, a3);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  JSC::throwTypeError();
  result = (uint64_t)v6;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      result = WTF::StringImpl::destroy(v6, v5);
    else
      *(_DWORD *)v6 -= 2;
  }
  *(_DWORD *)(a3 + 16) = 1;
  return result;
}

uint64_t std::optional<WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>>::operator=[abi:sn180100]<WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,void>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v4;
  WTF *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl **v9;
  uint64_t v10;
  WTF::StringImpl *v11;

  if (*(_BYTE *)(a1 + 16))
  {
    v4 = *(unsigned int *)(a1 + 12);
    if ((_DWORD)v4)
    {
      v9 = *(WTF::StringImpl ***)a1;
      v10 = 8 * v4;
      do
      {
        v11 = *v9;
        *v9 = 0;
        if (v11)
        {
          if (*(_DWORD *)v11 == 2)
            WTF::StringImpl::destroy(v11, a2);
          else
            *(_DWORD *)v11 -= 2;
        }
        ++v9;
        v10 -= 8;
      }
      while (v10);
    }
    v5 = *(WTF **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)a1 = 0;
      *(_DWORD *)(a1 + 8) = 0;
      WTF::fastFree(v5, a2);
    }
    v6 = *(_QWORD *)a2;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)a1 = v6;
    LODWORD(v6) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = 0;
    *(_DWORD *)(a1 + 8) = v6;
    LODWORD(v6) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = 0;
    *(_DWORD *)(a1 + 12) = v6;
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    v7 = *(_QWORD *)a2;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)a1 = v7;
    LODWORD(v7) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = 0;
    *(_DWORD *)(a1 + 8) = v7;
    LODWORD(v7) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = 0;
    *(_DWORD *)(a1 + 12) = v7;
    *(_BYTE *)(a1 + 16) = 1;
  }
  return a1;
}

uint64_t WebCore::ConversionResult<WebCore::IDLDictionary<WebCore::PerformanceObserver::Init>>::ConversionResult(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(result + 8) = 0;
  *(_BYTE *)(result + 24) = 0;
  if (*((_BYTE *)a2 + 16))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    v2 = *a2;
    *a2 = 0;
    *(_QWORD *)(result + 8) = v2;
    LODWORD(v2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = 0;
    *(_DWORD *)(result + 16) = v2;
    LODWORD(v2) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = 0;
    *(_DWORD *)(result + 20) = v2;
    *(_BYTE *)(result + 24) = 1;
  }
  *(_BYTE *)(result + 32) = 0;
  *(_BYTE *)(result + 40) = 0;
  if (*((_BYTE *)a2 + 32))
  {
    v3 = a2[3];
    a2[3] = 0;
    *(_QWORD *)(result + 32) = v3;
    *(_BYTE *)(result + 40) = 1;
  }
  *(_BYTE *)(result + 48) = *((_BYTE *)a2 + 40);
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void WebCore::PerformanceObserver::Init::~Init(WebCore::PerformanceObserver::Init *this, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  WTF *v5;
  WTF::StringImpl **v6;
  uint64_t v7;
  WTF::StringImpl *v8;

  if (*((_BYTE *)this + 32))
  {
    v3 = (WTF::StringImpl *)*((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = 0;
    if (v3)
    {
      if (*(_DWORD *)v3 == 2)
        WTF::StringImpl::destroy(v3, a2);
      else
        *(_DWORD *)v3 -= 2;
    }
  }
  if (*((_BYTE *)this + 16))
  {
    v4 = *((unsigned int *)this + 3);
    if ((_DWORD)v4)
    {
      v6 = *(WTF::StringImpl ***)this;
      v7 = 8 * v4;
      do
      {
        v8 = *v6;
        *v6 = 0;
        if (v8)
        {
          if (*(_DWORD *)v8 == 2)
            WTF::StringImpl::destroy(v8, a2);
          else
            *(_DWORD *)v8 -= 2;
        }
        ++v6;
        v7 -= 8;
      }
      while (v7);
    }
    v5 = *(WTF **)this;
    if (*(_QWORD *)this)
    {
      *(_QWORD *)this = 0;
      *((_DWORD *)this + 2) = 0;
      WTF::fastFree(v5, a2);
    }
  }
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPerformanceObserver>::construct(JSC *this, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  WebCore::JSDOMGlobalObject *v15;
  _DWORD *v16;
  JSCell *v17;
  void *v18;
  JSCell *result;
  JSValue v20;
  _DWORD *v21;
  uint64_t v22;
  _DWORD *v23;
  unsigned int v24;
  JSC::VM *v25;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v3;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, this, v20);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(this, &v25, (uint64_t)"PerformanceObserver", 20);
  v11 = v6;
  WebCore::convert<WebCore::IDLCallbackFunction<WebCore::JSPerformanceObserverCallback>,WebCore::JSDOMConstructor<WebCore::JSPerformanceObserver>::construct(JSC::JSGlobalObject *,JSC::CallFrame *)::$_0>((uint64_t)&v23, (uint64_t)this, *(JSC::JSObject **)(a2 + 48), *(WebCore::JSDOMGlobalObject **)(v5 + 40), v7, v8, v9, v10);
  v12 = v24;
  if (!v24)
  {
    v13 = v23;
    v23 = 0;
    v21 = v13;
    v14 = WTF::fastMalloc((WTF *)0x30);
    v22 = WebCore::PerformanceObserver::PerformanceObserver(v14, v11, &v21);
    v16 = v21;
    v21 = 0;
    if (v16)
    {
      if (v16[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v16 + 16))(v16);
      else
        --v16[4];
    }
    v17 = (JSCell *)WebCore::createWrapper<WebCore::PerformanceObserver,WebCore::PerformanceObserver>(*(JSC::VM **)(v5 + 40), &v22, v15);
    WebCore::setSubclassStructureIfNeeded<WebCore::PerformanceObserver>(this, a2, v17);
    if (*((_DWORD *)v3 + 20))
    {
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
        v17 = 0;
    }
    WTF::Ref<WebCore::PerformanceObserver,WTF::RawPtrTraits<WebCore::PerformanceObserver>,WTF::DefaultRefDerefTraits<WebCore::PerformanceObserver>>::~Ref(&v22, v18);
    goto LABEL_7;
  }
  v17 = 0;
  result = 0;
  if (v24 != -1)
  {
LABEL_7:
    ((void (*)(uint64_t *, _DWORD **))off_1E32CBF48[v12])(&v22, &v23);
    return v17;
  }
  return result;
}

void *WebCore::convert<WebCore::IDLCallbackFunction<WebCore::JSPerformanceObserverCallback>,WebCore::JSDOMConstructor<WebCore::JSPerformanceObserver>::construct(JSC::JSGlobalObject *,JSC::CallFrame *)::$_0>(uint64_t a1, uint64_t a2, JSC::JSObject *a3, WebCore::JSDOMGlobalObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v11;
  WebCore::JSPerformanceObserverCallback *v13;
  void *result;
  int v15;
  uint64_t v17;
  _QWORD v18[3];

  v8 = a2;
  v17 = *(_QWORD *)(a2 + 56);
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0
    && (v11 = *((unsigned __int8 *)a3 + 5), v11 >= 0x17)
    && ((v11 & 0xFE) == 0x1A
     || (*((_BYTE *)a3 + 6) & 4) != 0
     && ((*(void (**)(_QWORD *__return_ptr, JSC::JSObject *))(16
                                                                       * *(unsigned int *)(16
                                                                                         * (*(_DWORD *)a3 & 0xFFFFFFFE)
                                                                                         + 0x4C)
                                                                       + 0x38))(v18, a3), v8 = a2, LOBYTE(v18[0]))))
  {
    v13 = (WebCore::JSPerformanceObserverCallback *)WTF::fastMalloc((WTF *)0x20);
    result = WebCore::JSPerformanceObserverCallback::JSPerformanceObserverCallback(v13, a3, a4);
    v15 = 0;
    *(_QWORD *)a1 = result;
  }
  else
  {
    result = WebCore::throwArgumentMustBeFunctionError(v8, (uint64_t)&v17, 0, "callback", 9, "PerformanceObserver", 20, a8, 0, 0);
    v15 = 1;
  }
  *(_DWORD *)(a1 + 8) = v15;
  return result;
}

JSCell *WebCore::setSubclassStructureIfNeeded<WebCore::PerformanceObserver>(JSC *a1, uint64_t a2, JSCell *a3)
{
  JSCell *result;
  JSC::JSObject *v7;
  JSC::JSGlobalObject *v9;
  WebCore::JSPerformanceObserver *v10;
  uint64_t FunctionRealm;
  WebCore::JSDOMGlobalObject *v12;
  JSC::VM *v13;
  JSC::JSObject *v14;
  JSC::Structure *v15;
  unint64_t SubclassStructure;
  JSC::VM *v17;

  result = *(JSCell **)(a2 + 40);
  if (((unint64_t)result & 0xFFFE000000000002) == 0)
  {
    result = (JSCell *)JSC::JSCell::getObject((JSC::JSCell *)result);
    if (result && result != *(JSCell **)(a2 + 24))
    {
      v9 = (JSC::JSGlobalObject *)result;
      v10 = (WebCore::JSPerformanceObserver *)*((_QWORD *)a1 + 7);
      FunctionRealm = JSC::getFunctionRealm(a1, (JSC::JSGlobalObject *)result, v7);
      v13 = (JSC::VM *)FunctionRealm;
      if (!*((_DWORD *)v10 + 20)
        || (v17 = (JSC::VM *)FunctionRealm,
            result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10),
            v13 = v17,
            (result & 1) == 0))
      {
        v14 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSPerformanceObserver>(v10, v13, v12);
        SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v9, v14, v15);
        if (!*((_DWORD *)v10 + 20))
          return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
        result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10);
        if ((result & 1) == 0)
          return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
      }
    }
  }
  return result;
}

uint64_t *WTF::Ref<WebCore::PerformanceObserver,WTF::RawPtrTraits<WebCore::PerformanceObserver>,WTF::DefaultRefDerefTraits<WebCore::PerformanceObserver>>::~Ref(uint64_t *a1, void *a2)
{
  uint64_t v3;
  _DWORD *v5;
  uint64_t v6;
  WTF *v7;
  WebCore::Performance *v8;
  _DWORD **v9;
  uint64_t v10;
  _DWORD *v11;
  bmalloc::api *v12;
  void *v13;

  v3 = *a1;
  *a1 = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 1)
    {
      v5 = *(_DWORD **)(v3 + 32);
      *(_QWORD *)(v3 + 32) = 0;
      if (v5)
      {
        if (v5[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 16))(v5);
        else
          --v5[4];
      }
      v6 = *(unsigned int *)(v3 + 28);
      if ((_DWORD)v6)
      {
        v9 = *(_DWORD ***)(v3 + 16);
        v10 = 8 * v6;
        do
        {
          v11 = *v9;
          *v9 = 0;
          if (v11)
          {
            if (v11[2] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v11 + 8))(v11);
            else
              --v11[2];
          }
          ++v9;
          v10 -= 8;
        }
        while (v10);
      }
      v7 = *(WTF **)(v3 + 16);
      if (v7)
      {
        *(_QWORD *)(v3 + 16) = 0;
        *(_DWORD *)(v3 + 24) = 0;
        WTF::fastFree(v7, a2);
      }
      v8 = *(WebCore::Performance **)(v3 + 8);
      *(_QWORD *)(v3 + 8) = 0;
      if (v8)
      {
        if (*((_DWORD *)v8 + 4) == 1)
        {
          WebCore::Performance::~Performance(v8);
          bmalloc::api::isoDeallocate(v12, v13);
        }
        else
        {
          --*((_DWORD *)v8 + 4);
        }
      }
      WTF::fastFree((WTF *)v3, a2);
    }
    else
    {
      --*(_DWORD *)v3;
    }
  }
  return a1;
}

JSC::VM *WebCore::JSDOMConstructor<WebCore::JSPerformanceObserver>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  WebCore::JSDOMGlobalObject *v11;
  uint64_t v12;
  WTF::StringImpl *v14;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000001, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v14);
  v9 = v14;
  v14 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v12 = WebCore::getDOMStructure<WebCore::JSPerformanceObserver>((WebCore::JSPerformanceObserver *)a2, a3, v11);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v12 + 48), 14);
  return JSC::reifyStaticProperties<1u>((JSC::VM *)a2, (uint64_t)&WebCore::JSPerformanceObserver::s_info, (uint64_t)&WebCore::JSPerformanceObserverConstructorTableValues, (JSC::JSObject *)a1);
}

WTF::StringImpl *WebCore::JSPerformanceObserverPrototype::finishCreation(WebCore::JSPerformanceObserverPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(a2, (uint64_t)&WebCore::JSPerformanceObserver::s_info, &WebCore::JSPerformanceObserverPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSPerformanceObserver::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPerformanceObserver::visitChildren(WebCore::JSPerformanceObserver *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = (*(uint64_t (**)(_QWORD, JSC::JSCell *))(**(_QWORD **)(*((_QWORD *)this + 3) + 32) + 24))(*(_QWORD *)(*((_QWORD *)this + 3) + 32), a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

unint64_t WebCore::JSPerformanceObserver::createPrototype(WebCore::JSPerformanceObserver *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSPerformanceObserverPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSPerformanceObserverPrototype::create(WebCore::JSPerformanceObserverPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSPerformanceObserverPrototype::finishCreation((WebCore::JSPerformanceObserverPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::jsPerformanceObserverConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformanceObserverPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 5864);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructor<WebCore::JSPerformanceObserver>::createStructure((uint64_t *)v2, v3, *(JSC::JSCell **)(v3 + 664));
    result = WebCore::JSDOMConstructor<WebCore::JSPerformanceObserver>::create(v2, Structure, (JSC::VM *)v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 5864) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v6 = (JSC::Heap *)(v2 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)v3);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::jsPerformanceObserverConstructor_supportedEntryTypes(WebCore::JSDOMGlobalObject *a1)
{
  WebCore::PerformanceObserver *v2;
  WTF::StringImpl *v3;
  uint64_t v4;
  WTF *v5;
  WTF *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF *v10;
  int v11;
  unsigned int v12;

  v2 = (WebCore::PerformanceObserver *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
  if (!v2)
    return 10;
  WebCore::PerformanceObserver::supportedEntryTypes(v2, (uint64_t)&v10);
  v4 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDOMString>>::convert<WTF::String,0ul>(a1, (uint64_t)a1, (uint64_t)&v10);
  if (v12)
  {
    v7 = v10;
    v8 = 8 * v12;
    do
    {
      v9 = *(WTF::StringImpl **)v7;
      *(_QWORD *)v7 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v3);
        else
          *(_DWORD *)v9 -= 2;
      }
      v7 = (WTF *)((char *)v7 + 8);
      v8 -= 8;
    }
    while (v8);
  }
  v5 = v10;
  if (v10)
  {
    v10 = 0;
    v11 = 0;
    WTF::fastFree(v5, v3);
  }
  return v4;
}

uint64_t WebCore::JSPerformanceObserver::subspaceForImpl(WebCore::JSPerformanceObserver *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5944);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v16 = *(_QWORD *)(v9 + 5944);
  if (!v16)
  {
    v14 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v14, JSC::JSCell::numberOfLowerTierCells, &v15);
    v11 = v15;
    v16 = v15;
    v12 = *(_QWORD *)(v9 + 5944);
    *(_QWORD *)(v9 + 5944) = v15;
    if (v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
    v13 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v13 == *(_DWORD *)(v7 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v7 + 2832, (unint64_t)&v16);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v13) = v11;
      *(_DWORD *)(v7 + 2844) = v13 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v15 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSPerformanceObserver::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v15);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v15);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::PerformanceObserver,WebCore::PerformanceObserver>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = WebCore::getDOMStructure<WebCore::JSPerformanceObserver>(*((WebCore::JSPerformanceObserver **)a1 + 7), a1, a3);
  v7 = WebCore::JSPerformanceObserver::create(v6, a1, a2);
  WebCore::cacheWrapper<WebCore::PerformanceObserver,WebCore::JSPerformanceObserver>(*((_QWORD *)a1 + 415), v5, v7);
  return v7;
}

uint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::PerformanceObserver *a4)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  JSC::JSGlobalObject *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  JSC::JSGlobalObject *v16;

  v4 = *(_QWORD *)(*((_QWORD *)this + 415) + 32);
  if (!v4)
    goto LABEL_9;
  v5 = *(_DWORD *)(v4 - 8);
  v6 = ((unint64_t)a2 + ~((_QWORD)a2 << 32)) ^ (((unint64_t)a2 + ~((_QWORD)a2 << 32)) >> 22);
  v7 = 9 * ((v6 + ~(v6 << 13)) ^ ((v6 + ~(v6 << 13)) >> 8));
  v8 = (v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27);
  v9 = v5 & ((v8 >> 31) ^ v8);
  v10 = *(JSC::JSGlobalObject **)(v4 + 16 * v9);
  if (v10 != a2)
  {
    v11 = 1;
    while (v10)
    {
      v9 = ((_DWORD)v9 + v11) & v5;
      v10 = *(JSC::JSGlobalObject **)(v4 + 16 * v9);
      ++v11;
      if (v10 == a2)
        goto LABEL_6;
    }
    goto LABEL_9;
  }
LABEL_6:
  v12 = *(_QWORD *)(v4 + 16 * v9 + 8);
  if (!v12 || (*(_BYTE *)(v12 + 8) & 3) != 0 || (v13 = *(_QWORD *)v12) == 0)
  {
LABEL_9:
    ++*(_DWORD *)a2;
    v16 = a2;
    v13 = WebCore::createWrapper<WebCore::PerformanceObserver,WebCore::PerformanceObserver>(this, (uint64_t *)&v16, a3);
    WTF::Ref<WebCore::PerformanceObserver,WTF::RawPtrTraits<WebCore::PerformanceObserver>,WTF::DefaultRefDerefTraits<WebCore::PerformanceObserver>>::~Ref((uint64_t *)&v16, v14);
  }
  return v13;
}

WebCore::JSPerformanceObserverCallback *WebCore::JSPerformanceObserverCallback::JSPerformanceObserverCallback(WebCore::JSPerformanceObserverCallback *this, JSC::JSObject *a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::ScriptExecutionContext *v6;
  _QWORD *v7;

  v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  *((_DWORD *)this + 4) = 1;
  WebCore::ActiveDOMCallback::ActiveDOMCallback(this, v6);
  *(_QWORD *)this = &off_1E32C71E0;
  v7 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
  *((_QWORD *)this + 3) = WebCore::JSCallbackData::JSCallbackData(v7, (uint64_t)a2, (uint64_t)a3, (uint64_t)this);
  return this;
}

_QWORD *WebCore::JSCallbackData::JSCallbackData(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *Allocator;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a3)
  {
    v14 = a4;
    v16 = a2;
    v12 = result;
    if ((a3 & 8) != 0)
      v6 = (a3 - 112) | 1;
    else
      v6 = a3 & 0xFFFFFFFFFFFFC000;
    if ((v6 & 1) != 0)
      v7 = v6 + 47;
    else
      v7 = *(_QWORD *)v6 + 32;
    Allocator = *(_QWORD **)(v7 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v7 + 16) = *Allocator;
    result = v12;
    *Allocator = a3;
    Allocator[1] = 0;
    Allocator[2] = 0;
    a4 = v14;
    a2 = v16;
  }
  else
  {
    Allocator = 0;
  }
  *result = Allocator;
  result[1] = &off_1E32268A0;
  if (a2)
  {
    v11 = result + 1;
    v13 = result;
    v15 = a4;
    v17 = a2;
    if ((a2 & 8) != 0)
      v8 = (a2 - 112) | 1;
    else
      v8 = a2 & 0xFFFFFFFFFFFFC000;
    if ((v8 & 1) != 0)
      v9 = v8 + 47;
    else
      v9 = *(_QWORD *)v8 + 32;
    v5 = *(_QWORD **)(v9 + 16);
    if (!v5)
      v5 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v9 + 16) = *v5;
    result = v13;
    *v5 = v17;
    v5[1] = v11;
    v5[2] = v15;
  }
  else
  {
    v5 = 0;
  }
  result[2] = v5;
  return result;
}

void WebCore::JSCallbackData::~JSCallbackData(WebCore::JSCallbackData *this)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 2);
  if (v2)
  {
    *(_QWORD *)(v2 + 8) = 3;
    *((_QWORD *)this + 2) = 0;
  }
  JSC::WeakHandleOwner::~WeakHandleOwner((WebCore::JSCallbackData *)((char *)this + 8));
  if (*(_QWORD *)this)
  {
    *(_QWORD *)(*(_QWORD *)this + 8) = 3;
    *(_QWORD *)this = 0;
  }
}

uint64_t WebCore::JSPerformanceObserverCallback::handleEvent(JSC::JSGlobalObject **this, WebCore::PerformanceObserver *a2, WebCore::PerformanceObserverEntryList *a3, WebCore::PerformanceObserver *a4)
{
  uint64_t v8;
  WebCore *v9;
  WebCore::JSDOMGlobalObject *v10;
  WebCore::PerformanceObserver *v11;
  uint64_t v12;
  JSValue v13;
  WebCore::JSDOMGlobalObject *v14;
  WebCore::PerformanceObserver *v15;
  JSValue v16;
  uint64_t v17;
  void *v18;
  void *v20;
  _BYTE v21[8];
  uint64_t v22;
  char *v23;
  _OWORD v24[4];
  uint64_t v25;
  _BYTE v26[8];

  if (!WebCore::ActiveDOMCallback::canInvokeCallback((WebCore::ActiveDOMCallback *)this, a2))
    return 2;
  ++*((_DWORD *)this + 4);
  v8 = *(_QWORD *)this[3];
  if (!v8 || (*(_BYTE *)(v8 + 8) & 3) != 0)
    v9 = 0;
  else
    v9 = *(WebCore **)v8;
  MEMORY[0x19AEA3294](v26, *((_QWORD *)v9 + 7));
  v12 = WebCore::toJS(v9, a2, v10, v11);
  v21[0] = 0;
  v22 = 0x800000000;
  v23 = (char *)v24 + 8;
  memset(v24, 0, sizeof(v24));
  v25 = 0;
  v13.super.isa = (Class)WebCore::wrap<WebCore::PerformanceObserverEntryList>((uint64_t)v9, a3);
  JSC::MarkedVector<JSC::JSValue,8ul,WTF::RecordOverflow>::append((uint64_t)v21, v13);
  v16.super.isa = (Class)WebCore::toJS(v9, a4, v14, v15);
  JSC::MarkedVector<JSC::JSValue,8ul,WTF::RecordOverflow>::append((uint64_t)v21, v16);
  v20 = 0;
  WebCore::JSCallbackData::invokeCallback(this[3], v12, (uint64_t)v21, (uint64_t *)&v20);
  v17 = 0;
  v18 = v20;
  if (v20)
  {
    WebCore::reportException(*(JSC::JSGlobalObject **)(16 * (***((_DWORD ***)this[3] + 2) & 0xFFFFFFFE) + 0x28), (uint64_t)v20, 0, 0, 0);
    v17 = 1;
  }
  JSC::MarkedVector<JSC::JSValue,8ul,WTF::RecordOverflow>::~MarkedVector((uint64_t)v21, v18);
  MEMORY[0x19AEA32A0](v26);
  if (*((_DWORD *)this + 4) == 1)
    (*((void (**)(JSC::JSGlobalObject **))*this + 2))(this);
  else
    --*((_DWORD *)this + 4);
  return v17;
}

JSC::JSGlobalObject *WebCore::JSCallbackData::invokeCallback(JSC::JSGlobalObject *result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  JSC::JSGlobalObject *v5;
  uint64_t v9;
  JSC::Structure *v10;

  v4 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    if ((*(_BYTE *)(v4 + 8) & 3) == 0)
    {
      v5 = result;
      result = *(JSC::JSGlobalObject **)v4;
      if (*(_QWORD *)v4)
      {
        v9 = *((_QWORD *)v5 + 2);
        if (!v9 || (*(_BYTE *)(v9 + 8) & 3) != 0)
          v10 = 0;
        else
          v10 = *(JSC::Structure **)v9;
        return (JSC::JSGlobalObject *)WebCore::JSCallbackData::invokeCallback(result, v10, a2, a3, 0, 0, a4);
      }
    }
  }
  return result;
}

WTF::StringImpl *WebCore::JSPerformanceObserverEntryListPrototype::finishCreation(WebCore::JSPerformanceObserverEntryListPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(a2, (uint64_t)&WebCore::JSPerformanceObserverEntryList::s_info, &WebCore::JSPerformanceObserverEntryListPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSPerformanceObserverEntryList::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSPerformanceObserverEntryList::createPrototype(WebCore::JSPerformanceObserverEntryList *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSPerformanceObserverEntryListPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSPerformanceObserverEntryListPrototype::create(WebCore::JSPerformanceObserverEntryListPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSPerformanceObserverEntryListPrototype::finishCreation((WebCore::JSPerformanceObserverEntryListPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceObserverEntryList>,(WebCore::DOMConstructorID)734>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5872);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v20) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v18);
    v5[2] = SlowCase + (int)v18;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v20, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceObserverEntryList>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v19 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v19);
    v9[2848] = v2 + (int)v19;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v20);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v20);
  v13 = v20;
  v20 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v20);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSPerformanceObserverEntryList>((WebCore::JSPerformanceObserverEntryList *)a1, (JSC::JSCell **)a2)+ 48);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v16, 14, (uint64_t)&v20);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5872) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

void WebCore::JSPerformanceObserverEntryList::~JSPerformanceObserverEntryList(WebCore::JSPerformanceObserverEntryList *this, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  WTF *v4;
  _DWORD **v5;
  uint64_t v6;
  _DWORD *v7;

  v2 = *((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = *(unsigned int *)(v2 + 20);
      if ((_DWORD)v3)
      {
        v5 = *(_DWORD ***)(v2 + 8);
        v6 = 8 * v3;
        do
        {
          v7 = *v5;
          *v5 = 0;
          if (v7)
          {
            if (v7[2] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
            else
              --v7[2];
          }
          ++v5;
          v6 -= 8;
        }
        while (v6);
      }
      v4 = *(WTF **)(v2 + 8);
      if (v4)
      {
        *(_QWORD *)(v2 + 8) = 0;
        *(_DWORD *)(v2 + 16) = 0;
        WTF::fastFree(v4, a2);
      }
      WTF::fastFree((WTF *)v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

unint64_t WebCore::jsPerformanceObserverEntryListConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformanceObserverEntryListPrototype::s_info != (char **)(16
                                                                            * *(unsigned int *)(16
                                                                                              * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceObserverEntryList>,(WebCore::DOMConstructorID)734>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSPerformanceObserverEntryList::subspaceForImpl(WebCore::JSPerformanceObserverEntryList *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5952);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 5952))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 5952);
    *(_QWORD *)(v9 + 5952) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSPerformanceObserverEntryList::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSPerformanceObserverEntryListOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

uint64_t *WebCore::JSPerformanceObserverEntryListOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  void *v4;
  _DWORD *v6;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++*v3;
  v6 = v3;
  WebCore::uncacheWrapper<WebCore::Crypto,WebCore::JSCrypto>(a3, (uint64_t)v3);
  return WTF::Ref<WebCore::PerformanceObserverEntryList,WTF::RawPtrTraits<WebCore::PerformanceObserverEntryList>,WTF::DefaultRefDerefTraits<WebCore::PerformanceObserverEntryList>>::~Ref((uint64_t *)&v6, v4);
}

uint64_t *WTF::Ref<WebCore::PerformanceObserverEntryList,WTF::RawPtrTraits<WebCore::PerformanceObserverEntryList>,WTF::DefaultRefDerefTraits<WebCore::PerformanceObserverEntryList>>::~Ref(uint64_t *a1, void *a2)
{
  uint64_t v3;
  uint64_t v5;
  WTF *v6;
  _DWORD **v7;
  uint64_t v8;
  _DWORD *v9;

  v3 = *a1;
  *a1 = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 1)
    {
      v5 = *(unsigned int *)(v3 + 20);
      if ((_DWORD)v5)
      {
        v7 = *(_DWORD ***)(v3 + 8);
        v8 = 8 * v5;
        do
        {
          v9 = *v7;
          *v7 = 0;
          if (v9)
          {
            if (v9[2] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v9 + 8))(v9);
            else
              --v9[2];
          }
          ++v7;
          v8 -= 8;
        }
        while (v8);
      }
      v6 = *(WTF **)(v3 + 8);
      if (v6)
      {
        *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 16) = 0;
        WTF::fastFree(v6, a2);
      }
      WTF::fastFree((WTF *)v3, a2);
    }
    else
    {
      --*(_DWORD *)v3;
    }
  }
  return a1;
}

uint64_t WebCore::createWrapper<WebCore::PerformanceObserverEntryList,WebCore::PerformanceObserverEntryList>(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a2;
  v5 = WebCore::getDOMStructure<WebCore::JSPerformanceObserverEntryList>(*(WebCore::JSPerformanceObserverEntryList **)(a1 + 56), (JSC::JSCell **)a1);
  v6 = WebCore::JSPerformanceObserverEntryList::create(v5, (JSC::VM *)a1, a2);
  WebCore::cacheWrapper<WebCore::PerformanceObserverEntryList,WebCore::JSPerformanceObserverEntryList>(*(_QWORD *)(a1 + 3320), v4, v6);
  return v6;
}

uint64_t WebCore::wrap<WebCore::PerformanceObserverEntryList>(uint64_t a1, _DWORD *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _DWORD *v9;

  v4 = (uint64_t *)(*(_QWORD *)(a1 + 3320) + 32);
  v9 = a2;
  v5 = WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::get(v4, &v9);
  if (v5)
    return v5;
  ++*a2;
  v9 = a2;
  v6 = WebCore::createWrapper<WebCore::PerformanceObserverEntryList,WebCore::PerformanceObserverEntryList>(a1, (uint64_t *)&v9);
  WTF::Ref<WebCore::PerformanceObserverEntryList,WTF::RawPtrTraits<WebCore::PerformanceObserverEntryList>,WTF::DefaultRefDerefTraits<WebCore::PerformanceObserverEntryList>>::~Ref((uint64_t *)&v9, v7);
  return v6;
}

unint64_t JSC::jsDynamicCast<WebCore::JSPerformanceObserverEntryList *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSPerformanceObserverEntryList::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSPerformanceObserverEntryList::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

WTF::StringImpl *WebCore::JSPerformancePaintTimingPrototype::finishCreation(WebCore::JSPerformancePaintTimingPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<1u>(a2, (uint64_t)&WebCore::JSPerformancePaintTiming::s_info, (uint64_t)&WebCore::JSPerformancePaintTimingPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSPerformancePaintTiming::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSPerformanceEntry::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSPerformancePaintTiming::createPrototype(WebCore::JSPerformancePaintTiming *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSPerformanceEntry::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSPerformancePaintTimingPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSPerformancePaintTimingPrototype::create(WebCore::JSPerformancePaintTimingPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSPerformancePaintTimingPrototype::finishCreation((WebCore::JSPerformancePaintTimingPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformancePaintTiming>,(WebCore::DOMConstructorID)735>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5880);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceEntry>,(WebCore::DOMConstructorID)728>(a1, a2);
  v7 = v6;
  LODWORD(v21) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v21, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformancePaintTiming>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v20);
    v10[2848] = v2 + (int)v20;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v21);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSPerformancePaintTiming>((WebCore::JSPerformancePaintTiming *)a1, (JSC::JSCell **)a2)+ 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5880) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPerformancePaintTimingConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformancePaintTimingPrototype::s_info != (char **)(16
                                                                      * *(unsigned int *)(16
                                                                                        * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                        + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformancePaintTiming>,(WebCore::DOMConstructorID)735>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSPerformancePaintTiming::subspaceForImpl(WebCore::JSPerformancePaintTiming *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5960);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 5960))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 5960);
    *(_QWORD *)(v9 + 5960) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSPerformancePaintTiming::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

WTF::StringImpl *WebCore::JSPerformanceResourceTimingPrototype::finishCreation(WebCore::JSPerformanceResourceTimingPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<20u>(a2, (uint64_t)&WebCore::JSPerformanceResourceTiming::s_info, (uint64_t)&WebCore::JSPerformanceResourceTimingPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::JSPerformanceResourceTiming::createPrototype(WebCore::JSPerformanceResourceTiming *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSPerformanceEntry::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSPerformanceResourceTimingPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSPerformanceResourceTimingPrototype::create(WebCore::JSPerformanceResourceTimingPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSPerformanceResourceTimingPrototype::finishCreation((WebCore::JSPerformanceResourceTimingPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceResourceTiming>,(WebCore::DOMConstructorID)736>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5888);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceEntry>,(WebCore::DOMConstructorID)728>(a1, a2);
  v7 = v6;
  LODWORD(v21) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v21, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceResourceTiming>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v20);
    v10[2848] = v2 + (int)v20;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v21);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSPerformanceResourceTiming>((WebCore::JSPerformanceResourceTiming *)a1, (JSC::JSCell **)a2)+ 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5888) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPerformanceResourceTimingConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformanceResourceTimingPrototype::s_info != (char **)(16
                                                                         * *(unsigned int *)(16
                                                                                           * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                           + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceResourceTiming>,(WebCore::DOMConstructorID)736>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPerformanceResourceTiming_initiatorType(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 88);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsPerformanceResourceTiming_nextHopProtocol(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_BYTE *)(v2 + 210);
  v4 = (uint64_t *)(v2 + 200);
  if ((v3 & 0x40) != 0)
    v5 = (uint64_t *)MEMORY[0x1E0CBF738];
  else
    v5 = v4;
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *v5;
  if (!*v5)
    return *(_QWORD *)(v6 + 41968);
  v8 = *(_DWORD *)(v7 + 4);
  if (!v8)
    return *(_QWORD *)(v6 + 41968);
  if (v8 == 1)
  {
    v11 = *(unsigned __int8 **)(v7 + 8);
    if ((*(_BYTE *)(v7 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_7;
      v12 = v13;
    }
    return *(_QWORD *)(v6 + 8 * v12 + 42216);
  }
LABEL_7:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v7 != *(_QWORD *)(v9 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v9;
}

unint64_t WebCore::jsPerformanceResourceTiming_workerStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = 0.0;
  if ((*(_BYTE *)(v2 + 210) & 0x40) == 0)
  {
    v4 = *(double *)(v2 + 192);
    if (v4 != 0.0)
      v3 = *(double *)&WebCore::timePrecision
         * floor((v4 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
         * 1000.0;
  }
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v3, v3 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceResourceTiming_redirectStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = 0.0;
  if ((*(_BYTE *)(v2 + 210) & 0x40) == 0 && !*(_BYTE *)(v2 + 256))
  {
    if (*(_WORD *)(v2 + 208))
    {
      v4 = *(double *)(v2 + 112);
      if (v4 != 0.0)
        v3 = *(double *)&WebCore::timePrecision
           * floor((v4 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
           * 1000.0;
    }
  }
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v3, v3 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceResourceTiming_redirectEnd(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = 0.0;
  if ((*(_BYTE *)(v2 + 210) & 0x40) == 0 && !*(_BYTE *)(v2 + 256))
  {
    if (*(_WORD *)(v2 + 208))
    {
      v4 = *(double *)(v2 + 120);
      if (v4 != 0.0 || (v4 = *(double *)(v2 + 96), v4 != 0.0))
        v3 = *(double *)&WebCore::timePrecision
           * floor((v4 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
           * 1000.0;
    }
  }
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v3, v3 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceResourceTiming_fetchStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(double *)(v2 + 120);
  if ((v3 == 0.0 || (*(_BYTE *)(v2 + 210) & 0x40) != 0) && (v3 = *(double *)(v2 + 96), v3 == 0.0))
    v4 = 0.0;
  else
    v4 = *(double *)&WebCore::timePrecision
       * floor((v3 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v4, v4 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v4 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceResourceTiming_domainLookupStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = 0.0;
  if ((*(_BYTE *)(v2 + 210) & 0x40) == 0)
  {
    if (*(_BYTE *)(v2 + 256))
    {
      v4 = *(double *)(v2 + 40);
    }
    else
    {
      v5 = *(double *)(v2 + 128);
      v4 = *(double *)(v2 + 40);
      if (v5 != 0.0)
        goto LABEL_8;
    }
    v5 = *(double *)(v2 + 120);
    if (v5 == 0.0)
    {
      v5 = *(double *)(v2 + 96);
      if (v5 == 0.0)
        goto LABEL_9;
    }
LABEL_8:
    v3 = *(double *)&WebCore::timePrecision * floor((v5 - v4) / *(double *)&WebCore::timePrecision) * 1000.0;
  }
LABEL_9:
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v6 = (int)v3, v3 == (double)(int)v6)
    && ((_DWORD)v6 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v6 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceResourceTiming_domainLookupEnd(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = 0.0;
  if ((*(_BYTE *)(v2 + 210) & 0x40) == 0)
  {
    if (*(_BYTE *)(v2 + 256))
    {
      v4 = *(double *)(v2 + 40);
    }
    else
    {
      v7 = *(double *)(v2 + 136);
      if (v7 != 0.0)
      {
        v6 = v7 - *(double *)(v2 + 40);
        goto LABEL_8;
      }
      v5 = *(double *)(v2 + 128);
      v4 = *(double *)(v2 + 40);
      if (v5 != 0.0)
      {
LABEL_5:
        v6 = v5 - v4;
LABEL_8:
        v3 = *(double *)&WebCore::timePrecision * floor(v6 / *(double *)&WebCore::timePrecision) * 1000.0;
        goto LABEL_9;
      }
    }
    v5 = *(double *)(v2 + 120);
    if (v5 == 0.0)
    {
      v5 = *(double *)(v2 + 96);
      if (v5 == 0.0)
        goto LABEL_9;
    }
    goto LABEL_5;
  }
LABEL_9:
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v8 = (int)v3, v3 == (double)(int)v8)
    && ((_DWORD)v8 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v8 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceResourceTiming_connectStart(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  WebCore::PerformanceResourceTiming::connectStart(*(WebCore::PerformanceResourceTiming **)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceResourceTiming_connectEnd(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = 0.0;
  if ((*(_BYTE *)(v2 + 210) & 0x40) == 0)
  {
    if (*(_BYTE *)(v2 + 256))
    {
      v4 = *(double *)(v2 + 120);
      if (v4 == 0.0)
      {
        v4 = *(double *)(v2 + 96);
        if (v4 == 0.0)
          goto LABEL_8;
      }
      v5 = v4 - *(double *)(v2 + 40);
    }
    else
    {
      v6 = *(double *)(v2 + 160);
      if (v6 == 0.0)
      {
        WebCore::PerformanceResourceTiming::connectStart((WebCore::PerformanceResourceTiming *)v2);
        goto LABEL_8;
      }
      v5 = v6 - *(double *)(v2 + 40);
    }
    v3 = *(double *)&WebCore::timePrecision * floor(v5 / *(double *)&WebCore::timePrecision) * 1000.0;
  }
LABEL_8:
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v7 = (int)v3, v3 == (double)(int)v7)
    && ((_DWORD)v7 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v7 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceResourceTiming_secureConnectionStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = 0.0;
  if ((*(_BYTE *)(v2 + 210) & 0x40) == 0)
  {
    v4 = *(double *)(v2 + 152);
    if (v4 == -1.0)
    {
      v5 = *(double *)(v2 + 120);
      if (v5 == 0.0)
      {
        v5 = *(double *)(v2 + 96);
        if (v5 == 0.0)
          goto LABEL_8;
      }
      v6 = v5 - *(double *)(v2 + 40);
    }
    else
    {
      if (v4 == 0.0)
        goto LABEL_8;
      v6 = v4 - *(double *)(v2 + 40);
    }
    v3 = *(double *)&WebCore::timePrecision * floor(v6 / *(double *)&WebCore::timePrecision) * 1000.0;
  }
LABEL_8:
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v7 = (int)v3, v3 == (double)(int)v7)
    && ((_DWORD)v7 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v7 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceResourceTiming_requestStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = 0.0;
  if ((*(_BYTE *)(v2 + 210) & 0x40) == 0)
  {
    v4 = *(double *)(v2 + 168);
    if (v4 != 0.0)
    {
      v5 = v4 - *(double *)(v2 + 40);
LABEL_9:
      v3 = *(double *)&WebCore::timePrecision * floor(v5 / *(double *)&WebCore::timePrecision) * 1000.0;
      goto LABEL_10;
    }
    if (!*(_BYTE *)(v2 + 256))
    {
      v7 = *(double *)(v2 + 160);
      if (v7 == 0.0)
      {
        WebCore::PerformanceResourceTiming::connectStart((WebCore::PerformanceResourceTiming *)v2);
        goto LABEL_10;
      }
      v5 = v7 - *(double *)(v2 + 40);
      goto LABEL_9;
    }
    v6 = *(double *)(v2 + 120);
    if (v6 != 0.0 || (v6 = *(double *)(v2 + 96), v6 != 0.0))
    {
      v5 = v6 - *(double *)(v2 + 40);
      goto LABEL_9;
    }
  }
LABEL_10:
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v8 = (int)v3, v3 == (double)(int)v8)
    && ((_DWORD)v8 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v8 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceResourceTiming_responseStart(uint64_t a1, WebCore **a2, WebCore::JSPerformanceResourceTiming *a3)
{
  return WebCore::jsPerformanceResourceTiming_responseStartGetter(a2[3], (JSC::JSGlobalObject *)a2, a3);
}

unint64_t WebCore::jsPerformanceResourceTiming_responseEnd(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 24);
  if (((*(_BYTE *)(v2 + 210) & 1) == 0 || (v3 = *(double *)(v2 + 184), v3 == 0.0))
    && (v3 = *(double *)(v2 + 104), v3 == 0.0))
  {
    v4 = 0.0;
  }
  else
  {
    v4 = *(double *)&WebCore::timePrecision
       * floor((v3 - *(double *)(v2 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  }
  if ((*(_QWORD *)&v4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v5 = (int)v4, v4 == (double)(int)v5)
    && ((_DWORD)v5 || (*(_QWORD *)&v4 & 0x8000000000000000) == 0))
  {
    return v5 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v4 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPerformanceResourceTiming_transferSize(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double v5;

  v2 = *(_QWORD *)(a2 + 24);
  if (!*(_BYTE *)(v2 + 257) || (v3 = *(_QWORD *)(v2 + 216), v3 == -1))
  {
    v4 = 0;
    return v4 | 0xFFFE000000000000;
  }
  v4 = v3 + 300;
  if (HIDWORD(v4))
  {
    v5 = (double)v4;
    return *(_QWORD *)&v5 + 0x2000000000000;
  }
  if ((v4 & 0x80000000) == 0)
    return v4 | 0xFFFE000000000000;
  v5 = (double)v4;
  return *(_QWORD *)&v5 + 0x2000000000000;
}

unint64_t WebCore::jsPerformanceResourceTiming_encodedBodySize(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  double v4;

  v2 = *(_QWORD *)(a2 + 24);
  if (!*(_BYTE *)(v2 + 257) || (v3 = *(_QWORD *)(v2 + 216), v3 == -1))
  {
    v3 = 0;
    return v3 | 0xFFFE000000000000;
  }
  if (HIDWORD(v3))
  {
    v4 = (double)v3;
    return *(_QWORD *)&v4 + 0x2000000000000;
  }
  if ((v3 & 0x80000000) == 0)
    return v3 | 0xFFFE000000000000;
  v4 = (double)v3;
  return *(_QWORD *)&v4 + 0x2000000000000;
}

unint64_t WebCore::jsPerformanceResourceTiming_decodedBodySize(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  double v4;

  v2 = *(_QWORD *)(a2 + 24);
  if (!*(_BYTE *)(v2 + 257) || (v3 = *(_QWORD *)(v2 + 224), v3 == -1))
  {
    v3 = 0;
    return v3 | 0xFFFE000000000000;
  }
  if (HIDWORD(v3))
  {
    v4 = (double)v3;
    return *(_QWORD *)&v4 + 0x2000000000000;
  }
  if ((v3 & 0x80000000) == 0)
    return v3 | 0xFFFE000000000000;
  v4 = (double)v3;
  return *(_QWORD *)&v4 + 0x2000000000000;
}

uint64_t WebCore::jsPerformanceResourceTiming_serverTiming(JSC *a1, uint64_t a2)
{
  return WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLInterface<WebCore::PerformanceServerTiming>>>::convert<WTF::Ref<WebCore::PerformanceServerTiming,WTF::RawPtrTraits<WebCore::PerformanceServerTiming>,WTF::DefaultRefDerefTraits<WebCore::PerformanceServerTiming>>,0ul>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(a2 + 24) + 264);
}

uint64_t WebCore::JSPerformanceResourceTiming::subspaceForImpl(WebCore::JSPerformanceResourceTiming *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5968);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 5968))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 5968);
    *(_QWORD *)(v8 + 5968) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 5968);
  *(_QWORD *)(v3 + 5968) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSPerformanceServerTiming::destroy(uint64_t this, JSC::JSCell *a2)
{
  WTF *v2;
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;

  v2 = *(WTF **)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (WTF::StringImpl *)*((_QWORD *)v2 + 3);
      *((_QWORD *)v2 + 3) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 2)
          WTF::StringImpl::destroy(v3, a2);
        else
          *(_DWORD *)v3 -= 2;
      }
      v4 = (WTF::StringImpl *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      return WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSPerformanceServerTiming::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPerformanceServerTimingPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPerformanceServerTimingPrototype::create(WebCore::JSPerformanceServerTimingPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSPerformanceServerTiming::s_info, &WebCore::JSPerformanceServerTimingPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceServerTiming>,(WebCore::DOMConstructorID)737>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5896);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceServerTiming>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSPerformanceServerTiming::s_info
         + ~((_QWORD)&WebCore::JSPerformanceServerTiming::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformanceServerTiming::s_info
                                                                           + ~((_QWORD)&WebCore::JSPerformanceServerTiming::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSPerformanceServerTiming::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSPerformanceServerTiming::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSPerformanceServerTimingPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSPerformanceServerTimingPrototype::create((WebCore::JSPerformanceServerTimingPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSPerformanceServerTiming::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSPerformanceServerTiming::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5896) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPerformanceServerTimingConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformanceServerTimingPrototype::s_info != (char **)(16
                                                                       * *(unsigned int *)(16
                                                                                         * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                         + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceServerTiming>,(WebCore::DOMConstructorID)737>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPerformanceServerTiming_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

unint64_t WebCore::jsPerformanceServerTiming_duration(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 16);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

uint64_t WebCore::jsPerformanceServerTiming_description(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::JSPerformanceServerTimingOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSPerformanceServerTimingOwner::finalize(uint64_t a1, WTF::StringImpl *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = (WTF::StringImpl *)*((_QWORD *)v3 + 3);
    *((_QWORD *)v3 + 3) = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, a2);
      else
        *(_DWORD *)v24 -= 2;
    }
    v25 = (WTF::StringImpl *)*((_QWORD *)v3 + 1);
    *((_QWORD *)v3 + 1) = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, a2);
      else
        *(_DWORD *)v25 -= 2;
    }
    WTF::fastFree(v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

_QWORD *WebCore::JSPerformanceTiming::destroy(WebCore::JSPerformanceTiming *this, JSC::JSCell *a2)
{
  _QWORD *result;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  WTF *v8;
  _QWORD *v9;
  WTF *v10;

  result = (_QWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      v4 = (unsigned int *)result[1];
      result[1] = 0;
      if (v4)
      {
        do
        {
          v5 = __ldaxr(v4);
          v6 = v5 - 1;
        }
        while (__stlxr(v6, v4));
        if (!v6)
        {
          v9 = result;
          v10 = (WTF *)v4;
          atomic_store(1u, v4);
          v7 = v4[7];
          if ((_DWORD)v7)
            WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*((WTF::StringImpl **)v10 + 2), (WTF::StringImpl *)(*((_QWORD *)v10 + 2) + 32 * v7));
          v8 = (WTF *)*((_QWORD *)v10 + 2);
          if (v8)
          {
            *((_QWORD *)v10 + 2) = 0;
            *((_DWORD *)v10 + 6) = 0;
            WTF::fastFree(v8, a2);
          }
          WTF::fastFree(v10, a2);
          result = v9;
        }
      }
      return (_QWORD *)WTF::fastFree((WTF *)result, a2);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSPerformanceTiming::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceTiming>,(WebCore::DOMConstructorID)738>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5904);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceTiming>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSPerformanceTiming::s_info
         + ~((_QWORD)&WebCore::JSPerformanceTiming::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformanceTiming::s_info
                                                                     + ~((_QWORD)&WebCore::JSPerformanceTiming::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSPerformanceTiming::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSPerformanceTiming::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSPerformanceTimingPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSPerformanceTimingPrototype::create((WebCore::JSPerformanceTimingPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSPerformanceTiming::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSPerformanceTiming::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5904) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPerformanceTimingConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPerformanceTimingPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPerformanceTiming>,(WebCore::DOMConstructorID)738>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsPerformanceTiming_navigationStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  double v5;
  double v6;
  double v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
  {
    v3 = *(_QWORD *)(v2 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 72);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    if (*(_BYTE *)(v3 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194DDED0CLL);
    }
    v3 = *(_QWORD *)(v3 + 240);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(*(_QWORD *)(v3 + 280) + 88);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v7 = *(double *)(v3 + 2728);
    if (v7 == 0.0)
    {
      v3 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v7);
      v3 = (unint64_t)(*(double *)&WebCore::timePrecision
                            * floor(v5 / *(double *)&WebCore::timePrecision)
                            * 1000.0);
    }
    *(_QWORD *)(v2 + 16) = v3;
  }
  if (HIDWORD(v3))
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  if ((v3 & 0x80000000) != 0)
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  return v3 | 0xFFFE000000000000;
}

uint64_t WebCore::jsPerformanceTiming_unloadEventStart(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::unloadEventStart(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_unloadEventEnd(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::unloadEventEnd(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_redirectStart(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::redirectStart(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_redirectEnd(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::redirectEnd(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_fetchStart(uint64_t a1, uint64_t a2)
{
  unint64_t Start;
  unint64_t v3;

  Start = WebCore::PerformanceTiming::fetchStart(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = Start | 0xFFFE000000000000;
  if ((Start & 0x80000000) != 0)
    v3 = COERCE__INT64((double)Start) + 0x2000000000000;
  if (HIDWORD(Start))
    return COERCE__INT64((double)Start) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_domainLookupStart(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::domainLookupStart(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_domainLookupEnd(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::domainLookupEnd(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_connectStart(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::connectStart(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_connectEnd(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::connectEnd(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_secureConnectionStart(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::secureConnectionStart(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_requestStart(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::requestStart(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_responseStart(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::responseStart(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_responseEnd(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::responseEnd(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

uint64_t WebCore::jsPerformanceTiming_domLoading(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = WebCore::PerformanceTiming::domLoading(*(WebCore::PerformanceTiming **)(a2 + 24));
  v3 = v2 | 0xFFFE000000000000;
  if ((v2 & 0x80000000) != 0)
    v3 = COERCE__INT64((double)v2) + 0x2000000000000;
  if (HIDWORD(v2))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v3;
}

unint64_t WebCore::jsPerformanceTiming_domInteractive(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  double v5;
  double v6;
  double v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 136);
  if (!v3)
  {
    v3 = *(_QWORD *)(v2 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 72);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    if (*(_BYTE *)(v3 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194DDF238);
    }
    v3 = *(_QWORD *)(v3 + 240);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 296);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v7 = *(double *)(v3 + 2256);
    if (v7 == 0.0)
    {
      v3 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v7);
      v3 = (unint64_t)(*(double *)&WebCore::timePrecision
                            * floor(v5 / *(double *)&WebCore::timePrecision)
                            * 1000.0);
    }
    *(_QWORD *)(v2 + 136) = v3;
  }
  if (HIDWORD(v3))
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  if ((v3 & 0x80000000) != 0)
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  return v3 | 0xFFFE000000000000;
}

unint64_t WebCore::jsPerformanceTiming_domContentLoadedEventStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  double v5;
  double v6;
  double v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 144);
  if (!v3)
  {
    v3 = *(_QWORD *)(v2 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 72);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    if (*(_BYTE *)(v3 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194DDF33CLL);
    }
    v3 = *(_QWORD *)(v3 + 240);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 296);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v7 = *(double *)(v3 + 2264);
    if (v7 == 0.0)
    {
      v3 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v7);
      v3 = (unint64_t)(*(double *)&WebCore::timePrecision
                            * floor(v5 / *(double *)&WebCore::timePrecision)
                            * 1000.0);
    }
    *(_QWORD *)(v2 + 144) = v3;
  }
  if (HIDWORD(v3))
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  if ((v3 & 0x80000000) != 0)
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  return v3 | 0xFFFE000000000000;
}

unint64_t WebCore::jsPerformanceTiming_domContentLoadedEventEnd(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  double v5;
  double v6;
  double v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 152);
  if (!v3)
  {
    v3 = *(_QWORD *)(v2 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 72);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    if (*(_BYTE *)(v3 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194DDF440);
    }
    v3 = *(_QWORD *)(v3 + 240);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 296);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v7 = *(double *)(v3 + 2272);
    if (v7 == 0.0)
    {
      v3 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v7);
      v3 = (unint64_t)(*(double *)&WebCore::timePrecision
                            * floor(v5 / *(double *)&WebCore::timePrecision)
                            * 1000.0);
    }
    *(_QWORD *)(v2 + 152) = v3;
  }
  if (HIDWORD(v3))
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  if ((v3 & 0x80000000) != 0)
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  return v3 | 0xFFFE000000000000;
}

unint64_t WebCore::jsPerformanceTiming_domComplete(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  double v5;
  double v6;
  double v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 160);
  if (!v3)
  {
    v3 = *(_QWORD *)(v2 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 72);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    if (*(_BYTE *)(v3 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194DDF544);
    }
    v3 = *(_QWORD *)(v3 + 240);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 296);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v7 = *(double *)(v3 + 2280);
    if (v7 == 0.0)
    {
      v3 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v7);
      v3 = (unint64_t)(*(double *)&WebCore::timePrecision
                            * floor(v5 / *(double *)&WebCore::timePrecision)
                            * 1000.0);
    }
    *(_QWORD *)(v2 + 160) = v3;
  }
  if (HIDWORD(v3))
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  if ((v3 & 0x80000000) != 0)
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  return v3 | 0xFFFE000000000000;
}

unint64_t WebCore::jsPerformanceTiming_loadEventStart(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  double v5;
  double v6;
  double v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 168);
  if (!v3)
  {
    v3 = *(_QWORD *)(v2 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 72);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    if (*(_BYTE *)(v3 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194DDF64CLL);
    }
    v3 = *(_QWORD *)(v3 + 240);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(*(_QWORD *)(v3 + 280) + 88);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v7 = *(double *)(v3 + 2760);
    if (v7 == 0.0)
    {
      v3 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v7);
      v3 = (unint64_t)(*(double *)&WebCore::timePrecision
                            * floor(v5 / *(double *)&WebCore::timePrecision)
                            * 1000.0);
    }
    *(_QWORD *)(v2 + 168) = v3;
  }
  if (HIDWORD(v3))
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  if ((v3 & 0x80000000) != 0)
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  return v3 | 0xFFFE000000000000;
}

unint64_t WebCore::jsPerformanceTiming_loadEventEnd(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  double v5;
  double v6;
  double v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 176);
  if (!v3)
  {
    v3 = *(_QWORD *)(v2 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 72);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    if (*(_BYTE *)(v3 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194DDF754);
    }
    v3 = *(_QWORD *)(v3 + 240);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v3 = *(_QWORD *)(*(_QWORD *)(v3 + 280) + 88);
    if (!v3)
      return v3 | 0xFFFE000000000000;
    v7 = *(double *)(v3 + 2768);
    if (v7 == 0.0)
    {
      v3 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v7);
      v3 = (unint64_t)(*(double *)&WebCore::timePrecision
                            * floor(v5 / *(double *)&WebCore::timePrecision)
                            * 1000.0);
    }
    *(_QWORD *)(v2 + 176) = v3;
  }
  if (HIDWORD(v3))
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  if ((v3 & 0x80000000) != 0)
  {
    v6 = (double)v3;
    return *(_QWORD *)&v6 + 0x2000000000000;
  }
  return v3 | 0xFFFE000000000000;
}

uint64_t WebCore::JSPerformanceTimingOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSPerformanceTimingOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  WTF *v28;
  WTF *v29;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = (unsigned int *)*((_QWORD *)v3 + 1);
    *((_QWORD *)v3 + 1) = 0;
    if (v24)
    {
      do
      {
        v25 = __ldaxr(v24);
        v26 = v25 - 1;
      }
      while (__stlxr(v26, v24));
      if (!v26)
      {
        atomic_store(1u, v24);
        v29 = (WTF *)v24;
        v27 = v24[7];
        if ((_DWORD)v27)
          WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*((WTF::StringImpl **)v29 + 2), (WTF::StringImpl *)(*((_QWORD *)v29 + 2) + 32 * v27));
        v28 = (WTF *)*((_QWORD *)v29 + 2);
        if (v28)
        {
          *((_QWORD *)v29 + 2) = 0;
          *((_DWORD *)v29 + 6) = 0;
          WTF::fastFree(v28, a2);
        }
        WTF::fastFree(v29, a2);
      }
    }
    WTF::fastFree(v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSPeriodicWave>::construct(WebCore::JSDOMGlobalObject *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  WTF *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  WTF *v27;
  void *v28;
  JSCell *v29;
  WTF *v30;
  JSC::JSCell *v31;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v33;
  JSC::JSGlobalObject *v34;
  JSC::VM *v35;
  JSC::Structure *v36;
  uint64_t FunctionRealm;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char **v44;
  int v45;
  JSC::JSObject *v46;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v48;
  JSC::Structure *v49;
  JSC::JSCell *v50;
  uint64_t v51;
  unint64_t SubclassStructure;
  uint64_t v53;
  WTF ***v54;
  uint64_t v55;
  WTF **v56;
  void *v57;
  WTF *v58;
  JSValue v59;
  WTF::StringImpl *v60;
  WTF::StringImpl *v61;
  JSValue v62;
  WebCore::JSPeriodicWave *v63;
  JSC::JSCell *v64;
  uint64_t v65;
  WTF *v66;
  WTF::StringImpl *v67;
  uint64_t v68;
  char v69;
  WTF *v70;
  uint64_t v71;
  char v72;
  int v73[2];
  WTF::StringImpl *v74;
  int v75;
  uint64_t v76;
  WTF::StringImpl *v77;
  uint64_t v78;
  char v79;
  WTF *v80;
  uint64_t v81;
  char v82;
  unsigned int v83;
  uint64_t v84;

  v4 = *((_QWORD *)a1 + 7);
  v84 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
  if (v6 && *(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194DDFDF8);
  }
  v9 = v6 - 192;
  if (!v6)
    v9 = 0;
  if ((*(_DWORD *)(*(_QWORD *)(v9 + 680) + 720) & 0x20) == 0)
  {
    JSC::throwTypeError();
    return 2;
  }
  v11 = *(int *)(a2 + 32);
  if ((_DWORD)v11 == 1)
  {
    v59.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, v7);
    return JSC::VM::throwException((JSC::VM *)v4, a1, v59);
  }
  v12 = *(_QWORD *)(a2 + 48);
  v76 = *((_QWORD *)a1 + 7);
  if ((v12 & 0xFFFE000000000002) != 0)
    goto LABEL_19;
  v13 = *(unsigned int *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C);
  v14 = *(_DWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C) != 0;
  v15 = (char **)(16 * v13);
  if ((_DWORD)v13)
    v16 = v15 == &WebCore::JSBaseAudioContext::s_info;
  else
    v16 = 1;
  if (!v16)
  {
    do
    {
      v15 = (char **)v15[2];
      v14 = v15 != 0;
    }
    while (v15 != &WebCore::JSBaseAudioContext::s_info && v15 != 0);
  }
  if (!v14)
  {
LABEL_19:
    WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)&v76, 0, "context", 8, "PeriodicWave", 13, v8, 0, 0, "BaseAudioContext", 17);
    return 0;
  }
  if ((unint64_t)(v11 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v18 = 10;
  else
    v18 = *(_QWORD *)(a2 + 56);
  v19 = *(_QWORD *)(v12 + 24);
  WebCore::convertDictionary<WebCore::PeriodicWaveOptions>((JSC::JSCell *)v18, a1, (uint64_t)&v76);
  v20 = v83;
  if (!v83)
  {
    LOBYTE(v66) = v76;
    LOBYTE(v67) = 0;
    v69 = 0;
    if (v79)
    {
      v67 = v77;
      v21 = v78;
      v77 = 0;
      v78 = 0;
      v68 = v21;
      v69 = 1;
    }
    LOBYTE(v70) = 0;
    v72 = 0;
    if (v82)
    {
      v70 = v80;
      v22 = v81;
      v80 = 0;
      v81 = 0;
      v71 = v22;
      v72 = 1;
    }
    WebCore::PeriodicWave::create(v19 - 32, (uint64_t)&v66, (uint64_t)v73);
    if (v72)
    {
      v24 = v70;
      if (v70)
      {
        v70 = 0;
        LODWORD(v71) = 0;
        WTF::fastFree(v24, v23);
      }
    }
    if (v69)
    {
      v25 = v67;
      if (v67)
      {
        v67 = 0;
        LODWORD(v68) = 0;
        WTF::fastFree(v25, v23);
      }
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    {
      v29 = 0;
LABEL_55:
      if (v75 != -1)
        ((void (*)(WTF **, int *))off_1E32CC878[v75])(&v66, v73);
      goto LABEL_57;
    }
    v65 = v20;
    if (v75)
    {
      if (v75 != 1)
      {
        v63 = (WebCore::JSPeriodicWave *)std::__throw_bad_variant_access[abi:sn180100]();
        return WebCore::JSPeriodicWave::destroy(v63, v64);
      }
      v60 = (WTF::StringImpl *)LOBYTE(v73[0]);
      LOBYTE(v66) = v73[0];
      v61 = v74;
      v74 = 0;
      v67 = v61;
      if (!*(_QWORD *)(v4 + 16))
      {
        v62.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v73[0]), (JSC::JSGlobalObject *)&v67);
        JSC::VM::throwException((JSC::VM *)v4, a1, v62);
        v61 = v67;
      }
      v67 = 0;
      if (v61)
      {
        if (*(_DWORD *)v61 == 2)
          WTF::StringImpl::destroy(v61, v60);
        else
          *(_DWORD *)v61 -= 2;
      }
      v29 = 0;
    }
    else
    {
      v26 = *(_QWORD *)(v5 + 40);
      v27 = *(WTF **)v73;
      *(_QWORD *)v73 = 0;
      v66 = v27;
      v29 = (JSCell *)WebCore::createWrapper<WebCore::PeriodicWave,WebCore::PeriodicWave>(v26, &v66);
      v30 = v66;
      if (v66)
      {
        if (*(_DWORD *)v66 == 1)
        {
          v53 = *((unsigned int *)v66 + 9);
          if ((_DWORD)v53)
          {
            v54 = (WTF ***)*((_QWORD *)v66 + 3);
            v55 = 8 * v53;
            do
            {
              v56 = *v54;
              *v54 = 0;
              if (v56)
              {
                WTF::fastAlignedFree(*v56, v28);
                WTF::fastFree((WTF *)v56, v57);
              }
              ++v54;
              v55 -= 8;
            }
            while (v55);
          }
          v58 = (WTF *)*((_QWORD *)v30 + 3);
          if (v58)
          {
            *((_QWORD *)v30 + 3) = 0;
            *((_DWORD *)v30 + 8) = 0;
            WTF::fastFree(v58, v28);
          }
          WTF::fastFree(v30, v28);
        }
        else
        {
          --*(_DWORD *)v66;
        }
      }
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    {
LABEL_83:
      v29 = 0;
LABEL_54:
      v20 = v65;
      goto LABEL_55;
    }
    v31 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v31 & 0xFFFE000000000002) != 0
      || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v31)) == 0
      || (v34 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v35 = (JSC::VM *)*((_QWORD *)a1 + 7),
          FunctionRealm = JSC::getFunctionRealm(a1, Object, v33),
          *((_DWORD *)v35 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v35) & 1) != 0)
    {
LABEL_53:
      if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
        goto LABEL_54;
      goto LABEL_83;
    }
    v38 = *(_QWORD *)(FunctionRealm + 3296);
    if (v38)
    {
      v39 = *(_DWORD *)(v38 - 8);
      v40 = ((unint64_t)&WebCore::JSPeriodicWave::s_info + ~((_QWORD)&WebCore::JSPeriodicWave::s_info << 32)) ^ (((unint64_t)&WebCore::JSPeriodicWave::s_info + ~((_QWORD)&WebCore::JSPeriodicWave::s_info << 32)) >> 22);
      v41 = 9 * ((v40 + ~(v40 << 13)) ^ ((v40 + ~(v40 << 13)) >> 8));
      v42 = (v41 ^ (v41 >> 15)) + ~((v41 ^ (v41 >> 15)) << 27);
      v43 = v39 & ((v42 >> 31) ^ v42);
      v44 = *(char ***)(v38 + 16 * v43);
      if (v44 == &WebCore::JSPeriodicWave::s_info)
      {
LABEL_49:
        v46 = *(JSC::JSObject **)(v38 + 16 * v43 + 8);
        if (v46)
        {
LABEL_51:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v34, v46, v36);
          if (!*((_DWORD *)v35 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v35) & 1) == 0)
            JSC::JSObject::setStructure(v29, v35, SubclassStructure);
          goto LABEL_53;
        }
      }
      else
      {
        v45 = 1;
        while (v44)
        {
          v43 = ((_DWORD)v43 + v45) & v39;
          v44 = *(char ***)(v38 + 16 * v43);
          ++v45;
          if (v44 == &WebCore::JSPeriodicWave::s_info)
            goto LABEL_49;
        }
      }
    }
    Structure = WebCore::JSPeriodicWavePrototype::createStructure((uint64_t *)v35, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v50 = (JSC::JSCell *)WebCore::JSPeriodicWavePrototype::create(v35, Structure, v48, v49);
    v51 = WebCore::JSPeriodicWave::createStructure((uint64_t *)v35, FunctionRealm, v50);
    v46 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v51, (uint64_t)&WebCore::JSPeriodicWave::s_info);
    goto LABEL_51;
  }
  v29 = 0;
  result = 0;
  if (v83 != -1)
  {
LABEL_57:
    ((void (*)(WTF **, uint64_t *))off_1E32CC888[v20])(&v66, &v76);
    return (uint64_t)v29;
  }
  return result;
}

uint64_t WebCore::JSPeriodicWave::destroy(uint64_t this, JSC::JSCell *a2)
{
  uint64_t v2;
  uint64_t v3;
  WTF ***v4;
  uint64_t v5;
  WTF **v6;
  void *v7;
  WTF *v8;

  v2 = *(_QWORD *)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = *(unsigned int *)(v2 + 36);
      if ((_DWORD)v3)
      {
        v4 = *(WTF ****)(v2 + 24);
        v5 = 8 * v3;
        do
        {
          v6 = *v4;
          *v4 = 0;
          if (v6)
          {
            WTF::fastAlignedFree(*v6, a2);
            WTF::fastFree((WTF *)v6, v7);
          }
          ++v4;
          v5 -= 8;
        }
        while (v5);
      }
      v8 = *(WTF **)(v2 + 24);
      if (v8)
      {
        *(_QWORD *)(v2 + 24) = 0;
        *(_DWORD *)(v2 + 32) = 0;
        WTF::fastFree(v8, a2);
      }
      return WTF::fastFree((WTF *)v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSPeriodicWave::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPeriodicWavePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPeriodicWavePrototype::create(WebCore::JSPeriodicWavePrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSPeriodicWave::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSPeriodicWavePrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPeriodicWave>,(WebCore::DOMConstructorID)263>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2104);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructor<WebCore::JSPeriodicWave>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000001, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSPeriodicWave::s_info + ~((_QWORD)&WebCore::JSPeriodicWave::s_info << 32)) ^ (((unint64_t)&WebCore::JSPeriodicWave::s_info + ~((_QWORD)&WebCore::JSPeriodicWave::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSPeriodicWave::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSPeriodicWave::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSPeriodicWavePrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSPeriodicWavePrototype::create((WebCore::JSPeriodicWavePrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSPeriodicWave::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSPeriodicWave::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2104) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPeriodicWaveConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPeriodicWavePrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPeriodicWave>,(WebCore::DOMConstructorID)263>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSPeriodicWaveOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSPeriodicWaveOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v24;
  WTF ***v25;
  uint64_t v26;
  WTF **v27;
  void *v28;
  WTF *v29;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = (~(v3 << 32) + v3) ^ ((unint64_t)(~(v3 << 32) + v3) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_QWORD *)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_QWORD *)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = *(unsigned int *)(v3 + 36);
    if ((_DWORD)v24)
    {
      v25 = *(WTF ****)(v3 + 24);
      v26 = 8 * v24;
      do
      {
        v27 = *v25;
        *v25 = 0;
        if (v27)
        {
          WTF::fastAlignedFree(*v27, a2);
          WTF::fastFree((WTF *)v27, v28);
        }
        ++v25;
        v26 -= 8;
      }
      while (v26);
    }
    v29 = *(WTF **)(v3 + 24);
    if (v29)
    {
      *(_QWORD *)(v3 + 24) = 0;
      *(_DWORD *)(v3 + 32) = 0;
      WTF::fastFree(v29, a2);
    }
    WTF::fastFree((WTF *)v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::createWrapper<WebCore::PeriodicWave,WebCore::PeriodicWave>(uint64_t a1, WTF **a2)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v16;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  WTF *v30;
  uint64_t v31;
  uint64_t v32;
  WTF *v33;
  void *v34;
  int v35;
  unint64_t SlowCase;
  WTF *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *Allocator;
  unint64_t v43;
  _QWORD *v44;
  WTF *v45;

  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 3296);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSPeriodicWave::s_info + ~((_QWORD)&WebCore::JSPeriodicWave::s_info << 32)) ^ (((unint64_t)&WebCore::JSPeriodicWave::s_info + ~((_QWORD)&WebCore::JSPeriodicWave::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSPeriodicWave::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSPeriodicWave::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSPeriodicWavePrototype::createStructure(v14, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v18 = (JSC::JSCell *)WebCore::JSPeriodicWavePrototype::create((WebCore::JSPeriodicWavePrototype *)v14, Structure, v16, v17);
  v19 = WebCore::JSPeriodicWave::createStructure(v14, a1, v18);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSPeriodicWave::s_info);
LABEL_8:
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(v20 + 41456);
  v22 = *(_QWORD *)(v21 + 23536);
  v23 = *(_QWORD **)(v22 + 2128);
  if (v23)
    goto LABEL_28;
  v24 = *(_QWORD *)(v21 + 22648);
  if (__ldaxr((unsigned __int8 *)v24))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v24))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v24);
LABEL_13:
  v26 = *(_QWORD *)(v24 + 2824);
  if (!*(_QWORD *)(v26 + 2128))
  {
    v27 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v45, "IsoSpace T");
    v44 = 0;
    MEMORY[0x19AEA3204](v27, &v45, v20 + 192, v20 + 1872, 32, 8, &v44);
    v29 = (uint64_t)v44;
    v44 = 0;
    if (v29)
      (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
    v30 = v45;
    v45 = 0;
    if (v30)
    {
      if (*(_DWORD *)v30 == 1)
        WTF::fastFree(v30, v28);
      else
        --*(_DWORD *)v30;
    }
    v31 = *(_QWORD *)(v26 + 2128);
    *(_QWORD *)(v26 + 2128) = v27;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  }
  v23 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v32 = *(_QWORD *)(v22 + 2128);
  *(_QWORD *)(v22 + 2128) = v23;
  if (v32)
  {
    v33 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v33, v34);
  }
  v35 = __ldxr((unsigned __int8 *)v24);
  if (v35 != 1)
  {
    __clrex();
    goto LABEL_27;
  }
  if (__stlxr(0, (unsigned __int8 *)v24))
LABEL_27:
    WTF::Lock::unlockSlow((WTF::Lock *)v24);
LABEL_28:
  SlowCase = v23[3];
  if (SlowCase < v23[4])
  {
LABEL_29:
    v23[3] = SlowCase + 32;
    goto LABEL_30;
  }
  SlowCase = v23[5];
  if ((SlowCase & 1) == 0)
  {
    v43 = *(_QWORD *)(SlowCase + 8) ^ v23[6];
    v23[4] = SlowCase + HIDWORD(v43);
    v23[5] = SlowCase + (int)v43;
    goto LABEL_29;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_30:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  v37 = *a2;
  *a2 = 0;
  *(_QWORD *)(SlowCase + 24) = v37;
  if (*(_BYTE *)(v20 + 755))
    __dmb(0xAu);
  v38 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE336408 & 1) == 0)
  {
    qword_1EE336400 = (uint64_t)&off_1E32C92E0;
    byte_1EE336408 = 1;
  }
  v45 = v4;
  if ((SlowCase & 8) != 0)
    v39 = (SlowCase - 112) | 1;
  else
    v39 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v39 & 1) != 0)
    v40 = v39 + 47;
  else
    v40 = *(_QWORD *)v39 + 32;
  Allocator = *(_QWORD **)(v40 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v40 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE336400;
  Allocator[2] = v38;
  v44 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v38 + 32), (uint64_t *)&v45, (uint64_t *)&v44);
  if (v44)
    v44[1] = 3;
  return SlowCase;
}

unint64_t WebCore::wrap<WebCore::PeriodicWave>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  WTF *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  WTF *v14;
  uint64_t v16;
  WTF ***v17;
  uint64_t v18;
  WTF **v19;
  void *v20;
  WTF *v21;
  WTF *v22;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 - 8);
    v5 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(WTF **)(v3 + 16 * v8);
    if (v9 == a3)
    {
LABEL_6:
      v11 = *(_QWORD *)(v3 + 16 * v8 + 8);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 8) & 3) == 0)
        {
          v12 = *(_QWORD *)v11;
          if (*(_QWORD *)v11)
            return v12;
        }
      }
    }
    else
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(WTF **)(v3 + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v22 = a3;
  v12 = WebCore::createWrapper<WebCore::PeriodicWave,WebCore::PeriodicWave>(a2, &v22);
  v14 = v22;
  if (v22)
  {
    if (*(_DWORD *)v22 == 1)
    {
      v16 = *((unsigned int *)v22 + 9);
      if ((_DWORD)v16)
      {
        v17 = (WTF ***)*((_QWORD *)v22 + 3);
        v18 = 8 * v16;
        do
        {
          v19 = *v17;
          *v17 = 0;
          if (v19)
          {
            WTF::fastAlignedFree(*v19, v13);
            WTF::fastFree((WTF *)v19, v20);
          }
          ++v17;
          v18 -= 8;
        }
        while (v18);
      }
      v21 = (WTF *)*((_QWORD *)v14 + 3);
      if (v21)
      {
        *((_QWORD *)v14 + 3) = 0;
        *((_DWORD *)v14 + 8) = 0;
        WTF::fastFree(v21, v13);
      }
      WTF::fastFree(v14, v13);
    }
    else
    {
      --*(_DWORD *)v22;
    }
  }
  return v12;
}

JSC::JSGlobalObject *WebCore::convertDictionary<WebCore::PeriodicWaveOptions>@<X0>(JSC::JSCell *this@<X1>, JSC::JSGlobalObject *result@<X0>, uint64_t a3@<X8>)
{
  uint64_t v3;
  JSC::VM *v5;
  BOOL v6;
  int v7;
  WTF *v8;
  JSC::JSGlobalObject *v9;
  uint64_t Object;
  JSC::Structure *v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  JSC::VM *v14;
  double v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;
  uint64_t v23;
  BOOL v24;
  int v25;
  uint64_t v26;
  int *v27;
  int v28;
  WTF *v29;
  uint64_t v30;
  unsigned int v31;
  JSC::VM *v32;
  char v33;

  v5 = (JSC::VM *)*((_QWORD *)result + 7);
  v32 = v5;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v6 = 0;
    v7 = 0;
    v8 = 0;
    goto LABEL_29;
  }
  v9 = result;
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = (JSC::JSGlobalObject *)JSC::throwTypeError();
LABEL_43:
    *(_DWORD *)(a3 + 56) = 1;
    return result;
  }
  v11 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v13 = JSC::JSObject::get(v11, v9, (unint64_t)v29);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v12);
    else
      *(_DWORD *)v29 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = (JSC::JSGlobalObject *)JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_43;
  }
  if (v13 == 10)
  {
    v6 = 0;
    goto LABEL_16;
  }
  v14 = (JSC::VM *)*((_QWORD *)v9 + 7);
  if (v13 >= 0xFFFE000000000000)
  {
    v24 = (_DWORD)v13 == 0;
    goto LABEL_71;
  }
  *(_QWORD *)&v15 = v13 - 0x2000000000000;
  if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v13 & 0xFFFE000000000002) != 0)
    {
      v6 = v13 == 7;
      goto LABEL_15;
    }
    v25 = *(unsigned __int8 *)(v13 + 5);
    if (v25 == 3)
    {
      v28 = *(_DWORD *)(v13 + 8);
    }
    else
    {
      if (v25 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v6 = 1;
          goto LABEL_15;
        }
        v24 = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)v9;
        goto LABEL_71;
      }
      v26 = *(_QWORD *)(v13 + 8);
      if ((v26 & 1) != 0)
        v27 = (int *)(v13 + 16);
      else
        v27 = (int *)(v26 + 4);
      v28 = *v27;
    }
    v24 = v28 == 0;
LABEL_71:
    v6 = !v24;
    goto LABEL_15;
  }
  v6 = v15 > 0.0 || v15 < 0.0;
LABEL_15:
  if (*((_DWORD *)v14 + 20))
  {
    result = (JSC::JSGlobalObject *)JSC::VM::hasExceptionsAfterHandlingTraps(v14);
    if ((_DWORD)result)
      goto LABEL_43;
  }
LABEL_16:
  WTF::AtomStringImpl::addLiteral();
  v17 = JSC::JSObject::get(v11, v9, (unint64_t)v29);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v16);
    else
      *(_DWORD *)v29 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = (JSC::JSGlobalObject *)JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_43;
  }
  if (v17 == 10)
  {
    v7 = 0;
    v8 = 0;
    goto LABEL_24;
  }
  result = (JSC::JSGlobalObject *)WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLFloat>>::convert(v17, v9, (uint64_t)&v29);
  v18 = v31;
  if (!v31)
  {
    v8 = v29;
    v3 = v30;
    v29 = 0;
    v30 = 0;
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIfLm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJSC_SE_EEEEEEDcSI_DpT0_((uint64_t)&v33, &v29);
    v7 = 1;
LABEL_24:
    WTF::AtomStringImpl::addLiteral();
    v19 = v29;
    result = (JSC::JSGlobalObject *)JSC::JSObject::get(v11, v9, (unint64_t)v29);
    v20 = (uint64_t)result;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        result = (JSC::JSGlobalObject *)WTF::StringImpl::destroy(v19, this);
      else
        *(_DWORD *)v19 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = (JSC::JSGlobalObject *)JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
      {
        *(_DWORD *)(a3 + 56) = 1;
LABEL_35:
        if (v7)
        {
          if (v8)
            return (JSC::JSGlobalObject *)WTF::fastFree(v8, this);
        }
        return result;
      }
    }
    if (v20 != 10)
    {
      result = (JSC::JSGlobalObject *)WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLFloat>>::convert(v20, v9, (uint64_t)&v29);
      v21 = v31;
      if (v31)
      {
        *(_DWORD *)(a3 + 56) = 1;
        if ((_DWORD)v21 != -1)
          result = (JSC::JSGlobalObject *)((uint64_t (*)(char *, WTF **))off_1E32CC8C0[v21])(&v33, &v29);
        goto LABEL_35;
      }
      v22 = v29;
      v23 = v30;
      v29 = 0;
      v30 = 0;
      result = _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIfLm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJSC_SE_EEEEEEDcSI_DpT0_((uint64_t)&v33, &v29);
      *(_BYTE *)a3 = v6;
      *(_QWORD *)(a3 + 8) = v22;
      *(_QWORD *)(a3 + 16) = v23;
      *(_BYTE *)(a3 + 24) = 1;
      goto LABEL_32;
    }
LABEL_29:
    *(_BYTE *)a3 = v6;
    *(_BYTE *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 24) = 0;
LABEL_32:
    *(_BYTE *)(a3 + 32) = 0;
    *(_BYTE *)(a3 + 48) = 0;
    if (v7)
    {
      *(_QWORD *)(a3 + 32) = v8;
      *(_QWORD *)(a3 + 40) = v3;
      *(_BYTE *)(a3 + 48) = 1;
      v8 = 0;
    }
    *(_DWORD *)(a3 + 56) = 0;
    goto LABEL_35;
  }
  *(_DWORD *)(a3 + 56) = 1;
  if ((_DWORD)v18 != -1)
    return (JSC::JSGlobalObject *)((uint64_t (*)(char *, WTF **))off_1E32CC8C0[v18])(&v33, &v29);
  return result;
}

uint64_t WebCore::convertDictionary<WebCore::PermissionDescriptor>@<X0>(JSC::JSCell *this@<X1>, JSC::VM **a2@<X0>, uint64_t a3@<X8>)
{
  uint64_t Object;
  JSC::Structure *v6;
  WTF::StringImpl *v7;
  unint64_t v8;
  uint64_t result;
  int v10;
  JSC::VM *v11;
  unsigned __int16 v12;
  JSC::VM *v13;
  WTF::StringImpl *v14;

  v13 = a2[7];
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)this & 0xFFFE000000000002) == 0)
    {
      Object = JSC::JSCell::getObject(this);
      if (Object)
      {
        v6 = (JSC::Structure *)Object;
        WTF::AtomStringImpl::addLiteral();
        v8 = JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v14);
        if (v14)
        {
          if (*(_DWORD *)v14 == 2)
            WTF::StringImpl::destroy(v14, v7);
          else
            *(_DWORD *)v14 -= 2;
        }
        if (*((_DWORD *)v13 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v13);
          if ((result & 1) != 0)
            goto LABEL_10;
        }
        if (v8 == 10)
          goto LABEL_9;
        v11 = a2[7];
        result = WebCore::parseEnumeration<WebCore::PermissionName>((JSC::JSGlobalObject *)a2, v8);
        v12 = result;
        if (*((_DWORD *)v11 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v11);
          if ((result & 1) != 0)
            goto LABEL_10;
        }
        if (v12 > 0xFFu)
        {
          v10 = 0;
          *(_BYTE *)a3 = v12;
          goto LABEL_14;
        }
      }
    }
    result = JSC::throwTypeError();
    goto LABEL_10;
  }
LABEL_9:
  result = (uint64_t)WebCore::throwRequiredMemberTypeError((int)a2, (int)&v13, "name", 5, "PermissionDescriptor", 21, "PermissionName", 15);
LABEL_10:
  v10 = 1;
LABEL_14:
  *(_DWORD *)(a3 + 4) = v10;
  return result;
}

uint64_t WebCore::parseEnumeration<WebCore::PermissionName>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  const char *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  int v13;
  BOOL v14;
  char **v15;
  char v16;
  int v18;
  int v19;
  uint16x8_t v20;
  uint16x8_t v21;
  uint16x8_t v23;
  uint16x8_t v24;
  uint16x8_t v25;
  uint16x8_t v26;
  uint16x8_t v27;
  uint16x8_t v28;
  uint16x8_t v29;
  uint16x8_t v30;
  BOOL v32;
  uint16x8_t v34;
  uint16x8_t v35;
  uint16x8_t v36;
  uint16x8_t v37;
  uint16x8_t v38;
  uint16x8_t v39;
  uint16x8_t v40;
  uint16x8_t v41;
  uint16x8_t v42;
  uint16x8_t v43;
  uint64_t v44;
  unint64_t v45;

  v3 = a1;
  v45 = this;
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v45, a1);
    v4 = v44;
    if (v44)
      goto LABEL_7;
LABEL_66:
    v18 = 0;
    v19 = 0;
    return v18 | (v19 << 8);
  }
  v4 = *(_QWORD *)(this + 8);
  if ((v4 & 1) == 0)
  {
    if (!v4)
      goto LABEL_6;
    goto LABEL_5;
  }
  v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
  if (v4)
LABEL_5:
    *(_DWORD *)v4 += 2;
LABEL_6:
  if (!v4)
    goto LABEL_66;
LABEL_7:
  v5 = *(const char **)(v4 + 8);
  v6 = *(_DWORD *)(v4 + 4);
  v7 = ((unint64_t)*(unsigned int *)(v4 + 16) >> 2) & 1;
  v8 = v7 << 32;
  v9 = v6 != 13;
  if (v5 != "accelerometer" && v6 == 13)
  {
    if ((_DWORD)v7)
    {
      if (*v5 != 97 || *(_QWORD *)(v5 + 1) != 0x6D6F72656C656363 || *(_QWORD *)(v5 + 5) != 0x726574656D6F7265)
        goto LABEL_13;
    }
    else
    {
      if (*(_WORD *)v5 != 97)
      {
LABEL_13:
        v9 = 0;
        v10 = 0;
LABEL_14:
        v11 = 0;
        v12 = 1;
        v13 = 13;
        v14 = 1;
        goto LABEL_15;
      }
      v20 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968C0500);
      v20.i16[0] = vminvq_u16(v20);
      v10 = v20.i8[0];
      if (!v20.i32[0]
        || (v21 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 10), (int16x8_t)xmmword_1968C0510),
            v21.i16[0] = vminvq_u16(v21),
            v10 = v21.i8[0],
            !v21.i32[0]))
      {
        v9 = 0;
        goto LABEL_14;
      }
    }
LABEL_70:
    v15 = &WebCore::parseEnumerationFromString<WebCore::PermissionName>(WTF::String const&)::mappings;
    goto LABEL_71;
  }
  if (v5 == "accelerometer" && v6 == 13)
    goto LABEL_70;
  v10 = v6 == 16;
  v12 = v6 != 16;
  if (v5 != "background-fetch" && v6 == 16)
  {
    if ((_DWORD)v7)
    {
      if (*v5 == 98 && *(_QWORD *)(v5 + 1) == 0x6E756F72676B6361 && *((_QWORD *)v5 + 1) == 0x68637465662D646ELL)
      {
LABEL_44:
        v15 = &off_1E32C8238;
        goto LABEL_71;
      }
    }
    else if (*(_WORD *)v5 == 98)
    {
      v27 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968A4520);
      v27.i16[0] = vminvq_u16(v27);
      v12 = v27.i8[0];
      if (v27.i32[0])
      {
        v28 = (uint16x8_t)vceqq_s16(*((int16x8_t *)v5 + 1), (int16x8_t)xmmword_1968C0520);
        v28.i16[0] = vminvq_u16(v28);
        v12 = v28.i8[0];
        if (v28.i32[0])
          goto LABEL_44;
      }
LABEL_93:
      v11 = 0;
      v14 = 1;
      v13 = 16;
      goto LABEL_15;
    }
    v12 = 0;
    goto LABEL_93;
  }
  if (v5 == "background-fetch" && v6 == 16)
    goto LABEL_44;
  v32 = v6 != 9;
  if (v5 == "bluetooth" || v6 != 9)
  {
    if (v5 == "bluetooth" && v6 == 9)
      goto LABEL_115;
    if (v5 == "camera" || v6 != 6)
    {
      if (v5 != "camera" || v6 != 6)
      {
        if (v5 == "display-capture" || v6 != 15)
        {
          if (v5 != "display-capture" || v6 != 15)
          {
            if (v5 == "geolocation" || v6 != 11)
            {
              v13 = *(_DWORD *)(v4 + 4);
              if (v5 != "geolocation" || v6 != 11)
                goto LABEL_127;
            }
            else if ((_DWORD)v7)
            {
              if (*v5 != 103
                || *(_QWORD *)(v5 + 1) != 0x697461636F6C6F65
                || *(_QWORD *)(v5 + 3) != 0x6E6F697461636F6CLL)
              {
                v13 = 11;
                goto LABEL_126;
              }
            }
            else if (*(_WORD *)v5 != 103
                   || (v42 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968C0560),
                       v42.i16[0] = vminvq_u16(v42),
                       !v42.i32[0])
                   || (v43 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 6), (int16x8_t)xmmword_1968C0570),
                       v43.i16[0] = vminvq_u16(v43),
                       !v43.i32[0]))
            {
              v13 = 11;
              goto LABEL_127;
            }
            v15 = &off_1E32C8298;
            goto LABEL_71;
          }
        }
        else if ((_DWORD)v7)
        {
          if (*v5 != 100 || *(_QWORD *)(v5 + 1) != 0x632D79616C707369 || *(_QWORD *)(v5 + 7) != 0x657275747061632DLL)
          {
            v13 = 15;
            goto LABEL_126;
          }
        }
        else if (*(_WORD *)v5 != 100
               || (v40 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968C0540),
                   v40.i16[0] = vminvq_u16(v40),
                   !v40.i32[0])
               || (v41 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 14), (int16x8_t)xmmword_1968C0550),
                   v41.i16[0] = vminvq_u16(v41),
                   !v41.i32[0]))
        {
          v13 = 15;
          goto LABEL_127;
        }
        v15 = &off_1E32C8280;
        goto LABEL_71;
      }
    }
    else if ((_DWORD)v7)
    {
      if (*v5 != 99 || *(_DWORD *)(v5 + 1) != 1919249761 || *(_DWORD *)(v5 + 2) != 1634887021)
      {
        v13 = 6;
LABEL_126:
        v8 = 0x100000000;
        goto LABEL_127;
      }
    }
    else
    {
      if (*(_WORD *)v5 != 99)
      {
        v13 = 6;
        goto LABEL_127;
      }
      v13 = 6;
      if (*(_QWORD *)(v5 + 2) != 0x720065006D0061 || *(_QWORD *)(v5 + 4) != 0x6100720065006DLL)
        goto LABEL_127;
    }
    v15 = &off_1E32C8268;
    goto LABEL_71;
  }
  if ((_DWORD)v7)
  {
    if (*v5 == 98 && *(_DWORD *)(v5 + 1) == 1952806252 && *(_DWORD *)(v5 + 5) == 1752461167)
    {
LABEL_115:
      v15 = &off_1E32C8250;
      goto LABEL_71;
    }
    v32 = 0;
    v13 = 9;
    goto LABEL_126;
  }
  if (*(_WORD *)v5 == 98)
  {
    v34 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968C0530);
    v34.i16[0] = vminvq_u16(v34);
    if (v34.i32[0])
      goto LABEL_115;
  }
  v32 = 0;
  v13 = 9;
LABEL_127:
  if (v5 == "gyroscope" || v32)
  {
    if (v5 == "gyroscope" && v6 == 9)
      goto LABEL_134;
  }
  else
  {
    if (!v13)
    {
LABEL_134:
      v15 = &off_1E32C82B0;
      goto LABEL_71;
    }
    if ((v8 & 0x100000000) != 0)
    {
      if (*v5 == 103 && *(_DWORD *)(v5 + 1) == 1936683641 && *(_DWORD *)(v5 + 5) == 1701867363)
        goto LABEL_134;
      v8 = 0x100000000;
    }
    else if (*(_WORD *)v5 == 103)
    {
      v35 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968C0580);
      v35.i16[0] = vminvq_u16(v35);
      if (v35.i32[0])
        goto LABEL_134;
    }
  }
  if (v5 != "magnetometer" && v13 == 12)
  {
    if ((v8 & 0x100000000) == 0)
    {
      if (*(_WORD *)v5 != 109
        || (v36 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968C0590),
            v36.i16[0] = vminvq_u16(v36),
            !v36.i32[0])
        || (v37 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 8), (int16x8_t)xmmword_1968C05A0),
            v37.i16[0] = vminvq_u16(v37),
            !v37.i32[0]))
      {
        v11 = 0;
        v14 = 1;
        v13 = 12;
        goto LABEL_15;
      }
LABEL_142:
      v15 = &off_1E32C82C8;
      goto LABEL_71;
    }
    if (*v5 == 109 && *(_QWORD *)(v5 + 1) == 0x656D6F74656E6761 && *(_QWORD *)(v5 + 4) == 0x726574656D6F7465)
      goto LABEL_142;
    v11 = 0;
    v14 = 1;
    v13 = 12;
LABEL_144:
    v8 = 0x100000000;
    goto LABEL_15;
  }
  if (v5 == "magnetometer" && v13 == 12)
    goto LABEL_142;
  if (v5 != "microphone" && v13 == 10)
  {
    if ((v8 & 0x100000000) != 0)
    {
      if (*v5 != 109 || *(_QWORD *)(v5 + 1) != 0x6E6F68706F726369 || *(_QWORD *)(v5 + 2) != 0x656E6F68706F7263)
      {
        v11 = 0;
        v14 = 1;
        v13 = 10;
        goto LABEL_144;
      }
    }
    else if (*(_WORD *)v5 != 109
           || (v38 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968C05B0),
               v38.i16[0] = vminvq_u16(v38),
               !v38.i32[0])
           || (v39 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 4), (int16x8_t)xmmword_1968C05C0),
               v39.i16[0] = vminvq_u16(v39),
               !v39.i32[0]))
    {
      v11 = 0;
      v14 = 1;
      v13 = 10;
      goto LABEL_15;
    }
LABEL_224:
    v15 = &off_1E32C82E0;
    goto LABEL_71;
  }
  if (v5 == "microphone" && v13 == 10)
    goto LABEL_224;
  v11 = v13 == 4;
  v14 = v13 != 4;
  if (v5 == "midi" || v13 != 4)
  {
    if (v5 == "midi" && v13 == 4)
      goto LABEL_232;
    if (v5 == "nfc" || v13 != 3)
    {
      if (v5 != "nfc" || v13 != 3)
        goto LABEL_15;
    }
    else if ((v8 & 0x100000000) != 0)
    {
      if (*v5 != 110 || *(_WORD *)(v5 + 1) != 25446)
      {
        v13 = 3;
        goto LABEL_144;
      }
    }
    else if (*(_WORD *)v5 != 110 || *(_DWORD *)(v5 + 2) != 6488166)
    {
      v13 = 3;
      goto LABEL_15;
    }
    v15 = &off_1E32C8310;
    goto LABEL_71;
  }
  if ((v8 & 0x100000000) != 0)
  {
    if (*v5 != 109 || *(_WORD *)(v5 + 1) != 25705 || *((_WORD *)v5 + 1) != 26980)
    {
      v14 = 0;
      v13 = 4;
      goto LABEL_144;
    }
LABEL_232:
    v15 = &off_1E32C82F8;
    goto LABEL_71;
  }
  if (*(_WORD *)v5 != 109)
  {
    v14 = 0;
    v13 = 4;
    goto LABEL_15;
  }
  v14 = 0;
  v13 = 4;
  if (*(_DWORD *)(v5 + 2) == 6553705 && *((_DWORD *)v5 + 1) == 6881380)
    goto LABEL_232;
LABEL_15:
  if (v5 == "notifications" || v9)
  {
    if (v5 == "notifications" && v6 == 13)
      goto LABEL_22;
  }
  else
  {
    if (!v13)
    {
LABEL_22:
      v15 = &off_1E32C8328;
LABEL_71:
      v18 = *((unsigned __int8 *)v15 + 16);
      v19 = 1;
      goto LABEL_72;
    }
    if ((v8 & 0x100000000) != 0)
    {
      if (*v5 == 110 && *(_QWORD *)(v5 + 1) == 0x746163696669746FLL && *(_QWORD *)(v5 + 5) == 0x736E6F6974616369)
        goto LABEL_22;
      v8 = 0x100000000;
    }
    else if (*(_WORD *)v5 == 110)
    {
      v23 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968C05D0);
      v23.i16[0] = vminvq_u16(v23);
      if (v23.i32[0])
      {
        v24 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 10), (int16x8_t)xmmword_1968C05E0);
        v24.i16[0] = vminvq_u16(v24);
        if (v24.i32[0])
          goto LABEL_22;
      }
    }
  }
  v16 = v5 == "push" || v14;
  if ((v16 & 1) != 0)
  {
    if (v5 == "push" && v11)
      goto LABEL_33;
  }
  else
  {
    if (!v13)
    {
LABEL_33:
      v15 = &off_1E32C8340;
      goto LABEL_71;
    }
    if ((v8 & 0x100000000) != 0)
    {
      if (*v5 == 112 && *(_WORD *)(v5 + 1) == 29557 && *((_WORD *)v5 + 1) == 26739)
        goto LABEL_33;
      v8 = 0x100000000;
    }
    else if (*(_WORD *)v5 == 112 && *(_DWORD *)(v5 + 2) == 7536757 && *((_DWORD *)v5 + 1) == 6815859)
    {
      goto LABEL_33;
    }
  }
  if (v5 == "screen-wake-lock")
    v12 = 1;
  if (v12)
  {
    if (v5 != "screen-wake-lock")
      v10 = 0;
    if (v10)
      goto LABEL_54;
  }
  else
  {
    if (!v13)
    {
LABEL_54:
      v15 = &off_1E32C8358;
      goto LABEL_71;
    }
    if ((v8 & 0x100000000) != 0)
    {
      if (*v5 == 115 && *(_QWORD *)(v5 + 1) == 0x61772D6E65657263 && *((_QWORD *)v5 + 1) == 0x6B636F6C2D656B61)
        goto LABEL_54;
      v8 = 0x100000000;
    }
    else if (*(_WORD *)v5 == 115)
    {
      v25 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968C05F0);
      v25.i16[0] = vminvq_u16(v25);
      if (v25.i32[0])
      {
        v26 = (uint16x8_t)vceqq_s16(*((int16x8_t *)v5 + 1), (int16x8_t)xmmword_1968C0600);
        v26.i16[0] = vminvq_u16(v26);
        if (v26.i32[0])
          goto LABEL_54;
      }
    }
  }
  if (v5 == "speaker-selection" || v13 != 17)
  {
    if (v13 == 17 && v5 == "speaker-selection")
      goto LABEL_64;
  }
  else if ((v8 & 0x100000000) != 0)
  {
    if (*v5 == 115 && *(_QWORD *)(v5 + 1) == 0x732D72656B616570 && *(_QWORD *)(v5 + 9) == 0x6E6F697463656C65)
    {
LABEL_64:
      v15 = &off_1E32C8370;
      goto LABEL_71;
    }
  }
  else if (*(_WORD *)v5 == 115)
  {
    v29 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968C0610);
    v29.i16[0] = vminvq_u16(v29);
    if (v29.i32[0])
    {
      v30 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 18), (int16x8_t)xmmword_1968A37A0);
      v30.i16[0] = vminvq_u16(v30);
      if (v30.i32[0])
        goto LABEL_64;
    }
  }
  v19 = 0;
  v18 = 0;
LABEL_72:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v18 | (v19 << 8);
}

uint64_t WebCore::JSPermissionStatus::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24) - 32);
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPermissionStatusPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPermissionStatusPrototype::create(WebCore::JSPermissionStatusPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSPermissionStatus::s_info, &WebCore::JSPermissionStatusPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPermissionStatus>,(WebCore::DOMConstructorID)182>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1456);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPermissionStatus>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPermissionStatus::s_info + ~((_QWORD)&WebCore::JSPermissionStatus::s_info << 32)) ^ (((unint64_t)&WebCore::JSPermissionStatus::s_info + ~((_QWORD)&WebCore::JSPermissionStatus::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPermissionStatus::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPermissionStatus::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPermissionStatusPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSPermissionStatusPrototype::create((WebCore::JSPermissionStatusPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSPermissionStatus::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSPermissionStatus::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1456) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPermissionStatusConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPermissionStatusPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPermissionStatus>,(WebCore::DOMConstructorID)182>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPermissionStatus_state(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(unsigned __int8 *)(*((_QWORD *)a2 + 3) + 24);
  if ((byte_1EE33633B & 1) == 0)
  {
    dword_1ECE793E0 += 2;
    byte_1EE33633B = 1;
    dword_1ECE79400 += 2;
    qword_1EE336450 = (uint64_t)&dword_1ECE793E0;
    unk_1EE336458 = &dword_1ECE79400;
    dword_1ECE79420 += 2;
    qword_1EE336460 = (uint64_t)&dword_1ECE79420;
  }
  v5 = *(_QWORD *)&_MergedGlobals_827[8 * v4 + 280];
  if (!v5)
    return *v3;
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_6:
      v8 = *(_QWORD *)(v2 + 64760);
      if (!v8 || v5 != *(_QWORD *)(v8 + 8))
      {
        v8 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_9;
    }
    v10 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_6;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v3;
  }
LABEL_9:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
  return v8;
}

uint64_t WebCore::jsPermissionStatus_name(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;

  v2 = *(unsigned __int8 *)(*((_QWORD *)a2 + 3) + 25);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = (uint64_t *)(v3 + 41968);
  if ((byte_1EE33633A & 1) == 0)
  {
    dword_1ECE79200 += 2;
    dword_1ECE79220 += 2;
    qword_1EE336488 = (uint64_t)&dword_1ECE79200;
    unk_1EE336490 = &dword_1ECE79220;
    dword_1ECE79240 += 2;
    dword_1ECE79260 += 2;
    qword_1EE336498 = (uint64_t)&dword_1ECE79240;
    unk_1EE3364A0 = &dword_1ECE79260;
    dword_1ECE79280 += 2;
    dword_1ECE792A0 += 2;
    qword_1EE3364A8 = (uint64_t)&dword_1ECE79280;
    unk_1EE3364B0 = &dword_1ECE792A0;
    dword_1ECE792C0 += 2;
    dword_1ECE792E0 += 2;
    qword_1EE3364B8 = (uint64_t)&dword_1ECE792C0;
    unk_1EE3364C0 = &dword_1ECE792E0;
    dword_1ECE79300 += 2;
    dword_1ECE79320 += 2;
    qword_1EE3364C8 = (uint64_t)&dword_1ECE79300;
    unk_1EE3364D0 = &dword_1ECE79320;
    dword_1ECE79340 += 2;
    dword_1ECE79360 += 2;
    qword_1EE3364D8 = (uint64_t)&dword_1ECE79340;
    unk_1EE3364E0 = &dword_1ECE79360;
    dword_1ECE79380 += 2;
    dword_1ECE793A0 += 2;
    qword_1EE3364E8 = (uint64_t)&dword_1ECE79380;
    unk_1EE3364F0 = &dword_1ECE793A0;
    dword_1ECE793C0 += 2;
    qword_1EE3364F8 = (uint64_t)&dword_1ECE793C0;
    byte_1EE33633A = 1;
  }
  v5 = *(_QWORD *)&_MergedGlobals_827[8 * v2 + 336];
  if (!v5)
    return *v4;
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_6:
      v8 = *(_QWORD *)(v3 + 64760);
      if (!v8 || v5 != *(_QWORD *)(v8 + 8))
      {
        v8 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_9;
    }
    v10 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_6;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v3 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v4;
  }
LABEL_9:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
  return v8;
}

uint64_t WebCore::jsPermissionStatus_onchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  bmalloc::api *v24;
  void *v25;
  uint64_t v27;
  _QWORD *v28;

  v5 = *(WebCore **)(a2 + 24);
  v6 = *((_QWORD *)v5 - 1);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v6))
  {
    goto LABEL_5;
  }
  a1 = (WebCore *)MEMORY[0x19AEA534C](v6);
LABEL_5:
  ++*(_QWORD *)(v6 + 8);
  v8 = __ldxr((unsigned __int8 *)v6);
  if (v8 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      goto LABEL_10;
  }
  else
  {
    __clrex();
  }
  a1 = (WebCore *)WTF::Lock::unlockSlow((WTF::Lock *)v6);
LABEL_10:
  v9 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v9 || (v10 = *(_QWORD *)(v9 + 96)) == 0)
    v10 = WebCore::threadGlobalDataSlow(a1);
  v11 = *(_QWORD *)(v10 + 40);
  if (!v11)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v10);
    v11 = *(_QWORD *)(v10 + 40);
  }
  v13 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v11 + 368), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  v14 = *((_QWORD *)v5 - 1);
  if (__ldaxr((unsigned __int8 *)v14))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v14))
  {
    goto LABEL_19;
  }
  MEMORY[0x19AEA534C](v14);
LABEL_19:
  v16 = *(_QWORD *)(v14 + 8);
  v17 = v16 - 1;
  *(_QWORD *)(v14 + 8) = v16 - 1;
  if (v16 == 1)
  {
    v27 = *(_QWORD *)(v14 + 16);
    v18 = *(_QWORD **)(v14 + 24);
    *(_QWORD *)(v14 + 24) = 0;
    v19 = v27 != 0;
  }
  else
  {
    v18 = 0;
    v19 = 1;
  }
  v20 = __ldxr((unsigned __int8 *)v14);
  if (v20 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v14))
    {
      if (v17)
        return v13;
      goto LABEL_27;
    }
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v14);
  if (v17)
    return v13;
LABEL_27:
  if (v18)
  {
    v21 = v18[8];
    if (v21)
    {
      v22 = (_QWORD *)WTF::fastMalloc((WTF *)0x10);
      *v22 = off_1E33651B8;
      v22[1] = v21;
      v28 = v22;
      WTF::callOnMainThread();
      if (v28)
        (*(void (**)(_QWORD *))(*v28 + 8))(v28);
    }
    WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)(v18 + 4), v12);
    WebCore::ActiveDOMObject::~ActiveDOMObject((WebCore::ActiveDOMObject *)v18, v23);
    bmalloc::api::isoDeallocate(v24, v25);
  }
  if (!v19)
    WTF::fastFree((WTF *)v14, v12);
  return v13;
}

uint64_t WebCore::setJSPermissionStatus_onchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  int v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  bmalloc::api *v29;
  void *v30;
  uint64_t v32;
  _QWORD *v33;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPermissionStatus::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPermissionStatus::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::EventTarget **)(a2 + 24);
  v12 = *((_QWORD *)v11 - 1);
  if (__ldaxr((unsigned __int8 *)v12))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v12))
  {
    goto LABEL_16;
  }
  a1 = (WebCore *)MEMORY[0x19AEA534C](v12);
LABEL_16:
  ++*(_QWORD *)(v12 + 8);
  v14 = __ldxr((unsigned __int8 *)v12);
  if (v14 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v12))
      goto LABEL_21;
  }
  else
  {
    __clrex();
  }
  a1 = (WebCore *)WTF::Lock::unlockSlow((WTF::Lock *)v12);
LABEL_21:
  v15 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v15 || (v16 = *(_QWORD *)(v15 + 96)) == 0)
    v16 = WebCore::threadGlobalDataSlow(a1);
  v17 = *(_QWORD *)(v16 + 40);
  if (!v17)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v16);
    v17 = *(_QWORD *)(v16 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v17 + 368), a3, (_DWORD *)a2);
  v19 = *((_QWORD *)v11 - 1);
  if (__ldaxr((unsigned __int8 *)v19))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v19))
  {
    goto LABEL_30;
  }
  MEMORY[0x19AEA534C](v19);
LABEL_30:
  v21 = *(_QWORD *)(v19 + 8);
  v22 = v21 - 1;
  *(_QWORD *)(v19 + 8) = v21 - 1;
  if (v21 == 1)
  {
    v32 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD **)(v19 + 24);
    *(_QWORD *)(v19 + 24) = 0;
    v24 = v32 != 0;
  }
  else
  {
    v23 = 0;
    v24 = 1;
  }
  v25 = __ldxr((unsigned __int8 *)v19);
  if (v25 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v19))
    {
      if (!v22)
        goto LABEL_38;
      goto LABEL_45;
    }
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v19);
  if (!v22)
  {
LABEL_38:
    if (v23)
    {
      v26 = v23[8];
      if (v26)
      {
        v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x10);
        *v27 = off_1E33651B8;
        v27[1] = v26;
        v33 = v27;
        WTF::callOnMainThread();
        if (v33)
          (*(void (**)(_QWORD *))(*v33 + 8))(v33);
      }
      WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)(v23 + 4), v18);
      WebCore::ActiveDOMObject::~ActiveDOMObject((WebCore::ActiveDOMObject *)v23, v28);
      bmalloc::api::isoDeallocate(v29, v30);
    }
    if (!v24)
      WTF::fastFree((WTF *)v19, v18);
  }
LABEL_45:
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::JSPermissionStatusOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v6 = *(_QWORD *)(v5 - 24);
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (*(_QWORD *)(v5 - 16)
    || (result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 32) + 64))(v5 - 32), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

void WebCore::JSPermissionStatusOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  int v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  bmalloc::api *v19;
  void *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v41;
  _QWORD *v42;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  if (__ldaxr((unsigned __int8 *)v5))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v5))
  {
    goto LABEL_5;
  }
  MEMORY[0x19AEA534C](v5);
LABEL_5:
  ++*(_QWORD *)(v5 + 8);
  v7 = __ldxr((unsigned __int8 *)v5);
  if (v7 != 1)
  {
    __clrex();
    goto LABEL_9;
  }
  if (__stlxr(0, (unsigned __int8 *)v5))
LABEL_9:
    WTF::Lock::unlockSlow((WTF::Lock *)v5);
  if (*(_DWORD *)(a3 + 48))
  {
    v23 = *(_QWORD *)(a3 + 32);
    v22 = (uint64_t *)(a3 + 32);
    v21 = v23;
    if (v23)
    {
      v24 = *(_DWORD *)(v21 - 8);
      v25 = ~((v4 - 32) << 32) + v4 - 32;
      v26 = (v25 ^ (v25 >> 22)) + ~((v25 ^ (v25 >> 22)) << 13);
      v27 = (9 * (v26 ^ (v26 >> 8))) ^ ((9 * (v26 ^ (v26 >> 8))) >> 15);
      v28 = v24 & (((v27 + ~(v27 << 27)) >> 31) ^ ((_DWORD)v27 + ~((_DWORD)v27 << 27)));
      v29 = *(_QWORD *)(v21 + 16 * v28);
      if (v29 != v4 - 32)
      {
        v30 = 1;
        while (v29)
        {
          v28 = ((_DWORD)v28 + v30) & v24;
          v29 = *(_QWORD *)(v21 + 16 * v28);
          ++v30;
          if (v29 == v4 - 32)
            goto LABEL_38;
        }
        v28 = *(unsigned int *)(v21 - 4);
      }
LABEL_38:
      if (v28 != *(_DWORD *)(v21 - 4))
      {
        v31 = (_QWORD *)(v21 + 16 * v28);
        *v31 = -1;
        v34 = v31[1];
        v33 = v31 + 1;
        v32 = v34;
        if (v34)
        {
          *(_QWORD *)(v32 + 8) = 3;
          *v33 = 0;
        }
        ++*(_DWORD *)(*v22 - 16);
        v35 = *v22;
        if (*v22)
          v36 = *(_DWORD *)(v35 - 12) - 1;
        else
          v36 = -1;
        *(_DWORD *)(v35 - 12) = v36;
        v37 = *v22;
        if (*v22)
        {
          v38 = 6 * *(_DWORD *)(v37 - 12);
          v39 = *(_DWORD *)(v37 - 4);
          if (v38 < v39 && v39 >= 9)
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v22, v39 >> 1, 0);
        }
      }
    }
  }
  else
  {
    v8 = *(_QWORD *)(v4 + 8);
    if (v8)
    {
      *(_QWORD *)(v8 + 8) = 3;
      *(_QWORD *)(v4 + 8) = 0;
    }
  }
  v9 = *(_QWORD *)(v4 - 8);
  if (__ldaxr((unsigned __int8 *)v9))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v9))
  {
    goto LABEL_17;
  }
  MEMORY[0x19AEA534C](v9);
LABEL_17:
  v11 = *(_QWORD *)(v9 + 8);
  v12 = v11 - 1;
  *(_QWORD *)(v9 + 8) = v11 - 1;
  if (v11 == 1)
  {
    v41 = *(_QWORD *)(v9 + 16);
    v13 = *(_QWORD **)(v9 + 24);
    *(_QWORD *)(v9 + 24) = 0;
    v14 = v41 != 0;
  }
  else
  {
    v13 = 0;
    v14 = 1;
  }
  v15 = __ldxr((unsigned __int8 *)v9);
  if (v15 != 1)
  {
    __clrex();
LABEL_24:
    WTF::Lock::unlockSlow((WTF::Lock *)v9);
    if (v12)
      return;
    goto LABEL_25;
  }
  if (__stlxr(0, (unsigned __int8 *)v9))
    goto LABEL_24;
  if (v12)
    return;
LABEL_25:
  if (v13)
  {
    v16 = v13[8];
    if (v16)
    {
      v17 = (_QWORD *)WTF::fastMalloc((WTF *)0x10);
      *v17 = off_1E33651B8;
      v17[1] = v16;
      v42 = v17;
      WTF::callOnMainThread();
      if (v42)
        (*(void (**)(_QWORD *))(*v42 + 8))(v42);
    }
    WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)(v13 + 4), a2);
    WebCore::ActiveDOMObject::~ActiveDOMObject((WebCore::ActiveDOMObject *)v13, v18);
    bmalloc::api::isoDeallocate(v19, v20);
  }
  if (!v14)
    WTF::fastFree((WTF *)v9, a2);
}

unint64_t WebCore::wrap<WebCore::PermissionStatus>(int a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char **v17;
  int v18;
  unint64_t v19;
  WebCore::JSEventTarget *v20;
  JSC::JSCell *v21;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v23;
  JSC::Structure *v24;
  JSC::JSCell *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  WTF *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  WTF *v42;
  void *v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *Allocator;
  uint64_t v49;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unsigned int v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  WebCore::JSDOMGlobalObject *v60;
  int v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  WTF *v65;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v54 = *(_QWORD *)(v5 + 32);
    if (!v54)
      goto LABEL_5;
    v55 = *(_DWORD *)(v54 - 8);
    v56 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v57 = 9 * ((v56 + ~(v56 << 13)) ^ ((v56 + ~(v56 << 13)) >> 8));
    v58 = (v57 ^ (v57 >> 15)) + ~((v57 ^ (v57 >> 15)) << 27);
    v59 = v55 & ((v58 >> 31) ^ v58);
    v60 = *(WebCore::JSDOMGlobalObject **)(v54 + 16 * v59);
    if (v60 != a3)
    {
      v61 = 1;
      while (v60)
      {
        v59 = ((_DWORD)v59 + v61) & v55;
        v60 = *(WebCore::JSDOMGlobalObject **)(v54 + 16 * v59);
        ++v61;
        if (v60 == a3)
          goto LABEL_75;
      }
      goto LABEL_5;
    }
LABEL_75:
    v6 = *(_QWORD *)(v54 + 16 * v59 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *((_QWORD *)a3 + 5);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  v8 = *((_QWORD *)a3 + 3);
  if (__ldaxr((unsigned __int8 *)v8))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v8))
  {
    goto LABEL_9;
  }
  MEMORY[0x19AEA534C](v8);
LABEL_9:
  ++*(_QWORD *)(v8 + 8);
  v10 = __ldxr((unsigned __int8 *)v8);
  if (v10 != 1)
  {
    __clrex();
    goto LABEL_13;
  }
  if (__stlxr(0, (unsigned __int8 *)v8))
LABEL_13:
    WTF::Lock::unlockSlow((WTF::Lock *)v8);
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))a3 != &off_1E33653A8)
  {
    __break(0xC471u);
    JUMPOUT(0x194DE39C4);
  }
  v11 = *((_QWORD *)a2 + 412);
  if (v11)
  {
    v12 = *(_DWORD *)(v11 - 8);
    v13 = ((unint64_t)&WebCore::JSPermissionStatus::s_info + ~((_QWORD)&WebCore::JSPermissionStatus::s_info << 32)) ^ (((unint64_t)&WebCore::JSPermissionStatus::s_info + ~((_QWORD)&WebCore::JSPermissionStatus::s_info << 32)) >> 22);
    v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
    v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
    v16 = v12 & ((v15 >> 31) ^ v15);
    v17 = *(char ***)(v11 + 16 * v16);
    if (v17 == &WebCore::JSPermissionStatus::s_info)
    {
LABEL_20:
      v19 = *(_QWORD *)(v11 + 16 * v16 + 8);
      if (v19)
        goto LABEL_22;
    }
    else
    {
      v18 = 1;
      while (v17)
      {
        v16 = ((_DWORD)v16 + v18) & v12;
        v17 = *(char ***)(v11 + 16 * v16);
        ++v18;
        if (v17 == &WebCore::JSPermissionStatus::s_info)
          goto LABEL_20;
      }
    }
  }
  v20 = (WebCore::JSEventTarget *)*((_QWORD *)a2 + 7);
  v21 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v20, a2, a3);
  Structure = WebCore::JSPermissionStatusPrototype::createStructure((uint64_t *)v20, (uint64_t)a2, v21);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v25 = (JSC::JSCell *)WebCore::JSPermissionStatusPrototype::create(v20, Structure, v23, v24);
  v26 = WebCore::JSPermissionStatus::createStructure((uint64_t *)v20, (uint64_t)a2, v25);
  v19 = WebCore::cacheDOMStructure((JSCell *)a2, v26, (uint64_t)&WebCore::JSPermissionStatus::s_info);
LABEL_22:
  v27 = *((_QWORD *)a2 + 7);
  v28 = *(_QWORD *)(v27 + 41456);
  v29 = *(_QWORD *)(v28 + 23536);
  v30 = *(_QWORD **)(v29 + 1480);
  if (v30)
    goto LABEL_45;
  v31 = *(_QWORD *)(v28 + 22648);
  if (__ldaxr((unsigned __int8 *)v31))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v31))
  {
    goto LABEL_27;
  }
  MEMORY[0x19AEA534C](v31);
LABEL_27:
  v33 = *(_QWORD *)(v31 + 2824);
  v63 = *(_QWORD *)(v33 + 1480);
  if (!v63)
  {
    v34 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v65, "IsoSpace T");
    v64 = 0;
    MEMORY[0x19AEA3204](v34, &v65, v27 + 192, v27 + 1872, 32, 8, &v64);
    v36 = (uint64_t)v64;
    v64 = 0;
    if (v36)
      (*(void (**)(uint64_t))(*(_QWORD *)v36 + 8))(v36);
    v37 = v65;
    v65 = 0;
    if (v37)
    {
      if (*(_DWORD *)v37 == 1)
        WTF::fastFree(v37, v35);
      else
        --*(_DWORD *)v37;
    }
    v63 = v34;
    v38 = *(_QWORD *)(v33 + 1480);
    *(_QWORD *)(v33 + 1480) = v34;
    if (v38)
      (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
    v39 = *(unsigned int *)(v31 + 2844);
    if ((_DWORD)v39 == *(_DWORD *)(v31 + 2840))
    {
      v40 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v31 + 2832, v39 + 1, (unint64_t)&v63);
      v39 = *(unsigned int *)(v31 + 2844);
      *(_QWORD *)(*(_QWORD *)(v31 + 2832) + 8 * v39) = *v40;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v31 + 2832) + 8 * v39) = v34;
    }
    *(_DWORD *)(v31 + 2844) = v39 + 1;
  }
  v30 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v41 = *(_QWORD *)(v29 + 1480);
  *(_QWORD *)(v29 + 1480) = v30;
  if (v41)
  {
    v42 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v42, v43);
  }
  v44 = __ldxr((unsigned __int8 *)v31);
  if (v44 != 1)
  {
    __clrex();
    goto LABEL_44;
  }
  if (__stlxr(0, (unsigned __int8 *)v31))
LABEL_44:
    WTF::Lock::unlockSlow((WTF::Lock *)v31);
LABEL_45:
  SlowCase = v30[3];
  if (SlowCase < v30[4])
  {
LABEL_46:
    v30[3] = SlowCase + 32;
    goto LABEL_47;
  }
  SlowCase = v30[5];
  if ((SlowCase & 1) == 0)
  {
    v62 = *(_QWORD *)(SlowCase + 8) ^ v30[6];
    v30[4] = SlowCase + HIDWORD(v62);
    v30[5] = SlowCase + (int)v62;
    goto LABEL_46;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_47:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v19);
  *(_QWORD *)(SlowCase + 24) = (char *)a3 + 32;
  if (*(_BYTE *)(v27 + 755))
    __dmb(0xAu);
  v45 = *((_QWORD *)a2 + 415);
  if ((byte_1EE336418 & 1) == 0)
  {
    qword_1EE336410 = (uint64_t)&off_1E32C9310;
    byte_1EE336418 = 1;
  }
  if (!*(_DWORD *)(v45 + 48))
  {
    if ((SlowCase & 8) != 0)
      v46 = (SlowCase - 112) | 1;
    else
      v46 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v46 & 1) != 0)
      v47 = v46 + 47;
    else
      v47 = *(_QWORD *)v46 + 32;
    Allocator = *(_QWORD **)(v47 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v47 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE336410;
    Allocator[2] = v45;
    v49 = *((_QWORD *)a3 + 5);
    *((_QWORD *)a3 + 5) = Allocator;
    if (!v49)
      return SlowCase;
LABEL_69:
    *(_QWORD *)(v49 + 8) = 3;
    return SlowCase;
  }
  v65 = a3;
  if ((SlowCase & 8) != 0)
    v51 = (SlowCase - 112) | 1;
  else
    v51 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v51 & 1) != 0)
    v52 = v51 + 47;
  else
    v52 = *(_QWORD *)v51 + 32;
  v53 = *(_QWORD **)(v52 + 16);
  if (!v53)
    v53 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v52 + 16) = *v53;
  *v53 = SlowCase;
  v53[1] = &qword_1EE336410;
  v53[2] = v45;
  v64 = v53;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v45 + 32), (uint64_t *)&v65, (uint64_t *)&v64);
  v49 = (uint64_t)v64;
  if (v64)
    goto LABEL_69;
  return SlowCase;
}

_QWORD *WebCore::JSPermissions::destroy(WebCore::JSPermissions *this, JSC::JSCell *a2)
{
  _QWORD *result;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  _QWORD *v7;

  result = (_QWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      v4 = (unsigned int *)result[1];
      result[1] = 0;
      if (v4)
      {
        do
        {
          v5 = __ldaxr(v4);
          v6 = v5 - 1;
        }
        while (__stlxr(v6, v4));
        if (!v6)
        {
          atomic_store(1u, v4);
          v7 = result;
          WTF::fastFree((WTF *)v4, a2);
          result = v7;
        }
      }
      return (_QWORD *)bmalloc::api::isoDeallocate((bmalloc::api *)result, a2);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSPermissions::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPermissionsPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPermissionsPrototype::create(WebCore::JSPermissionsPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSPermissions::s_info, (uint64_t)&WebCore::JSPermissionsPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPermissions>,(WebCore::DOMConstructorID)183>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1464);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPermissions>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSPermissions::s_info + ~((_QWORD)&WebCore::JSPermissions::s_info << 32)) ^ (((unint64_t)&WebCore::JSPermissions::s_info + ~((_QWORD)&WebCore::JSPermissions::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSPermissions::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSPermissions::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSPermissionsPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSPermissionsPrototype::create((WebCore::JSPermissionsPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSPermissions::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSPermissions::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1464) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPermissionsConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPermissionsPrototype::s_info != (char **)(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPermissions>,(WebCore::DOMConstructorID)183>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSPermissionsOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 8);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Navigator";
    a5[1] = 25;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) != v8)
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(void **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v6 == v15)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194DE445CLL);
      }
    }
  }
  v17 = a4;
  v18 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
  a4 = v17;
  v6 = v18;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

void WebCore::JSPermissionsOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  bmalloc::api *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  bmalloc::api *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;

  v3 = *(bmalloc::api **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(bmalloc::api **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(bmalloc::api **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = (unsigned int *)*((_QWORD *)v3 + 1);
    *((_QWORD *)v3 + 1) = 0;
    if (v24)
    {
      do
      {
        v25 = __ldaxr(v24);
        v26 = v25 - 1;
      }
      while (__stlxr(v26, v24));
      if (!v26)
      {
        atomic_store(1u, v24);
        WTF::fastFree((WTF *)v24, a2);
      }
    }
    bmalloc::api::isoDeallocate(v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::convertDictionary<WebCore::PhotoSettings>@<X0>(JSC::JSCell *this@<X1>, unint64_t result@<X0>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  unsigned __int16 v5;
  __int16 v6;
  char v7;
  char v8;
  __int16 v9;
  __int16 v10;
  double v11;
  double v12;
  JSC::JSGlobalObject *v13;
  uint64_t Object;
  JSC::Structure *v15;
  WTF::StringImpl *v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  double v28;
  int v29;
  JSC::VM *v30;
  double v31;
  JSC::VM *v32;
  double v33;
  BOOL v34;
  int v35;
  uint64_t v36;
  int *v37;
  int v38;
  int v39;
  __int16 v40;
  _BYTE v41[7];
  _BYTE v42[7];
  int v43;
  __int16 v44;
  WTF::StringImpl *v45;

  v4 = *(JSC::VM **)(result + 56);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v13 = (JSC::JSGlobalObject *)result;
    if (((unint64_t)this & 0xFFFE000000000002) == 0)
    {
      Object = JSC::JSCell::getObject(this);
      if (Object)
      {
        v15 = (JSC::Structure *)Object;
        WTF::AtomStringImpl::addLiteral();
        v17 = JSC::JSObject::get(v15, v13, (unint64_t)v45);
        if (v45)
        {
          if (*(_DWORD *)v45 == 2)
            WTF::StringImpl::destroy(v45, v16);
          else
            *(_DWORD *)v45 -= 2;
        }
        if (*((_DWORD *)v4 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
          if ((result & 1) != 0)
            goto LABEL_59;
        }
        if (v17 == 10)
        {
          LOBYTE(v5) = 0;
          v6 = 0;
          goto LABEL_14;
        }
        v45 = (WTF::StringImpl *)*((_QWORD *)v13 + 7);
        v5 = WebCore::parseEnumeration<WebCore::FillLightMode>(v13, v17);
        if (*((_DWORD *)v45 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v45);
          if ((result & 1) != 0)
            goto LABEL_59;
        }
        if (v5 > 0xFFu)
        {
          v6 = 1;
LABEL_14:
          WTF::AtomStringImpl::addLiteral();
          v19 = (WTF::StringImpl *)JSC::JSObject::get(v15, v13, (unint64_t)v45);
          if (v45)
          {
            if (*(_DWORD *)v45 == 2)
              WTF::StringImpl::destroy(v45, v18);
            else
              *(_DWORD *)v45 -= 2;
          }
          if (*((_DWORD *)v4 + 20))
          {
            result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
            if ((result & 1) != 0)
              goto LABEL_59;
          }
          if (v19 == (WTF::StringImpl *)10)
          {
            v7 = 0;
            v11 = 0.0;
          }
          else
          {
            v20 = (JSC::VM *)*((_QWORD *)v13 + 7);
            v45 = v19;
            if ((unint64_t)v19 >= 0xFFFE000000000000)
            {
              v11 = (double)(int)v19;
            }
            else if ((unint64_t)v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              v30 = v20;
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, v13);
              v20 = v30;
              v11 = v31;
            }
            else
            {
              *(_QWORD *)&v11 = (char *)v19 - 0x2000000000000;
            }
            if (*((_DWORD *)v20 + 20))
            {
              result = JSC::VM::hasExceptionsAfterHandlingTraps(v20);
              if ((result & 1) != 0)
                goto LABEL_59;
            }
            if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
              goto LABEL_66;
            v7 = 1;
          }
          WTF::AtomStringImpl::addLiteral();
          v21 = v45;
          v23 = (WTF::StringImpl *)JSC::JSObject::get(v15, v13, (unint64_t)v45);
          if (v21)
          {
            if (*(_DWORD *)v21 == 2)
              WTF::StringImpl::destroy(v21, v22);
            else
              *(_DWORD *)v21 -= 2;
          }
          if (*((_DWORD *)v4 + 20))
          {
            result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
            if ((result & 1) != 0)
              goto LABEL_59;
          }
          if (v23 == (WTF::StringImpl *)10)
          {
            v8 = 0;
            v12 = 0.0;
            goto LABEL_38;
          }
          v24 = (JSC::VM *)*((_QWORD *)v13 + 7);
          v45 = v23;
          if ((unint64_t)v23 >= 0xFFFE000000000000)
          {
            v12 = (double)(int)v23;
          }
          else if ((unint64_t)v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            v32 = v24;
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, v13);
            v24 = v32;
            v12 = v33;
          }
          else
          {
            *(_QWORD *)&v12 = (char *)v23 - 0x2000000000000;
          }
          if (*((_DWORD *)v24 + 20))
          {
            result = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
            if ((result & 1) != 0)
              goto LABEL_59;
          }
          if ((*(_QWORD *)&v12 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
          {
            v8 = 1;
LABEL_38:
            WTF::AtomStringImpl::addLiteral();
            v25 = v45;
            result = JSC::JSObject::get(v15, v13, (unint64_t)v45);
            v27 = result;
            if (v25)
            {
              if (*(_DWORD *)v25 == 2)
                result = WTF::StringImpl::destroy(v25, v26);
              else
                *(_DWORD *)v25 -= 2;
            }
            if (*((_DWORD *)v4 + 20))
            {
              result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
              if ((result & 1) != 0)
                goto LABEL_59;
            }
            if (v27 == 10)
            {
              v9 = 0;
              v10 = 0;
              goto LABEL_50;
            }
            result = *((_QWORD *)v13 + 7);
            if (v27 >= 0xFFFE000000000000)
            {
              v34 = (_DWORD)v27 == 0;
              goto LABEL_94;
            }
            *(_QWORD *)&v28 = v27 - 0x2000000000000;
            if (v27 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
            {
              if (v28 <= 0.0)
              {
                v9 = v28 < 0.0;
                goto LABEL_48;
              }
            }
            else
            {
              if ((v27 & 0xFFFE000000000002) != 0)
              {
                v9 = v27 == 7;
                goto LABEL_48;
              }
              v35 = *(unsigned __int8 *)(v27 + 5);
              if (v35 == 3)
              {
                v38 = *(_DWORD *)(v27 + 8);
LABEL_90:
                v34 = v38 == 0;
                goto LABEL_94;
              }
              if (v35 == 2)
              {
                v36 = *(_QWORD *)(v27 + 8);
                if ((v36 & 1) != 0)
                  v37 = (int *)(v27 + 16);
                else
                  v37 = (int *)(v36 + 4);
                v38 = *v37;
                goto LABEL_90;
              }
              if ((*(_BYTE *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v34 = *(_QWORD *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x28) == (_QWORD)v13;
LABEL_94:
                v9 = !v34;
LABEL_48:
                if (!*(_DWORD *)(result + 80)
                  || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result), (result & 1) == 0))
                {
                  v10 = 1;
                  goto LABEL_50;
                }
LABEL_59:
                v29 = 1;
                goto LABEL_51;
              }
            }
            v9 = 1;
            goto LABEL_48;
          }
LABEL_66:
          result = JSC::throwTypeError();
          goto LABEL_59;
        }
      }
    }
    result = JSC::throwTypeError();
    goto LABEL_59;
  }
  LOBYTE(v5) = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0.0;
  v12 = 0.0;
LABEL_50:
  v29 = 0;
  *(_WORD *)(a3 + 8) = v5 | (unsigned __int16)(v6 << 8);
  *(_DWORD *)(a3 + 10) = v43;
  *(_WORD *)(a3 + 14) = v44;
  *(double *)(a3 + 16) = v11;
  *(_BYTE *)(a3 + 24) = v7;
  *(_DWORD *)(a3 + 25) = *(_DWORD *)v42;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)&v42[3];
  *(double *)(a3 + 32) = v12;
  *(_BYTE *)(a3 + 40) = v8;
  *(_DWORD *)(a3 + 41) = *(_DWORD *)v41;
  *(_DWORD *)(a3 + 44) = *(_DWORD *)&v41[3];
  *(_WORD *)(a3 + 48) = v9 | (v10 << 8);
  *(_DWORD *)(a3 + 50) = v39;
  *(_WORD *)(a3 + 54) = v40;
LABEL_51:
  *(_DWORD *)(a3 + 56) = v29;
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPictureInPictureEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  int v6;
  JSC::JSCell *v7;
  uint64_t Object;
  uint64_t v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  JSC::VM *v12;
  double v13;
  _BOOL4 v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  _BOOL4 v17;
  JSC::VM *v18;
  double v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  _BOOL4 v22;
  JSC::VM *v23;
  double v24;
  WTF::StringImpl *v25;
  JSCell *v26;
  uint64_t v27;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  WebCore::JSDOMGlobalObject *v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  JSC::VM *v45;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char **v52;
  int v53;
  unint64_t v54;
  WebCore::JSEvent *v55;
  JSC::JSCell *v56;
  unint64_t Structure;
  JSC::Structure *v58;
  JSC::JSCell *v59;
  uint64_t v60;
  JSC::JSCell *v61;
  JSC::JSGlobalObject *v62;
  JSC::JSObject *v63;
  JSC::JSGlobalObject *v64;
  JSC::VM *v65;
  WebCore::JSDOMGlobalObject *v66;
  JSC::Structure *v67;
  JSC::VM *FunctionRealm;
  uint64_t v69;
  unsigned int v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char **v75;
  int v76;
  JSC::JSCell *v77;
  unint64_t v78;
  JSC::Structure *v79;
  JSC::JSCell *v80;
  uint64_t v81;
  unint64_t SubclassStructure;
  JSC::VM *v83;
  JSValue v84;
  BOOL v85;
  int v86;
  uint64_t v87;
  int *v88;
  int v89;
  BOOL v90;
  int v91;
  uint64_t v92;
  int *v93;
  int v94;
  BOOL v95;
  int v96;
  uint64_t v97;
  int *v98;
  int v99;
  JSC::VM *v100;
  _BOOL4 v101;
  WTF::StringImpl *v102[2];
  int v103;
  WTF::StringImpl *v104;
  int v105;
  JSC::VM *v106;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v84.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, a1, v84);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v104);
  v6 = v105;
  if (!v105)
  {
    v7 = *(JSC::JSCell **)(a2 + 56);
    v106 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (((unint64_t)v7 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
LABEL_44:
      WebCore::throwRequiredMemberTypeError((int)a1, (int)&v106, "pictureInPictureWindow", 23, "PictureInPictureEventInit", 26, "PictureInPictureWindow", 23);
      goto LABEL_45;
    }
    if (((unint64_t)v7 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v7)) == 0)
    {
LABEL_59:
      JSC::throwTypeError();
      goto LABEL_45;
    }
    v9 = Object;
    WTF::AtomStringImpl::addLiteral();
    v11 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v102[0]);
    if (v102[0])
    {
      if (*(_DWORD *)v102[0] == 2)
        WTF::StringImpl::destroy(v102[0], v10);
      else
        *(_DWORD *)v102[0] -= 2;
    }
    if (*((_DWORD *)v106 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v106) & 1) != 0)
    {
LABEL_45:
      v26 = 0;
      v27 = 1;
      v103 = 1;
LABEL_46:
      ((void (*)(JSC::VM **, WTF::StringImpl **))off_1E32CC9C0[v27])(&v106, v102);
      v6 = v105;
      goto LABEL_47;
    }
    if (v11 != 10)
    {
      v12 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v11 >= 0xFFFE000000000000)
        goto LABEL_131;
      *(_QWORD *)&v13 = v11 - 0x2000000000000;
      if (v11 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        v14 = v13 > 0.0 || v13 < 0.0;
        goto LABEL_16;
      }
      if ((v11 & 0xFFFE000000000002) != 0)
      {
        v14 = v11 == 7;
        goto LABEL_16;
      }
      v86 = *(unsigned __int8 *)(v11 + 5);
      if (v86 == 3)
      {
        v89 = *(_DWORD *)(v11 + 8);
      }
      else
      {
        if (v86 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v85 = *(_QWORD *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_175;
          }
          v14 = 1;
          goto LABEL_16;
        }
        v87 = *(_QWORD *)(v11 + 8);
        if ((v87 & 1) != 0)
          v88 = (int *)(v11 + 16);
        else
          v88 = (int *)(v87 + 4);
        v89 = *v88;
      }
      v85 = v89 == 0;
      goto LABEL_175;
    }
    v101 = 0;
    while (1)
    {
      WTF::AtomStringImpl::addLiteral();
      v16 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v102[0]);
      if (v102[0])
      {
        if (*(_DWORD *)v102[0] == 2)
          WTF::StringImpl::destroy(v102[0], v15);
        else
          *(_DWORD *)v102[0] -= 2;
      }
      if (*((_DWORD *)v106 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v106) & 1) != 0)
        goto LABEL_45;
      if (v16 == 10)
      {
        v17 = 0;
        goto LABEL_28;
      }
      v18 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v16 >= 0xFFFE000000000000)
        break;
      *(_QWORD *)&v19 = v16 - 0x2000000000000;
      if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v16 & 0xFFFE000000000002) != 0)
        {
          v17 = v16 == 7;
          goto LABEL_27;
        }
        v91 = *(unsigned __int8 *)(v16 + 5);
        if (v91 == 3)
        {
          v94 = *(_DWORD *)(v16 + 8);
          goto LABEL_164;
        }
        if (v91 == 2)
        {
          v92 = *(_QWORD *)(v16 + 8);
          if ((v92 & 1) != 0)
            v93 = (int *)(v16 + 16);
          else
            v93 = (int *)(v92 + 4);
          v94 = *v93;
LABEL_164:
          v90 = v94 == 0;
        }
        else
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_166:
            v17 = 1;
            goto LABEL_27;
          }
          v90 = *(_QWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        }
LABEL_179:
        v17 = !v90;
        goto LABEL_27;
      }
      if (v19 > 0.0)
        goto LABEL_166;
      v17 = v19 < 0.0;
LABEL_27:
      if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
        goto LABEL_45;
LABEL_28:
      WTF::AtomStringImpl::addLiteral();
      v21 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v102[0]);
      if (v102[0])
      {
        if (*(_DWORD *)v102[0] == 2)
          WTF::StringImpl::destroy(v102[0], v20);
        else
          *(_DWORD *)v102[0] -= 2;
      }
      if (*((_DWORD *)v106 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v106) & 1) != 0)
        goto LABEL_45;
      if (v21 == 10)
      {
        v22 = 0;
        goto LABEL_39;
      }
      v23 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v21 >= 0xFFFE000000000000)
      {
        v95 = (_DWORD)v21 == 0;
        goto LABEL_169;
      }
      *(_QWORD *)&v24 = v21 - 0x2000000000000;
      if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v21 & 0xFFFE000000000002) != 0)
        {
          v22 = v21 == 7;
          goto LABEL_38;
        }
        v96 = *(unsigned __int8 *)(v21 + 5);
        if (v96 == 3)
        {
          v99 = *(_DWORD *)(v21 + 8);
        }
        else
        {
          if (v96 != 2)
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_173:
              v22 = 1;
              goto LABEL_38;
            }
            v95 = *(_QWORD *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_169;
          }
          v97 = *(_QWORD *)(v21 + 8);
          if ((v97 & 1) != 0)
            v98 = (int *)(v21 + 16);
          else
            v98 = (int *)(v97 + 4);
          v99 = *v98;
        }
        v95 = v99 == 0;
LABEL_169:
        v22 = !v95;
        goto LABEL_38;
      }
      if (v24 > 0.0)
        goto LABEL_173;
      v22 = v24 < 0.0;
LABEL_38:
      if (*((_DWORD *)v23 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) != 0)
        goto LABEL_45;
LABEL_39:
      WTF::AtomStringImpl::addLiteral();
      LODWORD(v11) = v102[0];
      v9 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v102[0]);
      if (v102[0])
      {
        if (*(_DWORD *)v102[0] == 2)
          WTF::StringImpl::destroy(v102[0], v25);
        else
          *(_DWORD *)v102[0] -= 2;
      }
      if (*((_DWORD *)v106 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v106) & 1) != 0)
        goto LABEL_45;
      if (v9 == 10)
        goto LABEL_44;
      v102[0] = *((WTF::StringImpl **)a1 + 7);
      if ((v9 & 0xFFFE000000000002) != 0)
        goto LABEL_59;
      v29 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
      v30 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
      if ((_DWORD)v29)
      {
        v31 = 16 * v29;
        if ((char **)v31 != &WebCore::JSPictureInPictureWindow::s_info)
        {
          do
          {
            v31 = *(_QWORD *)(v31 + 16);
            v30 = v31 != 0;
          }
          while ((char **)v31 != &WebCore::JSPictureInPictureWindow::s_info && v31 != 0);
        }
      }
      if (!v30)
        goto LABEL_59;
      v100 = v3;
      v33 = v5;
      v34 = *(_QWORD *)(v9 + 24);
      ++*(_DWORD *)(v34 + 24);
      v5 = v101;
      LOBYTE(v102[0]) = v101;
      BYTE1(v102[0]) = v17;
      BYTE2(v102[0]) = v22;
      v103 = 0;
      if (!v105)
      {
        v35 = v34 - 24;
        v36 = v104;
        v104 = 0;
        v102[1] = 0;
        v37 = bmalloc::api::isoAllocate();
        WTF::MonotonicTime::now((WTF::MonotonicTime *)v37);
        *(_QWORD *)(v37 + 8) = 0;
        if (v17)
          v41 = 4;
        else
          v41 = 0;
        if (v22)
          v42 = 8;
        else
          v42 = 0;
        if (v101)
          v43 = 851970;
        else
          v43 = 851968;
        v44 = v43 | v41 | v42 | (v36 != 0) | *(_DWORD *)(v37 + 20) & 0xFFC00000;
        *(_DWORD *)(v37 + 16) = 1;
        *(_DWORD *)(v37 + 20) = v44;
        if (v36)
        {
          *(_DWORD *)v36 += 2;
          v44 = *(_DWORD *)(v37 + 20);
        }
        *(_QWORD *)(v37 + 24) = v36;
        *(_QWORD *)(v37 + 32) = 0;
        *(_QWORD *)(v37 + 40) = 0;
        *(_QWORD *)(v37 + 48) = 0;
        *(_QWORD *)(v37 + 56) = v40;
        *(_DWORD *)(v37 + 20) = v44 | 0x4000;
        *(_QWORD *)v37 = off_1E3365CC0;
        *(_QWORD *)(v37 + 64) = 0;
        *(_QWORD *)(v37 + 72) = v35;
        v106 = (JSC::VM *)v37;
        if (v36)
        {
          if (*(_DWORD *)v36 == 2)
          {
            WTF::StringImpl::destroy(v36, v38);
            if (*(void (***)(WebCore::PictureInPictureEvent *__hidden))v37 != off_1E3365CC0)
            {
              __break(0xC471u);
              JUMPOUT(0x194DE5C58);
            }
          }
          else
          {
            *(_DWORD *)v36 -= 2;
          }
        }
        v45 = *(JSC::VM **)(v33 + 40);
        v46 = *((_QWORD *)v45 + 412);
        if (!v46)
          goto LABEL_81;
        v47 = *(_DWORD *)(v46 - 8);
        v48 = ((unint64_t)&WebCore::JSPictureInPictureEvent::s_info
             + ~((_QWORD)&WebCore::JSPictureInPictureEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPictureInPictureEvent::s_info
                                                                             + ~((_QWORD)&WebCore::JSPictureInPictureEvent::s_info << 32)) >> 22);
        v49 = 9 * ((v48 + ~(v48 << 13)) ^ ((v48 + ~(v48 << 13)) >> 8));
        v50 = (v49 ^ (v49 >> 15)) + ~((v49 ^ (v49 >> 15)) << 27);
        v51 = v47 & ((v50 >> 31) ^ v50);
        v52 = *(char ***)(v46 + 16 * v51);
        if (v52 == &WebCore::JSPictureInPictureEvent::s_info)
        {
LABEL_80:
          v54 = *(_QWORD *)(v46 + 16 * v51 + 8);
          if (!v54)
            goto LABEL_81;
        }
        else
        {
          v53 = 1;
          while (v52)
          {
            v51 = ((_DWORD)v51 + v53) & v47;
            v52 = *(char ***)(v46 + 16 * v51);
            ++v53;
            if (v52 == &WebCore::JSPictureInPictureEvent::s_info)
              goto LABEL_80;
          }
LABEL_81:
          v55 = (WebCore::JSEvent *)*((_QWORD *)v45 + 7);
          v56 = (JSC::JSCell *)WebCore::JSEvent::prototype(v55, *(JSC::VM **)(v33 + 40), v39);
          Structure = WebCore::JSPictureInPictureEventPrototype::createStructure((uint64_t *)v55, (uint64_t)v45, v56);
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v59 = (JSC::JSCell *)WebCore::JSPictureInPictureEventPrototype::create(v55, v45, Structure, v58);
          v60 = WebCore::JSPictureInPictureEvent::createStructure((uint64_t *)v55, (uint64_t)v45, v59);
          v54 = WebCore::cacheDOMStructure((JSCell *)v45, v60, (uint64_t)&WebCore::JSPictureInPictureEvent::s_info);
        }
        v26 = (JSCell *)WebCore::JSPictureInPictureEvent::create(v54, v45, (uint64_t *)&v106);
        WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v45 + 415), v37, (uint64_t)v26);
        v61 = *(JSC::JSCell **)(a2 + 40);
        if (((unint64_t)v61 & 0xFFFE000000000002) != 0
          || (v62 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v61)) == 0
          || (v64 = v62, v62 == *(JSC::JSGlobalObject **)(a2 + 24))
          || (v65 = (JSC::VM *)*((_QWORD *)a1 + 7),
              FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v62, v63),
              *((_DWORD *)v65 + 20))
          && (JSC::VM::hasExceptionsAfterHandlingTraps(v65) & 1) != 0)
        {
LABEL_95:
          if (*((_DWORD *)v100 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v100) & 1) != 0)
            v26 = 0;
          v83 = v106;
          v106 = 0;
          if (v83)
          {
            if (*((_DWORD *)v83 + 4) == 1)
              (*(void (**)(JSC::VM *))(*(_QWORD *)v83 + 8))(v83);
            else
              --*((_DWORD *)v83 + 4);
          }
          v27 = 0;
          goto LABEL_46;
        }
        v69 = *((_QWORD *)FunctionRealm + 412);
        if (v69)
        {
          v70 = *(_DWORD *)(v69 - 8);
          v71 = ((unint64_t)&WebCore::JSPictureInPictureEvent::s_info
               + ~((_QWORD)&WebCore::JSPictureInPictureEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPictureInPictureEvent::s_info
                                                                               + ~((_QWORD)&WebCore::JSPictureInPictureEvent::s_info << 32)) >> 22);
          v72 = 9 * ((v71 + ~(v71 << 13)) ^ ((v71 + ~(v71 << 13)) >> 8));
          v73 = (v72 ^ (v72 >> 15)) + ~((v72 ^ (v72 >> 15)) << 27);
          v74 = v70 & ((v73 >> 31) ^ v73);
          v75 = *(char ***)(v69 + 16 * v74);
          if (v75 != &WebCore::JSPictureInPictureEvent::s_info)
          {
            v76 = 1;
            while (v75)
            {
              v74 = ((_DWORD)v74 + v76) & v70;
              v75 = *(char ***)(v69 + 16 * v74);
              ++v76;
              if (v75 == &WebCore::JSPictureInPictureEvent::s_info)
                goto LABEL_91;
            }
            goto LABEL_92;
          }
LABEL_91:
          v66 = *(WebCore::JSDOMGlobalObject **)(v69 + 16 * v74 + 8);
          if (!v66)
            goto LABEL_92;
        }
        else
        {
LABEL_92:
          v77 = (JSC::JSCell *)WebCore::JSEvent::prototype(v65, FunctionRealm, v66);
          v78 = WebCore::JSPictureInPictureEventPrototype::createStructure((uint64_t *)v65, (uint64_t)FunctionRealm, v77);
          *(_DWORD *)(v78 + 16) |= 0x80000u;
          v80 = (JSC::JSCell *)WebCore::JSPictureInPictureEventPrototype::create(v65, FunctionRealm, v78, v79);
          v81 = WebCore::JSPictureInPictureEvent::createStructure((uint64_t *)v65, (uint64_t)FunctionRealm, v80);
          v66 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v81, (uint64_t)&WebCore::JSPictureInPictureEvent::s_info);
        }
        SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v64, v66, v67);
        if (!*((_DWORD *)v65 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v65) & 1) == 0)
          JSC::JSObject::setStructure(v26, v65, SubclassStructure);
        goto LABEL_95;
      }
      v12 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_131:
      v85 = (_DWORD)v11 == 0;
LABEL_175:
      v14 = !v85;
LABEL_16:
      v101 = v14;
      if (*((_DWORD *)v12 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) != 0)
        goto LABEL_45;
    }
    v90 = (_DWORD)v16 == 0;
    goto LABEL_179;
  }
  v26 = 0;
LABEL_47:
  if (v6 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C9518[v6])(v102, &v104);
  return v26;
}

uint64_t WebCore::JSPictureInPictureEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPictureInPictureEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPictureInPictureEventPrototype::create(WebCore::JSPictureInPictureEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSPictureInPictureEvent::s_info, (uint64_t)&WebCore::JSPictureInPictureEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPictureInPictureEvent>,(WebCore::DOMConstructorID)184>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1472);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSPictureInPictureEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPictureInPictureEvent::s_info
         + ~((_QWORD)&WebCore::JSPictureInPictureEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPictureInPictureEvent::s_info
                                                                         + ~((_QWORD)&WebCore::JSPictureInPictureEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPictureInPictureEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPictureInPictureEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPictureInPictureEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSPictureInPictureEventPrototype::create((WebCore::JSPictureInPictureEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSPictureInPictureEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSPictureInPictureEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1472) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPictureInPictureEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPictureInPictureEventPrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPictureInPictureEvent>,(WebCore::DOMConstructorID)184>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsPictureInPictureEvent_pictureInPictureWindow(int a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::PictureInPictureWindow>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72));
}

uint64_t WebCore::JSPictureInPictureEvent::subspaceForImpl(WebCore::JSPictureInPictureEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 1496);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 1496))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 1496);
    *(_QWORD *)(v8 + 1496) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 1496);
  *(_QWORD *)(v3 + 1496) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSPictureInPictureWindow::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24) - 24);
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPictureInPictureWindowPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPictureInPictureWindowPrototype::create(WebCore::JSPictureInPictureWindowPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSPictureInPictureWindow::s_info, &WebCore::JSPictureInPictureWindowPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPictureInPictureWindow>,(WebCore::DOMConstructorID)185>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1480);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPictureInPictureWindow>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPictureInPictureWindow::s_info
         + ~((_QWORD)&WebCore::JSPictureInPictureWindow::s_info << 32)) ^ (((unint64_t)&WebCore::JSPictureInPictureWindow::s_info
                                                                          + ~((_QWORD)&WebCore::JSPictureInPictureWindow::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPictureInPictureWindow::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPictureInPictureWindow::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPictureInPictureWindowPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSPictureInPictureWindowPrototype::create((WebCore::JSPictureInPictureWindowPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSPictureInPictureWindow::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSPictureInPictureWindow::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1480) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPictureInPictureWindowConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPictureInPictureWindowPrototype::s_info != (char **)(16
                                                                      * *(unsigned int *)(16
                                                                                        * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                        + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPictureInPictureWindow>,(WebCore::DOMConstructorID)185>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsPictureInPictureWindow_width(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 28) | 0xFFFE000000000000;
}

unint64_t WebCore::jsPictureInPictureWindow_height(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 32) | 0xFFFE000000000000;
}

uint64_t WebCore::jsPictureInPictureWindow_onresize(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v12;
  bmalloc::api *v13;
  void *v14;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1696), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
  {
    WebCore::EventTarget::~EventTarget(v5, v9);
    WebCore::ActiveDOMObject::~ActiveDOMObject((WebCore *)((char *)v5 - 24), v12);
    bmalloc::api::isoDeallocate(v13, v14);
  }
  else
  {
    --*((_DWORD *)v5 + 6);
  }
  return v10;
}

BOOL WebCore::setJSPictureInPictureWindow_onresize(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v17;
  bmalloc::api *v18;
  void *v19;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSPictureInPictureWindow::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSPictureInPictureWindow::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1696), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        WebCore::EventTarget::~EventTarget(v11, v15);
        WebCore::ActiveDOMObject::~ActiveDOMObject((WebCore::EventTarget *)((char *)v11 - 24), v17);
        bmalloc::api::isoDeallocate(v18, v19);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::JSPictureInPictureWindowOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v6 = *(_QWORD *)(v5 - 16);
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (*(_QWORD *)(v5 - 8)
    || (result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 24) + 64))(v5 - 24), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

uint64_t WebCore::JSPictureInPictureWindowOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result;
  WebCore::ActiveDOMObject *v4;
  int v5;
  uint64_t v6;
  void *v7;
  bmalloc::api *v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  WebCore::ActiveDOMObject *v18;
  int v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v30;

  result = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = (WebCore::ActiveDOMObject *)(result - 24);
  v5 = *(_DWORD *)(result + 24);
  *(_DWORD *)(result + 24) = v5 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v12 = *(_QWORD *)(a3 + 32);
    v10 = (uint64_t *)(a3 + 32);
    v11 = v12;
    if (v12)
    {
      v13 = *(_DWORD *)(v11 - 8);
      v14 = ((unint64_t)v4 + ~((_QWORD)v4 << 32)) ^ (((unint64_t)v4 + ~((_QWORD)v4 << 32)) >> 22);
      v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
      v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
      v17 = v13 & ((v16 >> 31) ^ v16);
      v18 = *(WebCore::ActiveDOMObject **)(v11 + 16 * v17);
      if (v18 != v4)
      {
        v19 = 1;
        while (v18)
        {
          v17 = ((_DWORD)v17 + v19) & v13;
          v18 = *(WebCore::ActiveDOMObject **)(v11 + 16 * v17);
          ++v19;
          if (v18 == v4)
            goto LABEL_12;
        }
        v17 = *(unsigned int *)(v11 - 4);
      }
LABEL_12:
      if (v17 != *(_DWORD *)(v11 - 4))
      {
        v20 = (_QWORD *)(v11 + 16 * v17);
        *v20 = -1;
        v23 = v20[1];
        v22 = v20 + 1;
        v21 = v23;
        if (v23)
        {
          *(_QWORD *)(v21 + 8) = 3;
          *v22 = 0;
        }
        ++*(_DWORD *)(*v10 - 16);
        v24 = *v10;
        if (*v10)
          v25 = *(_DWORD *)(v24 - 12) - 1;
        else
          v25 = -1;
        *(_DWORD *)(v24 - 12) = v25;
        v26 = *v10;
        if (*v10)
        {
          v27 = 6 * *(_DWORD *)(v26 - 12);
          v28 = *(_DWORD *)(v26 - 4);
          if (v27 < v28 && v28 >= 9)
          {
            v30 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v10, v28 >> 1, 0);
            result = v30;
          }
        }
      }
    }
    v5 = *(_DWORD *)(result + 24) - 1;
  }
  else
  {
    v6 = *(_QWORD *)(result + 8);
    if (v6)
    {
      *(_QWORD *)(v6 + 8) = 3;
      *(_QWORD *)(result + 8) = 0;
    }
  }
  if (v5)
  {
    *(_DWORD *)(result + 24) = v5;
  }
  else
  {
    WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)result, a2);
    WebCore::ActiveDOMObject::~ActiveDOMObject(v4, v7);
    return bmalloc::api::isoDeallocate(v8, v9);
  }
  return result;
}

unint64_t WebCore::wrap<WebCore::PictureInPictureWindow>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  WebCore::JSEventTarget *v17;
  JSC::JSCell *v18;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v20;
  JSC::Structure *v21;
  JSC::JSCell *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  WTF *v39;
  void *v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *Allocator;
  uint64_t v46;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  WTF *v62;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v51 = *(_QWORD *)(v5 + 32);
    if (!v51)
      goto LABEL_5;
    v52 = *(_DWORD *)(v51 - 8);
    v53 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v54 = 9 * ((v53 + ~(v53 << 13)) ^ ((v53 + ~(v53 << 13)) >> 8));
    v55 = (v54 ^ (v54 >> 15)) + ~((v54 ^ (v54 >> 15)) << 27);
    v56 = v52 & ((v55 >> 31) ^ v55);
    v57 = *(_QWORD *)(v51 + 16 * v56);
    if (v57 != a3)
    {
      v58 = 1;
      while (v57)
      {
        v56 = ((_DWORD)v56 + v58) & v52;
        v57 = *(_QWORD *)(v51 + 16 * v56);
        ++v58;
        if (v57 == a3)
          goto LABEL_66;
      }
      goto LABEL_5;
    }
LABEL_66:
    v6 = *(_QWORD *)(v51 + 16 * v56 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)(a3 + 32);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 48);
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))a3 != &off_1E3365D88)
  {
    __break(0xC471u);
    JUMPOUT(0x194DE7B24);
  }
  v8 = *((_QWORD *)a2 + 412);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSPictureInPictureWindow::s_info
         + ~((_QWORD)&WebCore::JSPictureInPictureWindow::s_info << 32)) ^ (((unint64_t)&WebCore::JSPictureInPictureWindow::s_info
                                                                          + ~((_QWORD)&WebCore::JSPictureInPictureWindow::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSPictureInPictureWindow::s_info)
    {
LABEL_11:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_13;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSPictureInPictureWindow::s_info)
          goto LABEL_11;
      }
    }
  }
  v17 = (WebCore::JSEventTarget *)*((_QWORD *)a2 + 7);
  v18 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v17, a2, (WebCore::JSDOMGlobalObject *)a3);
  Structure = WebCore::JSPictureInPictureWindowPrototype::createStructure((uint64_t *)v17, (uint64_t)a2, v18);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v22 = (JSC::JSCell *)WebCore::JSPictureInPictureWindowPrototype::create(v17, Structure, v20, v21);
  v23 = WebCore::JSPictureInPictureWindow::createStructure((uint64_t *)v17, (uint64_t)a2, v22);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v23, (uint64_t)&WebCore::JSPictureInPictureWindow::s_info);
LABEL_13:
  v24 = *((_QWORD *)a2 + 7);
  v25 = *(_QWORD *)(v24 + 41456);
  v26 = *(_QWORD *)(v25 + 23536);
  v27 = *(_QWORD **)(v26 + 1504);
  if (v27)
    goto LABEL_36;
  v28 = *(_QWORD *)(v25 + 22648);
  if (__ldaxr((unsigned __int8 *)v28))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v28))
  {
    goto LABEL_18;
  }
  MEMORY[0x19AEA534C](v28);
LABEL_18:
  v30 = *(_QWORD *)(v28 + 2824);
  v60 = *(_QWORD *)(v30 + 1504);
  if (!v60)
  {
    v31 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v62, "IsoSpace T");
    v61 = 0;
    MEMORY[0x19AEA3204](v31, &v62, v24 + 192, v24 + 1872, 32, 8, &v61);
    v33 = (uint64_t)v61;
    v61 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v62;
    v62 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 1)
        WTF::fastFree(v34, v32);
      else
        --*(_DWORD *)v34;
    }
    v60 = v31;
    v35 = *(_QWORD *)(v30 + 1504);
    *(_QWORD *)(v30 + 1504) = v31;
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
    v36 = *(unsigned int *)(v28 + 2844);
    if ((_DWORD)v36 == *(_DWORD *)(v28 + 2840))
    {
      v37 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v28 + 2832, v36 + 1, (unint64_t)&v60);
      v36 = *(unsigned int *)(v28 + 2844);
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = *v37;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = v31;
    }
    *(_DWORD *)(v28 + 2844) = v36 + 1;
  }
  v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v38 = *(_QWORD *)(v26 + 1504);
  *(_QWORD *)(v26 + 1504) = v27;
  if (v38)
  {
    v39 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v39, v40);
  }
  v41 = __ldxr((unsigned __int8 *)v28);
  if (v41 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v28))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v28);
LABEL_36:
  SlowCase = v27[3];
  if (SlowCase < v27[4])
  {
LABEL_37:
    v27[3] = SlowCase + 32;
    goto LABEL_38;
  }
  SlowCase = v27[5];
  if ((SlowCase & 1) == 0)
  {
    v59 = *(_QWORD *)(SlowCase + 8) ^ v27[6];
    v27[4] = SlowCase + HIDWORD(v59);
    v27[5] = SlowCase + (int)v59;
    goto LABEL_37;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3 + 24;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v42 = *((_QWORD *)a2 + 415);
  if ((byte_1EE336438 & 1) == 0)
  {
    qword_1EE336430 = (uint64_t)&off_1E32C9370;
    byte_1EE336438 = 1;
  }
  if (!*(_DWORD *)(v42 + 48))
  {
    if ((SlowCase & 8) != 0)
      v43 = (SlowCase - 112) | 1;
    else
      v43 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v43 & 1) != 0)
      v44 = v43 + 47;
    else
      v44 = *(_QWORD *)v43 + 32;
    Allocator = *(_QWORD **)(v44 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v44 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE336430;
    Allocator[2] = v42;
    v46 = *(_QWORD *)(a3 + 32);
    *(_QWORD *)(a3 + 32) = Allocator;
    if (!v46)
      return SlowCase;
LABEL_60:
    *(_QWORD *)(v46 + 8) = 3;
    return SlowCase;
  }
  v62 = (WTF *)a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  v50 = *(_QWORD **)(v49 + 16);
  if (!v50)
    v50 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *v50;
  *v50 = SlowCase;
  v50[1] = &qword_1EE336430;
  v50[2] = v42;
  v61 = v50;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v42 + 32), (uint64_t *)&v62, (uint64_t *)&v61);
  v46 = (uint64_t)v61;
  if (v61)
    goto LABEL_60;
  return SlowCase;
}

uint64_t WebCore::convertDictionary<WebCore::PlaneLayout>@<X0>(JSC::JSCell *this@<X1>, JSC::VM **a2@<X0>, uint64_t a3@<X8>)
{
  uint64_t Object;
  JSC::Structure *v6;
  WTF::StringImpl *v7;
  unint64_t v8;
  char *v9;
  uint64_t result;
  unint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  WTF::StringImpl *v18;

  v17 = a2[7];
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
    goto LABEL_9;
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = JSC::throwTypeError();
    goto LABEL_11;
  }
  v6 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v8 = JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v18);
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v7);
    else
      *(_DWORD *)v18 -= 2;
  }
  if (*((_DWORD *)v17 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v17);
    if ((result & 1) != 0)
      goto LABEL_11;
  }
  if (v8 == 10)
  {
LABEL_9:
    v9 = "offset";
LABEL_10:
    result = (uint64_t)WebCore::throwRequiredMemberTypeError((int)a2, (int)&v17, v9, 7, "PlaneLayout", 12, "unsigned long", 14);
    goto LABEL_11;
  }
  result = (uint64_t)WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>((WTF::StringImpl *)a2, v8, &v18);
  v12 = v18;
  if ((unint64_t)v18 >> 32)
    goto LABEL_11;
  WTF::AtomStringImpl::addLiteral();
  v13 = v18;
  v15 = JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v18);
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v14);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (*((_DWORD *)v17 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v17);
    if ((result & 1) != 0)
      goto LABEL_11;
  }
  if (v15 == 10)
  {
    v9 = "stride";
    goto LABEL_10;
  }
  result = (uint64_t)WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>((WTF::StringImpl *)a2, v15, &v18);
  v16 = v18;
  v11 = (unint64_t)v18 >> 32;
  if (!((unint64_t)v18 >> 32))
  {
    *(_QWORD *)a3 = v12;
    *(_QWORD *)(a3 + 8) = v16;
    goto LABEL_12;
  }
LABEL_11:
  LODWORD(v11) = 1;
LABEL_12:
  *(_DWORD *)(a3 + 16) = v11;
  return result;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::PlaybackDirection>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::PlaybackDirection)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::PlaybackDirection)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::PlaybackDirection)::$_2::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::PlaybackDirection)::$_3::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::PlaybackDirection)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::PlaybackDirection)::$_0::operator() const(void)::impl;
    unk_1EE2F4950 = &WebCore::convertEnumerationToString(WebCore::PlaybackDirection)::$_1::operator() const(void)::impl;
    qword_1EE2F4958 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::PlaybackDirection)::$_2::operator() const(void)::impl;
    unk_1EE2F4960 = &WebCore::convertEnumerationToString(WebCore::PlaybackDirection)::$_3::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::PlaybackDirection)::values[a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::PlaybackDirection>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  int v9;
  int v10;
  char **v13;
  uint16x8_t v14;
  uint16x8_t v16;
  uint16x8_t v17;
  uint64_t v20;
  unint64_t v21;

  v3 = a1;
  v21 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
LABEL_34:
        v10 = 0;
        v9 = 0;
        return v10 | (v9 << 8);
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v21, a1);
  v4 = v20;
  if (!v20)
    goto LABEL_34;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "alternate" && v7 == 9)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 97 || *(_DWORD *)(v6 + 1) != 1919251564 || *(_DWORD *)(v6 + 5) != 1702125934)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 97)
        goto LABEL_16;
      v14 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 2), (int16x8_t)xmmword_1968C0620);
      v14.i16[0] = vminvq_u16(v14);
      if (!v14.i32[0])
        goto LABEL_16;
    }
    goto LABEL_37;
  }
  if (v6 == "alternate" && v7 == 9)
  {
LABEL_37:
    v13 = &WebCore::parseEnumerationFromString<WebCore::PlaybackDirection>(WTF::String const&)::mappings;
    goto LABEL_38;
  }
  if (v6 != "alternate-reverse" && v7 == 17)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 97 || *(_QWORD *)(v6 + 1) != 0x6574616E7265746CLL || *(_QWORD *)(v6 + 9) != 0x657372657665722DLL)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 97)
        goto LABEL_16;
      v16 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 2), (int16x8_t)xmmword_1968C0620);
      v16.i16[0] = vminvq_u16(v16);
      if (!v16.i32[0])
        goto LABEL_16;
      v17 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 18), (int16x8_t)xmmword_1968C0630);
      v17.i16[0] = vminvq_u16(v17);
      if (!v17.i32[0])
        goto LABEL_16;
    }
    goto LABEL_30;
  }
  if (v6 == "alternate-reverse" && v7 == 17)
  {
LABEL_30:
    v13 = &off_1E32C8EA8;
LABEL_38:
    v10 = *((unsigned __int8 *)v13 + 16);
    v9 = 1;
    goto LABEL_39;
  }
  if (v6 == "normal" || v7 != 6)
  {
    if (v6 == "normal" && v7 == 6)
      goto LABEL_55;
    if (v6 == "reverse" || v7 != 7)
    {
      if (v7 != 7 || v6 != "reverse")
        goto LABEL_16;
    }
    else if ((v5 & 4) != 0)
    {
      if (*v6 != 114 || *(_DWORD *)(v6 + 1) != 1919252069 || *(_DWORD *)(v6 + 3) != 1702064741)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 114)
        goto LABEL_16;
      if (*(_QWORD *)(v6 + 6) != 0x65007300720065 || *(_QWORD *)(v6 + 2) != 0x72006500760065)
        goto LABEL_16;
    }
    v13 = &off_1E32C8ED8;
    goto LABEL_38;
  }
  if ((v5 & 4) != 0)
  {
    if (*v6 == 110 && *(_DWORD *)(v6 + 1) == 1634562671 && *(_DWORD *)(v6 + 2) == 1818324338)
      goto LABEL_55;
LABEL_16:
    v9 = 0;
    v10 = 0;
    goto LABEL_39;
  }
  if (*(_WORD *)v6 != 110)
    goto LABEL_16;
  v9 = 0;
  if (*(_QWORD *)(v6 + 2) == 0x61006D0072006FLL)
  {
    v10 = 0;
    if (*(_QWORD *)(v6 + 4) == 0x6C0061006D0072)
    {
LABEL_55:
      v13 = &off_1E32C8EC0;
      goto LABEL_38;
    }
  }
  else
  {
    v10 = 0;
  }
LABEL_39:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v10 | (v9 << 8);
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPointerEvent>::construct(JSC::JSGlobalObject *a1, unint64_t a2)
{
  unint64_t v2;
  JSC::Structure *v3;
  JSC::VM *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t Object;
  int *v14;
  WTF::StringImpl *v15;
  int v16;
  char v17;
  BOOL v18;
  unint64_t v19;
  int v20;
  double v21;
  double v22;
  double v23;
  JSValue v24;
  JSCell *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  JSC::VM *v29;
  double v30;
  BOOL v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  JSC::VM *v35;
  double v36;
  BOOL v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  unint64_t v40;
  BOOL v41;
  JSC::VM *v42;
  double v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  unint64_t v46;
  JSC::VM *v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  uint64_t v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  unint64_t v53;
  JSC::VM *v54;
  double v55;
  BOOL v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  unint64_t v59;
  JSC::VM *v60;
  double v61;
  BOOL v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64;
  unint64_t v65;
  JSC::VM *v66;
  double v67;
  BOOL v68;
  WTF::StringImpl *v69;
  WTF::StringImpl *v70;
  unint64_t v71;
  JSC::VM *v72;
  double v73;
  BOOL v74;
  WTF::StringImpl *v75;
  WTF::StringImpl *v76;
  unint64_t v77;
  BOOL v78;
  JSC::VM *v79;
  double v80;
  WTF::StringImpl *v81;
  WTF::StringImpl *v82;
  JSC::VM *v83;
  BOOL v84;
  JSC::VM *v85;
  double v86;
  WTF::StringImpl *v87;
  WTF::StringImpl *v88;
  unint64_t v89;
  double v90;
  double v91;
  double v92;
  double v93;
  WTF::StringImpl *v94;
  WTF::StringImpl *v95;
  unint64_t v96;
  double v97;
  double v98;
  double v99;
  double v100;
  WTF::StringImpl *v101;
  WTF::StringImpl *v102;
  unint64_t v103;
  JSC::VM *v104;
  WTF::StringImpl *v105;
  WTF::StringImpl *v106;
  unint64_t v107;
  JSC::VM *v108;
  WTF::StringImpl *v109;
  WTF::StringImpl *v110;
  JSC::VM *v111;
  WTF::StringImpl *v112;
  WTF::StringImpl *v113;
  JSC::VM *v114;
  WTF::StringImpl *v115;
  WTF::StringImpl *v116;
  WTF::StringImpl *v117;
  WTF::StringImpl *v118;
  unint64_t v119;
  uint64_t v120;
  JSC::VM *v121;
  WTF::StringImpl *v122;
  WTF::StringImpl *v123;
  JSC::VM *v124;
  WTF::StringImpl *v125;
  WTF::StringImpl *v126;
  unint64_t v127;
  JSC::VM *v128;
  WTF::StringImpl *v129;
  WTF::StringImpl *v130;
  unint64_t v131;
  JSC::VM *v132;
  BOOL v133;
  JSC::VM *v134;
  double v135;
  WTF::StringImpl *v136;
  WTF::StringImpl *v137;
  unint64_t v138;
  unint64_t v139;
  JSC::VM *v140;
  WTF::StringImpl *v141;
  uint64_t v142;
  WTF::StringImpl *v143;
  double v144;
  int v145;
  int v146;
  float v147;
  float v148;
  WTF::StringImpl *v149;
  WTF::StringImpl *v150;
  unint64_t v151;
  JSC::VM *v152;
  JSC::VM *v153;
  double v154;
  WTF::StringImpl *v155;
  WTF::StringImpl *v156;
  unint64_t v157;
  JSC::VM *v158;
  double v159;
  WTF::StringImpl *v160;
  WTF::StringImpl *v161;
  unint64_t v162;
  JSC::VM *v163;
  WTF::StringImpl *v164;
  WTF::StringImpl *v165;
  unint64_t v166;
  JSC::VM *v167;
  WTF::StringImpl *v168;
  WTF::StringImpl *v169;
  unint64_t v170;
  JSC::VM *v171;
  WTF::StringImpl *v172;
  unint64_t v173;
  JSC::VM *v174;
  int v175;
  int v176;
  int v177;
  WTF::StringImpl *v178;
  WebCore::Node *v179;
  WTF::StringImpl *v180;
  uint64_t v181;
  WebCore::MouseRelatedEvent *v182;
  WTF::StringImpl *v183;
  WebCore::JSDOMGlobalObject *v184;
  WTF::StringImpl *v185;
  int v186;
  WebCore::Node *v187;
  WTF *v188;
  WTF::StringImpl *v189;
  JSC::VM *v190;
  uint64_t v191;
  uint64_t v192;
  unsigned int v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  char **v198;
  int v199;
  unint64_t v200;
  WebCore::JSMouseEvent *v201;
  JSC::JSCell *v202;
  unint64_t Structure;
  JSC::Structure *v204;
  JSC::JSCell *v205;
  uint64_t v206;
  JSC::JSCell *v207;
  JSC::JSGlobalObject *v208;
  JSC::JSObject *v209;
  JSC::JSGlobalObject *v210;
  JSC::VM *v211;
  JSC::JSObject *v212;
  JSC::Structure *v213;
  JSC::VM *FunctionRealm;
  uint64_t v215;
  unsigned int v216;
  unint64_t v217;
  unint64_t v218;
  unint64_t v219;
  uint64_t v220;
  char **v221;
  int v222;
  JSC::JSCell *v223;
  unint64_t v224;
  JSC::Structure *v225;
  JSC::JSCell *v226;
  uint64_t v227;
  unint64_t SubclassStructure;
  _DWORD *v229;
  JSC::VM *v231;
  WTF::StringImpl *v232;
  uint64_t *v233;
  unsigned int *v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int *v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  uint64_t v241;
  uint64_t v242;
  WTF::StringImpl *v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;
  unint64_t v251;
  uint64_t v252;
  WTF::StringImpl *v253;
  unint64_t v254;
  WTF::StringImpl *v255;
  unint64_t v256;
  WTF::StringImpl *v257;
  unint64_t v258;
  WTF::StringImpl *v259;
  unint64_t v260;
  unint64_t v261;
  uint64_t v262;
  unint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  _DWORD *v267;
  unint64_t v268;
  WTF::StringImpl *v269;
  unint64_t v270;
  unint64_t v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v274;
  unint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t *v278;
  WTF::StringImpl **v279;
  unint64_t v280;
  int v281;
  unint64_t v282;
  int v283;
  unint64_t v284;
  int v285;
  unint64_t v286;
  unint64_t v287;
  unint64_t v288;
  unint64_t v289;
  unsigned int v290;
  unint64_t v291;
  uint64_t v292;
  uint64_t v294;
  uint64_t v295;
  unint64_t v298;
  int hasExceptionsAfterHandlingTraps;
  char v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  unint64_t v306;
  int v307;
  int v308;
  JSC::VM *v309;
  unint64_t v310;
  char v311;
  double v312;
  char v313;
  double v314;
  char v315;
  char v316;
  JSC::VM *v317;
  char v318;
  JSC::VM *v319;
  char v320;
  char v321;
  char v322;
  int v323;
  double v324;
  double v325;
  double v326;
  double v327;
  double v328;
  double v329;
  unint64_t v330;
  unint64_t v331;
  unint64_t v332;
  unint64_t v333;
  unint64_t v334;
  unint64_t v335;
  unint64_t v336;
  unint64_t v337;
  unint64_t v338;
  BOOL v339;
  int v340;
  uint64_t v341;
  int *v342;
  int v343;
  BOOL v344;
  int v345;
  uint64_t v346;
  int *v347;
  int v348;
  BOOL v349;
  int v350;
  uint64_t v351;
  int *v352;
  int v353;
  BOOL v354;
  int v355;
  uint64_t v356;
  int *v357;
  int v358;
  BOOL v359;
  int v360;
  uint64_t v361;
  int *v362;
  int v363;
  BOOL v364;
  int v365;
  uint64_t v366;
  int *v367;
  int v368;
  BOOL v369;
  int v370;
  uint64_t v371;
  int *v372;
  int v373;
  BOOL v374;
  int v375;
  uint64_t v376;
  int *v377;
  int v378;
  BOOL v379;
  int v380;
  uint64_t v381;
  int *v382;
  int v383;
  int v384;
  uint64_t v385;
  int *v386;
  int v387;
  BOOL v388;
  int v389;
  unint64_t v390;
  char v391;
  int v392;
  BOOL v393;
  BOOL v394;
  BOOL v395;
  int v396;
  int v397;
  BOOL v398;
  uint64_t v399;
  unint64_t v400;
  int v401;
  unsigned int v402;
  BOOL v403;
  unsigned int v404;
  __int16 v405;
  __int16 v406;
  uint64_t v407;
  uint64_t v408;
  JSC::Structure *v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  JSC::VM *v413;
  WTF::StringImpl *v414;
  WTF *v415;
  int v416;
  int v417;
  __int16 v418;
  _BYTE v419[28];
  unint64_t v420;
  int v421;
  WebCore::Node *v422;
  _BYTE v423[32];
  __int128 v424;
  uint64_t v425;
  WTF::StringImpl *v426;
  BOOL v427;
  __int16 v428;
  __int8 v429;
  WTF *v430;
  int v431;
  int v432;
  __int16 v433;
  _BYTE v434[28];
  unint64_t v435;
  int v436;
  WebCore::Node *v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  uint64_t v441;
  WTF::StringImpl *v442;
  BOOL v443;
  int v444;
  WTF::StringImpl *v445;
  int v446;
  JSC::VM *v447;
  WTF::StringImpl *v448;
  uint64_t v449[2];

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v5, a1, v24);
  }
  v6 = a2;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 48);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, v8, (uint64_t)&v445);
  v10 = v446;
  if (v446)
  {
    v25 = 0;
    goto LABEL_403;
  }
  v412 = v7;
  v413 = v5;
  if ((unint64_t)(*(int *)(v6 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v3 = 0;
    v12 = *((_QWORD *)a1 + 7);
    v447 = (JSC::VM *)v12;
    LODWORD(v2) = 1;
    v11 = 10;
  }
  else
  {
    v11 = *(_QWORD *)(v6 + 56);
    v12 = *((_QWORD *)a1 + 7);
    v447 = (JSC::VM *)v12;
    if ((v11 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v3 = 0;
      LODWORD(v2) = 1;
    }
    else
    {
      if ((v11 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject((JSC::JSCell *)v11)) == 0)
      {
        JSC::throwTypeError();
        v444 = 1;
        goto LABEL_359;
      }
      v3 = (JSC::Structure *)Object;
      LODWORD(v2) = 0;
    }
  }
  v14 = &webThreadDelegateMessageScopeCount;
    goto LABEL_786;
  v15 = (WTF::StringImpl *)WebCore::mousePointerEventType(void)::mouseType;
  if (!WebCore::mousePointerEventType(void)::mouseType)
  {
    v17 = 1;
    if ((v2 & 1) == 0)
      goto LABEL_19;
    goto LABEL_14;
  }
  v16 = *(_DWORD *)WebCore::mousePointerEventType(void)::mouseType;
  while (1)
  {
    v17 = 0;
    *(_DWORD *)v15 = v16 + 2;
    if ((v2 & 1) != 0)
    {
LABEL_14:
      v399 = v11;
      v395 = 0;
      v396 = 0;
      v397 = 0;
      v404 = 0;
      v405 = 0;
      v406 = 0;
      v407 = 0;
      v409 = 0;
      v410 = 0;
      v18 = 0;
      v19 = 0;
      v408 = 0;
      v398 = 0;
      v403 = 0;
      v402 = 0;
      v411 = 0;
      v20 = 0;
      v21 = 1.0;
      v22 = 0.0;
      v23 = 0.0;
LABEL_273:
      v143 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
      if (*MEMORY[0x1E0CBF738])
        *(_DWORD *)v143 += 2;
      LODWORD(v415) = 0;
      goto LABEL_276;
    }
LABEL_19:
    v391 = v17;
    WTF::AtomStringImpl::addLiteral();
    v26 = v414;
    v28 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v27);
      else
        *(_DWORD *)v26 -= 2;
    }
    if (*(_DWORD *)(v12 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12))
      goto LABEL_225;
    if (v28 == 10)
    {
      v393 = 0;
      goto LABEL_30;
    }
    v29 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v28 >= 0xFFFE000000000000)
    {
      v339 = (_DWORD)v28 == 0;
      goto LABEL_879;
    }
    *(_QWORD *)&v30 = v28 - 0x2000000000000;
    if (v28 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v28 & 0xFFFE000000000002) != 0)
      {
        v31 = v28 == 7;
        goto LABEL_29;
      }
      v340 = *(unsigned __int8 *)(v28 + 5);
      if (v340 == 3)
      {
        v343 = *(_DWORD *)(v28 + 8);
      }
      else
      {
        if (v340 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_883:
            v31 = 1;
            goto LABEL_29;
          }
          v339 = *(_QWORD *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_879;
        }
        v341 = *(_QWORD *)(v28 + 8);
        if ((v341 & 1) != 0)
          v342 = (int *)(v28 + 16);
        else
          v342 = (int *)(v341 + 4);
        v343 = *v342;
      }
      v339 = v343 == 0;
LABEL_879:
      v31 = !v339;
      goto LABEL_29;
    }
    if (v30 > 0.0)
      goto LABEL_883;
    v31 = v30 < 0.0;
LABEL_29:
    v393 = v31;
    if (*((_DWORD *)v29 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v29))
      goto LABEL_225;
LABEL_30:
    WTF::AtomStringImpl::addLiteral();
    v32 = v414;
    v34 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, v33);
      else
        *(_DWORD *)v32 -= 2;
    }
    if (*(_DWORD *)(v12 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12))
      goto LABEL_225;
    if (v34 == 10)
    {
      BYTE4(v410) = 0;
      goto LABEL_41;
    }
    v35 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v34 >= 0xFFFE000000000000)
    {
      v344 = (_DWORD)v34 == 0;
      goto LABEL_886;
    }
    *(_QWORD *)&v36 = v34 - 0x2000000000000;
    if (v34 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v34 & 0xFFFE000000000002) != 0)
      {
        v37 = v34 == 7;
        goto LABEL_40;
      }
      v345 = *(unsigned __int8 *)(v34 + 5);
      if (v345 == 3)
      {
        v348 = *(_DWORD *)(v34 + 8);
      }
      else
      {
        if (v345 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v34 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_890:
            v37 = 1;
            goto LABEL_40;
          }
          v344 = *(_QWORD *)(16 * (*(_DWORD *)v34 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_886;
        }
        v346 = *(_QWORD *)(v34 + 8);
        if ((v346 & 1) != 0)
          v347 = (int *)(v34 + 16);
        else
          v347 = (int *)(v346 + 4);
        v348 = *v347;
      }
      v344 = v348 == 0;
LABEL_886:
      v37 = !v344;
      goto LABEL_40;
    }
    if (v36 > 0.0)
      goto LABEL_890;
    v37 = v36 < 0.0;
LABEL_40:
    BYTE4(v410) = v37;
    if (*((_DWORD *)v35 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v35))
      goto LABEL_225;
LABEL_41:
    WTF::AtomStringImpl::addLiteral();
    v38 = v414;
    v40 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v38)
    {
      if (*(_DWORD *)v38 == 2)
        WTF::StringImpl::destroy(v38, v39);
      else
        *(_DWORD *)v38 -= 2;
    }
    if (*(_DWORD *)(v12 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12))
      goto LABEL_225;
    if (v40 == 10)
    {
      v41 = 0;
      goto LABEL_52;
    }
    v42 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v40 >= 0xFFFE000000000000)
    {
      v349 = (_DWORD)v40 == 0;
      goto LABEL_893;
    }
    *(_QWORD *)&v43 = v40 - 0x2000000000000;
    if (v40 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v40 & 0xFFFE000000000002) != 0)
      {
        v41 = v40 == 7;
        goto LABEL_51;
      }
      v350 = *(unsigned __int8 *)(v40 + 5);
      if (v350 == 3)
      {
        v353 = *(_DWORD *)(v40 + 8);
      }
      else
      {
        if (v350 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v40 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_897:
            v41 = 1;
            goto LABEL_51;
          }
          v349 = *(_QWORD *)(16 * (*(_DWORD *)v40 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_893;
        }
        v351 = *(_QWORD *)(v40 + 8);
        if ((v351 & 1) != 0)
          v352 = (int *)(v40 + 16);
        else
          v352 = (int *)(v351 + 4);
        v353 = *v352;
      }
      v349 = v353 == 0;
LABEL_893:
      v41 = !v349;
      goto LABEL_51;
    }
    if (v43 > 0.0)
      goto LABEL_897;
    v41 = v43 < 0.0;
LABEL_51:
    if (*((_DWORD *)v42 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v42))
      goto LABEL_225;
LABEL_52:
    WTF::AtomStringImpl::addLiteral();
    v44 = v414;
    v46 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v44)
    {
      if (*(_DWORD *)v44 == 2)
      {
        v243 = v44;
        v244 = v46;
        WTF::StringImpl::destroy(v243, v45);
        v46 = v244;
      }
      else
      {
        *(_DWORD *)v44 -= 2;
      }
    }
    if (*(_DWORD *)(v12 + 80))
    {
      v298 = v46;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12);
      v46 = v298;
      if (hasExceptionsAfterHandlingTraps)
        goto LABEL_225;
    }
    LOBYTE(v410) = v41;
    if (v46 == 10)
    {
      v400 = 0;
    }
    else
    {
      v414 = (WTF::StringImpl *)v46;
      v47 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v46 < 0xFFFE000000000000)
      {
        v245 = v46 - 0x2000000000000;
        if (v46 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v414, a1);
          v245 = v330;
        }
        v246 = (v245 >> 52) & 0x7FF;
        if ((v246 - 1023) <= 0x53)
        {
          v277 = v245 >> (51 - (v245 >> 52));
          if (v246 > 0x433)
            LODWORD(v277) = v245 << ((v245 >> 52) - 51);
          if (v246 >= 0x41F)
            LODWORD(v46) = v277;
          else
            LODWORD(v46) = (((1 << ((v245 >> 52) + 1)) - 1) & v277) + (1 << ((v245 >> 52) + 1));
          if ((v245 & 0x8000000000000000) == 0)
            v46 = v46;
          else
            v46 = -(int)v46;
        }
        else
        {
          v46 = 0;
        }
      }
      if (*((_DWORD *)v47 + 20))
      {
        v309 = v47;
        v310 = v46;
        v311 = JSC::VM::hasExceptionsAfterHandlingTraps(v309);
        v46 = v310;
        if ((v311 & 1) != 0)
          goto LABEL_225;
      }
      v400 = v46;
    }
    WTF::AtomStringImpl::addLiteral();
    v48 = v414;
    v50 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v48)
    {
      if (*(_DWORD *)v48 == 2)
        WTF::StringImpl::destroy(v48, v49);
      else
        *(_DWORD *)v48 -= 2;
    }
    if (*(_DWORD *)(v12 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12))
      goto LABEL_225;
    if ((v50 | 8) == 0xA)
    {
      v409 = 0;
    }
    else
    {
      v414 = (WTF::StringImpl *)*((_QWORD *)a1 + 7);
      if ((v50 & 0xFFFE000000000002) != 0
        || *(unsigned __int8 *)(v50 + 5) < 0x17u
        || &WebCore::JSWindowProxy::s_info != (char **)(16
                                                      * *(unsigned int *)(16 * (*(_DWORD *)v50 & 0xFFFFFFFE) + 0x4C))
        || (v265 = *(_QWORD *)(*(_QWORD *)(v50 + 16) + 3408),
            !(*(uint64_t (**)(uint64_t))(*(_QWORD *)v265 + 104))(v265))
        || (v266 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v265 + 104))(v265),
            (v267 = *(_DWORD **)(v266 + 112)) == 0))
      {
        JSC::throwTypeError();
LABEL_225:
        v120 = 0;
        v3 = 0;
        v444 = 1;
        goto LABEL_349;
      }
      v409 = *(JSC::Structure **)(v266 + 112);
      ++*v267;
    }
    WTF::AtomStringImpl::addLiteral();
    v51 = v414;
    v53 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v51)
    {
      if (*(_DWORD *)v51 == 2)
        WTF::StringImpl::destroy(v51, v52);
      else
        *(_DWORD *)v51 -= 2;
    }
    if (*(_DWORD *)(v12 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12))
    {
LABEL_740:
      v120 = 0;
      v444 = 1;
      goto LABEL_418;
    }
    if (v53 == 10)
    {
      BYTE4(v408) = 0;
      goto LABEL_78;
    }
    v54 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v53 >= 0xFFFE000000000000)
    {
      v354 = (_DWORD)v53 == 0;
      goto LABEL_900;
    }
    *(_QWORD *)&v55 = v53 - 0x2000000000000;
    if (v53 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v53 & 0xFFFE000000000002) != 0)
      {
        v56 = v53 == 7;
        goto LABEL_77;
      }
      v355 = *(unsigned __int8 *)(v53 + 5);
      if (v355 == 3)
      {
        v358 = *(_DWORD *)(v53 + 8);
      }
      else
      {
        if (v355 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v53 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_904:
            v56 = 1;
            goto LABEL_77;
          }
          v354 = *(_QWORD *)(16 * (*(_DWORD *)v53 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_900;
        }
        v356 = *(_QWORD *)(v53 + 8);
        if ((v356 & 1) != 0)
          v357 = (int *)(v53 + 16);
        else
          v357 = (int *)(v356 + 4);
        v358 = *v357;
      }
      v354 = v358 == 0;
LABEL_900:
      v56 = !v354;
      goto LABEL_77;
    }
    if (v55 > 0.0)
      goto LABEL_904;
    v56 = v55 < 0.0;
LABEL_77:
    BYTE4(v408) = v56;
    if (*((_DWORD *)v54 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v54))
      goto LABEL_740;
LABEL_78:
    WTF::AtomStringImpl::addLiteral();
    v57 = v414;
    v59 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v57)
    {
      if (*(_DWORD *)v57 == 2)
        WTF::StringImpl::destroy(v57, v58);
      else
        *(_DWORD *)v57 -= 2;
    }
    if (*(_DWORD *)(v12 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12))
      goto LABEL_740;
    if (v59 == 10)
    {
      LOBYTE(v408) = 0;
      goto LABEL_89;
    }
    v60 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v59 >= 0xFFFE000000000000)
    {
      v359 = (_DWORD)v59 == 0;
      goto LABEL_907;
    }
    *(_QWORD *)&v61 = v59 - 0x2000000000000;
    if (v59 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v59 & 0xFFFE000000000002) != 0)
      {
        v62 = v59 == 7;
        goto LABEL_88;
      }
      v360 = *(unsigned __int8 *)(v59 + 5);
      if (v360 == 3)
      {
        v363 = *(_DWORD *)(v59 + 8);
      }
      else
      {
        if (v360 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v59 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_911:
            v62 = 1;
            goto LABEL_88;
          }
          v359 = *(_QWORD *)(16 * (*(_DWORD *)v59 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_907;
        }
        v361 = *(_QWORD *)(v59 + 8);
        if ((v361 & 1) != 0)
          v362 = (int *)(v59 + 16);
        else
          v362 = (int *)(v361 + 4);
        v363 = *v362;
      }
      v359 = v363 == 0;
LABEL_907:
      v62 = !v359;
      goto LABEL_88;
    }
    if (v61 > 0.0)
      goto LABEL_911;
    v62 = v61 < 0.0;
LABEL_88:
    LOBYTE(v408) = v62;
    if (*((_DWORD *)v60 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v60))
      goto LABEL_740;
LABEL_89:
    WTF::AtomStringImpl::addLiteral();
    v63 = v414;
    v65 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v63)
    {
      if (*(_DWORD *)v63 == 2)
        WTF::StringImpl::destroy(v63, v64);
      else
        *(_DWORD *)v63 -= 2;
    }
    if (*(_DWORD *)(v12 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12))
      goto LABEL_740;
    if (v65 == 10)
    {
      BYTE4(v407) = 0;
      goto LABEL_100;
    }
    v66 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v65 >= 0xFFFE000000000000)
    {
      v364 = (_DWORD)v65 == 0;
      goto LABEL_914;
    }
    *(_QWORD *)&v67 = v65 - 0x2000000000000;
    if (v65 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v65 & 0xFFFE000000000002) != 0)
      {
        v68 = v65 == 7;
        goto LABEL_99;
      }
      v365 = *(unsigned __int8 *)(v65 + 5);
      if (v365 == 3)
      {
        v368 = *(_DWORD *)(v65 + 8);
      }
      else
      {
        if (v365 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v65 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_918:
            v68 = 1;
            goto LABEL_99;
          }
          v364 = *(_QWORD *)(16 * (*(_DWORD *)v65 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_914;
        }
        v366 = *(_QWORD *)(v65 + 8);
        if ((v366 & 1) != 0)
          v367 = (int *)(v65 + 16);
        else
          v367 = (int *)(v366 + 4);
        v368 = *v367;
      }
      v364 = v368 == 0;
LABEL_914:
      v68 = !v364;
      goto LABEL_99;
    }
    if (v67 > 0.0)
      goto LABEL_918;
    v68 = v67 < 0.0;
LABEL_99:
    BYTE4(v407) = v68;
    if (*((_DWORD *)v66 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v66))
      goto LABEL_740;
LABEL_100:
    WTF::AtomStringImpl::addLiteral();
    v69 = v414;
    v71 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v69)
    {
      if (*(_DWORD *)v69 == 2)
        WTF::StringImpl::destroy(v69, v70);
      else
        *(_DWORD *)v69 -= 2;
    }
    if (*(_DWORD *)(v12 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12))
      goto LABEL_740;
    if (v71 == 10)
    {
      LOBYTE(v407) = 0;
      goto LABEL_111;
    }
    v72 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v71 >= 0xFFFE000000000000)
    {
      v369 = (_DWORD)v71 == 0;
      goto LABEL_921;
    }
    *(_QWORD *)&v73 = v71 - 0x2000000000000;
    if (v71 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v71 & 0xFFFE000000000002) != 0)
      {
        v74 = v71 == 7;
        goto LABEL_110;
      }
      v370 = *(unsigned __int8 *)(v71 + 5);
      if (v370 == 3)
      {
        v373 = *(_DWORD *)(v71 + 8);
      }
      else
      {
        if (v370 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v71 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_925:
            v74 = 1;
            goto LABEL_110;
          }
          v369 = *(_QWORD *)(16 * (*(_DWORD *)v71 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_921;
        }
        v371 = *(_QWORD *)(v71 + 8);
        if ((v371 & 1) != 0)
          v372 = (int *)(v71 + 16);
        else
          v372 = (int *)(v371 + 4);
        v373 = *v372;
      }
      v369 = v373 == 0;
LABEL_921:
      v74 = !v369;
      goto LABEL_110;
    }
    if (v73 > 0.0)
      goto LABEL_925;
    v74 = v73 < 0.0;
LABEL_110:
    LOBYTE(v407) = v74;
    if (*((_DWORD *)v72 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v72))
      goto LABEL_740;
LABEL_111:
    WTF::AtomStringImpl::addLiteral();
    v75 = v414;
    v77 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v75)
    {
      if (*(_DWORD *)v75 == 2)
        WTF::StringImpl::destroy(v75, v76);
      else
        *(_DWORD *)v75 -= 2;
    }
    if (*(_DWORD *)(v12 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12))
      goto LABEL_740;
    if (v77 == 10)
    {
      v78 = 0;
      goto LABEL_122;
    }
    v79 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v77 >= 0xFFFE000000000000)
    {
      v374 = (_DWORD)v77 == 0;
      goto LABEL_928;
    }
    *(_QWORD *)&v80 = v77 - 0x2000000000000;
    if (v77 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v77 & 0xFFFE000000000002) != 0)
      {
        v78 = v77 == 7;
        goto LABEL_121;
      }
      v375 = *(unsigned __int8 *)(v77 + 5);
      if (v375 == 3)
      {
        v378 = *(_DWORD *)(v77 + 8);
      }
      else
      {
        if (v375 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v77 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_932:
            v78 = 1;
            goto LABEL_121;
          }
          v374 = *(_QWORD *)(16 * (*(_DWORD *)v77 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_928;
        }
        v376 = *(_QWORD *)(v77 + 8);
        if ((v376 & 1) != 0)
          v377 = (int *)(v77 + 16);
        else
          v377 = (int *)(v376 + 4);
        v378 = *v377;
      }
      v374 = v378 == 0;
LABEL_928:
      v78 = !v374;
      goto LABEL_121;
    }
    if (v80 > 0.0)
      goto LABEL_932;
    v78 = v80 < 0.0;
LABEL_121:
    if (*((_DWORD *)v79 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v79))
      goto LABEL_740;
LABEL_122:
    WTF::AtomStringImpl::addLiteral();
    v81 = v414;
    v12 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v81)
    {
      if (*(_DWORD *)v81 == 2)
        WTF::StringImpl::destroy(v81, v82);
      else
        *(_DWORD *)v81 -= 2;
    }
    v389 = v2;
    v2 = v6;
    v83 = v447;
    if (*((_DWORD *)v447 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v447))
      goto LABEL_417;
    if (v12 == 10)
    {
      v84 = 0;
      goto LABEL_133;
    }
    v85 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v12 >= 0xFFFE000000000000)
    {
      v379 = (_DWORD)v12 == 0;
      goto LABEL_935;
    }
    *(_QWORD *)&v86 = v12 - 0x2000000000000;
    if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v12 & 0xFFFE000000000002) != 0)
      {
        v84 = v12 == 7;
        goto LABEL_132;
      }
      v380 = *(unsigned __int8 *)(v12 + 5);
      if (v380 == 3)
      {
        v383 = *(_DWORD *)(v12 + 8);
      }
      else
      {
        if (v380 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_939:
            v84 = 1;
            goto LABEL_132;
          }
          v379 = *(_QWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_935;
        }
        v381 = *(_QWORD *)(v12 + 8);
        if ((v381 & 1) != 0)
          v382 = (int *)(v12 + 16);
        else
          v382 = (int *)(v381 + 4);
        v383 = *v382;
      }
      v379 = v383 == 0;
LABEL_935:
      v84 = !v379;
      goto LABEL_132;
    }
    if (v86 > 0.0)
      goto LABEL_939;
    v84 = v86 < 0.0;
LABEL_132:
    if (*((_DWORD *)v85 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v85))
      goto LABEL_417;
LABEL_133:
    WTF::AtomStringImpl::addLiteral();
    v87 = v414;
    v89 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v87)
    {
      if (*(_DWORD *)v87 == 2)
      {
        v253 = v87;
        v254 = v89;
        WTF::StringImpl::destroy(v253, v88);
        v89 = v254;
      }
      else
      {
        *(_DWORD *)v87 -= 2;
      }
    }
    if (*((_DWORD *)v83 + 20))
    {
      v12 = v89;
      v301 = JSC::VM::hasExceptionsAfterHandlingTraps(v83);
      v89 = v12;
      if (v301)
        goto LABEL_417;
    }
    if (v89 == 10)
    {
      v406 = 0;
    }
    else
    {
      v414 = (WTF::StringImpl *)v89;
      if (v89 < 0xFFFE000000000000)
      {
        v12 = *((_QWORD *)a1 + 7);
        if (v89 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v414, a1);
          v90 = v328;
        }
        else
        {
          *(_QWORD *)&v90 = v89 - 0x2000000000000;
        }
        if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
          goto LABEL_417;
        LOWORD(v89) = 0;
        if (fabs(v90) != INFINITY && v90 != 0.0)
        {
          v91 = -floor(-v90);
          v92 = floor(v90);
          if (v90 >= 0.0)
            v91 = v92;
          v93 = fmod(v91, 65536.0);
          if (v93 > 32767.0)
            v93 = v93 + -65536.0;
          LODWORD(v89) = (int)v93;
        }
      }
      v406 = v89;
    }
    WTF::AtomStringImpl::addLiteral();
    v94 = v414;
    v96 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v94)
    {
      if (*(_DWORD *)v94 == 2)
      {
        v255 = v94;
        v256 = v96;
        WTF::StringImpl::destroy(v255, v95);
        v96 = v256;
      }
      else
      {
        *(_DWORD *)v94 -= 2;
      }
    }
    if (*((_DWORD *)v83 + 20))
    {
      v12 = v96;
      v302 = JSC::VM::hasExceptionsAfterHandlingTraps(v83);
      v96 = v12;
      if (v302)
        goto LABEL_417;
    }
    if (v96 == 10)
    {
      v405 = 0;
    }
    else
    {
      v414 = (WTF::StringImpl *)v96;
      v12 = *((_QWORD *)a1 + 7);
      if (v96 < 0xFFFE000000000000 || (v96 & 0x80000000) != 0)
      {
        if (v96 >= 0xFFFE000000000000)
        {
          v97 = (double)(int)v96;
        }
        else if (v96 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v414, a1);
          v97 = v329;
        }
        else
        {
          *(_QWORD *)&v97 = v96 - 0x2000000000000;
        }
        if (*(_DWORD *)(v12 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v12) & 1) != 0)
          goto LABEL_417;
        LOWORD(v96) = 0;
        if (fabs(v97) != INFINITY && v97 != 0.0)
        {
          v98 = -floor(-v97);
          v99 = floor(v97);
          if (v97 >= 0.0)
            v98 = v99;
          v100 = fmod(v98, 65536.0);
          if (v100 < 0.0)
            v100 = v100 + 65536.0;
          LODWORD(v96) = (int)v100;
        }
      }
      v405 = v96;
    }
    WTF::AtomStringImpl::addLiteral();
    v101 = v414;
    v103 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v101)
    {
      if (*(_DWORD *)v101 == 2)
      {
        v257 = v101;
        v258 = v103;
        WTF::StringImpl::destroy(v257, v102);
        v103 = v258;
      }
      else
      {
        *(_DWORD *)v101 -= 2;
      }
    }
    if (*((_DWORD *)v83 + 20))
    {
      v12 = v103;
      v303 = JSC::VM::hasExceptionsAfterHandlingTraps(v83);
      v103 = v12;
      if (v303)
        goto LABEL_417;
    }
    if (v103 == 10)
    {
      v404 = 0;
    }
    else
    {
      v414 = (WTF::StringImpl *)v103;
      v104 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v103 < 0xFFFE000000000000)
      {
        v261 = v103 - 0x2000000000000;
        if (v103 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v414, a1);
          v261 = v334;
        }
        v262 = (v261 >> 52) & 0x7FF;
        if ((v262 - 1023) <= 0x53)
        {
          v286 = v261 >> (51 - (v261 >> 52));
          if (v262 > 0x433)
            LODWORD(v286) = v261 << ((v261 >> 52) - 51);
          if (v262 >= 0x41F)
            LODWORD(v103) = v286;
          else
            LODWORD(v103) = (((1 << ((v261 >> 52) + 1)) - 1) & v286) + (1 << ((v261 >> 52) + 1));
          if ((v261 & 0x8000000000000000) == 0)
            v103 = v103;
          else
            v103 = -(int)v103;
        }
        else
        {
          v103 = 0;
        }
      }
      if (*((_DWORD *)v104 + 20))
      {
        v317 = v104;
        v12 = v103;
        v318 = JSC::VM::hasExceptionsAfterHandlingTraps(v317);
        LODWORD(v103) = v12;
        if ((v318 & 1) != 0)
          goto LABEL_417;
      }
      v404 = v103;
    }
    WTF::AtomStringImpl::addLiteral();
    v105 = v414;
    v107 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v105)
    {
      if (*(_DWORD *)v105 == 2)
      {
        v259 = v105;
        v260 = v107;
        WTF::StringImpl::destroy(v259, v106);
        v107 = v260;
      }
      else
      {
        *(_DWORD *)v105 -= 2;
      }
    }
    if (*((_DWORD *)v83 + 20))
    {
      v12 = v107;
      v304 = JSC::VM::hasExceptionsAfterHandlingTraps(v83);
      v107 = v12;
      if (v304)
        goto LABEL_417;
    }
    v403 = v84;
    if (v107 == 10)
    {
      v402 = 0;
    }
    else
    {
      v414 = (WTF::StringImpl *)v107;
      v108 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v107 < 0xFFFE000000000000)
      {
        v263 = v107 - 0x2000000000000;
        if (v107 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v414, a1);
          v263 = v335;
        }
        v264 = (v263 >> 52) & 0x7FF;
        if ((v264 - 1023) <= 0x53)
        {
          v287 = v263 >> (51 - (v263 >> 52));
          if (v264 > 0x433)
            LODWORD(v287) = v263 << ((v263 >> 52) - 51);
          if (v264 >= 0x41F)
            LODWORD(v107) = v287;
          else
            LODWORD(v107) = (((1 << ((v263 >> 52) + 1)) - 1) & v287) + (1 << ((v263 >> 52) + 1));
          if ((v263 & 0x8000000000000000) == 0)
            v107 = v107;
          else
            v107 = -(int)v107;
        }
        else
        {
          v107 = 0;
        }
      }
      if (*((_DWORD *)v108 + 20))
      {
        v319 = v108;
        v12 = v107;
        v320 = JSC::VM::hasExceptionsAfterHandlingTraps(v319);
        LODWORD(v107) = v12;
        if ((v320 & 1) != 0)
          goto LABEL_417;
      }
      v402 = v107;
    }
    WTF::AtomStringImpl::addLiteral();
    v109 = v414;
    v12 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v109)
    {
      if (*(_DWORD *)v109 == 2)
        WTF::StringImpl::destroy(v109, v110);
      else
        *(_DWORD *)v109 -= 2;
    }
    if (*((_DWORD *)v83 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v83))
      goto LABEL_417;
    v23 = 0.0;
    if (v12 != 10)
    {
      v414 = (WTF::StringImpl *)v12;
      v111 = (JSC::VM *)*((_QWORD *)a1 + 7);
      v449[0] = (uint64_t)v111;
      if (v12 >= 0xFFFE000000000000)
      {
        v23 = (double)(int)v12;
      }
      else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v414, a1);
        v23 = v325;
      }
      else
      {
        *(_QWORD *)&v23 = v12 - 0x2000000000000;
      }
      if (*((_DWORD *)v111 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v111) & 1) != 0)
        goto LABEL_417;
      if ((*(_QWORD *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
        goto LABEL_691;
    }
    WTF::AtomStringImpl::addLiteral();
    v112 = v414;
    v12 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v112)
    {
      if (*(_DWORD *)v112 == 2)
        WTF::StringImpl::destroy(v112, v113);
      else
        *(_DWORD *)v112 -= 2;
    }
    if (*((_DWORD *)v83 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v83))
      goto LABEL_417;
    v22 = 0.0;
    if (v12 != 10)
    {
      v414 = (WTF::StringImpl *)v12;
      v114 = (JSC::VM *)*((_QWORD *)a1 + 7);
      v449[0] = (uint64_t)v114;
      if (v12 >= 0xFFFE000000000000)
      {
        v22 = (double)(int)v12;
      }
      else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v414, a1);
        v22 = v326;
      }
      else
      {
        *(_QWORD *)&v22 = v12 - 0x2000000000000;
      }
      if (*((_DWORD *)v114 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v114) & 1) != 0)
        goto LABEL_417;
      if ((*(_QWORD *)&v22 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
      {
LABEL_691:
        JSC::throwTypeError();
LABEL_417:
        v120 = 0;
        v444 = 1;
        v6 = v2;
LABEL_418:
        v3 = v409;
        goto LABEL_349;
      }
    }
    WTF::AtomStringImpl::addLiteral();
    v115 = v414;
    v12 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v115)
    {
      if (*(_DWORD *)v115 == 2)
        WTF::StringImpl::destroy(v115, v116);
      else
        *(_DWORD *)v115 -= 2;
    }
    if (*((_DWORD *)v83 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v83))
      goto LABEL_417;
    if ((v12 | 8) == 0xA)
    {
      v411 = 0;
      goto LABEL_215;
    }
    v414 = (WTF::StringImpl *)*((_QWORD *)a1 + 7);
    if ((v12 & 0xFFFE000000000002) != 0)
      goto LABEL_416;
    v241 = *(unsigned int *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C);
    v242 = 16 * v241;
    if ((char **)(16 * v241) == &WebCore::JSWindowProxy::s_info)
    {
      v278 = (uint64_t *)(*(_QWORD *)(v12 + 16) + 3408);
      goto LABEL_604;
    }
    if (!(_DWORD)v241 || (char **)v242 == &WebCore::JSDOMWindow::s_info)
    {
      if (!(_DWORD)v241)
        goto LABEL_416;
LABEL_603:
      v278 = (uint64_t *)(v12 + 3408);
LABEL_604:
      v294 = *v278;
      if (!*v278)
        goto LABEL_416;
      goto LABEL_605;
    }
    v292 = 16 * v241;
    do
      v292 = *(_QWORD *)(v292 + 16);
    while ((char **)v292 != &WebCore::JSDOMWindow::s_info && v292 != 0);
    if (v292)
      goto LABEL_603;
    if ((char **)v242 != &WebCore::JSWorkerGlobalScope::s_info)
    {
      v295 = v242;
      do
        v295 = *(_QWORD *)(v295 + 16);
      while ((char **)v295 != &WebCore::JSWorkerGlobalScope::s_info && v295 != 0);
      if (!v295)
      {
        if ((char **)v242 != &WebCore::JSEventTarget::s_info)
        {
          do
            v242 = *(_QWORD *)(v242 + 16);
          while ((char **)v242 != &WebCore::JSEventTarget::s_info && v242 != 0);
          if (!v242)
          {
LABEL_416:
            JSC::throwTypeError();
            goto LABEL_417;
          }
        }
        v278 = (uint64_t *)(v12 + 24);
        goto LABEL_604;
      }
    }
    v294 = *(_QWORD *)(v12 + 3400) + 320;
LABEL_605:
    v411 = v294;
    if ((*(_BYTE *)(v294 + 22) & 2) != 0)
      *(_DWORD *)(v294 + 24) += 2;
    else
      (*(void (**)(uint64_t))(*(_QWORD *)v294 + 88))(v294);
LABEL_215:
    WTF::AtomStringImpl::addLiteral();
    v117 = v414;
    v119 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v117)
    {
      if (*(_DWORD *)v117 == 2)
      {
        v268 = v119;
        WTF::StringImpl::destroy(v117, v118);
        v119 = v268;
      }
      else
      {
        *(_DWORD *)v117 -= 2;
      }
    }
    if (*((_DWORD *)v83 + 20))
    {
      v12 = v119;
      v305 = JSC::VM::hasExceptionsAfterHandlingTraps(v83);
      v119 = v12;
      if (v305)
        goto LABEL_752;
    }
    v398 = v78;
    if (v119 == 10)
    {
      v397 = 0;
    }
    else
    {
      v414 = (WTF::StringImpl *)v119;
      v121 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v119 < 0xFFFE000000000000)
      {
        v271 = v119 - 0x2000000000000;
        if (v119 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v414, a1);
          v271 = v336;
        }
        v272 = (v271 >> 52) & 0x7FF;
        if ((v272 - 1023) <= 0x53)
        {
          v288 = v271 >> (51 - (v271 >> 52));
          if (v272 > 0x433)
            LODWORD(v288) = v271 << ((v271 >> 52) - 51);
          if (v272 >= 0x41F)
            LODWORD(v119) = v288;
          else
            LODWORD(v119) = (((1 << ((v271 >> 52) + 1)) - 1) & v288) + (1 << ((v271 >> 52) + 1));
          if ((v271 & 0x8000000000000000) == 0)
            v119 = v119;
          else
            v119 = -(int)v119;
        }
        else
        {
          v119 = 0;
        }
      }
      if (*((_DWORD *)v121 + 20))
      {
        v12 = v119;
        v321 = JSC::VM::hasExceptionsAfterHandlingTraps(v121);
        LODWORD(v119) = v12;
        if ((v321 & 1) != 0)
          goto LABEL_752;
      }
      v397 = v119;
    }
    WTF::AtomStringImpl::addLiteral();
    v122 = v414;
    v12 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
    if (v122)
    {
      if (*(_DWORD *)v122 == 2)
        WTF::StringImpl::destroy(v122, v123);
      else
        *(_DWORD *)v122 -= 2;
    }
    if (!*((_DWORD *)v83 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v83))
    {
      v399 = v11;
      if (v12 == 10)
      {
        v12 = 0;
        goto LABEL_237;
      }
      v414 = (WTF::StringImpl *)v12;
      v124 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v12 < 0xFFFE000000000000)
      {
        v273 = v12 - 0x2000000000000;
        if (v12 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v414, a1);
          v273 = v337;
        }
        v274 = (v273 >> 52) & 0x7FF;
        if ((v274 - 1023) <= 0x53)
        {
          v289 = v273 >> (51 - (v273 >> 52));
          if (v274 > 0x433)
            LODWORD(v289) = v273 << ((v273 >> 52) - 51);
          if (v274 >= 0x41F)
            v290 = v289;
          else
            v290 = (((1 << ((v273 >> 52) + 1)) - 1) & v289) + (1 << ((v273 >> 52) + 1));
          if ((v273 & 0x8000000000000000) == 0)
            v12 = v290;
          else
            v12 = -v290;
        }
        else
        {
          v12 = 0;
        }
      }
      if (*((_DWORD *)v124 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v124) & 1) != 0)
      {
LABEL_754:
        v444 = 1;
        v11 = v399;
        goto LABEL_755;
      }
LABEL_237:
      WTF::AtomStringImpl::addLiteral();
      v125 = v414;
      v127 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
      if (v125)
      {
        if (*(_DWORD *)v125 == 2)
          WTF::StringImpl::destroy(v125, v126);
        else
          *(_DWORD *)v125 -= 2;
      }
      if (*((_DWORD *)v83 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v83))
        goto LABEL_754;
      v21 = 1.0;
      v6 = v2;
      if (v127 != 10)
      {
        v414 = (WTF::StringImpl *)v127;
        v128 = (JSC::VM *)*((_QWORD *)a1 + 7);
        v449[0] = (uint64_t)v128;
        if (v127 >= 0xFFFE000000000000)
        {
          v21 = (double)(int)v127;
        }
        else if (v127 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v414, a1);
          v21 = v327;
        }
        else
        {
          *(_QWORD *)&v21 = v127 - 0x2000000000000;
        }
        if (*((_DWORD *)v128 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v128) & 1) != 0)
          goto LABEL_762;
        if ((*(_QWORD *)&v21 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
        {
          JSC::throwTypeError();
          goto LABEL_762;
        }
      }
      WTF::AtomStringImpl::addLiteral();
      v129 = v414;
      v131 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
      if (v129)
      {
        if (*(_DWORD *)v129 == 2)
          WTF::StringImpl::destroy(v129, v130);
        else
          *(_DWORD *)v129 -= 2;
      }
      v132 = v447;
      if (*((_DWORD *)v447 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v447))
      {
LABEL_762:
        v444 = 1;
        goto LABEL_763;
      }
      if (v131 == 10)
      {
        v133 = 0;
        goto LABEL_258;
      }
      v134 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v131 >= 0xFFFE000000000000)
      {
        v133 = (_DWORD)v131 != 0;
        goto LABEL_257;
      }
      *(_QWORD *)&v135 = v131 - 0x2000000000000;
      if (v131 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        if (v135 <= 0.0)
        {
          v133 = v135 < 0.0;
          goto LABEL_957;
        }
      }
      else
      {
        if ((v131 & 0xFFFE000000000002) != 0)
        {
          v133 = v131 == 7;
LABEL_257:
          if (*((_DWORD *)v134 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v134))
            goto LABEL_762;
LABEL_258:
          WTF::AtomStringImpl::addLiteral();
          v136 = v414;
          v138 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
          if (v136)
          {
            if (*(_DWORD *)v136 == 2)
            {
              v269 = v136;
              v270 = v138;
              WTF::StringImpl::destroy(v269, v137);
              v138 = v270;
            }
            else
            {
              *(_DWORD *)v136 -= 2;
            }
          }
          if (*((_DWORD *)v132 + 20))
          {
            v306 = v138;
            v307 = JSC::VM::hasExceptionsAfterHandlingTraps(v132);
            v138 = v306;
            if (v307)
              goto LABEL_762;
          }
          v396 = v12;
          v395 = v133;
          if (v138 == 10)
          {
            v139 = v8;
            v12 = 0;
          }
          else
          {
            v414 = (WTF::StringImpl *)v138;
            v140 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v138 < 0xFFFE000000000000)
            {
              v275 = v138 - 0x2000000000000;
              if (v138 - 0x2000000000000 >= 0xFFFC000000000000)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v414, a1);
                v275 = v338;
              }
              v276 = (v275 >> 52) & 0x7FF;
              if ((v276 - 1023) <= 0x53)
              {
                v291 = v275 >> (51 - (v275 >> 52));
                if (v276 > 0x433)
                  LODWORD(v291) = v275 << ((v275 >> 52) - 51);
                if (v276 >= 0x41F)
                  LODWORD(v138) = v291;
                else
                  LODWORD(v138) = (((1 << ((v275 >> 52) + 1)) - 1) & v291) + (1 << ((v275 >> 52) + 1));
                if ((v275 & 0x8000000000000000) == 0)
                  v138 = v138;
                else
                  v138 = -(int)v138;
              }
              else
              {
                v138 = 0;
              }
            }
            if (*((_DWORD *)v140 + 20))
            {
              v12 = v138;
              v322 = JSC::VM::hasExceptionsAfterHandlingTraps(v140);
              v138 = v12;
              if ((v322 & 1) != 0)
                goto LABEL_762;
            }
            v12 = v138;
            v139 = v8;
          }
          WTF::AtomStringImpl::addLiteral();
          v141 = v414;
          v142 = JSC::JSObject::get(v3, a1, (unint64_t)v414);
          v19 = v400;
          if (v141)
          {
            if (*(_DWORD *)v141 == 2)
            {
              WTF::StringImpl::destroy(v141, v9);
              v19 = v400;
            }
            else
            {
              *(_DWORD *)v141 -= 2;
            }
          }
          if (*((_DWORD *)v132 + 20))
          {
            v308 = JSC::VM::hasExceptionsAfterHandlingTraps(v132);
            v19 = v400;
            if (v308)
            {
              v444 = 1;
              v8 = v139;
LABEL_763:
              v11 = v399;
              goto LABEL_764;
            }
          }
          v8 = v139;
          if (v142 == 10)
          {
            v18 = v393;
            LODWORD(v2) = v389;
            v17 = v391;
            v20 = v12;
            goto LABEL_273;
          }
          v449[0] = v142;
          v231 = (JSC::VM *)*((_QWORD *)a1 + 7);
          v17 = v391;
          if ((v142 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v142 + 5) != 2)
          {
            JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v449, a1);
            v20 = v12;
            v19 = v400;
          }
          else
          {
            v20 = v12;
            v232 = *(WTF::StringImpl **)(v142 + 8);
            if ((v232 & 1) != 0)
            {
              v279 = (WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v142, a1);
              v20 = v12;
              v19 = v400;
              v232 = *v279;
              if (*v279)
LABEL_410:
                *(_DWORD *)v232 += 2;
            }
            else if (v232)
            {
              goto LABEL_410;
            }
            v448 = v232;
          }
          v18 = v393;
          if (*((_DWORD *)v231 + 20))
          {
            v323 = JSC::VM::hasExceptionsAfterHandlingTraps(v231);
            v143 = v448;
            if (v323)
            {
              v176 = 1;
              LODWORD(v415) = 1;
              v448 = 0;
              if (v143)
              {
                if (*(_DWORD *)v143 == 2)
                  WTF::StringImpl::destroy(v143, v9);
                else
                  *(_DWORD *)v143 -= 2;
              }
              v444 = 1;
              v143 = v15;
              v6 = v2;
              v3 = v409;
              v120 = v411;
              goto LABEL_347;
            }
            v6 = v2;
            v18 = v393;
            v19 = v400;
            v17 = v391;
            v20 = v12;
          }
          else
          {
            v143 = v448;
          }
          LODWORD(v415) = 0;
          LODWORD(v2) = v389;
LABEL_276:
          v414 = 0;
          if ((v17 & 1) == 0)
          {
            if (*(_DWORD *)v15 == 2)
            {
              v12 = v19;
              v240 = v20;
              WTF::StringImpl::destroy(v15, v9);
              v20 = v240;
              LODWORD(v19) = v12;
            }
            else
            {
              *(_DWORD *)v15 -= 2;
            }
          }
          v144 = 1.0;
          if ((v2 & 1) != 0)
          {
            v12 = v6;
            v145 = 0;
            LODWORD(v2) = 0;
            v146 = 0;
            v147 = 0.0;
            v148 = 0.0;
            v3 = v409;
LABEL_345:
            v175 = 0;
            LOBYTE(v428) = v18;
            HIBYTE(v428) = BYTE4(v410);
            v429 = v410;
            v430 = v3;
            v431 = v19;
            LOBYTE(v432) = v408;
            BYTE1(v432) = v403;
            BYTE2(v432) = BYTE4(v408);
            HIBYTE(v432) = BYTE4(v407);
            LOBYTE(v433) = v407;
            HIBYTE(v433) = v398;
            *(_DWORD *)v434 = v397;
            *(_DWORD *)&v434[4] = v396;
            *(double *)&v434[12] = v23;
            *(double *)&v434[20] = v22;
            v435 = __PAIR64__(v402, v404);
            LOWORD(v436) = v406;
            HIWORD(v436) = v405;
            v437 = (WebCore::Node *)v411;
            LODWORD(v438) = v20;
            *((double *)&v438 + 1) = v144;
            *(double *)&v439 = v21;
            *((_QWORD *)&v439 + 1) = __PAIR64__(LODWORD(v147), LODWORD(v148));
            *(_QWORD *)&v440 = (int)v2;
            *((_QWORD *)&v440 + 1) = v146;
            v441 = v145;
            v442 = v143;
            v443 = v395;
            v120 = 0;
            v143 = 0;
            v3 = 0;
            v6 = v12;
            goto LABEL_346;
          }
          v392 = v20;
          v401 = v19;
          v394 = v18;
          WTF::AtomStringImpl::addLiteral();
          v149 = (WTF::StringImpl *)v449[0];
          v151 = JSC::JSObject::get(v3, a1, v449[0]);
          if (v149)
          {
            if (*(_DWORD *)v149 == 2)
              WTF::StringImpl::destroy(v149, v150);
            else
              *(_DWORD *)v149 -= 2;
          }
          v152 = v447;
          if (*((_DWORD *)v447 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v447) & 1) != 0)
          {
            v175 = 1;
LABEL_722:
            v3 = v409;
LABEL_730:
            v120 = v411;
LABEL_346:
            v444 = v175;
            v176 = (int)v415;
            if ((_DWORD)v415 == -1)
            {
LABEL_348:
              v15 = v143;
              v11 = v399;
              goto LABEL_349;
            }
LABEL_347:
            ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32C9390[v176])(v449, &v414);
            goto LABEL_348;
          }
          v390 = v8;
          v148 = 0.0;
          if (v151 != 10)
          {
            v153 = (JSC::VM *)*((_QWORD *)a1 + 7);
            v448 = v153;
            v449[0] = v151;
            if (v151 >= 0xFFFE000000000000)
            {
              v154 = (double)(int)v151;
            }
            else if (v151 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v449, a1);
            }
            else
            {
              *(_QWORD *)&v154 = v151 - 0x2000000000000;
            }
            v120 = v411;
            if (*((_DWORD *)v153 + 20))
            {
              v312 = v154;
              v313 = JSC::VM::hasExceptionsAfterHandlingTraps(v153);
              v154 = v312;
              if ((v313 & 1) != 0)
                goto LABEL_656;
            }
            if ((*(_QWORD *)&v154 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
              || v154 < -3.40282347e38
              || v154 > 3.40282347e38)
            {
              goto LABEL_655;
            }
            v148 = v154;
          }
          WTF::AtomStringImpl::addLiteral();
          v155 = (WTF::StringImpl *)v449[0];
          v157 = JSC::JSObject::get(v3, a1, v449[0]);
          if (v155)
          {
            if (*(_DWORD *)v155 == 2)
              WTF::StringImpl::destroy(v155, v156);
            else
              *(_DWORD *)v155 -= 2;
          }
          if (*((_DWORD *)v152 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v152) & 1) != 0)
            goto LABEL_721;
          v147 = 0.0;
          if (v157 == 10)
          {
LABEL_307:
            WTF::AtomStringImpl::addLiteral();
            v160 = (WTF::StringImpl *)v449[0];
            v162 = JSC::JSObject::get(v3, a1, v449[0]);
            if (v160)
            {
              if (*(_DWORD *)v160 == 2)
                WTF::StringImpl::destroy(v160, v161);
              else
                *(_DWORD *)v160 -= 2;
            }
            if (*((_DWORD *)v152 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v152) & 1) != 0)
              goto LABEL_721;
            if (v162 == 10)
            {
              LODWORD(v2) = 0;
            }
            else
            {
              v449[0] = v162;
              v163 = (JSC::VM *)*((_QWORD *)a1 + 7);
              if (v162 < 0xFFFE000000000000)
              {
                v247 = v162 - 0x2000000000000;
                if (v162 - 0x2000000000000 >= 0xFFFC000000000000)
                {
                  JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v449, a1);
                  v247 = v331;
                }
                v248 = (v247 >> 52) & 0x7FF;
                if ((v248 - 1023) <= 0x53)
                {
                  v280 = v247 >> (51 - (v247 >> 52));
                  if (v248 > 0x433)
                    LODWORD(v280) = v247 << ((v247 >> 52) - 51);
                  if (v248 >= 0x41F)
                    v281 = v280;
                  else
                    v281 = (((1 << ((v247 >> 52) + 1)) - 1) & v280) + (1 << ((v247 >> 52) + 1));
                  if ((v247 & 0x8000000000000000) == 0)
                    LODWORD(v2) = v281;
                  else
                    LODWORD(v2) = -v281;
                }
                else
                {
                  LODWORD(v2) = 0;
                }
              }
              else
              {
                LODWORD(v2) = v162;
              }
              if (*((_DWORD *)v163 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v163) & 1) != 0)
                goto LABEL_721;
            }
            WTF::AtomStringImpl::addLiteral();
            v164 = (WTF::StringImpl *)v449[0];
            v166 = JSC::JSObject::get(v3, a1, v449[0]);
            if (v164)
            {
              if (*(_DWORD *)v164 == 2)
                WTF::StringImpl::destroy(v164, v165);
              else
                *(_DWORD *)v164 -= 2;
            }
            if (*((_DWORD *)v152 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v152) & 1) != 0)
            {
LABEL_721:
              v175 = 1;
              v8 = v390;
              goto LABEL_722;
            }
            if (v166 == 10)
            {
              v146 = 0;
            }
            else
            {
              v449[0] = v166;
              v167 = (JSC::VM *)*((_QWORD *)a1 + 7);
              if (v166 < 0xFFFE000000000000)
              {
                v249 = v166 - 0x2000000000000;
                if (v166 - 0x2000000000000 >= 0xFFFC000000000000)
                {
                  JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v449, a1);
                  v249 = v332;
                }
                v250 = (v249 >> 52) & 0x7FF;
                if ((v250 - 1023) <= 0x53)
                {
                  v282 = v249 >> (51 - (v249 >> 52));
                  if (v250 > 0x433)
                    LODWORD(v282) = v249 << ((v249 >> 52) - 51);
                  if (v250 >= 0x41F)
                    v283 = v282;
                  else
                    v283 = (((1 << ((v249 >> 52) + 1)) - 1) & v282) + (1 << ((v249 >> 52) + 1));
                  if ((v249 & 0x8000000000000000) == 0)
                    v146 = v283;
                  else
                    v146 = -v283;
                }
                else
                {
                  v146 = 0;
                }
              }
              else
              {
                v146 = v166;
              }
              if (*((_DWORD *)v167 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v167) & 1) != 0)
                goto LABEL_721;
            }
            WTF::AtomStringImpl::addLiteral();
            v168 = (WTF::StringImpl *)v449[0];
            v170 = JSC::JSObject::get(v3, a1, v449[0]);
            if (v168)
            {
              if (*(_DWORD *)v168 == 2)
                WTF::StringImpl::destroy(v168, v169);
              else
                *(_DWORD *)v168 -= 2;
            }
            if (!*((_DWORD *)v152 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v152) & 1) == 0)
            {
              if (v170 == 10)
              {
                v12 = v6;
                v145 = 0;
              }
              else
              {
                v449[0] = v170;
                v171 = (JSC::VM *)*((_QWORD *)a1 + 7);
                if (v170 < 0xFFFE000000000000)
                {
                  v251 = v170 - 0x2000000000000;
                  if (v170 - 0x2000000000000 >= 0xFFFC000000000000)
                  {
                    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v449, a1);
                    v251 = v333;
                  }
                  v12 = v6;
                  v252 = (v251 >> 52) & 0x7FF;
                  if ((v252 - 1023) <= 0x53)
                  {
                    v284 = v251 >> (51 - (v251 >> 52));
                    if (v252 > 0x433)
                      LODWORD(v284) = v251 << ((v251 >> 52) - 51);
                    if (v252 >= 0x41F)
                      v285 = v284;
                    else
                      v285 = (((1 << ((v251 >> 52) + 1)) - 1) & v284) + (1 << ((v251 >> 52) + 1));
                    if ((v251 & 0x8000000000000000) == 0)
                      v145 = v285;
                    else
                      v145 = -v285;
                  }
                  else
                  {
                    v145 = 0;
                  }
                }
                else
                {
                  v12 = v6;
                  v145 = v170;
                }
                if (*((_DWORD *)v171 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v171))
                {
                  v175 = 1;
                  v8 = v390;
                  v6 = v12;
                  goto LABEL_722;
                }
              }
              WTF::AtomStringImpl::addLiteral();
              v172 = (WTF::StringImpl *)v449[0];
              v173 = JSC::JSObject::get(v3, a1, v449[0]);
              v3 = v409;
              LODWORD(v19) = v401;
              v20 = v392;
              if (v172)
              {
                if (*(_DWORD *)v172 == 2)
                {
                  WTF::StringImpl::destroy(v172, v9);
                  v20 = v392;
                  LODWORD(v19) = v401;
                }
                else
                {
                  *(_DWORD *)v172 -= 2;
                }
              }
              if (*((_DWORD *)v152 + 20)
                && (v300 = JSC::VM::hasExceptionsAfterHandlingTraps(v152),
                    v20 = v392,
                    LODWORD(v19) = v401,
                    (v300 & 1) != 0))
              {
                v175 = 1;
                v8 = v390;
              }
              else
              {
                v8 = v390;
                if (v173 == 10)
                {
                  v18 = v394;
                  goto LABEL_345;
                }
                v174 = (JSC::VM *)*((_QWORD *)a1 + 7);
                v448 = v174;
                v449[0] = v173;
                if (v173 >= 0xFFFE000000000000)
                {
                  v144 = (double)(int)v173;
                }
                else if (v173 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                {
                  JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v449, a1);
                  v20 = v392;
                  LODWORD(v19) = v401;
                  v144 = v324;
                }
                else
                {
                  *(_QWORD *)&v144 = v173 - 0x2000000000000;
                }
                v18 = v394;
                if (!*((_DWORD *)v174 + 20)
                  || (v316 = JSC::VM::hasExceptionsAfterHandlingTraps(v174),
                      v20 = v392,
                      LODWORD(v19) = v401,
                      (v316 & 1) == 0))
                {
                  if ((*(_QWORD *)&v144 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
                    goto LABEL_345;
                  JSC::throwTypeError();
                }
                v175 = 1;
              }
              v6 = v12;
              goto LABEL_730;
            }
            goto LABEL_721;
          }
          v158 = (JSC::VM *)*((_QWORD *)a1 + 7);
          v448 = v158;
          v449[0] = v157;
          if (v157 >= 0xFFFE000000000000)
          {
            v159 = (double)(int)v157;
          }
          else if (v157 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v449, a1);
          }
          else
          {
            *(_QWORD *)&v159 = v157 - 0x2000000000000;
          }
          v120 = v411;
          if (*((_DWORD *)v158 + 20))
          {
            v314 = v159;
            v315 = JSC::VM::hasExceptionsAfterHandlingTraps(v158);
            v159 = v314;
            if ((v315 & 1) != 0)
              goto LABEL_656;
          }
          if ((*(_QWORD *)&v159 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
            && v159 >= -3.40282347e38
            && v159 <= 3.40282347e38)
          {
            v147 = v159;
            goto LABEL_307;
          }
LABEL_655:
          JSC::throwTypeError();
LABEL_656:
          v175 = 1;
          v8 = v390;
          v3 = v409;
          goto LABEL_346;
        }
        v384 = *(unsigned __int8 *)(v131 + 5);
        if (v384 == 3)
        {
          v387 = *(_DWORD *)(v131 + 8);
          goto LABEL_941;
        }
        if (v384 == 2)
        {
          v385 = *(_QWORD *)(v131 + 8);
          if ((v385 & 1) != 0)
            v386 = (int *)(v131 + 16);
          else
            v386 = (int *)(v385 + 4);
          v387 = *v386;
LABEL_941:
          v388 = v387 == 0;
LABEL_954:
          v133 = !v388;
LABEL_957:
          v6 = v2;
          goto LABEL_257;
        }
        if ((*(_BYTE *)(16 * (*(_DWORD *)v131 & 0xFFFFFFFE) + 0xA) & 1) != 0)
        {
          v388 = *(_QWORD *)(16 * (*(_DWORD *)v131 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_954;
        }
      }
      v133 = 1;
      goto LABEL_957;
    }
LABEL_752:
    v444 = 1;
LABEL_755:
    v6 = v2;
LABEL_764:
    v3 = v409;
    v120 = v411;
LABEL_349:
    if (!v15)
      goto LABEL_352;
    if (*(_DWORD *)v15 != 2)
    {
      *(_DWORD *)v15 -= 2;
LABEL_352:
      if (v120)
        goto LABEL_353;
      goto LABEL_356;
    }
    WTF::StringImpl::destroy(v15, v9);
    if (v120)
    {
LABEL_353:
      if ((*(_BYTE *)(v120 + 22) & 2) != 0)
      {
        if (*(_DWORD *)(v120 + 24) == 2)
        {
          if ((*(_WORD *)(v120 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v120);
        }
        else
        {
          *(_DWORD *)(v120 + 24) -= 2;
        }
      }
      else
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v120 + 96))(v120);
      }
    }
LABEL_356:
    if (v3)
    {
      if (*(_DWORD *)v3 == 1)
      {
        v12 = *((_QWORD *)v3 + 2);
        *((_QWORD *)v3 + 2) = 0;
        if (v12)
        {
          if (*(_QWORD *)v12)
            WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*(_QWORD *)v12, v9);
          WTF::fastFree((WTF *)v12, v9);
        }
        v237 = (unsigned int *)*((_QWORD *)v3 + 1);
        *((_QWORD *)v3 + 1) = 0;
        if (v237)
        {
          do
          {
            v238 = __ldaxr(v237);
            v239 = v238 - 1;
          }
          while (__stlxr(v239, v237));
          if (!v239)
          {
            atomic_store(1u, v237);
            WTF::fastFree((WTF *)v237, v9);
          }
        }
        WTF::fastFree(v3, v9);
      }
      else
      {
        --*(_DWORD *)v3;
      }
    }
LABEL_359:
    v177 = v444;
    if (v444)
    {
      v25 = 0;
      goto LABEL_400;
    }
    if (!v446)
      break;
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_786:
    v15 = (WTF::StringImpl *)&WebCore::mousePointerEventType(void)::$_0::operator() const(void)::impl;
    v16 = WebCore::mousePointerEventType(void)::$_0::operator() const(void)::impl + 2;
    WebCore::mousePointerEventType(void)::$_0::operator() const(void)::impl += 2;
    WebCore::mousePointerEventType(void)::mouseType = (uint64_t)&WebCore::mousePointerEventType(void)::$_0::operator() const(void)::impl;
    *((_BYTE *)v14 + 1992) = 1;
  }
  v178 = v445;
  v445 = 0;
  v448 = v178;
  LOWORD(v414) = v428;
  BYTE2(v414) = v429;
  v415 = v430;
  v416 = v431;
  v417 = v432;
  v418 = v433;
  *(_OWORD *)&v419[12] = *(_OWORD *)&v434[12];
  *(_OWORD *)v419 = *(_OWORD *)v434;
  v421 = v436;
  v420 = v435;
  v179 = v437;
  v430 = 0;
  v437 = 0;
  v422 = v179;
  v424 = v440;
  *(_OWORD *)&v423[16] = v439;
  *(_OWORD *)v423 = v438;
  v180 = v442;
  v442 = 0;
  v425 = v441;
  v426 = v180;
  v427 = v443;
  v181 = bmalloc::api::isoAllocate();
  v182 = WebCore::MouseEvent::MouseEvent((WebCore::MouseRelatedEvent *)v181, 82, &v448, (int32x2_t *)&v414);
  *(_QWORD *)v182 = off_1E33A6AB8;
  *((_DWORD *)v182 + 44) = *(_DWORD *)v423;
  *(_OWORD *)((char *)v182 + 184) = *(_OWORD *)&v423[8];
  *((_QWORD *)v182 + 25) = *(_QWORD *)&v423[24];
  *((_OWORD *)v182 + 13) = v424;
  v185 = v426;
  *(_QWORD *)(v181 + 224) = v425;
  if (v185)
  {
    v186 = *(_DWORD *)v185;
    *(_DWORD *)v185 += 2;
    *(_QWORD *)(v181 + 232) = v185;
    *(_BYTE *)(v181 + 240) = v427;
    v449[0] = v181;
    v426 = 0;
    if (v186)
      *(_DWORD *)v185 = v186;
    else
      WTF::StringImpl::destroy(v185, v183);
  }
  else
  {
    *(_QWORD *)(v181 + 232) = 0;
    *(_BYTE *)(v181 + 240) = v427;
    v449[0] = v181;
    v426 = 0;
  }
  v187 = v422;
  v422 = 0;
  if (v187)
  {
    if ((*((_BYTE *)v187 + 22) & 2) != 0)
    {
      if (*((_DWORD *)v187 + 6) == 2)
      {
        if ((*((_WORD *)v187 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v187);
      }
      else
      {
        *((_DWORD *)v187 + 6) -= 2;
      }
    }
    else
    {
      (*(void (**)(WebCore::Node *))(*(_QWORD *)v187 + 96))(v187);
    }
  }
  v188 = v415;
  v415 = 0;
  if (v188)
  {
    if (*(_DWORD *)v188 == 1)
    {
      v233 = (uint64_t *)*((_QWORD *)v188 + 2);
      *((_QWORD *)v188 + 2) = 0;
      if (v233)
      {
        if (*v233)
          WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v233, v183);
        WTF::fastFree((WTF *)v233, v183);
      }
      v234 = (unsigned int *)*((_QWORD *)v188 + 1);
      *((_QWORD *)v188 + 1) = 0;
      if (v234)
      {
        do
        {
          v235 = __ldaxr(v234);
          v236 = v235 - 1;
        }
        while (__stlxr(v236, v234));
        if (!v236)
        {
          atomic_store(1u, v234);
          WTF::fastFree((WTF *)v234, v183);
        }
      }
      WTF::fastFree(v188, v183);
    }
    else
    {
      --*(_DWORD *)v188;
    }
  }
  v189 = v448;
  v448 = 0;
  if (v189)
  {
    if (*(_DWORD *)v189 == 2)
      WTF::StringImpl::destroy(v189, v183);
    else
      *(_DWORD *)v189 -= 2;
  }
  if (*(void (***)(WebCore::PointerEvent *__hidden))v181 != off_1E33A6AB8)
  {
    __break(0xC471u);
    JUMPOUT(0x194DEA9E0);
  }
  v190 = *(JSC::VM **)(v412 + 40);
  v191 = v449[0];
  v192 = *((_QWORD *)v190 + 412);
  if (!v192)
    goto LABEL_381;
  v193 = *(_DWORD *)(v192 - 8);
  v194 = ((unint64_t)&WebCore::JSPointerEvent::s_info + ~((_QWORD)&WebCore::JSPointerEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPointerEvent::s_info + ~((_QWORD)&WebCore::JSPointerEvent::s_info << 32)) >> 22);
  v195 = 9 * ((v194 + ~(v194 << 13)) ^ ((v194 + ~(v194 << 13)) >> 8));
  v196 = (v195 ^ (v195 >> 15)) + ~((v195 ^ (v195 >> 15)) << 27);
  v197 = v193 & ((v196 >> 31) ^ v196);
  v198 = *(char ***)(v192 + 16 * v197);
  if (v198 == &WebCore::JSPointerEvent::s_info)
  {
LABEL_380:
    v200 = *(_QWORD *)(v192 + 16 * v197 + 8);
    if (!v200)
      goto LABEL_381;
  }
  else
  {
    v199 = 1;
    while (v198)
    {
      v197 = ((_DWORD)v197 + v199) & v193;
      v198 = *(char ***)(v192 + 16 * v197);
      ++v199;
      if (v198 == &WebCore::JSPointerEvent::s_info)
        goto LABEL_380;
    }
LABEL_381:
    v201 = (WebCore::JSMouseEvent *)*((_QWORD *)v190 + 7);
    v202 = (JSC::JSCell *)WebCore::JSMouseEvent::prototype(v201, *(JSC::VM **)(v412 + 40), v184);
    Structure = WebCore::JSPointerEventPrototype::createStructure((uint64_t *)v201, (uint64_t)v190, v202);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v205 = (JSC::JSCell *)WebCore::JSPointerEventPrototype::create(v201, v190, Structure, v204);
    v206 = WebCore::JSPointerEvent::createStructure((uint64_t *)v201, (uint64_t)v190, v205);
    v200 = WebCore::cacheDOMStructure((JSCell *)v190, v206, (uint64_t)&WebCore::JSPointerEvent::s_info);
  }
  v25 = (JSCell *)WebCore::JSPointerEvent::create(v200, v190, v449);
  WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v190 + 415), v191, (uint64_t)v25);
  v207 = *(JSC::JSCell **)(v6 + 40);
  if (((unint64_t)v207 & 0xFFFE000000000002) == 0)
  {
    v208 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v207);
    if (v208)
    {
      v210 = v208;
      if (v208 != *(JSC::JSGlobalObject **)(v6 + 24))
      {
        v211 = (JSC::VM *)*((_QWORD *)a1 + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v208, v209);
        if (!*((_DWORD *)v211 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v211) & 1) == 0)
        {
          v215 = *((_QWORD *)FunctionRealm + 412);
          if (v215)
          {
            v216 = *(_DWORD *)(v215 - 8);
            v217 = ((unint64_t)&WebCore::JSPointerEvent::s_info
                  + ~((_QWORD)&WebCore::JSPointerEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPointerEvent::s_info
                                                                         + ~((_QWORD)&WebCore::JSPointerEvent::s_info << 32)) >> 22);
            v218 = 9 * ((v217 + ~(v217 << 13)) ^ ((v217 + ~(v217 << 13)) >> 8));
            v219 = (v218 ^ (v218 >> 15)) + ~((v218 ^ (v218 >> 15)) << 27);
            v220 = v216 & ((v219 >> 31) ^ v219);
            v221 = *(char ***)(v215 + 16 * v220);
            if (v221 == &WebCore::JSPointerEvent::s_info)
            {
LABEL_391:
              v212 = *(JSC::JSObject **)(v215 + 16 * v220 + 8);
              if (v212)
              {
LABEL_393:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v210, v212, v213);
                if (!*((_DWORD *)v211 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v211) & 1) == 0)
                  JSC::JSObject::setStructure(v25, v211, SubclassStructure);
                goto LABEL_395;
              }
            }
            else
            {
              v222 = 1;
              while (v221)
              {
                v220 = ((_DWORD)v220 + v222) & v216;
                v221 = *(char ***)(v215 + 16 * v220);
                ++v222;
                if (v221 == &WebCore::JSPointerEvent::s_info)
                  goto LABEL_391;
              }
            }
          }
          v223 = (JSC::JSCell *)WebCore::JSMouseEvent::prototype(v211, FunctionRealm, v212);
          v224 = WebCore::JSPointerEventPrototype::createStructure((uint64_t *)v211, (uint64_t)FunctionRealm, v223);
          *(_DWORD *)(v224 + 16) |= 0x80000u;
          v226 = (JSC::JSCell *)WebCore::JSPointerEventPrototype::create(v211, FunctionRealm, v224, v225);
          v227 = WebCore::JSPointerEvent::createStructure((uint64_t *)v211, (uint64_t)FunctionRealm, v226);
          v212 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v227, (uint64_t)&WebCore::JSPointerEvent::s_info);
          goto LABEL_393;
        }
      }
    }
  }
LABEL_395:
  if (*((_DWORD *)v413 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v413) & 1) != 0)
    v25 = 0;
  v229 = (_DWORD *)v449[0];
  v449[0] = 0;
  if (v229)
  {
    if (v229[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v229 + 8))(v229);
    else
      --v229[4];
  }
  v177 = v444;
LABEL_400:
  if (v177 != -1)
    ((void (*)(WTF::StringImpl **, __int16 *))off_1E32CCAC0[v177])(&v414, &v428);
  v10 = v446;
LABEL_403:
  if (v10 != -1)
    ((void (*)(__int16 *, WTF::StringImpl **))off_1E32C9518[v10])(&v428, &v445);
  return v25;
}

uint64_t WebCore::JSPointerEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSMouseEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSMouseEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSMouseEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPointerEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPointerEventPrototype::create(WebCore::JSPointerEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<11u>(this, (uint64_t)&WebCore::JSPointerEvent::s_info, (uint64_t)&WebCore::JSPointerEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPointerEvent>,(WebCore::DOMConstructorID)472>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3776);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMouseEvent>,(WebCore::DOMConstructorID)461>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSPointerEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPointerEvent::s_info + ~((_QWORD)&WebCore::JSPointerEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPointerEvent::s_info + ~((_QWORD)&WebCore::JSPointerEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPointerEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPointerEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSMouseEvent::prototype((WebCore::JSMouseEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPointerEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSPointerEventPrototype::create((WebCore::JSPointerEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSPointerEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSPointerEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3776) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPointerEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPointerEventPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPointerEvent>,(WebCore::DOMConstructorID)472>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsPointerEvent_pointerId(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 176) | 0xFFFE000000000000;
}

unint64_t WebCore::jsPointerEvent_width(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 184);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPointerEvent_height(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 192);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPointerEvent_pressure(uint64_t a1, uint64_t a2)
{
  float v2;
  double v3;
  uint64_t v4;

  v2 = *(float *)(*(_QWORD *)(a2 + 24) + 200);
  v3 = v2;
  if (COERCE__INT64(fabs(v2)) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v2, (double)(int)v4 == v3)
    && ((_DWORD)v4 || (LODWORD(v2) & 0x80000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPointerEvent_tangentialPressure(uint64_t a1, uint64_t a2)
{
  float v2;
  double v3;
  uint64_t v4;

  v2 = *(float *)(*(_QWORD *)(a2 + 24) + 204);
  v3 = v2;
  if (COERCE__INT64(fabs(v2)) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v2, (double)(int)v4 == v3)
    && ((_DWORD)v4 || (LODWORD(v2) & 0x80000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsPointerEvent_tiltX(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 208) | 0xFFFE000000000000;
}

unint64_t WebCore::jsPointerEvent_tiltY(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 216) | 0xFFFE000000000000;
}

unint64_t WebCore::jsPointerEvent_twist(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 224) | 0xFFFE000000000000;
}

uint64_t WebCore::jsPointerEvent_pointerType(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 232);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::jsPointerEvent_isPrimary(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 240))
    return 7;
  else
    return 6;
}

uint64_t WebCore::JSPointerEvent::subspaceForImpl(WebCore::JSPointerEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3856);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3856))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3856);
    *(_QWORD *)(v8 + 3856) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3856);
  *(_QWORD *)(v3 + 3856) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

void WebCore::JSOverconstrainedErrorOwner::~JSOverconstrainedErrorOwner(WebCore::JSOverconstrainedErrorOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPath2DOwner::~JSPath2DOwner(WebCore::JSPath2DOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPaymentAddressOwner::~JSPaymentAddressOwner(WebCore::JSPaymentAddressOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPaymentRequestOwner::~JSPaymentRequestOwner(WebCore::JSPaymentRequestOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPaymentResponseOwner::~JSPaymentResponseOwner(WebCore::JSPaymentResponseOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPerformanceOwner::~JSPerformanceOwner(WebCore::JSPerformanceOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPerformanceEntryOwner::~JSPerformanceEntryOwner(WebCore::JSPerformanceEntryOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPerformanceNavigationOwner::~JSPerformanceNavigationOwner(WebCore::JSPerformanceNavigationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

BOOL WebCore::JSPerformanceObserverCallback::hasCallback(WebCore::JSPerformanceObserverCallback *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 3);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

void WebCore::JSPerformanceObserverEntryListOwner::~JSPerformanceObserverEntryListOwner(WebCore::JSPerformanceObserverEntryListOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPerformanceServerTimingOwner::~JSPerformanceServerTimingOwner(WebCore::JSPerformanceServerTimingOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPerformanceTimingOwner::~JSPerformanceTimingOwner(WebCore::JSPerformanceTimingOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPeriodicWaveOwner::~JSPeriodicWaveOwner(WebCore::JSPeriodicWaveOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPermissionStatusOwner::~JSPermissionStatusOwner(WebCore::JSPermissionStatusOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPermissionsOwner::~JSPermissionsOwner(WebCore::JSPermissionsOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSPictureInPictureWindowOwner::~JSPictureInPictureWindowOwner(WebCore::JSPictureInPictureWindowOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::OverconstrainedErrorEvent::~OverconstrainedErrorEvent(WebCore::OverconstrainedErrorEvent *this, WTF::StringImpl *a2)
{
  WTF *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;

  v3 = (WTF *)*((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 1)
    {
      v4 = (WTF::StringImpl *)*((_QWORD *)v3 + 3);
      *((_QWORD *)v3 + 3) = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      v5 = (WTF::StringImpl *)*((_QWORD *)v3 + 1);
      *((_QWORD *)v3 + 1) = 0;
      if (v5)
      {
        if (*(_DWORD *)v5 == 2)
          WTF::StringImpl::destroy(v5, a2);
        else
          *(_DWORD *)v5 -= 2;
      }
      WTF::fastFree(v3, a2);
    }
    else
    {
      --*(_DWORD *)v3;
    }
  }
  WebCore::Event::~Event(this, a2);
}

{
  WTF *v3;
  bmalloc::api *v4;
  void *v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;

  v3 = (WTF *)*((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 1)
    {
      v6 = (WTF::StringImpl *)*((_QWORD *)v3 + 3);
      *((_QWORD *)v3 + 3) = 0;
      if (v6)
      {
        if (*(_DWORD *)v6 == 2)
          WTF::StringImpl::destroy(v6, a2);
        else
          *(_DWORD *)v6 -= 2;
      }
      v7 = (WTF::StringImpl *)*((_QWORD *)v3 + 1);
      *((_QWORD *)v3 + 1) = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, a2);
        else
          *(_DWORD *)v7 -= 2;
      }
      WTF::fastFree(v3, a2);
    }
    else
    {
      --*(_DWORD *)v3;
    }
  }
  WebCore::Event::~Event(this, a2);
  bmalloc::api::isoDeallocate(v4, v5);
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore25OverconstrainedErrorEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF *v2;
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;

  v2 = (WTF *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (WTF::StringImpl *)*((_QWORD *)v2 + 3);
      *((_QWORD *)v2 + 3) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 2)
          WTF::StringImpl::destroy(v3, a2);
        else
          *(_DWORD *)v3 -= 2;
      }
      v4 = (WTF::StringImpl *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

_BYTE *WebCore::jsPaintRenderingContext2DPrototypeFunction_drawImage(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unint64_t v12;
  float *v13;
  int v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  uint64_t v21;
  float v22;
  float v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  unint64_t v30;
  JSC::VM *v31;
  double v32;
  unint64_t v33;
  JSC::VM *v34;
  double v35;
  unint64_t v36;
  JSC::VM *v37;
  double v38;
  unint64_t v39;
  JSC::VM *v40;
  double v41;
  unint64_t v42;
  JSC::VM *v43;
  double v44;
  unint64_t v45;
  JSC::VM *v46;
  double v47;
  unint64_t v48;
  JSC::VM *v49;
  double v50;
  uint64_t v51;
  float v52;
  float v53;
  float v54;
  float v55;
  float v56;
  float v57;
  float v58;
  float v59;
  unint64_t v60;
  int v61;
  unint64_t v62;
  JSC::VM *v63;
  double v64;
  unint64_t v65;
  JSC::VM *v66;
  double v67;
  unint64_t v68;
  JSC::VM *v69;
  double v70;
  unint64_t v71;
  JSC::VM *v72;
  double v73;
  uint64_t v74;
  float v75;
  float v76;
  float v77;
  float v78;
  JSValue v79;
  WTF::StringImpl *v82;
  WTF::StringImpl *v83;
  JSValue v84;
  WTF::StringImpl *v85;
  WTF::StringImpl *v86;
  WTF::StringImpl *v87;
  JSValue v88;
  WTF::StringImpl *v89;
  WTF::StringImpl *v90;
  WTF::StringImpl *v91;
  JSValue v92;
  WTF::StringImpl *v93;
  JSC::VM *v94;
  double v95;
  double v96;
  JSC::VM *v97;
  double v98;
  JSC::VM *v99;
  double v100;
  JSC::VM *v101;
  double v102;
  JSC::VM *v103;
  double v104;
  JSC::VM *v105;
  double v106;
  JSC::VM *v107;
  double v108;
  JSC::VM *v109;
  double v110;
  double v111;
  JSC::VM *v112;
  double v113;
  JSC::VM *v114;
  double v115;
  JSC::VM *v116;
  double v117;
  double v118;
  unint64_t v119;
  _QWORD v120[2];
  uint64_t v121;
  WTF::StringImpl *v122;
  char v123;
  char v124[8];
  int v125;
  float v126;
  float v127;
  float v128;
  float v129;
  float v130;
  float v131;
  float v132;
  float v133;
  unint64_t v134;
  WTF::StringImpl *v135;
  float *v136;
  float *v137;
  float *v138;
  float *v139;
  float *v140;
  float *v141;
  float *v142;
  unint64_t *v143;
  char v144[8];
  uint64_t v145;
  unsigned int v146;
  int v147;
  uint64_t v148;

  v148 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v120[0] = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)v120, "PaintRenderingContext2D", "drawImage");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)v120, "PaintRenderingContext2D", "drawImage");
  v120[1] = v4;
  v12 = *((int *)a2 + 8) - 1;
  if (v12 >= 9)
    v12 = 9;
  if (v12 != 9)
  {
    if (v12 != 5)
    {
      if (v12 == 3)
      {
        v13 = *(float **)(v5 + 24);
        WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v144);
        v14 = v147;
        if (v147)
        {
          v24 = 0;
LABEL_35:
          if (v14 != -1)
            ((void (*)(unint64_t *, uint64_t *))off_1E32C9FF8[v14])(&v134, &v145);
          return (_BYTE *)v24;
        }
        v15 = *((_QWORD *)a2 + 7);
        v134 = v15;
        v16 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v15 >= 0xFFFE000000000000)
        {
          v17 = (double)(int)v15;
        }
        else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v94 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
          v16 = v94;
          v17 = v95;
        }
        else
        {
          *(_QWORD *)&v17 = v15 - 0x2000000000000;
        }
        if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
        {
          v24 = 0;
          goto LABEL_34;
        }
        v18 = *((_QWORD *)a2 + 8);
        v134 = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
          v20 = v96;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
LABEL_208:
          v24 = 0;
          goto LABEL_34;
        }
        if (!v147)
        {
          v124[0] = 0;
          v125 = -1;
          v21 = v146;
          if (v146 != -1)
          {
            ((void (*)(unint64_t *, char *, uint64_t *))off_1E32C9FB8[v146])(&v134, v124, &v145);
            v125 = v21;
          }
          v22 = v17;
          v23 = v20;
          v132 = v23;
          v133 = v22;
          v134 = (unint64_t)v13;
          v135 = (WTF::StringImpl *)&v133;
          v136 = &v132;
          v137 = v13;
          v138 = &v133;
          v139 = &v132;
          v140 = v13;
          v141 = &v133;
          v142 = &v132;
          if ((_DWORD)v21 != -1)
          {
            v143 = &v134;
            ((void (*)(uint64_t *__return_ptr, unint64_t **, char *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase9drawImageEONS_7variantIJNS6_6RefPtrINS8_16HTMLImageElementENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15SVGImageElementENSD_ISI_EENSF_ISI_EEEENSB_INS8_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSB_INS8_11ImageBitmapENSD_ISQ_EENSF_ISQ_EEEENSB_INS8_18CSSStyleImageValueENSD_ISU_EENSF_ISU_EEEENSB_INS8_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSB_INS8_16HTMLVideoElementENSD_IS12_EENSF_IS12_EEEENSB_INS8_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEEEEEffE3__0JZNS9_9drawImageES1B_ffE3__1ZNS9_9drawImageES1B_ffE3__2EEEEEJRNS0_6__implIJSH_SL_SP_ST_SX_S11_S15_S19_EEEEEEDcOT_DpOT0____fmatrix[v21])(&v121, &v143, v124);
            if (v125 != -1)
              ((void (*)(unint64_t *, char *))off_1E32C9F78[v125])(&v134, v124);
            if (!v123)
            {
              v24 = 10;
LABEL_34:
              v14 = v147;
              goto LABEL_35;
            }
            v82 = (WTF::StringImpl *)v121;
            LOBYTE(v134) = v121;
            v83 = v122;
            v122 = 0;
            v135 = v83;
            if (!*((_QWORD *)v4 + 2))
            {
              v84.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v121, (JSC::JSGlobalObject *)&v135);
              JSC::VM::throwException(v4, this, v84);
              v83 = v135;
            }
            v135 = 0;
            if (v83)
            {
              if (*(_DWORD *)v83 == 2)
                WTF::StringImpl::destroy(v83, v82);
              else
                *(_DWORD *)v83 -= 2;
            }
            if (v123)
            {
              v85 = v122;
              v122 = 0;
              if (v85)
              {
                if (*(_DWORD *)v85 != 2)
                {
                  v24 = 0;
                  *(_DWORD *)v85 -= 2;
                  goto LABEL_34;
                }
                WTF::StringImpl::destroy(v85, v82);
              }
            }
            goto LABEL_208;
          }
        }
LABEL_213:
        std::__throw_bad_variant_access[abi:sn180100]();
      }
      if (v12 > 2)
        return (_BYTE *)JSC::throwTypeError();
      v79.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
      return (_BYTE *)JSC::VM::throwException(v4, this, v79);
    }
    v60 = *(_QWORD *)(v5 + 24);
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v144);
    v61 = v147;
    if (v147)
    {
      v24 = 0;
LABEL_109:
      if (v61 != -1)
        ((void (*)(unint64_t *, uint64_t *))off_1E32C9FF8[v61])(&v134, &v145);
      return (_BYTE *)v24;
    }
    v62 = *((_QWORD *)a2 + 7);
    v134 = v62;
    v63 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v62 >= 0xFFFE000000000000)
    {
      v64 = (double)(int)v62;
    }
    else if (v62 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v112 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v63 = v112;
      v64 = v113;
    }
    else
    {
      *(_QWORD *)&v64 = v62 - 0x2000000000000;
    }
    if (*((_DWORD *)v63 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v63))
    {
      v24 = 0;
      goto LABEL_108;
    }
    v65 = *((_QWORD *)a2 + 8);
    v134 = v65;
    v66 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v65 >= 0xFFFE000000000000)
    {
      v67 = (double)(int)v65;
    }
    else if (v65 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v114 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v66 = v114;
      v67 = v115;
    }
    else
    {
      *(_QWORD *)&v67 = v65 - 0x2000000000000;
    }
    if (*((_DWORD *)v66 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v66))
    {
      v24 = 0;
      goto LABEL_108;
    }
    v68 = *((_QWORD *)a2 + 9);
    v134 = v68;
    v69 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v68 >= 0xFFFE000000000000)
    {
      v70 = (double)(int)v68;
    }
    else if (v68 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v116 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v69 = v116;
      v70 = v117;
    }
    else
    {
      *(_QWORD *)&v70 = v68 - 0x2000000000000;
    }
    if (*((_DWORD *)v69 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v69))
    {
      v24 = 0;
      goto LABEL_108;
    }
    v71 = *((_QWORD *)a2 + 10);
    v134 = v71;
    v72 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v71 >= 0xFFFE000000000000)
    {
      v73 = (double)(int)v71;
    }
    else if (v71 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v73 = v118;
    }
    else
    {
      *(_QWORD *)&v73 = v71 - 0x2000000000000;
    }
    if (!*((_DWORD *)v72 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v72))
    {
      if (v147)
        goto LABEL_213;
      v124[0] = 0;
      v125 = -1;
      v74 = v146;
      if (v146 != -1)
      {
        ((void (*)(unint64_t *, char *, uint64_t *))off_1E32C9FB8[v146])(&v134, v124, &v145);
        v125 = v74;
      }
      v75 = v64;
      v76 = v67;
      v77 = v70;
      v132 = v76;
      v133 = v75;
      v78 = v73;
      v130 = v78;
      v131 = v77;
      v134 = v60;
      v135 = (WTF::StringImpl *)&v133;
      v136 = &v132;
      v137 = &v131;
      v138 = &v130;
      if ((_DWORD)v74 == -1)
        goto LABEL_213;
      v143 = &v134;
      ((void (*)(uint64_t *__return_ptr, unint64_t **, char *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase9drawImageEONS_7variantIJNS6_6RefPtrINS8_16HTMLImageElementENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15SVGImageElementENSD_ISI_EENSF_ISI_EEEENSB_INS8_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSB_INS8_11ImageBitmapENSD_ISQ_EENSF_ISQ_EEEENSB_INS8_18CSSStyleImageValueENSD_ISU_EENSF_ISU_EEEENSB_INS8_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSB_INS8_16HTMLVideoElementENSD_IS12_EENSF_IS12_EEEENSB_INS8_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEEEEEffffE3__0JEEEEEJRNS0_6__implIJSH_SL_SP_ST_SX_S11_S15_S19_EEEEEEDcOT_DpOT0____fmatrix[v74])(&v121, &v143, v124);
      if (v125 != -1)
        ((void (*)(unint64_t *, char *))off_1E32C9F78[v125])(&v134, v124);
      if (!v123)
      {
        v24 = 10;
LABEL_108:
        v61 = v147;
        goto LABEL_109;
      }
      v86 = (WTF::StringImpl *)v121;
      LOBYTE(v134) = v121;
      v87 = v122;
      v122 = 0;
      v135 = v87;
      if (!*((_QWORD *)v4 + 2))
      {
        v88.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v121, (JSC::JSGlobalObject *)&v135);
        JSC::VM::throwException(v4, this, v88);
        v87 = v135;
      }
      v135 = 0;
      if (v87)
      {
        if (*(_DWORD *)v87 == 2)
          WTF::StringImpl::destroy(v87, v86);
        else
          *(_DWORD *)v87 -= 2;
      }
      if (v123)
      {
        v89 = v122;
        v122 = 0;
        if (v89)
        {
          if (*(_DWORD *)v89 != 2)
          {
            v24 = 0;
            *(_DWORD *)v89 -= 2;
            goto LABEL_108;
          }
          WTF::StringImpl::destroy(v89, v86);
        }
      }
    }
    v24 = 0;
    goto LABEL_108;
  }
  v25 = *(_QWORD *)(v5 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v144);
  v26 = v147;
  if (!v147)
  {
    v27 = *((_QWORD *)a2 + 7);
    v134 = v27;
    v28 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v27 >= 0xFFFE000000000000)
    {
      v29 = (double)(int)v27;
    }
    else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v97 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v28 = v97;
      v29 = v98;
    }
    else
    {
      *(_QWORD *)&v29 = v27 - 0x2000000000000;
    }
    if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
    {
      v24 = 0;
      goto LABEL_79;
    }
    v30 = *((_QWORD *)a2 + 8);
    v134 = v30;
    v31 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v30 >= 0xFFFE000000000000)
    {
      v32 = (double)(int)v30;
    }
    else if (v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v99 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v31 = v99;
      v32 = v100;
    }
    else
    {
      *(_QWORD *)&v32 = v30 - 0x2000000000000;
    }
    if (*((_DWORD *)v31 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v31))
    {
      v24 = 0;
      goto LABEL_79;
    }
    v33 = *((_QWORD *)a2 + 9);
    v134 = v33;
    v34 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v33 >= 0xFFFE000000000000)
    {
      v35 = (double)(int)v33;
    }
    else if (v33 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v101 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v34 = v101;
      v35 = v102;
    }
    else
    {
      *(_QWORD *)&v35 = v33 - 0x2000000000000;
    }
    if (*((_DWORD *)v34 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v34))
    {
      v24 = 0;
      goto LABEL_79;
    }
    v36 = *((_QWORD *)a2 + 10);
    v134 = v36;
    v37 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v36 >= 0xFFFE000000000000)
    {
      v38 = (double)(int)v36;
    }
    else if (v36 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v103 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v37 = v103;
      v38 = v104;
    }
    else
    {
      *(_QWORD *)&v38 = v36 - 0x2000000000000;
    }
    v119 = v25;
    if (*((_DWORD *)v37 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v37))
    {
      v24 = 0;
      goto LABEL_79;
    }
    v39 = *((_QWORD *)a2 + 11);
    v134 = v39;
    v40 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v39 >= 0xFFFE000000000000)
    {
      v41 = (double)(int)v39;
    }
    else if (v39 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v105 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v40 = v105;
      v41 = v106;
    }
    else
    {
      *(_QWORD *)&v41 = v39 - 0x2000000000000;
    }
    if (*((_DWORD *)v40 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v40))
    {
      v24 = 0;
      goto LABEL_79;
    }
    v42 = *((_QWORD *)a2 + 12);
    v134 = v42;
    v43 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v42 >= 0xFFFE000000000000)
    {
      v44 = (double)(int)v42;
    }
    else if (v42 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v107 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v43 = v107;
      v44 = v108;
    }
    else
    {
      *(_QWORD *)&v44 = v42 - 0x2000000000000;
    }
    if (*((_DWORD *)v43 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v43))
    {
      v24 = 0;
      goto LABEL_79;
    }
    v45 = *((_QWORD *)a2 + 13);
    v134 = v45;
    v46 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v45 >= 0xFFFE000000000000)
    {
      v47 = (double)(int)v45;
    }
    else if (v45 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v109 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v46 = v109;
      v47 = v110;
    }
    else
    {
      *(_QWORD *)&v47 = v45 - 0x2000000000000;
    }
    if (*((_DWORD *)v46 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v46))
    {
      v24 = 0;
      goto LABEL_79;
    }
    v48 = *((_QWORD *)a2 + 14);
    v134 = v48;
    v49 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v48 >= 0xFFFE000000000000)
    {
      v50 = (double)(int)v48;
    }
    else if (v48 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v134, this);
      v50 = v111;
    }
    else
    {
      *(_QWORD *)&v50 = v48 - 0x2000000000000;
    }
    if (!*((_DWORD *)v49 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v49))
    {
      if (v147)
        goto LABEL_213;
      v124[0] = 0;
      v125 = -1;
      v51 = v146;
      if (v146 != -1)
      {
        ((void (*)(unint64_t *, char *, uint64_t *))off_1E32C9FB8[v146])(&v134, v124, &v145);
        v125 = v51;
      }
      v52 = v29;
      v53 = v32;
      v54 = v35;
      v132 = v53;
      v133 = v52;
      v55 = v38;
      v130 = v55;
      v131 = v54;
      v56 = v41;
      v57 = v44;
      v58 = v47;
      v128 = v57;
      v129 = v56;
      v59 = v50;
      v126 = v59;
      v127 = v58;
      v134 = v119;
      v135 = (WTF::StringImpl *)&v133;
      v136 = &v132;
      v137 = &v131;
      v138 = &v130;
      v139 = &v129;
      v140 = &v128;
      v141 = &v127;
      v142 = &v126;
      if ((_DWORD)v51 == -1)
        goto LABEL_213;
      v143 = &v134;
      ((void (*)(uint64_t *__return_ptr, unint64_t **, char *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase9drawImageEONS_7variantIJNS6_6RefPtrINS8_16HTMLImageElementENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15SVGImageElementENSD_ISI_EENSF_ISI_EEEENSB_INS8_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSB_INS8_11ImageBitmapENSD_ISQ_EENSF_ISQ_EEEENSB_INS8_18CSSStyleImageValueENSD_ISU_EENSF_ISU_EEEENSB_INS8_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSB_INS8_16HTMLVideoElementENSD_IS12_EENSF_IS12_EEEENSB_INS8_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEEEEEffffffffE3__0JEEEEEJRNS0_6__implIJSH_SL_SP_ST_SX_S11_S15_S19_EEEEEEDcOT_DpOT0____fmatrix[v51])(&v121, &v143, v124);
      if (v125 != -1)
        ((void (*)(unint64_t *, char *))off_1E32C9F78[v125])(&v134, v124);
      if (!v123)
      {
        v24 = 10;
LABEL_79:
        v26 = v147;
        goto LABEL_80;
      }
      v90 = (WTF::StringImpl *)v121;
      LOBYTE(v134) = v121;
      v91 = v122;
      v122 = 0;
      v135 = v91;
      if (!*((_QWORD *)v4 + 2))
      {
        v92.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v121, (JSC::JSGlobalObject *)&v135);
        JSC::VM::throwException(v4, this, v92);
        v91 = v135;
      }
      v135 = 0;
      if (v91)
      {
        if (*(_DWORD *)v91 == 2)
          WTF::StringImpl::destroy(v91, v90);
        else
          *(_DWORD *)v91 -= 2;
      }
      if (v123)
      {
        v93 = v122;
        v122 = 0;
        if (v93)
        {
          if (*(_DWORD *)v93 != 2)
          {
            v24 = 0;
            *(_DWORD *)v93 -= 2;
            goto LABEL_79;
          }
          WTF::StringImpl::destroy(v93, v90);
        }
      }
    }
    v24 = 0;
    goto LABEL_79;
  }
  v24 = 0;
LABEL_80:
  if (v26 != -1)
    ((void (*)(unint64_t *, uint64_t *))off_1E32C9FF8[v26])(&v134, &v145);
  return (_BYTE *)v24;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_beginPath(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;

  v3 = *((_QWORD *)a2 + 5);
  v12 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "PaintRenderingContext2D", "beginPath");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPaintRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "PaintRenderingContext2D", "beginPath");
  v9 = *(_QWORD *)(v3 + 24);
  v10 = *(unsigned int *)(v9 + 112);
  if ((_DWORD)v10 == -1)
    goto LABEL_15;
  if ((_DWORD)v10)
  {
    ((void (*)(char *, uint64_t, JSC::CallFrame *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v10])(&v13, v9 + 56, a3);
LABEL_15:
    *(_DWORD *)(v9 + 112) = 0;
  }
  return 10;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_fill(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPaintRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  _BOOL4 v24;
  char **v25;
  BOOL v26;
  uint64_t v28;
  uint64_t v29;
  JSC::VM *v30;
  uint64_t v31;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v33;
  uint64_t v34;
  char v35;
  _QWORD v36[2];
  JSC::VM *v37;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v36[0] = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v36, "PaintRenderingContext2D", "fill");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSPaintRenderingContext2D::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v36, "PaintRenderingContext2D", "fill");
  v36[1] = v9;
  v16 = *((int *)a2 + 8);
  v17 = v16 - 1;
  if ((unint64_t)(v16 - 1) >= 2)
    v17 = 2;
  if (v17 == 2)
    return WebCore::jsPaintRenderingContext2DPrototypeFunction_fill2Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4, a5, a6, a7, a8);
  if (v17 != 1)
  {
    if (v17)
      return JSC::throwTypeError();
    v18 = *(_QWORD *)(v10 + 24);
    if ((_DWORD)v16 == 1)
    {
      v20 = 0;
      goto LABEL_45;
    }
    v19 = *((_QWORD *)a2 + 6);
    if (v19 == 10)
    {
      v20 = 0;
LABEL_45:
      WebCore::CanvasRenderingContext2DBase::fill(v18, v20);
      return 10;
    }
    v37 = v9;
    v20 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v19);
    if (!*((_DWORD *)v9 + 20)
      || (v30 = v9,
          v31 = v20,
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v30),
          v20 = v31,
          (hasExceptionsAfterHandlingTraps & 1) == 0))
    {
      if ((v20 & 0xFF00000000) != 0)
        goto LABEL_45;
      WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v37, 0, "fillRule", 9, "PaintRenderingContext2D", 24, v29, "fill", 5, "\"nonzero\", \"evenodd\"", 21);
    }
    return 0;
  }
  v21 = *((_QWORD *)a2 + 6);
  if (v21 == 10)
  {
    WebCore::CanvasRenderingContext2DBase::fill(*(_QWORD *)(v10 + 24), 0);
    return 10;
  }
  if ((v21 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(v21 + 5) >= 0x17u)
  {
    v23 = *(unsigned int *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x4C);
    v24 = *(_DWORD *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x4C) != 0;
    v25 = (char **)(16 * v23);
    if ((_DWORD)v23)
      v26 = v25 == &WebCore::JSPath2D::s_info;
    else
      v26 = 1;
    if (!v26)
    {
      do
      {
        v25 = (char **)v25[2];
        v24 = v25 != 0;
      }
      while (v25 != &WebCore::JSPath2D::s_info && v25 != 0);
    }
    if (v24)
      return WebCore::jsPaintRenderingContext2DPrototypeFunction_fill2Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4, a5, a6, a7, a8);
  }
  v18 = *(_QWORD *)(v10 + 24);
  if ((_DWORD)v16 == 1)
  {
    v20 = 0;
    goto LABEL_45;
  }
  v37 = v9;
  v20 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v21);
  if (!*((_DWORD *)v9 + 20)
    || (v33 = v9, v34 = v20, v35 = JSC::VM::hasExceptionsAfterHandlingTraps(v33), v20 = v34, (v35 & 1) == 0))
  {
    if ((v20 & 0xFF00000000) != 0)
      goto LABEL_45;
    WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v37, 0, "fillRule", 9, "PaintRenderingContext2D", 24, v28, "fill", 5, "\"nonzero\", \"evenodd\"", 21);
  }
  return 0;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_stroke(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char **v12;
  BOOL v13;
  uint64_t v16;
  float32x2_t *v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v8 = *((_QWORD *)this + 7);
  v24 = v8;
  v9 = *((_QWORD *)a2 + 5);
  if ((v9 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "PaintRenderingContext2D", "stroke");
  v10 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSPaintRenderingContext2D::s_info && v12 != 0);
  }
  if (!v11)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "PaintRenderingContext2D", "stroke");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    WebCore::CanvasRenderingContext2DBase::stroke(*(WebCore::CanvasRenderingContext2DBase **)(v9 + 24));
    return 10;
  }
  else
  {
    v16 = *((_QWORD *)a2 + 6);
    v17 = *(float32x2_t **)(v9 + 24);
    v25 = v8;
    if ((v16 & 0xFFFE000000000002) != 0)
      goto LABEL_25;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSPath2D::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSPath2D::s_info && v20 != 0);
    }
    if (v19 && (v23 = *(_QWORD *)(v16 + 24)) != 0)
    {
      WebCore::CanvasRenderingContext2DBase::strokeInternal(v17, (const WebCore::Path *)(v23 + 8));
      return 10;
    }
    else
    {
LABEL_25:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v25, 0, "path", 5, "PaintRenderingContext2D", 24, a8, "stroke", 7, "Path2D", 7);
      return 0;
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_clip(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPaintRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v27;
  _BOOL4 v28;
  char **v29;
  BOOL v30;
  unsigned int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  _QWORD v42[2];
  JSC::VM *v43;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v42[0] = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v42, "PaintRenderingContext2D", "clip");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSPaintRenderingContext2D::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v42, "PaintRenderingContext2D", "clip");
  v42[1] = v9;
  v16 = *((int *)a2 + 8);
  v17 = v16 - 1;
  if ((unint64_t)(v16 - 1) >= 2)
    v17 = 2;
  if (v17 == 2)
    return WebCore::jsPaintRenderingContext2DPrototypeFunction_clip2Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4, a5, a6, a7, a8);
  if (v17 == 1)
  {
    v21 = *((_QWORD *)a2 + 6);
    if (v21 == 10)
    {
      v22 = *(unsigned int **)(v10 + 24);
      v23 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v22 + 240))(v22);
      if (v23)
      {
        v24 = v22[33];
        if (!v24)
        {
          __break(0xC471u);
          JUMPOUT(0x194DEDDF4);
        }
        if (*(_BYTE *)(*((_QWORD *)v22 + 15) + 560 * v24 - 400))
        {
          v25 = v23;
          WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v22);
          (*(void (**)(uint64_t, _QWORD *, _QWORD))(*(_QWORD *)v25 + 496))(v25, (_QWORD *)v22 + 6, 0);
        }
      }
      return 10;
    }
    if ((v21 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(v21 + 5) >= 0x17u)
    {
      v27 = *(unsigned int *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x4C);
      v28 = *(_DWORD *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x4C) != 0;
      v29 = (char **)(16 * v27);
      if ((_DWORD)v27)
        v30 = v29 == &WebCore::JSPath2D::s_info;
      else
        v30 = 1;
      if (!v30)
      {
        do
        {
          v29 = (char **)v29[2];
          v28 = v29 != 0;
        }
        while (v29 != &WebCore::JSPath2D::s_info && v29 != 0);
      }
      if (v28)
        return WebCore::jsPaintRenderingContext2DPrototypeFunction_clip2Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4, a5, a6, a7, a8);
    }
    v32 = *(unsigned int **)(v10 + 24);
    if ((_DWORD)v16 == 1)
    {
      LODWORD(v34) = 0;
    }
    else
    {
      v43 = v9;
      v34 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v21);
      if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
        return 0;
      if ((v34 & 0xFF00000000) == 0)
      {
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v43, 0, "fillRule", 9, "PaintRenderingContext2D", 24, v33, "clip", 5, "\"nonzero\", \"evenodd\"", 21);
        return 0;
      }
    }
    v39 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v32 + 240))(v32);
    if (v39)
    {
      v40 = v32[33];
      if (!v40)
        goto LABEL_67;
      if (*(_BYTE *)(*((_QWORD *)v32 + 15) + 560 * v40 - 400))
      {
        v41 = v39;
        WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v32);
        (*(void (**)(uint64_t, _QWORD *, BOOL))(*(_QWORD *)v41 + 496))(v41, (_QWORD *)v32 + 6, (_DWORD)v34 != 0);
      }
    }
    return 10;
  }
  if (v17)
    return JSC::throwTypeError();
  v18 = *(unsigned int **)(v10 + 24);
  if ((_DWORD)v16 == 1)
  {
    LODWORD(v20) = 0;
    goto LABEL_47;
  }
  v19 = *((_QWORD *)a2 + 6);
  if (v19 == 10)
  {
    LODWORD(v20) = 0;
LABEL_47:
    v36 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v18 + 240))(v18);
    if (!v36)
      return 10;
    v37 = v18[33];
    if (v37)
    {
      if (*(_BYTE *)(*((_QWORD *)v18 + 15) + 560 * v37 - 400))
      {
        v38 = v36;
        WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v18);
        (*(void (**)(uint64_t, _QWORD *, BOOL))(*(_QWORD *)v38 + 496))(v38, (_QWORD *)v18 + 6, (_DWORD)v20 != 0);
      }
      return 10;
    }
LABEL_67:
    __break(0xC471u);
    JUMPOUT(0x194DEDDECLL);
  }
  v43 = v9;
  v20 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v19);
  if (!*((_DWORD *)v9 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) == 0)
  {
    if ((v20 & 0xFF00000000) != 0)
      goto LABEL_47;
    WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v43, 0, "fillRule", 9, "PaintRenderingContext2D", 24, v35, "clip", 5, "\"nonzero\", \"evenodd\"", 21);
  }
  return 0;
}

_BYTE *WebCore::jsPaintRenderingContext2DPrototypeFunction_isPointInPath(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPaintRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  unint64_t v16;
  JSValue v17;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  JSC::VM *v25;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "PaintRenderingContext2D", "isPointInPath");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSPaintRenderingContext2D::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "PaintRenderingContext2D", "isPointInPath");
  v16 = *((int *)a2 + 8) - 1;
  if (v16 >= 4)
    v16 = 4;
  switch(v16)
  {
    case 4uLL:
      return (_BYTE *)WebCore::jsPaintRenderingContext2DPrototypeFunction_isPointInPath2Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4, a5, a6, a7, a8);
    case 3uLL:
      v19 = *((_QWORD *)a2 + 6);
      if ((v19 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v19 + 5) < 0x17u)
        return (_BYTE *)WebCore::jsPaintRenderingContext2DPrototypeFunction_isPointInPath1Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4);
      v20 = *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C);
      v21 = *(_DWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C) != 0;
      v22 = (char **)(16 * v20);
      if ((_DWORD)v20)
        v23 = v22 == &WebCore::JSPath2D::s_info;
      else
        v23 = 1;
      if (!v23)
      {
        do
        {
          v22 = (char **)v22[2];
          v21 = v22 != 0;
        }
        while (v22 != &WebCore::JSPath2D::s_info && v22 != 0);
      }
      if (!v21)
        return (_BYTE *)WebCore::jsPaintRenderingContext2DPrototypeFunction_isPointInPath1Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4);
      return (_BYTE *)WebCore::jsPaintRenderingContext2DPrototypeFunction_isPointInPath2Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4, a5, a6, a7, a8);
    case 2uLL:
      return (_BYTE *)WebCore::jsPaintRenderingContext2DPrototypeFunction_isPointInPath1Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4);
  }
  v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
  return (_BYTE *)JSC::VM::throwException(v9, this, v17);
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_isPointInStroke(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  WebCore::CanvasRenderingContext2DBase *v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL4 v28;
  char **v29;
  BOOL v30;
  JSValue v32;
  uint64_t v33;
  unint64_t v34;
  double v35;
  unint64_t v36;
  JSC::VM *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  JSC::VM *v43;
  JSC::VM *v44;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v43 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v43, "PaintRenderingContext2D", "isPointInStroke");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSPaintRenderingContext2D::s_info && v14 != 0);
  }
  if (!v13)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v43, "PaintRenderingContext2D", "isPointInStroke");
  v17 = *((int *)a2 + 8) - 1;
  if (v17 >= 3)
    v17 = 3;
  if (v17 == 3)
  {
    v25 = *(WebCore::CanvasRenderingContext2DBase **)(v10 + 24);
    v26 = *((_QWORD *)a2 + 6);
    v44 = v9;
    if ((v26 & 0xFFFE000000000002) != 0)
      goto LABEL_38;
    v27 = *(unsigned int *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x4C);
    v28 = *(_DWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x4C) != 0;
    v29 = (char **)(16 * v27);
    if ((_DWORD)v27)
      v30 = v29 == &WebCore::JSPath2D::s_info;
    else
      v30 = 1;
    if (!v30)
    {
      do
      {
        v29 = (char **)v29[2];
        v28 = v29 != 0;
      }
      while (v29 != &WebCore::JSPath2D::s_info && v29 != 0);
    }
    if (v28 && (v33 = *(_QWORD *)(v26 + 24)) != 0)
    {
      v34 = *((_QWORD *)a2 + 7);
      v44 = (JSC::VM *)v34;
      if (v34 >= 0xFFFE000000000000)
      {
        v35 = (double)(int)v34;
      }
      else if (v34 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v44, this);
        v35 = v41;
      }
      else
      {
        *(_QWORD *)&v35 = v34 - 0x2000000000000;
      }
      if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
      {
        return 0;
      }
      else
      {
        v36 = *((_QWORD *)a2 + 8);
        v44 = (JSC::VM *)v36;
        v37 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v36 >= 0xFFFE000000000000)
        {
          v38 = (double)(int)v36;
        }
        else if (v36 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v44, this);
          v38 = v42;
        }
        else
        {
          *(_QWORD *)&v38 = v36 - 0x2000000000000;
        }
        if (*((_DWORD *)v37 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v37))
        {
          return 0;
        }
        else if (WebCore::CanvasRenderingContext2DBase::isPointInStrokeInternal(v25, (const WebCore::Path *)(v33 + 8), v35, v38))
        {
          return 7;
        }
        else
        {
          return 6;
        }
      }
    }
    else
    {
LABEL_38:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v44, 0, "path", 5, "PaintRenderingContext2D", 24, a8, "isPointInStroke", 16, "Path2D", 7);
      return 0;
    }
  }
  else if (v17 == 2)
  {
    v18 = *(_QWORD *)(v10 + 24);
    v19 = *((_QWORD *)a2 + 6);
    v44 = (JSC::VM *)v19;
    if (v19 >= 0xFFFE000000000000)
    {
      v20 = (double)(int)v19;
    }
    else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v44, this);
      v20 = v39;
    }
    else
    {
      *(_QWORD *)&v20 = v19 - 0x2000000000000;
    }
    if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
    {
      return 0;
    }
    else
    {
      v21 = *((_QWORD *)a2 + 7);
      v44 = (JSC::VM *)v21;
      v22 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v21 >= 0xFFFE000000000000)
      {
        v23 = (double)(int)v21;
      }
      else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v44, this);
        v23 = v40;
      }
      else
      {
        *(_QWORD *)&v23 = v21 - 0x2000000000000;
      }
      if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
      {
        return 0;
      }
      else if (WebCore::CanvasRenderingContext2DBase::isPointInStrokeInternal((WebCore::CanvasRenderingContext2DBase *)v18, (const WebCore::Path *)(v18 + 48), v20, v23))
      {
        return 7;
      }
      else
      {
        return 6;
      }
    }
  }
  else
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v32);
  }
}

_BYTE *WebCore::jsPaintRenderingContext2DPrototypeFunction_createLinearGradient(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasRenderingContext *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  float v24;
  float v25;
  BOOL v26;
  float v27;
  BOOL v28;
  float v29;
  JSC::JSGlobalObject *v31;
  WebCore::CanvasGradient *v32;
  WebCore::CanvasGradient *v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;
  WTF *v38;
  void *v39;
  JSValue v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  JSValue v44;
  double v45;
  JSC::VM *v46;
  double v47;
  JSC::VM *v48;
  double v49;
  double v50;
  uint64_t v51;
  _QWORD v52[2];
  int v53;
  JSC::VM *v54;
  WTF::StringImpl *v55;
  float v56[2];

  v4 = *((_QWORD *)this + 7);
  v51 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v51, "PaintRenderingContext2D", "createLinearGradient");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v51, "PaintRenderingContext2D", "createLinearGradient");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v44.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v44);
  }
  v12 = *(WebCore::CanvasRenderingContext **)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v52[0] = v13;
  v54 = (JSC::VM *)v4;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v52, this);
    v14 = v45;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  v52[0] = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  v54 = v16;
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v46 = v16;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v52, this);
    v16 = v46;
    v17 = v47;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  v52[0] = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  v54 = v19;
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v48 = v19;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v52, this);
    v19 = v48;
    v20 = v49;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v21 = *((_QWORD *)a2 + 9);
  v52[0] = v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  v54 = v22;
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v52, this);
    v23 = v50;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v24 = v14;
  if ((LODWORD(v24) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
  {
    v25 = v17;
    v26 = (LODWORD(v25) & 0x7FFFFFFFu) <= 0x7F7FFFFF;
  }
  else
  {
    v26 = 0;
  }
  v27 = fabs(v20);
  v28 = v26 && SLODWORD(v27) <= 2139095039;
  v29 = fabs(v23);
  if (v28 && SLODWORD(v29) < 2139095040)
  {
    v31 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    *(float *)&v54 = v14;
    *((float *)&v54 + 1) = v17;
    v56[0] = v20;
    v56[1] = v23;
    v32 = (WebCore::CanvasGradient *)WTF::fastMalloc((WTF *)0x18);
    WebCore::CanvasGradient::CanvasGradient(v32, (const WebCore::FloatPoint *)&v54, (const WebCore::FloatPoint *)v56, v12);
    v53 = 0;
    v52[0] = 0;
    v35 = WebCore::toJS(this, v31, v32, v33);
    if (*(_DWORD *)v32 == 1)
    {
      WebCore::CanvasGradient::~CanvasGradient(v32, v34);
      WTF::fastFree(v38, v39);
      v36 = 0;
    }
    else
    {
      v36 = 0;
      --*(_DWORD *)v32;
    }
  }
  else
  {
    LOBYTE(v52[0]) = 6;
    v53 = 1;
    LOBYTE(v54) = 6;
    v52[1] = 0;
    v55 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v40.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)6, (JSC::JSGlobalObject *)&v55);
      JSC::VM::throwException((JSC::VM *)v4, this, v40);
      v42 = v55;
      v55 = 0;
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v41);
        else
          *(_DWORD *)v42 -= 2;
      }
    }
    v35 = 0;
    v36 = 1;
  }
  ((void (*)(JSC::VM **, _QWORD *))off_1E32CA008[v36])(&v54, v52);
  return (_BYTE *)v35;
}

_BYTE *WebCore::jsPaintRenderingContext2DPrototypeFunction_createRadialGradient(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasRenderingContext *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  uint64_t v36;
  JSC::JSGlobalObject *v37;
  WebCore::CanvasRenderingContext *v38;
  WebCore::CanvasGradient *v39;
  float v40;
  float v41;
  WebCore::CanvasGradient *v42;
  void *v43;
  unint64_t v44;
  uint64_t v45;
  JSValue v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  WTF *v51;
  void *v52;
  JSValue v53;
  WebCore::CanvasRenderingContext *v54;
  char hasExceptionsAfterHandlingTraps;
  WebCore::CanvasRenderingContext *v56;
  char v57;
  WebCore::CanvasRenderingContext *v58;
  char v59;
  WebCore::CanvasRenderingContext *v60;
  char v61;
  WebCore::CanvasRenderingContext *v62;
  char v63;
  JSC::VM *v64;
  WebCore::CanvasRenderingContext *v65;
  char v66;
  WebCore::CanvasRenderingContext *v67;
  double v68;
  JSC::VM *v69;
  WebCore::CanvasRenderingContext *v70;
  double v71;
  JSC::VM *v72;
  WebCore::CanvasRenderingContext *v73;
  double v74;
  JSC::VM *v75;
  WebCore::CanvasRenderingContext *v76;
  double v77;
  WebCore::CanvasRenderingContext *v78;
  double v79;
  double v80;
  JSC::VM *v81;
  WebCore::CanvasRenderingContext *v82;
  unint64_t v83;
  _QWORD v84[2];
  int v85;
  unint64_t v86;
  WTF::StringImpl *v87;
  float v88[4];

  v4 = *((_QWORD *)this + 7);
  v83 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v83, "PaintRenderingContext2D", "createRadialGradient");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v83, "PaintRenderingContext2D", "createRadialGradient");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v53.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v53);
  }
  v12 = *(WebCore::CanvasRenderingContext **)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v84[0] = v13;
  v86 = v4;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v67 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v84, this);
    v12 = v67;
    v14 = v68;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80))
  {
    v54 = v12;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v12 = v54;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  v84[0] = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  v86 = (unint64_t)v16;
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v69 = v16;
    v70 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v84, this);
    v12 = v70;
    v16 = v69;
    v17 = v71;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20))
  {
    v56 = v12;
    v57 = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
    v12 = v56;
    if ((v57 & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  v84[0] = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  v86 = (unint64_t)v19;
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v72 = v19;
    v73 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v84, this);
    v12 = v73;
    v19 = v72;
    v20 = v74;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20))
  {
    v58 = v12;
    v59 = JSC::VM::hasExceptionsAfterHandlingTraps(v19);
    v12 = v58;
    if ((v59 & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v21 = *((_QWORD *)a2 + 9);
  v84[0] = v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  v86 = (unint64_t)v22;
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v75 = v22;
    v76 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v84, this);
    v12 = v76;
    v22 = v75;
    v23 = v77;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20))
  {
    v60 = v12;
    v61 = JSC::VM::hasExceptionsAfterHandlingTraps(v22);
    v12 = v60;
    if ((v61 & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v24 = *((_QWORD *)a2 + 10);
  v84[0] = v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  v86 = (unint64_t)v25;
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v81 = v25;
    v78 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v84, this);
    v12 = v78;
    v25 = v81;
    v26 = v79;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20))
  {
    v62 = v12;
    v63 = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
    v12 = v62;
    if ((v63 & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v27 = *((_QWORD *)a2 + 11);
  v84[0] = v27;
  v28 = (JSC::VM *)*((_QWORD *)this + 7);
  v86 = (unint64_t)v28;
  if (v27 >= 0xFFFE000000000000)
  {
    v29 = (double)(int)v27;
  }
  else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v82 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v84, this);
    v12 = v82;
    v29 = v80;
  }
  else
  {
    *(_QWORD *)&v29 = v27 - 0x2000000000000;
  }
  if (*((_DWORD *)v28 + 20))
  {
    v64 = v28;
    v65 = v12;
    v66 = JSC::VM::hasExceptionsAfterHandlingTraps(v64);
    v12 = v65;
    if ((v66 & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v29 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v30 = v14;
  if ((LODWORD(v30) & 0x7FFFFFFFu) > 0x7F7FFFFF
    || (v31 = v17, (LODWORD(v31) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v32 = v20, (LODWORD(v32) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v33 = v23, (LODWORD(v33) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v34 = v26, (LODWORD(v34) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v35 = v29, (LODWORD(v35) & 0x7FFFFFFFu) > 0x7F7FFFFF))
  {
    v36 = 6;
LABEL_54:
    LOBYTE(v84[0]) = v36;
    v85 = 1;
    LOBYTE(v86) = v36;
    v84[1] = 0;
    v87 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v46.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v36, (JSC::JSGlobalObject *)&v87);
      JSC::VM::throwException((JSC::VM *)v4, this, v46);
      v48 = v87;
      v87 = 0;
      if (v48)
      {
        if (*(_DWORD *)v48 == 2)
          WTF::StringImpl::destroy(v48, v47);
        else
          *(_DWORD *)v48 -= 2;
      }
    }
    v44 = 0;
    v45 = 1;
    goto LABEL_59;
  }
  v36 = 0;
  if (v32 < 0.0 || v35 < 0.0)
    goto LABEL_54;
  v37 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v86 = __PAIR64__(LODWORD(v31), LODWORD(v30));
  v88[0] = v23;
  v88[1] = v26;
  v38 = v12;
  v39 = (WebCore::CanvasGradient *)WTF::fastMalloc((WTF *)0x18);
  v40 = v20;
  v41 = v29;
  WebCore::CanvasGradient::CanvasGradient(v39, (const WebCore::FloatPoint *)&v86, v40, (const WebCore::FloatPoint *)v88, v41, v38);
  v85 = 0;
  v84[0] = 0;
  v44 = WebCore::toJS(this, v37, v39, v42);
  if (*(_DWORD *)v39 == 1)
  {
    WebCore::CanvasGradient::~CanvasGradient(v39, v43);
    WTF::fastFree(v51, v52);
    v45 = 0;
  }
  else
  {
    v45 = 0;
    --*(_DWORD *)v39;
  }
LABEL_59:
  ((void (*)(unint64_t *, _QWORD *))off_1E32CA008[v45])(&v86, v84);
  return (_BYTE *)v44;
}

_BYTE *WebCore::jsPaintRenderingContext2DPrototypeFunction_createConicGradient(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasRenderingContext *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  float v21;
  float v22;
  BOOL v23;
  float v24;
  JSValue v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  unint64_t v29;
  uint64_t v30;
  JSC::JSGlobalObject *v32;
  float v33;
  WebCore::CanvasGradient *v34;
  WebCore::CanvasGradient *v35;
  void *v36;
  WTF *v37;
  void *v38;
  JSValue v40;
  double v41;
  JSC::VM *v42;
  double v43;
  double v44;
  uint64_t v45;
  _QWORD v46[2];
  int v47;
  JSC::VM *v48;
  WTF::StringImpl *v49;

  v4 = *((_QWORD *)this + 7);
  v45 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v45, "PaintRenderingContext2D", "createConicGradient");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v45, "PaintRenderingContext2D", "createConicGradient");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v40.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v40);
  }
  v12 = *(WebCore::CanvasRenderingContext **)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v46[0] = v13;
  v48 = (JSC::VM *)v4;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v46, this);
    v14 = v41;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  v46[0] = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  v48 = v16;
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v42 = v16;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v46, this);
    v16 = v42;
    v17 = v43;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  v46[0] = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  v48 = v19;
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v46, this);
    v20 = v44;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v21 = v14;
  if ((LODWORD(v21) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
  {
    v22 = v17;
    v23 = (LODWORD(v22) & 0x7FFFFFFFu) <= 0x7F7FFFFF;
  }
  else
  {
    v23 = 0;
  }
  v24 = fabs(v20);
  if (v23 && SLODWORD(v24) < 2139095040)
  {
    v32 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v33 = (float)((float)((float)(v21 / 6.2832) - floorf(v21 / 6.2832)) * 6.2832) + 1.5708;
    *(float *)&v48 = v17;
    *((float *)&v48 + 1) = v20;
    v34 = (WebCore::CanvasGradient *)WTF::fastMalloc((WTF *)0x18);
    WebCore::CanvasGradient::CanvasGradient(v34, (const WebCore::FloatPoint *)&v48, v33, v12);
    v47 = 0;
    v46[0] = 0;
    v29 = WebCore::toJS(this, v32, v34, v35);
    if (*(_DWORD *)v34 == 1)
    {
      WebCore::CanvasGradient::~CanvasGradient(v34, v36);
      WTF::fastFree(v37, v38);
      v30 = 0;
    }
    else
    {
      v30 = 0;
      --*(_DWORD *)v34;
    }
  }
  else
  {
    LOBYTE(v46[0]) = 6;
    v47 = 1;
    LOBYTE(v48) = 6;
    v46[1] = 0;
    v49 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v26.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)6, (JSC::JSGlobalObject *)&v49);
      JSC::VM::throwException((JSC::VM *)v4, this, v26);
      v28 = v49;
      v49 = 0;
      if (v28)
      {
        if (*(_DWORD *)v28 == 2)
          WTF::StringImpl::destroy(v28, v27);
        else
          *(_DWORD *)v28 -= 2;
      }
    }
    v29 = 0;
    v30 = 1;
  }
  ((void (*)(JSC::VM **, _QWORD *, JSC::CallFrame *))off_1E32CA008[v30])(&v48, v46, a3);
  return (_BYTE *)v29;
}

_BYTE *WebCore::jsPaintRenderingContext2DPrototypeFunction_createPattern(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  WTF::StringImpl *v17;
  void *v18;
  WTF *v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  JSValue v26;
  WTF::StringImpl *v27;
  JSValue v28;
  JSC::VM *v29;
  WTF::StringImpl *v30;
  char v31[8];
  int v32;
  int v33[2];
  WTF::StringImpl *v34;
  int v35;
  WTF::StringImpl *v36;
  int v37;
  char v38[8];
  WTF::StringImpl *v39;
  char v40[8];
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "PaintRenderingContext2D", "createPattern");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "PaintRenderingContext2D", "createPattern");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v26);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v40);
  v13 = v43;
  if (!v43)
  {
    WebCore::Converter<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLDOMString>>::convert(this, *((_QWORD *)a2 + 7), (uint64_t)&v36);
    v14 = v37;
    if (v37)
    {
      v20 = 0;
LABEL_31:
      if (v14 != -1)
        ((void (*)(int *, WTF::StringImpl **))off_1E32C9390[v14])(v33, &v36);
      v13 = v43;
      goto LABEL_34;
    }
    if (!v43)
    {
      v15 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      v31[0] = 0;
      v32 = -1;
      v16 = v42;
      if (v42 == -1
        || (((void (*)(int *, char *, uint64_t *))off_1E32C9FB8[v42])(v33, v31, &v41), v32 = v16, !v37))
      {
        v17 = v36;
        v36 = 0;
        v30 = v17;
        WebCore::CanvasRenderingContext2DBase::createPattern(v12, (uint64_t)v31, &v30, (uint64_t)v33);
        if (!v35)
        {
          v19 = *(WTF **)v33;
          *(_QWORD *)v33 = 0;
          if (v19)
          {
            v20 = WebCore::toJS((uint64_t)this, v15, v19);
            if (*(_DWORD *)v19 == 1)
            {
              v22 = *((_QWORD *)v19 + 1);
              *((_QWORD *)v19 + 1) = 0;
              if (v22)
              {
                if (*(_DWORD *)v22 == 1)
                {
                  if (*(_BYTE *)(v22 + 40))
                  {
                    v23 = *(unsigned int *)(v22 + 32);
                    if ((_DWORD)v23 != -1)
                      ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v23])(v38, v22 + 24);
                    *(_DWORD *)(v22 + 32) = -1;
                  }
                  v24 = *(unsigned int *)(v22 + 16);
                  if ((_DWORD)v24 != -1)
                    ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v24])(v38, v22 + 8);
                  *(_DWORD *)(v22 + 16) = -1;
                  WTF::fastFree((WTF *)v22, v18);
                }
                else
                {
                  --*(_DWORD *)v22;
                }
              }
              WTF::fastFree(v19, v18);
            }
            else
            {
              --*(_DWORD *)v19;
            }
          }
          else
          {
            v20 = 2;
          }
LABEL_23:
          if (v35 != -1)
            ((void (*)(char *, int *))off_1E32CA018[v35])(v38, v33);
          v35 = -1;
          if (v17)
          {
            if (*(_DWORD *)v17 == 2)
              WTF::StringImpl::destroy(v17, (WTF::StringImpl *)v18);
            else
              *(_DWORD *)v17 -= 2;
          }
          if (v32 != -1)
            ((void (*)(char *, char *))off_1E32C9F78[v32])(v38, v31);
          v14 = v37;
          goto LABEL_31;
        }
        if (v35 == 1)
        {
          v18 = (void *)LOBYTE(v33[0]);
          v38[0] = v33[0];
          v27 = v34;
          v34 = 0;
          v39 = v27;
          if (!*((_QWORD *)v4 + 2))
          {
            v28.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v33[0]), (JSC::JSGlobalObject *)&v39);
            JSC::VM::throwException(v4, this, v28);
            v27 = v39;
          }
          v39 = 0;
          if (v27)
          {
            if (*(_DWORD *)v27 == 2)
              WTF::StringImpl::destroy(v27, (WTF::StringImpl *)v18);
            else
              *(_DWORD *)v27 -= 2;
          }
          v20 = 0;
          goto LABEL_23;
        }
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  v20 = 0;
LABEL_34:
  if (v13 != -1)
    ((void (*)(int *, uint64_t *))off_1E32C9FF8[v13])(v33, &v41);
  return (_BYTE *)v20;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_closePath(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "PaintRenderingContext2D", "closePath");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPaintRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "PaintRenderingContext2D", "closePath");
  WebCore::CanvasPath::closePath(*(_QWORD *)(v3 + 24) + 40);
  return 10;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_moveTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  float v18;
  float v19;
  JSValue v21;
  double v22;
  double v23;
  JSC::VM *v24;
  unint64_t v25;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "PaintRenderingContext2D", "moveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "PaintRenderingContext2D", "moveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v25 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v25, this);
      v14 = v22;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v25 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v25, this);
        v17 = v23;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = v14;
        v19 = v17;
        WebCore::CanvasPath::moveTo(v12 + 40, v18, v19);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_lineTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  float v18;
  float v19;
  JSValue v21;
  double v22;
  double v23;
  JSC::VM *v24;
  unint64_t v25;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "PaintRenderingContext2D", "lineTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "PaintRenderingContext2D", "lineTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v25 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v25, this);
      v14 = v22;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v25 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v25, this);
        v17 = v23;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = v14;
        v19 = v17;
        WebCore::CanvasPath::lineTo((WebCore::CanvasPath *)(v12 + 40), v18, v19);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_quadraticCurveTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  float v24;
  float v25;
  float v26;
  float v27;
  JSValue v29;
  double v30;
  double v31;
  double v32;
  double v33;
  JSC::VM *v34;
  unint64_t v35;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v34 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "PaintRenderingContext2D", "quadraticCurveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "PaintRenderingContext2D", "quadraticCurveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v29);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v35 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
      v14 = v30;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v35 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
        v17 = v31;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v35 = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
          v20 = v32;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v35 = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
            v23 = v33;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = v20;
            v25 = v17;
            v26 = v14;
            v27 = v23;
            WebCore::CanvasPath::quadraticCurveTo((WebCore::CanvasPath *)(v12 + 40), v26, v25, v24, v27);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_bezierCurveTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  JSValue v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  JSC::VM *v44;
  unint64_t v45;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v44 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "PaintRenderingContext2D", "bezierCurveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "PaintRenderingContext2D", "bezierCurveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v37);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v45 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
      v14 = v38;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v45 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
        v17 = v39;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v45 = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
          v20 = v40;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v45 = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
            v23 = v41;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = *((_QWORD *)a2 + 10);
            v45 = v24;
            v25 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v24 >= 0xFFFE000000000000)
            {
              v26 = (double)(int)v24;
            }
            else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
              v26 = v42;
            }
            else
            {
              *(_QWORD *)&v26 = v24 - 0x2000000000000;
            }
            if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            {
              return 0;
            }
            else
            {
              v27 = *((_QWORD *)a2 + 11);
              v45 = v27;
              v28 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v27 >= 0xFFFE000000000000)
              {
                v29 = (double)(int)v27;
              }
              else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
                v29 = v43;
              }
              else
              {
                *(_QWORD *)&v29 = v27 - 0x2000000000000;
              }
              if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
              {
                return 0;
              }
              else
              {
                v30 = v26;
                v31 = v23;
                v32 = v20;
                v33 = v17;
                v34 = v14;
                v35 = v29;
                WebCore::CanvasPath::bezierCurveTo((WebCore::CanvasPath *)(v12 + 40), v34, v33, v32, v31, v30, v35);
                return 10;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_arcTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  JSValue v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  JSValue v36;
  double v37;
  JSC::VM *v38;
  double v39;
  JSC::VM *v40;
  double v41;
  JSC::VM *v42;
  double v43;
  double v44;
  uint64_t v45;
  char v46;
  WTF::StringImpl *v47;
  int v48[2];
  WTF::StringImpl *v49;
  char v50;

  v4 = *((_QWORD *)this + 7);
  v45 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v45, "PaintRenderingContext2D", "arcTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v45, "PaintRenderingContext2D", "arcTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v33.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException((JSC::VM *)v4, this, v33);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    *(_QWORD *)v48 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
      v14 = v37;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      *(_QWORD *)v48 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v38 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
        v16 = v38;
        v17 = v39;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        *(_QWORD *)v48 = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v40 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
          v19 = v40;
          v20 = v41;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          *(_QWORD *)v48 = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            v42 = (JSC::VM *)*((_QWORD *)this + 7);
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
            v22 = v42;
            v23 = v43;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = *((_QWORD *)a2 + 10);
            *(_QWORD *)v48 = v24;
            v25 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v24 >= 0xFFFE000000000000)
            {
              v26 = (double)(int)v24;
            }
            else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
              v26 = v44;
            }
            else
            {
              *(_QWORD *)&v26 = v24 - 0x2000000000000;
            }
            if (!*((_DWORD *)v25 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            {
              v27 = v23;
              v28 = v20;
              v29 = v17;
              v30 = v14;
              v31 = v26;
              WebCore::CanvasPath::arcTo((WebCore::CanvasPath *)(v12 + 40), v30, v29, v28, v27, v31, (uint64_t)v48);
              if (!v50)
                return 10;
              v34 = (WTF::StringImpl *)LOBYTE(v48[0]);
              v46 = v48[0];
              v35 = v49;
              v47 = v49;
              if (!*(_QWORD *)(v4 + 16))
              {
                v36.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v48[0]), (JSC::JSGlobalObject *)&v47);
                JSC::VM::throwException((JSC::VM *)v4, this, v36);
                v35 = v47;
              }
              v47 = 0;
              if (v35)
              {
                if (*(_DWORD *)v35 == 2)
                  WTF::StringImpl::destroy(v35, v34);
                else
                  *(_DWORD *)v35 -= 2;
              }
            }
            return 0;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_rect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  float v24;
  float v25;
  float v26;
  float v27;
  JSValue v29;
  double v30;
  double v31;
  double v32;
  double v33;
  JSC::VM *v34;
  unint64_t v35;
  float v36;
  float v37;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v34 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "PaintRenderingContext2D", "rect");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "PaintRenderingContext2D", "rect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v29);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v35 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
      v14 = v30;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v35 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
        v17 = v31;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v35 = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
          v20 = v32;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v35 = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
            v23 = v33;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)(v12 + 40) + 16))(v12 + 40))
            {
              v24 = v14;
              if ((LODWORD(v24) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
              {
                v25 = v17;
                if ((LODWORD(v25) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                {
                  v26 = v20;
                  if ((LODWORD(v26) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                  {
                    v27 = v23;
                    if ((LODWORD(v27) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                    {
                      if (v26 == 0.0 && v27 == 0.0)
                      {
                        *(float *)&v35 = v14;
                        *((float *)&v35 + 1) = v17;
                        WebCore::Path::moveTo((WebCore::Path *)(v12 + 48), (const WebCore::FloatPoint *)&v35);
                      }
                      else
                      {
                        *(float *)&v35 = v14;
                        *((float *)&v35 + 1) = v17;
                        v36 = v20;
                        v37 = v23;
                        WebCore::Path::addRect((WebCore::Path *)(v12 + 48), (const WebCore::FloatRect *)&v35);
                      }
                    }
                  }
                }
              }
            }
            return 10;
          }
        }
      }
    }
  }
}

_BYTE *WebCore::jsPaintRenderingContext2DPrototypeFunction_roundRect(WebCore *this, JSC::JSGlobalObject *a2, JSValue a3, WebCore::JSPaintRenderingContext2D *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  int hasIteratorMethod;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  double v17;
  WTF::StringImpl *v18;
  JSC::VM *v19;
  double v20;
  WTF::StringImpl *v21;
  JSC::VM *v22;
  double v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  double v26;
  uint64_t v27;
  JSC::VM *v28;
  WTF::StringImpl *v29;
  float v30;
  float v31;
  float v32;
  float v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  JSValue v37;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  int v42;
  char hasExceptionsAfterHandlingTraps;
  void *v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  JSValue v48;
  WTF::StringImpl *v49;
  double v50;
  double v51;
  double v52;
  double v53;
  JSC::VM *v54;
  uint64_t v55[2];
  int v56;
  JSC::VM *v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  char v61;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v54 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v54, "PaintRenderingContext2D", "roundRect");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSPaintRenderingContext2D::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)&v54, "PaintRenderingContext2D", "roundRect");
  if ((unint64_t)(*((int *)a2 + 8) - 6) > 0xFFFFFFFFFFFFFFFALL)
  {
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v37);
  }
  if ((*((_QWORD *)a2 + 10) & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    hasIteratorMethod = JSC::hasIteratorMethod(this, *((JSC::JSGlobalObject **)a2 + 10), a3);
    if (*((_DWORD *)v5 + 20))
    {
      v42 = hasIteratorMethod;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((hasExceptionsAfterHandlingTraps & 1) == 0 && ((v42 ^ 1) & 1) == 0)
        goto LABEL_16;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        return 0;
    }
    else if (hasIteratorMethod)
    {
LABEL_16:
      v14 = *(_QWORD *)(v6 + 24);
      v15 = *((_QWORD *)this + 7);
      v16 = (WTF::StringImpl *)*((_QWORD *)a2 + 6);
      v59 = v16;
      if ((unint64_t)v16 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v16;
      }
      else if ((unint64_t)v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v59, this);
        v17 = v50;
      }
      else
      {
        *(_QWORD *)&v17 = (char *)v16 - 0x2000000000000;
      }
      if (*(_DWORD *)(v15 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v15))
        return 0;
      v18 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
      v59 = v18;
      v19 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((unint64_t)v18 >= 0xFFFE000000000000)
      {
        v20 = (double)(int)v18;
      }
      else if ((unint64_t)v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v59, this);
        v20 = v51;
      }
      else
      {
        *(_QWORD *)&v20 = (char *)v18 - 0x2000000000000;
      }
      if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        return 0;
      v21 = (WTF::StringImpl *)*((_QWORD *)a2 + 8);
      v59 = v21;
      v22 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((unint64_t)v21 >= 0xFFFE000000000000)
      {
        v23 = (double)(int)v21;
      }
      else if ((unint64_t)v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v59, this);
        v23 = v52;
      }
      else
      {
        *(_QWORD *)&v23 = (char *)v21 - 0x2000000000000;
      }
      if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
        return 0;
      v24 = (WTF::StringImpl *)*((_QWORD *)a2 + 9);
      v59 = v24;
      v25 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((unint64_t)v24 >= 0xFFFE000000000000)
      {
        v26 = (double)(int)v24;
      }
      else if ((unint64_t)v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v59, this);
        v26 = v53;
      }
      else
      {
        *(_QWORD *)&v26 = (char *)v24 - 0x2000000000000;
      }
      if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
        return 0;
      v27 = *((_QWORD *)a2 + 10);
      v28 = (JSC::VM *)*((_QWORD *)this + 7);
      v57 = v28;
      if ((v27 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v27 + 5) <= 0x16u)
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        JSC::throwTypeError();
        v41 = v59;
        v59 = 0;
        if (v41)
        {
          if (*(_DWORD *)v41 == 2)
            WTF::StringImpl::destroy(v41, v40);
          else
            *(_DWORD *)v41 -= 2;
        }
        v35 = 0;
        v36 = 1;
        v56 = 1;
        goto LABEL_47;
      }
      v59 = 0;
      v60 = 0;
      v55[0] = (uint64_t)&v59;
      JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDictionary<WebCore::DOMPointInit>>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<std::variant<double,WebCore::DOMPointInit>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(this, v27, v55);
      if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
      {
        v45 = v59;
        v56 = 1;
        if (v59)
        {
          v59 = 0;
          LODWORD(v60) = 0;
          WTF::fastFree(v45, v44);
        }
        v35 = 0;
        v36 = 1;
        goto LABEL_47;
      }
      v29 = v59;
      v56 = 0;
      v30 = v17;
      v31 = v20;
      v32 = v23;
      v33 = v26;
      v55[0] = 0;
      v55[1] = 0;
      WebCore::CanvasPath::roundRect((WTF *)(v14 + 40), (uint64_t)v59, HIDWORD(v60), &v59, v30, v31, v32, v33);
      if (v29)
        WTF::fastFree(v29, v34);
      if (!v61)
      {
        v35 = 10;
LABEL_39:
        v36 = 0;
LABEL_47:
        ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32CA028[v36])(&v59, v55);
        return (_BYTE *)v35;
      }
      v46 = (WTF::StringImpl *)v59;
      LOBYTE(v57) = (_BYTE)v59;
      v47 = v60;
      v60 = 0;
      v58 = v47;
      if (!*(_QWORD *)(v15 + 16))
      {
        v48.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v59, (JSC::JSGlobalObject *)&v58);
        JSC::VM::throwException((JSC::VM *)v15, this, v48);
        v47 = v58;
      }
      v58 = 0;
      if (v47)
      {
        if (*(_DWORD *)v47 == 2)
          WTF::StringImpl::destroy(v47, v46);
        else
          *(_DWORD *)v47 -= 2;
      }
      if (v61)
      {
        v49 = v60;
        v60 = 0;
        if (v49)
        {
          if (*(_DWORD *)v49 != 2)
          {
            v35 = 0;
            *(_DWORD *)v49 -= 2;
            goto LABEL_39;
          }
          WTF::StringImpl::destroy(v49, v46);
        }
      }
      v35 = 0;
      goto LABEL_39;
    }
  }
  return (_BYTE *)WebCore::jsPaintRenderingContext2DPrototypeFunction_roundRect2Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_arc(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  int v30;
  uint64_t v31;
  int *v32;
  int v33;
  _BOOL4 v34;
  float v35;
  float v36;
  float v37;
  unsigned int v38;
  unsigned int v39;
  JSValue v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  JSValue v44;
  double v45;
  JSC::VM *v46;
  double v47;
  JSC::VM *v48;
  double v49;
  JSC::VM *v50;
  double v51;
  JSC::VM *v52;
  double v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  WTF::StringImpl *v57;
  int v58[2];
  WTF::StringImpl *v59;
  char v60;

  v4 = *((_QWORD *)this + 7);
  v55 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v55, "PaintRenderingContext2D", "arc");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v55, "PaintRenderingContext2D", "arc");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v41.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException((JSC::VM *)v4, this, v41);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v58 = v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v14 = v45;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    return 0;
  v15 = *((_QWORD *)a2 + 7);
  *(_QWORD *)v58 = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v46 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v16 = v46;
    v17 = v47;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    return 0;
  v18 = *((_QWORD *)a2 + 8);
  *(_QWORD *)v58 = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v48 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v19 = v48;
    v20 = v49;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
    return 0;
  v21 = *((_QWORD *)a2 + 9);
  *(_QWORD *)v58 = v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v50 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v22 = v50;
    v23 = v51;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
    return 0;
  v24 = *((_QWORD *)a2 + 10);
  *(_QWORD *)v58 = v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v52 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v25 = v52;
    v26 = v53;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 7) >= 0xFFFFFFFFFFFFFFFALL)
  {
    v28 = (JSC::VM *)*((_QWORD *)this + 7);
    v27 = 10;
    goto LABEL_44;
  }
  v27 = *((_QWORD *)a2 + 11);
  v28 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v27 >= 0xFFFE000000000000)
  {
    v54 = (_DWORD)v27 == 0;
    goto LABEL_84;
  }
  *(_QWORD *)&v29 = v27 - 0x2000000000000;
  if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v27 & 0xFFFE000000000002) == 0)
    {
      v30 = *(unsigned __int8 *)(v27 + 5);
      if (v30 == 3)
      {
        v33 = *(_DWORD *)(v27 + 8);
LABEL_83:
        v54 = v33 == 0;
        goto LABEL_84;
      }
      if (v30 == 2)
      {
        v31 = *(_QWORD *)(v27 + 8);
        if ((v31 & 1) != 0)
          v32 = (int *)(v27 + 16);
        else
          v32 = (int *)(v31 + 4);
        v33 = *v32;
        goto LABEL_83;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v54 = *(_QWORD *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_84:
        v34 = !v54;
        goto LABEL_45;
      }
      goto LABEL_88;
    }
LABEL_44:
    v34 = v27 == 7;
    goto LABEL_45;
  }
  if (v29 <= 0.0)
  {
    v34 = v29 < 0.0;
    goto LABEL_45;
  }
LABEL_88:
  v34 = 1;
LABEL_45:
  if (!*((_DWORD *)v28 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) == 0)
  {
    v35 = v26;
    v36 = v23;
    v37 = v20;
    *(float *)&v38 = v17;
    *(float *)&v39 = v14;
    WebCore::CanvasPath::arc((WebCore::CanvasPath *)(v12 + 40), v39, v38, v37, v36, v35, v34, v58);
    if (!v60)
      return 10;
    v42 = (WTF::StringImpl *)LOBYTE(v58[0]);
    v56 = v58[0];
    v43 = v59;
    v57 = v59;
    if (!*(_QWORD *)(v4 + 16))
    {
      v44.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v58[0]), (JSC::JSGlobalObject *)&v57);
      JSC::VM::throwException((JSC::VM *)v4, this, v44);
      v43 = v57;
    }
    v57 = 0;
    if (v43)
    {
      if (*(_DWORD *)v43 == 2)
        WTF::StringImpl::destroy(v43, v42);
      else
        *(_DWORD *)v43 -= 2;
    }
  }
  return 0;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_ellipse(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  unint64_t v30;
  JSC::VM *v31;
  double v32;
  unint64_t v33;
  JSC::VM *v34;
  double v35;
  int v36;
  uint64_t v37;
  int *v38;
  int v39;
  _BOOL4 v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t result;
  JSValue v49;
  uint64_t v50;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  char v64;
  WTF::StringImpl *v65;
  WTF::StringImpl *v66;
  JSValue v67;
  WTF::StringImpl *v68;
  uint64_t v69;
  double v70;
  JSC::VM *v71;
  uint64_t v72;
  double v73;
  JSC::VM *v74;
  uint64_t v75;
  double v76;
  JSC::VM *v77;
  uint64_t v78;
  double v79;
  JSC::VM *v80;
  uint64_t v81;
  double v82;
  uint64_t v83;
  double v84;
  uint64_t v85;
  double v86;
  BOOL v87;
  uint64_t v88;
  JSC::VM *v89;
  JSC::VM *v90;
  JSC::VM *v91;
  JSC::VM *v92;
  char v93;
  WTF::StringImpl *v94;
  int v95[2];
  WTF::StringImpl *v96;
  char v97;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v92 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v92, "PaintRenderingContext2D", "ellipse");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v92, "PaintRenderingContext2D", "ellipse");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 6)
  {
    v49.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v49);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v95 = v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v69 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v69;
    v14 = v70;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20))
  {
    v50 = v12;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v12 = v50;
    if (hasExceptionsAfterHandlingTraps)
      return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  *(_QWORD *)v95 = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v71 = (JSC::VM *)*((_QWORD *)this + 7);
    v72 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v72;
    v16 = v71;
    v17 = v73;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20))
  {
    v52 = v12;
    v53 = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
    v12 = v52;
    if (v53)
      return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  *(_QWORD *)v95 = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v74 = (JSC::VM *)*((_QWORD *)this + 7);
    v75 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v75;
    v19 = v74;
    v20 = v76;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20))
  {
    v54 = v12;
    v55 = JSC::VM::hasExceptionsAfterHandlingTraps(v19);
    v12 = v54;
    if (v55)
      return 0;
  }
  v21 = *((_QWORD *)a2 + 9);
  *(_QWORD *)v95 = v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v77 = (JSC::VM *)*((_QWORD *)this + 7);
    v78 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v78;
    v22 = v77;
    v23 = v79;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20))
  {
    v56 = v12;
    v57 = JSC::VM::hasExceptionsAfterHandlingTraps(v22);
    v12 = v56;
    if (v57)
      return 0;
  }
  v24 = *((_QWORD *)a2 + 10);
  *(_QWORD *)v95 = v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v80 = (JSC::VM *)*((_QWORD *)this + 7);
    v81 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v81;
    v25 = v80;
    v26 = v82;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20))
  {
    v58 = v12;
    v59 = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
    v12 = v58;
    if (v59)
      return 0;
  }
  v27 = *((_QWORD *)a2 + 11);
  *(_QWORD *)v95 = v27;
  v28 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v27 >= 0xFFFE000000000000)
  {
    v29 = (double)(int)v27;
  }
  else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v91 = (JSC::VM *)*((_QWORD *)this + 7);
    v83 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v83;
    v28 = v91;
    v29 = v84;
  }
  else
  {
    *(_QWORD *)&v29 = v27 - 0x2000000000000;
  }
  if (*((_DWORD *)v28 + 20))
  {
    v60 = v12;
    v61 = JSC::VM::hasExceptionsAfterHandlingTraps(v28);
    v12 = v60;
    if (v61)
      return 0;
  }
  v90 = v4;
  v30 = *((_QWORD *)a2 + 12);
  *(_QWORD *)v95 = v30;
  v31 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v30 >= 0xFFFE000000000000)
  {
    v32 = (double)(int)v30;
  }
  else if (v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v89 = (JSC::VM *)*((_QWORD *)this + 7);
    v85 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v85;
    v31 = v89;
    v32 = v86;
  }
  else
  {
    *(_QWORD *)&v32 = v30 - 0x2000000000000;
  }
  if (*((_DWORD *)v31 + 20))
  {
    v62 = v12;
    v63 = JSC::VM::hasExceptionsAfterHandlingTraps(v31);
    v12 = v62;
    if (v63)
      return 0;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 9) >= 0xFFFFFFFFFFFFFFF8)
  {
    v34 = (JSC::VM *)*((_QWORD *)this + 7);
    v33 = 10;
    goto LABEL_52;
  }
  v33 = *((_QWORD *)a2 + 13);
  v34 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v33 >= 0xFFFE000000000000)
  {
    v40 = v33 != 0;
    goto LABEL_53;
  }
  *(_QWORD *)&v35 = v33 - 0x2000000000000;
  if (v33 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    v40 = v35 > 0.0 || v35 < 0.0;
    goto LABEL_53;
  }
  if ((v33 & 0xFFFE000000000002) != 0)
  {
LABEL_52:
    v40 = v33 == 7;
    goto LABEL_53;
  }
  v36 = *(unsigned __int8 *)(v33 + 5);
  if (v36 == 3)
  {
    v39 = *(_DWORD *)(v33 + 8);
LABEL_105:
    v87 = v39 == 0;
    goto LABEL_106;
  }
  if (v36 == 2)
  {
    v37 = *(_QWORD *)(v33 + 8);
    if ((v37 & 1) != 0)
      v38 = (int *)(v33 + 16);
    else
      v38 = (int *)(v37 + 4);
    v39 = *v38;
    goto LABEL_105;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0xA) & 1) != 0)
  {
    v87 = *(_QWORD *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_106:
    v40 = !v87;
    goto LABEL_53;
  }
  v40 = 1;
LABEL_53:
  if (!*((_DWORD *)v34 + 20)
    || (v88 = v12, v64 = JSC::VM::hasExceptionsAfterHandlingTraps(v34), v12 = v88, (v64 & 1) == 0))
  {
    v41 = v32;
    v42 = v29;
    v43 = v26;
    v44 = v23;
    v45 = v20;
    *(float *)&v46 = v17;
    *(float *)&v47 = v14;
    WebCore::CanvasPath::ellipse((WebCore::CanvasPath *)(v12 + 40), v47, v46, v45, v44, v43, v42, v41, v40, (uint64_t)v95);
    if (!v97)
      return 10;
    v65 = (WTF::StringImpl *)LOBYTE(v95[0]);
    v93 = v95[0];
    v66 = v96;
    v96 = 0;
    v94 = v66;
    if (!*((_QWORD *)v90 + 2))
    {
      v67.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v95[0]), (JSC::JSGlobalObject *)&v94);
      JSC::VM::throwException(v90, this, v67);
      v66 = v94;
    }
    v94 = 0;
    if (v66)
    {
      if (*(_DWORD *)v66 == 2)
        WTF::StringImpl::destroy(v66, v65);
      else
        *(_DWORD *)v66 -= 2;
    }
    if (v97)
    {
      v68 = v96;
      v96 = 0;
      if (v68)
      {
        if (*(_DWORD *)v68 != 2)
        {
          result = 0;
          *(_DWORD *)v68 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v68, v65);
      }
    }
  }
  return 0;
}

_BYTE *WebCore::jsPaintRenderingContext2DPrototypeFunction_setLineDash(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::CanvasRenderingContext2DBase *v11;
  __n128 v12;
  int v13;
  uint64_t v14;
  void *v15;
  WTF *v16;
  uint64_t v17;
  JSValue v20;
  JSC::VM *v21;
  WTF *v22;
  uint64_t v23;
  int v24;
  WTF *v25;
  uint64_t v26;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "PaintRenderingContext2D", "setLineDash");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPaintRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "PaintRenderingContext2D", "setLineDash");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v20);
  }
  v11 = *(WebCore::CanvasRenderingContext2DBase **)(v5 + 24);
  WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert(*((_QWORD *)a2 + 6), this, (uint64_t)&v22);
  v13 = v24;
  if (v24)
  {
    v17 = 0;
  }
  else
  {
    v25 = v22;
    v14 = v23;
    v22 = 0;
    v23 = 0;
    v26 = v14;
    v12.n128_f64[0] = WebCore::CanvasRenderingContext2DBase::setLineDash(v11, (unsigned int *)&v25);
    v16 = v25;
    if (v25)
    {
      v25 = 0;
      LODWORD(v26) = 0;
      WTF::fastFree(v16, v15);
    }
    v13 = v24;
    v17 = 10;
  }
  if (v13 != -1)
    ((void (*)(WTF **, WTF **, __n128))off_1E32CA038[v13])(&v25, &v22, v12);
  return (_BYTE *)v17;
}

_BYTE *WebCore::jsPaintRenderingContext2DPrototypeFunction_getLineDash(_BYTE *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v3 = *((_QWORD *)a2 + 5);
  v12 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v12, "PaintRenderingContext2D", "getLineDash");
  v4 = 16 * (*(_DWORD *)v3 & 0xFFFFFFFE);
  v5 = *(unsigned int *)(v4 + 0x4C);
  v6 = *(_DWORD *)(v4 + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPaintRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v12, "PaintRenderingContext2D", "getLineDash");
  v10 = *(_QWORD *)(v3 + 24);
  v11 = *(_DWORD *)(v10 + 132);
  if (v11)
    return (_BYTE *)WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert<double,0ul>((uint64_t)this, *(_QWORD *)(v4 + 40), *(_QWORD *)(v10 + 120) + 560 * v11 - 392);
  __break(0xC471u);
  return this;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_clearRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  float *v13;
  unint64_t v14;
  double v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  unint64_t v19;
  JSC::VM *v20;
  double v21;
  unint64_t v22;
  JSC::VM *v23;
  double v24;
  JSValue v26;
  JSC::VM *v27;
  unint64_t v28;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v27, "PaintRenderingContext2D", "clearRect");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSPaintRenderingContext2D::s_info && v10 != 0);
  }
  if (!v9)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v27, "PaintRenderingContext2D", "clearRect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v5, this, v26);
  }
  else
  {
    v13 = *(float **)(v6 + 24);
    v14 = *((_QWORD *)a2 + 6);
    v28 = v14;
    if (v14 >= 0xFFFE000000000000)
    {
      v15 = (double)(int)v14;
    }
    else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v28, this);
      v15 = a4.n128_f64[0];
    }
    else
    {
      *(_QWORD *)&v15 = v14 - 0x2000000000000;
    }
    if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    {
      return 0;
    }
    else
    {
      v16 = *((_QWORD *)a2 + 7);
      v28 = v16;
      v17 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v16 >= 0xFFFE000000000000)
      {
        v18 = (double)(int)v16;
      }
      else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v28, this);
        v18 = a4.n128_f64[0];
      }
      else
      {
        *(_QWORD *)&v18 = v16 - 0x2000000000000;
      }
      if (*((_DWORD *)v17 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v17))
      {
        return 0;
      }
      else
      {
        v19 = *((_QWORD *)a2 + 8);
        v28 = v19;
        v20 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v19 >= 0xFFFE000000000000)
        {
          v21 = (double)(int)v19;
        }
        else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v28, this);
          v21 = a4.n128_f64[0];
        }
        else
        {
          *(_QWORD *)&v21 = v19 - 0x2000000000000;
        }
        if (*((_DWORD *)v20 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v20))
        {
          return 0;
        }
        else
        {
          v22 = *((_QWORD *)a2 + 9);
          v28 = v22;
          v23 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v22 >= 0xFFFE000000000000)
          {
            v24 = (double)(int)v22;
          }
          else if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v28, this);
            v24 = a4.n128_f64[0];
          }
          else
          {
            *(_QWORD *)&v24 = v22 - 0x2000000000000;
          }
          if (*((_DWORD *)v23 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v23))
          {
            return 0;
          }
          else
          {
            a4.n128_f64[0] = v15;
            WebCore::CanvasRenderingContext2DBase::clearRect(v13, a4, v18, v21, v24);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_fillRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, double *a5)
{
  JSC::VM *v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  char **v11;
  BOOL v12;
  uint64_t **v14;
  unint64_t v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  JSValue v27;
  double v28;
  double v29;
  double v30;
  double v31;
  JSC::VM *v32;
  unint64_t v33;

  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v32 = v6;
  v7 = *((_QWORD *)a2 + 5);
  if ((v7 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "PaintRenderingContext2D", "fillRect");
  v9 = *(unsigned int *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSPaintRenderingContext2D::s_info && v11 != 0);
  }
  if (!v10)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "PaintRenderingContext2D", "fillRect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v6, this, v27);
  }
  else
  {
    v14 = *(uint64_t ***)(v7 + 24);
    v15 = *((_QWORD *)a2 + 6);
    v33 = v15;
    if (v15 >= 0xFFFE000000000000)
    {
      v16 = (double)(int)v15;
    }
    else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, this);
      v16 = v28;
    }
    else
    {
      *(_QWORD *)&v16 = v15 - 0x2000000000000;
    }
    if (*((_DWORD *)v6 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v6))
    {
      return 0;
    }
    else
    {
      v17 = *((_QWORD *)a2 + 7);
      v33 = v17;
      v18 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v17 >= 0xFFFE000000000000)
      {
        v19 = (double)(int)v17;
      }
      else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, this);
        v19 = v29;
      }
      else
      {
        *(_QWORD *)&v19 = v17 - 0x2000000000000;
      }
      if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
      {
        return 0;
      }
      else
      {
        v20 = *((_QWORD *)a2 + 8);
        v33 = v20;
        v21 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v20 >= 0xFFFE000000000000)
        {
          v22 = (double)(int)v20;
        }
        else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, this);
          v22 = v30;
        }
        else
        {
          *(_QWORD *)&v22 = v20 - 0x2000000000000;
        }
        if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
        {
          return 0;
        }
        else
        {
          v23 = *((_QWORD *)a2 + 9);
          v33 = v23;
          v24 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v23 >= 0xFFFE000000000000)
          {
            v25 = (double)(int)v23;
          }
          else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, this);
            v25 = v31;
          }
          else
          {
            *(_QWORD *)&v25 = v23 - 0x2000000000000;
          }
          if (*((_DWORD *)v24 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v24))
          {
            return 0;
          }
          else
          {
            WebCore::CanvasRenderingContext2DBase::fillRect(v14, v16, v19, v22, v25, (uint64_t)a2, (uint64_t)a3, a4, a5);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_strokeRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, double *a5)
{
  JSC::VM *v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  char **v11;
  BOOL v12;
  WebCore::CanvasRenderingContext2DBase *v14;
  unint64_t v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  JSValue v27;
  double v28;
  double v29;
  double v30;
  double v31;
  JSC::VM *v32;
  unint64_t v33;

  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v32 = v6;
  v7 = *((_QWORD *)a2 + 5);
  if ((v7 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "PaintRenderingContext2D", "strokeRect");
  v9 = *(unsigned int *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSPaintRenderingContext2D::s_info && v11 != 0);
  }
  if (!v10)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "PaintRenderingContext2D", "strokeRect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v6, this, v27);
  }
  else
  {
    v14 = *(WebCore::CanvasRenderingContext2DBase **)(v7 + 24);
    v15 = *((_QWORD *)a2 + 6);
    v33 = v15;
    if (v15 >= 0xFFFE000000000000)
    {
      v16 = (double)(int)v15;
    }
    else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, this);
      v16 = v28;
    }
    else
    {
      *(_QWORD *)&v16 = v15 - 0x2000000000000;
    }
    if (*((_DWORD *)v6 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v6))
    {
      return 0;
    }
    else
    {
      v17 = *((_QWORD *)a2 + 7);
      v33 = v17;
      v18 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v17 >= 0xFFFE000000000000)
      {
        v19 = (double)(int)v17;
      }
      else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, this);
        v19 = v29;
      }
      else
      {
        *(_QWORD *)&v19 = v17 - 0x2000000000000;
      }
      if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
      {
        return 0;
      }
      else
      {
        v20 = *((_QWORD *)a2 + 8);
        v33 = v20;
        v21 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v20 >= 0xFFFE000000000000)
        {
          v22 = (double)(int)v20;
        }
        else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, this);
          v22 = v30;
        }
        else
        {
          *(_QWORD *)&v22 = v20 - 0x2000000000000;
        }
        if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
        {
          return 0;
        }
        else
        {
          v23 = *((_QWORD *)a2 + 9);
          v33 = v23;
          v24 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v23 >= 0xFFFE000000000000)
          {
            v25 = (double)(int)v23;
          }
          else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, this);
            v25 = v31;
          }
          else
          {
            *(_QWORD *)&v25 = v23 - 0x2000000000000;
          }
          if (*((_DWORD *)v24 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v24))
          {
            return 0;
          }
          else
          {
            WebCore::CanvasRenderingContext2DBase::strokeRect(v14, v16, v19, v22, v25, (uint64_t)a2, (uint64_t)a3, a4, a5);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_save(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "PaintRenderingContext2D", "save");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPaintRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "PaintRenderingContext2D", "save");
  ++*(_DWORD *)(*(_QWORD *)(v3 + 24) + 712);
  return 10;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_restore(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "PaintRenderingContext2D", "restore");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPaintRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "PaintRenderingContext2D", "restore");
  WebCore::CanvasRenderingContext2DBase::restore(*(_QWORD *)(v3 + 24));
  return 10;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_reset(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "PaintRenderingContext2D", "reset");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPaintRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "PaintRenderingContext2D", "reset");
  WebCore::CanvasRenderingContext2DBase::reset(*(WebCore::CanvasRenderingContext2DBase **)(v3 + 24), a2);
  return 10;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_scale(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasRenderingContext2DBase *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  JSValue v19;
  double v20;
  double v21;
  JSC::VM *v22;
  unint64_t v23;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v22, "PaintRenderingContext2D", "scale");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v22, "PaintRenderingContext2D", "scale");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v19);
  }
  else
  {
    v12 = *(WebCore::CanvasRenderingContext2DBase **)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v23 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v23, this);
      v14 = v20;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v23 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v23, this);
        v17 = v21;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        WebCore::CanvasRenderingContext2DBase::scale(v12, v14, v17);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_rotate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::CanvasRenderingContext2DBase *v11;
  unint64_t v12;
  double v13;
  JSValue v15;
  double v16;
  JSC::VM *v17;
  unint64_t v18;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v17 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "PaintRenderingContext2D", "rotate");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPaintRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "PaintRenderingContext2D", "rotate");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v15);
  }
  else
  {
    v11 = *(WebCore::CanvasRenderingContext2DBase **)(v5 + 24);
    v12 = *((_QWORD *)a2 + 6);
    v18 = v12;
    if (v12 >= 0xFFFE000000000000)
    {
      v13 = (double)(int)v12;
    }
    else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v18, this);
      v13 = v16;
    }
    else
    {
      *(_QWORD *)&v13 = v12 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      WebCore::CanvasRenderingContext2DBase::rotate(v11, v13);
      return 10;
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_translate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasRenderingContext2DBase *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  JSValue v19;
  double v20;
  double v21;
  JSC::VM *v22;
  unint64_t v23;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v22, "PaintRenderingContext2D", "translate");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v22, "PaintRenderingContext2D", "translate");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v19);
  }
  else
  {
    v12 = *(WebCore::CanvasRenderingContext2DBase **)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v23 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v23, this);
      v14 = v20;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v23 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v23, this);
        v17 = v21;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        WebCore::CanvasRenderingContext2DBase::translate(v12, v14, v17);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_transform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasRenderingContext2DBase *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  JSValue v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  JSC::VM *v38;
  unint64_t v39;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v38 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "PaintRenderingContext2D", "transform");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPaintRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "PaintRenderingContext2D", "transform");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v31);
  }
  else
  {
    v12 = *(WebCore::CanvasRenderingContext2DBase **)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v39 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v39, this);
      v14 = v32;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v39 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v39, this);
        v17 = v33;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v39 = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v39, this);
          v20 = v34;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v39 = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v39, this);
            v23 = v35;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = *((_QWORD *)a2 + 10);
            v39 = v24;
            v25 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v24 >= 0xFFFE000000000000)
            {
              v26 = (double)(int)v24;
            }
            else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v39, this);
              v26 = v36;
            }
            else
            {
              *(_QWORD *)&v26 = v24 - 0x2000000000000;
            }
            if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            {
              return 0;
            }
            else
            {
              v27 = *((_QWORD *)a2 + 11);
              v39 = v27;
              v28 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v27 >= 0xFFFE000000000000)
              {
                v29 = (double)(int)v27;
              }
              else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v39, this);
                v29 = v37;
              }
              else
              {
                *(_QWORD *)&v29 = v27 - 0x2000000000000;
              }
              if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
              {
                return 0;
              }
              else
              {
                WebCore::CanvasRenderingContext2DBase::transform(v12, v14, v17, v20, v23, v26, v29);
                return 10;
              }
            }
          }
        }
      }
    }
  }
}

_BYTE *WebCore::jsPaintRenderingContext2DPrototypeFunction_getTransform(_BYTE *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unsigned int v12;
  JSC::VM *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  bmalloc::api *v24;
  uint64_t v25;
  bmalloc::api *v26;

  v3 = (int)this;
  v4 = *((_QWORD *)a2 + 5);
  v25 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "PaintRenderingContext2D", "getTransform");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPaintRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "PaintRenderingContext2D", "getTransform");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(_DWORD *)(v11 + 132);
  if (v12)
  {
    v13 = *(JSC::VM **)(v5 + 40);
    v14 = (_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 560);
    v15 = v14[14];
    v16 = v14[15];
    v17 = v14[16];
    v18 = v14[17];
    v19 = v14[18];
    v20 = v14[19];
    v21 = bmalloc::api::isoAllocate();
    *(_QWORD *)v21 = 0;
    *(_DWORD *)(v21 + 8) = 1;
    *(_QWORD *)(v21 + 16) = v15;
    *(_QWORD *)(v21 + 24) = v16;
    *(_QWORD *)(v21 + 32) = 0;
    *(_QWORD *)(v21 + 40) = 0;
    *(_QWORD *)(v21 + 48) = v17;
    *(_QWORD *)(v21 + 56) = v18;
    *(_QWORD *)(v21 + 64) = 0;
    *(_QWORD *)(v21 + 72) = 0;
    *(_OWORD *)(v21 + 80) = constinit_13;
    *(_OWORD *)(v21 + 96) = unk_1969F8D70;
    *(_QWORD *)(v21 + 112) = v19;
    *(_QWORD *)(v21 + 120) = v20;
    *(_OWORD *)(v21 + 128) = xmmword_1968A14C0;
    *(_BYTE *)(v21 + 144) = 1;
    v26 = (bmalloc::api *)v21;
    v23 = WebCore::toJSNewlyCreated(v3, v13, (WebCore::JSDOMGlobalObject *)&v26);
    v24 = v26;
    v26 = 0;
    if (v24)
    {
      if (*((_DWORD *)v24 + 2) == 1)
      {
        if (*(_QWORD *)v24)
        {
          *(_QWORD *)(*(_QWORD *)v24 + 8) = 3;
          *(_QWORD *)v24 = 0;
        }
        bmalloc::api::isoDeallocate(v24, v22);
      }
      else
      {
        --*((_DWORD *)v24 + 2);
      }
    }
    return (_BYTE *)v23;
  }
  __break(0xC471u);
  return this;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_setTransform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPaintRenderingContext2D *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  unint64_t v13;
  WebCore::CanvasRenderingContext2DBase *v15;
  unint64_t v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  unint64_t v30;
  JSC::VM *v31;
  double v32;
  JSC::VM *v33;
  double v34;
  JSC::VM *v35;
  double v36;
  JSC::VM *v37;
  double v38;
  JSC::VM *v39;
  double v40;
  JSC::VM *v41;
  double v42;
  double v43;
  _QWORD v44[2];
  unint64_t v45;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v44[0] = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v44, "PaintRenderingContext2D", "setTransform");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSPaintRenderingContext2D::s_info && v10 != 0);
  }
  if (!v9)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v44, "PaintRenderingContext2D", "setTransform");
  v44[1] = v5;
  v13 = *((int *)a2 + 8) - 1;
  if (v13 >= 6)
    v13 = 6;
  if (v13 == 6)
  {
    v15 = *(WebCore::CanvasRenderingContext2DBase **)(v6 + 24);
    v16 = *((_QWORD *)a2 + 6);
    v45 = v16;
    if (v16 >= 0xFFFE000000000000)
    {
      v17 = (double)(int)v16;
    }
    else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v33 = v5;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
      v5 = v33;
      v17 = v34;
    }
    else
    {
      *(_QWORD *)&v17 = v16 - 0x2000000000000;
    }
    if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    {
      return 0;
    }
    else
    {
      v18 = *((_QWORD *)a2 + 7);
      v45 = v18;
      v19 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v18 >= 0xFFFE000000000000)
      {
        v20 = (double)(int)v18;
      }
      else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v35 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
        v19 = v35;
        v20 = v36;
      }
      else
      {
        *(_QWORD *)&v20 = v18 - 0x2000000000000;
      }
      if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
      {
        return 0;
      }
      else
      {
        v21 = *((_QWORD *)a2 + 8);
        v45 = v21;
        v22 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v21 >= 0xFFFE000000000000)
        {
          v23 = (double)(int)v21;
        }
        else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v37 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
          v22 = v37;
          v23 = v38;
        }
        else
        {
          *(_QWORD *)&v23 = v21 - 0x2000000000000;
        }
        if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
        {
          return 0;
        }
        else
        {
          v24 = *((_QWORD *)a2 + 9);
          v45 = v24;
          v25 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v24 >= 0xFFFE000000000000)
          {
            v26 = (double)(int)v24;
          }
          else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            v39 = (JSC::VM *)*((_QWORD *)this + 7);
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
            v25 = v39;
            v26 = v40;
          }
          else
          {
            *(_QWORD *)&v26 = v24 - 0x2000000000000;
          }
          if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
          {
            return 0;
          }
          else
          {
            v27 = *((_QWORD *)a2 + 10);
            v45 = v27;
            v28 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v27 >= 0xFFFE000000000000)
            {
              v29 = (double)(int)v27;
            }
            else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              v41 = (JSC::VM *)*((_QWORD *)this + 7);
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
              v28 = v41;
              v29 = v42;
            }
            else
            {
              *(_QWORD *)&v29 = v27 - 0x2000000000000;
            }
            if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
            {
              return 0;
            }
            else
            {
              v30 = *((_QWORD *)a2 + 11);
              v45 = v30;
              v31 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v30 >= 0xFFFE000000000000)
              {
                v32 = (double)(int)v30;
              }
              else if (v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
                v32 = v43;
              }
              else
              {
                *(_QWORD *)&v32 = v30 - 0x2000000000000;
              }
              if (*((_DWORD *)v31 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v31))
              {
                return 0;
              }
              else
              {
                if ((*(uint64_t (**)(WebCore::CanvasRenderingContext2DBase *))(*(_QWORD *)v15 + 240))(v15)
                  && (*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v29 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v32 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
                {
                  WebCore::CanvasRenderingContext2DBase::resetTransform(v15);
                  WebCore::CanvasRenderingContext2DBase::transform(v15, v17, v20, v23, v26, v29, v32);
                }
                return 10;
              }
            }
          }
        }
      }
    }
  }
  else if (v13 > 1)
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::jsPaintRenderingContext2DPrototypeFunction_setTransform2Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
  }
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_resetTransform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "PaintRenderingContext2D", "resetTransform");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPaintRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPaintRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "PaintRenderingContext2D", "resetTransform");
  WebCore::CanvasRenderingContext2DBase::resetTransform(*(WebCore::CanvasRenderingContext2DBase **)(v3 + 24));
  return 10;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_fill2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPaintRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  JSC::VM *v10;
  uint64_t v12;
  _BOOL4 v13;
  char **v14;
  BOOL v15;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  JSC::VM *v22;
  uint64_t v23;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v25;

  v9 = *((_QWORD *)a2 + 6);
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v10;
  if ((v9 & 0xFFFE000000000002) != 0)
    goto LABEL_12;
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSPath2D::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSPath2D::s_info && v14 != 0);
  }
  if (!v13 || (v18 = *(_QWORD *)(v9 + 24)) == 0)
  {
LABEL_12:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v25, 0, "path", 5, "PaintRenderingContext2D", 24, a8, "fill", 5, "Path2D", 7);
    return 0;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
  {
    LODWORD(v20) = 0;
    goto LABEL_20;
  }
  v19 = *((_QWORD *)a2 + 7);
  if (v19 == 10)
  {
    LODWORD(v20) = 0;
LABEL_20:
    WebCore::CanvasRenderingContext2DBase::fillInternal((uint64_t)a3, (WebCore::Path *)(v18 + 8), v20);
    return 10;
  }
  v25 = v10;
  v20 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v19);
  if (!*((_DWORD *)v10 + 20)
    || (v22 = v10,
        v23 = v20,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v22),
        v20 = v23,
        (hasExceptionsAfterHandlingTraps & 1) == 0))
  {
    if ((v20 & 0xFF00000000) != 0)
      goto LABEL_20;
    WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v25, 1, "fillRule", 9, "PaintRenderingContext2D", 24, v21, "fill", 5, "\"nonzero\", \"evenodd\"", 21);
  }
  return 0;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_clip2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPaintRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  JSC::VM *v10;
  uint64_t v12;
  _BOOL4 v13;
  char **v14;
  BOOL v15;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  JSC::VM *v22;
  uint64_t v23;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v25;

  v9 = *((_QWORD *)a2 + 6);
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v10;
  if ((v9 & 0xFFFE000000000002) != 0)
    goto LABEL_12;
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSPath2D::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSPath2D::s_info && v14 != 0);
  }
  if (!v13 || (v18 = *(_QWORD *)(v9 + 24)) == 0)
  {
LABEL_12:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v25, 0, "path", 5, "PaintRenderingContext2D", 24, a8, "clip", 5, "Path2D", 7);
    return 0;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
  {
    LODWORD(v20) = 0;
    goto LABEL_20;
  }
  v19 = *((_QWORD *)a2 + 7);
  if (v19 == 10)
  {
    LODWORD(v20) = 0;
LABEL_20:
    WebCore::CanvasRenderingContext2DBase::clipInternal((unsigned int *)a3, v18 + 8, v20);
    return 10;
  }
  v25 = v10;
  v20 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v19);
  if (!*((_DWORD *)v10 + 20)
    || (v22 = v10,
        v23 = v20,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v22),
        v20 = v23,
        (hasExceptionsAfterHandlingTraps & 1) == 0))
  {
    if ((v20 & 0xFF00000000) != 0)
      goto LABEL_20;
    WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v25, 1, "fillRule", 9, "PaintRenderingContext2D", 24, v21, "clip", 5, "\"nonzero\", \"evenodd\"", 21);
  }
  return 0;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_isPointInPath1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPaintRenderingContext2D *a4)
{
  unint64_t v7;
  JSC::VM *v8;
  double v9;
  unint64_t v10;
  JSC::VM *v11;
  double v12;
  unint64_t v13;
  uint64_t v14;
  JSC::VM *v15;
  uint64_t v16;
  double v18;
  double v19;
  JSC::VM *v20;

  v7 = *((_QWORD *)a2 + 6);
  v20 = (JSC::VM *)v7;
  v8 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v7 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v7;
  }
  else if (v7 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v20, this);
    v9 = v18;
  }
  else
  {
    *(_QWORD *)&v9 = v7 - 0x2000000000000;
  }
  if (*((_DWORD *)v8 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v8))
    return 0;
  v10 = *((_QWORD *)a2 + 7);
  v20 = (JSC::VM *)v10;
  v11 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v10 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)v10;
  }
  else if (v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v20, this);
    v12 = v19;
  }
  else
  {
    *(_QWORD *)&v12 = v10 - 0x2000000000000;
  }
  if (*((_DWORD *)v11 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 4) > 0xFFFFFFFFFFFFFFFCLL)
  {
    LODWORD(v14) = 0;
  }
  else
  {
    v13 = *((_QWORD *)a2 + 8);
    if (v13 == 10)
    {
      LODWORD(v14) = 0;
      goto LABEL_15;
    }
    v20 = (JSC::VM *)*((_QWORD *)this + 7);
    v15 = v20;
    v14 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v13);
    if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
      return 0;
    if ((v14 & 0xFF00000000) == 0)
    {
      WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v20, 2, "fillRule", 9, "PaintRenderingContext2D", 24, v16, "isPointInPath", 14, "\"nonzero\", \"evenodd\"", 21);
      return 0;
    }
  }
LABEL_15:
  if (WebCore::CanvasRenderingContext2DBase::isPointInPathInternal((uint64_t)a3, (uint64_t)a3 + 48, v14, v9, v12))return 7;
  else
    return 6;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_isPointInPath2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPaintRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  JSC::VM *v10;
  uint64_t v13;
  _BOOL4 v14;
  char **v15;
  BOOL v16;
  uint64_t v19;
  unint64_t v20;
  double v21;
  unint64_t v22;
  JSC::VM *v23;
  double v24;
  unint64_t v25;
  uint64_t v26;
  JSC::VM *v27;
  uint64_t v28;
  JSC::VM *v29;
  uint64_t v30;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v32;
  double v33;
  JSC::VM *v34;
  double v35;
  JSC::VM *v36;

  v9 = *((_QWORD *)a2 + 6);
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v10;
  if ((v9 & 0xFFFE000000000002) != 0)
    goto LABEL_12;
  v13 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v14 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v15 = (char **)(16 * v13);
  if ((_DWORD)v13)
    v16 = v15 == &WebCore::JSPath2D::s_info;
  else
    v16 = 1;
  if (!v16)
  {
    do
    {
      v15 = (char **)v15[2];
      v14 = v15 != 0;
    }
    while (v15 != &WebCore::JSPath2D::s_info && v15 != 0);
  }
  if (!v14 || (v19 = *(_QWORD *)(v9 + 24)) == 0)
  {
LABEL_12:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v36, 0, "path", 5, "PaintRenderingContext2D", 24, a8, "isPointInPath", 14, "Path2D", 7);
    return 0;
  }
  v20 = *((_QWORD *)a2 + 7);
  v36 = (JSC::VM *)v20;
  if (v20 >= 0xFFFE000000000000)
  {
    v21 = (double)(int)v20;
  }
  else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v32 = v10;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v36, this);
    v10 = v32;
    v21 = v33;
  }
  else
  {
    *(_QWORD *)&v21 = v20 - 0x2000000000000;
  }
  if (*((_DWORD *)v10 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v10))
    return 0;
  v22 = *((_QWORD *)a2 + 8);
  v36 = (JSC::VM *)v22;
  v23 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v22 >= 0xFFFE000000000000)
  {
    v24 = (double)(int)v22;
  }
  else if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v34 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v36, this);
    v23 = v34;
    v24 = v35;
  }
  else
  {
    *(_QWORD *)&v24 = v22 - 0x2000000000000;
  }
  if (*((_DWORD *)v23 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v23))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 5) > 0xFFFFFFFFFFFFFFFBLL)
  {
    LODWORD(v26) = 0;
  }
  else
  {
    v25 = *((_QWORD *)a2 + 9);
    if (v25 == 10)
    {
      LODWORD(v26) = 0;
      goto LABEL_28;
    }
    v36 = (JSC::VM *)*((_QWORD *)this + 7);
    v27 = v36;
    v26 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v25);
    if (*((_DWORD *)v27 + 20))
    {
      v29 = v27;
      v30 = v26;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v29);
      v26 = v30;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        return 0;
    }
    if ((v26 & 0xFF00000000) == 0)
    {
      WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v36, 3, "fillRule", 9, "PaintRenderingContext2D", 24, v28, "isPointInPath", 14, "\"nonzero\", \"evenodd\"", 21);
      return 0;
    }
  }
LABEL_28:
  if (WebCore::CanvasRenderingContext2DBase::isPointInPathInternal((uint64_t)a3, v19 + 8, v26, v21, v24))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_roundRect2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPaintRenderingContext2D *a4)
{
  uint64_t v7;
  unint64_t v8;
  double v9;
  unint64_t v10;
  JSC::VM *v11;
  double v12;
  unint64_t v13;
  JSC::VM *v14;
  double v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  float v19;
  float v20;
  float v21;
  float v22;
  uint64_t result;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  JSValue v26;
  WTF::StringImpl *v27;
  double v28;
  JSC::VM *v29;
  double v30;
  JSC::VM *v31;
  double v32;
  double v33;
  JSC::VM *v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  char v37;
  WTF::StringImpl *v38[2];
  __int128 v39;
  uint64_t v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  int v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)this + 7);
  v8 = *((_QWORD *)a2 + 6);
  v41 = v8;
  if (v8 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v8;
  }
  else if (v8 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, this);
    v9 = v28;
  }
  else
  {
    *(_QWORD *)&v9 = v8 - 0x2000000000000;
  }
  if (*(_DWORD *)(v7 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7))
    return 0;
  v10 = *((_QWORD *)a2 + 7);
  v41 = v10;
  v11 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v10 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)v10;
  }
  else if (v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v29 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, this);
    v11 = v29;
    v12 = v30;
  }
  else
  {
    *(_QWORD *)&v12 = v10 - 0x2000000000000;
  }
  if (*((_DWORD *)v11 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    return 0;
  v13 = *((_QWORD *)a2 + 8);
  v41 = v13;
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 >= 0xFFFE000000000000)
  {
    v15 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v31 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, this);
    v14 = v31;
    v15 = v32;
  }
  else
  {
    *(_QWORD *)&v15 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
    return 0;
  v16 = *((_QWORD *)a2 + 9);
  v41 = v16;
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v18 = (double)(int)v16;
  }
  else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v34 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, this);
    v17 = v34;
    v18 = v33;
  }
  else
  {
    *(_QWORD *)&v18 = v16 - 0x2000000000000;
  }
  if (*((_DWORD *)v17 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v17))
    return 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDictionary<WebCore::DOMPointInit>>>::convert(this, *((JSC::JSCell **)a2 + 10), (uint64_t)&v41);
  if (!v45)
  {
    v19 = v18;
    v20 = v15;
    v21 = v12;
    v22 = v9;
    *(_OWORD *)v38 = v42;
    v39 = v43;
    v40 = v44;
    WebCore::CanvasPath::roundRect((JSC::CallFrame *)((char *)a3 + 40), (uint64_t)v38, 1uLL, &v35, v22, v21, v20, v19);
    if (!v37)
      return 10;
    v24 = (WTF::StringImpl *)v35;
    LOBYTE(v38[0]) = v35;
    v25 = v36;
    v36 = 0;
    v38[1] = v25;
    if (!*(_QWORD *)(v7 + 16))
    {
      v26.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v35, (JSC::JSGlobalObject *)&v38[1]);
      JSC::VM::throwException((JSC::VM *)v7, this, v26);
      v25 = v38[1];
    }
    v38[1] = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v24);
      else
        *(_DWORD *)v25 -= 2;
    }
    if (v37)
    {
      v27 = v36;
      v36 = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 != 2)
        {
          result = 0;
          *(_DWORD *)v27 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v27, v24);
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsPaintRenderingContext2DPrototypeFunction_setTransform2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPaintRenderingContext2D *a4)
{
  uint64_t v6;
  JSC::VM *v7;
  uint64_t result;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  JSValue v11;
  WTF::StringImpl *v12;
  int v13;
  WTF::StringImpl *v14;
  char v15;
  WTF::StringImpl *v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  int v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  if (*((_DWORD *)a2 + 8) == 1)
    v6 = 10;
  else
    v6 = *((_QWORD *)a2 + 6);
  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  WebCore::convertDictionary<WebCore::DOMMatrix2DInit>((JSC::JSCell *)v6, (uint64_t)this, (uint64_t)v28);
  if (!v41)
  {
    v24 = v37;
    v25 = v38;
    v26 = v39;
    v27 = v40;
    v20 = v33;
    v21 = v34;
    v22 = v35;
    v23 = v36;
    *(_OWORD *)v16 = v29;
    v17 = v30;
    v18 = v31;
    v19 = v32;
    WebCore::CanvasRenderingContext2DBase::setTransform(a3, (uint64_t)v16, (uint64_t)&v13);
    if (!v15)
      return 10;
    v9 = (WTF::StringImpl *)v13;
    LOBYTE(v16[0]) = v13;
    v10 = v14;
    v14 = 0;
    v16[1] = v10;
    if (!*((_QWORD *)v7 + 2))
    {
      v11.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v13, (JSC::JSGlobalObject *)&v16[1]);
      JSC::VM::throwException(v7, this, v11);
      v10 = v16[1];
    }
    v16[1] = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v9);
      else
        *(_DWORD *)v10 -= 2;
    }
    if (v15)
    {
      v12 = v14;
      v14 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 != 2)
        {
          result = 0;
          *(_DWORD *)v12 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v12, v9);
      }
    }
  }
  return 0;
}

_BYTE *WebCore::jsPaintWorkletGlobalScopeInstanceFunction_registerPaint(unint64_t this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WebCore *v4;
  unint64_t v5;
  uint64_t Object;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  JSC::VM *v13;
  uint64_t v14;
  int v15;
  int v16;
  WTF::StringImpl *v17;
  JSC::Structure **v18;
  uint64_t v19;
  uint64_t v20;
  JSC::Structure **v21;
  JSC::Structure *v22;
  WTF::StringImpl *v23;
  JSC::Structure **v24;
  uint64_t v25;
  JSC::Structure **v26;
  JSC::Structure *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char **v32;
  BOOL v33;
  JSC::Structure *v37;
  JSC::Structure *v38;
  JSValue v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  JSValue v42;
  WTF::StringImpl *v43;
  _QWORD *v44;
  WebCore *v45;
  JSC::JSGlobalObject *v46;
  JSC::CallFrame *v47;
  uint64_t v48;
  JSC::Structure **v49;
  int v50;
  WTF::StringImpl *v51;
  int v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  int v55;
  WTF::StringImpl *v56;
  char v57;
  JSC::Structure **v58;

  v4 = (WebCore *)this;
  v48 = *(_QWORD *)(this + 56);
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(v5 + 5) - 51 < 6)
    v5 = 10;
  if ((v5 & 0xFFFFFFFFFFFFFFF7) != 2)
    this = v5;
  if ((this & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)v4, (int)&v48, "PaintWorkletGlobalScope", "registerPaint");
  Object = JSC::JSCell::getObject((JSC::JSCell *)this);
  if (!Object)
    return WebCore::throwThisTypeError((int)v4, (int)&v48, "PaintWorkletGlobalScope", "registerPaint");
  if (*(_BYTE *)(Object + 5) == 32)
  {
    Object = *(_QWORD *)(Object + 16);
    v8 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v9 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v10 = (char **)(16 * v8);
    if ((_DWORD)v8)
      v11 = v10 == &WebCore::JSPaintWorkletGlobalScope::s_info;
    else
      v11 = 1;
    if (!v11)
    {
      do
      {
        v10 = (char **)v10[2];
        v9 = v10 != 0;
      }
      while (v10 != &WebCore::JSPaintWorkletGlobalScope::s_info && v10 != 0);
    }
    if (v9)
      goto LABEL_19;
    return WebCore::throwThisTypeError((int)v4, (int)&v48, "PaintWorkletGlobalScope", "registerPaint");
  }
  v30 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v31 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v32 = (char **)(16 * v30);
  if ((_DWORD)v30)
    v33 = v32 == &WebCore::JSPaintWorkletGlobalScope::s_info;
  else
    v33 = 1;
  if (!v33)
  {
    do
    {
      v32 = (char **)v32[2];
      v31 = v32 != 0;
    }
    while (v32 != &WebCore::JSPaintWorkletGlobalScope::s_info && v32 != 0);
  }
  if (!v31)
    return WebCore::throwThisTypeError((int)v4, (int)&v48, "PaintWorkletGlobalScope", "registerPaint");
LABEL_19:
  v13 = (JSC::VM *)*((_QWORD *)v4 + 7);
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v39.super.isa = (Class)JSC::createNotEnoughArgumentsError(v4, v7);
    return (_BYTE *)JSC::VM::throwException(v13, v4, v39);
  }
  v14 = *(_QWORD *)(Object + 3400);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(v4, *((_QWORD *)a2 + 6), (uint64_t)&v51);
  v15 = v52;
  if (v52)
  {
    v29 = 0;
LABEL_42:
    if (v15 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E32C9518[v15])(&v55, &v51);
    return (_BYTE *)v29;
  }
  WebCore::Converter<WebCore::IDLObject>::convert<WebCore::DefaultExceptionThrower>((uint64_t)v4, *((_QWORD *)a2 + 7), (uint64_t)&v49);
  v16 = v50;
  if (v50)
  {
    v29 = 0;
    goto LABEL_39;
  }
  if (!v52)
  {
    v17 = v51;
    v51 = 0;
    v53 = v17;
    v58 = 0;
    v18 = v49;
    if (!v49)
      goto LABEL_29;
    v19 = *(_QWORD *)(((unint64_t)(v49 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
    v20 = *(_QWORD *)(v19 + 40);
    if (v20)
    {
      *(_QWORD *)(v19 + 40) = *(_QWORD *)v20;
      *(_QWORD *)(v20 + 16) = 0;
      v21 = (JSC::Structure **)(v20 + 16);
      *(_QWORD *)v20 = 0;
      *(_QWORD *)(v20 + 8) = 0;
      v58 = (JSC::Structure **)(v20 + 16);
    }
    else
    {
      JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v49 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
      v44 = *(_QWORD **)(v19 + 40);
      v18 = v49;
      *(_QWORD *)(v19 + 40) = *v44;
      *v44 = 0;
      v44[1] = 0;
      v44[2] = 0;
      v21 = (JSC::Structure **)(v44 + 2);
      v58 = v21;
      if (!v18)
      {
        v22 = 0;
LABEL_28:
        *v21 = v22;
LABEL_29:
        WebCore::PaintWorkletGlobalScope::registerPaint(v14, (JSCell *)v4, &v53, &v58, (uint64_t)&v55);
        if (v58)
        {
          v24 = v58 - 2;
          v25 = *(_QWORD *)(((unint64_t)(v58 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
          v26 = (JSC::Structure **)*(v58 - 1);
          if (v26)
          {
            v27 = *v24;
            *v26 = *v24;
            *((_QWORD *)v27 + 1) = v26;
            *v24 = 0;
            v24[1] = 0;
          }
          *v24 = *(JSC::Structure **)(v25 + 40);
          *(_QWORD *)(v25 + 40) = v24;
          v58 = 0;
        }
        v28 = v53;
        v53 = 0;
        if (v28)
        {
          if (*(_DWORD *)v28 == 2)
            WTF::StringImpl::destroy(v28, v23);
          else
            *(_DWORD *)v28 -= 2;
        }
        if (!v57)
        {
          v29 = 10;
LABEL_38:
          v16 = v50;
LABEL_39:
          if (v16 != -1)
            ((void (*)(int *, JSC::Structure ***))off_1E32CB060[v16])(&v55, &v49);
          v15 = v52;
          goto LABEL_42;
        }
        v40 = (WTF::StringImpl *)v55;
        LOBYTE(v53) = v55;
        v41 = v56;
        v56 = 0;
        v54 = v41;
        if (!*((_QWORD *)v13 + 2))
        {
          v42.super.isa = (Class)WebCore::createDOMException(v4, (JSC::JSGlobalObject *)v55, (JSC::JSGlobalObject *)&v54);
          JSC::VM::throwException(v13, v4, v42);
          v41 = v54;
        }
        v54 = 0;
        if (v41)
        {
          if (*(_DWORD *)v41 == 2)
            WTF::StringImpl::destroy(v41, v40);
          else
            *(_DWORD *)v41 -= 2;
        }
        if (v57)
        {
          v43 = v56;
          v56 = 0;
          if (v43)
          {
            if (*(_DWORD *)v43 != 2)
            {
              v29 = 0;
              *(_DWORD *)v43 -= 2;
              goto LABEL_38;
            }
            WTF::StringImpl::destroy(v43, v40);
          }
        }
        v29 = 0;
        goto LABEL_38;
      }
    }
    v22 = *v18;
    if (*v18)
    {
      v37 = *(JSC::Structure **)(((unint64_t)(v21 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
      v38 = (JSC::Structure *)*((_QWORD *)v37 + 3);
      v37 = (JSC::Structure *)((char *)v37 + 24);
      *(v21 - 2) = v38;
      *(v21 - 1) = v37;
      *(_QWORD *)v37 = v21 - 2;
      *((_QWORD *)v38 + 1) = v21 - 2;
    }
    goto LABEL_28;
  }
  v45 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsPannerNodePrototypeFunction_setPosition(v45, v46, v47);
}

uint64_t WebCore::jsPannerNodePrototypeFunction_setPosition(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::PannerNode *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  float v21;
  float v22;
  float v23;
  uint64_t result;
  JSValue v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  JSValue v28;
  WTF::StringImpl *v29;
  double v30;
  JSC::VM *v31;
  double v32;
  double v33;
  uint64_t v34;
  JSC::VM *v35;
  WTF::StringImpl *v36;
  int v37[2];
  WTF::StringImpl *v38;
  char v39;

  v4 = *((_QWORD *)this + 7);
  v34 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "PannerNode", "setPosition");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPannerNode::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPannerNode::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "PannerNode", "setPosition");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException((JSC::VM *)v4, this, v25);
  }
  v12 = *(WebCore::PannerNode **)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v37 = v13;
  v35 = (JSC::VM *)v4;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v37, this);
    v14 = v30;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v14 < -3.40282347e38 || v14 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  *(_QWORD *)v37 = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  v35 = v16;
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v31 = v16;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v37, this);
    v16 = v31;
    v17 = v32;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v17 < -3.40282347e38 || v17 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  *(_QWORD *)v37 = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  v35 = v19;
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v37, this);
    v20 = v33;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v20 < -3.40282347e38 || v20 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v21 = v14;
  v22 = v17;
  v23 = v20;
  WebCore::PannerNode::setPosition(v12, v21, v22, v23, (uint64_t)v37);
  if (!v39)
    return 10;
  v26 = (WTF::StringImpl *)LOBYTE(v37[0]);
  LOBYTE(v35) = v37[0];
  v27 = v38;
  v38 = 0;
  v36 = v27;
  if (!*(_QWORD *)(v4 + 16))
  {
    v28.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v37[0]), (JSC::JSGlobalObject *)&v36);
    JSC::VM::throwException((JSC::VM *)v4, this, v28);
    v27 = v36;
  }
  v36 = 0;
  if (v27)
  {
    if (*(_DWORD *)v27 == 2)
      WTF::StringImpl::destroy(v27, v26);
    else
      *(_DWORD *)v27 -= 2;
  }
  if (!v39)
    return 0;
  v29 = v38;
  v38 = 0;
  if (!v29)
    return 0;
  if (*(_DWORD *)v29 == 2)
  {
    WTF::StringImpl::destroy(v29, v26);
    return 0;
  }
  result = 0;
  *(_DWORD *)v29 -= 2;
  return result;
}

uint64_t WebCore::jsPannerNodePrototypeFunction_setOrientation(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::PannerNode *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  float v21;
  float v22;
  float v23;
  uint64_t result;
  JSValue v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  JSValue v28;
  WTF::StringImpl *v29;
  double v30;
  JSC::VM *v31;
  double v32;
  double v33;
  uint64_t v34;
  JSC::VM *v35;
  WTF::StringImpl *v36;
  int v37[2];
  WTF::StringImpl *v38;
  char v39;

  v4 = *((_QWORD *)this + 7);
  v34 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "PannerNode", "setOrientation");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPannerNode::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPannerNode::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "PannerNode", "setOrientation");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException((JSC::VM *)v4, this, v25);
  }
  v12 = *(WebCore::PannerNode **)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v37 = v13;
  v35 = (JSC::VM *)v4;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v37, this);
    v14 = v30;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v14 < -3.40282347e38 || v14 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  *(_QWORD *)v37 = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  v35 = v16;
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v31 = v16;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v37, this);
    v16 = v31;
    v17 = v32;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v17 < -3.40282347e38 || v17 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  *(_QWORD *)v37 = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  v35 = v19;
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v37, this);
    v20 = v33;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v20 < -3.40282347e38 || v20 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v21 = v14;
  v22 = v17;
  v23 = v20;
  WebCore::PannerNode::setOrientation(v12, v21, v22, v23, (uint64_t)v37);
  if (!v39)
    return 10;
  v26 = (WTF::StringImpl *)LOBYTE(v37[0]);
  LOBYTE(v35) = v37[0];
  v27 = v38;
  v38 = 0;
  v36 = v27;
  if (!*(_QWORD *)(v4 + 16))
  {
    v28.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v37[0]), (JSC::JSGlobalObject *)&v36);
    JSC::VM::throwException((JSC::VM *)v4, this, v28);
    v27 = v36;
  }
  v36 = 0;
  if (v27)
  {
    if (*(_DWORD *)v27 == 2)
      WTF::StringImpl::destroy(v27, v26);
    else
      *(_DWORD *)v27 -= 2;
  }
  if (!v39)
    return 0;
  v29 = v38;
  v38 = 0;
  if (!v29)
    return 0;
  if (*(_DWORD *)v29 == 2)
  {
    WTF::StringImpl::destroy(v29, v26);
    return 0;
  }
  result = 0;
  *(_DWORD *)v29 -= 2;
  return result;
}

void WebCore::CanvasPath::~CanvasPath(WebCore::CanvasPath *this)
{
  uint64_t v2;
  char v3;

  *(_QWORD *)this = off_1E32CDB50;
  v2 = *((unsigned int *)this + 18);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, char *))off_1E32CAC88[v2])(&v3, (char *)this + 16);
  *((_DWORD *)this + 18) = -1;
}

{
  uint64_t v2;
  char v3;

  *(_QWORD *)this = off_1E32CDB50;
  v2 = *((unsigned int *)this + 18);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, char *))off_1E32CAC88[v2])(&v3, (char *)this + 16);
  *((_DWORD *)this + 18) = -1;
  MEMORY[0x19AEA7644](this, 0x10A3C40F2E5722ELL);
}

uint64_t WebCore::CanvasPath::hasInvertibleTransform(WebCore::CanvasPath *this)
{
  return 1;
}

uint64_t WebCore::getDOMStructure<WebCore::JSPath2D>(WebCore::JSPath2D *a1, JSC::JSCell **a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSPath2D::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSPath2D::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSPath2D::s_info);
  }
  return result;
}

uint64_t WebCore::jsPath2DPrototypeFunction_addPath(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v25;
  uint64_t v26;
  JSValue v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  JSValue v30;
  JSC::VM *v31;
  int v32;
  WTF::StringImpl *v33;
  char v34;
  WTF::StringImpl *v35[2];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  JSC::VM *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  int v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v31, "Path2D", "addPath");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSPath2D::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSPath2D::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v31, "Path2D", "addPath");
  v16 = *((int *)a2 + 8);
  if ((_DWORD)v16 == 1)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v27);
  }
  else
  {
    v17 = *(_QWORD *)(v10 + 24);
    v18 = *((_QWORD *)a2 + 6);
    v47 = v9;
    if ((v18 & 0xFFFE000000000002) != 0)
      goto LABEL_24;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSPath2D::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSPath2D::s_info && v21 != 0);
    }
    if (!v20 || (v25 = *(_QWORD *)(v18 + 24)) == 0)
    {
LABEL_24:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v47, 0, "path", 5, "Path2D", 7, a8, "addPath", 8, "Path2D", 7);
      return 0;
    }
    if ((unint64_t)(v16 - 3) > 0xFFFFFFFFFFFFFFFDLL)
      v26 = 10;
    else
      v26 = *((_QWORD *)a2 + 7);
    WebCore::convertDictionary<WebCore::DOMMatrix2DInit>((JSC::JSCell *)v26, (uint64_t)this, (uint64_t)&v47);
    if (!v60)
    {
      v43 = v56;
      v44 = v57;
      v45 = v58;
      v46 = v59;
      v39 = v52;
      v40 = v53;
      v41 = v54;
      v42 = v55;
      *(_OWORD *)v35 = v48;
      v36 = v49;
      v37 = v50;
      v38 = v51;
      WebCore::Path2D::addPath(v17, v25, (uint64_t)v35, (uint64_t)&v32);
      if (!v34)
        return 10;
      v28 = (WTF::StringImpl *)v32;
      LOBYTE(v35[0]) = v32;
      v29 = v33;
      v35[1] = v33;
      if (!*((_QWORD *)v9 + 2))
      {
        v30.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v32, (JSC::JSGlobalObject *)&v35[1]);
        JSC::VM::throwException(v9, this, v30);
        v29 = v35[1];
      }
      v35[1] = 0;
      if (v29)
      {
        if (*(_DWORD *)v29 == 2)
          WTF::StringImpl::destroy(v29, v28);
        else
          *(_DWORD *)v29 -= 2;
      }
    }
    return 0;
  }
}

uint64_t WebCore::jsPath2DPrototypeFunction_closePath(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "Path2D", "closePath");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPath2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPath2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "Path2D", "closePath");
  WebCore::CanvasPath::closePath(*(_QWORD *)(v3 + 24));
  return 10;
}

uint64_t WebCore::jsPath2DPrototypeFunction_moveTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  float v18;
  float v19;
  JSValue v21;
  double v22;
  double v23;
  JSC::VM *v24;
  unint64_t v25;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "Path2D", "moveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPath2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPath2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "Path2D", "moveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v25 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v25, this);
      v14 = v22;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v25 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v25, this);
        v17 = v23;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = v14;
        v19 = v17;
        WebCore::CanvasPath::moveTo(v12, v18, v19);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsPath2DPrototypeFunction_lineTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasPath *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  float v18;
  float v19;
  JSValue v21;
  double v22;
  double v23;
  JSC::VM *v24;
  unint64_t v25;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "Path2D", "lineTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPath2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPath2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "Path2D", "lineTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  else
  {
    v12 = *(WebCore::CanvasPath **)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v25 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v25, this);
      v14 = v22;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v25 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v25, this);
        v17 = v23;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = v14;
        v19 = v17;
        WebCore::CanvasPath::lineTo(v12, v18, v19);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsPath2DPrototypeFunction_quadraticCurveTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasPath *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  float v24;
  float v25;
  float v26;
  float v27;
  JSValue v29;
  double v30;
  double v31;
  double v32;
  double v33;
  JSC::VM *v34;
  unint64_t v35;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v34 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "Path2D", "quadraticCurveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPath2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPath2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "Path2D", "quadraticCurveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v29);
  }
  else
  {
    v12 = *(WebCore::CanvasPath **)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v35 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
      v14 = v30;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v35 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
        v17 = v31;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v35 = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
          v20 = v32;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v35 = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
            v23 = v33;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = v20;
            v25 = v17;
            v26 = v14;
            v27 = v23;
            WebCore::CanvasPath::quadraticCurveTo(v12, v26, v25, v24, v27);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsPath2DPrototypeFunction_bezierCurveTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasPath *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  JSValue v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  JSC::VM *v44;
  unint64_t v45;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v44 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "Path2D", "bezierCurveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPath2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPath2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "Path2D", "bezierCurveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v37);
  }
  else
  {
    v12 = *(WebCore::CanvasPath **)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v45 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
      v14 = v38;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v45 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
        v17 = v39;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v45 = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
          v20 = v40;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v45 = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
            v23 = v41;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = *((_QWORD *)a2 + 10);
            v45 = v24;
            v25 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v24 >= 0xFFFE000000000000)
            {
              v26 = (double)(int)v24;
            }
            else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
              v26 = v42;
            }
            else
            {
              *(_QWORD *)&v26 = v24 - 0x2000000000000;
            }
            if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            {
              return 0;
            }
            else
            {
              v27 = *((_QWORD *)a2 + 11);
              v45 = v27;
              v28 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v27 >= 0xFFFE000000000000)
              {
                v29 = (double)(int)v27;
              }
              else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v45, this);
                v29 = v43;
              }
              else
              {
                *(_QWORD *)&v29 = v27 - 0x2000000000000;
              }
              if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
              {
                return 0;
              }
              else
              {
                v30 = v26;
                v31 = v23;
                v32 = v20;
                v33 = v17;
                v34 = v14;
                v35 = v29;
                WebCore::CanvasPath::bezierCurveTo(v12, v34, v33, v32, v31, v30, v35);
                return 10;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsPath2DPrototypeFunction_arcTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasPath *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  JSValue v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  JSValue v36;
  double v37;
  JSC::VM *v38;
  double v39;
  JSC::VM *v40;
  double v41;
  JSC::VM *v42;
  double v43;
  double v44;
  uint64_t v45;
  char v46;
  WTF::StringImpl *v47;
  int v48[2];
  WTF::StringImpl *v49;
  char v50;

  v4 = *((_QWORD *)this + 7);
  v45 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v45, "Path2D", "arcTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPath2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPath2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v45, "Path2D", "arcTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v33.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException((JSC::VM *)v4, this, v33);
  }
  else
  {
    v12 = *(WebCore::CanvasPath **)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    *(_QWORD *)v48 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
      v14 = v37;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      *(_QWORD *)v48 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v38 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
        v16 = v38;
        v17 = v39;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        *(_QWORD *)v48 = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v40 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
          v19 = v40;
          v20 = v41;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          *(_QWORD *)v48 = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            v42 = (JSC::VM *)*((_QWORD *)this + 7);
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
            v22 = v42;
            v23 = v43;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = *((_QWORD *)a2 + 10);
            *(_QWORD *)v48 = v24;
            v25 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v24 >= 0xFFFE000000000000)
            {
              v26 = (double)(int)v24;
            }
            else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
              v26 = v44;
            }
            else
            {
              *(_QWORD *)&v26 = v24 - 0x2000000000000;
            }
            if (!*((_DWORD *)v25 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            {
              v27 = v23;
              v28 = v20;
              v29 = v17;
              v30 = v14;
              v31 = v26;
              WebCore::CanvasPath::arcTo(v12, v30, v29, v28, v27, v31, (uint64_t)v48);
              if (!v50)
                return 10;
              v34 = (WTF::StringImpl *)LOBYTE(v48[0]);
              v46 = v48[0];
              v35 = v49;
              v47 = v49;
              if (!*(_QWORD *)(v4 + 16))
              {
                v36.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v48[0]), (JSC::JSGlobalObject *)&v47);
                JSC::VM::throwException((JSC::VM *)v4, this, v36);
                v35 = v47;
              }
              v47 = 0;
              if (v35)
              {
                if (*(_DWORD *)v35 == 2)
                  WTF::StringImpl::destroy(v35, v34);
                else
                  *(_DWORD *)v35 -= 2;
              }
            }
            return 0;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsPath2DPrototypeFunction_rect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  float v24;
  float v25;
  float v26;
  float v27;
  JSValue v29;
  double v30;
  double v31;
  double v32;
  double v33;
  JSC::VM *v34;
  unint64_t v35;
  float v36;
  float v37;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v34 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "Path2D", "rect");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPath2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPath2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "Path2D", "rect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v29);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v35 = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
      v14 = v30;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v35 = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
        v17 = v31;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v35 = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
          v20 = v32;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v35 = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
            v23 = v33;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12))
            {
              v24 = v14;
              if ((LODWORD(v24) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
              {
                v25 = v17;
                if ((LODWORD(v25) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                {
                  v26 = v20;
                  if ((LODWORD(v26) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                  {
                    v27 = v23;
                    if ((LODWORD(v27) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                    {
                      if (v26 == 0.0 && v27 == 0.0)
                      {
                        *(float *)&v35 = v14;
                        *((float *)&v35 + 1) = v17;
                        WebCore::Path::moveTo((WebCore::Path *)(v12 + 8), (const WebCore::FloatPoint *)&v35);
                      }
                      else
                      {
                        *(float *)&v35 = v14;
                        *((float *)&v35 + 1) = v17;
                        v36 = v20;
                        v37 = v23;
                        WebCore::Path::addRect((WebCore::Path *)(v12 + 8), (const WebCore::FloatRect *)&v35);
                      }
                    }
                  }
                }
              }
            }
            return 10;
          }
        }
      }
    }
  }
}

_BYTE *WebCore::jsPath2DPrototypeFunction_roundRect(WebCore *this, JSC::JSGlobalObject *a2, JSValue a3, WebCore::JSPath2D *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  int hasIteratorMethod;
  int v14;
  WTF *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  double v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  double v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  double v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  double v27;
  uint64_t v28;
  JSC::VM *v29;
  WTF::StringImpl *v30;
  float v31;
  float v32;
  float v33;
  float v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  JSValue v38;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  char hasExceptionsAfterHandlingTraps;
  void *v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  JSValue v48;
  WTF::StringImpl *v49;
  double v50;
  JSC::VM *v51;
  double v52;
  JSC::VM *v53;
  double v54;
  JSC::VM *v55;
  double v56;
  JSC::VM *v57;
  uint64_t v58[2];
  int v59;
  JSC::VM *v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  WTF::StringImpl *v63;
  char v64;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v57 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v57, "Path2D", "roundRect");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSPath2D::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSPath2D::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)&v57, "Path2D", "roundRect");
  if ((unint64_t)(*((int *)a2 + 8) - 6) > 0xFFFFFFFFFFFFFFFALL)
  {
    v38.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v38);
  }
  if ((*((_QWORD *)a2 + 10) & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    hasIteratorMethod = JSC::hasIteratorMethod(this, *((JSC::JSGlobalObject **)a2 + 10), a3);
    v14 = hasIteratorMethod;
    if (*((_DWORD *)v5 + 20))
    {
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((hasExceptionsAfterHandlingTraps & 1) == 0 && ((v14 ^ 1) & 1) == 0)
        goto LABEL_16;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        return 0;
    }
    else if (hasIteratorMethod)
    {
LABEL_16:
      v15 = *(WTF **)(v6 + 24);
      v16 = *((_QWORD *)this + 7);
      v17 = (WTF::StringImpl *)*((_QWORD *)a2 + 6);
      v62 = v17;
      if ((unint64_t)v17 >= 0xFFFE000000000000)
      {
        v18 = (double)(int)v17;
      }
      else if ((unint64_t)v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v62, this);
        v18 = v50;
      }
      else
      {
        *(_QWORD *)&v18 = (char *)v17 - 0x2000000000000;
      }
      if (*(_DWORD *)(v16 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16))
        return 0;
      v19 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
      v62 = v19;
      v20 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((unint64_t)v19 >= 0xFFFE000000000000)
      {
        v21 = (double)(int)v19;
      }
      else if ((unint64_t)v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v51 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v62, this);
        v20 = v51;
        v21 = v52;
      }
      else
      {
        *(_QWORD *)&v21 = (char *)v19 - 0x2000000000000;
      }
      if (*((_DWORD *)v20 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v20))
        return 0;
      v22 = (WTF::StringImpl *)*((_QWORD *)a2 + 8);
      v62 = v22;
      v23 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((unint64_t)v22 >= 0xFFFE000000000000)
      {
        v24 = (double)(int)v22;
      }
      else if ((unint64_t)v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v53 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v62, this);
        v23 = v53;
        v24 = v54;
      }
      else
      {
        *(_QWORD *)&v24 = (char *)v22 - 0x2000000000000;
      }
      if (*((_DWORD *)v23 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v23))
        return 0;
      v25 = (WTF::StringImpl *)*((_QWORD *)a2 + 9);
      v62 = v25;
      v26 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((unint64_t)v25 >= 0xFFFE000000000000)
      {
        v27 = (double)(int)v25;
      }
      else if ((unint64_t)v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v55 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v62, this);
        v26 = v55;
        v27 = v56;
      }
      else
      {
        *(_QWORD *)&v27 = (char *)v25 - 0x2000000000000;
      }
      if (*((_DWORD *)v26 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v26))
        return 0;
      v28 = *((_QWORD *)a2 + 10);
      v29 = (JSC::VM *)*((_QWORD *)this + 7);
      v60 = v29;
      if ((v28 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v28 + 5) <= 0x16u)
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        JSC::throwTypeError();
        v42 = v62;
        v62 = 0;
        if (v42)
        {
          if (*(_DWORD *)v42 == 2)
            WTF::StringImpl::destroy(v42, v41);
          else
            *(_DWORD *)v42 -= 2;
        }
        v36 = 0;
        v37 = 1;
        v59 = 1;
        goto LABEL_47;
      }
      v62 = 0;
      v63 = 0;
      v58[0] = (uint64_t)&v62;
      JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDictionary<WebCore::DOMPointInit>>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<std::variant<double,WebCore::DOMPointInit>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(this, v28, v58);
      if (*((_DWORD *)v29 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v29))
      {
        v45 = v62;
        v59 = 1;
        if (v62)
        {
          v62 = 0;
          LODWORD(v63) = 0;
          WTF::fastFree(v45, v44);
        }
        v36 = 0;
        v37 = 1;
        goto LABEL_47;
      }
      v30 = v62;
      v59 = 0;
      v31 = v18;
      v32 = v21;
      v33 = v24;
      v34 = v27;
      v58[0] = 0;
      v58[1] = 0;
      WebCore::CanvasPath::roundRect(v15, (uint64_t)v62, HIDWORD(v63), &v62, v31, v32, v33, v34);
      if (v30)
        WTF::fastFree(v30, v35);
      if (!v64)
      {
        v36 = 10;
LABEL_39:
        v37 = 0;
LABEL_47:
        ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32CA028[v37])(&v62, v58);
        return (_BYTE *)v36;
      }
      v46 = (WTF::StringImpl *)v62;
      LOBYTE(v60) = (_BYTE)v62;
      v47 = v63;
      v63 = 0;
      v61 = v47;
      if (!*(_QWORD *)(v16 + 16))
      {
        v48.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v62, (JSC::JSGlobalObject *)&v61);
        JSC::VM::throwException((JSC::VM *)v16, this, v48);
        v47 = v61;
      }
      v61 = 0;
      if (v47)
      {
        if (*(_DWORD *)v47 == 2)
          WTF::StringImpl::destroy(v47, v46);
        else
          *(_DWORD *)v47 -= 2;
      }
      if (v64)
      {
        v49 = v63;
        v63 = 0;
        if (v49)
        {
          if (*(_DWORD *)v49 != 2)
          {
            v36 = 0;
            *(_DWORD *)v49 -= 2;
            goto LABEL_39;
          }
          WTF::StringImpl::destroy(v49, v46);
        }
      }
      v36 = 0;
      goto LABEL_39;
    }
  }
  return (_BYTE *)WebCore::jsPath2DPrototypeFunction_roundRect2Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
}

uint64_t WebCore::jsPath2DPrototypeFunction_arc(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasPath *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  int v30;
  uint64_t v31;
  int *v32;
  int v33;
  _BOOL4 v34;
  float v35;
  float v36;
  float v37;
  unsigned int v38;
  unsigned int v39;
  JSValue v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  JSValue v44;
  double v45;
  JSC::VM *v46;
  double v47;
  JSC::VM *v48;
  double v49;
  JSC::VM *v50;
  double v51;
  JSC::VM *v52;
  double v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  WTF::StringImpl *v57;
  int v58[2];
  WTF::StringImpl *v59;
  char v60;

  v4 = *((_QWORD *)this + 7);
  v55 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v55, "Path2D", "arc");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPath2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPath2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v55, "Path2D", "arc");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v41.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException((JSC::VM *)v4, this, v41);
  }
  v12 = *(WebCore::CanvasPath **)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v58 = v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v14 = v45;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    return 0;
  v15 = *((_QWORD *)a2 + 7);
  *(_QWORD *)v58 = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v46 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v16 = v46;
    v17 = v47;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    return 0;
  v18 = *((_QWORD *)a2 + 8);
  *(_QWORD *)v58 = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v48 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v19 = v48;
    v20 = v49;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
    return 0;
  v21 = *((_QWORD *)a2 + 9);
  *(_QWORD *)v58 = v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v50 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v22 = v50;
    v23 = v51;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
    return 0;
  v24 = *((_QWORD *)a2 + 10);
  *(_QWORD *)v58 = v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v52 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v25 = v52;
    v26 = v53;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 7) >= 0xFFFFFFFFFFFFFFFALL)
  {
    v28 = (JSC::VM *)*((_QWORD *)this + 7);
    v27 = 10;
    goto LABEL_44;
  }
  v27 = *((_QWORD *)a2 + 11);
  v28 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v27 >= 0xFFFE000000000000)
  {
    v54 = (_DWORD)v27 == 0;
    goto LABEL_84;
  }
  *(_QWORD *)&v29 = v27 - 0x2000000000000;
  if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v27 & 0xFFFE000000000002) == 0)
    {
      v30 = *(unsigned __int8 *)(v27 + 5);
      if (v30 == 3)
      {
        v33 = *(_DWORD *)(v27 + 8);
LABEL_83:
        v54 = v33 == 0;
        goto LABEL_84;
      }
      if (v30 == 2)
      {
        v31 = *(_QWORD *)(v27 + 8);
        if ((v31 & 1) != 0)
          v32 = (int *)(v27 + 16);
        else
          v32 = (int *)(v31 + 4);
        v33 = *v32;
        goto LABEL_83;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v54 = *(_QWORD *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_84:
        v34 = !v54;
        goto LABEL_45;
      }
      goto LABEL_88;
    }
LABEL_44:
    v34 = v27 == 7;
    goto LABEL_45;
  }
  if (v29 <= 0.0)
  {
    v34 = v29 < 0.0;
    goto LABEL_45;
  }
LABEL_88:
  v34 = 1;
LABEL_45:
  if (!*((_DWORD *)v28 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) == 0)
  {
    v35 = v26;
    v36 = v23;
    v37 = v20;
    *(float *)&v38 = v17;
    *(float *)&v39 = v14;
    WebCore::CanvasPath::arc(v12, v39, v38, v37, v36, v35, v34, v58);
    if (!v60)
      return 10;
    v42 = (WTF::StringImpl *)LOBYTE(v58[0]);
    v56 = v58[0];
    v43 = v59;
    v57 = v59;
    if (!*(_QWORD *)(v4 + 16))
    {
      v44.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v58[0]), (JSC::JSGlobalObject *)&v57);
      JSC::VM::throwException((JSC::VM *)v4, this, v44);
      v43 = v57;
    }
    v57 = 0;
    if (v43)
    {
      if (*(_DWORD *)v43 == 2)
        WTF::StringImpl::destroy(v43, v42);
      else
        *(_DWORD *)v43 -= 2;
    }
  }
  return 0;
}

uint64_t WebCore::jsPath2DPrototypeFunction_ellipse(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasPath *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  unint64_t v30;
  JSC::VM *v31;
  double v32;
  unint64_t v33;
  JSC::VM *v34;
  double v35;
  int v36;
  uint64_t v37;
  int *v38;
  int v39;
  _BOOL4 v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t result;
  JSValue v49;
  WebCore::CanvasPath *v50;
  int hasExceptionsAfterHandlingTraps;
  WebCore::CanvasPath *v52;
  int v53;
  WebCore::CanvasPath *v54;
  int v55;
  WebCore::CanvasPath *v56;
  int v57;
  WebCore::CanvasPath *v58;
  int v59;
  WebCore::CanvasPath *v60;
  int v61;
  WebCore::CanvasPath *v62;
  int v63;
  char v64;
  WTF::StringImpl *v65;
  WTF::StringImpl *v66;
  JSValue v67;
  WTF::StringImpl *v68;
  WebCore::CanvasPath *v69;
  double v70;
  JSC::VM *v71;
  WebCore::CanvasPath *v72;
  double v73;
  JSC::VM *v74;
  WebCore::CanvasPath *v75;
  double v76;
  JSC::VM *v77;
  WebCore::CanvasPath *v78;
  double v79;
  JSC::VM *v80;
  WebCore::CanvasPath *v81;
  double v82;
  WebCore::CanvasPath *v83;
  double v84;
  WebCore::CanvasPath *v85;
  double v86;
  BOOL v87;
  WebCore::CanvasPath *v88;
  JSC::VM *v89;
  JSC::VM *v90;
  JSC::VM *v91;
  JSC::VM *v92;
  char v93;
  WTF::StringImpl *v94;
  int v95[2];
  WTF::StringImpl *v96;
  char v97;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v92 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v92, "Path2D", "ellipse");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPath2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPath2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v92, "Path2D", "ellipse");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 6)
  {
    v49.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v49);
  }
  v12 = *(WebCore::CanvasPath **)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v95 = v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v69 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v69;
    v14 = v70;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20))
  {
    v50 = v12;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v12 = v50;
    if (hasExceptionsAfterHandlingTraps)
      return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  *(_QWORD *)v95 = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v71 = (JSC::VM *)*((_QWORD *)this + 7);
    v72 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v72;
    v16 = v71;
    v17 = v73;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20))
  {
    v52 = v12;
    v53 = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
    v12 = v52;
    if (v53)
      return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  *(_QWORD *)v95 = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v74 = (JSC::VM *)*((_QWORD *)this + 7);
    v75 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v75;
    v19 = v74;
    v20 = v76;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20))
  {
    v54 = v12;
    v55 = JSC::VM::hasExceptionsAfterHandlingTraps(v19);
    v12 = v54;
    if (v55)
      return 0;
  }
  v21 = *((_QWORD *)a2 + 9);
  *(_QWORD *)v95 = v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v77 = (JSC::VM *)*((_QWORD *)this + 7);
    v78 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v78;
    v22 = v77;
    v23 = v79;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20))
  {
    v56 = v12;
    v57 = JSC::VM::hasExceptionsAfterHandlingTraps(v22);
    v12 = v56;
    if (v57)
      return 0;
  }
  v24 = *((_QWORD *)a2 + 10);
  *(_QWORD *)v95 = v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v80 = (JSC::VM *)*((_QWORD *)this + 7);
    v81 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v81;
    v25 = v80;
    v26 = v82;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20))
  {
    v58 = v12;
    v59 = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
    v12 = v58;
    if (v59)
      return 0;
  }
  v27 = *((_QWORD *)a2 + 11);
  *(_QWORD *)v95 = v27;
  v28 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v27 >= 0xFFFE000000000000)
  {
    v29 = (double)(int)v27;
  }
  else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v91 = (JSC::VM *)*((_QWORD *)this + 7);
    v83 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v83;
    v28 = v91;
    v29 = v84;
  }
  else
  {
    *(_QWORD *)&v29 = v27 - 0x2000000000000;
  }
  if (*((_DWORD *)v28 + 20))
  {
    v60 = v12;
    v61 = JSC::VM::hasExceptionsAfterHandlingTraps(v28);
    v12 = v60;
    if (v61)
      return 0;
  }
  v90 = v4;
  v30 = *((_QWORD *)a2 + 12);
  *(_QWORD *)v95 = v30;
  v31 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v30 >= 0xFFFE000000000000)
  {
    v32 = (double)(int)v30;
  }
  else if (v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v89 = (JSC::VM *)*((_QWORD *)this + 7);
    v85 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v95, this);
    v12 = v85;
    v31 = v89;
    v32 = v86;
  }
  else
  {
    *(_QWORD *)&v32 = v30 - 0x2000000000000;
  }
  if (*((_DWORD *)v31 + 20))
  {
    v62 = v12;
    v63 = JSC::VM::hasExceptionsAfterHandlingTraps(v31);
    v12 = v62;
    if (v63)
      return 0;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 9) >= 0xFFFFFFFFFFFFFFF8)
  {
    v34 = (JSC::VM *)*((_QWORD *)this + 7);
    v33 = 10;
    goto LABEL_52;
  }
  v33 = *((_QWORD *)a2 + 13);
  v34 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v33 >= 0xFFFE000000000000)
  {
    v40 = v33 != 0;
    goto LABEL_53;
  }
  *(_QWORD *)&v35 = v33 - 0x2000000000000;
  if (v33 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    v40 = v35 > 0.0 || v35 < 0.0;
    goto LABEL_53;
  }
  if ((v33 & 0xFFFE000000000002) != 0)
  {
LABEL_52:
    v40 = v33 == 7;
    goto LABEL_53;
  }
  v36 = *(unsigned __int8 *)(v33 + 5);
  if (v36 == 3)
  {
    v39 = *(_DWORD *)(v33 + 8);
LABEL_105:
    v87 = v39 == 0;
    goto LABEL_106;
  }
  if (v36 == 2)
  {
    v37 = *(_QWORD *)(v33 + 8);
    if ((v37 & 1) != 0)
      v38 = (int *)(v33 + 16);
    else
      v38 = (int *)(v37 + 4);
    v39 = *v38;
    goto LABEL_105;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0xA) & 1) != 0)
  {
    v87 = *(_QWORD *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_106:
    v40 = !v87;
    goto LABEL_53;
  }
  v40 = 1;
LABEL_53:
  if (!*((_DWORD *)v34 + 20)
    || (v88 = v12, v64 = JSC::VM::hasExceptionsAfterHandlingTraps(v34), v12 = v88, (v64 & 1) == 0))
  {
    v41 = v32;
    v42 = v29;
    v43 = v26;
    v44 = v23;
    v45 = v20;
    *(float *)&v46 = v17;
    *(float *)&v47 = v14;
    WebCore::CanvasPath::ellipse(v12, v47, v46, v45, v44, v43, v42, v41, v40, (uint64_t)v95);
    if (!v97)
      return 10;
    v65 = (WTF::StringImpl *)LOBYTE(v95[0]);
    v93 = v95[0];
    v66 = v96;
    v96 = 0;
    v94 = v66;
    if (!*((_QWORD *)v90 + 2))
    {
      v67.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v95[0]), (JSC::JSGlobalObject *)&v94);
      JSC::VM::throwException(v90, this, v67);
      v66 = v94;
    }
    v94 = 0;
    if (v66)
    {
      if (*(_DWORD *)v66 == 2)
        WTF::StringImpl::destroy(v66, v65);
      else
        *(_DWORD *)v66 -= 2;
    }
    if (v97)
    {
      v68 = v96;
      v96 = 0;
      if (v68)
      {
        if (*(_DWORD *)v68 != 2)
        {
          result = 0;
          *(_DWORD *)v68 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v68, v65);
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsPath2DPrototypeFunction_roundRect2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPath2D *a4)
{
  uint64_t v7;
  unint64_t v8;
  double v9;
  unint64_t v10;
  JSC::VM *v11;
  double v12;
  unint64_t v13;
  JSC::VM *v14;
  double v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  float v19;
  float v20;
  float v21;
  float v22;
  uint64_t result;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  JSValue v26;
  WTF::StringImpl *v27;
  double v28;
  JSC::VM *v29;
  double v30;
  JSC::VM *v31;
  double v32;
  JSC::VM *v33;
  double v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  char v37;
  WTF::StringImpl *v38[2];
  __int128 v39;
  uint64_t v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  int v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)this + 7);
  v8 = *((_QWORD *)a2 + 6);
  v41 = v8;
  if (v8 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v8;
  }
  else if (v8 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, this);
    v9 = v28;
  }
  else
  {
    *(_QWORD *)&v9 = v8 - 0x2000000000000;
  }
  if (*(_DWORD *)(v7 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7))
    return 0;
  v10 = *((_QWORD *)a2 + 7);
  v41 = v10;
  v11 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v10 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)v10;
  }
  else if (v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v29 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, this);
    v11 = v29;
    v12 = v30;
  }
  else
  {
    *(_QWORD *)&v12 = v10 - 0x2000000000000;
  }
  if (*((_DWORD *)v11 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    return 0;
  v13 = *((_QWORD *)a2 + 8);
  v41 = v13;
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 >= 0xFFFE000000000000)
  {
    v15 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v31 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, this);
    v14 = v31;
    v15 = v32;
  }
  else
  {
    *(_QWORD *)&v15 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
    return 0;
  v16 = *((_QWORD *)a2 + 9);
  v41 = v16;
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v18 = (double)(int)v16;
  }
  else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v33 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, this);
    v17 = v33;
    v18 = v34;
  }
  else
  {
    *(_QWORD *)&v18 = v16 - 0x2000000000000;
  }
  if (*((_DWORD *)v17 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v17))
    return 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDictionary<WebCore::DOMPointInit>>>::convert(this, *((JSC::JSCell **)a2 + 10), (uint64_t)&v41);
  if (!v45)
  {
    v19 = v18;
    v20 = v15;
    v21 = v12;
    v22 = v9;
    *(_OWORD *)v38 = v42;
    v39 = v43;
    v40 = v44;
    WebCore::CanvasPath::roundRect(a3, (uint64_t)v38, 1uLL, &v35, v22, v21, v20, v19);
    if (!v37)
      return 10;
    v24 = (WTF::StringImpl *)v35;
    LOBYTE(v38[0]) = v35;
    v25 = v36;
    v36 = 0;
    v38[1] = v25;
    if (!*(_QWORD *)(v7 + 16))
    {
      v26.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v35, (JSC::JSGlobalObject *)&v38[1]);
      JSC::VM::throwException((JSC::VM *)v7, this, v26);
      v25 = v38[1];
    }
    v38[1] = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v24);
      else
        *(_DWORD *)v25 -= 2;
    }
    if (v37)
    {
      v27 = v36;
      v36 = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 != 2)
        {
          result = 0;
          *(_DWORD *)v27 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v27, v24);
      }
    }
  }
  return 0;
}

_BYTE *WebCore::jsPaymentAddressPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  WTF::StringImpl *v70;
  WTF::StringImpl *v71;
  unsigned __int8 *v73;
  unsigned int v74;
  unsigned __int8 *v75;
  unsigned int v76;
  unsigned __int8 *v77;
  unsigned int v78;
  unsigned __int8 *v79;
  unsigned int v80;
  unsigned __int8 *v81;
  unsigned int v82;
  unsigned __int8 *v83;
  unsigned int v84;
  unsigned __int8 *v85;
  unsigned int v86;
  unsigned __int8 *v87;
  unsigned int v88;
  unsigned __int8 *v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unint64_t v100;
  uint64_t SlowCase;
  uint64_t v102;
  WTF::StringImpl *v103;
  unint64_t v104;
  int v105;
  int v106;
  uint64_t v107;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v102 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v102, "PaymentAddress", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPaymentAddress::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPaymentAddress::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v102, "PaymentAddress", "toJSON");
  v11 = *(_QWORD **)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (v12)
  {
    v13 = *(unsigned int *)(v12 + 60);
    v14 = *(_QWORD *)(v12 + 24);
    if (v14 < *(_QWORD *)(v12 + 32))
    {
LABEL_14:
      *(_QWORD *)(v12 + 24) = v14 + v13;
      goto LABEL_15;
    }
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v100 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v100);
      *(_QWORD *)(v12 + 40) = v14 + (int)v100;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
  }
  else
  {
    SlowCase = JSC::CompleteSubspace::allocateSlow();
  }
  v14 = SlowCase;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v15 = *((_QWORD *)this + 7);
  v16 = v11[1];
  if (!v16 || (v17 = *(_DWORD *)(v16 + 4)) == 0)
  {
    v18 = *(_QWORD *)(v15 + 41968);
    goto LABEL_23;
  }
  if (v17 != 1)
    goto LABEL_20;
  v73 = *(unsigned __int8 **)(v16 + 8);
  if ((*(_BYTE *)(v16 + 16) & 4) != 0)
  {
    v74 = *v73;
LABEL_133:
    v18 = *(_QWORD *)(v15 + 8 * v74 + 42216);
    goto LABEL_23;
  }
  v91 = *(unsigned __int16 *)v73;
  if (v91 <= 0xFF)
  {
    v74 = v91;
    goto LABEL_133;
  }
LABEL_20:
  v18 = *(_QWORD *)(v15 + 64760);
  if (!v18 || v16 != *(_QWORD *)(v18 + 8))
    v18 = JSC::jsStringWithCacheSlowCase();
LABEL_23:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v103;
  v103 = 0;
  v104 = v14;
  v105 = -1;
  v106 = 0x1000000;
  v107 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v103);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDOMString>>::convert<WTF::String,0ul>(this, *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28), (uint64_t)(v11 + 2));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v103;
  v103 = 0;
  v104 = v14;
  v105 = -1;
  v106 = 0x1000000;
  v107 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v103);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = *((_QWORD *)this + 7);
  v25 = v11[4];
  if (!v25 || (v26 = *(_DWORD *)(v25 + 4)) == 0)
  {
    v27 = *(_QWORD *)(v24 + 41968);
    goto LABEL_37;
  }
  if (v26 == 1)
  {
    v75 = *(unsigned __int8 **)(v25 + 8);
    if ((*(_BYTE *)(v25 + 16) & 4) != 0)
    {
      v76 = *v75;
    }
    else
    {
      v92 = *(unsigned __int16 *)v75;
      if (v92 > 0xFF)
        goto LABEL_34;
      v76 = v92;
    }
    v27 = *(_QWORD *)(v24 + 8 * v76 + 42216);
    goto LABEL_37;
  }
LABEL_34:
  v27 = *(_QWORD *)(v24 + 64760);
  if (!v27 || v25 != *(_QWORD *)(v27 + 8))
    v27 = JSC::jsStringWithCacheSlowCase();
LABEL_37:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v103;
  v103 = 0;
  v104 = v14;
  v105 = -1;
  v106 = 0x1000000;
  v107 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v103);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  v30 = *((_QWORD *)this + 7);
  v31 = v11[5];
  if (!v31 || (v32 = *(_DWORD *)(v31 + 4)) == 0)
  {
    v33 = *(_QWORD *)(v30 + 41968);
    goto LABEL_47;
  }
  if (v32 == 1)
  {
    v77 = *(unsigned __int8 **)(v31 + 8);
    if ((*(_BYTE *)(v31 + 16) & 4) != 0)
    {
      v78 = *v77;
    }
    else
    {
      v93 = *(unsigned __int16 *)v77;
      if (v93 > 0xFF)
        goto LABEL_44;
      v78 = v93;
    }
    v33 = *(_QWORD *)(v30 + 8 * v78 + 42216);
    goto LABEL_47;
  }
LABEL_44:
  v33 = *(_QWORD *)(v30 + 64760);
  if (!v33 || v31 != *(_QWORD *)(v33 + 8))
    v33 = JSC::jsStringWithCacheSlowCase();
LABEL_47:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v34 = v103;
  v103 = 0;
  v104 = v14;
  v105 = -1;
  v106 = 0x1000000;
  v107 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v34, v33, 0, (uint64_t)&v103);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  v36 = *((_QWORD *)this + 7);
  v37 = v11[6];
  if (!v37 || (v38 = *(_DWORD *)(v37 + 4)) == 0)
  {
    v39 = *(_QWORD *)(v36 + 41968);
    goto LABEL_57;
  }
  if (v38 == 1)
  {
    v79 = *(unsigned __int8 **)(v37 + 8);
    if ((*(_BYTE *)(v37 + 16) & 4) != 0)
    {
      v80 = *v79;
    }
    else
    {
      v94 = *(unsigned __int16 *)v79;
      if (v94 > 0xFF)
        goto LABEL_54;
      v80 = v94;
    }
    v39 = *(_QWORD *)(v36 + 8 * v80 + 42216);
    goto LABEL_57;
  }
LABEL_54:
  v39 = *(_QWORD *)(v36 + 64760);
  if (!v39 || v37 != *(_QWORD *)(v39 + 8))
    v39 = JSC::jsStringWithCacheSlowCase();
LABEL_57:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v40 = v103;
  v103 = 0;
  v104 = v14;
  v105 = -1;
  v106 = 0x1000000;
  v107 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v40, v39, 0, (uint64_t)&v103);
  if (v40)
  {
    if (*(_DWORD *)v40 == 2)
      WTF::StringImpl::destroy(v40, v41);
    else
      *(_DWORD *)v40 -= 2;
  }
  v42 = *((_QWORD *)this + 7);
  v43 = v11[7];
  if (!v43 || (v44 = *(_DWORD *)(v43 + 4)) == 0)
  {
    v45 = *(_QWORD *)(v42 + 41968);
    goto LABEL_67;
  }
  if (v44 == 1)
  {
    v81 = *(unsigned __int8 **)(v43 + 8);
    if ((*(_BYTE *)(v43 + 16) & 4) != 0)
    {
      v82 = *v81;
    }
    else
    {
      v95 = *(unsigned __int16 *)v81;
      if (v95 > 0xFF)
        goto LABEL_64;
      v82 = v95;
    }
    v45 = *(_QWORD *)(v42 + 8 * v82 + 42216);
    goto LABEL_67;
  }
LABEL_64:
  v45 = *(_QWORD *)(v42 + 64760);
  if (!v45 || v43 != *(_QWORD *)(v45 + 8))
    v45 = JSC::jsStringWithCacheSlowCase();
LABEL_67:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v46 = v103;
  v103 = 0;
  v104 = v14;
  v105 = -1;
  v106 = 0x1000000;
  v107 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v46, v45, 0, (uint64_t)&v103);
  if (v46)
  {
    if (*(_DWORD *)v46 == 2)
      WTF::StringImpl::destroy(v46, v47);
    else
      *(_DWORD *)v46 -= 2;
  }
  v48 = *((_QWORD *)this + 7);
  v49 = v11[8];
  if (!v49 || (v50 = *(_DWORD *)(v49 + 4)) == 0)
  {
    v51 = *(_QWORD *)(v48 + 41968);
    goto LABEL_77;
  }
  if (v50 == 1)
  {
    v83 = *(unsigned __int8 **)(v49 + 8);
    if ((*(_BYTE *)(v49 + 16) & 4) != 0)
    {
      v84 = *v83;
    }
    else
    {
      v96 = *(unsigned __int16 *)v83;
      if (v96 > 0xFF)
        goto LABEL_74;
      v84 = v96;
    }
    v51 = *(_QWORD *)(v48 + 8 * v84 + 42216);
    goto LABEL_77;
  }
LABEL_74:
  v51 = *(_QWORD *)(v48 + 64760);
  if (!v51 || v49 != *(_QWORD *)(v51 + 8))
    v51 = JSC::jsStringWithCacheSlowCase();
LABEL_77:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v52 = v103;
  v103 = 0;
  v104 = v14;
  v105 = -1;
  v106 = 0x1000000;
  v107 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v52, v51, 0, (uint64_t)&v103);
  if (v52)
  {
    if (*(_DWORD *)v52 == 2)
      WTF::StringImpl::destroy(v52, v53);
    else
      *(_DWORD *)v52 -= 2;
  }
  v54 = *((_QWORD *)this + 7);
  v55 = v11[9];
  if (!v55 || (v56 = *(_DWORD *)(v55 + 4)) == 0)
  {
    v57 = *(_QWORD *)(v54 + 41968);
    goto LABEL_87;
  }
  if (v56 == 1)
  {
    v85 = *(unsigned __int8 **)(v55 + 8);
    if ((*(_BYTE *)(v55 + 16) & 4) != 0)
    {
      v86 = *v85;
    }
    else
    {
      v97 = *(unsigned __int16 *)v85;
      if (v97 > 0xFF)
        goto LABEL_84;
      v86 = v97;
    }
    v57 = *(_QWORD *)(v54 + 8 * v86 + 42216);
    goto LABEL_87;
  }
LABEL_84:
  v57 = *(_QWORD *)(v54 + 64760);
  if (!v57 || v55 != *(_QWORD *)(v57 + 8))
    v57 = JSC::jsStringWithCacheSlowCase();
LABEL_87:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v58 = v103;
  v103 = 0;
  v104 = v14;
  v105 = -1;
  v106 = 0x1000000;
  v107 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v58, v57, 0, (uint64_t)&v103);
  if (v58)
  {
    if (*(_DWORD *)v58 == 2)
      WTF::StringImpl::destroy(v58, v59);
    else
      *(_DWORD *)v58 -= 2;
  }
  v60 = *((_QWORD *)this + 7);
  v61 = v11[10];
  if (!v61 || (v62 = *(_DWORD *)(v61 + 4)) == 0)
  {
    v63 = *(_QWORD *)(v60 + 41968);
    goto LABEL_97;
  }
  if (v62 == 1)
  {
    v87 = *(unsigned __int8 **)(v61 + 8);
    if ((*(_BYTE *)(v61 + 16) & 4) != 0)
    {
      v88 = *v87;
    }
    else
    {
      v98 = *(unsigned __int16 *)v87;
      if (v98 > 0xFF)
        goto LABEL_94;
      v88 = v98;
    }
    v63 = *(_QWORD *)(v60 + 8 * v88 + 42216);
    goto LABEL_97;
  }
LABEL_94:
  v63 = *(_QWORD *)(v60 + 64760);
  if (!v63 || v61 != *(_QWORD *)(v63 + 8))
    v63 = JSC::jsStringWithCacheSlowCase();
LABEL_97:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v64 = v103;
  v103 = 0;
  v104 = v14;
  v105 = -1;
  v106 = 0x1000000;
  v107 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v64, v63, 0, (uint64_t)&v103);
  if (v64)
  {
    if (*(_DWORD *)v64 == 2)
      WTF::StringImpl::destroy(v64, v65);
    else
      *(_DWORD *)v64 -= 2;
  }
  v66 = *((_QWORD *)this + 7);
  v67 = v11[11];
  if (v67 && (v68 = *(_DWORD *)(v67 + 4)) != 0)
  {
    if (v68 != 1)
    {
LABEL_104:
      v69 = *(_QWORD *)(v66 + 64760);
      if (!v69 || v67 != *(_QWORD *)(v69 + 8))
        v69 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_107;
    }
    v89 = *(unsigned __int8 **)(v67 + 8);
    if ((*(_BYTE *)(v67 + 16) & 4) != 0)
    {
      v90 = *v89;
    }
    else
    {
      v99 = *(unsigned __int16 *)v89;
      if (v99 > 0xFF)
        goto LABEL_104;
      v90 = v99;
    }
    v69 = *(_QWORD *)(v66 + 8 * v90 + 42216);
  }
  else
  {
    v69 = *(_QWORD *)(v66 + 41968);
  }
LABEL_107:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v70 = v103;
  v103 = 0;
  v104 = v14;
  v105 = -1;
  v106 = 0x1000000;
  v107 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v70, v69, 0, (uint64_t)&v103);
  if (v70)
  {
    if (*(_DWORD *)v70 == 2)
      WTF::StringImpl::destroy(v70, v71);
    else
      *(_DWORD *)v70 -= 2;
  }
  return (_BYTE *)v14;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore11PaymentItemELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, unsigned int *a2)
{
  return WTF::Vector<WebCore::InspectorFrontendClientSaveData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector(a2, (WTF::StringImpl *)a2);
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore22PaymentDetailsModifierELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v3;
  WebCore::PaymentDetailsModifier *v4;
  uint64_t v5;
  uint64_t v6;
  WTF *result;

  v3 = *((unsigned int *)a2 + 3);
  if ((_DWORD)v3)
  {
    v4 = *(WebCore::PaymentDetailsModifier **)a2;
    v5 = 72 * v3;
    do
    {
      WebCore::PaymentDetailsModifier::~PaymentDetailsModifier(v4, a2);
      v4 = (WebCore::PaymentDetailsModifier *)(v6 + 72);
      v5 -= 72;
    }
    while (v5);
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

WTF::StringImpl *WTF::VectorDestructor<true,WebCore::PaymentShippingOption>::destruct(WTF::StringImpl *result, WTF::StringImpl *a2)
{
  WTF::StringImpl **v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;

  if (result != a2)
  {
    v3 = (WTF::StringImpl **)result;
    do
    {
      v4 = v3[3];
      v3[3] = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      v5 = v3[2];
      v3[2] = 0;
      if (v5)
      {
        if (*(_DWORD *)v5 == 2)
          WTF::StringImpl::destroy(v5, a2);
        else
          *(_DWORD *)v5 -= 2;
      }
      v6 = v3[1];
      v3[1] = 0;
      if (v6)
      {
        if (*(_DWORD *)v6 == 2)
          WTF::StringImpl::destroy(v6, a2);
        else
          *(_DWORD *)v6 -= 2;
      }
      result = *v3;
      *v3 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
        else
          *(_DWORD *)result -= 2;
      }
      v3 += 5;
    }
    while (v3 != (WTF::StringImpl **)a2);
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore21PaymentShippingOptionELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  WTF *result;

  v3 = *(_DWORD *)(a2 + 12);
  if (v3)
    WTF::VectorDestructor<true,WebCore::PaymentShippingOption>::destruct(*(WTF::StringImpl **)a2, (WTF::StringImpl *)(*(_QWORD *)a2 + 40 * v3));
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *(_DWORD *)(a2 + 8) = 0;
    return (WTF *)WTF::fastFree(result, (void *)a2);
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore11PaymentItemENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, a2);
    else
      *(_DWORD *)v4 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void WebCore::PaymentDetailsInit::~PaymentDetailsInit(WebCore::PaymentDetailsInit *this, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  WebCore::PaymentDetailsModifier *v8;
  uint64_t v9;
  uint64_t v10;
  WTF *v11;
  unsigned int v12;
  WTF *v13;

  v3 = (WTF::StringImpl *)*((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (WTF::StringImpl *)*((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, a2);
    else
      *(_DWORD *)v4 -= 2;
  }
  v5 = (WTF::StringImpl *)*((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, a2);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = (WTF::StringImpl *)*((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, a2);
    else
      *(_DWORD *)v6 -= 2;
  }
  if (*((_BYTE *)this + 64))
  {
    v7 = *((unsigned int *)this + 15);
    if ((_DWORD)v7)
    {
      v8 = (WebCore::PaymentDetailsModifier *)*((_QWORD *)this + 6);
      v9 = 72 * v7;
      do
      {
        WebCore::PaymentDetailsModifier::~PaymentDetailsModifier(v8, a2);
        v8 = (WebCore::PaymentDetailsModifier *)(v10 + 72);
        v9 -= 72;
      }
      while (v9);
    }
    v11 = (WTF *)*((_QWORD *)this + 6);
    if (v11)
    {
      *((_QWORD *)this + 6) = 0;
      *((_DWORD *)this + 14) = 0;
      WTF::fastFree(v11, a2);
    }
  }
  if (*((_BYTE *)this + 40))
  {
    v12 = *((_DWORD *)this + 9);
    if (v12)
      WTF::VectorDestructor<true,WebCore::PaymentShippingOption>::destruct(*((WTF::StringImpl **)this + 3), (WTF::StringImpl *)(*((_QWORD *)this + 3) + 40 * v12));
    v13 = (WTF *)*((_QWORD *)this + 3);
    if (v13)
    {
      *((_QWORD *)this + 3) = 0;
      *((_DWORD *)this + 8) = 0;
      WTF::fastFree(v13, a2);
    }
  }
  if (*((_BYTE *)this + 16))
    WTF::Vector<WebCore::InspectorFrontendClientSaveData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((unsigned int *)this, a2);
}

void WebCore::PaymentDetailsModifier::~PaymentDetailsModifier(WebCore::PaymentDetailsModifier *this, WTF::StringImpl *a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;

  v3 = *((_QWORD *)this + 8);
  if (v3)
  {
    v4 = (uint64_t *)(v3 - 16);
    v5 = *(_QWORD *)(((v3 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
    v6 = *(uint64_t **)(v3 - 8);
    if (v6)
    {
      v7 = *v4;
      *v6 = *v4;
      *(_QWORD *)(v7 + 8) = v6;
      *v4 = 0;
      v4[1] = 0;
    }
    *v4 = *(_QWORD *)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;
    *((_QWORD *)this + 8) = 0;
  }
  WTF::Vector<WebCore::InspectorFrontendClientSaveData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((unsigned int *)this + 12, a2);
  if (*((_BYTE *)this + 40))
  {
    v9 = (WTF::StringImpl *)*((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = 0;
    if (v9)
    {
      if (*(_DWORD *)v9 == 2)
        WTF::StringImpl::destroy(v9, v8);
      else
        *(_DWORD *)v9 -= 2;
    }
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v8);
      else
        *(_DWORD *)v10 -= 2;
    }
    v11 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v8);
      else
        *(_DWORD *)v11 -= 2;
    }
  }
  v12 = *(WTF::StringImpl **)this;
  *(_QWORD *)this = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v8);
    else
      *(_DWORD *)v12 -= 2;
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore16PayerErrorFieldsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, a2);
    else
      *(_DWORD *)v4 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore13AddressErrorsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(int a1, WebCore::AddressErrors *this)
{
  WebCore::AddressErrors::~AddressErrors(this, this);
}

void WebCore::PaymentDetailsUpdate::~PaymentDetailsUpdate(WebCore::PaymentDetailsUpdate *this, WTF::StringImpl *a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WebCore::PaymentDetailsModifier *v17;
  uint64_t v18;
  uint64_t v19;
  WTF *v20;
  unsigned int v21;
  WTF *v22;

  v3 = *((_QWORD *)this + 30);
  if (v3)
  {
    v4 = (uint64_t *)(v3 - 16);
    v5 = *(_QWORD *)(((v3 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
    v6 = *(uint64_t **)(v3 - 8);
    if (v6)
    {
      v7 = *v4;
      *v6 = *v4;
      *(_QWORD *)(v7 + 8) = v6;
      *v4 = 0;
      v4[1] = 0;
    }
    *v4 = *(_QWORD *)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;
    *((_QWORD *)this + 30) = 0;
  }
  v8 = (WTF::StringImpl *)*((_QWORD *)this + 29);
  *((_QWORD *)this + 29) = 0;
  if (v8)
  {
    if (*(_DWORD *)v8 == 2)
      WTF::StringImpl::destroy(v8, a2);
    else
      *(_DWORD *)v8 -= 2;
  }
  v9 = (WTF::StringImpl *)*((_QWORD *)this + 28);
  *((_QWORD *)this + 28) = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, a2);
    else
      *(_DWORD *)v9 -= 2;
  }
  v10 = (WTF::StringImpl *)*((_QWORD *)this + 27);
  *((_QWORD *)this + 27) = 0;
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
      WTF::StringImpl::destroy(v10, a2);
    else
      *(_DWORD *)v10 -= 2;
  }
  WebCore::AddressErrors::~AddressErrors((WebCore::PaymentDetailsUpdate *)((char *)this + 120), a2);
  if (*((_BYTE *)this + 112))
  {
    v12 = (WTF::StringImpl *)*((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v11);
      else
        *(_DWORD *)v12 -= 2;
    }
    v13 = (WTF::StringImpl *)*((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v11);
      else
        *(_DWORD *)v13 -= 2;
    }
    v14 = (WTF::StringImpl *)*((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v11);
      else
        *(_DWORD *)v14 -= 2;
    }
  }
  v15 = (WTF::StringImpl *)*((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v11);
    else
      *(_DWORD *)v15 -= 2;
  }
  if (*((_BYTE *)this + 64))
  {
    v16 = *((unsigned int *)this + 15);
    if ((_DWORD)v16)
    {
      v17 = (WebCore::PaymentDetailsModifier *)*((_QWORD *)this + 6);
      v18 = 72 * v16;
      do
      {
        WebCore::PaymentDetailsModifier::~PaymentDetailsModifier(v17, v11);
        v17 = (WebCore::PaymentDetailsModifier *)(v19 + 72);
        v18 -= 72;
      }
      while (v18);
    }
    v20 = (WTF *)*((_QWORD *)this + 6);
    if (v20)
    {
      *((_QWORD *)this + 6) = 0;
      *((_DWORD *)this + 14) = 0;
      WTF::fastFree(v20, v11);
    }
  }
  if (*((_BYTE *)this + 40))
  {
    v21 = *((_DWORD *)this + 9);
    if (v21)
      WTF::VectorDestructor<true,WebCore::PaymentShippingOption>::destruct(*((WTF::StringImpl **)this + 3), (WTF::StringImpl *)(*((_QWORD *)this + 3) + 40 * v21));
    v22 = (WTF *)*((_QWORD *)this + 3);
    if (v22)
    {
      *((_QWORD *)this + 3) = 0;
      *((_DWORD *)this + 8) = 0;
      WTF::fastFree(v22, v11);
    }
  }
  if (*((_BYTE *)this + 16))
    WTF::Vector<WebCore::InspectorFrontendClientSaveData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((unsigned int *)this, v11);
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore21PaymentCurrencyAmountENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore24PaymentMethodChangeEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  WTF::StringImpl *result;

  v2 = *((_QWORD *)a2 + 2);
  if (v2)
  {
    v3 = (uint64_t *)(v2 - 16);
    v4 = *(_QWORD *)(((v2 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
    v5 = *(uint64_t **)(v2 - 8);
    if (v5)
    {
      v6 = *v3;
      *v5 = *v3;
      *(_QWORD *)(v6 + 8) = v5;
      *v3 = 0;
      v3[1] = 0;
    }
    *v3 = *(_QWORD *)(v4 + 40);
    *(_QWORD *)(v4 + 40) = v3;
    *((_QWORD *)a2 + 2) = 0;
  }
  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::PaymentRequest *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14PaymentRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::PaymentRequest **a2)
{
  WebCore::PaymentRequest *result;
  bmalloc::api *v3;
  void *v4;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 12) == 1)
    {
      WebCore::PaymentRequest::~PaymentRequest(result, a2);
      return (WebCore::PaymentRequest *)bmalloc::api::isoDeallocate(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 12);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14PaymentRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore18PaymentDetailsInitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(int a1, WebCore::PaymentDetailsInit *this)
{
  WebCore::PaymentDetailsInit::~PaymentDetailsInit(this, this);
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore17PaymentMethodDataELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF *result;

  v3 = *((unsigned int *)a2 + 3);
  if ((_DWORD)v3)
  {
    v4 = 16 * v3;
    v5 = (uint64_t *)(*(_QWORD *)a2 + 8);
    do
    {
      v6 = *v5;
      if (*v5)
      {
        v7 = (uint64_t *)(v6 - 16);
        v8 = *(_QWORD *)(((v6 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
        v9 = *(uint64_t **)(v6 - 8);
        if (v9)
        {
          v10 = *v7;
          *v9 = *v7;
          *(_QWORD *)(v10 + 8) = v9;
          *v7 = 0;
          v7[1] = 0;
        }
        *v7 = *(_QWORD *)(v8 + 40);
        *(_QWORD *)(v8 + 40) = v7;
        *v5 = 0;
      }
      v11 = (WTF::StringImpl *)*(v5 - 1);
      *(v5 - 1) = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, a2);
        else
          *(_DWORD *)v11 -= 2;
      }
      v5 += 2;
      v4 -= 16;
    }
    while (v4);
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

unint64_t WebCore::jsPaymentRequestPrototypeFunction_show(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_class *v26;
  WebCore::DOMGuardedObject *v27;
  WebCore::DOMGuardedObject *v28;
  WebCore::DOMGuardedObject *v29;
  uint64_t v30;
  uint64_t v31;
  JSValue v33;
  objc_class *v34;
  WebCore::DOMGuardedObject *v35;
  uint64_t v36;
  int v37;
  WebCore::DOMGuardedObject *v38;
  int v39;
  WebCore::DOMGuardedObject *v40;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194DF928CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_51;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSPaymentRequest::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSPaymentRequest::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_51:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"PaymentRequest", "show", v16);
  }
  else
  {
    v23 = *(_QWORD *)(v17 + 24);
    v24 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                            * (*(_DWORD *)v17 & 0xFFFFFFFE)
                                                                                            + 0x28));
    if (v24)
    {
      v25 = v24;
      if (*(_BYTE *)(v24 + 274))
      {
        __break(0xC471u);
        JUMPOUT(0x194DF92ACLL);
      }
      if (*((_DWORD *)a2 + 8) == 1 || (v26 = (objc_class *)*((_QWORD *)a2 + 6), v26 == (objc_class *)10))
      {
        v27 = 0;
        v37 = 0;
      }
      else
      {
        v33.super.isa = v26;
        WebCore::Converter<WebCore::IDLPromise<WebCore::IDLDictionary<WebCore::PaymentDetailsUpdate>>>::convert<WebCore::DefaultExceptionThrower>((uint64_t)&v38, this, v33);
        if (v39)
        {
          v37 = 1;
          if (v39 != -1)
            ((void (*)(WebCore::DOMGuardedObject **, WebCore::DOMGuardedObject **))off_1E32CB378[v39])(&v40, &v38);
          v30 = 1;
LABEL_37:
          ((void (*)(WebCore::DOMGuardedObject **, uint64_t *))off_1E32CB388[v30])(&v38, &v36);
          if (!v14)
            goto LABEL_40;
          goto LABEL_38;
        }
        v27 = v38;
        v37 = 0;
      }
      v36 = 0;
      v38 = v27;
      v40 = v14;
      WebCore::PaymentRequest::show(v23 - 24, v25 - 192, (uint64_t *)&v38, (uint64_t *)&v40);
      v28 = v40;
      v40 = 0;
      if (v28)
      {
        if (*((_DWORD *)v28 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
        else
          --*((_DWORD *)v28 + 4);
      }
      v29 = v38;
      v38 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
      v14 = 0;
      v30 = 0;
      goto LABEL_37;
    }
  }
LABEL_38:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_40:
  v31 = *(_QWORD *)(v10 + 16);
  if (v31)
  {
    if (*(_QWORD *)(v10 + 24) != v31)
    {
      v34 = *(objc_class **)(v31 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v38);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v38, v34, 0);
      v35 = v38;
      v38 = 0;
      if (v35)
      {
        if (*((_DWORD *)v35 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v35 + 16))(v35);
        else
          --*((_DWORD *)v35 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsPaymentRequestPrototypeFunction_abort(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::DOMGuardedObject *v24;
  uint64_t v25;
  void (*v27)(void);
  objc_class *v28;
  WebCore::DOMGuardedObject *v29;
  WebCore::DOMGuardedObject *v30;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194DF9500);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSPaymentRequest::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSPaymentRequest::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"PaymentRequest", "abort", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v27 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v17 + 24) - 24;
  v30 = v14;
  WebCore::PaymentRequest::abort(v23, (uint64_t *)&v30);
  v24 = v30;
  v30 = 0;
  if (v24)
  {
    if (*((_DWORD *)v24 + 4) != 1)
    {
      --*((_DWORD *)v24 + 4);
      goto LABEL_28;
    }
    v27 = *(void (**)(void))(*(_QWORD *)v24 + 16);
LABEL_32:
    v27();
  }
LABEL_28:
  v25 = *(_QWORD *)(v10 + 16);
  if (v25)
  {
    if (*(_QWORD *)(v10 + 24) != v25)
    {
      v28 = *(objc_class **)(v25 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v30);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v30, v28, 0);
      v29 = v30;
      v30 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsPaymentRequestPrototypeFunction_canMakePayment(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(void);
  objc_class *v28;
  WebCore::DOMGuardedObject *v29;
  WebCore::DOMGuardedObject *v30;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194DF977CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_35;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSPaymentRequest::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSPaymentRequest::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_35:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"PaymentRequest", "canMakePayment", v16);
    goto LABEL_36;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v24 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v17 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (!v24)
  {
LABEL_36:
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_30;
    }
    v27 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_34;
  }
  if (*(_BYTE *)(v24 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194DF979CLL);
  }
  v30 = v14;
  WebCore::PaymentRequest::canMakePayment(v23 - 24, v24 - 192, (uint64_t *)&v30);
  if (v30)
  {
    if (*((_DWORD *)v30 + 4) != 1)
    {
      --*((_DWORD *)v30 + 4);
      goto LABEL_30;
    }
    v27 = *(void (**)(void))(*(_QWORD *)v30 + 16);
LABEL_34:
    v27();
  }
LABEL_30:
  v25 = *(_QWORD *)(v10 + 16);
  if (v25)
  {
    if (*(_QWORD *)(v10 + 24) != v25)
    {
      v28 = *(objc_class **)(v25 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v30);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v30, v28, 0);
      v29 = v30;
      v30 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_QWORD *WebCore::Converter<WebCore::IDLPromise<WebCore::IDLDictionary<WebCore::PaymentDetailsUpdate>>>::convert<WebCore::DefaultExceptionThrower>(uint64_t a1, JSC::JSPromise *this, JSValue a3)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;
  int v15;
  unint64_t v16;
  WebCore::DOMGuardedObject *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  int v22;
  int v23;
  uint64_t v24;

  v5 = *((_QWORD *)this + 7);
  v6 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  if (!v7)
  {
    __break(0xC471u);
    JUMPOUT(0x194DF9950);
  }
  v11 = JSC::JSPromise::resolvedPromise(this, a3.super.isa, a3);
  if (!*(_QWORD *)(v5 + 16))
  {
    v16 = v11;
    v17 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x28);
    result = WebCore::DOMGuardedObject::DOMGuardedObject(v17, (unint64_t)this, v16);
    v15 = 0;
    *result = &off_1E3251870;
    *(_QWORD *)a1 = result;
    goto LABEL_16;
  }
  v12 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (v12)
  {
    v13 = v12;
    result = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 64))(v12);
    if ((_DWORD)result)
    {
      v18 = *(_QWORD *)(v13 + 344);
      if (*(_QWORD *)(v5 + 24) == *(_QWORD *)(v5 + 16))
        goto LABEL_30;
      if (!v18)
        goto LABEL_14;
      v19 = *(_QWORD *)(v13 + 344);
      v20 = (unsigned __int8 *)(v18 + 40);
      if (__ldaxr((unsigned __int8 *)(v18 + 40)))
      {
        __clrex();
      }
      else if (!__stxr(1u, v20))
      {
        goto LABEL_24;
      }
      result = (_QWORD *)MEMORY[0x19AEA534C](v20);
LABEL_24:
      v22 = *(unsigned __int8 *)(v19 + 41);
      v23 = __ldxr(v20);
      if (v23 == 1)
      {
        if (!__stlxr(0, v20))
        {
LABEL_29:
          v18 = v19;
          if (!v22)
            goto LABEL_14;
LABEL_30:
          v24 = *(_QWORD *)(v18 + 8);
          v15 = 1;
          *(_BYTE *)(v24 + 93442) = 1;
          goto LABEL_16;
        }
      }
      else
      {
        __clrex();
      }
      result = (_QWORD *)WTF::Lock::unlockSlow((WTF::Lock *)v20);
      goto LABEL_29;
    }
  }
LABEL_14:
  result = (_QWORD *)JSC::throwTypeError();
  v15 = 1;
LABEL_16:
  *(_DWORD *)(a1 + 8) = v15;
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore10DOMPromiseENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_BYTE *WebCore::jsPaymentRequestUpdateEventPrototypeFunction_updateWith(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSValue v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  _BYTE *result;
  JSValue v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  uint64_t v24;
  unsigned int v25;
  _DWORD *v26;
  WTF::StringImpl *v27;
  int v28;
  WTF::StringImpl *v29;
  char v30;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "PaymentRequestUpdateEvent", "updateWith");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPaymentRequestUpdateEvent::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPaymentRequestUpdateEvent::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "PaymentRequestUpdateEvent", "updateWith");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v18);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12.super.isa = (Class)*((_QWORD *)a2 + 6);
  WebCore::Converter<WebCore::IDLPromise<WebCore::IDLDictionary<WebCore::PaymentDetailsUpdate>>>::convert<WebCore::DefaultExceptionThrower>((uint64_t)&v24, this, v12);
  v13 = v25;
  if (!v25)
  {
    v14 = v24;
    v24 = 0;
    v26 = (_DWORD *)v14;
    WebCore::PaymentRequestUpdateEvent::updateWith(v11, (uint64_t *)&v26, (uint64_t)&v28);
    v15 = v26;
    v26 = 0;
    if (v15)
    {
      if (v15[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v15 + 16))(v15);
      else
        --v15[4];
    }
    if (!v30)
    {
      v16 = 10;
LABEL_19:
      ((void (*)(int *, uint64_t *))off_1E32CB378[v13])(&v28, &v24);
      return (_BYTE *)v16;
    }
    v19 = (WTF::StringImpl *)v28;
    LOBYTE(v26) = v28;
    v20 = v29;
    v29 = 0;
    v27 = v20;
    if (!*((_QWORD *)v4 + 2))
    {
      v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v28, (JSC::JSGlobalObject *)&v27);
      JSC::VM::throwException(v4, this, v21);
      v20 = v27;
    }
    v27 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v19);
      else
        *(_DWORD *)v20 -= 2;
    }
    if (v30)
    {
      v22 = v29;
      v29 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 != 2)
        {
          v16 = 0;
          *(_DWORD *)v22 -= 2;
          goto LABEL_19;
        }
        WTF::StringImpl::destroy(v22, v19);
      }
    }
    v16 = 0;
    goto LABEL_19;
  }
  v16 = 0;
  result = 0;
  if (v25 != -1)
    goto LABEL_19;
  return result;
}

_BYTE *WebCore::jsPaymentResponsePrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF *v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  unsigned __int8 *v59;
  unsigned int v60;
  unsigned __int8 *v61;
  unsigned int v62;
  unsigned __int8 *v63;
  unsigned int v64;
  unsigned __int8 *v65;
  unsigned int v66;
  unsigned __int8 *v67;
  unsigned int v68;
  unsigned __int8 *v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unint64_t v77;
  uint64_t SlowCase;
  uint64_t v79;
  WTF::StringImpl *v80;
  unint64_t v81;
  int v82;
  int v83;
  uint64_t v84;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v79 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v79, "PaymentResponse", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPaymentResponse::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPaymentResponse::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v79, "PaymentResponse", "toJSON");
  v11 = *(_QWORD **)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (v12)
  {
    v13 = *(unsigned int *)(v12 + 60);
    v14 = *(_QWORD *)(v12 + 24);
    if (v14 < *(_QWORD *)(v12 + 32))
    {
LABEL_14:
      *(_QWORD *)(v12 + 24) = v14 + v13;
      goto LABEL_15;
    }
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v77 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v77);
      *(_QWORD *)(v12 + 40) = v14 + (int)v77;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
  }
  else
  {
    SlowCase = JSC::CompleteSubspace::allocateSlow();
  }
  v14 = SlowCase;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v15 = *((_QWORD *)this + 7);
  v16 = v11[5];
  if (!v16 || (v17 = *(_DWORD *)(v16 + 4)) == 0)
  {
    v18 = *(_QWORD *)(v15 + 41968);
    goto LABEL_23;
  }
  if (v17 == 1)
  {
    v59 = *(unsigned __int8 **)(v16 + 8);
    if ((*(_BYTE *)(v16 + 16) & 4) != 0)
    {
      v60 = *v59;
    }
    else
    {
      v71 = *(unsigned __int16 *)v59;
      if (v71 > 0xFF)
        goto LABEL_20;
      v60 = v71;
    }
    v18 = *(_QWORD *)(v15 + 8 * v60 + 42216);
    goto LABEL_23;
  }
LABEL_20:
  v18 = *(_QWORD *)(v15 + 64760);
  if (!v18 || v16 != *(_QWORD *)(v18 + 8))
    v18 = JSC::jsStringWithCacheSlowCase();
LABEL_23:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v80;
  v80 = 0;
  v81 = v14;
  v82 = -1;
  v83 = 0x1000000;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v80);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = *((_QWORD *)this + 7);
  v22 = v11[6];
  if (!v22 || (v23 = *(_DWORD *)(v22 + 4)) == 0)
  {
    v24 = *(_QWORD *)(v21 + 41968);
    goto LABEL_33;
  }
  if (v23 != 1)
    goto LABEL_30;
  v61 = *(unsigned __int8 **)(v22 + 8);
  if ((*(_BYTE *)(v22 + 16) & 4) != 0)
  {
    v62 = *v61;
LABEL_111:
    v24 = *(_QWORD *)(v21 + 8 * v62 + 42216);
    goto LABEL_33;
  }
  v72 = *(unsigned __int16 *)v61;
  if (v72 <= 0xFF)
  {
    v62 = v72;
    goto LABEL_111;
  }
LABEL_30:
  v24 = *(_QWORD *)(v21 + 64760);
  if (!v24 || v22 != *(_QWORD *)(v24 + 8))
    v24 = JSC::jsStringWithCacheSlowCase();
LABEL_33:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v25 = v80;
  v80 = 0;
  v81 = v14;
  v82 = -1;
  v83 = 0x1000000;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v25, v24, 0, (uint64_t)&v80);
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v26);
    else
      *(_DWORD *)v25 -= 2;
  }
  v27 = WebCore::JSPaymentResponse::details((WebCore::JSPaymentResponse *)v4, this);
  WTF::AtomStringImpl::addLiteral();
  v28 = v80;
  v80 = 0;
  v81 = v14;
  v82 = -1;
  v83 = 0x1000000;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v80);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  v30 = (WTF *)v11[10];
  v31 = v30 ? WebCore::wrap<WebCore::PaymentAddress>(*(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28), v30) : 2;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v32 = v80;
  v80 = 0;
  v81 = v14;
  v82 = -1;
  v83 = 0x1000000;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v32, v31, 0, (uint64_t)&v80);
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, v33);
    else
      *(_DWORD *)v32 -= 2;
  }
  v34 = v11[11];
  if (!v34)
  {
    v37 = 2;
    goto LABEL_54;
  }
  v35 = *((_QWORD *)this + 7);
  v36 = *(_DWORD *)(v34 + 4);
  if (!v36)
  {
    v37 = *(_QWORD *)(v35 + 41968);
    goto LABEL_54;
  }
  if (v36 == 1)
  {
    v63 = *(unsigned __int8 **)(v34 + 8);
    if ((*(_BYTE *)(v34 + 16) & 4) != 0)
    {
      v64 = *v63;
    }
    else
    {
      v73 = *(unsigned __int16 *)v63;
      if (v73 > 0xFF)
        goto LABEL_50;
      v64 = v73;
    }
    v37 = *(_QWORD *)(v35 + 8 * v64 + 42216);
    goto LABEL_54;
  }
LABEL_50:
  v37 = *(_QWORD *)(v35 + 64760);
  if (!v37 || v34 != *(_QWORD *)(v37 + 8))
    v37 = JSC::jsStringWithCacheSlowCase();
LABEL_54:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v38 = v80;
  v80 = 0;
  v81 = v14;
  v82 = -1;
  v83 = 0x1000000;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v38, v37, 0, (uint64_t)&v80);
  if (v38)
  {
    if (*(_DWORD *)v38 == 2)
      WTF::StringImpl::destroy(v38, v39);
    else
      *(_DWORD *)v38 -= 2;
  }
  v40 = v11[12];
  if (!v40)
  {
    v43 = 2;
    goto LABEL_65;
  }
  v41 = *((_QWORD *)this + 7);
  v42 = *(_DWORD *)(v40 + 4);
  if (!v42)
  {
    v43 = *(_QWORD *)(v41 + 41968);
    goto LABEL_65;
  }
  if (v42 == 1)
  {
    v65 = *(unsigned __int8 **)(v40 + 8);
    if ((*(_BYTE *)(v40 + 16) & 4) != 0)
    {
      v66 = *v65;
    }
    else
    {
      v74 = *(unsigned __int16 *)v65;
      if (v74 > 0xFF)
        goto LABEL_61;
      v66 = v74;
    }
    v43 = *(_QWORD *)(v41 + 8 * v66 + 42216);
    goto LABEL_65;
  }
LABEL_61:
  v43 = *(_QWORD *)(v41 + 64760);
  if (!v43 || v40 != *(_QWORD *)(v43 + 8))
    v43 = JSC::jsStringWithCacheSlowCase();
LABEL_65:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v44 = v80;
  v80 = 0;
  v81 = v14;
  v82 = -1;
  v83 = 0x1000000;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v44, v43, 0, (uint64_t)&v80);
  if (v44)
  {
    if (*(_DWORD *)v44 == 2)
      WTF::StringImpl::destroy(v44, v45);
    else
      *(_DWORD *)v44 -= 2;
  }
  v46 = v11[13];
  if (!v46)
  {
    v49 = 2;
    goto LABEL_76;
  }
  v47 = *((_QWORD *)this + 7);
  v48 = *(_DWORD *)(v46 + 4);
  if (!v48)
  {
    v49 = *(_QWORD *)(v47 + 41968);
    goto LABEL_76;
  }
  if (v48 == 1)
  {
    v67 = *(unsigned __int8 **)(v46 + 8);
    if ((*(_BYTE *)(v46 + 16) & 4) != 0)
    {
      v68 = *v67;
    }
    else
    {
      v75 = *(unsigned __int16 *)v67;
      if (v75 > 0xFF)
        goto LABEL_72;
      v68 = v75;
    }
    v49 = *(_QWORD *)(v47 + 8 * v68 + 42216);
    goto LABEL_76;
  }
LABEL_72:
  v49 = *(_QWORD *)(v47 + 64760);
  if (!v49 || v46 != *(_QWORD *)(v49 + 8))
    v49 = JSC::jsStringWithCacheSlowCase();
LABEL_76:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v50 = v80;
  v80 = 0;
  v81 = v14;
  v82 = -1;
  v83 = 0x1000000;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v50, v49, 0, (uint64_t)&v80);
  if (v50)
  {
    if (*(_DWORD *)v50 == 2)
      WTF::StringImpl::destroy(v50, v51);
    else
      *(_DWORD *)v50 -= 2;
  }
  v52 = v11[14];
  if (v52)
  {
    v53 = *((_QWORD *)this + 7);
    v54 = *(_DWORD *)(v52 + 4);
    if (v54)
    {
      if (v54 != 1)
      {
LABEL_83:
        v55 = *(_QWORD *)(v53 + 64760);
        if (!v55 || v52 != *(_QWORD *)(v55 + 8))
          v55 = JSC::jsStringWithCacheSlowCase();
        goto LABEL_87;
      }
      v69 = *(unsigned __int8 **)(v52 + 8);
      if ((*(_BYTE *)(v52 + 16) & 4) != 0)
      {
        v70 = *v69;
      }
      else
      {
        v76 = *(unsigned __int16 *)v69;
        if (v76 > 0xFF)
          goto LABEL_83;
        v70 = v76;
      }
      v55 = *(_QWORD *)(v53 + 8 * v70 + 42216);
    }
    else
    {
      v55 = *(_QWORD *)(v53 + 41968);
    }
  }
  else
  {
    v55 = 2;
  }
LABEL_87:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v56 = v80;
  v80 = 0;
  v81 = v14;
  v82 = -1;
  v83 = 0x1000000;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v56, v55, 0, (uint64_t)&v80);
  if (v56)
  {
    if (*(_DWORD *)v56 == 2)
      WTF::StringImpl::destroy(v56, v57);
    else
      *(_DWORD *)v56 -= 2;
  }
  return (_BYTE *)v14;
}

unint64_t WebCore::jsPaymentResponsePrototypeFunction_complete(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  JSC::VM *v31;
  _QWORD *v32;
  const char *v33;
  int v34;
  unint64_t v35;
  char **v36;
  JSC::JSCell *v37;
  JSC::VM *v38;
  uint64_t Object;
  JSC::Structure *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  JSC::VM *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  JSC::VM *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  int v72;
  uint64_t *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t *v81;
  unint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  int v95;
  uint64_t *v96;
  uint64_t v97;
  objc_class *v98;
  uint64_t *v99;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  JSC::VM *v108;
  unsigned int v109;
  _QWORD *v110;
  int v111;
  JSC::VM *v112;
  WTF::StringImpl *v113;
  int v114;
  _BYTE v115[9];

  v5 = *((_QWORD *)this + 7);
  v6 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  if (!v7)
  {
    __break(0xC471u);
    JUMPOUT(0x194DFAE0CLL);
  }
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_157;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSPaymentResponse::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSPaymentResponse::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_157:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"PaymentResponse", "complete", v16);
    goto LABEL_94;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v24 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v24)
    goto LABEL_94;
  v27 = v24;
  if (*(_BYTE *)(v24 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194DFAE9CLL);
  }
  v105 = v23;
  v28 = *((_DWORD *)a2 + 8);
  v106 = v13;
  v107 = v5;
  if (v28 == 1)
  {
    LODWORD(v30) = 2;
    goto LABEL_31;
  }
  v29 = *((_QWORD *)a2 + 6);
  if (v29 == 10)
  {
    LODWORD(v30) = 2;
    goto LABEL_54;
  }
  v31 = (JSC::VM *)*((_QWORD *)this + 7);
  v108 = v31;
  v113 = (WTF::StringImpl *)v29;
  if ((v29 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v29 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v113, this);
    v32 = v110;
    if (v110)
      goto LABEL_38;
    goto LABEL_150;
  }
  v32 = *(_QWORD **)(v29 + 8);
  if ((v32 & 1) == 0)
  {
    if (!v32)
      goto LABEL_37;
    goto LABEL_36;
  }
  v32 = *(_QWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v29, this);
  if (v32)
LABEL_36:
    *(_DWORD *)v32 += 2;
LABEL_37:
  v110 = v32;
  if (v32)
  {
LABEL_38:
    v33 = (const char *)v32[1];
    v34 = *((_DWORD *)v32 + 1);
    v35 = ((unint64_t)*((unsigned int *)v32 + 4) >> 2) & 1;
    if (v33 != "fail" && v34 == 4)
    {
      if ((_DWORD)v35)
      {
        if (*v33 != 102 || *(_WORD *)(v33 + 1) != 26977 || *((_WORD *)v33 + 1) != 27753)
          goto LABEL_44;
      }
      else
      {
        if (*(_WORD *)v33 != 102)
        {
LABEL_44:
          v30 = 0;
          goto LABEL_49;
        }
        v30 = 0;
        if (*(_DWORD *)(v33 + 2) != 6881377 || *((_DWORD *)v33 + 1) != 7077993)
          goto LABEL_49;
      }
      goto LABEL_47;
    }
    if (v33 == "fail" && v34 == 4)
    {
LABEL_47:
      v36 = &WebCore::parseEnumerationFromString<WebCore::PaymentComplete>(WTF::String const&)::mappings;
      goto LABEL_48;
    }
    v93 = v35 << 32;
    v94 = v34 != 7;
    if (v33 == "success" || v34 != 7)
    {
      v95 = *((_DWORD *)v32 + 1);
      if (v33 == "success" && v34 == 7)
        goto LABEL_133;
    }
    else if ((_DWORD)v35)
    {
      if (*v33 == 115 && *(_DWORD *)(v33 + 1) == 1701012341 && *(_DWORD *)(v33 + 3) == 1936942435)
      {
LABEL_133:
        v36 = &off_1E32C5648;
        goto LABEL_48;
      }
      v94 = 0;
      v95 = 7;
      v93 = 0x100000000;
    }
    else if (*(_WORD *)v33 == 115)
    {
      v94 = 0;
      v95 = 7;
      if (*(_QWORD *)(v33 + 2) == 0x65006300630075 && *(_QWORD *)(v33 + 6) == 0x73007300650063)
        goto LABEL_133;
    }
    else
    {
      v94 = 0;
      v95 = 7;
    }
    if (v33 == "unknown" || v94)
    {
      if (v34 != 7 || v33 != "unknown")
        goto LABEL_44;
    }
    else if (v95)
    {
      if (v93)
      {
        if (*v33 != 117 || *(_DWORD *)(v33 + 1) != 1869507438 || *(_DWORD *)(v33 + 3) != 1853321070)
          goto LABEL_44;
      }
      else
      {
        if (*(_WORD *)v33 != 117)
          goto LABEL_44;
        if (*(_QWORD *)(v33 + 6) != 0x6E0077006F006ELL || *(_QWORD *)(v33 + 2) != 0x6F006E006B006ELL)
          goto LABEL_44;
      }
    }
    v36 = &off_1E32C5660;
LABEL_48:
    v30 = *((unsigned int *)v36 + 4) | 0x100000000;
LABEL_49:
    v110 = 0;
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v32, v25);
    else
      *(_DWORD *)v32 -= 2;
    goto LABEL_51;
  }
LABEL_150:
  v30 = 0;
LABEL_51:
  if (!*((_DWORD *)v31 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v31) & 1) == 0)
  {
    if ((v30 & 0x100000000) != 0)
    {
      v28 = *((_DWORD *)a2 + 8);
LABEL_54:
      if ((unint64_t)(v28 - 3) < 0xFFFFFFFFFFFFFFFELL)
      {
        v37 = (JSC::JSCell *)*((_QWORD *)a2 + 7);
        v38 = (JSC::VM *)*((_QWORD *)this + 7);
        v112 = v38;
        if (((unint64_t)v37 & 0xFFFFFFFFFFFFFFF7) != 2)
        {
          if (((unint64_t)v37 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v37)) == 0)
          {
            JSC::throwTypeError();
          }
          else
          {
            v40 = (JSC::Structure *)Object;
            WTF::AtomStringImpl::addLiteral();
            v41 = v113;
            v43 = JSC::JSObject::get(v40, this, (unint64_t)v113);
            if (v41)
            {
              if (*(_DWORD *)v41 == 2)
                WTF::StringImpl::destroy(v41, v42);
              else
                *(_DWORD *)v41 -= 2;
            }
            if (*((_DWORD *)v38 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v38))
              goto LABEL_156;
            if (v43 == 10)
              goto LABEL_63;
            if ((v43 & 0xFFFFFFFFFFFFFFF7) == 2)
            {
              v44 = 0;
              v72 = 0;
              v110 = 0;
              v111 = 0;
LABEL_117:
              v86 = 1;
              goto LABEL_118;
            }
            WebCore::Converter<WebCore::IDLObject>::convert<WebCore::DefaultExceptionThrower>((uint64_t)this, v43, (uint64_t)&v113);
            LOBYTE(v110) = 0;
            v111 = -1;
            v72 = v114;
            if (v114 != -1)
            {
              ((void (*)(_BYTE *, _QWORD **, WTF::StringImpl **))off_1E32CCCC8[v114])(v115, &v110, &v113);
              v111 = v72;
              if (v114 != -1)
              {
                ((void (*)(_BYTE *, WTF::StringImpl **))off_1E32CB060[v114])(v115, &v113);
                v72 = v111;
              }
              if (v72)
              {
                v109 = 1;
                if (v72 == -1)
                  goto LABEL_68;
                v44 = 0;
                v86 = 0;
LABEL_118:
                ((void (*)(WTF::StringImpl **, _QWORD **))off_1E32CB060[v72])(&v113, &v110);
                if ((v86 & 1) == 0)
                {
                  if (!v44)
                    goto LABEL_68;
                  goto LABEL_65;
                }
                v108 = 0;
                if (!v44)
                {
LABEL_64:
                  v109 = 0;
                  if (!v44)
                    goto LABEL_68;
LABEL_65:
                  v45 = v44 - 2;
                  v46 = *(_QWORD *)(((unint64_t)(v44 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
                  v47 = (uint64_t *)*(v44 - 1);
                  if (v47)
                  {
                    v48 = *v45;
                    *v47 = *v45;
                    *(_QWORD *)(v48 + 8) = v47;
                    *v45 = 0;
                    *(v44 - 1) = 0;
                  }
                  *v45 = *(_QWORD *)(v46 + 40);
                  *(_QWORD *)(v46 + 40) = v45;
LABEL_68:
                  v49 = v109;
                  if (v109)
                  {
                    if (v109 == -1)
                    {
LABEL_93:
                      v13 = v106;
                      v5 = v107;
                      if (!v14)
                        goto LABEL_96;
                      goto LABEL_94;
                    }
                  }
                  else
                  {
                    v50 = v27 - 192;
                    LODWORD(v110) = v30;
                    BYTE4(v110) = 1;
                    v51 = v108;
                    if (v108)
                    {
                      v52 = *(_QWORD *)((((unint64_t)v108 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
                      v53 = *(_QWORD *)(v52 + 40);
                      if (!v53)
                      {
                        JSC::HandleSet::grow(*(JSC::HandleSet **)((((unint64_t)v108 - 16) & 0xFFFFFFFFFFFFF000)
                                                                + 0x10));
                        v53 = *(_QWORD *)(v52 + 40);
                      }
                      *(_QWORD *)(v52 + 40) = *(_QWORD *)v53;
                      *(_QWORD *)(v53 + 16) = 0;
                      v54 = (uint64_t *)(v53 + 16);
                      *(_QWORD *)v53 = 0;
                      *(_QWORD *)(v53 + 8) = 0;
                      v55 = *(_QWORD *)v51;
                      if (*(_QWORD *)v51)
                      {
                        v96 = *(uint64_t **)((v53 & 0xFFFFFFFFFFFFF000) + 0x10);
                        v97 = v96[3];
                        v96 += 3;
                        *(_QWORD *)v53 = v97;
                        *(_QWORD *)(v53 + 8) = v96;
                        *v96 = v53;
                        *(_QWORD *)(v97 + 8) = v53;
                      }
                      *v54 = v55;
                      v56 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF000) + 0x10);
                      v57 = *(_QWORD **)(v56 + 40);
                      if (!v57)
                      {
                        JSC::HandleSet::grow(*(JSC::HandleSet **)((v53 & 0xFFFFFFFFFFFFF000) + 0x10));
                        v57 = *(_QWORD **)(v56 + 40);
                      }
                      *(_QWORD *)(v56 + 40) = *v57;
                      v57[2] = 0;
                      v58 = v57 + 2;
                      *v57 = 0;
                      v57[1] = 0;
                      v113 = (WTF::StringImpl *)(v57 + 2);
                      v59 = *v54;
                      if (*v54)
                      {
                        v60 = *(_QWORD **)(((unint64_t)(v58 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
                        v61 = v60[3];
                        v60 += 3;
                        *(v58 - 2) = v61;
                        *(v58 - 1) = v60;
                        *v60 = v58 - 2;
                        *(_QWORD *)(v61 + 8) = v58 - 2;
                      }
                      *v58 = v59;
                    }
                    else
                    {
                      v113 = 0;
                      v53 = -16;
                    }
                    LOBYTE(v114) = 1;
                    v112 = v14;
                    WebCore::PaymentResponse::complete(v105 - 24, v50, (uint64_t)&v110, (uint64_t **)&v113, (WTF::StringImpl *)&v112);
                    v62 = v112;
                    v112 = 0;
                    if (v62)
                    {
                      if (*((_DWORD *)v62 + 4) == 1)
                        (*(void (**)(JSC::VM *))(*(_QWORD *)v62 + 16))(v62);
                      else
                        --*((_DWORD *)v62 + 4);
                    }
                    if ((_BYTE)v114 && v113)
                    {
                      v63 = (uint64_t *)((char *)v113 - 16);
                      v64 = *(_QWORD *)((((unint64_t)v113 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
                      v65 = (uint64_t *)*((_QWORD *)v113 - 1);
                      if (v65)
                      {
                        v66 = *v63;
                        *v65 = *v63;
                        *(_QWORD *)(v66 + 8) = v65;
                        *v63 = 0;
                        v63[1] = 0;
                      }
                      *v63 = *(_QWORD *)(v64 + 40);
                      *(_QWORD *)(v64 + 40) = v63;
                      v113 = 0;
                    }
                    if (v51)
                    {
                      v67 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF000) + 0x10);
                      v68 = *(_QWORD **)(v53 + 8);
                      if (v68)
                      {
                        v69 = *(_QWORD *)v53;
                        *v68 = *(_QWORD *)v53;
                        *(_QWORD *)(v69 + 8) = v68;
                        *(_QWORD *)v53 = 0;
                        *(_QWORD *)(v53 + 8) = 0;
                      }
                      *(_QWORD *)v53 = *(_QWORD *)(v67 + 40);
                      *(_QWORD *)(v67 + 40) = v53;
                    }
                    v14 = 0;
                  }
                  ((void (*)(WTF::StringImpl **, JSC::VM **))off_1E32CB5F0[v49])(&v113, &v108);
                  goto LABEL_93;
                }
LABEL_120:
                v87 = *(_QWORD *)(((unint64_t)(v44 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
                v88 = *(_QWORD **)(v87 + 40);
                if (!v88)
                {
                  JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v44 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
                  v88 = *(_QWORD **)(v87 + 40);
                }
                *(_QWORD *)(v87 + 40) = *v88;
                v88[2] = 0;
                v89 = v88 + 2;
                *v88 = 0;
                v88[1] = 0;
                v108 = (JSC::VM *)(v88 + 2);
                v90 = *v44;
                if (*v44)
                {
                  v91 = *(_QWORD **)(((unint64_t)(v89 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
                  v92 = v91[3];
                  v91 += 3;
                  *(v89 - 2) = v92;
                  *(v89 - 1) = v91;
                  *v91 = v89 - 2;
                  *(_QWORD *)(v92 + 8) = v89 - 2;
                }
                *v89 = v90;
                goto LABEL_64;
              }
              v73 = v110;
              if (!v110)
              {
                v44 = 0;
                v72 = 0;
                goto LABEL_117;
              }
              v74 = *(_QWORD *)(((unint64_t)(v110 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
              v75 = *(_QWORD **)(v74 + 40);
              if (v75)
              {
                *(_QWORD *)(v74 + 40) = *v75;
                v75[2] = 0;
                v76 = v75 + 2;
                *v75 = 0;
                v75[1] = 0;
              }
              else
              {
                JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v110 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
                v103 = *(_QWORD **)(v74 + 40);
                v73 = v110;
                *(_QWORD *)(v74 + 40) = *v103;
                *v103 = 0;
                v103[1] = 0;
                v103[2] = 0;
                v76 = v103 + 2;
                if (!v73)
                {
                  v77 = 0;
                  goto LABEL_110;
                }
              }
              v77 = *v73;
              if (*v73)
              {
                v101 = *(_QWORD **)(((unint64_t)(v76 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
                v102 = v101[3];
                v101 += 3;
                *(v76 - 2) = v102;
                *(v76 - 1) = v101;
                *v101 = v76 - 2;
                *(_QWORD *)(v102 + 8) = v76 - 2;
              }
LABEL_110:
              *v76 = v77;
              v78 = (unint64_t)(v76 - 2);
              v79 = **(_QWORD **)((v78 & 0xFFFFFFFFFFFFF000) + 0x10);
              v80 = *(_QWORD *)(v79 + 712);
              if (!v80)
              {
                JSC::HandleSet::grow((JSC::HandleSet *)(v79 + 672));
                v80 = *(_QWORD *)(v79 + 712);
              }
              *(_QWORD *)(v79 + 712) = *(_QWORD *)v80;
              *(_QWORD *)(v80 + 16) = 0;
              v44 = (uint64_t *)(v80 + 16);
              *(_QWORD *)v80 = 0;
              *(_QWORD *)(v80 + 8) = 0;
              if (v77)
              {
                v81 = *(unint64_t **)((v80 & 0xFFFFFFFFFFFFF000) + 0x10);
                v82 = v81[3];
                v81 += 3;
                *(_QWORD *)v80 = v82;
                *(_QWORD *)(v80 + 8) = v81;
                *v81 = v80;
                *(_QWORD *)(v82 + 8) = v80;
              }
              *v44 = v77;
              v83 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFF000) + 0x10);
              v84 = *(_QWORD **)(v78 + 8);
              if (v84)
              {
                v85 = *(_QWORD *)v78;
                *v84 = *(_QWORD *)v78;
                *(_QWORD *)(v85 + 8) = v84;
                *(_QWORD *)v78 = 0;
                *(_QWORD *)(v78 + 8) = 0;
              }
              *(_QWORD *)v78 = *(_QWORD *)(v83 + 40);
              *(_QWORD *)(v83 + 40) = v78;
              v72 = v111;
              if (v111 == -1)
                goto LABEL_120;
              goto LABEL_117;
            }
          }
LABEL_156:
          v109 = 1;
          goto LABEL_68;
        }
LABEL_63:
        v44 = 0;
        v108 = 0;
        goto LABEL_64;
      }
LABEL_31:
      v112 = (JSC::VM *)*((_QWORD *)this + 7);
      goto LABEL_63;
    }
    WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v108, 0, "result", 7, "PaymentResponse", 16, v26, "complete", 9, "\"fail\", \"success\", \"unknown\"", 29);
  }
  v13 = v106;
LABEL_94:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_96:
  v70 = *(_QWORD *)(v5 + 16);
  if (v70)
  {
    if (*(_QWORD *)(v5 + 24) != v70)
    {
      v98 = *(objc_class **)(v70 + 8);
      JSC::VM::clearException((JSC::VM *)v5);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v113);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v113, v98, 0);
      v99 = (uint64_t *)v113;
      v113 = 0;
      if (v99)
      {
        if (*((_DWORD *)v99 + 4) == 1)
          (*(void (**)(uint64_t *))(*v99 + 16))(v99);
        else
          --*((_DWORD *)v99 + 4);
      }
    }
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsPaymentResponsePrototypeFunction_retry(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  WTF::StringImpl *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  JSC::JSCell *v25;
  JSC::VM *v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  WTF::StringImpl *v50;
  _DWORD *v51;
  uint64_t v52;
  uint64_t Object;
  JSC::Structure *v55;
  uint64_t v56;
  JSC::VM *v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  JSC::JSCell *v63;
  int v64;
  __int128 v65;
  uint64_t v66;
  WTF::StringImpl *v67;
  WTF::StringImpl *v68;
  WTF::StringImpl *v69;
  int v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  uint64_t v73;
  int v74;
  uint64_t *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  unint64_t *v86;
  unint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  int v91;
  WTF::StringImpl *v92;
  JSC::JSCell *v93;
  unsigned int v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  WTF::StringImpl *v101;
  unint64_t *v102;
  unint64_t v103;
  objc_class *v104;
  _DWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  char hasExceptionsAfterHandlingTraps;
  int v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t *v127;
  int v128;
  _OWORD v129[6];
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  unsigned int v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  _QWORD *v145;
  JSC::VM *v146;
  WTF::StringImpl *v147;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194DFB9A4);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_145;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSPaymentResponse::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSPaymentResponse::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_145:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"PaymentResponse", "retry", v17);
    goto LABEL_50;
  }
  v24 = *(_QWORD *)(v18 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v146 = (JSC::VM *)*((_QWORD *)this + 7);
    goto LABEL_29;
  }
  v118 = *(_QWORD *)(v18 + 24);
  v25 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
  v26 = (JSC::VM *)*((_QWORD *)this + 7);
  v146 = v26;
  if (((unint64_t)v25 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v24 = v118;
LABEL_29:
    v145 = 0;
    v143 = 0u;
    v144 = 0u;
    v141 = 0u;
    v142 = 0u;
    v139 = 0u;
    v140 = 0u;
    v137 = 0u;
    v138 = 0u;
LABEL_30:
    v119 = v137;
    v120 = v138;
    v121 = v139;
    v122 = v140;
    v123 = v141;
    v124 = v142;
    v27 = v144;
    v125 = v143;
    v137 = 0u;
    v138 = 0u;
    v139 = 0u;
    v140 = 0u;
    v141 = 0u;
    v142 = 0u;
    v143 = 0u;
    v144 = 0u;
    v126 = v27;
    v127 = 0;
    if (v145)
    {
      v28 = *(_QWORD *)(((unint64_t)(v145 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
      v29 = *(_QWORD *)(v28 + 40);
      if (!v29)
      {
        JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v145 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
        v29 = *(_QWORD *)(v28 + 40);
      }
      *(_QWORD *)(v28 + 40) = *(_QWORD *)v29;
      *(_QWORD *)(v29 + 16) = 0;
      v30 = (_QWORD *)(v29 + 16);
      *(_QWORD *)v29 = 0;
      *(_QWORD *)(v29 + 8) = 0;
      v127 = (uint64_t *)(v29 + 16);
      if (v145)
      {
        v31 = *v145;
        if (*v145)
        {
          v102 = *(unint64_t **)((v29 & 0xFFFFFFFFFFFFF000) + 0x10);
          v103 = v102[3];
          v102 += 3;
          *(_QWORD *)v29 = v103;
          *(_QWORD *)(v29 + 8) = v102;
          *v102 = v29;
          *(_QWORD *)(v103 + 8) = v29;
        }
      }
      else
      {
        v31 = 0;
      }
      v32 = 0;
      *v30 = v31;
    }
    else
    {
      v32 = 0;
    }
    goto LABEL_37;
  }
  if (((unint64_t)v25 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v25)) == 0)
  {
    JSC::throwTypeError();
    v33 = 1;
    v128 = 1;
    goto LABEL_49;
  }
  v55 = (JSC::Structure *)Object;
  v117 = v13;
  v145 = 0;
  v143 = 0u;
  v144 = 0u;
  v141 = 0u;
  v142 = 0u;
  v139 = 0u;
  v140 = 0u;
  v137 = 0u;
  v138 = 0u;
  WTF::AtomStringImpl::addLiteral();
  v56 = JSC::JSObject::get(v55, this, v130);
  if ((_QWORD)v130)
  {
    if (*(_DWORD *)v130 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v130, v16);
    else
      *(_DWORD *)v130 -= 2;
  }
  if (!*((_DWORD *)v26 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) == 0)
  {
    if (v56 == 10)
      goto LABEL_74;
    *(_QWORD *)&v129[0] = v56;
    v57 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((v56 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v56 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v129, this);
LABEL_68:
      if (!*((_DWORD *)v57 + 20))
      {
        v59 = v147;
LABEL_70:
        DWORD2(v130) = 0;
        goto LABEL_71;
      }
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v57);
      v59 = v147;
      if ((hasExceptionsAfterHandlingTraps & 1) == 0)
        goto LABEL_70;
      v109 = 1;
      DWORD2(v130) = 1;
      v147 = 0;
      if (v59)
      {
        if (*(_DWORD *)v59 == 2)
        {
          WTF::StringImpl::destroy(v59, v16);
          v109 = DWORD2(v130);
          if (!DWORD2(v130))
          {
            v59 = (WTF::StringImpl *)v130;
LABEL_71:
            *(_QWORD *)&v130 = 0;
            v60 = (WTF::StringImpl *)*((_QWORD *)&v144 + 1);
            *((_QWORD *)&v144 + 1) = v59;
            if (v60)
            {
              if (*(_DWORD *)v60 == 2)
              {
                WTF::StringImpl::destroy(v60, v16);
                if (DWORD2(v130) != -1)
                  ((void (*)(_OWORD *, __int128 *))off_1E32C9390[DWORD2(v130)])(v129, &v130);
              }
              else
              {
                *(_DWORD *)v60 -= 2;
              }
            }
LABEL_74:
            WTF::AtomStringImpl::addLiteral();
            v61 = (WTF::StringImpl *)v130;
            v63 = (JSC::JSCell *)JSC::JSObject::get(v55, this, v130);
            if (v61)
            {
              if (*(_DWORD *)v61 == 2)
                WTF::StringImpl::destroy(v61, v62);
              else
                *(_DWORD *)v61 -= 2;
            }
            if (*((_DWORD *)v26 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
              goto LABEL_169;
            if (v63 == (JSC::JSCell *)10)
              goto LABEL_93;
            WebCore::convertDictionary<WebCore::PayerErrorFields>((uint64_t)&v130, this, v63);
            v64 = DWORD2(v131);
            if (DWORD2(v131))
            {
              v128 = 1;
              v70 = DWORD2(v131);
            }
            else
            {
              v65 = v130;
              v130 = 0uLL;
              v66 = v131;
              *(_QWORD *)&v131 = 0;
              v67 = (WTF::StringImpl *)v137;
              *(_QWORD *)&v137 = v65;
              if (v67)
              {
                if (*(_DWORD *)v67 == 2)
                  WTF::StringImpl::destroy(v67, v16);
                else
                  *(_DWORD *)v67 -= 2;
              }
              v68 = (WTF::StringImpl *)*((_QWORD *)&v137 + 1);
              *((_QWORD *)&v137 + 1) = *((_QWORD *)&v65 + 1);
              if (v68)
              {
                if (*(_DWORD *)v68 == 2)
                  WTF::StringImpl::destroy(v68, v16);
                else
                  *(_DWORD *)v68 -= 2;
              }
              v69 = (WTF::StringImpl *)v138;
              *(_QWORD *)&v138 = v66;
              if (v69)
              {
                if (*(_DWORD *)v69 == 2)
                  WTF::StringImpl::destroy(v69, v16);
                else
                  *(_DWORD *)v69 -= 2;
              }
              v70 = DWORD2(v131);
            }
            if (v70 != -1)
              ((void (*)(_OWORD *, __int128 *))off_1E32CB0B0[v70])(v129, &v130);
            if (!v64)
            {
LABEL_93:
              WTF::AtomStringImpl::addLiteral();
              v71 = (WTF::StringImpl *)v130;
              v73 = JSC::JSObject::get(v55, this, v130);
              if (v71)
              {
                if (*(_DWORD *)v71 == 2)
                  WTF::StringImpl::destroy(v71, v72);
                else
                  *(_DWORD *)v71 -= 2;
              }
              if (*((_DWORD *)v26 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
                goto LABEL_169;
              if (v73 == 10)
                goto LABEL_119;
              WebCore::Converter<WebCore::IDLObject>::convert<WebCore::DefaultExceptionThrower>((uint64_t)this, v73, (uint64_t)&v130);
              v74 = DWORD2(v130);
              if (DWORD2(v130))
              {
                v128 = 1;
                v91 = DWORD2(v130);
LABEL_115:
                if (v91 != -1)
                  ((void (*)(_OWORD *, __int128 *))off_1E32CB060[v91])(v129, &v130);
                if (v74)
                  goto LABEL_118;
LABEL_119:
                WTF::AtomStringImpl::addLiteral();
                v92 = (WTF::StringImpl *)v130;
                v93 = (JSC::JSCell *)JSC::JSObject::get(v55, this, v130);
                if (v92)
                {
                  if (*(_DWORD *)v92 == 2)
                    WTF::StringImpl::destroy(v92, v16);
                  else
                    *(_DWORD *)v92 -= 2;
                }
                if (!*((_DWORD *)v146 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v146) & 1) == 0)
                {
                  v13 = v117;
                  v24 = v118;
                  if (v93 != (JSC::JSCell *)10)
                  {
                    WebCore::convertDictionary<WebCore::AddressErrors>(v93, this, (uint64_t)&v130);
                    v94 = v136;
                    if (v136)
                    {
                      v128 = 1;
                    }
                    else
                    {
                      v95 = v130;
                      v96 = v131;
                      v130 = 0u;
                      v131 = 0u;
                      v129[0] = v95;
                      v129[1] = v96;
                      v97 = v132;
                      v98 = v133;
                      v132 = 0u;
                      v133 = 0u;
                      v129[2] = v97;
                      v129[3] = v98;
                      v99 = v134;
                      v100 = v135;
                      v134 = 0u;
                      v135 = 0u;
                      v129[4] = v99;
                      v129[5] = v100;
                      WebCore::AddressErrors::operator=((WTF::StringImpl **)&v138 + 1, (WTF::StringImpl *)v129);
                      WebCore::AddressErrors::~AddressErrors((WebCore::AddressErrors *)v129, v101);
                    }
                    if (v136 != -1)
                      (*(&off_1E32CB0C0 + v136))((int)v129, (WebCore::AddressErrors *)&v130);
                    if (v94)
                      goto LABEL_38;
                  }
                  goto LABEL_30;
                }
                goto LABEL_169;
              }
              v75 = (uint64_t *)v130;
              if (!(_QWORD)v130)
              {
                if (v145)
                {
                  v110 = v145 - 2;
                  v111 = *(_QWORD *)(((unint64_t)(v145 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
                  v112 = (uint64_t *)*(v145 - 1);
                  if (v112)
                  {
                    v113 = *v110;
                    *v112 = *v110;
                    *(_QWORD *)(v113 + 8) = v112;
                    *v110 = 0;
                    v110[1] = 0;
                  }
                  *v110 = *(_QWORD *)(v111 + 40);
                  *(_QWORD *)(v111 + 40) = v110;
                  v145 = 0;
                }
                goto LABEL_114;
              }
              v76 = *(_QWORD *)(((v130 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
              v77 = *(_QWORD **)(v76 + 40);
              if (v77)
              {
                *(_QWORD *)(v76 + 40) = *v77;
                v77[2] = 0;
                v78 = v77 + 2;
                *v77 = 0;
                v77[1] = 0;
              }
              else
              {
                JSC::HandleSet::grow(*(JSC::HandleSet **)(((v130 - 16) & 0xFFFFFFFFFFFFF000) + 0x10));
                v114 = *(_QWORD **)(v76 + 40);
                v75 = (uint64_t *)v130;
                *(_QWORD *)(v76 + 40) = *v114;
                *v114 = 0;
                v114[1] = 0;
                v114[2] = 0;
                v78 = v114 + 2;
                if (!v75)
                {
                  v79 = 0;
LABEL_104:
                  *v78 = v79;
                  v80 = (unint64_t)(v78 - 2);
                  v81 = v145;
                  if (!v145)
                  {
                    v82 = *(uint64_t **)((v80 & 0xFFFFFFFFFFFFF000) + 0x10);
                    v83 = *v82;
                    v84 = *(_QWORD **)(*v82 + 712);
                    if (!v84)
                    {
                      JSC::HandleSet::grow((JSC::HandleSet *)(v83 + 672));
                      v84 = *(_QWORD **)(v83 + 712);
                    }
                    *(_QWORD *)(v83 + 712) = *v84;
                    v84[2] = 0;
                    v81 = v84 + 2;
                    *v84 = 0;
                    v84[1] = 0;
                    v145 = v84 + 2;
                    v74 = 0;
                  }
                  v85 = (unint64_t)(v81 - 2);
                  if ((v79 != 0) != (*v81 != 0))
                  {
                    if (v79)
                    {
                      v86 = *(unint64_t **)((v85 & 0xFFFFFFFFFFFFF000) + 0x10);
                      v87 = v86[3];
                      v86 += 3;
                      *(_QWORD *)v85 = v87;
                      *(v81 - 1) = v86;
                      *v86 = v85;
                      *(_QWORD *)(v87 + 8) = v85;
                    }
                    else
                    {
                      v116 = *(_QWORD *)v85;
                      v115 = (_QWORD *)*(v81 - 1);
                      *v115 = *(_QWORD *)v85;
                      *(_QWORD *)(v116 + 8) = v115;
                      *(_QWORD *)v85 = 0;
                      *(_QWORD *)(v85 + 8) = 0;
                      v81 = v145;
                    }
                  }
                  *v81 = v79;
                  v88 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF000) + 0x10);
                  v89 = *(_QWORD **)(v80 + 8);
                  if (v89)
                  {
                    v90 = *(_QWORD *)v80;
                    *v89 = *(_QWORD *)v80;
                    *(_QWORD *)(v90 + 8) = v89;
                    *(_QWORD *)v80 = 0;
                    *(_QWORD *)(v80 + 8) = 0;
                  }
                  *(_QWORD *)v80 = *(_QWORD *)(v88 + 40);
                  *(_QWORD *)(v88 + 40) = v80;
LABEL_114:
                  v91 = DWORD2(v130);
                  goto LABEL_115;
                }
              }
              v79 = *v75;
              if (*v75)
              {
                v106 = *(_QWORD **)(((unint64_t)(v78 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
                v107 = v106[3];
                v106 += 3;
                *(v78 - 2) = v107;
                *(v78 - 1) = v106;
                *v106 = v78 - 2;
                *(_QWORD *)(v107 + 8) = v78 - 2;
              }
              goto LABEL_104;
            }
LABEL_118:
            v13 = v117;
            v24 = v118;
            goto LABEL_38;
          }
          v128 = 1;
          if (DWORD2(v130) == -1)
            goto LABEL_118;
LABEL_166:
          ((void (*)(_OWORD *, __int128 *))off_1E32C9390[v109])(v129, &v130);
          goto LABEL_118;
        }
        *(_DWORD *)v59 -= 2;
      }
      v128 = 1;
      goto LABEL_166;
    }
    v58 = *(WTF::StringImpl **)(v56 + 8);
    if ((v58 & 1) != 0)
    {
      v58 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v56, this);
      if (!v58)
        goto LABEL_67;
    }
    else if (!v58)
    {
LABEL_67:
      v147 = v58;
      goto LABEL_68;
    }
    *(_DWORD *)v58 += 2;
    goto LABEL_67;
  }
LABEL_169:
  v32 = 1;
  v13 = v117;
  v24 = v118;
LABEL_37:
  v128 = v32;
LABEL_38:
  WebCore::PaymentValidationErrors::~PaymentValidationErrors((WebCore::PaymentValidationErrors *)&v137, v16);
  v33 = v128;
  if (!v128)
  {
    v34 = v119;
    v35 = v120;
    v119 = 0u;
    v120 = 0u;
    v137 = v34;
    v138 = v35;
    v36 = v121;
    v37 = v122;
    v121 = 0u;
    v122 = 0u;
    v139 = v36;
    v140 = v37;
    v38 = v123;
    v39 = v124;
    v123 = 0u;
    v124 = 0u;
    v141 = v38;
    v142 = v39;
    v40 = v125;
    v125 = 0u;
    v41 = v126;
    v126 = 0u;
    v42 = v24 - 24;
    v143 = v40;
    v144 = v41;
    v145 = 0;
    v43 = v127;
    if (v127)
    {
      v44 = *(_QWORD *)(((unint64_t)(v127 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
      v45 = *(_QWORD **)(v44 + 40);
      if (!v45)
      {
        JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v127 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
        v45 = *(_QWORD **)(v44 + 40);
      }
      *(_QWORD *)(v44 + 40) = *v45;
      v45[2] = 0;
      v46 = v45 + 2;
      *v45 = 0;
      v45[1] = 0;
      v145 = v45 + 2;
      v47 = *v43;
      if (*v43)
      {
        v48 = *(_QWORD **)(((unint64_t)(v46 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v49 = v48[3];
        v48 += 3;
        *(v46 - 2) = v49;
        *(v46 - 1) = v48;
        *v48 = v46 - 2;
        *(_QWORD *)(v49 + 8) = v46 - 2;
      }
      *v46 = v47;
    }
    *(_QWORD *)&v130 = v14;
    WebCore::PaymentResponse::retry(v42, (uint64_t)&v137, (uint64_t *)&v130);
    v51 = (_DWORD *)v130;
    *(_QWORD *)&v130 = 0;
    if (v51)
    {
      if (v51[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v51 + 16))(v51);
      else
        --v51[4];
    }
    WebCore::PaymentValidationErrors::~PaymentValidationErrors((WebCore::PaymentValidationErrors *)&v137, v50);
    v33 = 0;
    v14 = 0;
LABEL_49:
    (*(&off_1E32CB600 + v33))((int)&v137, (WebCore::PaymentValidationErrors *)&v119);
    if (!v14)
      goto LABEL_52;
    goto LABEL_50;
  }
  if (v128 != -1)
    goto LABEL_49;
LABEL_50:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_52:
  v52 = *(_QWORD *)(v10 + 16);
  if (v52)
  {
    if (*(_QWORD *)(v10 + 24) != v52)
    {
      v104 = *(objc_class **)(v52 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, (WebCore::DOMGuardedObject **)&v119);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>(v119, v104, 0);
      v105 = (_DWORD *)v119;
      *(_QWORD *)&v119 = 0;
      if (v105)
      {
        if (v105[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v105 + 16))(v105);
        else
          --v105[4];
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore22PaymentCompleteDetailsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v2 = *a2;
  if (*a2)
  {
    v3 = (uint64_t *)(v2 - 16);
    v4 = *(_QWORD *)(((v2 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
    v5 = *(uint64_t **)(v2 - 8);
    if (v5)
    {
      v6 = *v3;
      *v5 = *v3;
      *(_QWORD *)(v6 + 8) = v5;
      *v3 = 0;
      v3[1] = 0;
    }
    *v3 = *(_QWORD *)(v4 + 40);
    *(_QWORD *)(v4 + 40) = v3;
    *a2 = 0;
  }
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore23PaymentValidationErrorsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(int a1, WebCore::PaymentValidationErrors *this)
{
  WebCore::PaymentValidationErrors::~PaymentValidationErrors(this, this);
}

void WebCore::PaymentValidationErrors::~PaymentValidationErrors(WebCore::PaymentValidationErrors *this, WTF::StringImpl *a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;

  v3 = *((_QWORD *)this + 16);
  if (v3)
  {
    v4 = (uint64_t *)(v3 - 16);
    v5 = *(_QWORD *)(((v3 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
    v6 = *(uint64_t **)(v3 - 8);
    if (v6)
    {
      v7 = *v4;
      *v6 = *v4;
      *(_QWORD *)(v7 + 8) = v6;
      *v4 = 0;
      v4[1] = 0;
    }
    *v4 = *(_QWORD *)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;
    *((_QWORD *)this + 16) = 0;
  }
  v8 = (WTF::StringImpl *)*((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v8)
  {
    if (*(_DWORD *)v8 == 2)
      WTF::StringImpl::destroy(v8, a2);
    else
      *(_DWORD *)v8 -= 2;
  }
  WebCore::AddressErrors::~AddressErrors((WebCore::PaymentValidationErrors *)((char *)this + 24), a2);
  v10 = (WTF::StringImpl *)*((_QWORD *)this + 2);
  *((_QWORD *)this + 2) = 0;
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
      WTF::StringImpl::destroy(v10, v9);
    else
      *(_DWORD *)v10 -= 2;
  }
  v11 = (WTF::StringImpl *)*((_QWORD *)this + 1);
  *((_QWORD *)this + 1) = 0;
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v9);
    else
      *(_DWORD *)v11 -= 2;
  }
  v12 = *(WTF::StringImpl **)this;
  *(_QWORD *)this = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v9);
    else
      *(_DWORD *)v12 -= 2;
  }
}

uint64_t WebCore::CryptoAlgorithmPbkdf2Params::parametersClass(WebCore::CryptoAlgorithmPbkdf2Params *this)
{
  return 10;
}

_BYTE *WebCore::jsPerformancePrototypeFunction_now(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v14;

  v3 = *((_QWORD *)a2 + 5);
  v14 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v14, "Performance", "now");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPerformance::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPerformance::s_info && v6 != 0);
  }
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v14, "Performance", "now");
  v8 = *(_QWORD *)(v3 + 24);
  WTF::MonotonicTime::now(this);
  v10 = *(double *)&WebCore::timePrecision
      * floor((v9 - *(double *)(v8 + 144)) / *(double *)&WebCore::timePrecision)
      * 1000.0;
  if ((*(_QWORD *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v11 = (int)v10, v10 == (double)(int)v11)
    && ((_DWORD)v11 || (*(_QWORD *)&v10 & 0x8000000000000000) == 0))
  {
    return (_BYTE *)(v11 | 0xFFFE000000000000);
  }
  else
  {
    return (_BYTE *)(*(_QWORD *)&v10 + 0x2000000000000);
  }
}

_BYTE *WebCore::jsPerformancePrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WebCore::Performance *v21;
  _DWORD *v22;
  uint64_t v23;
  _BOOL4 v24;
  char **v25;
  BOOL v26;
  WTF *v28;
  unint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  _DWORD *v32;
  uint64_t v33;
  _BOOL4 v34;
  char **v35;
  BOOL v36;
  WTF *v38;
  unint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  unint64_t v43;
  uint64_t v44;
  uint64_t Slow;
  uint64_t v46;
  WTF::StringImpl *v47;
  unint64_t v48;
  int v49;
  int v50;
  uint64_t v51;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v46 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "Performance", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPerformance::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPerformance::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "Performance", "toJSON");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (!v12)
  {
    Slow = JSC::CompleteSubspace::allocateSlow();
    goto LABEL_75;
  }
  v13 = *(unsigned int *)(v12 + 60);
  v14 = *(_QWORD *)(v12 + 24);
  if (v14 >= *(_QWORD *)(v12 + 32))
  {
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v43 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v43);
      *(_QWORD *)(v12 + 40) = v14 + (int)v43;
      goto LABEL_14;
    }
    v44 = *(_QWORD *)(v4 + 24);
    JSC::sanitizeStackForVM();
    v11 = v44;
    Slow = JSC::LocalAllocator::allocateSlowCase();
LABEL_75:
    v14 = Slow;
    goto LABEL_15;
  }
LABEL_14:
  *(_QWORD *)(v12 + 24) = v14 + v13;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)(v11 + 144));
  v16 = *(double *)&WebCore::timePrecision * floor(v15 / *(double *)&WebCore::timePrecision) * 1000.0;
  if ((*(_QWORD *)&v16 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v47;
  v47 = 0;
  v48 = v14;
  v49 = -1;
  v50 = 0x1000000;
  v51 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v47);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = (WebCore::Performance *)(v11 - 24);
  v22 = *(_DWORD **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v23 = *(unsigned int *)(16 * (*v22 & 0xFFFFFFFE) + 0x4C);
  v24 = *(_DWORD *)(16 * (*v22 & 0xFFFFFFFE) + 0x4C) != 0;
  v25 = (char **)(16 * v23);
  if ((_DWORD)v23)
    v26 = v25 == &WebCore::JSDOMWindowBase::s_info;
  else
    v26 = 1;
  if (!v26)
  {
    do
    {
      v25 = (char **)v25[2];
      v24 = v25 != 0;
    }
    while (v25 != &WebCore::JSDOMWindowBase::s_info && v25 != 0);
  }
  if (v24)
  {
    v28 = (WTF *)WebCore::Performance::navigation((WebCore::Performance *)(v11 - 24));
    if (v28)
      v29 = WebCore::wrap<WebCore::PerformanceNavigation>((uint64_t)v22, v28);
    else
      v29 = 2;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v30 = v47;
    v47 = 0;
    v48 = v14;
    v49 = -1;
    v50 = 0x1000000;
    v51 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v30, v29, 0, (uint64_t)&v47);
    if (v30)
    {
      if (*(_DWORD *)v30 == 2)
        WTF::StringImpl::destroy(v30, v31);
      else
        *(_DWORD *)v30 -= 2;
    }
  }
  v32 = *(_DWORD **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v33 = *(unsigned int *)(16 * (*v32 & 0xFFFFFFFE) + 0x4C);
  v34 = *(_DWORD *)(16 * (*v32 & 0xFFFFFFFE) + 0x4C) != 0;
  v35 = (char **)(16 * v33);
  if ((_DWORD)v33)
    v36 = v35 == &WebCore::JSDOMWindowBase::s_info;
  else
    v36 = 1;
  if (!v36)
  {
    do
    {
      v35 = (char **)v35[2];
      v34 = v35 != 0;
    }
    while (v35 != &WebCore::JSDOMWindowBase::s_info && v35 != 0);
  }
  if (v34)
  {
    v38 = (WTF *)WebCore::Performance::timing(v21);
    if (v38)
      v39 = WebCore::wrap<WebCore::PerformanceTiming>((uint64_t)v32, v38);
    else
      v39 = 2;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v40 = v47;
    v47 = 0;
    v48 = v14;
    v49 = -1;
    v50 = 0x1000000;
    v51 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v40, v39, 0, (uint64_t)&v47);
    if (v40)
    {
      if (*(_DWORD *)v40 == 2)
        WTF::StringImpl::destroy(v40, v41);
      else
        *(_DWORD *)v40 -= 2;
    }
  }
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsPerformancePrototypeFunction_getEntries(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  JSC::VM *v10;
  void *v11;
  uint64_t v12;
  WTF *v13;
  WTF *v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  WTF *v19;
  int v20;
  unsigned int v21;

  v4 = *((_QWORD *)a2 + 5);
  v18 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "Performance", "getEntries");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPerformance::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPerformance::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "Performance", "getEntries");
  v10 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::Performance::getEntries((WebCore::Performance *)(*(_QWORD *)(v4 + 24) - 24), (uint64_t *)&v19);
  v12 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::PerformanceEntry>>>::convert<WTF::Ref<WebCore::PerformanceEntry,WTF::RawPtrTraits<WebCore::PerformanceEntry>,WTF::DefaultRefDerefTraits<WebCore::PerformanceEntry>>,0ul>((uint64_t)this, v10, (uint64_t)&v19);
  if (v21)
  {
    v15 = v19;
    v16 = 8 * v21;
    do
    {
      v17 = *(_DWORD **)v15;
      *(_QWORD *)v15 = 0;
      if (v17)
      {
        if (v17[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v17 + 8))(v17);
        else
          --v17[2];
      }
      v15 = (WTF *)((char *)v15 + 8);
      v16 -= 8;
    }
    while (v16);
  }
  v13 = v19;
  if (v19)
  {
    v19 = 0;
    v20 = 0;
    WTF::fastFree(v13, v11);
  }
  return (_BYTE *)v12;
}

_BYTE *WebCore::jsPerformancePrototypeFunction_getEntriesByType(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSC::VM *v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  uint64_t v18;
  WTF *v21;
  uint64_t v22;
  _DWORD *v23;
  JSValue v25;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v27;
  JSC::VM *v28;
  WTF *v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  WTF::StringImpl *v34;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v28 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "Performance", "getEntriesByType");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPerformance::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPerformance::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "Performance", "getEntriesByType");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v25);
  }
  v10 = *(_QWORD *)(v5 + 24);
  v11 = *((_QWORD *)a2 + 6);
  v29 = (WTF *)v11;
  if ((v11 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v11 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v29, this);
  }
  else
  {
    v12 = *(WTF::StringImpl **)(v11 + 8);
    if ((v12 & 1) != 0)
      v12 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, this);
    if (v12)
      *(_DWORD *)v12 += 2;
    v34 = v12;
  }
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v13 = v34;
    if (hasExceptionsAfterHandlingTraps)
    {
      v33 = 1;
      v34 = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v27);
        else
          *(_DWORD *)v13 -= 2;
      }
      v16 = 0;
      v18 = 1;
      goto LABEL_25;
    }
  }
  else
  {
    v13 = v34;
  }
  v33 = 0;
  v14 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v32 = 0;
  v34 = v13;
  WebCore::Performance::getEntriesByType((WebCore::Performance *)(v10 - 24), (const WTF::String *)&v34, (uint64_t)&v29);
  v16 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::PerformanceEntry>>>::convert<WTF::Ref<WebCore::PerformanceEntry,WTF::RawPtrTraits<WebCore::PerformanceEntry>,WTF::DefaultRefDerefTraits<WebCore::PerformanceEntry>>,0ul>((uint64_t)this, v14, (uint64_t)&v29);
  if (v31)
  {
    v21 = v29;
    v22 = 8 * v31;
    do
    {
      v23 = *(_DWORD **)v21;
      *(_QWORD *)v21 = 0;
      if (v23)
      {
        if (v23[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v23 + 8))(v23);
        else
          --v23[2];
      }
      v21 = (WTF *)((char *)v21 + 8);
      v22 -= 8;
    }
    while (v22);
  }
  v17 = v29;
  if (v29)
  {
    v29 = 0;
    v30 = 0;
    WTF::fastFree(v17, v15);
  }
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, (WTF::StringImpl *)v15);
    else
      *(_DWORD *)v13 -= 2;
  }
  v18 = 0;
LABEL_25:
  ((void (*)(WTF **, uint64_t *))off_1E32C9390[v18])(&v29, &v32);
  return (_BYTE *)v16;
}

uint64_t WebCore::jsPerformancePrototypeFunction_clearResourceTimings(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  _DWORD **v11;
  uint64_t v12;
  _DWORD *v13;
  WTF *v14;
  uint64_t v16;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "Performance", "clearResourceTimings");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSPerformance::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSPerformance::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "Performance", "clearResourceTimings");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_DWORD *)(v9 + 48))
  {
    v10 = *(unsigned int *)(v9 + 52);
    if ((_DWORD)v10)
    {
      v11 = *(_DWORD ***)(v9 + 40);
      v12 = 8 * v10;
      do
      {
        v13 = *v11;
        *v11 = 0;
        if (v13)
        {
          if (v13[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 8))(v13);
          else
            --v13[2];
        }
        ++v11;
        v12 -= 8;
      }
      while (v12);
      *(_DWORD *)(v9 + 52) = 0;
    }
    v14 = *(WTF **)(v9 + 40);
    if (v14)
    {
      *(_QWORD *)(v9 + 40) = 0;
      *(_DWORD *)(v9 + 48) = 0;
      WTF::fastFree(v14, a2);
    }
  }
  *(_BYTE *)(v9 + 136) = 0;
  return 10;
}

uint64_t WebCore::jsPerformancePrototypeFunction_setResourceTimingBufferSize(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSValue v13;
  JSC::VM *v14;
  _DWORD v15[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v14 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "Performance", "setResourceTimingBufferSize");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPerformance::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPerformance::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "Performance", "setResourceTimingBufferSize");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v15);
    if (v15[1])
    {
      return 0;
    }
    else
    {
      *(_DWORD *)(v11 + 56) = v15[0];
      *(_BYTE *)(v11 + 136) = 0;
      return 10;
    }
  }
}

_BYTE *WebCore::jsPerformancePrototypeFunction_mark(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  JSC::VM *v16;
  WTF::StringImpl *v17;
  WebCore::JSDOMGlobalObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  JSValue v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  WebCore *v40;
  JSC::JSGlobalObject *v41;
  JSC::CallFrame *v42;
  uint64_t v43;
  WTF::StringImpl *v44[2];
  uint64_t v45;
  char v46;
  WTF::StringImpl *v47;
  uint64_t v48;
  WTF::StringImpl *v49;
  unsigned int v50;
  __int128 v51;
  uint64_t v52;
  int v53;
  WTF::StringImpl *v54;
  int v55;
  JSC::VM *v56;
  _DWORD *v57;
  WTF::StringImpl *v58;

  v4 = *((_QWORD *)this + 7);
  v43 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "Performance", "mark");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPerformance::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPerformance::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "Performance", "mark");
  v56 = (JSC::VM *)v4;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v37);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  *(_QWORD *)&v51 = v12;
  if ((v12 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v12 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v51, this);
  }
  else
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
    if (v13)
      *(_DWORD *)v13 += 2;
    v44[0] = v13;
  }
  if (*(_DWORD *)(v4 + 80))
  {
    v14 = v44[0];
    if (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    {
      v55 = 1;
      v44[0] = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v38);
        else
          *(_DWORD *)v14 -= 2;
      }
      v30 = 0;
      v33 = 1;
      goto LABEL_40;
    }
  }
  else
  {
    v14 = v44[0];
  }
  v54 = v14;
  v55 = 0;
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v15 = 10;
  else
    v15 = *((_QWORD *)a2 + 7);
  WebCore::convertDictionary<WebCore::PerformanceMarkOptions>((uint64_t)&v51, this, (JSC::JSCell *)v15);
  if (v53)
  {
    v30 = 0;
LABEL_39:
    v33 = 0;
LABEL_40:
    ((void (*)(__int128 *, WTF::StringImpl **))off_1E32C9390[v33])(&v51, &v54);
    return (_BYTE *)v30;
  }
  v16 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v54 = 0;
  v47 = v14;
  *(_OWORD *)v44 = v51;
  v45 = v52;
  v46 = 1;
  WebCore::Performance::mark((_QWORD *)(v11 - 24), this, (WebCore::ScriptExecutionContext *)&v47, (uint64_t)v44, (uint64_t)&v48);
  v19 = v50;
  if (!v50)
  {
    v20 = v48;
    v48 = 0;
    v21 = *(_QWORD *)(*((_QWORD *)v16 + 415) + 32);
    if (v21)
    {
      v22 = *(_DWORD *)(v21 - 8);
      v23 = (~(v20 << 32) + v20) ^ ((unint64_t)(~(v20 << 32) + v20) >> 22);
      v24 = 9 * ((v23 + ~(v23 << 13)) ^ ((v23 + ~(v23 << 13)) >> 8));
      v25 = (v24 ^ (v24 >> 15)) + ~((v24 ^ (v24 >> 15)) << 27);
      v26 = v22 & ((v25 >> 31) ^ v25);
      v27 = *(_QWORD *)(v21 + 16 * v26);
      if (v27 == v20)
      {
LABEL_27:
        v29 = *(_QWORD *)(v21 + 16 * v26 + 8);
        if (v29)
        {
          if ((*(_BYTE *)(v29 + 8) & 3) == 0)
          {
            v30 = *(_QWORD *)v29;
            if (*(_QWORD *)v29)
              goto LABEL_32;
          }
        }
      }
      else
      {
        v28 = 1;
        while (v27)
        {
          v26 = ((_DWORD)v26 + v28) & v22;
          v27 = *(_QWORD *)(v21 + 16 * v26);
          ++v28;
          if (v27 == v20)
            goto LABEL_27;
        }
      }
    }
    ++*(_DWORD *)(v20 + 8);
    v57 = (_DWORD *)v20;
    if (*(void (***)(WebCore::PerformanceMark *__hidden))v20 != off_1E3401960)
    {
      __break(0xC471u);
      JUMPOUT(0x194DFCE60);
    }
    v30 = WebCore::createWrapper<WebCore::PerformanceMark,WebCore::PerformanceMark>(v16, (uint64_t *)&v57, v18);
    v31 = v57;
    v57 = 0;
    if (v31)
    {
      if (v31[2] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v31 + 8))(v31);
      else
        --v31[2];
    }
LABEL_32:
    if (*(_DWORD *)(v20 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
    else
      --*(_DWORD *)(v20 + 8);
    if ((_DWORD)v19 == -1)
      goto LABEL_36;
    goto LABEL_35;
  }
  if (v50 == 1)
  {
    LOBYTE(v57) = v48;
    v39 = v49;
    v49 = 0;
    v58 = v39;
    if (!*(_QWORD *)(v4 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v56, (unsigned __int8 *)&v57);
      v39 = v58;
    }
    v58 = 0;
    if (v39)
    {
      if (*(_DWORD *)v39 == 2)
        WTF::StringImpl::destroy(v39, v17);
      else
        *(_DWORD *)v39 -= 2;
    }
    v30 = 0;
LABEL_35:
    ((void (*)(_DWORD **, uint64_t *))off_1E32CBAA8[v19])(&v57, &v48);
LABEL_36:
    v50 = -1;
    v32 = v47;
    v47 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, v17);
      else
        *(_DWORD *)v32 -= 2;
    }
    goto LABEL_39;
  }
  v40 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsPerformancePrototypeFunction_clearMarks(v40, v41, v42);
}

_BYTE *WebCore::jsPerformancePrototypeFunction_clearMarks(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF **v13;
  uint64_t *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v20;
  unsigned int v21;
  WTF *v22;
  WTF::StringImpl *v23;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v25;
  uint64_t v26;
  int v27;
  WTF::StringImpl *v28;
  const WTF::StringImpl *v29;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v3;
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "Performance", "clearMarks");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPerformance::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPerformance::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "Performance", "clearMarks");
  v9 = *(_QWORD *)(v4 + 24);
  if (*((_DWORD *)a2 + 8) == 1 || (v10 = *((_QWORD *)a2 + 6), v10 == 10))
  {
    v12 = 0;
    v27 = 0;
  }
  else
  {
    v29 = (const WTF::StringImpl *)*((_QWORD *)a2 + 6);
    if ((v10 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v10 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v29, this);
    }
    else
    {
      v11 = *(WTF::StringImpl **)(v10 + 8);
      if ((v11 & 1) != 0)
        v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v10, this);
      if (v11)
        *(_DWORD *)v11 += 2;
      v28 = v11;
    }
    if (*((_DWORD *)v3 + 20))
    {
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
      v12 = v28;
      if (hasExceptionsAfterHandlingTraps)
      {
        v27 = 1;
        v28 = 0;
        if (v12)
        {
          if (*(_DWORD *)v12 == 2)
            WTF::StringImpl::destroy(v12, v23);
          else
            *(_DWORD *)v12 -= 2;
        }
        v17 = 0;
        v16 = 1;
        goto LABEL_25;
      }
    }
    else
    {
      v12 = v28;
    }
    v27 = 0;
  }
  v26 = 0;
  v29 = v12;
  v13 = (WTF **)(v9 + 168);
  v14 = *(uint64_t **)(v9 + 168);
  if (!v14)
  {
    v14 = (uint64_t *)WTF::fastMalloc((WTF *)0x18);
    v20 = (unsigned int *)WTF::WeakRef<WebCore::Performance,WebCore::WeakPtrImplWithEventTargetData>::implForObject<WebCore::Performance>(v9 - 24);
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 + 1, v20));
    v14[1] = 0;
    v14[2] = 0;
    *v14 = (uint64_t)v20;
    v22 = *v13;
    *v13 = (WTF *)v14;
    if (v22)
    {
      std::default_delete<WebCore::PerformanceUserTiming>::operator()[abi:sn180100](v9 + 168, v22);
      v14 = (uint64_t *)*v13;
    }
  }
  WebCore::clearPerformanceEntries(v14 + 1, &v29, a3);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v15);
    else
      *(_DWORD *)v29 -= 2;
  }
  v16 = 0;
  v17 = 10;
LABEL_25:
  ((void (*)(const WTF::StringImpl **, uint64_t *))off_1E32C9390[v16])(&v29, &v26);
  return (_BYTE *)v17;
}

_BYTE *WebCore::jsPerformancePrototypeFunction_measure(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t (*v21)();
  int v23;
  uint64_t v24;
  JSC::VM *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  int v28;
  JSC::VM *v29;
  _QWORD *v30;
  int v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  uint64_t v40;
  JSValue v43;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  int v47;
  WTF::StringImpl *v48;
  WebCore *v49;
  JSC::JSGlobalObject *v50;
  JSC::CallFrame *v51;
  WTF::StringImpl *v52;
  uint64_t v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  uint64_t v56;
  int v57;
  WTF::StringImpl *v58;
  int v59;
  JSC::VM *v60;
  unsigned __int8 v61[8];
  WTF::StringImpl *v62;
  int v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  unsigned int v66;
  int v67;
  char v68;
  uint64_t v69;
  _BYTE v70[72];
  int v71;
  char v72;
  int v73;
  WTF::StringImpl *v74;
  _QWORD v75[8];
  int v76;
  int v77;
  int v78;
  uint64_t v79;

  v79 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)this + 7);
  v53 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v53, "Performance", "measure");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSPerformance::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSPerformance::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v53, "Performance", "measure");
  v60 = (JSC::VM *)v4;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v43.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v43);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v69 = v12;
  if ((v12 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v12 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v69, this);
  }
  else
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
    if (v13)
      *(_DWORD *)v13 += 2;
    v74 = v13;
  }
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v14 = v74;
    if (hasExceptionsAfterHandlingTraps)
    {
      v59 = 1;
      v74 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v45);
        else
          *(_DWORD *)v14 -= 2;
      }
      v35 = 0;
      v40 = 1;
      goto LABEL_80;
    }
  }
  else
  {
    v14 = v74;
  }
  v52 = v14;
  v58 = v14;
  v59 = 0;
  v15 = *((int *)a2 + 8);
  if ((unint64_t)(v15 - 3) >= 0xFFFFFFFFFFFFFFFELL || (v16 = *((_QWORD *)a2 + 7), v16 == 10))
  {
    v70[0] = 0;
    v72 = 0;
    v73 = 0;
    goto LABEL_46;
  }
  if ((v16 & 0xFFFFFFFFFFFFFFF7) == 2 || (v16 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(v16 + 5) >= 0x17u)
  {
    WebCore::convertDictionary<WebCore::PerformanceMeasureOptions>((uint64_t)&v64, this, *((JSC::JSCell **)a2 + 7));
    WebCore::Detail::ConversionResultStorage<std::variant<WTF::String,WebCore::PerformanceMeasureOptions>>::ConversionResultStorage<WebCore::PerformanceMeasureOptions>(WebCore::Detail::ConversionResultStorage<WebCore::PerformanceMeasureOptions> &&)::{lambda(void)#1}::operator()((uint64_t)&v74, (uint64_t *)&v64);
    if (v67 != -1)
      ((void (*)(unsigned __int8 *, WTF::StringImpl **))off_1E32CB978[v67])(v61, &v64);
  }
  else
  {
    WebCore::Converter<WebCore::IDLDOMString>::convert(this, *((_QWORD *)a2 + 7), (uint64_t)&v64);
    if (!(_DWORD)v65)
    {
      v17 = v64;
      v64 = 0;
      v75[0] = v17;
      v77 = 0;
      v78 = 0;
LABEL_25:
      ((void (*)(unsigned __int8 *, WTF::StringImpl **))off_1E32C9390[v65])(v61, &v64);
      goto LABEL_26;
    }
    v78 = 1;
    if ((_DWORD)v65 != -1)
      goto LABEL_25;
  }
LABEL_26:
  v18 = v78;
  if (!v78)
  {
    v61[0] = 0;
    v63 = -1;
    v19 = v77;
    if (v77 == -1)
    {
      LOBYTE(v64) = 0;
      v68 = 1;
      v70[0] = 0;
      v71 = -1;
      v72 = 1;
      v73 = 0;
    }
    else
    {
      v20 = v5;
      v21 = off_1E32CB948[v77];
      ((void (*)(WTF::StringImpl **, unsigned __int8 *, _QWORD *))v21)(&v64, v61, v75);
      v63 = v19;
      LOBYTE(v64) = 0;
      v67 = -1;
      ((void (*)(uint64_t *, WTF::StringImpl **, unsigned __int8 *))v21)(&v56, &v64, v61);
      v67 = v19;
      v68 = 1;
      v70[0] = 0;
      v72 = 0;
      v71 = -1;
      ((void (*)(uint64_t *, _BYTE *, WTF::StringImpl **))v21)(&v56, v70, &v64);
      v5 = v20;
      v71 = v19;
      v72 = 1;
      v73 = 0;
      if (!v68)
      {
LABEL_39:
        if (v63 != -1)
          ((void (*)(uint64_t *, unsigned __int8 *))off_1E32CB938[v63])(&v56, v61);
        v18 = v78;
        goto LABEL_42;
      }
      if (v67 != -1)
        ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32CB938[v67])(&v56, &v64);
    }
    v67 = -1;
    goto LABEL_39;
  }
  v73 = 1;
LABEL_42:
  if (v18 != -1)
    ((void (*)(WTF::StringImpl **, _QWORD *))off_1E32CB988[v18])(&v64, v75);
  v23 = v73;
  if (v73)
  {
    v35 = 0;
    goto LABEL_77;
  }
  v15 = *((int *)a2 + 8);
LABEL_46:
  if ((unint64_t)(v15 - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v24 = *((_QWORD *)a2 + 8), v24 == 10))
  {
    v28 = 0;
    v27 = 0;
    v57 = 0;
  }
  else
  {
    v74 = (WTF::StringImpl *)v24;
    v25 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((v24 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v24 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v74, this);
    }
    else
    {
      v26 = *(WTF::StringImpl **)(v24 + 8);
      if ((v26 & 1) != 0)
        v26 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v24, this);
      if (v26)
        *(_DWORD *)v26 += 2;
      v64 = v26;
    }
    if (*((_DWORD *)v25 + 20))
    {
      v47 = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
      v27 = v64;
      if (v47)
      {
        v57 = 1;
        v64 = 0;
        if (v27)
        {
          if (*(_DWORD *)v27 == 2)
            WTF::StringImpl::destroy(v27, v48);
          else
            *(_DWORD *)v27 -= 2;
        }
        v35 = 0;
        v39 = 1;
        goto LABEL_76;
      }
    }
    else
    {
      v27 = v64;
    }
    v57 = 0;
    v28 = v73;
  }
  v29 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v58 = 0;
  v55 = v52;
  if (!v28)
  {
    v30 = (_QWORD *)(v11 - 24);
    LOBYTE(v74) = 0;
    LOBYTE(v77) = 0;
    if (v72)
    {
      v76 = -1;
      v31 = v71;
      if (v71 != -1)
      {
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **, _BYTE *))off_1E32CB948[v71])(&v64, &v74, v70);
        v76 = v31;
      }
      LOBYTE(v77) = 1;
    }
    v56 = 0;
    v54 = v27;
    WebCore::Performance::measure((WTF::String *)&v55, (WTF::String *)&v54, v30, this, (uint64_t)&v74, (uint64_t)&v64);
    v33 = v66;
    if (!v66)
    {
      v34 = v64;
      v64 = 0;
      v35 = WebCore::wrap<WebCore::PerformanceEntry>((uint64_t)this, v29, (uint64_t)v34);
      if (*((_DWORD *)v34 + 2) == 1)
        (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v34 + 8))(v34);
      else
        --*((_DWORD *)v34 + 2);
LABEL_66:
      ((void (*)(unsigned __int8 *, WTF::StringImpl **))off_1E32CB998[v33])(v61, &v64);
      v66 = -1;
      v37 = v54;
      v54 = 0;
      if (v37)
      {
        if (*(_DWORD *)v37 == 2)
          WTF::StringImpl::destroy(v37, v36);
        else
          *(_DWORD *)v37 -= 2;
      }
      if ((_BYTE)v77 && v76 != -1)
        ((void (*)(unsigned __int8 *, WTF::StringImpl **))off_1E32CB938[v76])(v61, &v74);
      v38 = v55;
      v55 = 0;
      if (v38)
      {
        if (*(_DWORD *)v38 == 2)
          WTF::StringImpl::destroy(v38, v36);
        else
          *(_DWORD *)v38 -= 2;
      }
      v39 = 0;
LABEL_76:
      ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32C9390[v39])(&v74, &v56);
      v23 = v73;
LABEL_77:
      if (v23 != -1)
        ((void (*)(WTF::StringImpl **, _BYTE *))off_1E32CB9A8[v23])(&v74, v70);
      v40 = 0;
LABEL_80:
      ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32C9390[v40])(&v69, &v58);
      return (_BYTE *)v35;
    }
    if (v66 == 1)
    {
      v61[0] = v64;
      v46 = v65;
      v65 = 0;
      v62 = v46;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(this, &v60, v61);
        v46 = v62;
      }
      v62 = 0;
      if (v46)
      {
        if (*(_DWORD *)v46 == 2)
          WTF::StringImpl::destroy(v46, v32);
        else
          *(_DWORD *)v46 -= 2;
      }
      v35 = 0;
      goto LABEL_66;
    }
  }
  v49 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsPerformancePrototypeFunction_clearMeasures(v49, v50, v51);
}

_BYTE *WebCore::jsPerformancePrototypeFunction_clearMeasures(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF **v14;
  uint64_t *v15;
  unsigned int *v16;
  unsigned int v17;
  WTF *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v25;
  uint64_t v26;
  int v27;
  WTF::StringImpl *v28;
  const WTF::StringImpl *v29;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v3;
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "Performance", "clearMeasures");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPerformance::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPerformance::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "Performance", "clearMeasures");
  v10 = *(_QWORD *)(v4 + 24);
  if (*((_DWORD *)a2 + 8) == 1 || (v11 = *((_QWORD *)a2 + 6), v11 == 10))
  {
    v12 = 0;
    v27 = 0;
    goto LABEL_24;
  }
  v29 = (const WTF::StringImpl *)*((_QWORD *)a2 + 6);
  if ((v11 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v11 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v29, this);
    goto LABEL_21;
  }
  v13 = *(WTF::StringImpl **)(v11 + 8);
  if ((v13 & 1) != 0)
  {
    v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, this);
    if (!v13)
      goto LABEL_20;
    goto LABEL_19;
  }
  if (v13)
LABEL_19:
    *(_DWORD *)v13 += 2;
LABEL_20:
  v28 = v13;
LABEL_21:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v12 = v28;
    if (hasExceptionsAfterHandlingTraps)
    {
      v27 = 1;
      v28 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v23);
        else
          *(_DWORD *)v12 -= 2;
      }
      v21 = 0;
      v20 = 1;
      goto LABEL_33;
    }
  }
  else
  {
    v12 = v28;
  }
  v27 = 0;
LABEL_24:
  v26 = 0;
  v29 = v12;
  v14 = (WTF **)(v10 + 168);
  v15 = *(uint64_t **)(v10 + 168);
  if (!v15)
  {
    v15 = (uint64_t *)WTF::fastMalloc((WTF *)0x18);
    v16 = (unsigned int *)WTF::WeakRef<WebCore::Performance,WebCore::WeakPtrImplWithEventTargetData>::implForObject<WebCore::Performance>(v10 - 24);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 + 1, v16));
    v15[1] = 0;
    v15[2] = 0;
    *v15 = (uint64_t)v16;
    v18 = *v14;
    *v14 = (WTF *)v15;
    if (v18)
    {
      std::default_delete<WebCore::PerformanceUserTiming>::operator()[abi:sn180100](v10 + 168, v18);
      v15 = (uint64_t *)*v14;
    }
  }
  WebCore::clearPerformanceEntries(v15 + 2, &v29, a3);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v19);
    else
      *(_DWORD *)v29 -= 2;
  }
  v20 = 0;
  v21 = 10;
LABEL_33:
  ((void (*)(const WTF::StringImpl **, uint64_t *))off_1E32C9390[v20])(&v29, &v26);
  return (_BYTE *)v21;
}

unint64_t WebCore::IDLOperation<WebCore::JSPerformance>::cast(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSPerformance::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSPerformance::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

uint64_t WTF::Vector<WTF::Ref<WebCore::PerformanceEntry,WTF::RawPtrTraits<WebCore::PerformanceEntry>,WTF::DefaultRefDerefTraits<WebCore::PerformanceEntry>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector(uint64_t a1, void *a2)
{
  uint64_t v3;
  WTF *v4;
  WTF *v6;
  uint64_t v7;
  _DWORD *v8;

  v3 = *(unsigned int *)(a1 + 12);
  if ((_DWORD)v3)
  {
    v6 = *(WTF **)a1;
    v7 = 8 * v3;
    do
    {
      v8 = *(_DWORD **)v6;
      *(_QWORD *)v6 = 0;
      if (v8)
      {
        if (v8[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v8 + 8))(v8);
        else
          --v8[2];
      }
      v6 = (WTF *)((char *)v6 + 8);
      v7 -= 8;
    }
    while (v7);
  }
  v4 = *(WTF **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)a1 = 0;
    *(_DWORD *)(a1 + 8) = 0;
    WTF::fastFree(v4, a2);
  }
  return a1;
}

uint64_t WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::PerformanceEntry>>>::convert<WTF::Ref<WebCore::PerformanceEntry,WTF::RawPtrTraits<WebCore::PerformanceEntry>,WTF::DefaultRefDerefTraits<WebCore::PerformanceEntry>>,0ul>(uint64_t a1, JSC::VM *a2, uint64_t a3)
{
  JSC::VM *v6;
  unsigned int v7;
  JSC::VM *v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v13;
  uint64_t v14;
  objc_class *v15;
  int v16;
  BOOL v17;
  JSValue v18;
  _QWORD *v19;
  WTF *v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  WTF *v24;
  _OWORD v25[4];
  uint64_t v26;
  JSC::VM *v27;

  v6 = *(JSC::VM **)(a1 + 56);
  v27 = v6;
  v22 = 0;
  v23 = 0x800000000;
  v24 = (WTF *)((char *)v25 + 8);
  memset(v25, 0, sizeof(v25));
  v26 = 0;
  v7 = *(_DWORD *)(a3 + 12);
  if (v7 >= 9)
  {
    v22 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v23) == 1;
    v7 = *(_DWORD *)(a3 + 12);
  }
  if (v7)
  {
    v13 = *(uint64_t **)a3;
    v14 = 8 * v7;
    while (1)
    {
      v15 = (objc_class *)WebCore::wrap<WebCore::PerformanceEntry>(a1, a2, *v13);
      if (*((_DWORD *)v6 + 20))
      {
        if ((JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
          break;
      }
      v16 = v23;
      if ((_DWORD)v23 != HIDWORD(v23) && (v24 != (WTF *)((char *)v25 + 8) ? (v17 = v24 == 0) : (v17 = 1), v17))
      {
        *((_QWORD *)v24 + v23) = v15;
        LODWORD(v23) = v16 + 1;
      }
      else
      {
        v18.super.isa = v15;
        if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v23, v18) == 1)
          v22 = 1;
      }
      ++v13;
      v14 -= 8;
      if (!v14)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    if (v22)
    {
      JSC::throwOutOfMemoryError();
    }
    else
    {
      v20 = v24;
      v21 = v23;
      v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if (!*((_DWORD *)v8 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) == 0)
      {
        v10 = JSC::constructArray();
        goto LABEL_7;
      }
    }
  }
  v10 = 0;
LABEL_7:
  v11 = *(uint64_t **)&v25[0];
  if (*(_QWORD *)&v25[0])
  {
    v20 = (WTF *)&v23;
    v19 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v25[0], (uint64_t *)&v20);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v11, v19);
  }
  if (v24 != (WTF *)((char *)v25 + 8) && v24)
    WTF::fastFree(v24, v9);
  return v10;
}

_BYTE *WebCore::IDLOperation<WebCore::JSPerformance>::call<&WebCore::jsPerformancePrototypeFunction_getEntriesByNameBody,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v6;

  v6 = *((_QWORD *)a1 + 7);
  v4 = WebCore::IDLOperation<WebCore::JSPerformance>::cast(*(_QWORD *)(a2 + 40));
  if (v4)
    return (_BYTE *)WebCore::jsPerformancePrototypeFunction_getEntriesByNameBody(a1, a2, v4);
  else
    return WebCore::throwThisTypeError((int)a1, (int)&v6, "Performance", "getEntriesByName");
}

uint64_t WebCore::jsPerformancePrototypeFunction_getEntriesByNameBody(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  unint64_t v8;
  JSC::VM *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  void *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  int v17;
  JSC::VM *v19;
  JSValue v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  _BYTE v24[16];
  WTF::StringImpl *v25;
  int v26;
  WTF::StringImpl *v27;
  int v28;

  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v19 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException(v19, a1, v20);
  }
  v6 = *(_QWORD *)(a3 + 24);
  WebCore::Converter<WebCore::IDLDOMString>::convert(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v27);
  v7 = v28;
  if (v28)
  {
    v12 = 0;
LABEL_16:
    if (v7 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C9390[v7])(&v25, &v27);
    return v12;
  }
  if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v8 = *(_QWORD *)(a2 + 56), v8 == 10))
  {
    v25 = 0;
    v26 = 0;
    v9 = *(JSC::VM **)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28);
LABEL_6:
    v10 = v27;
    v27 = 0;
    v11 = v25;
    v25 = 0;
    v22 = v11;
    v23 = v10;
    WebCore::Performance::getEntriesByName((WebCore::Performance *)(v6 - 24), &v23, (const WTF::String *)&v22, (uint64_t)v24);
    v12 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::PerformanceEntry>>>::convert<WTF::Ref<WebCore::PerformanceEntry,WTF::RawPtrTraits<WebCore::PerformanceEntry>,WTF::DefaultRefDerefTraits<WebCore::PerformanceEntry>>,0ul>((uint64_t)a1, v9, (uint64_t)v24);
    WTF::Vector<WTF::Ref<WebCore::PerformanceEntry,WTF::RawPtrTraits<WebCore::PerformanceEntry>,WTF::DefaultRefDerefTraits<WebCore::PerformanceEntry>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)v24, v13);
    v15 = v22;
    v22 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v14);
      else
        *(_DWORD *)v15 -= 2;
    }
    v16 = v23;
    v23 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v14);
      else
        *(_DWORD *)v16 -= 2;
    }
    v17 = v26;
    goto LABEL_13;
  }
  WebCore::Converter<WebCore::IDLDOMString>::convert(a1, v8, (uint64_t)&v25);
  v17 = v26;
  if (v26)
  {
    v12 = 0;
LABEL_13:
    if (v17 != -1)
      ((void (*)(_BYTE *, WTF::StringImpl **))off_1E32C9390[v17])(v24, &v25);
    v7 = v28;
    goto LABEL_16;
  }
  if (!v28)
  {
    v9 = *(JSC::VM **)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28);
    goto LABEL_6;
  }
  v21 = std::__throw_bad_variant_access[abi:sn180100]();
  return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25PerformanceMeasureOptionsEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_(v21);
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25PerformanceMeasureOptionsEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25PerformanceMeasureOptionsEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  char v7;

  if (*(_BYTE *)(a2 + 64))
  {
    v3 = *(unsigned int *)(a2 + 56);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32CB958[v3])(&v6, a2 + 48);
    *(_DWORD *)(a2 + 56) = -1;
  }
  if (*(_BYTE *)(a2 + 24))
  {
    v5 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v5 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32CB958[v5])(&v7, a2 + 8);
    *(_DWORD *)(a2 + 16) = -1;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringEN7WebCore25PerformanceMeasureOptionsEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISC_LNS0_6_TraitE1EEEEEvRSD_OT_EUlRSJ_OT0_E_JRNS0_6__baseILSG_1EJS9_SB_EEEOSR_EEEDcSJ_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringEN7WebCore25PerformanceMeasureOptionsEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISC_LNS0_6_TraitE1EEEEEvRSD_OT_EUlRSJ_OT0_E_JRNS0_6__baseILSG_1EJS9_SB_EEEOSR_EEEDcSJ_DpT0_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  char v10;
  char v11;

  *(_QWORD *)a2 = *(_QWORD *)a3;
  *(_BYTE *)(a2 + 8) = 0;
  v5 = a2 + 8;
  *(_BYTE *)(a2 + 24) = 0;
  if (*(_BYTE *)(a3 + 24))
  {
    *(_DWORD *)(a2 + 16) = -1;
    v6 = *(unsigned int *)(a3 + 16);
    if ((_DWORD)v6 != -1)
    {
      result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1E32CB968[v6])(&v10, v5, a3 + 8);
      *(_DWORD *)(a2 + 16) = v6;
    }
    *(_BYTE *)(a2 + 24) = 1;
  }
  v8 = *(_OWORD *)(a3 + 32);
  *(_BYTE *)(a2 + 48) = 0;
  *(_OWORD *)(a2 + 32) = v8;
  *(_BYTE *)(a2 + 64) = 0;
  if (*(_BYTE *)(a3 + 64))
  {
    *(_DWORD *)(a2 + 56) = -1;
    v9 = *(unsigned int *)(a3 + 56);
    if ((_DWORD)v9 != -1)
    {
      result = ((uint64_t (*)(char *))off_1E32CB968[v9])(&v11);
      *(_DWORD *)(a2 + 56) = v9;
    }
    *(_BYTE *)(a2 + 64) = 1;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEdEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSB_1EJS9_dEEEEEEDcSD_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringEdEEEE19__generic_constructB8sn180100INS0_18__move_constructorISA_LNS0_6_TraitE1EEEEEvRSB_OT_EUlRSH_OT0_E_JRNS0_6__baseILSE_1EJS9_dEEEOSP_EEEDcSH_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

double _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringEdEEEE19__generic_constructB8sn180100INS0_18__move_constructorISA_LNS0_6_TraitE1EEEEEvRSB_OT_EUlRSH_OT0_E_JRNS0_6__baseILSE_1EJS9_dEEEOSP_EEEDcSH_DpT0_(uint64_t a1, _QWORD *a2, double *a3)
{
  double result;

  result = *a3;
  *a2 = *(_QWORD *)a3;
  return result;
}

uint64_t WebCore::Detail::ConversionResultStorage<std::variant<WTF::String,WebCore::PerformanceMeasureOptions>>::ConversionResultStorage<WebCore::PerformanceMeasureOptions>(WebCore::Detail::ConversionResultStorage<WebCore::PerformanceMeasureOptions> &&)::{lambda(void)#1}::operator()(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  _BYTE v14[8];
  int v15;
  unsigned __int8 v16;
  __int128 v17;
  _BYTE v18[8];
  int v19;
  unsigned __int8 v20;
  uint64_t v21;
  _BYTE v22[8];
  int v23;
  unsigned __int8 v24;
  __int128 v25;
  _BYTE v26[8];
  int v27;
  unsigned __int8 v28;
  int v29;
  char v30;

  v2 = result;
  if (*((_DWORD *)a2 + 18))
  {
    *(_DWORD *)(result + 88) = 1;
  }
  else
  {
    v13 = *a2;
    v14[0] = 0;
    v16 = 0;
    v4 = *((unsigned __int8 *)a2 + 24);
    if (*((_BYTE *)a2 + 24))
    {
      v15 = -1;
      v5 = *((unsigned int *)a2 + 4);
      if ((_DWORD)v5 != -1)
      {
        result = ((uint64_t (*)(uint64_t *, _BYTE *, uint64_t *))off_1E32CB968[v5])(&v21, v14, a2 + 1);
        v15 = v5;
      }
      v4 = 1;
      v16 = 1;
    }
    v17 = *((_OWORD *)a2 + 2);
    v18[0] = 0;
    v20 = 0;
    v6 = *((unsigned __int8 *)a2 + 64);
    if (*((_BYTE *)a2 + 64))
    {
      v19 = -1;
      v7 = *((unsigned int *)a2 + 14);
      if ((_DWORD)v7 != -1)
      {
        result = ((uint64_t (*)(uint64_t *, _BYTE *, uint64_t *))off_1E32CB968[v7])(&v21, v18, a2 + 6);
        v19 = v7;
        v4 = v16;
      }
      v6 = 1;
      v20 = 1;
    }
    v21 = v13;
    v22[0] = 0;
    v24 = 0;
    if (v4)
    {
      v23 = -1;
      v8 = v15;
      if (v15 != -1)
      {
        result = ((uint64_t (*)(char *, _BYTE *, _BYTE *))off_1E32CB968[v15])(&v30, v22, v14);
        v23 = v8;
        v6 = v20;
      }
      v4 = 1;
      v24 = 1;
    }
    v25 = v17;
    v26[0] = 0;
    v28 = 0;
    if (v6)
    {
      v27 = -1;
      v9 = v19;
      if (v19 != -1)
      {
        result = ((uint64_t (*)(char *, _BYTE *, _BYTE *))off_1E32CB968[v19])(&v30, v26, v18);
        v27 = v9;
        v4 = v24;
      }
      v6 = 1;
      v28 = 1;
    }
    *(_BYTE *)(v2 + 16) = 0;
    v29 = 1;
    *(_DWORD *)(v2 + 80) = -1;
    *(_QWORD *)(v2 + 8) = v21;
    *(_BYTE *)(v2 + 32) = 0;
    if (v4)
    {
      *(_DWORD *)(v2 + 24) = -1;
      v10 = v23;
      if (v23 != -1)
      {
        result = ((uint64_t (*)(char *))off_1E32CB968[v23])(&v30);
        *(_DWORD *)(v2 + 24) = v10;
        v6 = v28;
      }
      *(_BYTE *)(v2 + 32) = 1;
    }
    v11 = v25;
    *(_BYTE *)(v2 + 56) = 0;
    *(_OWORD *)(v2 + 40) = v11;
    *(_BYTE *)(v2 + 72) = 0;
    if (v6)
    {
      *(_DWORD *)(v2 + 64) = -1;
      v12 = v27;
      if (v27 != -1)
      {
        result = ((uint64_t (*)(char *))off_1E32CB968[v27])(&v30);
        *(_DWORD *)(v2 + 64) = v12;
      }
      *(_BYTE *)(v2 + 72) = 1;
    }
    *(_DWORD *)(v2 + 80) = 1;
    *(_DWORD *)(v2 + 88) = 0;
    if (v29 != -1)
      result = ((uint64_t (*)(char *, uint64_t *))off_1E32CB938[v29])(&v30, &v21);
    v29 = -1;
    if (v20)
    {
      if (v19 != -1)
        result = ((uint64_t (*)(char *, _BYTE *))off_1E32CB958[v19])(&v30, v18);
      v19 = -1;
    }
    if (v16)
    {
      if (v15 != -1)
        return ((uint64_t (*)(char *, _BYTE *))off_1E32CB958[v15])(&v30, v14);
    }
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore25PerformanceMeasureOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  char v7;

  if (*(_BYTE *)(a2 + 64))
  {
    v3 = *(unsigned int *)(a2 + 56);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32CB958[v3])(&v6, a2 + 48);
    *(_DWORD *)(a2 + 56) = -1;
  }
  if (*(_BYTE *)(a2 + 24))
  {
    v5 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v5 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32CB958[v5])(&v7, a2 + 8);
    *(_DWORD *)(a2 + 16) = -1;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6StringEN7WebCore25PerformanceMeasureOptionsEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJSD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 72);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E32CB938[v3])(&v5, a2);
  *(_DWORD *)(a2 + 72) = -1;
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore18PerformanceMeasureENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore18PerformanceMeasureENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalINS_7variantIJN3WTF6StringEN7WebCore25PerformanceMeasureOptionsEEEEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSI_1EJSF_SG_EEEEEEDcSK_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  if (*(_BYTE *)(a2 + 80))
  {
    v3 = *(unsigned int *)(a2 + 72);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32CB938[v3])(&v5, a2);
    *(_DWORD *)(a2 + 72) = -1;
  }
  return result;
}

_BYTE *WebCore::jsPerformanceEntryPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  double v26;
  uint64_t v27;
  unint64_t v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  double v31;
  uint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  unsigned __int8 *v37;
  unsigned int v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t SlowCase;
  uint64_t v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  int v45;
  int v46;
  uint64_t v47;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v42 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "PerformanceEntry", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPerformanceEntry::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPerformanceEntry::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "PerformanceEntry", "toJSON");
  v11 = *(_QWORD **)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (v12)
  {
    v13 = *(unsigned int *)(v12 + 60);
    v14 = *(_QWORD *)(v12 + 24);
    if (v14 < *(_QWORD *)(v12 + 32))
    {
LABEL_14:
      *(_QWORD *)(v12 + 24) = v14 + v13;
      goto LABEL_15;
    }
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v40 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v40);
      *(_QWORD *)(v12 + 40) = v14 + (int)v40;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
  }
  else
  {
    SlowCase = JSC::CompleteSubspace::allocateSlow();
  }
  v14 = SlowCase;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v15 = *((_QWORD *)this + 7);
  v16 = v11[2];
  if (v16 && (v17 = *(_DWORD *)(v16 + 4)) != 0)
  {
    if (v17 != 1)
    {
LABEL_20:
      v18 = *(_QWORD *)(v15 + 64760);
      if (!v18 || v16 != *(_QWORD *)(v18 + 8))
        v18 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_23;
    }
    v37 = *(unsigned __int8 **)(v16 + 8);
    if ((*(_BYTE *)(v16 + 16) & 4) != 0)
    {
      v38 = *v37;
    }
    else
    {
      v39 = *(unsigned __int16 *)v37;
      if (v39 > 0xFF)
        goto LABEL_20;
      v38 = v39;
    }
    v18 = *(_QWORD *)(v15 + 8 * v38 + 42216);
  }
  else
  {
    v18 = *(_QWORD *)(v15 + 41968);
  }
LABEL_23:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v43;
  v43 = 0;
  v44 = v14;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v43);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = (WTF::StringImpl *)(*(uint64_t (**)(_QWORD *))(*v11 + 40))(v11);
  v23 = WebCore::JSConverterOverloader<WebCore::IDLDOMString,true,false>::convert<WTF::ASCIILiteral>((uint64_t)this, v21, v22);
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v24 = v43;
  v43 = 0;
  v44 = v14;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v24, v23, 0, (uint64_t)&v43);
  if (v24)
  {
    if (*(_DWORD *)v24 == 2)
      WTF::StringImpl::destroy(v24, v25);
    else
      *(_DWORD *)v24 -= 2;
  }
  v26 = (*(double (**)(_QWORD *))(*v11 + 16))(v11);
  if ((*(_QWORD *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v27 = (int)v26, v26 == (double)(int)v27)
    && ((_DWORD)v27 || (*(_QWORD *)&v26 & 0x8000000000000000) == 0))
  {
    v28 = v27 | 0xFFFE000000000000;
  }
  else
  {
    v28 = *(_QWORD *)&v26 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v29 = v43;
  v43 = 0;
  v44 = v14;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v29, v28, 0, (uint64_t)&v43);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v30);
    else
      *(_DWORD *)v29 -= 2;
  }
  v31 = (*(double (**)(_QWORD *))(*v11 + 24))(v11);
  if ((*(_QWORD *)&v31 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v32 = (int)v31, v31 == (double)(int)v32)
    && ((_DWORD)v32 || (*(_QWORD *)&v31 & 0x8000000000000000) == 0))
  {
    v33 = v32 | 0xFFFE000000000000;
  }
  else
  {
    v33 = *(_QWORD *)&v31 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v34 = v43;
  v43 = 0;
  v44 = v14;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v34, v33, 0, (uint64_t)&v43);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  return (_BYTE *)v14;
}

uint64_t WebCore::JSConverterOverloader<WebCore::IDLDOMString,true,false>::convert<WTF::ASCIILiteral>(uint64_t a1, WTF::StringImpl *a2, uint64_t a3)
{
  WTF::StringImpl *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  WTF::StringImpl *v12;

  if (!a3)
  {
    v5 = *(_QWORD *)(a1 + 56);
    return *(_QWORD *)(v5 + 41968);
  }
  if (a3 != 1)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v4 = v12;
    v5 = *(_QWORD *)(a1 + 56);
    if (v12)
      goto LABEL_4;
    return *(_QWORD *)(v5 + 41968);
  }
  v4 = (WTF::StringImpl *)MEMORY[0x1E0CBEF70];
  *MEMORY[0x1E0CBEF70] += 2;
  v5 = *(_QWORD *)(a1 + 56);
LABEL_4:
  v6 = *((_DWORD *)v4 + 1);
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_6:
      v7 = *(_QWORD *)(v5 + 64760);
      if (!v7 || v4 != *(WTF::StringImpl **)(v7 + 8))
        v7 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_9;
    }
    v9 = (unsigned __int8 *)*((_QWORD *)v4 + 1);
    if ((*((_BYTE *)v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_6;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v5 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *(_QWORD *)(v5 + 41968);
  }
LABEL_9:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, a2);
  else
    *(_DWORD *)v4 -= 2;
  return v7;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15PerformanceMarkENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15PerformanceMarkENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6StringEdEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISA_LNS0_6_TraitE1EEEEEvOT_EUlRSG_OT0_E_JRNS0_6__baseILSE_1EJS9_dEEEOSO_EEEDcSG_DpT0_(WTF::StringImpl *result, WTF::StringImpl *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5)
  {
    result = (WTF::StringImpl *)((uint64_t (*)(char *, uint64_t))off_1E32CB958[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 0;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = v6;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

double _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6StringEdEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISA_LNS0_6_TraitE1EEEEEvOT_EUlRSG_OT0_E_JRNS0_6__baseILSE_1EJS9_dEEEOSO_EEEDcSG_DpT0_(uint64_t *a1, _QWORD *a2, double *a3)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  char v7;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 8);
  if ((_DWORD)v5 != -1)
  {
    if ((_DWORD)v5 == 1)
    {
      result = *a3;
      *a2 = *(_QWORD *)a3;
      return result;
    }
    ((void (*)(char *, uint64_t))off_1E32CB958[v5])(&v7, v4);
  }
  result = *a3;
  *(double *)v4 = *a3;
  *(_DWORD *)(v4 + 8) = 1;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6StringEdEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSB_SD_EEEEEEDcSH_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E32CB958[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

_BYTE *WebCore::jsPerformanceNavigationPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::PerformanceNavigation *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t Slow;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  unsigned int v26;
  unint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  unint64_t v31;
  WebCore *v32;
  WebCore *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  unint64_t v36;
  int v37;
  int v38;
  uint64_t v39;

  v3 = *((_QWORD *)a2 + 5);
  v4 = *((_QWORD *)this + 7);
  v34 = v4;
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "PerformanceNavigation", "toJSON");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPerformanceNavigation::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPerformanceNavigation::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "PerformanceNavigation", "toJSON");
  v10 = *(WebCore::PerformanceNavigation **)(v3 + 24);
  v11 = *(_QWORD *)(v4 + 15056);
  if (!v11)
  {
    v32 = this;
    Slow = JSC::CompleteSubspace::allocateSlow();
    this = v32;
    goto LABEL_15;
  }
  v12 = *(unsigned int *)(v11 + 60);
  Slow = *(_QWORD *)(v11 + 24);
  if (Slow >= *(_QWORD *)(v11 + 32))
  {
    Slow = *(_QWORD *)(v11 + 40);
    if ((Slow & 1) != 0)
    {
      v33 = this;
      JSC::sanitizeStackForVM();
      Slow = JSC::LocalAllocator::allocateSlowCase();
      this = v33;
      goto LABEL_15;
    }
    v31 = *(_QWORD *)(Slow + 8) ^ *(_QWORD *)(v11 + 48);
    *(_QWORD *)(v11 + 32) = Slow + HIDWORD(v31);
    *(_QWORD *)(v11 + 40) = Slow + (int)v31;
  }
  *(_QWORD *)(v11 + 24) = Slow + v12;
LABEL_15:
  *(_DWORD *)Slow = 0;
  *(_DWORD *)Slow = *((_DWORD *)this + 212);
  *(_DWORD *)(Slow + 4) = 16783360;
  *(_OWORD *)(Slow + 8) = 0u;
  *(_OWORD *)(Slow + 24) = 0u;
  *(_OWORD *)(Slow + 40) = 0u;
  *(_QWORD *)(Slow + 56) = 0;
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  v14 = *((_QWORD *)v10 + 1);
  if (!v14)
    goto LABEL_31;
  v15 = *(_QWORD *)(v14 + 8);
  if (!v15)
    goto LABEL_31;
  v16 = *(_QWORD *)(v15 + 72);
  if (!v16)
    goto LABEL_31;
  v17 = *(_QWORD *)(v16 + 8);
  if (!v17)
    goto LABEL_31;
  if (*(_BYTE *)(v17 + 178))
  {
    __break(0xC471u);
    JUMPOUT(0x194DFF130);
  }
  v18 = *(_QWORD *)(v17 + 240);
  if (v18 && (v19 = *(_QWORD *)(v18 + 8)) != 0)
  {
    v20 = *(_QWORD *)(*(_QWORD *)(v19 + 280) + 88);
    v21 = 0xFFFE000000000000;
    if (v20)
    {
      v22 = *(unsigned __int8 *)(v20 + 2500);
      if (v22 == 2)
        v23 = 0xFFFE000000000002;
      else
        v23 = 0xFFFE000000000000;
      if (v22 == 3)
        v21 = 0xFFFE000000000001;
      else
        v21 = v23;
    }
  }
  else
  {
LABEL_31:
    v21 = 0xFFFE000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v24 = v35;
  v35 = 0;
  v36 = Slow;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v24, v21, 0, (uint64_t)&v35);
  if (v24)
  {
    if (*(_DWORD *)v24 == 2)
      WTF::StringImpl::destroy(v24, v25);
    else
      *(_DWORD *)v24 -= 2;
  }
  v26 = WebCore::PerformanceNavigation::redirectCount(v10);
  if (*(_DWORD *)(v4 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
  }
  v27 = v26 | 0xFFFE000000000000;
  WTF::AtomStringImpl::addLiteral();
  v28 = v35;
  v35 = 0;
  v36 = Slow;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v28, v27, 0, (uint64_t)&v35);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  return (_BYTE *)Slow;
}

_BYTE *WebCore::jsPerformanceNavigationTimingPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  double v26;
  double v27;
  uint64_t v28;
  unint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  double v45;
  double v46;
  uint64_t v47;
  unint64_t v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  double v51;
  double v52;
  uint64_t v53;
  unint64_t v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  double v57;
  double v58;
  uint64_t v59;
  unint64_t v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  double v63;
  double v64;
  uint64_t v65;
  unint64_t v66;
  WTF::StringImpl *v67;
  WTF::StringImpl *v68;
  double v69;
  double v70;
  double v71;
  uint64_t v72;
  unint64_t v73;
  WTF::StringImpl *v74;
  WTF::StringImpl *v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  uint64_t v81;
  unint64_t v82;
  WTF::StringImpl *v83;
  WTF::StringImpl *v84;
  double v85;
  uint64_t v86;
  unint64_t v87;
  WTF::StringImpl *v88;
  WTF::StringImpl *v89;
  double v90;
  double v91;
  double v92;
  double v93;
  uint64_t v94;
  unint64_t v95;
  WTF::StringImpl *v96;
  WTF::StringImpl *v97;
  double v98;
  double v99;
  double v100;
  double v101;
  uint64_t v102;
  unint64_t v103;
  WTF::StringImpl *v104;
  WTF::StringImpl *v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  uint64_t v111;
  unint64_t v112;
  WTF::StringImpl *v113;
  WTF::StringImpl *v114;
  double v115;
  uint64_t v116;
  unint64_t v117;
  WTF::StringImpl *v118;
  WTF::StringImpl *v119;
  double v120;
  double v121;
  uint64_t v122;
  unint64_t v123;
  WTF::StringImpl *v124;
  WTF::StringImpl *v125;
  uint64_t v126;
  unint64_t v127;
  double v128;
  unint64_t v129;
  WTF::StringImpl *v130;
  WTF::StringImpl *v131;
  unint64_t v132;
  double v133;
  unint64_t v134;
  WTF::StringImpl *v135;
  WTF::StringImpl *v136;
  unint64_t v137;
  double v138;
  unint64_t v139;
  WTF::StringImpl *v140;
  WTF::StringImpl *v141;
  uint64_t v142;
  WTF::StringImpl *v143;
  WTF::StringImpl *v144;
  double v145;
  double v146;
  uint64_t v147;
  unint64_t v148;
  WTF::StringImpl *v149;
  WTF::StringImpl *v150;
  double v151;
  double v152;
  uint64_t v153;
  unint64_t v154;
  WTF::StringImpl *v155;
  WTF::StringImpl *v156;
  double v157;
  double v158;
  uint64_t v159;
  unint64_t v160;
  WTF::StringImpl *v161;
  WTF::StringImpl *v162;
  double v163;
  double v164;
  uint64_t v165;
  unint64_t v166;
  WTF::StringImpl *v167;
  WTF::StringImpl *v168;
  double v169;
  double v170;
  uint64_t v171;
  unint64_t v172;
  WTF::StringImpl *v173;
  WTF::StringImpl *v174;
  double v175;
  double v176;
  uint64_t v177;
  unint64_t v178;
  WTF::StringImpl *v179;
  WTF::StringImpl *v180;
  double v181;
  double v182;
  uint64_t v183;
  unint64_t v184;
  WTF::StringImpl *v185;
  WTF::StringImpl *v186;
  double v187;
  double v188;
  uint64_t v189;
  unint64_t v190;
  WTF::StringImpl *v191;
  WTF::StringImpl *v192;
  uint64_t v193;
  WTF::StringImpl *v194;
  WTF::StringImpl *v195;
  uint64_t v196;
  WTF::StringImpl *v197;
  WTF::StringImpl *v198;
  unsigned __int8 *v200;
  unsigned int v201;
  unsigned __int8 *v202;
  unsigned int v203;
  unsigned __int8 *v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unint64_t v209;
  uint64_t SlowCase;
  uint64_t v211;
  WTF::StringImpl *v212;
  unint64_t v213;
  int v214;
  int v215;
  uint64_t v216;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v211 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v211, "PerformanceNavigationTiming", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPerformanceNavigationTiming::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPerformanceNavigationTiming::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v211, "PerformanceNavigationTiming", "toJSON");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (v12)
  {
    v13 = *(unsigned int *)(v12 + 60);
    v14 = *(_QWORD *)(v12 + 24);
    if (v14 < *(_QWORD *)(v12 + 32))
    {
LABEL_14:
      *(_QWORD *)(v12 + 24) = v14 + v13;
      goto LABEL_15;
    }
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v209 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v209);
      *(_QWORD *)(v12 + 40) = v14 + (int)v209;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
  }
  else
  {
    SlowCase = JSC::CompleteSubspace::allocateSlow();
  }
  v14 = SlowCase;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v15 = *((_QWORD *)this + 7);
  v16 = *(_QWORD *)(v11 + 16);
  if (!v16 || (v17 = *(_DWORD *)(v16 + 4)) == 0)
  {
    v18 = *(_QWORD *)(v15 + 41968);
    goto LABEL_23;
  }
  if (v17 != 1)
    goto LABEL_20;
  v200 = *(unsigned __int8 **)(v16 + 8);
  if ((*(_BYTE *)(v16 + 16) & 4) != 0)
  {
    v201 = *v200;
LABEL_459:
    v18 = *(_QWORD *)(v15 + 8 * v201 + 42216);
    goto LABEL_23;
  }
  v206 = *(unsigned __int16 *)v200;
  if (v206 <= 0xFF)
  {
    v201 = v206;
    goto LABEL_459;
  }
LABEL_20:
  v18 = *(_QWORD *)(v15 + 64760);
  if (!v18 || v16 != *(_QWORD *)(v18 + 8))
    v18 = JSC::jsStringWithCacheSlowCase();
LABEL_23:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v212);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverterOverloader<WebCore::IDLDOMString,true,false>::convert<WTF::ASCIILiteral>((uint64_t)this, (WTF::StringImpl *)"navigation", 11);
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v212);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v24 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v24, 0xFFFE000000000000, 0, (uint64_t)&v212);
  if (v24)
  {
    if (*(_DWORD *)v24 == 2)
      WTF::StringImpl::destroy(v24, v25);
    else
      *(_DWORD *)v24 -= 2;
  }
  v26 = *(double *)(v11 + 360);
  v27 = v26 == 0.0
      ? 0.0
      : *(double *)&WebCore::timePrecision
      * floor((v26 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
      * 1000.0;
  if ((*(_QWORD *)&v27 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v28 = (int)v27, v27 == (double)(int)v28)
    && ((_DWORD)v28 || (*(_QWORD *)&v27 & 0x8000000000000000) == 0))
  {
    v29 = v28 | 0xFFFE000000000000;
  }
  else
  {
    v29 = *(_QWORD *)&v27 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v30 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v30, v29, 0, (uint64_t)&v212);
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v31);
    else
      *(_DWORD *)v30 -= 2;
  }
  v32 = *((_QWORD *)this + 7);
  v33 = *(_QWORD *)(v11 + 88);
  if (!v33 || (v34 = *(_DWORD *)(v33 + 4)) == 0)
  {
    v35 = *(_QWORD *)(v32 + 41968);
    goto LABEL_54;
  }
  if (v34 == 1)
  {
    v202 = *(unsigned __int8 **)(v33 + 8);
    if ((*(_BYTE *)(v33 + 16) & 4) != 0)
    {
      v203 = *v202;
    }
    else
    {
      v207 = *(unsigned __int16 *)v202;
      if (v207 > 0xFF)
        goto LABEL_51;
      v203 = v207;
    }
    v35 = *(_QWORD *)(v32 + 8 * v203 + 42216);
    goto LABEL_54;
  }
LABEL_51:
  v35 = *(_QWORD *)(v32 + 64760);
  if (!v35 || v33 != *(_QWORD *)(v35 + 8))
    v35 = JSC::jsStringWithCacheSlowCase();
LABEL_54:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v36 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v36, v35, 0, (uint64_t)&v212);
  if (v36)
  {
    if (*(_DWORD *)v36 == 2)
      WTF::StringImpl::destroy(v36, v37);
    else
      *(_DWORD *)v36 -= 2;
  }
  v38 = (uint64_t *)(v11 + 200);
  if ((*(_BYTE *)(v11 + 210) & 0x40) != 0)
    v38 = (uint64_t *)MEMORY[0x1E0CBF738];
  v39 = *((_QWORD *)this + 7);
  v40 = *v38;
  if (!*v38 || (v41 = *(_DWORD *)(v40 + 4)) == 0)
  {
    v42 = *(_QWORD *)(v39 + 41968);
    goto LABEL_66;
  }
  if (v41 != 1)
    goto LABEL_63;
  v204 = *(unsigned __int8 **)(v40 + 8);
  if ((*(_BYTE *)(v40 + 16) & 4) != 0)
  {
    v205 = *v204;
LABEL_465:
    v42 = *(_QWORD *)(v39 + 8 * v205 + 42216);
    goto LABEL_66;
  }
  v208 = *(unsigned __int16 *)v204;
  if (v208 <= 0xFF)
  {
    v205 = v208;
    goto LABEL_465;
  }
LABEL_63:
  v42 = *(_QWORD *)(v39 + 64760);
  if (!v42 || v40 != *(_QWORD *)(v42 + 8))
    v42 = JSC::jsStringWithCacheSlowCase();
LABEL_66:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v43 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v43, v42, 0, (uint64_t)&v212);
  if (v43)
  {
    if (*(_DWORD *)v43 == 2)
      WTF::StringImpl::destroy(v43, v44);
    else
      *(_DWORD *)v43 -= 2;
  }
  v45 = 0.0;
  if ((*(_BYTE *)(v11 + 210) & 0x40) == 0)
  {
    v46 = *(double *)(v11 + 192);
    if (v46 != 0.0)
      v45 = *(double *)&WebCore::timePrecision
          * floor((v46 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
          * 1000.0;
  }
  if ((*(_QWORD *)&v45 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v47 = (int)v45, v45 == (double)(int)v47)
    && ((_DWORD)v47 || (*(_QWORD *)&v45 & 0x8000000000000000) == 0))
  {
    v48 = v47 | 0xFFFE000000000000;
  }
  else
  {
    v48 = *(_QWORD *)&v45 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v49 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v49, v48, 0, (uint64_t)&v212);
  if (v49)
  {
    if (*(_DWORD *)v49 == 2)
      WTF::StringImpl::destroy(v49, v50);
    else
      *(_DWORD *)v49 -= 2;
  }
  v51 = 0.0;
  if ((*(_BYTE *)(v11 + 210) & 0x40) == 0 && !*(_BYTE *)(v11 + 256))
  {
    if (*(_WORD *)(v11 + 208))
    {
      v52 = *(double *)(v11 + 112);
      if (v52 != 0.0)
        v51 = *(double *)&WebCore::timePrecision
            * floor((v52 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
            * 1000.0;
    }
  }
  if ((*(_QWORD *)&v51 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v53 = (int)v51, v51 == (double)(int)v53)
    && ((_DWORD)v53 || (*(_QWORD *)&v51 & 0x8000000000000000) == 0))
  {
    v54 = v53 | 0xFFFE000000000000;
  }
  else
  {
    v54 = *(_QWORD *)&v51 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v55 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v55, v54, 0, (uint64_t)&v212);
  if (v55)
  {
    if (*(_DWORD *)v55 == 2)
      WTF::StringImpl::destroy(v55, v56);
    else
      *(_DWORD *)v55 -= 2;
  }
  v57 = 0.0;
  if ((*(_BYTE *)(v11 + 210) & 0x40) == 0 && !*(_BYTE *)(v11 + 256))
  {
    if (*(_WORD *)(v11 + 208))
    {
      v58 = *(double *)(v11 + 120);
      if (v58 != 0.0 || (v58 = *(double *)(v11 + 96), v58 != 0.0))
        v57 = *(double *)&WebCore::timePrecision
            * floor((v58 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
            * 1000.0;
    }
  }
  if ((*(_QWORD *)&v57 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v59 = (int)v57, v57 == (double)(int)v59)
    && ((_DWORD)v59 || (*(_QWORD *)&v57 & 0x8000000000000000) == 0))
  {
    v60 = v59 | 0xFFFE000000000000;
  }
  else
  {
    v60 = *(_QWORD *)&v57 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v61 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v61, v60, 0, (uint64_t)&v212);
  if (v61)
  {
    if (*(_DWORD *)v61 == 2)
      WTF::StringImpl::destroy(v61, v62);
    else
      *(_DWORD *)v61 -= 2;
  }
  if (((v63 = *(double *)(v11 + 120), v63 == 0.0) || (*(_BYTE *)(v11 + 210) & 0x40) != 0)
    && (v63 = *(double *)(v11 + 96), v63 == 0.0))
  {
    v64 = 0.0;
  }
  else
  {
    v64 = *(double *)&WebCore::timePrecision
        * floor((v63 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
        * 1000.0;
  }
  if ((*(_QWORD *)&v64 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v65 = (int)v64, v64 == (double)(int)v65)
    && ((_DWORD)v65 || (*(_QWORD *)&v64 & 0x8000000000000000) == 0))
  {
    v66 = v65 | 0xFFFE000000000000;
  }
  else
  {
    v66 = *(_QWORD *)&v64 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v67 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v67, v66, 0, (uint64_t)&v212);
  if (v67)
  {
    if (*(_DWORD *)v67 == 2)
      WTF::StringImpl::destroy(v67, v68);
    else
      *(_DWORD *)v67 -= 2;
  }
  v69 = 0.0;
  if ((*(_BYTE *)(v11 + 210) & 0x40) == 0)
  {
    if (*(_BYTE *)(v11 + 256))
    {
      v70 = *(double *)(v11 + 40);
    }
    else
    {
      v71 = *(double *)(v11 + 128);
      v70 = *(double *)(v11 + 40);
      if (v71 != 0.0)
        goto LABEL_133;
    }
    v71 = *(double *)(v11 + 120);
    if (v71 == 0.0)
    {
      v71 = *(double *)(v11 + 96);
      if (v71 == 0.0)
        goto LABEL_134;
    }
LABEL_133:
    v69 = *(double *)&WebCore::timePrecision * floor((v71 - v70) / *(double *)&WebCore::timePrecision) * 1000.0;
  }
LABEL_134:
  if ((*(_QWORD *)&v69 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v72 = (int)v69, v69 == (double)(int)v72)
    && ((_DWORD)v72 || (*(_QWORD *)&v69 & 0x8000000000000000) == 0))
  {
    v73 = v72 | 0xFFFE000000000000;
  }
  else
  {
    v73 = *(_QWORD *)&v69 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v74 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v74, v73, 0, (uint64_t)&v212);
  if (v74)
  {
    if (*(_DWORD *)v74 == 2)
      WTF::StringImpl::destroy(v74, v75);
    else
      *(_DWORD *)v74 -= 2;
  }
  v76 = 0.0;
  if ((*(_BYTE *)(v11 + 210) & 0x40) == 0)
  {
    if (*(_BYTE *)(v11 + 256))
    {
      v77 = *(double *)(v11 + 40);
    }
    else
    {
      v80 = *(double *)(v11 + 136);
      if (v80 != 0.0)
      {
        v79 = v80 - *(double *)(v11 + 40);
        goto LABEL_151;
      }
      v78 = *(double *)(v11 + 128);
      v77 = *(double *)(v11 + 40);
      if (v78 != 0.0)
      {
LABEL_148:
        v79 = v78 - v77;
LABEL_151:
        v76 = *(double *)&WebCore::timePrecision * floor(v79 / *(double *)&WebCore::timePrecision) * 1000.0;
        goto LABEL_152;
      }
    }
    v78 = *(double *)(v11 + 120);
    if (v78 == 0.0)
    {
      v78 = *(double *)(v11 + 96);
      if (v78 == 0.0)
        goto LABEL_152;
    }
    goto LABEL_148;
  }
LABEL_152:
  if ((*(_QWORD *)&v76 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v81 = (int)v76, v76 == (double)(int)v81)
    && ((_DWORD)v81 || (*(_QWORD *)&v76 & 0x8000000000000000) == 0))
  {
    v82 = v81 | 0xFFFE000000000000;
  }
  else
  {
    v82 = *(_QWORD *)&v76 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v83 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v83, v82, 0, (uint64_t)&v212);
  if (v83)
  {
    if (*(_DWORD *)v83 == 2)
      WTF::StringImpl::destroy(v83, v84);
    else
      *(_DWORD *)v83 -= 2;
  }
  WebCore::PerformanceResourceTiming::connectStart((WebCore::PerformanceResourceTiming *)v11);
  if ((*(_QWORD *)&v85 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v86 = (int)v85, v85 == (double)(int)v86)
    && ((_DWORD)v86 || (*(_QWORD *)&v85 & 0x8000000000000000) == 0))
  {
    v87 = v86 | 0xFFFE000000000000;
  }
  else
  {
    v87 = *(_QWORD *)&v85 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v88 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v88, v87, 0, (uint64_t)&v212);
  if (v88)
  {
    if (*(_DWORD *)v88 == 2)
      WTF::StringImpl::destroy(v88, v89);
    else
      *(_DWORD *)v88 -= 2;
  }
  v90 = 0.0;
  if ((*(_BYTE *)(v11 + 210) & 0x40) == 0)
  {
    if (*(_BYTE *)(v11 + 256))
    {
      v91 = *(double *)(v11 + 120);
      if (v91 == 0.0)
      {
        v91 = *(double *)(v11 + 96);
        if (v91 == 0.0)
          goto LABEL_179;
      }
      v92 = v91 - *(double *)(v11 + 40);
    }
    else
    {
      v93 = *(double *)(v11 + 160);
      if (v93 == 0.0)
      {
        WebCore::PerformanceResourceTiming::connectStart((WebCore::PerformanceResourceTiming *)v11);
        goto LABEL_179;
      }
      v92 = v93 - *(double *)(v11 + 40);
    }
    v90 = *(double *)&WebCore::timePrecision * floor(v92 / *(double *)&WebCore::timePrecision) * 1000.0;
  }
LABEL_179:
  if ((*(_QWORD *)&v90 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v94 = (int)v90, v90 == (double)(int)v94)
    && ((_DWORD)v94 || (*(_QWORD *)&v90 & 0x8000000000000000) == 0))
  {
    v95 = v94 | 0xFFFE000000000000;
  }
  else
  {
    v95 = *(_QWORD *)&v90 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v96 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v96, v95, 0, (uint64_t)&v212);
  if (v96)
  {
    if (*(_DWORD *)v96 == 2)
      WTF::StringImpl::destroy(v96, v97);
    else
      *(_DWORD *)v96 -= 2;
  }
  v98 = 0.0;
  if ((*(_BYTE *)(v11 + 210) & 0x40) == 0)
  {
    v99 = *(double *)(v11 + 152);
    if (v99 == -1.0)
    {
      v100 = *(double *)(v11 + 120);
      if (v100 == 0.0)
      {
        v100 = *(double *)(v11 + 96);
        if (v100 == 0.0)
          goto LABEL_196;
      }
      v101 = v100 - *(double *)(v11 + 40);
    }
    else
    {
      if (v99 == 0.0)
        goto LABEL_196;
      v101 = v99 - *(double *)(v11 + 40);
    }
    v98 = *(double *)&WebCore::timePrecision * floor(v101 / *(double *)&WebCore::timePrecision) * 1000.0;
  }
LABEL_196:
  if ((*(_QWORD *)&v98 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v102 = (int)v98, v98 == (double)(int)v102)
    && ((_DWORD)v102 || (*(_QWORD *)&v98 & 0x8000000000000000) == 0))
  {
    v103 = v102 | 0xFFFE000000000000;
  }
  else
  {
    v103 = *(_QWORD *)&v98 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v104 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v104, v103, 0, (uint64_t)&v212);
  if (v104)
  {
    if (*(_DWORD *)v104 == 2)
      WTF::StringImpl::destroy(v104, v105);
    else
      *(_DWORD *)v104 -= 2;
  }
  v106 = 0.0;
  if ((*(_BYTE *)(v11 + 210) & 0x40) == 0)
  {
    v107 = *(double *)(v11 + 168);
    if (v107 != 0.0)
    {
      v108 = v107 - *(double *)(v11 + 40);
LABEL_234:
      v106 = *(double *)&WebCore::timePrecision * floor(v108 / *(double *)&WebCore::timePrecision) * 1000.0;
      goto LABEL_235;
    }
    if (*(_BYTE *)(v11 + 256))
    {
      v109 = *(double *)(v11 + 120);
      if (v109 == 0.0)
      {
        v109 = *(double *)(v11 + 96);
        if (v109 == 0.0)
          goto LABEL_235;
      }
      v108 = v109 - *(double *)(v11 + 40);
      goto LABEL_234;
    }
    v110 = *(double *)(v11 + 160);
    if (v110 != 0.0)
    {
      v108 = v110 - *(double *)(v11 + 40);
      goto LABEL_234;
    }
    WebCore::PerformanceResourceTiming::connectStart((WebCore::PerformanceResourceTiming *)v11);
  }
LABEL_235:
  if ((*(_QWORD *)&v106 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v111 = (int)v106, v106 == (double)(int)v111)
    && ((_DWORD)v111 || (*(_QWORD *)&v106 & 0x8000000000000000) == 0))
  {
    v112 = v111 | 0xFFFE000000000000;
  }
  else
  {
    v112 = *(_QWORD *)&v106 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v113 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v113, v112, 0, (uint64_t)&v212);
  if (v113)
  {
    if (*(_DWORD *)v113 == 2)
      WTF::StringImpl::destroy(v113, v114);
    else
      *(_DWORD *)v113 -= 2;
  }
  WebCore::PerformanceResourceTiming::responseStart((WebCore::PerformanceResourceTiming *)v11);
  if ((*(_QWORD *)&v115 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v116 = (int)v115, v115 == (double)(int)v116)
    && ((_DWORD)v116 || (*(_QWORD *)&v115 & 0x8000000000000000) == 0))
  {
    v117 = v116 | 0xFFFE000000000000;
  }
  else
  {
    v117 = *(_QWORD *)&v115 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v118 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v118, v117, 0, (uint64_t)&v212);
  if (v118)
  {
    if (*(_DWORD *)v118 == 2)
      WTF::StringImpl::destroy(v118, v119);
    else
      *(_DWORD *)v118 -= 2;
  }
  if (((*(_BYTE *)(v11 + 210) & 1) == 0 || (v120 = *(double *)(v11 + 184), v120 == 0.0))
    && (v120 = *(double *)(v11 + 104), v120 == 0.0))
  {
    v121 = 0.0;
  }
  else
  {
    v121 = *(double *)&WebCore::timePrecision
         * floor((v120 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
         * 1000.0;
  }
  if ((*(_QWORD *)&v121 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v122 = (int)v121, v121 == (double)(int)v122)
    && ((_DWORD)v122 || (*(_QWORD *)&v121 & 0x8000000000000000) == 0))
  {
    v123 = v122 | 0xFFFE000000000000;
  }
  else
  {
    v123 = *(_QWORD *)&v121 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v124 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v124, v123, 0, (uint64_t)&v212);
  if (v124)
  {
    if (*(_DWORD *)v124 == 2)
      WTF::StringImpl::destroy(v124, v125);
    else
      *(_DWORD *)v124 -= 2;
  }
  if (!*(_BYTE *)(v11 + 257) || (v126 = *(_QWORD *)(v11 + 216), v126 == -1))
  {
    v127 = 0;
  }
  else
  {
    v127 = v126 + 300;
    if (HIDWORD(v127))
    {
      v128 = (double)v127;
      goto LABEL_456;
    }
    if ((v127 & 0x80000000) != 0)
    {
      v128 = (double)v127;
LABEL_456:
      v129 = *(_QWORD *)&v128 + 0x2000000000000;
      goto LABEL_276;
    }
  }
  v129 = v127 | 0xFFFE000000000000;
LABEL_276:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v130 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v130, v129, 0, (uint64_t)&v212);
  if (v130)
  {
    if (*(_DWORD *)v130 == 2)
      WTF::StringImpl::destroy(v130, v131);
    else
      *(_DWORD *)v130 -= 2;
  }
  if (!*(_BYTE *)(v11 + 257) || (v132 = *(_QWORD *)(v11 + 216), v132 == -1))
  {
    v132 = 0;
  }
  else
  {
    if (HIDWORD(v132))
    {
      v133 = (double)v132;
      goto LABEL_451;
    }
    if ((v132 & 0x80000000) != 0)
    {
      v133 = (double)v132;
LABEL_451:
      v134 = *(_QWORD *)&v133 + 0x2000000000000;
      goto LABEL_287;
    }
  }
  v134 = v132 | 0xFFFE000000000000;
LABEL_287:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v135 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v135, v134, 0, (uint64_t)&v212);
  if (v135)
  {
    if (*(_DWORD *)v135 == 2)
      WTF::StringImpl::destroy(v135, v136);
    else
      *(_DWORD *)v135 -= 2;
  }
  if (!*(_BYTE *)(v11 + 257) || (v137 = *(_QWORD *)(v11 + 224), v137 == -1))
  {
    v137 = 0;
  }
  else
  {
    if (HIDWORD(v137))
    {
      v138 = (double)v137;
      goto LABEL_453;
    }
    if ((v137 & 0x80000000) != 0)
    {
      v138 = (double)v137;
LABEL_453:
      v139 = *(_QWORD *)&v138 + 0x2000000000000;
      goto LABEL_298;
    }
  }
  v139 = v137 | 0xFFFE000000000000;
LABEL_298:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v140 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v140, v139, 0, (uint64_t)&v212);
  if (v140)
  {
    if (*(_DWORD *)v140 == 2)
      WTF::StringImpl::destroy(v140, v141);
    else
      *(_DWORD *)v140 -= 2;
  }
  v142 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLInterface<WebCore::PerformanceServerTiming>>>::convert<WTF::Ref<WebCore::PerformanceServerTiming,WTF::RawPtrTraits<WebCore::PerformanceServerTiming>,WTF::DefaultRefDerefTraits<WebCore::PerformanceServerTiming>>,0ul>(this, *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28), v11 + 264);
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v143 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v143, v142, 0, (uint64_t)&v212);
  if (v143)
  {
    if (*(_DWORD *)v143 == 2)
      WTF::StringImpl::destroy(v143, v144);
    else
      *(_DWORD *)v143 -= 2;
  }
  v145 = 0.0;
  if ((*(char *)(v11 + 210) & 0x80000000) == 0)
  {
    if (*(_BYTE *)(v11 + 368))
    {
      v146 = *(double *)(v11 + 336);
      if (v146 != 0.0)
        v145 = *(double *)&WebCore::timePrecision
             * floor((v146 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
             * 1000.0;
    }
  }
  if ((*(_QWORD *)&v145 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v147 = (int)v145, v145 == (double)(int)v147)
    && ((_DWORD)v147 || (*(_QWORD *)&v145 & 0x8000000000000000) == 0))
  {
    v148 = v147 | 0xFFFE000000000000;
  }
  else
  {
    v148 = *(_QWORD *)&v145 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v149 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v149, v148, 0, (uint64_t)&v212);
  if (v149)
  {
    if (*(_DWORD *)v149 == 2)
      WTF::StringImpl::destroy(v149, v150);
    else
      *(_DWORD *)v149 -= 2;
  }
  v151 = 0.0;
  if ((*(char *)(v11 + 210) & 0x80000000) == 0)
  {
    if (*(_BYTE *)(v11 + 368))
    {
      v152 = *(double *)(v11 + 344);
      if (v152 != 0.0)
        v151 = *(double *)&WebCore::timePrecision
             * floor((v152 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
             * 1000.0;
    }
  }
  if ((*(_QWORD *)&v151 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v153 = (int)v151, v151 == (double)(int)v153)
    && ((_DWORD)v153 || (*(_QWORD *)&v151 & 0x8000000000000000) == 0))
  {
    v154 = v153 | 0xFFFE000000000000;
  }
  else
  {
    v154 = *(_QWORD *)&v151 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v155 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v155, v154, 0, (uint64_t)&v212);
  if (v155)
  {
    if (*(_DWORD *)v155 == 2)
      WTF::StringImpl::destroy(v155, v156);
    else
      *(_DWORD *)v155 -= 2;
  }
  v157 = *(double *)(v11 + 288);
  v158 = v157 == 0.0
       ? 0.0
       : *(double *)&WebCore::timePrecision
       * floor((v157 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v158 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v159 = (int)v158, v158 == (double)(int)v159)
    && ((_DWORD)v159 || (*(_QWORD *)&v158 & 0x8000000000000000) == 0))
  {
    v160 = v159 | 0xFFFE000000000000;
  }
  else
  {
    v160 = *(_QWORD *)&v158 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v161 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v161, v160, 0, (uint64_t)&v212);
  if (v161)
  {
    if (*(_DWORD *)v161 == 2)
      WTF::StringImpl::destroy(v161, v162);
    else
      *(_DWORD *)v161 -= 2;
  }
  v163 = *(double *)(v11 + 296);
  v164 = v163 == 0.0
       ? 0.0
       : *(double *)&WebCore::timePrecision
       * floor((v163 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v164 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v165 = (int)v164, v164 == (double)(int)v165)
    && ((_DWORD)v165 || (*(_QWORD *)&v164 & 0x8000000000000000) == 0))
  {
    v166 = v165 | 0xFFFE000000000000;
  }
  else
  {
    v166 = *(_QWORD *)&v164 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v167 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v167, v166, 0, (uint64_t)&v212);
  if (v167)
  {
    if (*(_DWORD *)v167 == 2)
      WTF::StringImpl::destroy(v167, v168);
    else
      *(_DWORD *)v167 -= 2;
  }
  v169 = *(double *)(v11 + 304);
  v170 = v169 == 0.0
       ? 0.0
       : *(double *)&WebCore::timePrecision
       * floor((v169 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v170 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v171 = (int)v170, v170 == (double)(int)v171)
    && ((_DWORD)v171 || (*(_QWORD *)&v170 & 0x8000000000000000) == 0))
  {
    v172 = v171 | 0xFFFE000000000000;
  }
  else
  {
    v172 = *(_QWORD *)&v170 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v173 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v173, v172, 0, (uint64_t)&v212);
  if (v173)
  {
    if (*(_DWORD *)v173 == 2)
      WTF::StringImpl::destroy(v173, v174);
    else
      *(_DWORD *)v173 -= 2;
  }
  v175 = *(double *)(v11 + 312);
  v176 = v175 == 0.0
       ? 0.0
       : *(double *)&WebCore::timePrecision
       * floor((v175 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v176 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v177 = (int)v176, v176 == (double)(int)v177)
    && ((_DWORD)v177 || (*(_QWORD *)&v176 & 0x8000000000000000) == 0))
  {
    v178 = v177 | 0xFFFE000000000000;
  }
  else
  {
    v178 = *(_QWORD *)&v176 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v179 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v179, v178, 0, (uint64_t)&v212);
  if (v179)
  {
    if (*(_DWORD *)v179 == 2)
      WTF::StringImpl::destroy(v179, v180);
    else
      *(_DWORD *)v179 -= 2;
  }
  v181 = *(double *)(v11 + 352);
  v182 = v181 == 0.0
       ? 0.0
       : *(double *)&WebCore::timePrecision
       * floor((v181 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v182 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v183 = (int)v182, v182 == (double)(int)v183)
    && ((_DWORD)v183 || (*(_QWORD *)&v182 & 0x8000000000000000) == 0))
  {
    v184 = v183 | 0xFFFE000000000000;
  }
  else
  {
    v184 = *(_QWORD *)&v182 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v185 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v185, v184, 0, (uint64_t)&v212);
  if (v185)
  {
    if (*(_DWORD *)v185 == 2)
      WTF::StringImpl::destroy(v185, v186);
    else
      *(_DWORD *)v185 -= 2;
  }
  v187 = *(double *)(v11 + 360);
  v188 = v187 == 0.0
       ? 0.0
       : *(double *)&WebCore::timePrecision
       * floor((v187 - *(double *)(v11 + 40)) / *(double *)&WebCore::timePrecision)
       * 1000.0;
  if ((*(_QWORD *)&v188 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v189 = (int)v188, v188 == (double)(int)v189)
    && ((_DWORD)v189 || (*(_QWORD *)&v188 & 0x8000000000000000) == 0))
  {
    v190 = v189 | 0xFFFE000000000000;
  }
  else
  {
    v190 = *(_QWORD *)&v188 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v191 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v191, v190, 0, (uint64_t)&v212);
  if (v191)
  {
    if (*(_DWORD *)v191 == 2)
      WTF::StringImpl::destroy(v191, v192);
    else
      *(_DWORD *)v191 -= 2;
  }
  v193 = WebCore::convertEnumerationToJS<WebCore::PerformanceNavigationTiming::NavigationType>(*((_QWORD *)this + 7), (WTF::StringImpl *)*(unsigned __int8 *)(v11 + 376));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v194 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v194, v193, 0, (uint64_t)&v212);
  if (v194)
  {
    if (*(_DWORD *)v194 == 2)
      WTF::StringImpl::destroy(v194, v195);
    else
      *(_DWORD *)v194 -= 2;
  }
  v196 = *(char *)(v11 + 210) < 0 ? 0xFFFE000000000000 : *(unsigned __int16 *)(v11 + 208) | 0xFFFE000000000000;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v197 = v212;
  v212 = 0;
  v213 = v14;
  v214 = -1;
  v215 = 0x1000000;
  v216 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v197, v196, 0, (uint64_t)&v212);
  if (v197)
  {
    if (*(_DWORD *)v197 == 2)
      WTF::StringImpl::destroy(v197, v198);
    else
      *(_DWORD *)v197 -= 2;
  }
  return (_BYTE *)v14;
}

uint64_t WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLInterface<WebCore::PerformanceServerTiming>>>::convert<WTF::Ref<WebCore::PerformanceServerTiming,WTF::RawPtrTraits<WebCore::PerformanceServerTiming>,WTF::DefaultRefDerefTraits<WebCore::PerformanceServerTiming>>,0ul>(JSC *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v5;
  unsigned int v6;
  WTF **v7;
  WTF *v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  WTF *v15;
  int v16;
  uint64_t v17;
  unint64_t SlowCase;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char **v25;
  int v26;
  unint64_t v27;
  uint64_t *v28;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v30;
  JSC::Structure *v31;
  JSC::JSCell *v32;
  uint64_t v33;
  JSC::VM *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  WTF *v45;
  uint64_t v46;
  uint64_t v47;
  WTF *v48;
  void *v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *Allocator;
  int v55;
  JSValue v56;
  void *v57;
  unint64_t v58;
  JSC::VM *v59;
  JSC::JSObject *v60;
  JSC::JSGlobalObject *v61;
  uint64_t v62;
  uint64_t *v63;
  _QWORD *v65;
  uint64_t v67;
  WTF *v68;
  int v69;
  BOOL v70;
  uint64_t v71;
  WTF *v72;
  _OWORD v73[4];
  uint64_t v74;
  JSC::VM *v75;
  uint64_t v76[2];

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v75 = v5;
  v70 = 0;
  v71 = 0x800000000;
  v72 = (WTF *)((char *)v73 + 8);
  memset(v73, 0, sizeof(v73));
  v74 = 0;
  v6 = *(_DWORD *)(a3 + 12);
  if (v6 >= 9)
  {
    v70 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v71) == 1;
    v6 = *(_DWORD *)(a3 + 12);
    if (v6)
      goto LABEL_3;
  }
  else if (v6)
  {
LABEL_3:
    v7 = *(WTF ***)a3;
    v67 = *(_QWORD *)a3 + 8 * v6;
    while (1)
    {
      v8 = *v7;
      v9 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
      if (!v9)
        goto LABEL_12;
      v10 = *(_DWORD *)(v9 - 8);
      v11 = ((unint64_t)v8 + ~((_QWORD)v8 << 32)) ^ (((unint64_t)v8 + ~((_QWORD)v8 << 32)) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(WTF **)(v9 + 16 * v14);
      if (v15 != v8)
        break;
LABEL_9:
      v17 = *(_QWORD *)(v9 + 16 * v14 + 8);
      if (!v17)
        goto LABEL_12;
      if ((*(_BYTE *)(v17 + 8) & 3) != 0)
        goto LABEL_12;
      SlowCase = *(_QWORD *)v17;
      if (!*(_QWORD *)v17)
        goto LABEL_12;
LABEL_55:
      if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
        goto LABEL_87;
      v55 = v71;
      if ((_DWORD)v71 == HIDWORD(v71) || v72 != (WTF *)((char *)v73 + 8) && v72)
      {
        v56.super.isa = (Class)SlowCase;
        if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v71, v56) == 1)
          v70 = 1;
      }
      else
      {
        *((_QWORD *)v72 + v71) = SlowCase;
        LODWORD(v71) = v55 + 1;
      }
      if (++v7 == (WTF **)v67)
        goto LABEL_72;
    }
    v16 = 1;
    while (v15)
    {
      v14 = ((_DWORD)v14 + v16) & v10;
      v15 = *(WTF **)(v9 + 16 * v14);
      ++v16;
      if (v15 == v8)
        goto LABEL_9;
    }
LABEL_12:
    ++*(_DWORD *)v8;
    v19 = *(_QWORD *)(a2 + 3296);
    if (v19)
    {
      v20 = *(_DWORD *)(v19 - 8);
      v21 = ((unint64_t)&WebCore::JSPerformanceServerTiming::s_info
           + ~((_QWORD)&WebCore::JSPerformanceServerTiming::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformanceServerTiming::s_info
                                                                             + ~((_QWORD)&WebCore::JSPerformanceServerTiming::s_info << 32)) >> 22);
      v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
      v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
      v24 = v20 & ((v23 >> 31) ^ v23);
      v25 = *(char ***)(v19 + 16 * v24);
      if (v25 == &WebCore::JSPerformanceServerTiming::s_info)
      {
LABEL_17:
        v27 = *(_QWORD *)(v19 + 16 * v24 + 8);
        if (v27)
          goto LABEL_19;
      }
      else
      {
        v26 = 1;
        while (v25)
        {
          v24 = ((_DWORD)v24 + v26) & v20;
          v25 = *(char ***)(v19 + 16 * v24);
          ++v26;
          if (v25 == &WebCore::JSPerformanceServerTiming::s_info)
            goto LABEL_17;
        }
      }
    }
    v28 = *(uint64_t **)(a2 + 56);
    Structure = WebCore::JSPerformanceServerTimingPrototype::createStructure(v28, a2, *(JSC::JSCell **)(a2 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v32 = (JSC::JSCell *)WebCore::JSPerformanceServerTimingPrototype::create((WebCore::JSPerformanceServerTimingPrototype *)v28, Structure, v30, v31);
    v33 = WebCore::JSPerformanceServerTiming::createStructure(v28, a2, v32);
    v27 = WebCore::cacheDOMStructure((JSCell *)a2, v33, (uint64_t)&WebCore::JSPerformanceServerTiming::s_info);
LABEL_19:
    v34 = v5;
    v35 = *(_QWORD *)(a2 + 56);
    v36 = *(_QWORD *)(v35 + 41456);
    v37 = *(_QWORD *)(v36 + 23536);
    v38 = *(_QWORD **)(v37 + 5976);
    if (v38)
      goto LABEL_39;
    v39 = *(_QWORD *)(v36 + 22648);
    if (__ldaxr((unsigned __int8 *)v39))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v39))
    {
      goto LABEL_24;
    }
    MEMORY[0x19AEA534C](v39);
LABEL_24:
    v41 = *(_QWORD *)(v39 + 2824);
    if (!*(_QWORD *)(v41 + 5976))
    {
      v42 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v68, "IsoSpace T");
      v76[0] = 0;
      MEMORY[0x19AEA3204](v42, &v68, v35 + 192, v35 + 1872, 32, 8, v76);
      v44 = v76[0];
      v76[0] = 0;
      if (v44)
        (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
      v45 = v68;
      v68 = 0;
      if (v45)
      {
        if (*(_DWORD *)v45 == 1)
          WTF::fastFree(v45, v43);
        else
          --*(_DWORD *)v45;
      }
      v46 = *(_QWORD *)(v41 + 5976);
      *(_QWORD *)(v41 + 5976) = v42;
      if (v46)
        (*(void (**)(uint64_t))(*(_QWORD *)v46 + 8))(v46);
    }
    v38 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v47 = *(_QWORD *)(v37 + 5976);
    *(_QWORD *)(v37 + 5976) = v38;
    if (v47)
    {
      v48 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v48, v49);
    }
    v50 = __ldxr((unsigned __int8 *)v39);
    if (v50 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v39))
      {
LABEL_39:
        SlowCase = v38[3];
        if (SlowCase >= v38[4])
        {
          SlowCase = v38[5];
          if ((SlowCase & 1) != 0)
          {
            JSC::sanitizeStackForVM();
            SlowCase = JSC::LocalAllocator::allocateSlowCase();
            goto LABEL_41;
          }
          v58 = *(_QWORD *)(SlowCase + 8) ^ v38[6];
          v38[4] = SlowCase + HIDWORD(v58);
          v38[5] = SlowCase + (int)v58;
        }
        v38[3] = SlowCase + 32;
LABEL_41:
        *(_DWORD *)SlowCase = 0;
        WebCore::JSDOMObject::JSDOMObject(SlowCase, v27);
        *(_QWORD *)(SlowCase + 24) = v8;
        if (*(_BYTE *)(v35 + 755))
          __dmb(0xAu);
        v51 = *(_QWORD *)(a2 + 3320);
        if ((byte_1EE3363E8 & 1) == 0)
        {
          qword_1EE3363E0 = (uint64_t)&off_1E32C9280;
          byte_1EE3363E8 = 1;
        }
        v68 = v8;
        if ((SlowCase & 8) != 0)
          v52 = (SlowCase - 112) | 1;
        else
          v52 = SlowCase & 0xFFFFFFFFFFFFC000;
        if ((v52 & 1) != 0)
          v53 = v52 + 47;
        else
          v53 = *(_QWORD *)v52 + 32;
        Allocator = *(_QWORD **)(v53 + 16);
        if (!Allocator)
          Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
        *(_QWORD *)(v53 + 16) = *Allocator;
        *Allocator = SlowCase;
        Allocator[1] = &qword_1EE3363E0;
        Allocator[2] = v51;
        v76[0] = (uint64_t)Allocator;
        JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v51 + 32), (uint64_t *)&v68, v76);
        if (v76[0])
          *(_QWORD *)(v76[0] + 8) = 3;
        v5 = v34;
        goto LABEL_55;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v39);
    goto LABEL_39;
  }
LABEL_72:
  if (v70)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v68 = v72;
    v69 = v71;
    v59 = *(JSC::VM **)(a2 + 56);
    if (*((_DWORD *)v59 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v59) & 1) != 0)
      v61 = 0;
    else
      v61 = (JSC::JSGlobalObject *)JSC::constructArray();
    if (!*((_DWORD *)v5 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) == 0)
    {
      v62 = JSC::objectConstructorFreeze(a1, v61, v60);
      goto LABEL_77;
    }
  }
LABEL_87:
  v62 = 0;
LABEL_77:
  v63 = *(uint64_t **)&v73[0];
  if (*(_QWORD *)&v73[0])
  {
    v68 = (WTF *)&v71;
    v65 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v73[0], (uint64_t *)&v68);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v63, v65);
  }
  if (v72 != (WTF *)((char *)v73 + 8) && v72)
    WTF::fastFree(v72, v57);
  return v62;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore29JSPerformanceObserverCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::jsPerformanceObserverPrototypeFunction_disconnect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  return WebCore::IDLOperation<WebCore::JSPerformanceObserver>::call<&WebCore::jsPerformanceObserverPrototypeFunction_disconnectBody,(WebCore::CastedThisErrorBehavior)0>((uint64_t)this, *((_QWORD *)a2 + 5));
}

_BYTE *WebCore::jsPerformanceObserverPrototypeFunction_takeRecords(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  JSC::VM *v11;
  WTF *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  WTF *v18;
  _DWORD *v19;
  uint64_t v20;
  WTF *v21;
  int v22;
  int v23;

  v3 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "PerformanceObserver", "takeRecords");
  v4 = 16 * (*(_DWORD *)v3 & 0xFFFFFFFE);
  v5 = *(unsigned int *)(v4 + 0x4C);
  v6 = *(_DWORD *)(v4 + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPerformanceObserver::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPerformanceObserver::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "PerformanceObserver", "takeRecords");
  v10 = *(_QWORD *)(v3 + 24);
  v11 = *(JSC::VM **)(v4 + 40);
  v12 = *(WTF **)(v10 + 16);
  v21 = v12;
  v13 = *(unsigned int *)(v10 + 28);
  v22 = *(_DWORD *)(v10 + 24);
  v23 = v13;
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  v15 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::PerformanceEntry>>>::convert<WTF::Ref<WebCore::PerformanceEntry,WTF::RawPtrTraits<WebCore::PerformanceEntry>,WTF::DefaultRefDerefTraits<WebCore::PerformanceEntry>>,0ul>((uint64_t)this, v11, (uint64_t)&v21);
  if ((_DWORD)v13)
  {
    v17 = 8 * v13;
    v18 = v12;
    do
    {
      v19 = *(_DWORD **)v18;
      *(_QWORD *)v18 = 0;
      if (v19)
      {
        if (v19[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v19 + 8))(v19);
        else
          --v19[2];
      }
      v18 = (WTF *)((char *)v18 + 8);
      v17 -= 8;
    }
    while (v17);
  }
  if (v12)
    WTF::fastFree(v12, v14);
  return (_BYTE *)v15;
}

_BYTE *WebCore::IDLOperation<WebCore::JSPerformanceObserver>::call<&WebCore::jsPerformanceObserverPrototypeFunction_observeBody,(WebCore::CastedThisErrorBehavior)0>(WebCore *a1, unint64_t *a2)
{
  unint64_t v4;
  WebCore::JSPerformanceObserver *v5;
  uint64_t v7;

  v7 = *((_QWORD *)a1 + 7);
  v4 = WebCore::IDLOperation<WebCore::JSPerformanceObserver>::cast(a2[5]);
  if (v4)
    return (_BYTE *)WebCore::jsPerformanceObserverPrototypeFunction_observeBody(a1, (JSC::JSGlobalObject *)a2, *(JSC::CallFrame **)(v4 + 24), v5);
  else
    return WebCore::throwThisTypeError((int)a1, (int)&v7, "PerformanceObserver", "observe");
}

uint64_t WebCore::jsPerformanceObserverPrototypeFunction_observeBody(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSPerformanceObserver *a4)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  JSC::VM *v10;
  char v11;
  _BYTE v12[8];
  uint64_t v13;
  int v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
    v6 = 10;
  else
    v6 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::PerformanceObserver::Init>((uint64_t)v12, this, (JSC::JSCell *)v6);
  v7 = v14;
  if (v14)
  {
    v8 = 0;
  }
  else
  {
    v8 = WebCore::toJS<WebCore::IDLUndefined,WebCore::jsPerformanceObserverPrototypeFunction_observeBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSPerformanceObserver *)::{lambda(void)#1}>(this, &v10, (uint64_t)a3, (uint64_t)v12);
    v7 = v14;
  }
  if (v7 != -1)
    ((void (*)(char *, uint64_t *))off_1E32CC020[v7])(&v11, &v13);
  return v8;
}

unint64_t WebCore::IDLOperation<WebCore::JSPerformanceObserver>::cast(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSPerformanceObserver::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSPerformanceObserver::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

uint64_t WebCore::toJS<WebCore::IDLUndefined,WebCore::jsPerformanceObserverPrototypeFunction_observeBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSPerformanceObserver *)::{lambda(void)#1}>(JSC *a1, JSC::VM **a2, uint64_t a3, uint64_t a4)
{
  WTF::StringImpl *v6;
  uint64_t v7;
  WTF::StringImpl *v9;
  unsigned __int8 v10[8];
  WTF::StringImpl *v11;
  unsigned __int8 v12[8];
  WTF::StringImpl *v13;
  char v14;

  WebCore::jsPerformanceObserverPrototypeFunction_observeBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSPerformanceObserver *)::{lambda(void)#1}::operator()((uint64_t)v12, a3, a4);
  if (v14)
  {
    v10[0] = v12[0];
    v9 = v13;
    v13 = 0;
    v11 = v9;
    if (!*((_QWORD *)*a2 + 2))
    {
      WebCore::propagateExceptionSlowPath(a1, a2, v10);
      v9 = v11;
    }
    v11 = 0;
    if (v9)
    {
      if (*(_DWORD *)v9 == 2)
        WTF::StringImpl::destroy(v9, v6);
      else
        *(_DWORD *)v9 -= 2;
    }
    v7 = 0;
  }
  else
  {
    v7 = 10;
  }
  WebCore::ExceptionOr<void>::~ExceptionOr((uint64_t)v12, v6);
  return v7;
}

void WebCore::jsPerformanceObserverPrototypeFunction_observeBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSPerformanceObserver *)::{lambda(void)#1}::operator()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  WTF::StringImpl *v5;
  _BYTE v6[48];

  WebCore::Detail::ConversionResultStorage<WebCore::PerformanceObserver::Init>::releaseReturnValue((uint64_t)v6, a3);
  WebCore::PerformanceObserver::observe(a2, (uint64_t)v6, a1);
  WebCore::PerformanceObserver::Init::~Init((WebCore::PerformanceObserver::Init *)v6, v5);
}

uint64_t WebCore::Detail::ConversionResultStorage<WebCore::PerformanceObserver::Init>::releaseReturnValue(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  if (*(_DWORD *)(a2 + 56))
    a1 = std::__throw_bad_variant_access[abi:sn180100]();
  else
    v2 = (uint64_t *)(a2 + 8);
  return WebCore::PerformanceObserver::Init::Init(a1, v2);
}

uint64_t WebCore::PerformanceObserver::Init::Init(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)result = 0;
  *(_BYTE *)(result + 16) = 0;
  if (*((_BYTE *)a2 + 16))
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    v2 = *a2;
    *a2 = 0;
    *(_QWORD *)result = v2;
    LODWORD(v2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = 0;
    *(_DWORD *)(result + 8) = v2;
    LODWORD(v2) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = 0;
    *(_DWORD *)(result + 12) = v2;
    *(_BYTE *)(result + 16) = 1;
  }
  *(_BYTE *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = 0;
  if (*((_BYTE *)a2 + 32))
  {
    v3 = a2[3];
    a2[3] = 0;
    *(_QWORD *)(result + 24) = v3;
    *(_BYTE *)(result + 32) = 1;
  }
  *(_BYTE *)(result + 40) = *((_BYTE *)a2 + 40);
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore19PerformanceObserver4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  WTF *v5;
  WTF::StringImpl **v6;
  uint64_t v7;
  WTF::StringImpl *v8;

  if (*(_BYTE *)(a2 + 32))
  {
    v3 = *(WTF::StringImpl **)(a2 + 24);
    *(_QWORD *)(a2 + 24) = 0;
    if (v3)
    {
      if (*(_DWORD *)v3 == 2)
        WTF::StringImpl::destroy(v3, (WTF::StringImpl *)a2);
      else
        *(_DWORD *)v3 -= 2;
    }
  }
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = *(unsigned int *)(a2 + 12);
    if ((_DWORD)v4)
    {
      v6 = *(WTF::StringImpl ***)a2;
      v7 = 8 * v4;
      do
      {
        v8 = *v6;
        *v6 = 0;
        if (v8)
        {
          if (*(_DWORD *)v8 == 2)
            WTF::StringImpl::destroy(v8, (WTF::StringImpl *)a2);
          else
            *(_DWORD *)v8 -= 2;
        }
        ++v6;
        v7 -= 8;
      }
      while (v7);
    }
    v5 = *(WTF **)a2;
    if (*(_QWORD *)a2)
    {
      *(_QWORD *)a2 = 0;
      *(_DWORD *)(a2 + 8) = 0;
      WTF::fastFree(v5, (void *)a2);
    }
  }
}

uint64_t WebCore::IDLOperation<WebCore::JSPerformanceObserver>::call<&WebCore::jsPerformanceObserverPrototypeFunction_disconnectBody,(WebCore::CastedThisErrorBehavior)0>(uint64_t a1, unint64_t a2)
{
  int v2;
  unint64_t v3;
  void *v4;
  uint64_t v6;

  v2 = a1;
  v6 = *(_QWORD *)(a1 + 56);
  v3 = WebCore::IDLOperation<WebCore::JSPerformanceObserver>::cast(a2);
  if (!v3)
    return (uint64_t)WebCore::throwThisTypeError(v2, (int)&v6, "PerformanceObserver", "disconnect");
  WebCore::PerformanceObserver::disconnect(*(WebCore::PerformanceObserver **)(v3 + 24), v4);
  return 10;
}

_BYTE *WebCore::jsPerformanceObserverEntryListPrototypeFunction_getEntries(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  return WebCore::IDLOperation<WebCore::JSPerformanceObserverEntryList>::call<&WebCore::jsPerformanceObserverEntryListPrototypeFunction_getEntriesBody,(WebCore::CastedThisErrorBehavior)0>((uint64_t)this, *((_QWORD *)a2 + 5));
}

_BYTE *WebCore::jsPerformanceObserverEntryListPrototypeFunction_getEntriesByType(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  JSC::VM *v13;
  void *v14;
  uint64_t v15;
  WTF *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF *v20;
  uint64_t v21;
  _DWORD *v22;
  JSValue v24;
  WTF::StringImpl *v25;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v27;
  WTF::StringImpl *v28;
  WTF *v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  WTF::StringImpl *v34;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSPerformanceObserverEntryList *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "PerformanceObserverEntryList", "getEntriesByType");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException(v5, this, v24);
  }
  v8 = (_DWORD *)v6;
  v9 = *(_DWORD **)(v6 + 24);
  v10 = *((_QWORD *)a2 + 6);
  v29 = (WTF *)v10;
  if ((v10 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v10 + 5) == 2)
  {
    v11 = *(WTF::StringImpl **)(v10 + 8);
    if ((v11 & 1) != 0)
    {
      v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v10, this);
      if (!v11)
        goto LABEL_8;
    }
    else if (!v11)
    {
LABEL_8:
      v34 = v11;
      goto LABEL_9;
    }
    *(_DWORD *)v11 += 2;
    goto LABEL_8;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v29, this);
LABEL_9:
  if (*((_DWORD *)v5 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v12 = v34;
    if (hasExceptionsAfterHandlingTraps)
    {
      v33 = 1;
      v34 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v25);
        else
          *(_DWORD *)v12 -= 2;
      }
      v15 = 0;
      v18 = 1;
      goto LABEL_18;
    }
  }
  else
  {
    v12 = v34;
  }
  v33 = 0;
  v13 = *(JSC::VM **)(16 * (*v8 & 0xFFFFFFFE) + 0x28);
  v32 = 0;
  v28 = v12;
  v34 = 0;
  WebCore::PerformanceObserverEntryList::getEntriesByName(v9, (const WTF::String *)&v34, (const WTF::String *)&v28, (uint64_t)&v29);
  v15 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::PerformanceEntry>>>::convert<WTF::Ref<WebCore::PerformanceEntry,WTF::RawPtrTraits<WebCore::PerformanceEntry>,WTF::DefaultRefDerefTraits<WebCore::PerformanceEntry>>,0ul>((uint64_t)this, v13, (uint64_t)&v29);
  if (v31)
  {
    v20 = v29;
    v21 = 8 * v31;
    do
    {
      v22 = *(_DWORD **)v20;
      *(_QWORD *)v20 = 0;
      if (v22)
      {
        if (v22[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v22 + 8))(v22);
        else
          --v22[2];
      }
      v20 = (WTF *)((char *)v20 + 8);
      v21 -= 8;
    }
    while (v21);
  }
  v16 = v29;
  if (v29)
  {
    v29 = 0;
    v30 = 0;
    WTF::fastFree(v16, v14);
  }
  v17 = v28;
  v28 = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, (WTF::StringImpl *)v14);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = 0;
LABEL_18:
  ((void (*)(WTF **, uint64_t *))off_1E32C9390[v18])(&v29, &v32);
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsPerformanceObserverEntryListPrototypeFunction_getEntriesByName(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::VM *v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  void *v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v25;
  uint64_t v26;
  _DWORD *v27;
  JSValue v29;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  int v33;
  JSC::VM *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  WTF::StringImpl *v41;
  int v42;
  WTF::StringImpl *v43;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v34 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSPerformanceObserverEntryList *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "PerformanceObserverEntryList", "getEntriesByName");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException(v5, this, v29);
  }
  v8 = (_DWORD *)v6;
  v9 = *(_DWORD **)(v6 + 24);
  v10 = *((_QWORD *)a2 + 6);
  v39 = v10;
  if ((v10 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v10 + 5) == 2)
  {
    v11 = *(WTF::StringImpl **)(v10 + 8);
    if ((v11 & 1) != 0)
    {
      v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v10, this);
      if (!v11)
        goto LABEL_8;
    }
    else if (!v11)
    {
LABEL_8:
      v36 = v11;
      goto LABEL_9;
    }
    *(_DWORD *)v11 += 2;
    goto LABEL_8;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v39, this);
LABEL_9:
  if (*((_DWORD *)v5 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v12 = v36;
    if (hasExceptionsAfterHandlingTraps)
    {
      v42 = 1;
      v36 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v31);
        else
          *(_DWORD *)v12 -= 2;
      }
      v19 = 0;
      v23 = 1;
      goto LABEL_34;
    }
  }
  else
  {
    v12 = v36;
  }
  v41 = v12;
  v42 = 0;
  if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v13 = *((_QWORD *)a2 + 7), v13 == 10))
  {
    v14 = 0;
    v40 = 0;
    goto LABEL_23;
  }
  v36 = (WTF::StringImpl *)v13;
  v15 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v13 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v13 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v36, this);
    goto LABEL_20;
  }
  v16 = *(WTF::StringImpl **)(v13 + 8);
  if ((v16 & 1) != 0)
  {
    v16 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v13, this);
    if (!v16)
      goto LABEL_19;
    goto LABEL_18;
  }
  if (v16)
LABEL_18:
    *(_DWORD *)v16 += 2;
LABEL_19:
  v43 = v16;
LABEL_20:
  if (*((_DWORD *)v15 + 20))
  {
    v33 = JSC::VM::hasExceptionsAfterHandlingTraps(v15);
    v14 = v43;
    if (v33)
    {
      v40 = 1;
      v43 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v32);
        else
          *(_DWORD *)v14 -= 2;
      }
      v19 = 0;
      v22 = 1;
      goto LABEL_33;
    }
  }
  else
  {
    v14 = v43;
  }
  v40 = 0;
LABEL_23:
  v17 = *(JSC::VM **)(16 * (*v8 & 0xFFFFFFFE) + 0x28);
  v41 = 0;
  v43 = v12;
  v39 = 0;
  v35 = v14;
  WebCore::PerformanceObserverEntryList::getEntriesByName(v9, (const WTF::String *)&v43, (const WTF::String *)&v35, (uint64_t)&v36);
  v19 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::PerformanceEntry>>>::convert<WTF::Ref<WebCore::PerformanceEntry,WTF::RawPtrTraits<WebCore::PerformanceEntry>,WTF::DefaultRefDerefTraits<WebCore::PerformanceEntry>>,0ul>((uint64_t)this, v17, (uint64_t)&v36);
  if (v38)
  {
    v25 = v36;
    v26 = 8 * v38;
    do
    {
      v27 = *(_DWORD **)v25;
      *(_QWORD *)v25 = 0;
      if (v27)
      {
        if (v27[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v27 + 8))(v27);
        else
          --v27[2];
      }
      v25 = (WTF::StringImpl *)((char *)v25 + 8);
      v26 -= 8;
    }
    while (v26);
  }
  v20 = v36;
  if (v36)
  {
    v36 = 0;
    v37 = 0;
    WTF::fastFree(v20, v18);
  }
  v21 = v35;
  v35 = 0;
  if (!v21)
  {
LABEL_29:
    if (v12)
      goto LABEL_30;
    goto LABEL_32;
  }
  if (*(_DWORD *)v21 != 2)
  {
    *(_DWORD *)v21 -= 2;
    goto LABEL_29;
  }
  WTF::StringImpl::destroy(v21, (WTF::StringImpl *)v18);
  if (v12)
  {
LABEL_30:
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, (WTF::StringImpl *)v18);
    else
      *(_DWORD *)v12 -= 2;
  }
LABEL_32:
  v22 = 0;
LABEL_33:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32C9390[v22])(&v36, &v39);
  v23 = 0;
LABEL_34:
  ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32C9390[v23])(&v39, &v41);
  return (_BYTE *)v19;
}

_BYTE *WebCore::IDLOperation<WebCore::JSPerformanceObserverEntryList>::call<&WebCore::jsPerformanceObserverEntryListPrototypeFunction_getEntriesBody,(WebCore::CastedThisErrorBehavior)0>(uint64_t a1, unint64_t a2)
{
  unint64_t v3;
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 56);
  v3 = JSC::jsDynamicCast<WebCore::JSPerformanceObserverEntryList *>(a2);
  if (v3)
    return (_BYTE *)WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::PerformanceEntry>>>::convert<WTF::Ref<WebCore::PerformanceEntry,WTF::RawPtrTraits<WebCore::PerformanceEntry>,WTF::DefaultRefDerefTraits<WebCore::PerformanceEntry>>,0ul>(a1, *(JSC::VM **)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(v3 + 24) + 8);
  else
    return WebCore::throwThisTypeError(a1, (int)&v5, "PerformanceObserverEntryList", "getEntries");
}

_BYTE *WebCore::jsPerformanceResourceTimingPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  double v26;
  uint64_t v27;
  unint64_t v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  double v31;
  uint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  double v49;
  double v50;
  uint64_t v51;
  unint64_t v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  double v55;
  double v56;
  uint64_t v57;
  unint64_t v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  double v61;
  double v62;
  uint64_t v63;
  unint64_t v64;
  WTF::StringImpl *v65;
  WTF::StringImpl *v66;
  double v67;
  double v68;
  uint64_t v69;
  unint64_t v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  double v73;
  double v74;
  double v75;
  uint64_t v76;
  unint64_t v77;
  WTF::StringImpl *v78;
  WTF::StringImpl *v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  uint64_t v85;
  unint64_t v86;
  WTF::StringImpl *v87;
  WTF::StringImpl *v88;
  double v89;
  uint64_t v90;
  unint64_t v91;
  WTF::StringImpl *v92;
  WTF::StringImpl *v93;
  double v94;
  double v95;
  double v96;
  double v97;
  uint64_t v98;
  unint64_t v99;
  WTF::StringImpl *v100;
  WTF::StringImpl *v101;
  double v102;
  double v103;
  double v104;
  double v105;
  uint64_t v106;
  unint64_t v107;
  WTF::StringImpl *v108;
  WTF::StringImpl *v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  uint64_t v115;
  unint64_t v116;
  WTF::StringImpl *v117;
  WTF::StringImpl *v118;
  double v119;
  uint64_t v120;
  unint64_t v121;
  WTF::StringImpl *v122;
  WTF::StringImpl *v123;
  double v124;
  double v125;
  uint64_t v126;
  unint64_t v127;
  WTF::StringImpl *v128;
  WTF::StringImpl *v129;
  uint64_t v130;
  unint64_t v131;
  double v132;
  unint64_t v133;
  WTF::StringImpl *v134;
  WTF::StringImpl *v135;
  unint64_t v136;
  double v137;
  unint64_t v138;
  WTF::StringImpl *v139;
  WTF::StringImpl *v140;
  unint64_t v141;
  double v142;
  unint64_t v143;
  WTF::StringImpl *v144;
  WTF::StringImpl *v145;
  uint64_t v146;
  WTF::StringImpl *v147;
  WTF::StringImpl *v148;
  unsigned __int8 *v150;
  unsigned int v151;
  unsigned __int8 *v152;
  unsigned int v153;
  unsigned __int8 *v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unint64_t v159;
  uint64_t SlowCase;
  uint64_t v161;
  WTF::StringImpl *v162;
  unint64_t v163;
  int v164;
  int v165;
  uint64_t v166;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v161 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v161, "PerformanceResourceTiming", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPerformanceResourceTiming::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPerformanceResourceTiming::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v161, "PerformanceResourceTiming", "toJSON");
  v11 = *(uint64_t **)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (v12)
  {
    v13 = *(unsigned int *)(v12 + 60);
    v14 = *(_QWORD *)(v12 + 24);
    if (v14 < *(_QWORD *)(v12 + 32))
    {
LABEL_14:
      *(_QWORD *)(v12 + 24) = v14 + v13;
      goto LABEL_15;
    }
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v159 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v159);
      *(_QWORD *)(v12 + 40) = v14 + (int)v159;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
  }
  else
  {
    SlowCase = JSC::CompleteSubspace::allocateSlow();
  }
  v14 = SlowCase;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v15 = *((_QWORD *)this + 7);
  v16 = v11[2];
  if (!v16 || (v17 = *(_DWORD *)(v16 + 4)) == 0)
  {
    v18 = *(_QWORD *)(v15 + 41968);
    goto LABEL_23;
  }
  if (v17 != 1)
    goto LABEL_20;
  v150 = *(unsigned __int8 **)(v16 + 8);
  if ((*(_BYTE *)(v16 + 16) & 4) != 0)
  {
    v151 = *v150;
LABEL_335:
    v18 = *(_QWORD *)(v15 + 8 * v151 + 42216);
    goto LABEL_23;
  }
  v156 = *(unsigned __int16 *)v150;
  if (v156 <= 0xFF)
  {
    v151 = v156;
    goto LABEL_335;
  }
LABEL_20:
  v18 = *(_QWORD *)(v15 + 64760);
  if (!v18 || v16 != *(_QWORD *)(v18 + 8))
    v18 = JSC::jsStringWithCacheSlowCase();
LABEL_23:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v162);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = (WTF::StringImpl *)(*(uint64_t (**)(uint64_t *))(*v11 + 40))(v11);
  v23 = WebCore::JSConverterOverloader<WebCore::IDLDOMString,true,false>::convert<WTF::ASCIILiteral>((uint64_t)this, v21, v22);
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v24 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v24, v23, 0, (uint64_t)&v162);
  if (v24)
  {
    if (*(_DWORD *)v24 == 2)
      WTF::StringImpl::destroy(v24, v25);
    else
      *(_DWORD *)v24 -= 2;
  }
  v26 = (*(double (**)(uint64_t *))(*v11 + 16))(v11);
  if ((*(_QWORD *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v27 = (int)v26, v26 == (double)(int)v27)
    && ((_DWORD)v27 || (*(_QWORD *)&v26 & 0x8000000000000000) == 0))
  {
    v28 = v27 | 0xFFFE000000000000;
  }
  else
  {
    v28 = *(_QWORD *)&v26 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v29 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v29, v28, 0, (uint64_t)&v162);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v30);
    else
      *(_DWORD *)v29 -= 2;
  }
  v31 = (*(double (**)(uint64_t *))(*v11 + 24))(v11);
  if ((*(_QWORD *)&v31 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v32 = (int)v31, v31 == (double)(int)v32)
    && ((_DWORD)v32 || (*(_QWORD *)&v31 & 0x8000000000000000) == 0))
  {
    v33 = v32 | 0xFFFE000000000000;
  }
  else
  {
    v33 = *(_QWORD *)&v31 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v34 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v34, v33, 0, (uint64_t)&v162);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  v36 = *((_QWORD *)this + 7);
  v37 = v11[11];
  if (!v37 || (v38 = *(_DWORD *)(v37 + 4)) == 0)
  {
    v39 = *(_QWORD *)(v36 + 41968);
    goto LABEL_57;
  }
  if (v38 == 1)
  {
    v152 = *(unsigned __int8 **)(v37 + 8);
    if ((*(_BYTE *)(v37 + 16) & 4) != 0)
    {
      v153 = *v152;
    }
    else
    {
      v157 = *(unsigned __int16 *)v152;
      if (v157 > 0xFF)
        goto LABEL_54;
      v153 = v157;
    }
    v39 = *(_QWORD *)(v36 + 8 * v153 + 42216);
    goto LABEL_57;
  }
LABEL_54:
  v39 = *(_QWORD *)(v36 + 64760);
  if (!v39 || v37 != *(_QWORD *)(v39 + 8))
    v39 = JSC::jsStringWithCacheSlowCase();
LABEL_57:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v40 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v40, v39, 0, (uint64_t)&v162);
  if (v40)
  {
    if (*(_DWORD *)v40 == 2)
      WTF::StringImpl::destroy(v40, v41);
    else
      *(_DWORD *)v40 -= 2;
  }
  v42 = v11 + 25;
  if ((*((_BYTE *)v11 + 210) & 0x40) != 0)
    v42 = (uint64_t *)MEMORY[0x1E0CBF738];
  v43 = *((_QWORD *)this + 7);
  v44 = *v42;
  if (!*v42 || (v45 = *(_DWORD *)(v44 + 4)) == 0)
  {
    v46 = *(_QWORD *)(v43 + 41968);
    goto LABEL_69;
  }
  if (v45 != 1)
    goto LABEL_66;
  v154 = *(unsigned __int8 **)(v44 + 8);
  if ((*(_BYTE *)(v44 + 16) & 4) != 0)
  {
    v155 = *v154;
LABEL_341:
    v46 = *(_QWORD *)(v43 + 8 * v155 + 42216);
    goto LABEL_69;
  }
  v158 = *(unsigned __int16 *)v154;
  if (v158 <= 0xFF)
  {
    v155 = v158;
    goto LABEL_341;
  }
LABEL_66:
  v46 = *(_QWORD *)(v43 + 64760);
  if (!v46 || v44 != *(_QWORD *)(v46 + 8))
    v46 = JSC::jsStringWithCacheSlowCase();
LABEL_69:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v47 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v47, v46, 0, (uint64_t)&v162);
  if (v47)
  {
    if (*(_DWORD *)v47 == 2)
      WTF::StringImpl::destroy(v47, v48);
    else
      *(_DWORD *)v47 -= 2;
  }
  v49 = 0.0;
  if ((*((_BYTE *)v11 + 210) & 0x40) == 0)
  {
    v50 = *((double *)v11 + 24);
    if (v50 != 0.0)
      v49 = *(double *)&WebCore::timePrecision
          * floor((v50 - *((double *)v11 + 5)) / *(double *)&WebCore::timePrecision)
          * 1000.0;
  }
  if ((*(_QWORD *)&v49 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v51 = (int)v49, v49 == (double)(int)v51)
    && ((_DWORD)v51 || (*(_QWORD *)&v49 & 0x8000000000000000) == 0))
  {
    v52 = v51 | 0xFFFE000000000000;
  }
  else
  {
    v52 = *(_QWORD *)&v49 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v53 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v53, v52, 0, (uint64_t)&v162);
  if (v53)
  {
    if (*(_DWORD *)v53 == 2)
      WTF::StringImpl::destroy(v53, v54);
    else
      *(_DWORD *)v53 -= 2;
  }
  v55 = 0.0;
  if ((*((_BYTE *)v11 + 210) & 0x40) == 0 && !*((_BYTE *)v11 + 256))
  {
    if (*((_WORD *)v11 + 104))
    {
      v56 = *((double *)v11 + 14);
      if (v56 != 0.0)
        v55 = *(double *)&WebCore::timePrecision
            * floor((v56 - *((double *)v11 + 5)) / *(double *)&WebCore::timePrecision)
            * 1000.0;
    }
  }
  if ((*(_QWORD *)&v55 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v57 = (int)v55, v55 == (double)(int)v57)
    && ((_DWORD)v57 || (*(_QWORD *)&v55 & 0x8000000000000000) == 0))
  {
    v58 = v57 | 0xFFFE000000000000;
  }
  else
  {
    v58 = *(_QWORD *)&v55 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v59 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v59, v58, 0, (uint64_t)&v162);
  if (v59)
  {
    if (*(_DWORD *)v59 == 2)
      WTF::StringImpl::destroy(v59, v60);
    else
      *(_DWORD *)v59 -= 2;
  }
  v61 = 0.0;
  if ((*((_BYTE *)v11 + 210) & 0x40) == 0 && !*((_BYTE *)v11 + 256))
  {
    if (*((_WORD *)v11 + 104))
    {
      v62 = *((double *)v11 + 15);
      if (v62 != 0.0 || (v62 = *((double *)v11 + 12), v62 != 0.0))
        v61 = *(double *)&WebCore::timePrecision
            * floor((v62 - *((double *)v11 + 5)) / *(double *)&WebCore::timePrecision)
            * 1000.0;
    }
  }
  if ((*(_QWORD *)&v61 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v63 = (int)v61, v61 == (double)(int)v63)
    && ((_DWORD)v63 || (*(_QWORD *)&v61 & 0x8000000000000000) == 0))
  {
    v64 = v63 | 0xFFFE000000000000;
  }
  else
  {
    v64 = *(_QWORD *)&v61 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v65 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v65, v64, 0, (uint64_t)&v162);
  if (v65)
  {
    if (*(_DWORD *)v65 == 2)
      WTF::StringImpl::destroy(v65, v66);
    else
      *(_DWORD *)v65 -= 2;
  }
  if (((v67 = *((double *)v11 + 15), v67 == 0.0) || (*((_BYTE *)v11 + 210) & 0x40) != 0)
    && (v67 = *((double *)v11 + 12), v67 == 0.0))
  {
    v68 = 0.0;
  }
  else
  {
    v68 = *(double *)&WebCore::timePrecision
        * floor((v67 - *((double *)v11 + 5)) / *(double *)&WebCore::timePrecision)
        * 1000.0;
  }
  if ((*(_QWORD *)&v68 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v69 = (int)v68, v68 == (double)(int)v69)
    && ((_DWORD)v69 || (*(_QWORD *)&v68 & 0x8000000000000000) == 0))
  {
    v70 = v69 | 0xFFFE000000000000;
  }
  else
  {
    v70 = *(_QWORD *)&v68 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v71 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v71, v70, 0, (uint64_t)&v162);
  if (v71)
  {
    if (*(_DWORD *)v71 == 2)
      WTF::StringImpl::destroy(v71, v72);
    else
      *(_DWORD *)v71 -= 2;
  }
  v73 = 0.0;
  if ((*((_BYTE *)v11 + 210) & 0x40) == 0)
  {
    if (*((_BYTE *)v11 + 256))
    {
      v74 = *((double *)v11 + 5);
    }
    else
    {
      v75 = *((double *)v11 + 16);
      v74 = *((double *)v11 + 5);
      if (v75 != 0.0)
        goto LABEL_136;
    }
    v75 = *((double *)v11 + 15);
    if (v75 == 0.0)
    {
      v75 = *((double *)v11 + 12);
      if (v75 == 0.0)
        goto LABEL_137;
    }
LABEL_136:
    v73 = *(double *)&WebCore::timePrecision * floor((v75 - v74) / *(double *)&WebCore::timePrecision) * 1000.0;
  }
LABEL_137:
  if ((*(_QWORD *)&v73 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v76 = (int)v73, v73 == (double)(int)v76)
    && ((_DWORD)v76 || (*(_QWORD *)&v73 & 0x8000000000000000) == 0))
  {
    v77 = v76 | 0xFFFE000000000000;
  }
  else
  {
    v77 = *(_QWORD *)&v73 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v78 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v78, v77, 0, (uint64_t)&v162);
  if (v78)
  {
    if (*(_DWORD *)v78 == 2)
      WTF::StringImpl::destroy(v78, v79);
    else
      *(_DWORD *)v78 -= 2;
  }
  v80 = 0.0;
  if ((*((_BYTE *)v11 + 210) & 0x40) == 0)
  {
    if (*((_BYTE *)v11 + 256))
    {
      v81 = *((double *)v11 + 5);
    }
    else
    {
      v84 = *((double *)v11 + 17);
      if (v84 != 0.0)
      {
        v83 = v84 - *((double *)v11 + 5);
        goto LABEL_154;
      }
      v82 = *((double *)v11 + 16);
      v81 = *((double *)v11 + 5);
      if (v82 != 0.0)
      {
LABEL_151:
        v83 = v82 - v81;
LABEL_154:
        v80 = *(double *)&WebCore::timePrecision * floor(v83 / *(double *)&WebCore::timePrecision) * 1000.0;
        goto LABEL_155;
      }
    }
    v82 = *((double *)v11 + 15);
    if (v82 == 0.0)
    {
      v82 = *((double *)v11 + 12);
      if (v82 == 0.0)
        goto LABEL_155;
    }
    goto LABEL_151;
  }
LABEL_155:
  if ((*(_QWORD *)&v80 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v85 = (int)v80, v80 == (double)(int)v85)
    && ((_DWORD)v85 || (*(_QWORD *)&v80 & 0x8000000000000000) == 0))
  {
    v86 = v85 | 0xFFFE000000000000;
  }
  else
  {
    v86 = *(_QWORD *)&v80 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v87 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v87, v86, 0, (uint64_t)&v162);
  if (v87)
  {
    if (*(_DWORD *)v87 == 2)
      WTF::StringImpl::destroy(v87, v88);
    else
      *(_DWORD *)v87 -= 2;
  }
  WebCore::PerformanceResourceTiming::connectStart((WebCore::PerformanceResourceTiming *)v11);
  if ((*(_QWORD *)&v89 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v90 = (int)v89, v89 == (double)(int)v90)
    && ((_DWORD)v90 || (*(_QWORD *)&v89 & 0x8000000000000000) == 0))
  {
    v91 = v90 | 0xFFFE000000000000;
  }
  else
  {
    v91 = *(_QWORD *)&v89 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v92 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v92, v91, 0, (uint64_t)&v162);
  if (v92)
  {
    if (*(_DWORD *)v92 == 2)
      WTF::StringImpl::destroy(v92, v93);
    else
      *(_DWORD *)v92 -= 2;
  }
  v94 = 0.0;
  if ((*((_BYTE *)v11 + 210) & 0x40) == 0)
  {
    if (*((_BYTE *)v11 + 256))
    {
      v95 = *((double *)v11 + 15);
      if (v95 == 0.0)
      {
        v95 = *((double *)v11 + 12);
        if (v95 == 0.0)
          goto LABEL_182;
      }
      v96 = v95 - *((double *)v11 + 5);
    }
    else
    {
      v97 = *((double *)v11 + 20);
      if (v97 == 0.0)
      {
        WebCore::PerformanceResourceTiming::connectStart((WebCore::PerformanceResourceTiming *)v11);
        goto LABEL_182;
      }
      v96 = v97 - *((double *)v11 + 5);
    }
    v94 = *(double *)&WebCore::timePrecision * floor(v96 / *(double *)&WebCore::timePrecision) * 1000.0;
  }
LABEL_182:
  if ((*(_QWORD *)&v94 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v98 = (int)v94, v94 == (double)(int)v98)
    && ((_DWORD)v98 || (*(_QWORD *)&v94 & 0x8000000000000000) == 0))
  {
    v99 = v98 | 0xFFFE000000000000;
  }
  else
  {
    v99 = *(_QWORD *)&v94 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v100 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v100, v99, 0, (uint64_t)&v162);
  if (v100)
  {
    if (*(_DWORD *)v100 == 2)
      WTF::StringImpl::destroy(v100, v101);
    else
      *(_DWORD *)v100 -= 2;
  }
  v102 = 0.0;
  if ((*((_BYTE *)v11 + 210) & 0x40) == 0)
  {
    v103 = *((double *)v11 + 19);
    if (v103 == -1.0)
    {
      v104 = *((double *)v11 + 15);
      if (v104 == 0.0)
      {
        v104 = *((double *)v11 + 12);
        if (v104 == 0.0)
          goto LABEL_199;
      }
      v105 = v104 - *((double *)v11 + 5);
    }
    else
    {
      if (v103 == 0.0)
        goto LABEL_199;
      v105 = v103 - *((double *)v11 + 5);
    }
    v102 = *(double *)&WebCore::timePrecision * floor(v105 / *(double *)&WebCore::timePrecision) * 1000.0;
  }
LABEL_199:
  if ((*(_QWORD *)&v102 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v106 = (int)v102, v102 == (double)(int)v106)
    && ((_DWORD)v106 || (*(_QWORD *)&v102 & 0x8000000000000000) == 0))
  {
    v107 = v106 | 0xFFFE000000000000;
  }
  else
  {
    v107 = *(_QWORD *)&v102 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v108 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v108, v107, 0, (uint64_t)&v162);
  if (v108)
  {
    if (*(_DWORD *)v108 == 2)
      WTF::StringImpl::destroy(v108, v109);
    else
      *(_DWORD *)v108 -= 2;
  }
  v110 = 0.0;
  if ((*((_BYTE *)v11 + 210) & 0x40) == 0)
  {
    v111 = *((double *)v11 + 21);
    if (v111 != 0.0)
    {
      v112 = v111 - *((double *)v11 + 5);
LABEL_237:
      v110 = *(double *)&WebCore::timePrecision * floor(v112 / *(double *)&WebCore::timePrecision) * 1000.0;
      goto LABEL_238;
    }
    if (*((_BYTE *)v11 + 256))
    {
      v113 = *((double *)v11 + 15);
      if (v113 == 0.0)
      {
        v113 = *((double *)v11 + 12);
        if (v113 == 0.0)
          goto LABEL_238;
      }
      v112 = v113 - *((double *)v11 + 5);
      goto LABEL_237;
    }
    v114 = *((double *)v11 + 20);
    if (v114 != 0.0)
    {
      v112 = v114 - *((double *)v11 + 5);
      goto LABEL_237;
    }
    WebCore::PerformanceResourceTiming::connectStart((WebCore::PerformanceResourceTiming *)v11);
  }
LABEL_238:
  if ((*(_QWORD *)&v110 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v115 = (int)v110, v110 == (double)(int)v115)
    && ((_DWORD)v115 || (*(_QWORD *)&v110 & 0x8000000000000000) == 0))
  {
    v116 = v115 | 0xFFFE000000000000;
  }
  else
  {
    v116 = *(_QWORD *)&v110 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v117 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v117, v116, 0, (uint64_t)&v162);
  if (v117)
  {
    if (*(_DWORD *)v117 == 2)
      WTF::StringImpl::destroy(v117, v118);
    else
      *(_DWORD *)v117 -= 2;
  }
  WebCore::PerformanceResourceTiming::responseStart((WebCore::PerformanceResourceTiming *)v11);
  if ((*(_QWORD *)&v119 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v120 = (int)v119, v119 == (double)(int)v120)
    && ((_DWORD)v120 || (*(_QWORD *)&v119 & 0x8000000000000000) == 0))
  {
    v121 = v120 | 0xFFFE000000000000;
  }
  else
  {
    v121 = *(_QWORD *)&v119 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v122 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v122, v121, 0, (uint64_t)&v162);
  if (v122)
  {
    if (*(_DWORD *)v122 == 2)
      WTF::StringImpl::destroy(v122, v123);
    else
      *(_DWORD *)v122 -= 2;
  }
  if (((*((_BYTE *)v11 + 210) & 1) == 0 || (v124 = *((double *)v11 + 23), v124 == 0.0))
    && (v124 = *((double *)v11 + 13), v124 == 0.0))
  {
    v125 = 0.0;
  }
  else
  {
    v125 = *(double *)&WebCore::timePrecision
         * floor((v124 - *((double *)v11 + 5)) / *(double *)&WebCore::timePrecision)
         * 1000.0;
  }
  if ((*(_QWORD *)&v125 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v126 = (int)v125, v125 == (double)(int)v126)
    && ((_DWORD)v126 || (*(_QWORD *)&v125 & 0x8000000000000000) == 0))
  {
    v127 = v126 | 0xFFFE000000000000;
  }
  else
  {
    v127 = *(_QWORD *)&v125 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v128 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v128, v127, 0, (uint64_t)&v162);
  if (v128)
  {
    if (*(_DWORD *)v128 == 2)
      WTF::StringImpl::destroy(v128, v129);
    else
      *(_DWORD *)v128 -= 2;
  }
  if (!*((_BYTE *)v11 + 257) || (v130 = v11[27], v130 == -1))
  {
    v131 = 0;
  }
  else
  {
    v131 = v130 + 300;
    if (HIDWORD(v131))
    {
      v132 = (double)v131;
      goto LABEL_332;
    }
    if ((v131 & 0x80000000) != 0)
    {
      v132 = (double)v131;
LABEL_332:
      v133 = *(_QWORD *)&v132 + 0x2000000000000;
      goto LABEL_279;
    }
  }
  v133 = v131 | 0xFFFE000000000000;
LABEL_279:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v134 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v134, v133, 0, (uint64_t)&v162);
  if (v134)
  {
    if (*(_DWORD *)v134 == 2)
      WTF::StringImpl::destroy(v134, v135);
    else
      *(_DWORD *)v134 -= 2;
  }
  if (!*((_BYTE *)v11 + 257) || (v136 = v11[27], v136 == -1))
  {
    v136 = 0;
  }
  else
  {
    if (HIDWORD(v136))
    {
      v137 = (double)v136;
      goto LABEL_327;
    }
    if ((v136 & 0x80000000) != 0)
    {
      v137 = (double)v136;
LABEL_327:
      v138 = *(_QWORD *)&v137 + 0x2000000000000;
      goto LABEL_290;
    }
  }
  v138 = v136 | 0xFFFE000000000000;
LABEL_290:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v139 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v139, v138, 0, (uint64_t)&v162);
  if (v139)
  {
    if (*(_DWORD *)v139 == 2)
      WTF::StringImpl::destroy(v139, v140);
    else
      *(_DWORD *)v139 -= 2;
  }
  if (!*((_BYTE *)v11 + 257) || (v141 = v11[28], v141 == -1))
  {
    v141 = 0;
  }
  else
  {
    if (HIDWORD(v141))
    {
      v142 = (double)v141;
      goto LABEL_329;
    }
    if ((v141 & 0x80000000) != 0)
    {
      v142 = (double)v141;
LABEL_329:
      v143 = *(_QWORD *)&v142 + 0x2000000000000;
      goto LABEL_301;
    }
  }
  v143 = v141 | 0xFFFE000000000000;
LABEL_301:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v144 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v144, v143, 0, (uint64_t)&v162);
  if (v144)
  {
    if (*(_DWORD *)v144 == 2)
      WTF::StringImpl::destroy(v144, v145);
    else
      *(_DWORD *)v144 -= 2;
  }
  v146 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLInterface<WebCore::PerformanceServerTiming>>>::convert<WTF::Ref<WebCore::PerformanceServerTiming,WTF::RawPtrTraits<WebCore::PerformanceServerTiming>,WTF::DefaultRefDerefTraits<WebCore::PerformanceServerTiming>>,0ul>(this, *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28), (uint64_t)(v11 + 33));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v147 = v162;
  v162 = 0;
  v163 = v14;
  v164 = -1;
  v165 = 0x1000000;
  v166 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v147, v146, 0, (uint64_t)&v162);
  if (v147)
  {
    if (*(_DWORD *)v147 == 2)
      WTF::StringImpl::destroy(v147, v148);
    else
      *(_DWORD *)v147 -= 2;
  }
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsPerformanceServerTimingPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  double v21;
  uint64_t v22;
  unint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  unsigned __int8 *v33;
  unsigned int v34;
  unsigned __int8 *v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t SlowCase;
  uint64_t v41;
  WTF::StringImpl *v42;
  unint64_t v43;
  int v44;
  int v45;
  uint64_t v46;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v41 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v41, "PerformanceServerTiming", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSPerformanceServerTiming::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSPerformanceServerTiming::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v41, "PerformanceServerTiming", "toJSON");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (v12)
  {
    v13 = *(unsigned int *)(v12 + 60);
    v14 = *(_QWORD *)(v12 + 24);
    if (v14 < *(_QWORD *)(v12 + 32))
    {
LABEL_14:
      *(_QWORD *)(v12 + 24) = v14 + v13;
      goto LABEL_15;
    }
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v39 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v39);
      *(_QWORD *)(v12 + 40) = v14 + (int)v39;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
  }
  else
  {
    SlowCase = JSC::CompleteSubspace::allocateSlow();
  }
  v14 = SlowCase;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v15 = *((_QWORD *)this + 7);
  v16 = *(_QWORD *)(v11 + 8);
  if (!v16 || (v17 = *(_DWORD *)(v16 + 4)) == 0)
  {
    v18 = *(_QWORD *)(v15 + 41968);
    goto LABEL_23;
  }
  if (v17 != 1)
    goto LABEL_20;
  v33 = *(unsigned __int8 **)(v16 + 8);
  if ((*(_BYTE *)(v16 + 16) & 4) != 0)
  {
    v34 = *v33;
LABEL_55:
    v18 = *(_QWORD *)(v15 + 8 * v34 + 42216);
    goto LABEL_23;
  }
  v37 = *(unsigned __int16 *)v33;
  if (v37 <= 0xFF)
  {
    v34 = v37;
    goto LABEL_55;
  }
LABEL_20:
  v18 = *(_QWORD *)(v15 + 64760);
  if (!v18 || v16 != *(_QWORD *)(v18 + 8))
    v18 = JSC::jsStringWithCacheSlowCase();
LABEL_23:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v42;
  v42 = 0;
  v43 = v14;
  v44 = -1;
  v45 = 0x1000000;
  v46 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v42);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = *(double *)(v11 + 16);
  if ((*(_QWORD *)&v21 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v22 = (int)v21, v21 == (double)(int)v22)
    && ((_DWORD)v22 || (*(_QWORD *)&v21 & 0x8000000000000000) == 0))
  {
    v23 = v22 | 0xFFFE000000000000;
  }
  else
  {
    v23 = *(_QWORD *)&v21 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v24 = v42;
  v42 = 0;
  v43 = v14;
  v44 = -1;
  v45 = 0x1000000;
  v46 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v24, v23, 0, (uint64_t)&v42);
  if (v24)
  {
    if (*(_DWORD *)v24 == 2)
      WTF::StringImpl::destroy(v24, v25);
    else
      *(_DWORD *)v24 -= 2;
  }
  v26 = *((_QWORD *)this + 7);
  v27 = *(_QWORD *)(v11 + 24);
  if (v27 && (v28 = *(_DWORD *)(v27 + 4)) != 0)
  {
    if (v28 != 1)
    {
LABEL_40:
      v29 = *(_QWORD *)(v26 + 64760);
      if (!v29 || v27 != *(_QWORD *)(v29 + 8))
        v29 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_43;
    }
    v35 = *(unsigned __int8 **)(v27 + 8);
    if ((*(_BYTE *)(v27 + 16) & 4) != 0)
    {
      v36 = *v35;
    }
    else
    {
      v38 = *(unsigned __int16 *)v35;
      if (v38 > 0xFF)
        goto LABEL_40;
      v36 = v38;
    }
    v29 = *(_QWORD *)(v26 + 8 * v36 + 42216);
  }
  else
  {
    v29 = *(_QWORD *)(v26 + 41968);
  }
LABEL_43:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v30 = v42;
  v42 = 0;
  v43 = v14;
  v44 = -1;
  v45 = 0x1000000;
  v46 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v30, v29, 0, (uint64_t)&v42);
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v31);
    else
      *(_DWORD *)v30 -= 2;
  }
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsPerformanceTimingPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::PerformanceTiming *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t SlowCase;
  unint64_t v14;
  unint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  unint64_t v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  unint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  unint64_t v26;
  unint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  unint64_t v30;
  unint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  unint64_t Start;
  unint64_t v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  unint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  unint64_t v42;
  unint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  unint64_t v46;
  unint64_t v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  unint64_t v50;
  unint64_t v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  unint64_t v54;
  unint64_t v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  unint64_t v58;
  unint64_t v59;
  WTF::StringImpl *v60;
  WTF::StringImpl *v61;
  unint64_t v62;
  unint64_t v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  unint64_t v66;
  unint64_t v67;
  WTF::StringImpl *v68;
  WTF::StringImpl *v69;
  unint64_t v70;
  unint64_t v71;
  WTF::StringImpl *v72;
  WTF::StringImpl *v73;
  unint64_t v74;
  unint64_t v75;
  WTF::StringImpl *v76;
  WTF::StringImpl *v77;
  unint64_t v78;
  unint64_t v79;
  WTF::StringImpl *v80;
  WTF::StringImpl *v81;
  unint64_t v82;
  unint64_t v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v85;
  unint64_t v86;
  unint64_t v87;
  WTF::StringImpl *v88;
  WTF::StringImpl *v89;
  unint64_t v90;
  unint64_t v91;
  WTF::StringImpl *v92;
  WTF::StringImpl *v93;
  unint64_t v94;
  unint64_t v95;
  WTF::StringImpl *v96;
  WTF::StringImpl *v97;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  unint64_t v127;
  WebCore *v128;
  WebCore *v129;
  uint64_t v130;
  double v131;
  unint64_t v132;
  int v133;
  int v134;
  uint64_t v135;

  v3 = *((_QWORD *)a2 + 5);
  v4 = *((_QWORD *)this + 7);
  v130 = v4;
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v130, "PerformanceTiming", "toJSON");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSPerformanceTiming::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSPerformanceTiming::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v130, "PerformanceTiming", "toJSON");
  v10 = *(WebCore::PerformanceTiming **)(v3 + 24);
  v11 = *(_QWORD *)(v4 + 15056);
  if (v11)
  {
    v12 = *(unsigned int *)(v11 + 60);
    SlowCase = *(_QWORD *)(v11 + 24);
    if (SlowCase < *(_QWORD *)(v11 + 32))
    {
LABEL_14:
      *(_QWORD *)(v11 + 24) = SlowCase + v12;
      goto LABEL_15;
    }
    SlowCase = *(_QWORD *)(v11 + 40);
    if ((SlowCase & 1) == 0)
    {
      v127 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v11 + 48);
      *(_QWORD *)(v11 + 32) = SlowCase + HIDWORD(v127);
      *(_QWORD *)(v11 + 40) = SlowCase + (int)v127;
      goto LABEL_14;
    }
    v129 = this;
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
    this = v129;
  }
  else
  {
    v128 = this;
    SlowCase = JSC::CompleteSubspace::allocateSlow();
    this = v128;
  }
LABEL_15:
  *(_DWORD *)SlowCase = 0;
  *(_DWORD *)SlowCase = *((_DWORD *)this + 212);
  *(_DWORD *)(SlowCase + 4) = 16783360;
  *(_OWORD *)(SlowCase + 8) = 0u;
  *(_OWORD *)(SlowCase + 24) = 0u;
  *(_OWORD *)(SlowCase + 40) = 0u;
  *(_QWORD *)(SlowCase + 56) = 0;
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  v14 = *((_QWORD *)v10 + 2);
  if (!v14)
  {
    v14 = *((_QWORD *)v10 + 1);
    if (!v14)
      goto LABEL_20;
    v14 = *(_QWORD *)(v14 + 8);
    if (!v14)
      goto LABEL_20;
    v14 = *(_QWORD *)(v14 + 72);
    if (!v14)
      goto LABEL_20;
    v14 = *(_QWORD *)(v14 + 8);
    if (!v14)
      goto LABEL_20;
    if (*(_BYTE *)(v14 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194E053E4);
    }
    v14 = *(_QWORD *)(v14 + 240);
    if (!v14)
      goto LABEL_20;
    v14 = *(_QWORD *)(v14 + 8);
    if (!v14)
      goto LABEL_20;
    v14 = *(_QWORD *)(*(_QWORD *)(v14 + 280) + 88);
    if (!v14)
      goto LABEL_20;
    v131 = *(double *)(v14 + 2728);
    if (v131 == 0.0)
    {
      v14 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v131);
      v14 = (unint64_t)(*(double *)&WebCore::timePrecision
                             * floor(v99 / *(double *)&WebCore::timePrecision)
                             * 1000.0);
    }
    *((_QWORD *)v10 + 2) = v14;
  }
  if (HIDWORD(v14))
  {
    v106 = (double)v14;
LABEL_278:
    v15 = *(_QWORD *)&v106 + 0x2000000000000;
    goto LABEL_21;
  }
  if ((v14 & 0x80000000) != 0)
  {
    v106 = (double)v14;
    goto LABEL_278;
  }
LABEL_20:
  v15 = v14 | 0xFFFE000000000000;
LABEL_21:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v16 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v16, v15, 0, (uint64_t)&v131);
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v17);
    else
      *(_DWORD *)v16 -= 2;
  }
  v18 = WebCore::PerformanceTiming::unloadEventStart(v10);
  if (HIDWORD(v18))
  {
    v107 = (double)v18;
LABEL_280:
    v19 = *(_QWORD *)&v107 + 0x2000000000000;
    goto LABEL_28;
  }
  if ((v18 & 0x80000000) != 0)
  {
    v107 = (double)v18;
    goto LABEL_280;
  }
  v19 = v18 | 0xFFFE000000000000;
LABEL_28:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v20 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v20, v19, 0, (uint64_t)&v131);
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v21);
    else
      *(_DWORD *)v20 -= 2;
  }
  v22 = WebCore::PerformanceTiming::unloadEventEnd(v10);
  if (HIDWORD(v22))
  {
    v108 = (double)v22;
LABEL_282:
    v23 = *(_QWORD *)&v108 + 0x2000000000000;
    goto LABEL_35;
  }
  if ((v22 & 0x80000000) != 0)
  {
    v108 = (double)v22;
    goto LABEL_282;
  }
  v23 = v22 | 0xFFFE000000000000;
LABEL_35:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v24 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v24, v23, 0, (uint64_t)&v131);
  if (v24)
  {
    if (*(_DWORD *)v24 == 2)
      WTF::StringImpl::destroy(v24, v25);
    else
      *(_DWORD *)v24 -= 2;
  }
  v26 = WebCore::PerformanceTiming::redirectStart(v10);
  if (HIDWORD(v26))
  {
    v109 = (double)v26;
LABEL_284:
    v27 = *(_QWORD *)&v109 + 0x2000000000000;
    goto LABEL_42;
  }
  if ((v26 & 0x80000000) != 0)
  {
    v109 = (double)v26;
    goto LABEL_284;
  }
  v27 = v26 | 0xFFFE000000000000;
LABEL_42:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v28, v27, 0, (uint64_t)&v131);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  v30 = WebCore::PerformanceTiming::redirectEnd(v10);
  if (HIDWORD(v30))
  {
    v110 = (double)v30;
LABEL_286:
    v31 = *(_QWORD *)&v110 + 0x2000000000000;
    goto LABEL_49;
  }
  if ((v30 & 0x80000000) != 0)
  {
    v110 = (double)v30;
    goto LABEL_286;
  }
  v31 = v30 | 0xFFFE000000000000;
LABEL_49:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v32 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v32, v31, 0, (uint64_t)&v131);
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, v33);
    else
      *(_DWORD *)v32 -= 2;
  }
  Start = WebCore::PerformanceTiming::fetchStart(v10);
  if (HIDWORD(Start))
  {
    v111 = (double)Start;
LABEL_288:
    v35 = *(_QWORD *)&v111 + 0x2000000000000;
    goto LABEL_56;
  }
  if ((Start & 0x80000000) != 0)
  {
    v111 = (double)Start;
    goto LABEL_288;
  }
  v35 = Start | 0xFFFE000000000000;
LABEL_56:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v36 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v36, v35, 0, (uint64_t)&v131);
  if (v36)
  {
    if (*(_DWORD *)v36 == 2)
      WTF::StringImpl::destroy(v36, v37);
    else
      *(_DWORD *)v36 -= 2;
  }
  v38 = WebCore::PerformanceTiming::domainLookupStart(v10);
  if (HIDWORD(v38))
  {
    v112 = (double)v38;
LABEL_290:
    v39 = *(_QWORD *)&v112 + 0x2000000000000;
    goto LABEL_63;
  }
  if ((v38 & 0x80000000) != 0)
  {
    v112 = (double)v38;
    goto LABEL_290;
  }
  v39 = v38 | 0xFFFE000000000000;
LABEL_63:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v40 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v40, v39, 0, (uint64_t)&v131);
  if (v40)
  {
    if (*(_DWORD *)v40 == 2)
      WTF::StringImpl::destroy(v40, v41);
    else
      *(_DWORD *)v40 -= 2;
  }
  v42 = WebCore::PerformanceTiming::domainLookupEnd(v10);
  if (HIDWORD(v42))
  {
    v113 = (double)v42;
LABEL_292:
    v43 = *(_QWORD *)&v113 + 0x2000000000000;
    goto LABEL_70;
  }
  if ((v42 & 0x80000000) != 0)
  {
    v113 = (double)v42;
    goto LABEL_292;
  }
  v43 = v42 | 0xFFFE000000000000;
LABEL_70:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v44 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v44, v43, 0, (uint64_t)&v131);
  if (v44)
  {
    if (*(_DWORD *)v44 == 2)
      WTF::StringImpl::destroy(v44, v45);
    else
      *(_DWORD *)v44 -= 2;
  }
  v46 = WebCore::PerformanceTiming::connectStart(v10);
  if (HIDWORD(v46))
  {
    v114 = (double)v46;
LABEL_294:
    v47 = *(_QWORD *)&v114 + 0x2000000000000;
    goto LABEL_77;
  }
  if ((v46 & 0x80000000) != 0)
  {
    v114 = (double)v46;
    goto LABEL_294;
  }
  v47 = v46 | 0xFFFE000000000000;
LABEL_77:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v48 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v48, v47, 0, (uint64_t)&v131);
  if (v48)
  {
    if (*(_DWORD *)v48 == 2)
      WTF::StringImpl::destroy(v48, v49);
    else
      *(_DWORD *)v48 -= 2;
  }
  v50 = WebCore::PerformanceTiming::connectEnd(v10);
  if (HIDWORD(v50))
  {
    v115 = (double)v50;
LABEL_296:
    v51 = *(_QWORD *)&v115 + 0x2000000000000;
    goto LABEL_84;
  }
  if ((v50 & 0x80000000) != 0)
  {
    v115 = (double)v50;
    goto LABEL_296;
  }
  v51 = v50 | 0xFFFE000000000000;
LABEL_84:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v52 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v52, v51, 0, (uint64_t)&v131);
  if (v52)
  {
    if (*(_DWORD *)v52 == 2)
      WTF::StringImpl::destroy(v52, v53);
    else
      *(_DWORD *)v52 -= 2;
  }
  v54 = WebCore::PerformanceTiming::secureConnectionStart(v10);
  if (HIDWORD(v54))
  {
    v116 = (double)v54;
LABEL_298:
    v55 = *(_QWORD *)&v116 + 0x2000000000000;
    goto LABEL_91;
  }
  if ((v54 & 0x80000000) != 0)
  {
    v116 = (double)v54;
    goto LABEL_298;
  }
  v55 = v54 | 0xFFFE000000000000;
LABEL_91:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v56 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v56, v55, 0, (uint64_t)&v131);
  if (v56)
  {
    if (*(_DWORD *)v56 == 2)
      WTF::StringImpl::destroy(v56, v57);
    else
      *(_DWORD *)v56 -= 2;
  }
  v58 = WebCore::PerformanceTiming::requestStart(v10);
  if (HIDWORD(v58))
  {
    v117 = (double)v58;
LABEL_300:
    v59 = *(_QWORD *)&v117 + 0x2000000000000;
    goto LABEL_98;
  }
  if ((v58 & 0x80000000) != 0)
  {
    v117 = (double)v58;
    goto LABEL_300;
  }
  v59 = v58 | 0xFFFE000000000000;
LABEL_98:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v60 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v60, v59, 0, (uint64_t)&v131);
  if (v60)
  {
    if (*(_DWORD *)v60 == 2)
      WTF::StringImpl::destroy(v60, v61);
    else
      *(_DWORD *)v60 -= 2;
  }
  v62 = WebCore::PerformanceTiming::responseStart(v10);
  if (HIDWORD(v62))
  {
    v118 = (double)v62;
LABEL_302:
    v63 = *(_QWORD *)&v118 + 0x2000000000000;
    goto LABEL_105;
  }
  if ((v62 & 0x80000000) != 0)
  {
    v118 = (double)v62;
    goto LABEL_302;
  }
  v63 = v62 | 0xFFFE000000000000;
LABEL_105:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v64 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v64, v63, 0, (uint64_t)&v131);
  if (v64)
  {
    if (*(_DWORD *)v64 == 2)
      WTF::StringImpl::destroy(v64, v65);
    else
      *(_DWORD *)v64 -= 2;
  }
  v66 = WebCore::PerformanceTiming::responseEnd(v10);
  if (HIDWORD(v66))
  {
    v119 = (double)v66;
LABEL_304:
    v67 = *(_QWORD *)&v119 + 0x2000000000000;
    goto LABEL_112;
  }
  if ((v66 & 0x80000000) != 0)
  {
    v119 = (double)v66;
    goto LABEL_304;
  }
  v67 = v66 | 0xFFFE000000000000;
LABEL_112:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v68 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v68, v67, 0, (uint64_t)&v131);
  if (v68)
  {
    if (*(_DWORD *)v68 == 2)
      WTF::StringImpl::destroy(v68, v69);
    else
      *(_DWORD *)v68 -= 2;
  }
  v70 = WebCore::PerformanceTiming::domLoading(v10);
  if (HIDWORD(v70))
  {
    v120 = (double)v70;
LABEL_306:
    v71 = *(_QWORD *)&v120 + 0x2000000000000;
    goto LABEL_119;
  }
  if ((v70 & 0x80000000) != 0)
  {
    v120 = (double)v70;
    goto LABEL_306;
  }
  v71 = v70 | 0xFFFE000000000000;
LABEL_119:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v72 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v72, v71, 0, (uint64_t)&v131);
  if (v72)
  {
    if (*(_DWORD *)v72 == 2)
      WTF::StringImpl::destroy(v72, v73);
    else
      *(_DWORD *)v72 -= 2;
  }
  v74 = *((_QWORD *)v10 + 17);
  if (!v74)
  {
    v74 = *((_QWORD *)v10 + 1);
    if (!v74)
      goto LABEL_126;
    v74 = *(_QWORD *)(v74 + 8);
    if (!v74)
      goto LABEL_126;
    v74 = *(_QWORD *)(v74 + 72);
    if (!v74)
      goto LABEL_126;
    v74 = *(_QWORD *)(v74 + 8);
    if (!v74)
      goto LABEL_126;
    if (*(_BYTE *)(v74 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194E05404);
    }
    v74 = *(_QWORD *)(v74 + 240);
    if (!v74)
      goto LABEL_126;
    v74 = *(_QWORD *)(v74 + 8);
    if (!v74)
      goto LABEL_126;
    v74 = *(_QWORD *)(v74 + 296);
    if (!v74)
      goto LABEL_126;
    v131 = *(double *)(v74 + 2256);
    if (v131 == 0.0)
    {
      v74 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v131);
      v74 = (unint64_t)(*(double *)&WebCore::timePrecision
                             * floor(v100 / *(double *)&WebCore::timePrecision)
                             * 1000.0);
    }
    *((_QWORD *)v10 + 17) = v74;
  }
  if (HIDWORD(v74))
  {
    v121 = (double)v74;
LABEL_308:
    v75 = *(_QWORD *)&v121 + 0x2000000000000;
    goto LABEL_127;
  }
  if ((v74 & 0x80000000) != 0)
  {
    v121 = (double)v74;
    goto LABEL_308;
  }
LABEL_126:
  v75 = v74 | 0xFFFE000000000000;
LABEL_127:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v76 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v76, v75, 0, (uint64_t)&v131);
  if (v76)
  {
    if (*(_DWORD *)v76 == 2)
      WTF::StringImpl::destroy(v76, v77);
    else
      *(_DWORD *)v76 -= 2;
  }
  v78 = *((_QWORD *)v10 + 18);
  if (!v78)
  {
    v78 = *((_QWORD *)v10 + 1);
    if (!v78)
      goto LABEL_134;
    v78 = *(_QWORD *)(v78 + 8);
    if (!v78)
      goto LABEL_134;
    v78 = *(_QWORD *)(v78 + 72);
    if (!v78)
      goto LABEL_134;
    v78 = *(_QWORD *)(v78 + 8);
    if (!v78)
      goto LABEL_134;
    if (*(_BYTE *)(v78 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194E05424);
    }
    v78 = *(_QWORD *)(v78 + 240);
    if (!v78)
      goto LABEL_134;
    v78 = *(_QWORD *)(v78 + 8);
    if (!v78)
      goto LABEL_134;
    v78 = *(_QWORD *)(v78 + 296);
    if (!v78)
      goto LABEL_134;
    v131 = *(double *)(v78 + 2264);
    if (v131 == 0.0)
    {
      v78 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v131);
      v78 = (unint64_t)(*(double *)&WebCore::timePrecision
                             * floor(v101 / *(double *)&WebCore::timePrecision)
                             * 1000.0);
    }
    *((_QWORD *)v10 + 18) = v78;
  }
  if (HIDWORD(v78))
  {
    v122 = (double)v78;
LABEL_310:
    v79 = *(_QWORD *)&v122 + 0x2000000000000;
    goto LABEL_135;
  }
  if ((v78 & 0x80000000) != 0)
  {
    v122 = (double)v78;
    goto LABEL_310;
  }
LABEL_134:
  v79 = v78 | 0xFFFE000000000000;
LABEL_135:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v80 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v80, v79, 0, (uint64_t)&v131);
  if (v80)
  {
    if (*(_DWORD *)v80 == 2)
      WTF::StringImpl::destroy(v80, v81);
    else
      *(_DWORD *)v80 -= 2;
  }
  v82 = *((_QWORD *)v10 + 19);
  if (!v82)
  {
    v82 = *((_QWORD *)v10 + 1);
    if (!v82)
      goto LABEL_142;
    v82 = *(_QWORD *)(v82 + 8);
    if (!v82)
      goto LABEL_142;
    v82 = *(_QWORD *)(v82 + 72);
    if (!v82)
      goto LABEL_142;
    v82 = *(_QWORD *)(v82 + 8);
    if (!v82)
      goto LABEL_142;
    if (*(_BYTE *)(v82 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194E05444);
    }
    v82 = *(_QWORD *)(v82 + 240);
    if (!v82)
      goto LABEL_142;
    v82 = *(_QWORD *)(v82 + 8);
    if (!v82)
      goto LABEL_142;
    v82 = *(_QWORD *)(v82 + 296);
    if (!v82)
      goto LABEL_142;
    v131 = *(double *)(v82 + 2272);
    if (v131 == 0.0)
    {
      v82 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v131);
      v82 = (unint64_t)(*(double *)&WebCore::timePrecision
                             * floor(v102 / *(double *)&WebCore::timePrecision)
                             * 1000.0);
    }
    *((_QWORD *)v10 + 19) = v82;
  }
  if (HIDWORD(v82))
  {
    v123 = (double)v82;
LABEL_312:
    v83 = *(_QWORD *)&v123 + 0x2000000000000;
    goto LABEL_143;
  }
  if ((v82 & 0x80000000) != 0)
  {
    v123 = (double)v82;
    goto LABEL_312;
  }
LABEL_142:
  v83 = v82 | 0xFFFE000000000000;
LABEL_143:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v84 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v84, v83, 0, (uint64_t)&v131);
  if (v84)
  {
    if (*(_DWORD *)v84 == 2)
      WTF::StringImpl::destroy(v84, v85);
    else
      *(_DWORD *)v84 -= 2;
  }
  v86 = *((_QWORD *)v10 + 20);
  if (!v86)
  {
    v86 = *((_QWORD *)v10 + 1);
    if (!v86)
      goto LABEL_150;
    v86 = *(_QWORD *)(v86 + 8);
    if (!v86)
      goto LABEL_150;
    v86 = *(_QWORD *)(v86 + 72);
    if (!v86)
      goto LABEL_150;
    v86 = *(_QWORD *)(v86 + 8);
    if (!v86)
      goto LABEL_150;
    if (*(_BYTE *)(v86 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194E05464);
    }
    v86 = *(_QWORD *)(v86 + 240);
    if (!v86)
      goto LABEL_150;
    v86 = *(_QWORD *)(v86 + 8);
    if (!v86)
      goto LABEL_150;
    v86 = *(_QWORD *)(v86 + 296);
    if (!v86)
      goto LABEL_150;
    v131 = *(double *)(v86 + 2280);
    if (v131 == 0.0)
    {
      v86 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v131);
      v86 = (unint64_t)(*(double *)&WebCore::timePrecision
                             * floor(v103 / *(double *)&WebCore::timePrecision)
                             * 1000.0);
    }
    *((_QWORD *)v10 + 20) = v86;
  }
  if (HIDWORD(v86))
  {
    v124 = (double)v86;
LABEL_314:
    v87 = *(_QWORD *)&v124 + 0x2000000000000;
    goto LABEL_151;
  }
  if ((v86 & 0x80000000) != 0)
  {
    v124 = (double)v86;
    goto LABEL_314;
  }
LABEL_150:
  v87 = v86 | 0xFFFE000000000000;
LABEL_151:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v88 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v88, v87, 0, (uint64_t)&v131);
  if (v88)
  {
    if (*(_DWORD *)v88 == 2)
      WTF::StringImpl::destroy(v88, v89);
    else
      *(_DWORD *)v88 -= 2;
  }
  v90 = *((_QWORD *)v10 + 21);
  if (!v90)
  {
    v90 = *((_QWORD *)v10 + 1);
    if (!v90)
      goto LABEL_158;
    v90 = *(_QWORD *)(v90 + 8);
    if (!v90)
      goto LABEL_158;
    v90 = *(_QWORD *)(v90 + 72);
    if (!v90)
      goto LABEL_158;
    v90 = *(_QWORD *)(v90 + 8);
    if (!v90)
      goto LABEL_158;
    if (*(_BYTE *)(v90 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194E05484);
    }
    v90 = *(_QWORD *)(v90 + 240);
    if (!v90)
      goto LABEL_158;
    v90 = *(_QWORD *)(v90 + 8);
    if (!v90)
      goto LABEL_158;
    v90 = *(_QWORD *)(*(_QWORD *)(v90 + 280) + 88);
    if (!v90)
      goto LABEL_158;
    v131 = *(double *)(v90 + 2760);
    if (v131 == 0.0)
    {
      v90 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v131);
      v90 = (unint64_t)(*(double *)&WebCore::timePrecision
                             * floor(v104 / *(double *)&WebCore::timePrecision)
                             * 1000.0);
    }
    *((_QWORD *)v10 + 21) = v90;
  }
  if (HIDWORD(v90))
  {
    v125 = (double)v90;
LABEL_316:
    v91 = *(_QWORD *)&v125 + 0x2000000000000;
    goto LABEL_159;
  }
  if ((v90 & 0x80000000) != 0)
  {
    v125 = (double)v90;
    goto LABEL_316;
  }
LABEL_158:
  v91 = v90 | 0xFFFE000000000000;
LABEL_159:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v92 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v92, v91, 0, (uint64_t)&v131);
  if (v92)
  {
    if (*(_DWORD *)v92 == 2)
      WTF::StringImpl::destroy(v92, v93);
    else
      *(_DWORD *)v92 -= 2;
  }
  v94 = *((_QWORD *)v10 + 22);
  if (!v94)
  {
    v94 = *((_QWORD *)v10 + 1);
    if (!v94)
      goto LABEL_166;
    v94 = *(_QWORD *)(v94 + 8);
    if (!v94)
      goto LABEL_166;
    v94 = *(_QWORD *)(v94 + 72);
    if (!v94)
      goto LABEL_166;
    v94 = *(_QWORD *)(v94 + 8);
    if (!v94)
      goto LABEL_166;
    if (*(_BYTE *)(v94 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194E054A4);
    }
    v94 = *(_QWORD *)(v94 + 240);
    if (!v94)
      goto LABEL_166;
    v94 = *(_QWORD *)(v94 + 8);
    if (!v94)
      goto LABEL_166;
    v94 = *(_QWORD *)(*(_QWORD *)(v94 + 280) + 88);
    if (!v94)
      goto LABEL_166;
    v131 = *(double *)(v94 + 2768);
    if (v131 == 0.0)
    {
      v94 = 0;
    }
    else
    {
      WTF::MonotonicTime::approximateWallTime((WTF::MonotonicTime *)&v131);
      v94 = (unint64_t)(*(double *)&WebCore::timePrecision
                             * floor(v105 / *(double *)&WebCore::timePrecision)
                             * 1000.0);
    }
    *((_QWORD *)v10 + 22) = v94;
  }
  if (HIDWORD(v94))
  {
    v126 = (double)v94;
  }
  else
  {
    if ((v94 & 0x80000000) == 0)
    {
LABEL_166:
      v95 = v94 | 0xFFFE000000000000;
      goto LABEL_167;
    }
    v126 = (double)v94;
  }
  v95 = *(_QWORD *)&v126 + 0x2000000000000;
LABEL_167:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v96 = *(WTF::StringImpl **)&v131;
  v131 = 0.0;
  v132 = SlowCase;
  v133 = -1;
  v134 = 0x1000000;
  v135 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)v4, (unint64_t)v96, v95, 0, (uint64_t)&v131);
  if (v96)
  {
    if (*(_DWORD *)v96 == 2)
      WTF::StringImpl::destroy(v96, v97);
    else
      *(_DWORD *)v96 -= 2;
  }
  return (_BYTE *)SlowCase;
}

unint64_t WebCore::jsPermissionsPrototypeFunction_query(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  WebCore::DOMGuardedObject *v26;
  uint64_t v27;
  uint64_t v28;
  JSC::JSCell **v29;
  JSC::JSCell *v30;
  WebCore::DOMGuardedObject *v31;
  JSC::JSCell **v32;
  uint64_t v33;
  JSC::JSCell **v34;
  JSC::JSCell *v35;
  uint64_t v36;
  JSC::JSCell *v38;
  JSC::JSCell *v39;
  JSC::VM *v40;
  JSValue v41;
  objc_class *v42;
  WebCore::DOMGuardedObject *v43;
  _QWORD *v44;
  WebCore::DOMGuardedObject *v45;
  int v46;
  WebCore::DOMGuardedObject *v47;
  JSC::JSCell **v48;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194E058A0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_51;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSPermissions::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSPermissions::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_51:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Permissions", "query", v17);
    goto LABEL_44;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v40 = (JSC::VM *)*((_QWORD *)this + 7);
    v41.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v40, this, v41);
LABEL_44:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_46;
  }
  v24 = *(_QWORD *)(v18 + 24);
  WebCore::Converter<WebCore::IDLObject>::convert<WebCore::DefaultExceptionThrower>((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)&v45);
  v25 = v46;
  if (v46)
    goto LABEL_41;
  v48 = 0;
  v26 = v45;
  if (v45)
  {
    v27 = *(_QWORD *)((((unint64_t)v45 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
    v28 = *(_QWORD *)(v27 + 40);
    if (v28)
    {
      *(_QWORD *)(v27 + 40) = *(_QWORD *)v28;
      *(_QWORD *)(v28 + 16) = 0;
      v29 = (JSC::JSCell **)(v28 + 16);
      *(_QWORD *)v28 = 0;
      *(_QWORD *)(v28 + 8) = 0;
      v48 = (JSC::JSCell **)(v28 + 16);
    }
    else
    {
      JSC::HandleSet::grow(*(JSC::HandleSet **)((((unint64_t)v45 - 16) & 0xFFFFFFFFFFFFF000) + 0x10));
      v44 = *(_QWORD **)(v27 + 40);
      v26 = v45;
      *(_QWORD *)(v27 + 40) = *v44;
      *v44 = 0;
      v44[1] = 0;
      v44[2] = 0;
      v29 = (JSC::JSCell **)(v44 + 2);
      v48 = v29;
      if (!v26)
      {
        v30 = 0;
LABEL_32:
        *v29 = v30;
        goto LABEL_33;
      }
    }
    v30 = *(JSC::JSCell **)v26;
    if (*(_QWORD *)v26)
    {
      v38 = *(JSC::JSCell **)(((unint64_t)(v29 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
      v39 = (JSC::JSCell *)*((_QWORD *)v38 + 3);
      v38 = (JSC::JSCell *)((char *)v38 + 24);
      *(v29 - 2) = v39;
      *(v29 - 1) = v38;
      *(_QWORD *)v38 = v29 - 2;
      *((_QWORD *)v39 + 1) = v29 - 2;
    }
    goto LABEL_32;
  }
LABEL_33:
  v47 = v14;
  WebCore::Permissions::query(v24, &v48, (uint64_t *)&v47);
  v31 = v47;
  v47 = 0;
  if (v31)
  {
    if (*((_DWORD *)v31 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v31 + 16))(v31);
    else
      --*((_DWORD *)v31 + 4);
  }
  if (v48)
  {
    v32 = v48 - 2;
    v33 = *(_QWORD *)(((unint64_t)(v48 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
    v34 = (JSC::JSCell **)*(v48 - 1);
    if (v34)
    {
      v35 = *v32;
      *v34 = *v32;
      *((_QWORD *)v35 + 1) = v34;
      *v32 = 0;
      v32[1] = 0;
    }
    *v32 = *(JSC::JSCell **)(v33 + 40);
    *(_QWORD *)(v33 + 40) = v32;
  }
  v14 = 0;
  v25 = v46;
LABEL_41:
  if (v25 != -1)
    ((void (*)(JSC::JSCell ***, WebCore::DOMGuardedObject **))off_1E32CB060[v25])(&v48, &v45);
  if (v14)
    goto LABEL_44;
LABEL_46:
  v36 = *(_QWORD *)(v10 + 16);
  if (v36)
  {
    if (*(_QWORD *)(v10 + 24) != v36)
    {
      v42 = *(objc_class **)(v36 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v45);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v45, v42, 0);
      v43 = v45;
      v45 = 0;
      if (v43)
      {
        if (*((_DWORD *)v43 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v43 + 16))(v43);
        else
          --*((_DWORD *)v43 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore21PictureInPictureEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, _QWORD *a2)
{
  _DWORD *v2;
  void *v3;
  bmalloc::api *v4;
  void *v5;

  v2 = (_DWORD *)a2[1];
  a2[1] = 0;
  if (v2)
  {
    if (v2[12] == 1)
    {
      WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)(v2 + 6), a2);
      WebCore::ActiveDOMObject::~ActiveDOMObject((WebCore::ActiveDOMObject *)v2, v3);
      bmalloc::api::isoDeallocate(v4, v5);
    }
    else
    {
      --v2[12];
    }
  }
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore12PointerEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  unsigned int *result;
  WTF *v5;
  uint64_t *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 17);
  *((_QWORD *)a2 + 17) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  result = (unsigned int *)*((_QWORD *)a2 + 9);
  *((_QWORD *)a2 + 9) = 0;
  if (result)
  {
    if ((*((_BYTE *)result + 22) & 2) != 0)
    {
      if (result[6] == 2)
      {
        if ((*((_WORD *)result + 15) & 0x400) == 0)
          result = WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
      }
      else
      {
        result[6] -= 2;
      }
    }
    else
    {
      result = (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 96))(result);
    }
  }
  v5 = (WTF *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 1)
    {
      v6 = (uint64_t *)*((_QWORD *)v5 + 2);
      *((_QWORD *)v5 + 2) = 0;
      if (v6)
      {
        if (*v6)
          WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v6, a2);
        WTF::fastFree((WTF *)v6, a2);
      }
      v7 = (unsigned int *)*((_QWORD *)v5 + 1);
      *((_QWORD *)v5 + 1) = 0;
      if (v7)
      {
        do
        {
          v8 = __ldaxr(v7);
          v9 = v8 - 1;
        }
        while (__stlxr(v9, v7));
        if (!v9)
        {
          atomic_store(1u, v7);
          WTF::fastFree((WTF *)v7, a2);
        }
      }
      return (unsigned int *)WTF::fastFree(v5, a2);
    }
    else
    {
      --*(_DWORD *)v5;
    }
  }
  return result;
}

uint64_t JSC::MarkedBlock::aboutToMark(JSC::MarkedBlock *this, int a2)
{
  if (*((_DWORD *)this + 8) != a2)
    JSC::MarkedBlock::aboutToMarkSlow(this);
  return 0;
}

uint64_t WebCore::JSOverconstrainedError::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPageTransitionEvent::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 3848);
  *(_QWORD *)(a1 + 3848) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::JSPaintRenderingContext2D::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPannerNode::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPannerNode::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSPannerNode *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSPannerNode *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSPannerNode::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSPath2D>::create(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructor<WebCore::JSPath2D>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSPath2D>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

void WebCore::PaymentAddress::~PaymentAddress(WebCore::PaymentAddress *this, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl **v14;
  uint64_t v15;
  WTF::StringImpl *v16;

  v3 = (WTF::StringImpl *)*((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (WTF::StringImpl *)*((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, a2);
    else
      *(_DWORD *)v4 -= 2;
  }
  v5 = (WTF::StringImpl *)*((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, a2);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = (WTF::StringImpl *)*((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, a2);
    else
      *(_DWORD *)v6 -= 2;
  }
  v7 = (WTF::StringImpl *)*((_QWORD *)this + 7);
  *((_QWORD *)this + 7) = 0;
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, a2);
    else
      *(_DWORD *)v7 -= 2;
  }
  v8 = (WTF::StringImpl *)*((_QWORD *)this + 6);
  *((_QWORD *)this + 6) = 0;
  if (v8)
  {
    if (*(_DWORD *)v8 == 2)
      WTF::StringImpl::destroy(v8, a2);
    else
      *(_DWORD *)v8 -= 2;
  }
  v9 = (WTF::StringImpl *)*((_QWORD *)this + 5);
  *((_QWORD *)this + 5) = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, a2);
    else
      *(_DWORD *)v9 -= 2;
  }
  v10 = (WTF::StringImpl *)*((_QWORD *)this + 4);
  *((_QWORD *)this + 4) = 0;
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
      WTF::StringImpl::destroy(v10, a2);
    else
      *(_DWORD *)v10 -= 2;
  }
  v11 = *((unsigned int *)this + 7);
  if ((_DWORD)v11)
  {
    v14 = (WTF::StringImpl **)*((_QWORD *)this + 2);
    v15 = 8 * v11;
    do
    {
      v16 = *v14;
      *v14 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, a2);
        else
          *(_DWORD *)v16 -= 2;
      }
      ++v14;
      v15 -= 8;
    }
    while (v15);
  }
  v12 = (WTF *)*((_QWORD *)this + 2);
  if (v12)
  {
    *((_QWORD *)this + 2) = 0;
    *((_DWORD *)this + 6) = 0;
    WTF::fastFree(v12, a2);
  }
  v13 = (WTF::StringImpl *)*((_QWORD *)this + 1);
  *((_QWORD *)this + 1) = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, a2);
    else
      *(_DWORD *)v13 -= 2;
  }
}

uint64_t WebCore::JSPaymentAddress::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PaymentItem>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<WebCore::PaymentItem,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t result;
  JSValue v8;
  int i;
  unsigned int v10;
  JSC::JSCell *IndexQuickly;
  JSC::JSCell *v13;
  uint64_t v14;
  unint64_t v15;

  v6 = *((_QWORD *)a1 + 7);
  result = JSC::getIterationMode();
  if ((_DWORD)result == 2)
  {
    for (i = 1; ; ++i)
    {
      v10 = (*(_BYTE *)(a2 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(a2 + 8) - 8) : 0;
      if (i - 1 >= v10)
        break;
      IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)a2, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)a2, a1, (i - 1));
      if (*(_DWORD *)(v6 + 80))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
        if ((result & 1) != 0)
          break;
      }
      result = WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentItem>>::convert((JSC::VM **)a1, IndexQuickly, *a3);
      if (*(_QWORD *)(v6 + 16))
      {
        v14 = JSC::JSArrayIterator::create();
        v15 = i | 0xFFFE000000000000;
        if (i < 0)
          v15 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v14 + 16) = v15;
        return JSC::iteratorClose();
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(a1, (JSC::JSGlobalObject *)a2, v8);
    if (!*(_DWORD *)(v6 + 80) || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6), (result & 1) == 0))
    {
      while (1)
      {
        result = JSC::iteratorStep();
        if (*(_QWORD *)(v6 + 16) || result == 6)
          break;
        v13 = (JSC::JSCell *)JSC::iteratorValue();
        if (*(_DWORD *)(v6 + 80))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
          if ((result & 1) != 0)
            break;
        }
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentItem>>::convert((JSC::VM **)a1, v13, *a3);
        if (*(_QWORD *)(v6 + 16))
          return JSC::iteratorClose();
      }
    }
  }
  return result;
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentItem>>::convert(JSC::VM **a1, JSC::JSCell *this, uint64_t a3)
{
  uint64_t result;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  char v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  char v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  char v30;
  unsigned int v31;

  result = WebCore::convertDictionary<WebCore::PaymentItem>((uint64_t)&v27, a1, this);
  v6 = v31;
  if (!v31)
  {
    v7 = v27;
    v8 = v28;
    v27 = 0;
    v28 = 0;
    v23 = v7;
    v24 = v8;
    v9 = v29;
    v29 = 0;
    v25 = v9;
    v10 = v30;
    v26 = v30;
    v11 = *(unsigned int *)(a3 + 12);
    if ((_DWORD)v11 == *(_DWORD *)(a3 + 8))
    {
      v12 = WTF::Vector<WebCore::InspectorFrontendClientSaveData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v11 + 1, (unint64_t)&v23);
      v13 = *(unsigned int *)(a3 + 12);
      v14 = *(_QWORD *)a3 + 32 * v13;
      v15 = *(_QWORD *)v12;
      *(_QWORD *)v12 = 0;
      *(_QWORD *)v14 = v15;
      v16 = *((_QWORD *)v12 + 1);
      *((_QWORD *)v12 + 1) = 0;
      *(_QWORD *)(v14 + 8) = v16;
      v17 = *((_QWORD *)v12 + 2);
      *((_QWORD *)v12 + 2) = 0;
      *(_QWORD *)(v14 + 16) = v17;
      *(_BYTE *)(v14 + 24) = v12[24];
      v18 = v25;
      *(_DWORD *)(a3 + 12) = v13 + 1;
      v25 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v5);
        else
          *(_DWORD *)v18 -= 2;
      }
    }
    else
    {
      v19 = *(_QWORD *)a3;
      v23 = 0;
      v20 = v19 + 32 * v11;
      *(_QWORD *)v20 = v7;
      v24 = 0;
      *(_QWORD *)(v20 + 8) = v8;
      *(_QWORD *)(v20 + 16) = v9;
      *(_BYTE *)(v20 + 24) = v10;
      *(_DWORD *)(a3 + 12) = v11 + 1;
      v25 = 0;
    }
    v21 = v24;
    v24 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v5);
      else
        *(_DWORD *)v21 -= 2;
    }
    v22 = v23;
    v23 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v5);
      else
        *(_DWORD *)v22 -= 2;
    }
    return ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32CB0A0[v6])(&v23, &v27);
  }
  if (v31 != -1)
    return ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32CB0A0[v6])(&v23, &v27);
  return result;
}

void JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PaymentDetailsModifier>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<WebCore::PaymentDetailsModifier,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  JSValue v7;
  int i;
  unsigned int v9;
  JSC::JSCell *IndexQuickly;
  uint64_t v11;
  JSC::JSCell *v13;
  uint64_t v14;
  unint64_t v15;

  v6 = *((_QWORD *)a1 + 7);
  if (JSC::getIterationMode() == 2)
  {
    for (i = 1; ; ++i)
    {
      v9 = (*(_BYTE *)(a2 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(a2 + 8) - 8) : 0;
      if (i - 1 >= v9)
        break;
      IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)a2, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)a2, a1, (i - 1));
      if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
        break;
      WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentDetailsModifier>>::convert(a1, IndexQuickly, *a3);
      if (*(_QWORD *)(v6 + 16))
      {
        v14 = JSC::JSArrayIterator::create();
        v15 = i | 0xFFFE000000000000;
        if (i < 0)
          v15 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v14 + 16) = v15;
        goto LABEL_27;
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(a1, (JSC::JSGlobalObject *)a2, v7);
    if (!*(_DWORD *)(v6 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) == 0)
    {
      while (1)
      {
        v11 = JSC::iteratorStep();
        if (*(_QWORD *)(v6 + 16) || v11 == 6)
          break;
        v13 = (JSC::JSCell *)JSC::iteratorValue();
        if (*(_DWORD *)(v6 + 80))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
            break;
        }
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentDetailsModifier>>::convert(a1, v13, *a3);
        if (*(_QWORD *)(v6 + 16))
        {
LABEL_27:
          JSC::iteratorClose();
          return;
        }
      }
    }
  }
}

void WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentDetailsModifier>>::convert(JSC::JSGlobalObject *a1, JSC::JSCell *this, uint64_t a3)
{
  uint64_t Object;
  JSC::Structure *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  JSC::VM *v9;
  WTF::StringImpl *v10;
  int v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  int v14;
  void *v15;
  uint64_t v16;
  int v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  uint64_t *v22;
  WTF::StringImpl *v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unsigned int v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  JSC::VM *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  JSC::JSCell *v47;
  void *v48;
  uint64_t v49;
  WTF::StringImpl *v50;
  char v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  __int128 v66;
  WTF::StringImpl *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  WTF::StringImpl *v85;
  _QWORD *v86;
  void *v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  unint64_t v93;
  unint64_t *v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  int hasExceptionsAfterHandlingTraps;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  WTF::StringImpl *v103;
  __int128 v104;
  WTF::StringImpl *v105;
  char v106;
  char v107;
  void *v108;
  uint64_t v109;
  uint64_t *v110;
  int v111;
  void *v112;
  uint64_t v113;
  WTF::StringImpl *v114;
  char v115;
  int v116;
  JSC::VM *v117;
  int v118;
  WTF::StringImpl *v119;
  __int128 v120;
  WTF::StringImpl *v121;
  char v122;
  char v123;
  void *v124;
  uint64_t v125;
  _QWORD *v126;
  JSC::VM *v127;
  WTF::StringImpl *v128;

  v127 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v119 = 0;
    LOBYTE(v120) = 0;
    v123 = 0;
    v125 = 0;
    v126 = 0;
    v124 = 0;
    goto LABEL_52;
  }
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    JSC::throwTypeError();
    v38 = 1;
    v111 = 1;
    goto LABEL_121;
  }
  v6 = (JSC::Structure *)Object;
  v119 = 0;
  LOBYTE(v120) = 0;
  v123 = 0;
  v125 = 0;
  v126 = 0;
  v124 = 0;
  WTF::AtomStringImpl::addLiteral();
  v8 = JSC::JSObject::get(v6, a1, (unint64_t)v103);
  if (v103)
  {
    if (*(_DWORD *)v103 == 2)
      WTF::StringImpl::destroy(v103, v7);
    else
      *(_DWORD *)v103 -= 2;
  }
  if (*((_DWORD *)v127 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v127) & 1) != 0)
    goto LABEL_53;
  if (v8 != 10)
  {
    v9 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v117 = v9;
    if ((v8 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v8 + 5) <= 0x16u)
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      JSC::throwTypeError();
      v18 = v103;
      v103 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v13);
        else
          *(_DWORD *)v18 -= 2;
      }
      v14 = 1;
      LODWORD(v114) = 1;
    }
    else
    {
      v103 = 0;
      *(_QWORD *)&v104 = 0;
      v112 = &v103;
      JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PaymentItem>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<WebCore::PaymentItem,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(a1, v8, (uint64_t *)&v112);
      if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
      {
        v11 = 1;
      }
      else
      {
        v11 = 0;
        v112 = v103;
        v12 = v104;
        v103 = 0;
        *(_QWORD *)&v104 = 0;
        v113 = v12;
      }
      LODWORD(v114) = v11;
      WTF::Vector<WebCore::InspectorFrontendClientSaveData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((unsigned int *)&v103, v10);
      v14 = (int)v114;
      if (!(_DWORD)v114)
      {
        v15 = v112;
        v112 = 0;
        v103 = 0;
        v124 = v15;
        *(_QWORD *)&v104 = 0;
        v16 = v113;
        v113 = 0;
        v125 = v16;
        WTF::Vector<WebCore::InspectorFrontendClientSaveData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((unsigned int *)&v103, v13);
        v17 = 1;
        v14 = (int)v114;
        goto LABEL_21;
      }
    }
    v17 = 0;
    v111 = 1;
LABEL_21:
    if (v14 != -1)
      ((void (*)(JSC::VM **, void **))off_1E32CB070[v14])(&v117, &v112);
    if (!v17)
      goto LABEL_54;
  }
  WTF::AtomStringImpl::addLiteral();
  v19 = (WTF::StringImpl *)v112;
  v21 = JSC::JSObject::get(v6, a1, (unint64_t)v112);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  if (*((_DWORD *)v127 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v127) & 1) != 0)
    goto LABEL_53;
  if (v21 == 10)
  {
    v22 = 0;
    goto LABEL_47;
  }
  WebCore::Converter<WebCore::IDLObject>::convert<WebCore::DefaultExceptionThrower>((uint64_t)a1, v21, (uint64_t)&v112);
  v24 = v113;
  if ((_DWORD)v113)
  {
    v22 = 0;
    v111 = 1;
    LODWORD(v25) = v113;
    goto LABEL_43;
  }
  v25 = (uint64_t *)v112;
  if (v112)
  {
    v26 = *(_QWORD *)((((unint64_t)v112 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
    v27 = *(_QWORD **)(v26 + 40);
    if (v27)
    {
      *(_QWORD *)(v26 + 40) = *v27;
      v27[2] = 0;
      v28 = v27 + 2;
      *v27 = 0;
      v27[1] = 0;
    }
    else
    {
      JSC::HandleSet::grow(*(JSC::HandleSet **)((((unint64_t)v112 - 16) & 0xFFFFFFFFFFFFF000) + 0x10));
      v99 = *(_QWORD **)(v26 + 40);
      v25 = (uint64_t *)v112;
      *(_QWORD *)(v26 + 40) = *v99;
      *v99 = 0;
      v99[1] = 0;
      v99[2] = 0;
      v28 = v99 + 2;
      if (!v25)
      {
        v29 = 0;
LABEL_36:
        *v28 = v29;
        v30 = (unint64_t)(v28 - 2);
        v31 = v30 & 0xFFFFFFFFFFFFF000;
        v32 = **(_QWORD **)((v30 & 0xFFFFFFFFFFFFF000) + 0x10);
        v33 = *(_QWORD *)(v32 + 712);
        if (!v33)
        {
          v102 = v29;
          JSC::HandleSet::grow((JSC::HandleSet *)(v32 + 672));
          v31 = v30 & 0xFFFFFFFFFFFFF000;
          v29 = v102;
          v33 = *(_QWORD *)(v32 + 712);
        }
        *(_QWORD *)(v32 + 712) = *(_QWORD *)v33;
        *(_QWORD *)(v33 + 16) = 0;
        v22 = (uint64_t *)(v33 + 16);
        *(_QWORD *)v33 = 0;
        *(_QWORD *)(v33 + 8) = 0;
        v126 = (_QWORD *)(v33 + 16);
        if (v29)
        {
          v34 = *(unint64_t **)((v33 & 0xFFFFFFFFFFFFF000) + 0x10);
          v35 = v34[3];
          v34 += 3;
          *(_QWORD *)v33 = v35;
          *(_QWORD *)(v33 + 8) = v34;
          *v34 = v33;
          *(_QWORD *)(v35 + 8) = v33;
        }
        *v22 = v29;
        v25 = *(uint64_t **)(v31 + 16);
        v36 = *(_QWORD **)(v30 + 8);
        if (v36)
        {
          v37 = *(_QWORD *)v30;
          *v36 = *(_QWORD *)v30;
          *(_QWORD *)(v37 + 8) = v36;
          *(_QWORD *)v30 = 0;
          *(_QWORD *)(v30 + 8) = 0;
        }
        *(_QWORD *)v30 = v25[5];
        v25[5] = v30;
        LODWORD(v25) = v113;
LABEL_43:
        if ((_DWORD)v25 == -1)
          goto LABEL_45;
        goto LABEL_44;
      }
    }
    v29 = *v25;
    if (v29)
    {
      v96 = *(_QWORD **)(((unint64_t)(v28 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
      v97 = v96[3];
      v96 += 3;
      *(v28 - 2) = v97;
      *(v28 - 1) = v96;
      *v96 = v28 - 2;
      *(_QWORD *)(v97 + 8) = v28 - 2;
    }
    goto LABEL_36;
  }
  v22 = 0;
LABEL_44:
  ((void (*)(JSC::VM **, void **))off_1E32CB060[v25])(&v117, &v112);
LABEL_45:
  if (v24)
  {
    v38 = v111;
    goto LABEL_98;
  }
LABEL_47:
  WTF::AtomStringImpl::addLiteral();
  v39 = (WTF::StringImpl *)v112;
  v40 = JSC::JSObject::get(v6, a1, (unint64_t)v112);
  if (v39)
  {
    if (*(_DWORD *)v39 == 2)
      WTF::StringImpl::destroy(v39, v13);
    else
      *(_DWORD *)v39 -= 2;
  }
  if (*((_DWORD *)v127 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v127) & 1) != 0)
    goto LABEL_53;
  if (v40 == 10)
  {
LABEL_52:
    WebCore::throwRequiredMemberTypeError((int)a1, (int)&v127, "supportedMethods", 17, "PaymentDetailsModifier", 23, "DOMString", 10);
LABEL_53:
    v111 = 1;
LABEL_54:
    WebCore::PaymentDetailsModifier::~PaymentDetailsModifier((WebCore::PaymentDetailsModifier *)&v119, v13);
    v38 = 1;
    goto LABEL_121;
  }
  v112 = (void *)v40;
  v41 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((v40 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v40 + 5) == 2)
  {
    v42 = *(WTF::StringImpl **)(v40 + 8);
    if ((v42 & 1) != 0)
    {
      v42 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v40, a1);
      if (!v42)
        goto LABEL_60;
    }
    else if (!v42)
    {
LABEL_60:
      v128 = v42;
      goto LABEL_61;
    }
    *(_DWORD *)v42 += 2;
    goto LABEL_60;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v112, a1);
LABEL_61:
  if (*((_DWORD *)v41 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v41);
    v43 = v128;
    if (hasExceptionsAfterHandlingTraps)
    {
      v38 = 1;
      v118 = 1;
      v128 = 0;
      if (v43)
      {
        if (*(_DWORD *)v43 == 2)
          WTF::StringImpl::destroy(v43, v13);
        else
          *(_DWORD *)v43 -= 2;
      }
      v111 = 1;
      v63 = 1;
      goto LABEL_97;
    }
  }
  else
  {
    v43 = v128;
  }
  v118 = 0;
  v117 = 0;
  v44 = v119;
  v119 = v43;
  if (v44)
  {
    if (*(_DWORD *)v44 == 2)
      WTF::StringImpl::destroy(v44, v13);
    else
      *(_DWORD *)v44 -= 2;
  }
  WTF::AtomStringImpl::addLiteral();
  v45 = (WTF::StringImpl *)v112;
  v47 = (JSC::JSCell *)JSC::JSObject::get(v6, a1, (unint64_t)v112);
  if (v45)
  {
    if (*(_DWORD *)v45 == 2)
      WTF::StringImpl::destroy(v45, v46);
    else
      *(_DWORD *)v45 -= 2;
  }
  if (!*((_DWORD *)v127 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v127))
  {
    if (v47 == (JSC::JSCell *)10)
    {
      v119 = 0;
      v103 = v43;
      LOBYTE(v104) = 0;
      v107 = 0;
      if (!v123)
      {
LABEL_90:
        v108 = v124;
        v56 = v125;
        v124 = 0;
        v125 = 0;
        v109 = v56;
        v110 = 0;
        if (v22)
        {
          v57 = *(_QWORD *)(((unint64_t)(v22 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
          v58 = *(_QWORD **)(v57 + 40);
          if (!v58)
          {
            JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v22 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
            v58 = *(_QWORD **)(v57 + 40);
          }
          *(_QWORD *)(v57 + 40) = *v58;
          v58[2] = 0;
          v59 = v58 + 2;
          *v58 = 0;
          v58[1] = 0;
          v110 = v58 + 2;
          v60 = *v22;
          if (*v22)
          {
            v61 = *(_QWORD **)(((unint64_t)(v59 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
            v62 = v61[3];
            v61 += 3;
            *(v59 - 2) = v62;
            *(v59 - 1) = v61;
            *v61 = v59 - 2;
            *(_QWORD *)(v62 + 8) = v59 - 2;
          }
          *v59 = v60;
        }
        v38 = 0;
        v63 = 0;
        v111 = 0;
        goto LABEL_97;
      }
      v49 = *((_QWORD *)&v120 + 1);
      v48 = (void *)v120;
      v50 = v121;
      v51 = v122;
    }
    else
    {
      WebCore::convertDictionary<WebCore::PaymentItem>((uint64_t)&v112, (JSC::VM **)a1, v47);
      if (v116)
      {
        v111 = 1;
        if (v116 != -1)
          ((void (*)(WTF::StringImpl **, void **))off_1E32CB0A0[v116])(&v128, &v112);
        v63 = 0;
        v38 = 1;
        goto LABEL_97;
      }
      v48 = v112;
      v49 = v113;
      v112 = 0;
      v50 = v114;
      v51 = v115;
      if (v123)
      {
        v53 = (WTF::StringImpl *)v120;
        *(_QWORD *)&v120 = v48;
        if (v53)
        {
          if (*(_DWORD *)v53 == 2)
            WTF::StringImpl::destroy(v53, v52);
          else
            *(_DWORD *)v53 -= 2;
        }
        v54 = (WTF::StringImpl *)*((_QWORD *)&v120 + 1);
        *((_QWORD *)&v120 + 1) = v49;
        if (v54)
        {
          if (*(_DWORD *)v54 == 2)
            WTF::StringImpl::destroy(v54, v52);
          else
            *(_DWORD *)v54 -= 2;
        }
        v55 = v121;
        v121 = v50;
        if (v55)
        {
          if (*(_DWORD *)v55 == 2)
            WTF::StringImpl::destroy(v55, v52);
          else
            *(_DWORD *)v55 -= 2;
        }
        v122 = v51;
      }
      else
      {
        *(_QWORD *)&v120 = v48;
        *((_QWORD *)&v120 + 1) = v113;
        v121 = v114;
        v122 = v115;
        v123 = 1;
      }
      v119 = 0;
      v103 = v43;
    }
    v120 = 0uLL;
    *(_QWORD *)&v104 = v48;
    *((_QWORD *)&v104 + 1) = v49;
    v121 = 0;
    v105 = v50;
    v106 = v51;
    v107 = 1;
    goto LABEL_90;
  }
  v63 = 0;
  v38 = 1;
  v111 = 1;
LABEL_97:
  ((void (*)(void **, JSC::VM **))off_1E32C9390[v63])(&v112, &v117);
LABEL_98:
  WebCore::PaymentDetailsModifier::~PaymentDetailsModifier((WebCore::PaymentDetailsModifier *)&v119, v23);
  if (!v38)
  {
    v65 = v103;
    v103 = 0;
    v119 = v65;
    LOBYTE(v120) = 0;
    v123 = 0;
    if (v107)
    {
      v66 = v104;
      v104 = 0uLL;
      v120 = v66;
      v67 = v105;
      v105 = 0;
      v121 = v67;
      v122 = v106;
      v123 = 1;
    }
    v124 = v108;
    v68 = v109;
    v108 = 0;
    v109 = 0;
    v125 = v68;
    v126 = 0;
    v69 = v110;
    if (v110)
    {
      v70 = *(_QWORD *)(((unint64_t)(v110 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
      v71 = *(_QWORD **)(v70 + 40);
      if (!v71)
      {
        JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v110 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
        v71 = *(_QWORD **)(v70 + 40);
      }
      *(_QWORD *)(v70 + 40) = *v71;
      v71[2] = 0;
      v72 = v71 + 2;
      *v71 = 0;
      v71[1] = 0;
      v126 = v71 + 2;
      v73 = *v69;
      if (*v69)
      {
        v74 = *(_QWORD **)(((unint64_t)(v72 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v75 = v74[3];
        v74 += 3;
        *(v72 - 2) = v75;
        *(v72 - 1) = v74;
        *v74 = v72 - 2;
        *(_QWORD *)(v75 + 8) = v72 - 2;
      }
      *v72 = v73;
    }
    v76 = *(unsigned int *)(a3 + 12);
    if ((_DWORD)v76 == *(_DWORD *)(a3 + 8))
    {
      v77 = (uint64_t *)WTF::Vector<WebCore::PaymentDetailsModifier,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v76 + 1, (unint64_t)&v119);
      WebCore::PaymentDetailsModifier::PaymentDetailsModifier(*(_QWORD *)a3 + 72 * *(unsigned int *)(a3 + 12), v77);
    }
    else
    {
      v78 = *(_QWORD *)a3;
      v79 = *(_QWORD *)a3 + 72 * v76;
      v119 = 0;
      *(_QWORD *)(v78 + 72 * v76) = v65;
      *(_BYTE *)(v79 + 8) = 0;
      v80 = (_QWORD *)(v79 + 8);
      *(_BYTE *)(v79 + 40) = 0;
      v81 = (_BYTE *)(v79 + 40);
      if (v123)
      {
        v82 = v120;
        *(_QWORD *)&v120 = 0;
        *v80 = v82;
        v83 = v78 + 72 * v76;
        v84 = *((_QWORD *)&v120 + 1);
        *((_QWORD *)&v120 + 1) = 0;
        *(_QWORD *)(v83 + 16) = v84;
        v85 = v121;
        v121 = 0;
        *(_QWORD *)(v83 + 24) = v85;
        *(_BYTE *)(v83 + 32) = v122;
        *v81 = 1;
      }
      v86 = (_QWORD *)(v78 + 72 * v76);
      v86[6] = 0;
      v86[7] = 0;
      v87 = v124;
      v124 = 0;
      v86[6] = v87;
      LODWORD(v87) = v125;
      LODWORD(v125) = 0;
      *((_DWORD *)v86 + 14) = (_DWORD)v87;
      LODWORD(v87) = HIDWORD(v125);
      HIDWORD(v125) = 0;
      v86[8] = 0;
      v88 = v86 + 8;
      *((_DWORD *)v88 - 1) = (_DWORD)v87;
      if (v126)
      {
        v89 = *(_QWORD *)(((unint64_t)(v126 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v90 = *(_QWORD **)(v89 + 40);
        if (!v90)
        {
          JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v126 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
          v90 = *(_QWORD **)(v89 + 40);
        }
        *(_QWORD *)(v89 + 40) = *v90;
        v90[2] = 0;
        v91 = v90 + 2;
        *v90 = 0;
        v90[1] = 0;
        *v88 = v90 + 2;
        v92 = v126;
        if (v126)
          v92 = (_QWORD *)*v126;
        v93 = (unint64_t)(v91 - 2);
        if ((v92 != 0) != (*v91 != 0))
        {
          if (v92)
          {
            v94 = *(unint64_t **)((v93 & 0xFFFFFFFFFFFFF000) + 0x10);
            v95 = v94[3];
            v94 += 3;
            *(_QWORD *)v93 = v95;
            *(v91 - 1) = v94;
            *v94 = v93;
            *(_QWORD *)(v95 + 8) = v93;
          }
          else
          {
            v101 = *(_QWORD *)v93;
            v100 = (_QWORD *)*(v91 - 1);
            *v100 = *(_QWORD *)v93;
            *(_QWORD *)(v101 + 8) = v100;
            *(_QWORD *)v93 = 0;
            *(_QWORD *)(v93 + 8) = 0;
            v91 = (_QWORD *)*v88;
          }
        }
        *v91 = v92;
      }
    }
    ++*(_DWORD *)(a3 + 12);
    WebCore::PaymentDetailsModifier::~PaymentDetailsModifier((WebCore::PaymentDetailsModifier *)&v119, v64);
    v38 = 0;
    goto LABEL_121;
  }
  if (v38 != -1)
LABEL_121:
    (*(&off_1E32CCCD8 + v38))((int)&v119, (WebCore::PaymentDetailsModifier *)&v103);
}

uint64_t WebCore::PaymentDetailsModifier::PaymentDetailsModifier(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::HandleSet *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  JSC::HandleSet *v17;
  uint64_t *v18;
  uint64_t v19;

  v2 = *a2;
  *a2 = 0;
  *(_QWORD *)result = v2;
  *(_BYTE *)(result + 8) = 0;
  *(_BYTE *)(result + 40) = 0;
  if (*((_BYTE *)a2 + 40))
  {
    v3 = a2[1];
    a2[1] = 0;
    *(_QWORD *)(result + 8) = v3;
    v4 = a2[2];
    a2[2] = 0;
    *(_QWORD *)(result + 16) = v4;
    v5 = a2[3];
    a2[3] = 0;
    *(_QWORD *)(result + 24) = v5;
    *(_BYTE *)(result + 32) = *((_BYTE *)a2 + 32);
    *(_BYTE *)(result + 40) = 1;
  }
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  v6 = a2[6];
  a2[6] = 0;
  *(_QWORD *)(result + 48) = v6;
  LODWORD(v6) = *((_DWORD *)a2 + 14);
  *((_DWORD *)a2 + 14) = 0;
  *(_DWORD *)(result + 56) = v6;
  LODWORD(v6) = *((_DWORD *)a2 + 15);
  *((_DWORD *)a2 + 15) = 0;
  *(_DWORD *)(result + 60) = v6;
  *(_QWORD *)(result + 64) = 0;
  v7 = a2[8];
  if (v7)
  {
    v8 = *(JSC::HandleSet **)(((v7 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
    v9 = (_QWORD *)*((_QWORD *)v8 + 5);
    if (!v9)
    {
      v19 = result;
      v17 = v8;
      v18 = a2;
      JSC::HandleSet::grow(v8);
      v8 = v17;
      a2 = v18;
      result = v19;
      v9 = (_QWORD *)*((_QWORD *)v17 + 5);
    }
    *((_QWORD *)v8 + 5) = *v9;
    v9[2] = 0;
    v10 = v9 + 2;
    *v9 = 0;
    v9[1] = 0;
    *(_QWORD *)(result + 64) = v9 + 2;
    v11 = (_QWORD *)a2[8];
    if (v11)
      v11 = (_QWORD *)*v11;
    v12 = (unint64_t)(v10 - 2);
    if ((v11 != 0) != (*v10 != 0))
    {
      if (v11)
      {
        v13 = *(unint64_t **)((v12 & 0xFFFFFFFFFFFFF000) + 0x10);
        v14 = v13[3];
        v13 += 3;
        *(_QWORD *)v12 = v14;
        *(v10 - 1) = v13;
        *v13 = v12;
        *(_QWORD *)(v14 + 8) = v12;
      }
      else
      {
        v16 = *(_QWORD *)v12;
        v15 = (_QWORD *)*(v10 - 1);
        *v15 = *(_QWORD *)v12;
        *(_QWORD *)(v16 + 8) = v15;
        *(_QWORD *)v12 = 0;
        *(_QWORD *)(v12 + 8) = 0;
        v10 = *(_QWORD **)(result + 64);
      }
    }
    *v10 = v11;
  }
  return result;
}

unint64_t WTF::Vector<WebCore::PaymentDetailsModifier,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 72 * (unint64_t)*(unsigned int *)(a1 + 12) <= a3)
  {
    WTF::Vector<WebCore::PaymentDetailsModifier,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    WTF::Vector<WebCore::PaymentDetailsModifier,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

void WTF::Vector<WebCore::PaymentDetailsModifier,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  WTF *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  WTF::StringImpl *v14;

  v2 = *(unsigned int *)(a1 + 8);
  v3 = v2 + (v2 >> 2);
  if (v3 >= 0x10)
    v4 = v3 + 1;
  else
    v4 = 16;
  if (v4 <= a2)
    v4 = a2;
  if (v4 > v2)
  {
    if (v4 >= 0x38E38E4)
    {
      __break(0xC471u);
    }
    else
    {
      v6 = *(WTF **)a1;
      v7 = *(unsigned int *)(a1 + 12);
      v8 = 72 * v4;
      v9 = WTF::fastMalloc((WTF *)(72 * v4));
      *(_DWORD *)(a1 + 8) = (v8 & 0xFFFFFFF8) / 0x48;
      *(_QWORD *)a1 = v9;
      if ((_DWORD)v7)
      {
        v11 = v9;
        v12 = 72 * v7;
        v13 = (uint64_t *)v6;
        do
        {
          WebCore::PaymentDetailsModifier::PaymentDetailsModifier(v11, v13);
          WebCore::PaymentDetailsModifier::~PaymentDetailsModifier((WebCore::PaymentDetailsModifier *)v13, v14);
          v11 += 72;
          v13 += 9;
          v12 -= 72;
        }
        while (v12);
      }
      if (v6)
      {
        if (*(WTF **)a1 == v6)
        {
          *(_QWORD *)a1 = 0;
          *(_DWORD *)(a1 + 8) = 0;
        }
        WTF::fastFree(v6, v10);
      }
    }
  }
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore22PaymentDetailsModifierENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(int a1, WebCore::PaymentDetailsModifier *this)
{
  WebCore::PaymentDetailsModifier::~PaymentDetailsModifier(this, this);
}

uint64_t WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PaymentShippingOption>>>::convert(uint64_t a1, JSC::JSGlobalObject *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  JSValue v8;
  int i;
  unsigned int v10;
  JSC::JSCell *IndexQuickly;
  WTF::StringImpl *v12;
  JSC::JSCell *v14;
  uint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  void *v18;
  unsigned int v19;
  WTF::StringImpl *v20;
  uint64_t v21;

  v5 = *((_QWORD *)a2 + 7);
  if ((a3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a3 + 5) <= 0x16u)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    result = (uint64_t)v20;
    v20 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = WTF::StringImpl::destroy((WTF::StringImpl *)result, v12);
      else
        *(_DWORD *)result -= 2;
    }
    *(_DWORD *)(a1 + 16) = 1;
  }
  else
  {
    v20 = 0;
    v21 = 0;
    result = JSC::getIterationMode();
    if ((_DWORD)result == 2)
    {
      for (i = 1; ; ++i)
      {
        v10 = (*(_BYTE *)(a3 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(a3 + 8) - 8) : 0;
        if (i - 1 >= v10)
          break;
        IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)a3, i - 1, 0);
        if (!IndexQuickly)
          IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)a3, a2, (i - 1));
        if (*(_DWORD *)(v5 + 80))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5);
          if ((result & 1) != 0)
            break;
        }
        result = WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentShippingOption>>::convert(a2, IndexQuickly, (uint64_t)&v20);
        if (*(_QWORD *)(v5 + 16))
        {
          v15 = JSC::JSArrayIterator::create();
          v16 = i | 0xFFFE000000000000;
          if (i < 0)
            v16 = COERCE__INT64((double)i) + 0x2000000000000;
          *(_QWORD *)(v15 + 16) = v16;
          goto LABEL_34;
        }
      }
    }
    else
    {
      JSC::iteratorForIterable(a2, (JSC::JSGlobalObject *)a3, v8);
      if (!*(_DWORD *)(v5 + 80)
        || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5), (result & 1) == 0))
      {
        while (1)
        {
          result = JSC::iteratorStep();
          if (*(_QWORD *)(v5 + 16) || result == 6)
            break;
          v14 = (JSC::JSCell *)JSC::iteratorValue();
          if (*(_DWORD *)(v5 + 80))
          {
            result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5);
            if ((result & 1) != 0)
              break;
          }
          WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentShippingOption>>::convert(a2, v14, (uint64_t)&v20);
          if (*(_QWORD *)(v5 + 16))
          {
LABEL_34:
            result = JSC::iteratorClose();
            break;
          }
        }
      }
    }
    if (!*(_DWORD *)(v5 + 80))
    {
      v17 = v20;
LABEL_37:
      *(_QWORD *)a1 = v17;
      *(_QWORD *)(a1 + 8) = v21;
      *(_DWORD *)(a1 + 16) = 0;
      return result;
    }
    result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5);
    v17 = v20;
    if ((result & 1) == 0)
      goto LABEL_37;
    v19 = HIDWORD(v21);
    *(_DWORD *)(a1 + 16) = 1;
    if (v19)
      result = (uint64_t)WTF::VectorDestructor<true,WebCore::PaymentShippingOption>::destruct(v17, (WTF::StringImpl *)((char *)v17 + 40 * v19));
    if (v17)
      return WTF::fastFree(v17, v18);
  }
  return result;
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentShippingOption>>::convert(JSC::JSGlobalObject *a1, JSC::JSCell *this, uint64_t a3)
{
  uint64_t Object;
  JSC::Structure *v6;
  WTF::StringImpl *v7;
  JSC::JSCell *v8;
  uint64_t result;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  JSC::VM *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  uint64_t v24;
  JSC::VM *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  unint64_t v29;
  BOOL v30;
  JSC::VM *v31;
  double v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  BOOL v38;
  uint64_t v39;
  char *v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  WTF::StringImpl *v47;
  uint64_t v48;
  uint64_t v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v54;
  int v55;
  WTF::StringImpl *v56;
  BOOL v57;
  int v58;
  uint64_t v59;
  int *v60;
  int v61;
  __int128 v62;
  __int128 v63;
  BOOL v64;
  __int128 v65;
  __int128 v66;
  BOOL v67;
  unsigned int v68;
  WTF::StringImpl *v69;
  int v70;
  uint64_t v71;
  int v72;
  JSC::VM *v73;
  WTF::StringImpl *v74;

  v73 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
    goto LABEL_9;
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = JSC::throwTypeError();
    goto LABEL_10;
  }
  v6 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v8 = (JSC::JSCell *)JSC::JSObject::get(v6, a1, v65);
  if ((_QWORD)v65)
  {
    if (*(_DWORD *)v65 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v65, v7);
    else
      *(_DWORD *)v65 -= 2;
  }
  if (*((_DWORD *)v73 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v73);
    if ((_DWORD)result)
      goto LABEL_10;
  }
  if (v8 == (JSC::JSCell *)10)
  {
LABEL_9:
    result = (uint64_t)WebCore::throwRequiredMemberTypeError((int)a1, (int)&v73, "amount", 7, "PaymentShippingOption", 22, "PaymentCurrencyAmount", 22);
LABEL_10:
    v68 = 1;
    goto LABEL_69;
  }
  result = WebCore::convertDictionary<WebCore::PaymentCurrencyAmount>((uint64_t)&v62, (JSC::VM **)a1, v8);
  v11 = v63;
  if (!(_DWORD)v63)
  {
    v13 = (WTF::StringImpl *)*((_QWORD *)&v62 + 1);
    v12 = (WTF::StringImpl *)v62;
    v62 = 0uLL;
    WTF::AtomStringImpl::addLiteral();
    v14 = (WTF::StringImpl *)v65;
    v16 = JSC::JSObject::get(v6, a1, v65);
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v15);
      else
        *(_DWORD *)v14 -= 2;
    }
    if (*((_DWORD *)v73 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v73))
      goto LABEL_18;
    if (v16 == 10)
    {
      WebCore::throwRequiredMemberTypeError((int)a1, (int)&v73, "id", 3, "PaymentShippingOption", 22, "DOMString", 10);
LABEL_18:
      v17 = 0;
      v18 = 0;
      v68 = 1;
      goto LABEL_57;
    }
    *(_QWORD *)&v65 = v16;
    v19 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if ((v16 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v16 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v65, a1);
LABEL_25:
      if (*((_DWORD *)v19 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v19);
        v17 = v69;
        if (hasExceptionsAfterHandlingTraps)
        {
          v24 = 1;
          v72 = 1;
          v69 = 0;
          if (v17)
          {
            if (*(_DWORD *)v17 == 2)
              WTF::StringImpl::destroy(v17, v54);
            else
              *(_DWORD *)v17 -= 2;
          }
          v18 = 0;
          v17 = 0;
          v68 = 1;
          goto LABEL_56;
        }
      }
      else
      {
        v17 = v69;
      }
      v72 = 0;
      v71 = 0;
      WTF::AtomStringImpl::addLiteral();
      v21 = (WTF::StringImpl *)v65;
      v23 = JSC::JSObject::get(v6, a1, v65);
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, v22);
        else
          *(_DWORD *)v21 -= 2;
      }
      if (*((_DWORD *)v73 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v73))
        goto LABEL_33;
      if (v23 == 10)
      {
        WebCore::throwRequiredMemberTypeError((int)a1, (int)&v73, "label", 6, "PaymentShippingOption", 22, "DOMString", 10);
LABEL_33:
        v24 = 0;
        v18 = 0;
        v68 = 1;
LABEL_56:
        ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32C9390[v24])(&v69, &v71);
        goto LABEL_57;
      }
      *(_QWORD *)&v65 = v23;
      v25 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if ((v23 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v23 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v65, a1);
LABEL_40:
        if (*((_DWORD *)v25 + 20))
        {
          v55 = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
          v18 = v74;
          if (v55)
          {
            v70 = 1;
            v74 = 0;
            if (v18)
            {
              if (*(_DWORD *)v18 == 2)
                WTF::StringImpl::destroy(v18, v56);
              else
                *(_DWORD *)v18 -= 2;
            }
            v18 = 0;
            v33 = 1;
            v34 = 1;
            goto LABEL_55;
          }
        }
        else
        {
          v18 = v74;
        }
        v70 = 0;
        v69 = 0;
        WTF::AtomStringImpl::addLiteral();
        v27 = (WTF::StringImpl *)v65;
        v29 = JSC::JSObject::get(v6, a1, v65);
        if (v27)
        {
          if (*(_DWORD *)v27 == 2)
            WTF::StringImpl::destroy(v27, v28);
          else
            *(_DWORD *)v27 -= 2;
        }
        if (*((_DWORD *)v73 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v73) & 1) != 0)
        {
          v34 = 0;
          v33 = 1;
          goto LABEL_55;
        }
        if (v29 == 10)
        {
          v30 = 0;
LABEL_54:
          v33 = 0;
          v34 = 0;
          *(_QWORD *)&v65 = v17;
          *((_QWORD *)&v65 + 1) = v18;
          *(_QWORD *)&v66 = v12;
          *((_QWORD *)&v66 + 1) = v13;
          v67 = v30;
          v13 = 0;
          v12 = 0;
          v18 = 0;
          v17 = 0;
LABEL_55:
          v68 = v33;
          ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C9390[v34])(&v74, &v69);
          v24 = 0;
          goto LABEL_56;
        }
        v31 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v29 >= 0xFFFE000000000000)
        {
          v57 = (_DWORD)v29 == 0;
          goto LABEL_146;
        }
        *(_QWORD *)&v32 = v29 - 0x2000000000000;
        if (v29 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          if (v32 <= 0.0)
          {
            v30 = v32 < 0.0;
            goto LABEL_53;
          }
        }
        else
        {
          if ((v29 & 0xFFFE000000000002) != 0)
          {
            v30 = v29 == 7;
            goto LABEL_53;
          }
          v58 = *(unsigned __int8 *)(v29 + 5);
          if (v58 == 3)
          {
            v61 = *(_DWORD *)(v29 + 8);
LABEL_142:
            v57 = v61 == 0;
            goto LABEL_146;
          }
          if (v58 == 2)
          {
            v59 = *(_QWORD *)(v29 + 8);
            if ((v59 & 1) != 0)
              v60 = (int *)(v29 + 16);
            else
              v60 = (int *)(v59 + 4);
            v61 = *v60;
            goto LABEL_142;
          }
          if ((*(_BYTE *)(16 * (*(_DWORD *)v29 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v57 = *(_QWORD *)(16 * (*(_DWORD *)v29 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_146:
            v30 = !v57;
LABEL_53:
            if (*((_DWORD *)v31 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v31) & 1) != 0)
            {
              v34 = 0;
              v33 = 1;
              goto LABEL_55;
            }
            goto LABEL_54;
          }
        }
        v30 = 1;
        goto LABEL_53;
      }
      v26 = *(WTF::StringImpl **)(v23 + 8);
      if ((v26 & 1) != 0)
      {
        v26 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v23, a1);
        if (!v26)
          goto LABEL_39;
      }
      else if (!v26)
      {
LABEL_39:
        v74 = v26;
        goto LABEL_40;
      }
      *(_DWORD *)v26 += 2;
      goto LABEL_39;
    }
    v20 = *(WTF::StringImpl **)(v16 + 8);
    if ((v20 & 1) != 0)
    {
      v20 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v16, a1);
      if (!v20)
        goto LABEL_24;
    }
    else if (!v20)
    {
LABEL_24:
      v69 = v20;
      goto LABEL_25;
    }
    *(_DWORD *)v20 += 2;
    goto LABEL_24;
  }
  v68 = 1;
  if ((_DWORD)v63 == -1)
    goto LABEL_69;
  v17 = 0;
  v18 = 0;
  v12 = 0;
  v13 = 0;
LABEL_57:
  result = ((uint64_t (*)(uint64_t *, __int128 *))off_1E32CB0D0[v11])(&v71, &v62);
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
    {
      result = WTF::StringImpl::destroy(v13, v10);
      if (!v12)
        goto LABEL_63;
      goto LABEL_61;
    }
    *(_DWORD *)v13 -= 2;
  }
  if (!v12)
    goto LABEL_63;
LABEL_61:
  if (*(_DWORD *)v12 == 2)
    result = WTF::StringImpl::destroy(v12, v10);
  else
    *(_DWORD *)v12 -= 2;
LABEL_63:
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
    {
      result = WTF::StringImpl::destroy(v18, v10);
      if (!v17)
        goto LABEL_69;
      goto LABEL_67;
    }
    *(_DWORD *)v18 -= 2;
  }
  if (!v17)
    goto LABEL_69;
LABEL_67:
  if (*(_DWORD *)v17 == 2)
    result = WTF::StringImpl::destroy(v17, v10);
  else
    *(_DWORD *)v17 -= 2;
LABEL_69:
  v35 = v68;
  if (!v68)
  {
    v36 = v65;
    v62 = v65;
    v37 = v66;
    v65 = 0u;
    v66 = 0u;
    v63 = v37;
    v38 = v67;
    v64 = v67;
    v39 = *(unsigned int *)(a3 + 12);
    if ((_DWORD)v39 == *(_DWORD *)(a3 + 8))
    {
      v40 = WTF::Vector<WebCore::PaymentShippingOption,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v39 + 1, (unint64_t)&v62);
      v41 = *(_DWORD *)(a3 + 12);
      v42 = *(_QWORD *)a3 + 40 * v41;
      v43 = *(_QWORD *)v40;
      *(_QWORD *)v40 = 0;
      *(_QWORD *)v42 = v43;
      v44 = *((_QWORD *)v40 + 1);
      *((_QWORD *)v40 + 1) = 0;
      *(_QWORD *)(v42 + 8) = v44;
      v45 = *((_QWORD *)v40 + 2);
      *((_QWORD *)v40 + 2) = 0;
      *(_QWORD *)(v42 + 16) = v45;
      v46 = *((_QWORD *)v40 + 3);
      *((_QWORD *)v40 + 3) = 0;
      *(_QWORD *)(v42 + 24) = v46;
      *(_BYTE *)(v42 + 32) = v40[32];
      v47 = (WTF::StringImpl *)*((_QWORD *)&v63 + 1);
      *(_DWORD *)(a3 + 12) = v41 + 1;
      *((_QWORD *)&v63 + 1) = 0;
      if (v47)
      {
        if (*(_DWORD *)v47 == 2)
          WTF::StringImpl::destroy(v47, v10);
        else
          *(_DWORD *)v47 -= 2;
      }
    }
    else
    {
      v48 = *(_QWORD *)a3;
      *(_QWORD *)&v62 = 0;
      v49 = v48 + 40 * v39;
      *(_QWORD *)v49 = v36;
      *((_QWORD *)&v62 + 1) = 0;
      *(_QWORD *)(v49 + 8) = *((_QWORD *)&v36 + 1);
      *(_QWORD *)&v63 = 0;
      *(_OWORD *)(v49 + 16) = v37;
      *(_BYTE *)(v49 + 32) = v38;
      *(_DWORD *)(a3 + 12) = v39 + 1;
      *((_QWORD *)&v63 + 1) = 0;
    }
    v50 = (WTF::StringImpl *)v63;
    *(_QWORD *)&v63 = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 2)
        WTF::StringImpl::destroy(v50, v10);
      else
        *(_DWORD *)v50 -= 2;
    }
    v51 = (WTF::StringImpl *)*((_QWORD *)&v62 + 1);
    *((_QWORD *)&v62 + 1) = 0;
    if (v51)
    {
      if (*(_DWORD *)v51 == 2)
        WTF::StringImpl::destroy(v51, v10);
      else
        *(_DWORD *)v51 -= 2;
    }
    v52 = (WTF::StringImpl *)v62;
    *(_QWORD *)&v62 = 0;
    if (v52)
    {
      if (*(_DWORD *)v52 == 2)
        WTF::StringImpl::destroy(v52, v10);
      else
        *(_DWORD *)v52 -= 2;
    }
    return ((uint64_t (*)(__int128 *, __int128 *))off_1E32CCCE8[v35])(&v62, &v65);
  }
  if (v68 != -1)
    return ((uint64_t (*)(__int128 *, __int128 *))off_1E32CCCE8[v35])(&v62, &v65);
  return result;
}

char *WTF::Vector<WebCore::PaymentShippingOption,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  void *v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  int v18;
  uint64_t v19;
  void *v20;

  v3 = a3;
  v5 = *(WTF::StringImpl **)a1;
  if (*(_QWORD *)a1 > a3
    || (v6 = (WTF::StringImpl *)((char *)v5 + 40 * *(unsigned int *)(a1 + 12)), (unint64_t)v6 <= a3))
  {
    v14 = *(unsigned int *)(a1 + 8);
    v15 = v14 + (v14 >> 2);
    if (v15 >= 0x10)
      v16 = v15 + 1;
    else
      v16 = 16;
    if (v16 <= a2)
      v16 = a2;
    if (v16 > v14)
    {
      if (v16 >= 0x6666667)
      {
        __break(0xC471u);
        JUMPOUT(0x194E0824CLL);
      }
      v17 = (WTF::StringImpl *)((char *)v5 + 40 * *(unsigned int *)(a1 + 12));
      v18 = 40 * v16;
      v19 = WTF::fastMalloc((WTF *)(40 * v16));
      *(_DWORD *)(a1 + 8) = (v18 & 0xFFFFFFF8) / 0x28;
      *(_QWORD *)a1 = v19;
      WTF::VectorMover<false,WebCore::PaymentShippingOption>::move(v5, v17, v19);
      if (v5)
      {
        if (*(WTF::StringImpl **)a1 == v5)
        {
          *(_QWORD *)a1 = 0;
          *(_DWORD *)(a1 + 8) = 0;
        }
        WTF::fastFree(v5, v20);
      }
    }
  }
  else
  {
    v7 = *(unsigned int *)(a1 + 8);
    v8 = v7 + (v7 >> 2);
    if (v8 >= 0x10)
      v9 = v8 + 1;
    else
      v9 = 16;
    if (v9 <= a2)
      v9 = a2;
    if (v9 <= v7)
    {
      v13 = *(WTF::StringImpl **)a1;
    }
    else
    {
      if (v9 >= 0x6666667)
      {
        __break(0xC471u);
        JUMPOUT(0x194E08254);
      }
      v10 = 40 * v9;
      v11 = WTF::fastMalloc((WTF *)(40 * v9));
      *(_DWORD *)(a1 + 8) = (v10 & 0xFFFFFFF8) / 0x28;
      *(_QWORD *)a1 = v11;
      WTF::VectorMover<false,WebCore::PaymentShippingOption>::move(v5, v6, v11);
      v13 = *(WTF::StringImpl **)a1;
      if (v5)
      {
        if (v13 == v5)
        {
          *(_QWORD *)a1 = 0;
          *(_DWORD *)(a1 + 8) = 0;
        }
        WTF::fastFree(v5, v12);
        v13 = *(WTF::StringImpl **)a1;
      }
    }
    return (char *)v13 + 8 * ((uint64_t)(v3 - (_QWORD)v5) >> 3);
  }
  return (char *)v3;
}

WTF::StringImpl *WTF::VectorMover<false,WebCore::PaymentShippingOption>::move(WTF::StringImpl *result, WTF::StringImpl *a2, uint64_t a3)
{
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;

  if (result != a2)
  {
    v5 = result;
    do
    {
      v6 = *(WTF::StringImpl **)v5;
      *(_QWORD *)v5 = 0;
      *(_QWORD *)a3 = v6;
      v7 = *((_QWORD *)v5 + 1);
      *((_QWORD *)v5 + 1) = 0;
      *(_QWORD *)(a3 + 8) = v7;
      v8 = *((_QWORD *)v5 + 2);
      *((_QWORD *)v5 + 2) = 0;
      *(_QWORD *)(a3 + 16) = v8;
      v9 = *((_QWORD *)v5 + 3);
      *((_QWORD *)v5 + 3) = 0;
      *(_QWORD *)(a3 + 24) = v9;
      *(_BYTE *)(a3 + 32) = *((_BYTE *)v5 + 32);
      v10 = (WTF::StringImpl *)*((_QWORD *)v5 + 3);
      *((_QWORD *)v5 + 3) = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, a2);
        else
          *(_DWORD *)v10 -= 2;
      }
      v11 = (WTF::StringImpl *)*((_QWORD *)v5 + 2);
      *((_QWORD *)v5 + 2) = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, a2);
        else
          *(_DWORD *)v11 -= 2;
      }
      v12 = (WTF::StringImpl *)*((_QWORD *)v5 + 1);
      *((_QWORD *)v5 + 1) = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, a2);
        else
          *(_DWORD *)v12 -= 2;
      }
      result = *(WTF::StringImpl **)v5;
      *(_QWORD *)v5 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
        else
          *(_DWORD *)result -= 2;
      }
      v5 = (WTF::StringImpl *)((char *)v5 + 40);
      a3 += 40;
    }
    while (v5 != a2);
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore21PaymentShippingOptionENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (WTF::StringImpl *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, a2);
    else
      *(_DWORD *)v4 -= 2;
  }
  v5 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, a2);
    else
      *(_DWORD *)v5 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::PaymentMethodData>>::convert(JSC::VM **a1, JSC::JSCell *this, uint64_t a3)
{
  uint64_t *v5;
  uint64_t Object;
  JSC::Structure *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  uint64_t result;
  WTF::StringImpl *v11;
  int v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  uint64_t *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  char *v48;
  JSC::HandleSet *v49;
  _QWORD *v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  WTF::StringImpl **v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  WTF::StringImpl *v67;
  JSC::VM *v68;
  WTF::StringImpl *v69;
  WTF::StringImpl *v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t *v75;
  unint64_t v76;
  int v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  WTF::StringImpl *v83;
  int hasExceptionsAfterHandlingTraps;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  WTF::StringImpl *v91;
  uint64_t *v92;
  unsigned int v93;
  WTF::StringImpl *v94;
  uint64_t *v95;
  JSC::VM *v96;
  WTF::StringImpl *v97;
  uint64_t v98;

  v96 = a1[7];
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v5 = 0;
    goto LABEL_32;
  }
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = JSC::throwTypeError();
LABEL_96:
    v93 = 1;
    goto LABEL_38;
  }
  v7 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v9 = JSC::JSObject::get(v7, (JSC::JSGlobalObject *)a1, (unint64_t)v91);
  if (v91)
  {
    if (*(_DWORD *)v91 == 2)
      WTF::StringImpl::destroy(v91, v8);
    else
      *(_DWORD *)v91 -= 2;
  }
  if (*((_DWORD *)v96 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v96);
    if ((_DWORD)result)
      goto LABEL_96;
  }
  if (v9 == 10)
  {
    v5 = 0;
    goto LABEL_27;
  }
  result = WebCore::Converter<WebCore::IDLObject>::convert<WebCore::DefaultExceptionThrower>((uint64_t)a1, v9, (uint64_t)&v94);
  v12 = (int)v95;
  if ((_DWORD)v95)
  {
    v5 = 0;
    v93 = 1;
    LODWORD(v13) = (_DWORD)v95;
    goto LABEL_24;
  }
  v13 = v94;
  if (v94)
  {
    v14 = *(_QWORD *)((((unint64_t)v94 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
    v15 = *(_QWORD **)(v14 + 40);
    if (v15)
    {
      *(_QWORD *)(v14 + 40) = *v15;
      v15[2] = 0;
      v16 = v15 + 2;
      *v15 = 0;
      v15[1] = 0;
    }
    else
    {
      result = JSC::HandleSet::grow(*(JSC::HandleSet **)((((unint64_t)v94 - 16) & 0xFFFFFFFFFFFFF000) + 0x10));
      v85 = *(_QWORD **)(v14 + 40);
      v13 = v94;
      *(_QWORD *)(v14 + 40) = *v85;
      *v85 = 0;
      v85[1] = 0;
      v85[2] = 0;
      v16 = v85 + 2;
      if (!v13)
      {
        v17 = 0;
LABEL_17:
        *v16 = v17;
        v18 = (unint64_t)(v16 - 2);
        v19 = v18 & 0xFFFFFFFFFFFFF000;
        v20 = **(_QWORD **)((v18 & 0xFFFFFFFFFFFFF000) + 0x10);
        v21 = *(_QWORD *)(v20 + 712);
        if (!v21)
        {
          v90 = v17;
          result = JSC::HandleSet::grow((JSC::HandleSet *)(v20 + 672));
          v19 = v18 & 0xFFFFFFFFFFFFF000;
          v17 = v90;
          v21 = *(_QWORD *)(v20 + 712);
        }
        *(_QWORD *)(v20 + 712) = *(_QWORD *)v21;
        *(_QWORD *)(v21 + 16) = 0;
        v5 = (uint64_t *)(v21 + 16);
        *(_QWORD *)v21 = 0;
        *(_QWORD *)(v21 + 8) = 0;
        if (v17)
        {
          v22 = *(unint64_t **)((v21 & 0xFFFFFFFFFFFFF000) + 0x10);
          v23 = v22[3];
          v22 += 3;
          *(_QWORD *)v21 = v23;
          *(_QWORD *)(v21 + 8) = v22;
          *v22 = v21;
          *(_QWORD *)(v23 + 8) = v21;
        }
        *v5 = v17;
        v13 = *(WTF::StringImpl **)(v19 + 16);
        v24 = *(_QWORD **)(v18 + 8);
        if (v24)
        {
          v25 = *(_QWORD *)v18;
          *v24 = *(_QWORD *)v18;
          *(_QWORD *)(v25 + 8) = v24;
          *(_QWORD *)v18 = 0;
          *(_QWORD *)(v18 + 8) = 0;
        }
        *(_QWORD *)v18 = *((_QWORD *)v13 + 5);
        *((_QWORD *)v13 + 5) = v18;
        LODWORD(v13) = (_DWORD)v95;
LABEL_24:
        if ((_DWORD)v13 == -1)
          goto LABEL_26;
        goto LABEL_25;
      }
    }
    v17 = *(_QWORD *)v13;
    if (v17)
    {
      v81 = *(_QWORD **)(((unint64_t)(v16 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
      v82 = v81[3];
      v81 += 3;
      *(v16 - 2) = v82;
      *(v16 - 1) = v81;
      *v81 = v16 - 2;
      *(_QWORD *)(v82 + 8) = v16 - 2;
    }
    goto LABEL_17;
  }
  v5 = 0;
LABEL_25:
  result = ((uint64_t (*)(uint64_t *, WTF::StringImpl **))off_1E32CB060[v13])(&v98, &v94);
LABEL_26:
  if (v12)
    goto LABEL_34;
LABEL_27:
  WTF::AtomStringImpl::addLiteral();
  v26 = v94;
  v28 = JSC::JSObject::get(v7, (JSC::JSGlobalObject *)a1, (unint64_t)v94);
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
      WTF::StringImpl::destroy(v26, v27);
    else
      *(_DWORD *)v26 -= 2;
  }
  if (*((_DWORD *)v96 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v96);
    if ((_DWORD)result)
      goto LABEL_33;
  }
  if (v28 != 10)
  {
    v98 = v28;
    v68 = a1[7];
    if ((v28 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v28 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v98, (JSC::JSGlobalObject *)a1);
LABEL_79:
      if (*((_DWORD *)v68 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v68);
        v70 = v97;
        if (hasExceptionsAfterHandlingTraps)
        {
          LODWORD(v95) = 1;
          v97 = 0;
          if (v70)
          {
            if (*(_DWORD *)v70 == 2)
              WTF::StringImpl::destroy(v70, v83);
            else
              *(_DWORD *)v70 -= 2;
          }
          v77 = 1;
          v78 = 1;
LABEL_87:
          v93 = v77;
          result = ((uint64_t (*)(uint64_t *, WTF::StringImpl **))off_1E32C9390[v78])(&v98, &v94);
          if (!v5)
            goto LABEL_38;
          goto LABEL_35;
        }
      }
      else
      {
        v70 = v97;
      }
      LODWORD(v95) = 0;
      v94 = 0;
      v91 = v70;
      v92 = 0;
      if (v5)
      {
        v71 = *(_QWORD *)(((unint64_t)(v5 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v72 = *(_QWORD *)(v71 + 40);
        if (!v72)
        {
          JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v5 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
          v72 = *(_QWORD *)(v71 + 40);
        }
        *(_QWORD *)(v71 + 40) = *(_QWORD *)v72;
        *(_QWORD *)(v72 + 16) = 0;
        v73 = (_QWORD *)(v72 + 16);
        *(_QWORD *)v72 = 0;
        *(_QWORD *)(v72 + 8) = 0;
        v92 = (uint64_t *)(v72 + 16);
        v74 = *v5;
        if (*v5)
        {
          v75 = *(unint64_t **)((v72 & 0xFFFFFFFFFFFFF000) + 0x10);
          v76 = v75[3];
          v75 += 3;
          *(_QWORD *)v72 = v76;
          *(_QWORD *)(v72 + 8) = v75;
          *v75 = v72;
          *(_QWORD *)(v76 + 8) = v72;
        }
        v77 = 0;
        v78 = 0;
        *v73 = v74;
      }
      else
      {
        v77 = 0;
        v78 = 0;
      }
      goto LABEL_87;
    }
    v69 = *(WTF::StringImpl **)(v28 + 8);
    if ((v69 & 1) != 0)
    {
      v69 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v28, (JSC::JSGlobalObject *)a1);
      if (!v69)
        goto LABEL_78;
    }
    else if (!v69)
    {
LABEL_78:
      v97 = v69;
      goto LABEL_79;
    }
    *(_DWORD *)v69 += 2;
    goto LABEL_78;
  }
LABEL_32:
  result = (uint64_t)WebCore::throwRequiredMemberTypeError((int)a1, (int)&v96, "supportedMethods", 17, "PaymentMethodData", 18, "DOMString", 10);
LABEL_33:
  v93 = 1;
LABEL_34:
  if (!v5)
    goto LABEL_38;
LABEL_35:
  v29 = v5 - 2;
  v30 = *(_QWORD *)(((unint64_t)(v5 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
  v31 = (uint64_t *)*(v5 - 1);
  if (v31)
  {
    v32 = *v29;
    *v31 = *v29;
    *(_QWORD *)(v32 + 8) = v31;
    *v29 = 0;
    *(v5 - 1) = 0;
  }
  *v29 = *(_QWORD *)(v30 + 40);
  *(_QWORD *)(v30 + 40) = v29;
LABEL_38:
  v33 = v93;
  if (!v93)
  {
    v34 = v91;
    v35 = v92;
    v91 = 0;
    v94 = v34;
    v95 = 0;
    if (v92)
    {
      v36 = *(_QWORD *)(((unint64_t)(v92 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
      v37 = *(_QWORD **)(v36 + 40);
      if (!v37)
      {
        JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v92 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
        v37 = *(_QWORD **)(v36 + 40);
      }
      *(_QWORD *)(v36 + 40) = *v37;
      v37[2] = 0;
      v38 = v37 + 2;
      *v37 = 0;
      v37[1] = 0;
      v95 = v37 + 2;
      v39 = *v35;
      if (*v35)
      {
        v79 = *(_QWORD **)(((unint64_t)(v38 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v80 = v79[3];
        v79 += 3;
        *(v38 - 2) = v80;
        *(v38 - 1) = (uint64_t)v79;
        *v79 = v38 - 2;
        *(_QWORD *)(v80 + 8) = v38 - 2;
      }
      *v38 = v39;
    }
    else
    {
      v38 = 0;
    }
    v40 = *(unsigned int *)(a3 + 12);
    if ((_DWORD)v40 == *(_DWORD *)(a3 + 8))
    {
      v41 = WTF::Vector<WebCore::PaymentMethodData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v40 + 1, (unint64_t)&v94);
      v42 = *(unsigned int *)(a3 + 12);
      v43 = *(_QWORD *)a3;
      v44 = *(_QWORD *)a3 + 16 * v42;
      v45 = *(_QWORD *)v41;
      *(_QWORD *)v41 = 0;
      *(_QWORD *)(v43 + 16 * v42) = v45;
      *(_QWORD *)(v44 + 8) = 0;
      v46 = (unint64_t *)(v44 + 8);
      v47 = *((_QWORD *)v41 + 1);
      if (v47)
      {
        v48 = v41;
        v49 = *(JSC::HandleSet **)(((v47 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
        v50 = (_QWORD *)*((_QWORD *)v49 + 5);
        if (!v50)
        {
          JSC::HandleSet::grow(v49);
          v50 = (_QWORD *)*((_QWORD *)v49 + 5);
        }
        *((_QWORD *)v49 + 5) = *v50;
        v50[2] = 0;
        v42 = (unint64_t)(v50 + 2);
        *v50 = 0;
        v50[1] = 0;
        *v46 = (unint64_t)(v50 + 2);
        v51 = (_QWORD *)*((_QWORD *)v48 + 1);
        if (v51)
          v51 = (_QWORD *)*v51;
        v52 = v42 - 16;
        if ((v51 != 0) != (*(_QWORD *)v42 != 0))
        {
          if (v51)
          {
            v53 = *(unint64_t **)((v52 & 0xFFFFFFFFFFFFF000) + 0x10);
            v54 = v53[3];
            v53 += 3;
            *(_QWORD *)v52 = v54;
            *(_QWORD *)(v42 - 8) = v53;
            *v53 = v52;
            *(_QWORD *)(v54 + 8) = v52;
          }
          else
          {
            v87 = *(_QWORD *)v52;
            v86 = *(_QWORD **)(v42 - 8);
            *v86 = *(_QWORD *)v52;
            *(_QWORD *)(v87 + 8) = v86;
            *(_QWORD *)v52 = 0;
            *(_QWORD *)(v52 + 8) = 0;
            v42 = *v46;
          }
        }
        *(_QWORD *)v42 = v51;
        LODWORD(v42) = *(_DWORD *)(a3 + 12);
      }
      *(_DWORD *)(a3 + 12) = v42 + 1;
      v38 = v95;
    }
    else
    {
      v55 = (WTF::StringImpl **)(*(_QWORD *)a3 + 16 * v40);
      v94 = 0;
      *v55 = v34;
      v55[1] = 0;
      v56 = v55 + 1;
      if (v38)
      {
        v57 = *(_QWORD *)(((unint64_t)(v38 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v58 = *(_QWORD *)(v57 + 40);
        if (!v58)
        {
          JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v38 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
          v58 = *(_QWORD *)(v57 + 40);
        }
        *(_QWORD *)(v57 + 40) = *(_QWORD *)v58;
        *(_QWORD *)(v58 + 16) = 0;
        v59 = (_QWORD *)(v58 + 16);
        *(_QWORD *)v58 = 0;
        *(_QWORD *)(v58 + 8) = 0;
        *v56 = v58 + 16;
        v60 = *v38;
        if ((*v38 != 0) != (*(_QWORD *)(v58 + 16) != 0))
        {
          if (v60)
          {
            v61 = *(unint64_t **)((v58 & 0xFFFFFFFFFFFFF000) + 0x10);
            v62 = v61[3];
            v61 += 3;
            *(_QWORD *)v58 = v62;
            *(_QWORD *)(v58 + 8) = v61;
            *v61 = v58;
            *(_QWORD *)(v62 + 8) = v58;
          }
          else
          {
            v89 = *(_QWORD *)v58;
            v88 = *(_QWORD **)(v58 + 8);
            *v88 = *(_QWORD *)v58;
            *(_QWORD *)(v89 + 8) = v88;
            *(_QWORD *)v58 = 0;
            *(_QWORD *)(v58 + 8) = 0;
            v59 = (_QWORD *)*v56;
          }
        }
        *v59 = v60;
        LODWORD(v40) = *(_DWORD *)(a3 + 12);
      }
      *(_DWORD *)(a3 + 12) = v40 + 1;
    }
    if (v38)
    {
      v63 = v38 - 2;
      v64 = *(_QWORD *)(((unint64_t)(v38 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
      v65 = (uint64_t *)*(v38 - 1);
      if (v65)
      {
        v66 = *v63;
        *v65 = *v63;
        *(_QWORD *)(v66 + 8) = v65;
        *v63 = 0;
        *(v38 - 1) = 0;
      }
      *v63 = *(_QWORD *)(v64 + 40);
      *(_QWORD *)(v64 + 40) = v63;
      v95 = 0;
    }
    v67 = v94;
    v94 = 0;
    if (v67)
    {
      if (*(_DWORD *)v67 == 2)
        WTF::StringImpl::destroy(v67, v11);
      else
        *(_DWORD *)v67 -= 2;
    }
    return ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32CCCF8[v33])(&v94, &v91);
  }
  if (v93 != -1)
    return ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32CCCF8[v33])(&v94, &v91);
  return result;
}

char *WTF::Vector<WebCore::PaymentMethodData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  void *v20;

  v3 = a3;
  v5 = *(WTF::StringImpl **)a1;
  if (*(_QWORD *)a1 > a3
    || (v6 = (WTF::StringImpl *)((char *)v5 + 16 * *(unsigned int *)(a1 + 12)), (unint64_t)v6 <= a3))
  {
    v14 = *(unsigned int *)(a1 + 8);
    v15 = v14 + (v14 >> 2);
    if (v15 >= 0x10)
      v16 = v15 + 1;
    else
      v16 = 16;
    if (v16 <= a2)
      v17 = a2;
    else
      v17 = v16;
    if (v17 > v14)
    {
      if (v17 >> 28)
      {
        __break(0xC471u);
        JUMPOUT(0x194E08CF0);
      }
      v18 = (WTF::StringImpl *)((char *)v5 + 16 * *(unsigned int *)(a1 + 12));
      v19 = WTF::fastMalloc((WTF *)(16 * v17));
      *(_DWORD *)(a1 + 8) = v17;
      *(_QWORD *)a1 = v19;
      WTF::VectorMover<false,WebCore::PaymentMethodData>::move(v5, v18, v19);
      if (v5)
      {
        if (*(WTF::StringImpl **)a1 == v5)
        {
          *(_QWORD *)a1 = 0;
          *(_DWORD *)(a1 + 8) = 0;
        }
        WTF::fastFree(v5, v20);
      }
    }
  }
  else
  {
    v7 = *(unsigned int *)(a1 + 8);
    v8 = v7 + (v7 >> 2);
    if (v8 >= 0x10)
      v9 = v8 + 1;
    else
      v9 = 16;
    if (v9 <= a2)
      v10 = a2;
    else
      v10 = v9;
    if (v10 <= v7)
    {
      v13 = *(WTF::StringImpl **)a1;
    }
    else
    {
      if (v10 >> 28)
      {
        __break(0xC471u);
        JUMPOUT(0x194E08CF8);
      }
      v11 = WTF::fastMalloc((WTF *)(16 * v10));
      *(_DWORD *)(a1 + 8) = v10;
      *(_QWORD *)a1 = v11;
      WTF::VectorMover<false,WebCore::PaymentMethodData>::move(v5, v6, v11);
      v13 = *(WTF::StringImpl **)a1;
      if (v5)
      {
        if (v13 == v5)
        {
          *(_QWORD *)a1 = 0;
          *(_DWORD *)(a1 + 8) = 0;
        }
        WTF::fastFree(v5, v12);
        v13 = *(WTF::StringImpl **)a1;
      }
    }
    return (char *)v13 + 16 * ((uint64_t)(v3 - (_QWORD)v5) >> 4);
  }
  return (char *)v3;
}

WTF::StringImpl *WTF::VectorMover<false,WebCore::PaymentMethodData>::move(WTF::StringImpl *result, WTF::StringImpl *a2, uint64_t a3)
{
  WTF::StringImpl **v4;
  WTF::StringImpl ***v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  WTF::StringImpl **v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  WTF::StringImpl *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  if (result != a2)
  {
    v4 = (WTF::StringImpl **)result;
    v5 = (WTF::StringImpl ***)(a3 + 8);
    do
    {
      v6 = *v4;
      *v4 = 0;
      *(v5 - 1) = (WTF::StringImpl **)v6;
      *v5 = 0;
      v7 = v4[1];
      if (v7)
      {
        v8 = ((unint64_t)v7 - 16) & 0xFFFFFFFFFFFFF000;
        v9 = *(_QWORD *)(v8 + 16);
        v10 = *(_QWORD **)(v9 + 40);
        if (!v10)
        {
          JSC::HandleSet::grow(*(JSC::HandleSet **)(v8 + 16));
          v10 = *(_QWORD **)(v9 + 40);
        }
        *(_QWORD *)(v9 + 40) = *v10;
        v10[2] = 0;
        v11 = (WTF::StringImpl **)(v10 + 2);
        *v10 = 0;
        v10[1] = 0;
        *v5 = (WTF::StringImpl **)(v10 + 2);
        v12 = v4[1];
        if (v12)
          v12 = *(WTF::StringImpl **)v12;
        v13 = (unint64_t)(v11 - 2);
        if ((v12 != 0) != (*v11 != 0))
        {
          if (v12)
          {
            v14 = *(unint64_t **)((v13 & 0xFFFFFFFFFFFFF000) + 0x10);
            v15 = v14[3];
            v14 += 3;
            *(_QWORD *)v13 = v15;
            *(v11 - 1) = (WTF::StringImpl *)v14;
            *v14 = v13;
            *(_QWORD *)(v15 + 8) = v13;
          }
          else
          {
            v22 = *(_QWORD *)v13;
            v21 = *(v11 - 1);
            *v21 = *(_QWORD *)v13;
            *(_QWORD *)(v22 + 8) = v21;
            *(_QWORD *)v13 = 0;
            *(_QWORD *)(v13 + 8) = 0;
            v11 = *v5;
          }
        }
        *v11 = v12;
        v16 = v4[1];
        if (v16)
        {
          v17 = (uint64_t *)((char *)v16 - 16);
          v18 = *(_QWORD *)((((unint64_t)v16 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
          v19 = (uint64_t *)*((_QWORD *)v16 - 1);
          if (v19)
          {
            v20 = *v17;
            *v19 = *v17;
            *(_QWORD *)(v20 + 8) = v19;
            *v17 = 0;
            v17[1] = 0;
          }
          *v17 = *(_QWORD *)(v18 + 40);
          *(_QWORD *)(v18 + 40) = v17;
          v4[1] = 0;
        }
      }
      result = *v4;
      *v4 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
        else
          *(_DWORD *)result -= 2;
      }
      v4 += 2;
      v5 += 2;
    }
    while (v4 != (WTF::StringImpl **)a2);
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore17PaymentMethodDataENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl **a2)
{
  WTF::StringImpl *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  WTF::StringImpl *result;

  v2 = a2[1];
  if (v2)
  {
    v3 = (uint64_t *)((char *)v2 - 16);
    v4 = *(_QWORD *)((((unint64_t)v2 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
    v5 = (uint64_t *)*((_QWORD *)v2 - 1);
    if (v5)
    {
      v6 = *v3;
      *v5 = *v3;
      *(_QWORD *)(v6 + 8) = v5;
      *v3 = 0;
      v3[1] = 0;
    }
    *v3 = *(_QWORD *)(v4 + 40);
    *(_QWORD *)(v4 + 40) = v3;
    a2[1] = 0;
  }
  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSPaymentRequest::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPaymentResponse::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPerformanceEntry::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSPerformanceMark>(WebCore::JSPerformanceMark *a1, JSC::VM *a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t Structure;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSPerformanceMark::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSPerformanceMark::createPrototype(a1, a2, v5);
    Structure = WebCore::JSPerformanceMark::createStructure((uint64_t *)a1, (uint64_t)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSPerformanceMark::s_info);
  }
  return result;
}

uint64_t WebCore::JSPerformanceMark::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPerformanceMark::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSPerformanceMark *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSPerformanceMark *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSPerformanceMark::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 48;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  *(_QWORD *)(result + 32) = 0;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPerformanceNavigation::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSPerformanceNavigationTiming>(WebCore::JSPerformanceNavigationTiming *a1, JSC::JSCell **a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSPerformanceNavigationTiming::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSPerformanceNavigationTiming::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSPerformanceNavigationTiming::s_info);
  }
  return result;
}

uint64_t WebCore::JSPerformanceNavigationTiming::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 5936);
  *(_QWORD *)(a1 + 5936) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSPerformanceObserver>(WebCore::JSPerformanceObserver *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  JSC::JSCell *Prototype;
  uint64_t v14;
  int v15;

  v5 = *((_QWORD *)a2 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSPerformanceObserver::s_info
        + ~((_QWORD)&WebCore::JSPerformanceObserver::s_info << 32)) ^ (((unint64_t)&WebCore::JSPerformanceObserver::s_info
                                                                      + ~((_QWORD)&WebCore::JSPerformanceObserver::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSPerformanceObserver::s_info)
    {
LABEL_3:
      result = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (result)
        return result;
    }
    else
    {
      v15 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v15) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v15;
        if (v11 == &WebCore::JSPerformanceObserver::s_info)
          goto LABEL_3;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSPerformanceObserver::createPrototype(this, (JSC::JSCell **)a2, a3);
  v14 = JSC::Structure::create((uint64_t *)this, (int)a2, Prototype);
  return WebCore::cacheDOMStructure((JSCell *)a2, v14, (uint64_t)&WebCore::JSPerformanceObserver::s_info);
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSPerformanceObserver>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructor<WebCore::JSPerformanceObserver>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSPerformanceObserver>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t WebCore::JSPerformanceObserver::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 5944);
  *(_QWORD *)(a1 + 5944) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::JSPerformanceObserver::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSPerformanceObserver *v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;

  v5 = (WebCore::JSPerformanceObserver *)*((_QWORD *)a2 + 7);
  v6 = JSC::allocateCell<WebCore::JSPerformanceObserver>(v5, a2);
  result = WebCore::JSDOMObject::JSDOMObject(v6, a1);
  v8 = *a3;
  *a3 = 0;
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t *WebCore::cacheWrapper<WebCore::PerformanceObserver,WebCore::JSPerformanceObserver>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *result;
  uint64_t v5;
  uint64_t v6;

  if ((byte_1EE3363C8 & 1) == 0)
  {
    qword_1EE3363C0 = (uint64_t)&off_1E33936C0;
    byte_1EE3363C8 = 1;
  }
  v3 = (uint64_t *)(a1 + 32);
  v6 = a2;
  JSC::Weak<JSC::JSObject>::Weak(&v5, a3, (uint64_t)&qword_1EE3363C0, a1);
  result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v3, &v6, &v5);
  if (v5)
    *(_QWORD *)(v5 + 8) = 3;
  return result;
}

unint64_t JSC::allocateCell<WebCore::JSPerformanceObserver>(WebCore::JSPerformanceObserver *a1, JSC::VM *a2)
{
  _QWORD *v2;
  unint64_t result;
  unint64_t v4;

  v2 = (_QWORD *)WebCore::JSPerformanceObserver::subspaceForImpl(a1, a2);
  result = v2[3];
  if (result >= v2[4])
  {
    result = v2[5];
    if ((result & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      result = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_3;
    }
    v4 = *(_QWORD *)(result + 8) ^ v2[6];
    v2[4] = result + HIDWORD(v4);
    v2[5] = result + (int)v4;
  }
  v2[3] = result + 32;
LABEL_3:
  *(_DWORD *)result = 0;
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSPerformanceObserverEntryList>(WebCore::JSPerformanceObserverEntryList *a1, JSC::JSCell **a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSPerformanceObserverEntryList::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSPerformanceObserverEntryList::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSPerformanceObserverEntryList::s_info);
  }
  return result;
}

uint64_t WebCore::JSPerformanceObserverEntryList::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 5952);
  *(_QWORD *)(a1 + 5952) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::JSPerformanceObserverEntryList::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSPerformanceObserverEntryList *v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;

  v5 = (WebCore::JSPerformanceObserverEntryList *)*((_QWORD *)a2 + 7);
  v6 = JSC::allocateCell<WebCore::JSPerformanceObserverEntryList>(v5, a2);
  result = WebCore::JSDOMObject::JSDOMObject(v6, a1);
  v8 = *a3;
  *a3 = 0;
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t *WebCore::cacheWrapper<WebCore::PerformanceObserverEntryList,WebCore::JSPerformanceObserverEntryList>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *result;
  uint64_t v5;
  uint64_t v6;

  if ((byte_1EE3363D8 & 1) == 0)
  {
    qword_1EE3363D0 = (uint64_t)&off_1E32C9250;
    byte_1EE3363D8 = 1;
  }
  v3 = (uint64_t *)(a1 + 32);
  v6 = a2;
  JSC::Weak<JSC::JSObject>::Weak(&v5, a3, (uint64_t)&qword_1EE3363D0, a1);
  result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v3, &v6, &v5);
  if (v5)
    *(_QWORD *)(v5 + 8) = 3;
  return result;
}

unint64_t JSC::allocateCell<WebCore::JSPerformanceObserverEntryList>(WebCore::JSPerformanceObserverEntryList *a1, JSC::VM *a2)
{
  _QWORD *v2;
  unint64_t result;
  unint64_t v4;

  v2 = (_QWORD *)WebCore::JSPerformanceObserverEntryList::subspaceForImpl(a1, a2);
  result = v2[3];
  if (result >= v2[4])
  {
    result = v2[5];
    if ((result & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      result = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_3;
    }
    v4 = *(_QWORD *)(result + 8) ^ v2[6];
    v2[4] = result + HIDWORD(v4);
    v2[5] = result + (int)v4;
  }
  v2[3] = result + 32;
LABEL_3:
  *(_DWORD *)result = 0;
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSPerformancePaintTiming>(WebCore::JSPerformancePaintTiming *a1, JSC::JSCell **a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSPerformancePaintTiming::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSPerformancePaintTiming::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSPerformancePaintTiming::s_info);
  }
  return result;
}

uint64_t WebCore::JSPerformancePaintTiming::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 5960);
  *(_QWORD *)(a1 + 5960) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSPerformanceResourceTiming>(WebCore::JSPerformanceResourceTiming *a1, JSC::JSCell **a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSPerformanceResourceTiming::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSPerformanceResourceTiming::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSPerformanceResourceTiming::s_info);
  }
  return result;
}

unint64_t WebCore::jsPerformanceResourceTiming_responseStartGetter(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSPerformanceResourceTiming *a3)
{
  double v3;
  uint64_t v4;

  WebCore::PerformanceResourceTiming::responseStart(this);
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

uint64_t WebCore::JSPerformanceServerTiming::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPerformanceTiming::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPeriodicWave::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPermissionStatus::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPermissions::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSPictureInPictureWindow::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

int64x2_t WebCore::LegacyWebArchive::createResourceResponseFromMacArchivedData@<Q0>(WebCore::LegacyWebArchive *this@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  const void *v5;
  char v6;
  int64x2_t result;
  char v8;

  if (this)
  {
    v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3710]), "initForReadingFromData:error:", this, 0);
    objc_msgSend(v4, "setDecodingFailurePolicy:", 0);
    v5 = (const void *)objc_msgSend(v4, "decodeObjectOfClass:forKey:", objc_opt_class(), CFSTR("WebResourceResponse"));
    objc_msgSend(v4, "finishDecoding");
    *(_QWORD *)a2 = 0;
    WTF::URL::invalidate((WTF::URL *)a2);
    *(_BYTE *)(a2 + 128) = 0;
    *(_WORD *)(a2 + 136) = 0;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 88) = 0u;
    *(_OWORD *)(a2 + 104) = 0u;
    *(_BYTE *)(a2 + 120) = 0;
    v6 = *(_BYTE *)(a2 + 138) & 0xCE | 1;
    *(_BYTE *)(a2 + 138) = v6;
    result = vdupq_n_s64(0x7FF8000000000000uLL);
    *(int64x2_t *)(a2 + 144) = result;
    *(int64x2_t *)(a2 + 160) = result;
    *(_QWORD *)(a2 + 176) = 0;
    *(_QWORD *)(a2 + 184) = 0;
    *(_QWORD *)(a2 + 192) = 0x8000000000000000;
    *(int64x2_t *)(a2 + 200) = result;
    *(_QWORD *)(a2 + 216) = 0x7FF8000000000000;
    *(_BYTE *)(a2 + 224) &= 0xF0u;
    *(_WORD *)(a2 + 232) &= 0xC000u;
    *(_BYTE *)(a2 + 234) = *(_BYTE *)(a2 + 234) & 0xF8 | 2;
    *(_QWORD *)(a2 + 240) = v5;
    if (v5)
    {
      CFRetain(v5);
      v6 = *(_BYTE *)(a2 + 138);
    }
    *(_BYTE *)(a2 + 248) = 0;
    *(_BYTE *)(a2 + 138) = v6 & 0xF0 | (v5 == 0);
    if (v4)
      CFRelease(v4);
  }
  else
  {
    *(_QWORD *)a2 = 0;
    WTF::URL::invalidate((WTF::URL *)a2);
    *(_BYTE *)(a2 + 128) = 0;
    *(_WORD *)(a2 + 136) = 0;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 88) = 0u;
    *(_OWORD *)(a2 + 104) = 0u;
    *(_BYTE *)(a2 + 120) = 0;
    v8 = *(_BYTE *)(a2 + 138);
    result = vdupq_n_s64(0x7FF8000000000000uLL);
    *(int64x2_t *)(a2 + 144) = result;
    *(int64x2_t *)(a2 + 160) = result;
    *(_QWORD *)(a2 + 176) = 0;
    *(_QWORD *)(a2 + 184) = 0;
    *(_QWORD *)(a2 + 192) = 0x8000000000000000;
    *(int64x2_t *)(a2 + 200) = result;
    *(_QWORD *)(a2 + 216) = 0x7FF8000000000000;
    *(_BYTE *)(a2 + 224) &= 0xF0u;
    *(_WORD *)(a2 + 232) &= 0xC000u;
    *(_BYTE *)(a2 + 234) = *(_BYTE *)(a2 + 234) & 0xF8 | 2;
    *(_QWORD *)(a2 + 240) = 0;
    *(_BYTE *)(a2 + 248) = 0;
    *(_BYTE *)(a2 + 138) = v8 & 0xC0 | 5;
  }
  return result;
}

void sub_194E0A5CC(_Unwind_Exception *a1, WTF::StringImpl *a2)
{
  WebCore::ResourceResponseBase *v2;
  const void *v3;

  WebCore::ResourceResponseBase::~ResourceResponseBase(v2, a2);
  if (v3)
    CFRelease(v3);
  _Unwind_Resume(a1);
}

void WebCore::LegacyWebArchive::createPropertyListRepresentation(WebCore::LegacyWebArchive *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  void *v6;
  const void *v7;

  v4 = *((_QWORD *)this + 30);
  if (v4
    || (*((_BYTE *)this + 138) & 1) == 0
    && (WebCore::ResourceResponse::initNSURLResponse(this), (v4 = *((_QWORD *)this + 30)) != 0))
  {
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB36F8]), "initRequiringSecureCoding:", 1);
    objc_msgSend(v6, "encodeObject:forKey:", v4, CFSTR("WebResourceResponse"));
    v7 = (const void *)objc_msgSend(v6, "encodedData");
    *a2 = v7;
    if (v7)
      CFRetain(v7);
    if (v6)
      CFRelease(v6);
  }
  else
  {
    *a2 = 0;
  }
}

void sub_194E0A6B4(_Unwind_Exception *exception_object)
{
  const void *v1;

  if (v1)
    CFRelease(v1);
  _Unwind_Resume(exception_object);
}

void ___ZN7WebCore16DiskCacheMonitorC2ERKNS_15ResourceRequestEN3PAL9SessionIDEPK20_CFCachedURLResponse_block_invoke_2(uint64_t a1)
{
  WebThreadRun(*(void (***)(_QWORD))(a1 + 32));
}

uint64_t ___ZN7WebCore16DiskCacheMonitorC2ERKNS_15ResourceRequestEN3PAL9SessionIDEPK20_CFCachedURLResponse_block_invoke_3(uint64_t result)
{
  uint64_t v1;
  WebCore::ResourceRequest *v2;
  void *v3;
  const void *MemMappedData;
  CFIndex v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t *v9;
  uint64_t isMainThread;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  WTF *v24;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int *v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  WTF *v37;
  unsigned int *v38;
  uint64_t v39[3];
  unsigned int **v40;

  v1 = *(_QWORD *)(*(_QWORD *)(result + 32) + 8);
  v2 = *(WebCore::ResourceRequest **)(v1 + 24);
  if (v2)
  {
    *(_QWORD *)(v1 + 24) = 0;
    MemMappedData = (const void *)_CFCachedURLResponseGetMemMappedData();
    if (MemMappedData)
    {
      v5 = WTF::fastMalloc((WTF *)0x38);
      *(_DWORD *)v5 = 1;
      *(_QWORD *)(v5 + 8) = v5 + 24;
      *(_QWORD *)(v5 + 16) = 1;
      *(_BYTE *)(v5 + 40) = 0;
      *(_QWORD *)(v5 + 48) = 0;
      WebCore::FragmentedSharedBuffer::append(v5, MemMappedData);
      v39[0] = v5;
      v6 = WTF::fastMalloc((WTF *)0x38);
      WebCore::SharedBuffer::SharedBuffer(v6, v39);
      WTF::Ref<WebCore::FragmentedSharedBuffer,WTF::RawPtrTraits<WebCore::FragmentedSharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::FragmentedSharedBuffer>>::~Ref(v39, v7);
      v39[0] = 0;
      v9 = WTF::Ref<WebCore::SharedBuffer,WTF::RawPtrTraits<WebCore::SharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::SharedBuffer>>::~Ref(v39, v8);
      isMainThread = WTF::isMainThread((WTF *)v9);
      if ((isMainThread & 1) == 0)
      {
        __break(0xC471u);
        JUMPOUT(0x194E0A870);
      }
      {
        isMainThread = (uint64_t)WebCore::MemoryCache::MemoryCache((WebCore::MemoryCache *)&WebCore::MemoryCache::singleton(void)::memoryCache);
      }
      v11 = *((_QWORD *)v2 + 25);
      if ((WTF::isMainThread((WTF *)isMainThread) & 1) == 0)
      {
        __break(0xC471u);
        JUMPOUT(0x194E0A890);
      }
      v12 = (uint64_t *)WebCore::MemoryCache::sessionResourceMap((WTF *)&WebCore::MemoryCache::singleton(void)::memoryCache, v11);
      if (!v12)
        goto LABEL_9;
      v14 = WebCore::MemoryCache::resourceForRequestImpl((int)v12, v2, v12);
      if (!v14)
        goto LABEL_9;
      v26 = v14;
      v27 = *(_QWORD *)(v14 + 8);
      if (v27)
        goto LABEL_52;
      v31 = v26;
      v27 = WTF::fastCompactMalloc((WTF *)0x10);
      *(_DWORD *)v27 = 1;
      *(_QWORD *)(v27 + 8) = v31;
      v32 = *(unsigned int **)(v31 + 8);
      *(_QWORD *)(v31 + 8) = v27;
      if (!v32)
        goto LABEL_52;
      do
      {
        v33 = __ldaxr(v32);
        v34 = v33 - 1;
      }
      while (__stlxr(v34, v32));
      if (!v34)
      {
        atomic_store(1u, v32);
        WTF::fastFree((WTF *)v32, v13);
      }
      v27 = *(_QWORD *)(v31 + 8);
      if (v27)
      {
LABEL_52:
        do
          v28 = __ldaxr((unsigned int *)v27);
        while (__stlxr(v28 + 1, (unsigned int *)v27));
        v38 = (unsigned int *)v27;
        v29 = *(_QWORD *)(v27 + 8);
        if (v29)
        {
          v40 = &v38;
          ++*(_DWORD *)(v29 + 548);
          v30 = *(_QWORD *)(v29 + 488);
          if (!v30
            || !*(_QWORD *)(v30 + 8)
            || (WTF::HashTable<WebCore::CachedResourceHandleBase *,WebCore::CachedResourceHandleBase *,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::CachedResourceHandleBase *>,WTF::HashTraits<WebCore::CachedResourceHandleBase *>,WTF::HashTraits<WebCore::CachedResourceHandleBase *>>::add((uint64_t *)(v29 + 464), (uint64_t *)&v40, (uint64_t)v39), v38)&& (v29 = *((_QWORD *)v38 + 1)) != 0)
          {
            WebCore::CachedResource::tryReplaceEncodedData((WebCore::CachedResource *)v29, (WebCore::SharedBuffer *)v6);
          }
        }
      }
      else
      {
LABEL_9:
        v38 = 0;
      }
      WebCore::CachedResourceHandleBase::~CachedResourceHandleBase(&v38, v13);
      do
      {
        v15 = __ldaxr((unsigned int *)v6);
        v16 = v15 - 1;
      }
      while (__stlxr(v16, (unsigned int *)v6));
      if (!v16)
      {
        atomic_store(1u, (unsigned int *)v6);
        v17 = *(unsigned int *)(v6 + 20);
        if ((_DWORD)v17)
        {
          v18 = *(_QWORD *)(v6 + 8);
          v19 = v18 + 16 * v17;
          do
          {
            v20 = *(unsigned int **)(v18 + 8);
            *(_QWORD *)(v18 + 8) = 0;
            if (v20)
            {
              do
              {
                v21 = __ldaxr(v20);
                v22 = v21 - 1;
              }
              while (__stlxr(v22, v20));
              if (!v22)
              {
                v35 = v18;
                v36 = v19;
                atomic_store(1u, v20);
                v37 = (WTF *)v20;
                v23 = v20[6];
                if ((_DWORD)v23 != -1)
                  ((void (*)(uint64_t *, unsigned int *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIhLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENS6_9RetainPtrIPK8__CFDataEENS6_14FileSystemImpl14MappedFileDataEN7WebCore11DataSegment8ProviderEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSN_EEEDcOSO_DpOT0____fmatrix_1[v23])(v39, v20 + 2);
                *((_DWORD *)v37 + 6) = -1;
                WTF::fastFree(v37, v3);
                v18 = v35;
                v19 = v36;
              }
            }
            v18 += 16;
          }
          while (v18 != v19);
        }
        v24 = *(WTF **)(v6 + 8);
        if ((WTF *)(v6 + 24) != v24 && v24 != 0)
        {
          *(_QWORD *)(v6 + 8) = 0;
          *(_DWORD *)(v6 + 16) = 0;
          WTF::fastFree(v24, v3);
        }
        WTF::fastFree((WTF *)v6, v3);
      }
    }
    WebCore::ResourceRequest::~ResourceRequest(v2, v3);
    return MEMORY[0x19AEA7644]();
  }
  return result;
}

void sub_194E0AA48(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  WebCore::ResourceRequest *v6;
  void *v8;
  va_list va;

  va_start(va, a6);
  WTF::Ref<WebCore::FragmentedSharedBuffer,WTF::RawPtrTraits<WebCore::FragmentedSharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::FragmentedSharedBuffer>>::~Ref((uint64_t *)va, a2);
  WebCore::ResourceRequest::~ResourceRequest(v6, v8);
  MEMORY[0x19AEA7644]();
  _Unwind_Resume(a1);
}

void ___ZN7WebCore16DiskCacheMonitorC2ERKNS_15ResourceRequestEN3PAL9SessionIDEPK20_CFCachedURLResponse_block_invoke_4(uint64_t a1, CFTypeRef cf)
{
  CFTypeRef v4;
  void (*v5[5])(_QWORD);
  CFTypeRef cfa;

  if (cf)
    CFRetain(cf);
  v5[0] = (void (*)(_QWORD))MEMORY[0x1E0C809B0];
  v5[1] = (void (*)(_QWORD))3321888768;
  v5[2] = (void (*)(_QWORD))___ZN7WebCore16DiskCacheMonitorC2ERKNS_15ResourceRequestEN3PAL9SessionIDEPK20_CFCachedURLResponse_block_invoke_5;
  v5[3] = (void (*)(_QWORD))&unk_1E32CDEC8;
  v5[4] = *(void (**)(_QWORD))(a1 + 32);
  cfa = cf;
  if (cf)
    CFRetain(cf);
  WebThreadRun(v5);
  v4 = cfa;
  cfa = 0;
  if (v4)
    CFRelease(v4);
  if (cf)
    CFRelease(cf);
}

void sub_194E0AB18(_Unwind_Exception *a1)
{
  const void *v1;

  CFRelease(v1);
  _Unwind_Resume(a1);
}

uint64_t ___ZN7WebCore16DiskCacheMonitorC2ERKNS_15ResourceRequestEN3PAL9SessionIDEPK20_CFCachedURLResponse_block_invoke_5(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

CFTypeRef __copy_helper_block_e8_40c46_ZTSN3WTF9RetainPtrIPK20_CFCachedURLResponseEE(uint64_t a1, uint64_t a2)
{
  CFTypeRef result;

  result = *(CFTypeRef *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = result;
  if (result)
    return CFRetain(result);
  return result;
}

void __destroy_helper_block_e8_40c46_ZTSN3WTF9RetainPtrIPK20_CFCachedURLResponseEE(uint64_t a1)
{
  const void *v2;

  v2 = *(const void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = 0;
  if (v2)
    CFRelease(v2);
}

void WebCore::PrivateClickMeasurement::calculateAndUpdateSourceUnlinkableToken(WebCore::PrivateClickMeasurement *this@<X0>, const WTF::String *a2@<X1>, uint64_t a3@<X8>)
{
  char *v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  uint64_t v9;

  v5 = (char *)this + 240;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v6 = (WTF::StringImpl *)v9;
  v8 = v9;
  WebCore::PrivateClickMeasurement::calculateAndUpdateUnlinkableToken(a3, *(_QWORD *)a2, (uint64_t)v5, &v8);
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, v7);
    else
      *(_DWORD *)v6 -= 2;
  }
}

void sub_194E0ABF0(_Unwind_Exception *exception_object, WTF::StringImpl *a2)
{
  WTF::StringImpl *v2;

  if (v2)
  {
    if (*(_DWORD *)v2 == 2)
      WTF::StringImpl::destroy(v2, a2);
    else
      *(_DWORD *)v2 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void WebCore::PrivateClickMeasurement::calculateAndUpdateUnlinkableToken(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  PAL *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  id v10;
  int v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  int v15;
  _BOOL4 v16;
  uint64_t v17;
  int v18;
  int v19;
  _BOOL4 v20;
  WTF::StringImpl *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  int v29;
  int v30;
  _BOOL4 v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  int v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  id v38;
  WTF::StringImpl *v39;
  int v40;
  unsigned int v41;
  char v42;
  id v43;

  WTF::base64Decode();
  if (!v42)
  {
    v12 = *a4;
    if (*a4)
    {
      v13 = *(_DWORD *)(v12 + 4);
      *(_DWORD *)v12 += 2;
      if (v13 < 0)
        goto LABEL_76;
    }
    else
    {
      v13 = 0;
    }
    v14 = __OFADD__(v13, 19);
    v15 = v13 + 19;
    if (!v14 && !__OFADD__(v15, 21))
    {
      v16 = !v12 || (*(_BYTE *)(v12 + 16) & 4) != 0;
      WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((v15 + 21), v16, (int8x16_t *)"Could not decode the ", 0x15u, v12, (int8x16_t *)"'s public key data.", 0x13u, &v43);
      if (v43)
      {
        *(_QWORD *)a1 = v43;
        v11 = 1;
        *(_BYTE *)(a1 + 8) = 1;
        if (v12)
        {
          if (*(_DWORD *)v12 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v12, v8);
          else
            *(_DWORD *)v12 -= 2;
        }
        goto LABEL_35;
      }
    }
LABEL_76:
    __break(0xC471u);
    goto LABEL_79;
  }
  v7 = (PAL *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytes:length:", v39, v41);
  v38 = 0;
  v9 = objc_msgSend(objc_alloc((Class)PAL::getRSABSSATokenBlinderClass(v7)), "initWithPublicKey:error:", v7, &v38);
  v10 = *(id *)a3;
  *(_QWORD *)a3 = v9;
  if (v10)
    CFRelease(v10);
  if (!v38)
  {
    if (*(_QWORD *)a3)
    {
      v11 = 0;
      if (v7)
        goto LABEL_71;
      goto LABEL_35;
    }
    v17 = *a4;
    if (*a4)
    {
      v18 = *(_DWORD *)(v17 + 4);
      *(_DWORD *)v17 += 2;
      if (v18 < 0)
        goto LABEL_77;
    }
    else
    {
      v18 = 0;
    }
    v14 = __OFADD__(v18, 26);
    v19 = v18 + 26;
    if (!v14 && !__OFADD__(v19, 14))
    {
      v20 = !v17 || (*(_BYTE *)(v17 + 16) & 4) != 0;
      WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((v19 + 14), v20, (int8x16_t *)"Did not get a ", 0xEu, v17, (int8x16_t *)" unlinkable token blinder.", 0x1Au, &v43);
      if (v43)
      {
        *(_QWORD *)a1 = v43;
        v11 = 1;
        *(_BYTE *)(a1 + 8) = 1;
        if (v17)
        {
          if (*(_DWORD *)v17 == 2)
          {
            WTF::StringImpl::destroy((WTF::StringImpl *)v17, v8);
            if (!v7)
              goto LABEL_35;
            goto LABEL_71;
          }
          *(_DWORD *)v17 -= 2;
        }
        if (!v7)
          goto LABEL_35;
LABEL_71:
        CFRelease(v7);
        goto LABEL_35;
      }
    }
LABEL_77:
    __break(0xC471u);
    JUMPOUT(0x194E0B048);
  }
  MEMORY[0x19AEA5508](a1, objc_msgSend(v38, "localizedDescription"));
  v11 = 1;
  *(_BYTE *)(a1 + 8) = 1;
  if (v7)
    goto LABEL_71;
LABEL_35:
  if (v42 && (v21 = v39) != 0)
  {
    v39 = 0;
    v40 = 0;
    WTF::fastFree(v21, v8);
    if (v11)
      return;
  }
  else if (v11)
  {
    return;
  }
  v43 = 0;
  v22 = (const void *)objc_msgSend(*(id *)a3, "tokenWaitingActivationWithContent:error:", 0, &v43);
  v23 = v22;
  if (v22)
    CFRetain(v22);
  v24 = *(const void **)(a3 + 8);
  *(_QWORD *)(a3 + 8) = v23;
  if (v24)
    CFRelease(v24);
  if (v43)
  {
    MEMORY[0x19AEA5508](a1, objc_msgSend(v43, "localizedDescription"));
    *(_BYTE *)(a1 + 8) = 1;
    return;
  }
  v25 = *(void **)(a3 + 8);
  if (v25)
  {
    v26 = (void *)objc_msgSend(v25, "blindedMessage");
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v26, "bytes");
      objc_msgSend(v27, "length");
    }
    WTF::base64EncodeToString();
    v33 = v39;
    v39 = 0;
    v34 = *(WTF::StringImpl **)(a3 + 24);
    *(_QWORD *)(a3 + 24) = v33;
    if (!v34)
      goto LABEL_59;
    v35 = *(_DWORD *)v34 - 2;
    if (*(_DWORD *)v34 == 2)
    {
      WTF::StringImpl::destroy(v34, v32);
      v34 = v39;
      v39 = 0;
      if (!v34)
        goto LABEL_59;
      v35 = *(_DWORD *)v34 - 2;
      if (*(_DWORD *)v34 == 2)
      {
        WTF::StringImpl::destroy(v34, v37);
        goto LABEL_59;
      }
    }
    *(_DWORD *)v34 = v35;
LABEL_59:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 8) = 0;
    return;
  }
  v28 = *a4;
  if (*a4)
  {
    v29 = *(_DWORD *)(v28 + 4);
    *(_DWORD *)v28 += 2;
    if (v29 < 0)
    {
LABEL_78:
      __break(0xC471u);
LABEL_79:
      JUMPOUT(0x194E0B040);
    }
  }
  else
  {
    v29 = 0;
  }
  v14 = __OFADD__(v29, 32);
  v30 = v29 + 32;
  if (v14 || __OFADD__(v30, 14))
    goto LABEL_78;
  v31 = !v28 || (*(_BYTE *)(v28 + 16) & 4) != 0;
  WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((v30 + 14), v31, (int8x16_t *)"Did not get a ", 0xEu, v28, (int8x16_t *)" unlinkable token waiting token.", 0x20u, &v39);
  if (!v39)
    goto LABEL_78;
  *(_QWORD *)a1 = v39;
  *(_BYTE *)(a1 + 8) = 1;
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v28, v36);
    else
      *(_DWORD *)v28 -= 2;
  }
}

void sub_194E0B054(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, WTF *a11, int a12, int a13, char a14)
{
  WTF::StringImpl *v14;

  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, a2);
    else
      *(_DWORD *)v14 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void WebCore::PrivateClickMeasurement::calculateAndUpdateDestinationUnlinkableToken(WebCore::PrivateClickMeasurement *this@<X0>, uint64_t a2@<X8>)
{
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  int v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  char v13;
  CFTypeRef v14[2];
  CFTypeRef cf[3];
  uint64_t v16;

  *(_OWORD *)v14 = 0u;
  *(_OWORD *)cf = 0u;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = (WTF::StringImpl *)v16;
  v11 = v16;
  WebCore::PrivateClickMeasurement::calculateAndUpdateUnlinkableToken((uint64_t)&v12, *(_QWORD *)this, (uint64_t)v14, &v11);
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v6);
    else
      *(_DWORD *)v5 -= 2;
  }
  if (v13)
  {
    v7 = v12;
    if (v12)
    {
      v8 = *(_DWORD *)v12;
      *(_DWORD *)v12 += 2;
      *(_QWORD *)a2 = v7;
      *(_DWORD *)(a2 + 32) = 1;
      v12 = 0;
      if (v8)
        *(_DWORD *)v7 = v8;
      else
        WTF::StringImpl::destroy(v7, v6);
    }
    else
    {
      *(_QWORD *)a2 = 0;
      *(_DWORD *)(a2 + 32) = 1;
    }
  }
  else
  {
    v9 = *(_OWORD *)v14;
    v10 = *(_OWORD *)cf;
    *(_OWORD *)v14 = 0u;
    *(_OWORD *)cf = 0u;
    *(_OWORD *)a2 = v9;
    *(_OWORD *)(a2 + 16) = v10;
    *(_DWORD *)(a2 + 32) = 0;
  }
  if (cf[1])
  {
    if (*(_DWORD *)cf[1] == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)cf[1], v6);
    else
      *(_DWORD *)cf[1] -= 2;
  }
  if (cf[0])
    CFRelease(cf[0]);
  if (v14[1])
    CFRelease(v14[1]);
  if (v14[0])
    CFRelease(v14[0]);
}

void sub_194E0B240(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, CFTypeRef a13, CFTypeRef a14, CFTypeRef cf, WTF::StringImpl *a16)
{
  WTF::StringImpl *v16;

  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, a2);
    else
      *(_DWORD *)v16 -= 2;
  }
  if (a16)
  {
    if (*(_DWORD *)a16 == 2)
      WTF::StringImpl::destroy(a16, a2);
    else
      *(_DWORD *)a16 -= 2;
  }
  if (cf)
    CFRelease(cf);
  if (a14)
    CFRelease(a14);
  if (a13)
    CFRelease(a13);
  _Unwind_Resume(exception_object);
}

WTF::StringImpl *WebCore::PrivateClickMeasurement::calculateAndUpdateSourceSecretToken@<X0>(WebCore::PrivateClickMeasurement *this@<X0>, const WTF::String *a2@<X1>, _BYTE *a3@<X8>)
{
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  __int128 v14;
  WTF::StringImpl *result;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18[2];
  uint64_t v19;

  v17 = 0;
  v18[0] = 0;
  v18[1] = 0;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v6 = (WTF::StringImpl *)v19;
  v16 = v19;
  WebCore::PrivateClickMeasurement::calculateAndUpdateSecretToken(a3, *(_QWORD *)a2, (uint64_t)this + 240, &v17, &v16);
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, v7);
    else
      *(_DWORD *)v6 -= 2;
  }
  if (a3[8])
  {
    if (v18[1])
    {
      if (*(_DWORD *)v18[1] == 2)
        WTF::StringImpl::destroy(v18[1], v7);
      else
        *(_DWORD *)v18[1] -= 2;
    }
  }
  else
  {
    v8 = *((unsigned __int8 *)this + 296);
    v9 = v17;
    v17 = 0;
    if (v8)
    {
      v10 = (WTF::StringImpl *)*((_QWORD *)this + 34);
      *((_QWORD *)this + 34) = v9;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v7);
        else
          *(_DWORD *)v10 -= 2;
      }
      v11 = v18[0];
      v18[0] = 0;
      v12 = (WTF::StringImpl *)*((_QWORD *)this + 35);
      *((_QWORD *)this + 35) = v11;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v7);
        else
          *(_DWORD *)v12 -= 2;
      }
      v13 = (WTF::StringImpl *)*((_QWORD *)this + 36);
      *((WTF::StringImpl **)this + 36) = v18[1];
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v7);
        else
          *(_DWORD *)v13 -= 2;
      }
    }
    else
    {
      *((_QWORD *)this + 34) = v9;
      v14 = *(_OWORD *)v18;
      v18[0] = 0;
      *(_OWORD *)((char *)this + 280) = v14;
      *((_BYTE *)this + 296) = 1;
    }
    *a3 = 0;
    a3[8] = 0;
  }
  if (v18[0])
  {
    if (*(_DWORD *)v18[0] == 2)
      WTF::StringImpl::destroy(v18[0], v7);
    else
      *(_DWORD *)v18[0] -= 2;
  }
  result = v17;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(v17, v7);
    else
      *(_DWORD *)v17 -= 2;
  }
  return result;
}

void sub_194E0B464(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, WTF::StringImpl *a11, WTF::StringImpl *a12, WTF::StringImpl *a13)
{
  WTF::StringImpl *v13;

  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, a2);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (a13)
  {
    if (*(_DWORD *)a13 == 2)
      WTF::StringImpl::destroy(a13, a2);
    else
      *(_DWORD *)a13 -= 2;
  }
  if (a12)
  {
    if (*(_DWORD *)a12 == 2)
      WTF::StringImpl::destroy(a12, a2);
    else
      *(_DWORD *)a12 -= 2;
  }
  if (a11)
  {
    if (*(_DWORD *)a11 == 2)
      WTF::StringImpl::destroy(a11, a2);
    else
      *(_DWORD *)a11 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void WebCore::PrivateClickMeasurement::calculateAndUpdateSecretToken(_BYTE *a1, uint64_t a2, uint64_t a3, WTF::StringImpl **a4, uint64_t *a5)
{
  const void *v9;
  const void *v10;
  void *v11;
  const void *v12;
  const void *v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  int v18;
  _BOOL4 v19;
  uint64_t v20;
  int v21;
  int v22;
  _BOOL4 v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  int v26;
  int v27;
  _BOOL4 v28;
  WTF::StringImpl *v29;
  void *v30;
  void *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  int v35;
  void *v36;
  void *v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  int v41;
  void *v42;
  void *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  int v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  id v51;
  WTF::StringImpl *v52;
  int v53;
  unsigned int v54;
  char v55;
  uint64_t v56;

  if (*(_QWORD *)(a3 + 8))
  {
    WTF::base64Decode();
    if (v55)
    {
      v9 = (const void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytes:length:", v52, v54);
      v51 = 0;
      v10 = (const void *)objc_msgSend(*(id *)(a3 + 8), "activateTokenWithServerResponse:error:", v9, &v51);
      v12 = v10;
      if (v10)
        CFRetain(v10);
      v13 = *(const void **)(a3 + 16);
      *(_QWORD *)(a3 + 16) = v12;
      if (v13)
        CFRelease(v13);
      if (v51)
      {
        MEMORY[0x19AEA5508](a1, objc_msgSend(v51, "localizedDescription"));
        v14 = 1;
        a1[8] = 1;
        if (v9)
          goto LABEL_84;
LABEL_50:
        if (v55 && (v29 = v52) != 0)
        {
          v52 = 0;
          v53 = 0;
          WTF::fastFree(v29, v11);
          if (v14)
            return;
        }
        else if (v14)
        {
          return;
        }
        v30 = (void *)objc_msgSend(*(id *)(a3 + 16), "tokenContent");
        if (v30)
        {
          v31 = v30;
          objc_msgSend(v30, "bytes");
          objc_msgSend(v31, "length");
        }
        WTF::base64EncodeToString();
        v33 = v52;
        v52 = 0;
        v34 = *a4;
        *a4 = v33;
        if (v34)
        {
          v35 = *(_DWORD *)v34 - 2;
          if (*(_DWORD *)v34 != 2)
          {
LABEL_59:
            *(_DWORD *)v34 = v35;
            goto LABEL_60;
          }
          WTF::StringImpl::destroy(v34, v32);
          v34 = v52;
          v52 = 0;
          if (v34)
          {
            v35 = *(_DWORD *)v34 - 2;
            if (*(_DWORD *)v34 != 2)
              goto LABEL_59;
            WTF::StringImpl::destroy(v34, v48);
          }
        }
LABEL_60:
        v36 = (void *)objc_msgSend(*(id *)(a3 + 16), "keyId");
        if (v36)
        {
          v37 = v36;
          objc_msgSend(v36, "bytes");
          objc_msgSend(v37, "length");
        }
        WTF::base64EncodeToString();
        v39 = v52;
        v52 = 0;
        v40 = a4[2];
        a4[2] = v39;
        if (v40)
        {
          v41 = *(_DWORD *)v40 - 2;
          if (*(_DWORD *)v40 != 2)
          {
LABEL_64:
            *(_DWORD *)v40 = v41;
            goto LABEL_65;
          }
          WTF::StringImpl::destroy(v40, v38);
          v40 = v52;
          v52 = 0;
          if (v40)
          {
            v41 = *(_DWORD *)v40 - 2;
            if (*(_DWORD *)v40 != 2)
              goto LABEL_64;
            WTF::StringImpl::destroy(v40, v49);
          }
        }
LABEL_65:
        v42 = (void *)objc_msgSend(*(id *)(a3 + 16), "signature");
        if (v42)
        {
          v43 = v42;
          objc_msgSend(v42, "bytes");
          objc_msgSend(v43, "length");
        }
        WTF::base64EncodeToString();
        v45 = v52;
        v52 = 0;
        v46 = a4[1];
        a4[1] = v45;
        if (!v46)
          goto LABEL_70;
        v47 = *(_DWORD *)v46 - 2;
        if (*(_DWORD *)v46 == 2)
        {
          WTF::StringImpl::destroy(v46, v44);
          v46 = v52;
          v52 = 0;
          if (!v46)
            goto LABEL_70;
          v47 = *(_DWORD *)v46 - 2;
          if (*(_DWORD *)v46 == 2)
          {
            WTF::StringImpl::destroy(v46, v50);
            goto LABEL_70;
          }
        }
        *(_DWORD *)v46 = v47;
LABEL_70:
        *a1 = 0;
        a1[8] = 0;
        return;
      }
      if (*(_QWORD *)(a3 + 16))
      {
        v14 = 0;
        if (v9)
          goto LABEL_84;
        goto LABEL_50;
      }
      v25 = *a5;
      if (v25)
      {
        v26 = *(_DWORD *)(v25 + 4);
        *(_DWORD *)v25 += 2;
        if (v26 < 0)
        {
LABEL_90:
          __break(0xC471u);
LABEL_91:
          JUMPOUT(0x194E0B9D8);
        }
      }
      else
      {
        v26 = 0;
      }
      v17 = __OFADD__(v26, 30);
      v27 = v26 + 30;
      if (!v17 && !__OFADD__(v27, 14))
      {
        v28 = !v25 || (*(_BYTE *)(v25 + 16) & 4) != 0;
        WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((v27 + 14), v28, (int8x16_t *)"Did not get a ", 0xEu, v25, (int8x16_t *)" unlinkable token ready token.", 0x1Eu, &v56);
        if (v56)
        {
          *(_QWORD *)a1 = v56;
          v14 = 1;
          a1[8] = 1;
          if (v25)
          {
            if (*(_DWORD *)v25 == 2)
            {
              WTF::StringImpl::destroy((WTF::StringImpl *)v25, (WTF::StringImpl *)v11);
              if (!v9)
                goto LABEL_50;
              goto LABEL_84;
            }
            *(_DWORD *)v25 -= 2;
          }
          if (!v9)
            goto LABEL_50;
LABEL_84:
          CFRelease(v9);
          goto LABEL_50;
        }
      }
      goto LABEL_90;
    }
    v20 = *a5;
    if (*a5)
    {
      v21 = *(_DWORD *)(v20 + 4);
      *(_DWORD *)v20 += 2;
      if (v21 < 0)
        goto LABEL_89;
    }
    else
    {
      v21 = 0;
    }
    v17 = __OFADD__(v21, 15);
    v22 = v21 + 15;
    if (!v17 && !__OFADD__(v22, 17))
    {
      v23 = !v20 || (*(_BYTE *)(v20 + 16) & 4) != 0;
      WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((v22 + 17), v23, (int8x16_t *)"Could not decode ", 0x11u, v20, (int8x16_t *)" response data.", 0xFu, &v56);
      if (v56)
      {
        *(_QWORD *)a1 = v56;
        v14 = 1;
        a1[8] = 1;
        if (v20)
        {
          if (*(_DWORD *)v20 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v20, (WTF::StringImpl *)v11);
          else
            *(_DWORD *)v20 -= 2;
        }
        goto LABEL_50;
      }
    }
LABEL_89:
    __break(0xC471u);
    JUMPOUT(0x194E0B9E0);
  }
  v15 = *a5;
  if (*a5)
  {
    v16 = *(_DWORD *)(v15 + 4);
    *(_DWORD *)v15 += 2;
    if (v16 < 0)
    {
LABEL_88:
      __break(0xC471u);
      goto LABEL_91;
    }
  }
  else
  {
    v16 = 0;
  }
  v17 = __OFADD__(v16, 32);
  v18 = v16 + 32;
  if (v17 || __OFADD__(v18, 15))
    goto LABEL_88;
  v19 = !v15 || (*(_BYTE *)(v15 + 16) & 4) != 0;
  WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((v18 + 15), v19, (int8x16_t *)"Did not find a ", 0xFu, v15, (int8x16_t *)" unlinkable token waiting token.", 0x20u, &v52);
  if (!v52)
    goto LABEL_88;
  *(_QWORD *)a1 = v52;
  a1[8] = 1;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v15, v24);
    else
      *(_DWORD *)v15 -= 2;
  }
}

void sub_194E0B9EC(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, WTF *a11, int a12, int a13, char a14)
{
  const void *v14;
  WTF::StringImpl *v15;

  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, a2);
    else
      *(_DWORD *)v15 -= 2;
  }
  if (v14)
    CFRelease(v14);
  if (a14)
  {
    if (a11)
      WTF::fastFree(a11, a2);
  }
  _Unwind_Resume(exception_object);
}

WTF::StringImpl *WebCore::PrivateClickMeasurement::calculateAndUpdateDestinationSecretToken@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  int v9;
  __int128 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *result;
  uint64_t v13;
  WTF::StringImpl *v14;
  char v15;
  WTF::StringImpl *v16[2];
  WTF::StringImpl *v17;
  uint64_t v18;

  v16[0] = 0;
  v16[1] = 0;
  v17 = 0;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v6 = (WTF::StringImpl *)v18;
  v13 = v18;
  WebCore::PrivateClickMeasurement::calculateAndUpdateSecretToken(&v14, *a1, a2, v16, &v13);
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, v7);
    else
      *(_DWORD *)v6 -= 2;
  }
  if (v15)
  {
    v8 = v14;
    if (v14)
    {
      v9 = *(_DWORD *)v14;
      *(_DWORD *)v14 += 2;
      *(_QWORD *)a3 = v8;
      *(_DWORD *)(a3 + 24) = 1;
      v14 = 0;
      if (v9)
        *(_DWORD *)v8 = v9;
      else
        WTF::StringImpl::destroy(v8, v7);
    }
    else
    {
      *(_QWORD *)a3 = 0;
      *(_DWORD *)(a3 + 24) = 1;
    }
  }
  else
  {
    v10 = *(_OWORD *)v16;
    v16[0] = 0;
    v16[1] = 0;
    *(_OWORD *)a3 = v10;
    v11 = v17;
    v17 = 0;
    *(_QWORD *)(a3 + 16) = v11;
    *(_DWORD *)(a3 + 24) = 0;
  }
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v7);
    else
      *(_DWORD *)v17 -= 2;
  }
  if (v16[1])
  {
    if (*(_DWORD *)v16[1] == 2)
      WTF::StringImpl::destroy(v16[1], v7);
    else
      *(_DWORD *)v16[1] -= 2;
  }
  result = v16[0];
  if (v16[0])
  {
    if (*(_DWORD *)v16[0] == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(v16[0], v7);
    else
      *(_DWORD *)v16[0] -= 2;
  }
  return result;
}

void sub_194E0BC00(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, WTF::StringImpl *a13, WTF::StringImpl *a14, WTF::StringImpl *a15)
{
  WTF::StringImpl *v15;

  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, a2);
    else
      *(_DWORD *)v15 -= 2;
  }
  if (a15)
  {
    if (*(_DWORD *)a15 == 2)
      WTF::StringImpl::destroy(a15, a2);
    else
      *(_DWORD *)a15 -= 2;
  }
  if (a14)
  {
    if (*(_DWORD *)a14 == 2)
      WTF::StringImpl::destroy(a14, a2);
    else
      *(_DWORD *)a14 -= 2;
  }
  if (a13)
  {
    if (*(_DWORD *)a13 == 2)
      WTF::StringImpl::destroy(a13, a2);
    else
      *(_DWORD *)a13 -= 2;
  }
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::SubresourceLoader::willCacheResponseAsync(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  uint64_t v7;
  WebCore::ResourceRequest *v8;
  uint64_t v9;
  dispatch_time_t v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  char v14;
  WTF::StringImpl *v15;
  char v16;
  CFTypeRef v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD v21[5];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;
  char v28;
  __int16 v29;
  char v30;
  int64x2_t v31;
  int64x2_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int64x2_t v36;
  uint64_t v37;
  char v38;
  __int16 v39;
  char v40;
  CFTypeRef cf;
  char v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, CFTypeRef);
  void *v46;
  _QWORD *v47;
  _QWORD v48[5];
  _QWORD block[5];
  _QWORD v50[4];

  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 1328) + 8) + 416);
  if (objc_msgSend(a3, "_CFCachedURLResponse"))
  {
    v8 = (WebCore::ResourceRequest *)operator new();
    WebCore::ResourceRequest::ResourceRequest(v8, (const WebCore::ResourceRequest *)(a1 + 336));
    *((_QWORD *)v8 + 25) = v7;
    v50[0] = 0;
    v50[1] = v50;
    v50[2] = 0x2020000000;
    v50[3] = v8;
    v9 = MEMORY[0x1E0C809B0];
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 3221225472;
    v21[2] = ___ZN7WebCore16DiskCacheMonitorC2ERKNS_15ResourceRequestEN3PAL9SessionIDEPK20_CFCachedURLResponse_block_invoke;
    v21[3] = &unk_1E3204818;
    v21[4] = v50;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___ZN7WebCore16DiskCacheMonitorC2ERKNS_15ResourceRequestEN3PAL9SessionIDEPK20_CFCachedURLResponse_block_invoke_2;
    block[3] = &unk_1E32CDE78;
    block[4] = v21;
    v10 = dispatch_time(0, 20000000000);
    dispatch_after(v10, MEMORY[0x1E0C80D38], block);
    v48[1] = 3221225472;
    v48[2] = ___ZN7WebCore16DiskCacheMonitorC2ERKNS_15ResourceRequestEN3PAL9SessionIDEPK20_CFCachedURLResponse_block_invoke_3;
    v48[3] = &unk_1E32CDEA0;
    v48[4] = v50;
    v43 = v9;
    v44 = 3221225472;
    v45 = ___ZN7WebCore16DiskCacheMonitorC2ERKNS_15ResourceRequestEN3PAL9SessionIDEPK20_CFCachedURLResponse_block_invoke_4;
    v46 = &unk_1E32CDF00;
    v47 = v48;
    v48[0] = v9;
    _CFCachedURLResponseSetBecameFileBackedCallBackBlock();
    _Block_object_dispose(v50, 8);
  }
  v11 = *(_QWORD *)(a1 + 1328);
  if (v11)
    v12 = *(_QWORD *)(v11 + 8);
  else
    v12 = 0;
  v13 = (const void *)objc_msgSend(a3, "response");
  v21[0] = 0;
  WTF::URL::invalidate((WTF::URL *)v21);
  v28 = 0;
  v29 = 0;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0;
  v14 = v30 & 0xCE | 1;
  v30 = v14;
  v31 = vdupq_n_s64(0x7FF8000000000000uLL);
  v32 = v31;
  v33 = 0;
  v34 = 0;
  v35 = 0x8000000000000000;
  v36 = v31;
  v37 = 0x7FF8000000000000;
  v38 &= 0xF0u;
  v39 &= 0xC000u;
  v40 = v40 & 0xF8 | 2;
  cf = v13;
  if (v13)
  {
    CFRetain(v13);
    v14 = v30;
  }
  v42 = 0;
  v30 = v14 & 0xF0 | (v13 == 0);
  v16 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v12 + 136))(v12, v21);
  v17 = cf;
  cf = 0;
  if (v17)
    CFRelease(v17);
  WebCore::ResourceResponseBase::~ResourceResponseBase((WebCore::ResourceResponseBase *)v21, v15);
  if ((v16 & 1) != 0)
    return WebCore::ResourceLoader::willCacheResponseAsync(a1, v18, (uint64_t)a3, a4);
  v20 = *a4;
  *a4 = 0;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v20 + 16))(v20, 0);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
}

void sub_194E0BF6C(_Unwind_Exception *a1, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,CFTypeRef cf)
{
  WebCore::ResourceResponseBase::~ResourceResponseBase((WebCore::ResourceResponseBase *)&a10, a2);
  _Unwind_Resume(a1);
}

uint64_t WebCore::ResourceLoader::willCacheResponseAsync(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t result;
  uint64_t v9;

  if ((*(_BYTE *)(a1 + 1090) & 1) != 0)
  {
    v9 = *a4;
    *a4 = 0;
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v9 + 16))(v9, 0);
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4)
    {
      v5 = *(_QWORD *)(v4 + 280);
      if (v5)
        ++*(_DWORD *)v5;
    }
    else
    {
      v5 = 0;
    }
    v6 = *(_QWORD *)(v5 + 16);
    v7 = *(_DWORD **)(a1 + 40);
    if (v7)
      ++v7[6];
    result = (*(uint64_t (**)(uint64_t, _DWORD *, _QWORD, uint64_t, uint64_t *))(*(_QWORD *)v6 + 936))(v6, v7, *(_QWORD *)(a1 + 744), a3, a4);
    if (v7)
    {
      if (v7[6] == 1)
        result = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v7 + 24))(v7);
      else
        --v7[6];
    }
    if (!*(_DWORD *)v5)
    {
      __break(0xC471u);
      JUMPOUT(0x194E0C0F8);
    }
    --*(_DWORD *)v5;
  }
  return result;
}

void sub_194E0C104(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

BOOL WebCore::LegacyPreviewLoader::didReceiveData(WebCore::LegacyPreviewLoader *this, const WebCore::SharedBuffer *a2)
{
  int v2;
  void *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _DWORD *v12;
  WTF *v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;

  v2 = *((unsigned __int8 *)this + 64);
  if (!*((_BYTE *)this + 64))
  {
    WebCore::SharedBufferBuilder::ensureBuffer((uint64_t *)this + 6);
    WebCore::FragmentedSharedBuffer::append(*((WebCore::FragmentedSharedBuffer **)this + 6), a2);
    v6 = *((_QWORD *)this + 4);
    if (v6)
    {
      v7 = *(_DWORD *)(v6 + 16);
      *(_DWORD *)(v6 + 16) = v7 + 1;
      if (!*(_BYTE *)(v6 + 408) && !*(_BYTE *)(v6 + 368))
      {
        v8 = *(_QWORD *)(v6 + 400);
        if (v8 && (v9 = *(_QWORD *)(v8 + 8)) != 0)
        {
          *(_DWORD *)(v6 + 16) = v7 + 2;
          v10 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
          *v10 = &off_1E3405C88;
          v10[1] = v6;
          v10[2] = v6;
          v19 = v10;
          (*(void (**)(uint64_t, uint64_t, _QWORD **))(*(_QWORD *)v9 + 16))(v9, v6, &v19);
          v11 = v19;
          v19 = 0;
          if (v11)
            (*(void (**)(_QWORD *))(*v11 + 8))(v11);
        }
        else
        {
          WebCore::PreviewConverter::didFailUpdating((unsigned int *)v6, v5);
        }
      }
      if (*(_DWORD *)(v6 + 16) == 1)
      {
        WebCore::PreviewConverter::~PreviewConverter((WebCore::PreviewConverter *)v6, v5);
        WTF::fastFree(v14, v15);
      }
      else
      {
        --*(_DWORD *)(v6 + 16);
      }
    }
    else if (!MEMORY[0x198] && !MEMORY[0x170])
    {
      if (MEMORY[0x190] && (v16 = *(_QWORD *)(MEMORY[0x190] + 8)) != 0)
      {
        ++MEMORY[0x10];
        v17 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
        v17[1] = 0;
        v17[2] = 0;
        *v17 = &off_1E3405C88;
        v19 = v17;
        (*(void (**)(uint64_t, _QWORD, _QWORD **))(*(_QWORD *)v16 + 16))(v16, 0, &v19);
        v18 = v19;
        v19 = 0;
        if (v18)
          (*(void (**)(_QWORD *))(*v18 + 8))(v18);
      }
      else
      {
        WebCore::PreviewConverter::didFailUpdating(0, v5);
      }
    }
    v12 = (_DWORD *)*((_QWORD *)this + 5);
    ++v12[2];
    (*(void (**)(_DWORD *, const WebCore::SharedBuffer *))(*(_QWORD *)v12 + 16))(v12, a2);
    if (v12[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v12 + 8))(v12);
    else
      --v12[2];
  }
  return v2 == 0;
}

void sub_194E0C370(_Unwind_Exception *exception_object)
{
  _DWORD *v1;

  if (v1[2] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v1 + 8))(v1);
  else
    --v1[2];
  _Unwind_Resume(exception_object);
}

BOOL WebCore::LegacyPreviewLoader::didFinishLoading(WebCore::LegacyPreviewLoader *this)
{
  int v1;
  unsigned int *v3;
  void *v4;
  _DWORD *v5;
  WTF *v7;
  void *v8;

  v1 = *((unsigned __int8 *)this + 64);
  if (!*((_BYTE *)this + 64))
  {
    *((_BYTE *)this + 64) = 1;
    v3 = (unsigned int *)*((_QWORD *)this + 4);
    if (v3)
      ++v3[4];
    WebCore::PreviewConverter::finishUpdating(v3);
    if (v3)
    {
      if (v3[4] == 1)
      {
        WebCore::PreviewConverter::~PreviewConverter((WebCore::PreviewConverter *)v3, v4);
        WTF::fastFree(v7, v8);
      }
      else
      {
        --v3[4];
      }
    }
    v5 = (_DWORD *)*((_QWORD *)this + 5);
    ++v5[2];
    (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 24))(v5);
    if (v5[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[2];
  }
  return v1 == 0;
}

void sub_194E0C460(_Unwind_Exception *exception_object)
{
  _DWORD *v1;

  if (v1[2] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v1 + 8))(v1);
  else
    --v1[2];
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::LegacyPreviewLoader::didFail(uint64_t this, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  _DWORD *v5;
  void *v6;
  WTF *v7;
  void *v8;
  WTF *v9;
  void *v10;

  if (!*(_BYTE *)(this + 64))
  {
    v2 = this;
    *(_BYTE *)(this + 64) = 1;
    v3 = *(_QWORD *)(this + 32);
    if (v3)
    {
      v4 = *(_DWORD *)(v3 + 16);
      *(_DWORD *)(v3 + 16) = v4 + 1;
      if (!*(_BYTE *)(v3 + 408) && !*(_BYTE *)(v3 + 368))
      {
        *(_BYTE *)(v3 + 368) = 1;
        objc_msgSend(*(id *)(v3 + 432), "finishConverting");
        v4 = *(_DWORD *)(v3 + 16) - 1;
      }
      if (v4)
      {
        *(_DWORD *)(v3 + 16) = v4;
      }
      else
      {
        WebCore::PreviewConverter::~PreviewConverter((WebCore::PreviewConverter *)v3, a2);
        WTF::fastFree(v7, v8);
      }
    }
    else if (!MEMORY[0x198] && !MEMORY[0x170])
    {
      MEMORY[0x170] = 1;
      objc_msgSend(MEMORY[0x1B0], "finishConverting");
    }
    v5 = *(_DWORD **)(v2 + 40);
    ++v5[2];
    (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 32))(v5);
    if (v5[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[2];
    this = *(_QWORD *)(v2 + 32);
    *(_QWORD *)(v2 + 32) = 0;
    if (this)
    {
      if (*(_DWORD *)(this + 16) == 1)
      {
        WebCore::PreviewConverter::~PreviewConverter((WebCore::PreviewConverter *)this, v6);
        return WTF::fastFree(v9, v10);
      }
      else
      {
        --*(_DWORD *)(this + 16);
      }
    }
  }
  return this;
}

void sub_194E0C5E0(_Unwind_Exception *exception_object)
{
  _DWORD *v1;

  if (v1[2] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v1 + 8))(v1);
  else
    --v1[2];
  _Unwind_Resume(exception_object);
}

void WebCore::LegacyPreviewLoader::previewConverterDidStartConverting(WebCore::LegacyPreviewLoader *this, WebCore::PreviewConverter *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  WebCore::PreviewConverter *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  void *v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  _QWORD *v18;
  _QWORD *v19;
  CFTypeRef v20;
  WTF *v21;
  void *v22;
  _QWORD *v23;
  _BYTE v24[240];
  CFTypeRef cf;
  char v26;

  v2 = *((_QWORD *)this + 7);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 8);
    if (v3)
    {
      v4 = *(_DWORD *)(v3 + 16);
      *(_DWORD *)(v3 + 16) = v4 + 1;
      if (!*(_BYTE *)(v3 + 752))
      {
        WebCore::SharedBufferBuilder::reset((WebCore::LegacyPreviewLoader *)((char *)this + 48), a2);
        v8 = *(_QWORD *)(v3 + 40);
        if (v8)
          ++*(_DWORD *)(v8 + 24);
        v9 = *((_QWORD *)this + 4);
        *((_QWORD *)this + 4) = 0;
        v10 = *(WebCore::PreviewConverter **)(v8 + 3328);
        *(_QWORD *)(v8 + 3328) = v9;
        if (v10)
        {
          if (*((_DWORD *)v10 + 4) == 1)
          {
            WebCore::PreviewConverter::~PreviewConverter(v10, v7);
            WTF::fastFree(v21, v22);
          }
          else
          {
            --*((_DWORD *)v10 + 4);
          }
        }
        if (*(_DWORD *)(v8 + 24) == 1)
          (*(void (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8);
        else
          --*(_DWORD *)(v8 + 24);
        WebCore::PreviewConverter::platformPreviewResponse((id *)a2, (uint64_t)v24);
        v26 = 1;
        if (*((_BYTE *)this + 67))
        {
          *((_BYTE *)this + 65) = 1;
          (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v3 + 272))(v3, v24);
        }
        else
        {
          v12 = *((_QWORD *)this + 1);
          if (v12)
            goto LABEL_33;
          v12 = WTF::fastCompactMalloc((WTF *)0x10);
          *(_DWORD *)v12 = 1;
          *(_QWORD *)(v12 + 8) = this;
          v14 = (unsigned int *)*((_QWORD *)this + 1);
          *((_QWORD *)this + 1) = v12;
          if (!v14)
            goto LABEL_33;
          do
          {
            v15 = __ldaxr(v14);
            v16 = v15 - 1;
          }
          while (__stlxr(v16, v14));
          if (!v16)
          {
            atomic_store(1u, v14);
            WTF::fastFree((WTF *)v14, v13);
          }
          v12 = *((_QWORD *)this + 1);
          if (v12)
          {
LABEL_33:
            do
              v17 = __ldaxr((unsigned int *)v12);
            while (__stlxr(v17 + 1, (unsigned int *)v12));
          }
          ++*((_DWORD *)a2 + 4);
          v18 = (_QWORD *)WTF::fastMalloc((WTF *)0x20);
          *v18 = &off_1E32CE030;
          v18[1] = this;
          v18[2] = v12;
          v18[3] = a2;
          v23 = v18;
          (*(void (**)(uint64_t, _BYTE *, _QWORD **))(*(_QWORD *)v3 + 208))(v3, v24, &v23);
          v19 = v23;
          v23 = 0;
          if (v19)
            (*(void (**)(_QWORD *))(*v19 + 8))(v19);
        }
        v20 = cf;
        cf = 0;
        if (v20)
          CFRelease(v20);
        WebCore::ResourceResponseBase::~ResourceResponseBase((WebCore::ResourceResponseBase *)v24, v11);
        v4 = *(_DWORD *)(v3 + 16) - 1;
      }
      if (v4)
        *(_DWORD *)(v3 + 16) = v4;
      else
        (*(void (**)(uint64_t, WebCore::PreviewConverter *))(*(_QWORD *)v3 + 8))(v3, a2);
    }
  }
}

void sub_194E0C814(_Unwind_Exception *a1, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,CFTypeRef cf)
{
  _DWORD *v41;
  CFTypeRef v43;

  v43 = cf;
  cf = 0;
  if (v43)
    CFRelease(v43);
  WebCore::ResourceResponseBase::~ResourceResponseBase((WebCore::ResourceResponseBase *)&a11, a2);
  if (v41[4] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v41 + 8))(v41);
  else
    --v41[4];
  _Unwind_Resume(a1);
}

uint64_t WebCore::LegacyPreviewLoader::previewConverterDidReceiveData(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;

  v3 = *(_QWORD *)(result + 56);
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 8);
    if (v4)
    {
      v5 = *(_DWORD *)(v4 + 16);
      *(_DWORD *)(v4 + 16) = v5 + 1;
      if (!*(_BYTE *)(v4 + 752) && *(_QWORD *)(a3 + 48) && *(_BYTE *)(result + 65))
      {
        result = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)v4 + 224))(v4, a3, *(_QWORD *)(a3 + 48), 1);
        v5 = *(_DWORD *)(v4 + 16) - 1;
      }
      if (v5)
        *(_DWORD *)(v4 + 16) = v5;
      else
        return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    }
  }
  return result;
}

void sub_194E0C974(_Unwind_Exception *exception_object)
{
  _DWORD *v1;

  if (v1[4] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v1 + 8))(v1);
  else
    --v1[4];
  _Unwind_Resume(exception_object);
}

WTF::StringImpl *WebCore::LegacyPreviewLoader::previewConverterDidFinishConverting(WTF::StringImpl *this, WebCore::PreviewConverter *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  _DWORD *v5;
  _OWORD v6[5];
  WTF::StringImpl *v7[2];
  int v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;

  v2 = *((_QWORD *)this + 7);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 8);
    if (v3)
    {
      v4 = *(_DWORD *)(v3 + 16);
      *(_DWORD *)(v3 + 16) = v4 + 1;
      if (!*(_BYTE *)(v3 + 752))
      {
        if (!*((_BYTE *)this + 65))
        {
          *((_BYTE *)this + 66) = 1;
          if (v4)
            goto LABEL_12;
          return (WTF::StringImpl *)(*(uint64_t (**)(uint64_t, WebCore::PreviewConverter *))(*(_QWORD *)v3 + 8))(v3, a2);
        }
        v8 = 0;
        *(_OWORD *)v7 = 0u;
        memset(v6, 0, sizeof(v6));
        v9 = -1;
        v10 = -1;
        v11 = 0;
        (*(void (**)(uint64_t, _OWORD *))(*(_QWORD *)v3 + 232))(v3, v6);
        v5 = v11;
        v11 = 0;
        if (v5)
          WTF::RefCounted<WebCore::AdditionalNetworkLoadMetricsForWebInspector>::deref(v5, a2);
        this = v7[1];
        v7[1] = 0;
        if (this)
        {
          if (*(_DWORD *)this == 2)
            this = (WTF::StringImpl *)WTF::StringImpl::destroy(this, a2);
          else
            *(_DWORD *)this -= 2;
        }
        v4 = *(_DWORD *)(v3 + 16) - 1;
      }
      if (v4)
      {
LABEL_12:
        *(_DWORD *)(v3 + 16) = v4;
        return this;
      }
      return (WTF::StringImpl *)(*(uint64_t (**)(uint64_t, WebCore::PreviewConverter *))(*(_QWORD *)v3 + 8))(v3, a2);
    }
  }
  return this;
}

void sub_194E0CA88(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, WTF::StringImpl *a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24)
{
  _DWORD *v24;

  if (a24)
    WTF::RefCounted<WebCore::AdditionalNetworkLoadMetricsForWebInspector>::deref(a24, a2);
  if (a20)
  {
    if (*(_DWORD *)a20 == 2)
      WTF::StringImpl::destroy(a20, a2);
    else
      *(_DWORD *)a20 -= 2;
  }
  if (v24[4] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v24 + 8))(v24);
  else
    --v24[4];
  _Unwind_Resume(exception_object);
}

WTF::StringImpl *WebCore::LegacyPreviewLoader::previewConverterDidFailUpdating(WTF::StringImpl *this, WebCore::PreviewConverter *a2)
{
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  CFTypeRef v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  CFTypeRef cf;

  v2 = *((_QWORD *)this + 7);
  if (v2)
  {
    v3 = *(_DWORD **)(v2 + 8);
    if (v3)
    {
      ++v3[4];
      v4 = *((_QWORD *)v3 + 4);
      if (v4)
      {
        v5 = *(_QWORD *)(v4 + 280);
        if (v5)
          ++*(_DWORD *)v5;
      }
      else
      {
        v5 = 0;
      }
      (*(void (**)(WTF::StringImpl **__return_ptr, _QWORD, _DWORD *))(**(_QWORD **)(v5 + 16) + 592))(&v10, *(_QWORD *)(v5 + 16), v3 + 84);
      if (!*(_DWORD *)v5)
      {
        __break(0xC471u);
        JUMPOUT(0x194E0CC38);
      }
      --*(_DWORD *)v5;
      (*(void (**)(_DWORD *, WTF::StringImpl **))(*(_QWORD *)v3 + 240))(v3, &v10);
      v7 = cf;
      cf = 0;
      if (v7)
        CFRelease(v7);
      v8 = v12;
      v12 = 0;
      if (v8)
      {
        if (*(_DWORD *)v8 == 2)
          WTF::StringImpl::destroy(v8, v6);
        else
          *(_DWORD *)v8 -= 2;
      }
      v9 = v11;
      v11 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v6);
        else
          *(_DWORD *)v9 -= 2;
      }
      this = v10;
      v10 = 0;
      if (this)
      {
        if (*(_DWORD *)this == 2)
          this = (WTF::StringImpl *)WTF::StringImpl::destroy(this, v6);
        else
          *(_DWORD *)this -= 2;
      }
      if (v3[4] == 1)
        return (WTF::StringImpl *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
      else
        --v3[4];
    }
  }
  return this;
}

void sub_194E0CC4C(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF::StringImpl *a9, WTF::StringImpl *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, WTF::StringImpl *a15, uint64_t a16, CFTypeRef cf)
{
  _DWORD *v17;

  if (cf)
    CFRelease(cf);
  if (a15)
  {
    if (*(_DWORD *)a15 == 2)
      WTF::StringImpl::destroy(a15, a2);
    else
      *(_DWORD *)a15 -= 2;
  }
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  if (a9)
  {
    if (*(_DWORD *)a9 == 2)
      WTF::StringImpl::destroy(a9, a2);
    else
      *(_DWORD *)a9 -= 2;
  }
  if (v17[4] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v17 + 8))(v17);
  else
    --v17[4];
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::LegacyPreviewLoader::previewConverterDidFailConverting(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = *(_QWORD *)(result + 56);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 8);
    if (v3)
    {
      v4 = *(_DWORD *)(v3 + 16);
      *(_DWORD *)(v3 + 16) = v4 + 1;
      if (!*(_BYTE *)(v3 + 752))
      {
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 240))(v3, a2 + 32);
        v4 = *(_DWORD *)(v3 + 16) - 1;
      }
      if (v4)
        *(_DWORD *)(v3 + 16) = v4;
      else
        return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    }
  }
  return result;
}

void sub_194E0CD74(_Unwind_Exception *exception_object)
{
  _DWORD *v1;

  if (v1[4] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v1 + 8))(v1);
  else
    --v1[4];
  _Unwind_Resume(exception_object);
}

WTF::StringImpl *WebCore::LegacyPreviewLoader::providePasswordForPreviewConverter(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;
  _DWORD *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  v4 = *(_QWORD *)(a1 + 56);
  if (v4 && (v5 = *(_QWORD *)(v4 + 8)) != 0)
  {
    ++*(_DWORD *)(v5 + 16);
    if (*(_BYTE *)(v5 + 752))
    {
      v11 = 0;
      (*(void (**)(_QWORD, WTF::StringImpl **))(*(_QWORD *)*a3 + 16))(*a3, &v11);
      result = v11;
      v11 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
        else
          *(_DWORD *)result -= 2;
      }
    }
    else
    {
      v9 = *(_DWORD **)(a1 + 40);
      ++v9[2];
      if (((*(uint64_t (**)(_DWORD *))(*(_QWORD *)v9 + 40))(v9) & 1) != 0)
      {
        result = (WTF::StringImpl *)(*(uint64_t (**)(_DWORD *, _QWORD *))(*(_QWORD *)v9 + 48))(v9, a3);
      }
      else
      {
        v11 = 0;
        (*(void (**)(_QWORD, WTF::StringImpl **))(*(_QWORD *)*a3 + 16))(*a3, &v11);
        result = v11;
        v11 = 0;
        if (result)
        {
          if (*(_DWORD *)result == 2)
            result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v10);
          else
            *(_DWORD *)result -= 2;
        }
      }
      if (v9[2] == 1)
        result = (WTF::StringImpl *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v9 + 8))(v9);
      else
        --v9[2];
    }
    if (*(_DWORD *)(v5 + 16) == 1)
      return (WTF::StringImpl *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    else
      --*(_DWORD *)(v5 + 16);
  }
  else
  {
    v11 = 0;
    (*(void (**)(_QWORD, WTF::StringImpl **))(*(_QWORD *)*a3 + 16))(*a3, &v11);
    result = v11;
    v11 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v8);
      else
        *(_DWORD *)result -= 2;
    }
  }
  return result;
}

void sub_194E0CF34(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  _DWORD *v10;
  _DWORD *v11;

  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  if (v11[2] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v11 + 8))(v11);
  else
    --v11[2];
  if (v10[4] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v10 + 8))(v10);
  else
    --v10[4];
  _Unwind_Resume(exception_object);
}

WTF::StringImpl *`non-virtual thunk to'WebCore::LegacyPreviewLoader::providePasswordForPreviewConverter(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return WebCore::LegacyPreviewLoader::providePasswordForPreviewConverter(a1 - 16, a2, a3);
}

uint64_t *WebCore::LegacyPreviewLoader::provideMainResourceForPreviewConverter(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  WebCore::FragmentedSharedBuffer *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;

  v4 = *(WebCore::FragmentedSharedBuffer **)(a1 + 48);
  if (v4)
  {
    WebCore::FragmentedSharedBuffer::copy(v4, &v9);
  }
  else
  {
    v5 = WTF::fastMalloc((WTF *)0x38);
    *(_DWORD *)v5 = 1;
    *(_QWORD *)(v5 + 8) = v5 + 24;
    *(_QWORD *)(v5 + 16) = 1;
    *(_BYTE *)(v5 + 40) = 0;
    *(_QWORD *)(v5 + 48) = 0;
    v9 = v5;
  }
  v6 = *a3;
  *a3 = 0;
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v6 + 16))(v6, &v9);
  (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  return WTF::Ref<WebCore::FragmentedSharedBuffer,WTF::RawPtrTraits<WebCore::FragmentedSharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::FragmentedSharedBuffer>>::~Ref(&v9, v7);
}

void sub_194E0D0B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void *v4;
  va_list va;

  va_start(va, a2);
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  WTF::Ref<WebCore::FragmentedSharedBuffer,WTF::RawPtrTraits<WebCore::FragmentedSharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::FragmentedSharedBuffer>>::~Ref((uint64_t *)va, v4);
  _Unwind_Resume(a1);
}

uint64_t *`non-virtual thunk to'WebCore::LegacyPreviewLoader::provideMainResourceForPreviewConverter(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  WebCore::FragmentedSharedBuffer *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;

  v4 = *(WebCore::FragmentedSharedBuffer **)(a1 + 32);
  if (v4)
  {
    WebCore::FragmentedSharedBuffer::copy(v4, &v9);
  }
  else
  {
    v5 = WTF::fastMalloc((WTF *)0x38);
    *(_DWORD *)v5 = 1;
    *(_QWORD *)(v5 + 8) = v5 + 24;
    *(_QWORD *)(v5 + 16) = 1;
    *(_BYTE *)(v5 + 40) = 0;
    *(_QWORD *)(v5 + 48) = 0;
    v9 = v5;
  }
  v6 = *a3;
  *a3 = 0;
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v6 + 16))(v6, &v9);
  (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  return WTF::Ref<WebCore::FragmentedSharedBuffer,WTF::RawPtrTraits<WebCore::FragmentedSharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::FragmentedSharedBuffer>>::~Ref(&v9, v7);
}

void sub_194E0D170(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void *v4;
  va_list va;

  va_start(va, a2);
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  WTF::Ref<WebCore::FragmentedSharedBuffer,WTF::RawPtrTraits<WebCore::FragmentedSharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::FragmentedSharedBuffer>>::~Ref((uint64_t *)va, v4);
  _Unwind_Resume(a1);
}

void WebCore::LegacyPreviewLoader::~LegacyPreviewLoader(WebCore::LegacyPreviewLoader *this, void *a2)
{
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  _DWORD *v9;
  WebCore::PreviewConverter *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  WTF *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  WTF *v28;
  uint64_t v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v3 = (unsigned int *)*((_QWORD *)this + 7);
  *((_QWORD *)this + 7) = 0;
  if (v3)
  {
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      atomic_store(1u, v3);
      WTF::fastFree((WTF *)v3, a2);
    }
  }
  v6 = *((_QWORD *)this + 6);
  *((_QWORD *)this + 6) = 0;
  if (v6)
  {
    do
    {
      v7 = __ldaxr((unsigned int *)v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, (unsigned int *)v6));
    if (!v8)
    {
      atomic_store(1u, (unsigned int *)v6);
      v21 = *(unsigned int *)(v6 + 20);
      if ((_DWORD)v21)
      {
        v22 = *(_QWORD *)(v6 + 8);
        v23 = v22 + 16 * v21;
        do
        {
          v24 = *(unsigned int **)(v22 + 8);
          *(_QWORD *)(v22 + 8) = 0;
          if (v24)
          {
            do
            {
              v25 = __ldaxr(v24);
              v26 = v25 - 1;
            }
            while (__stlxr(v26, v24));
            if (!v26)
            {
              v30 = v23;
              v31 = v22;
              v32 = (WTF *)v24;
              v33 = v6;
              atomic_store(1u, v24);
              v27 = v24[6];
              if ((_DWORD)v27 != -1)
                ((void (*)(char *, unsigned int *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIhLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENS6_9RetainPtrIPK8__CFDataEENS6_14FileSystemImpl14MappedFileDataEN7WebCore11DataSegment8ProviderEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSN_EEEDcOSO_DpOT0____fmatrix_1[v27])(&v35, v24 + 2);
              *((_DWORD *)v32 + 6) = -1;
              WTF::fastFree(v32, a2);
              v6 = v33;
              v23 = v30;
              v22 = v31;
            }
          }
          v22 += 16;
        }
        while (v22 != v23);
      }
      v28 = *(WTF **)(v6 + 8);
      if ((WTF *)(v6 + 24) != v28 && v28 != 0)
      {
        *(_QWORD *)(v6 + 8) = 0;
        *(_DWORD *)(v6 + 16) = 0;
        v34 = v6;
        WTF::fastFree(v28, a2);
        v6 = v34;
      }
      WTF::fastFree((WTF *)v6, a2);
    }
  }
  v9 = (_DWORD *)*((_QWORD *)this + 5);
  *((_QWORD *)this + 5) = 0;
  if (v9)
  {
    if (v9[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v9 + 8))(v9);
    else
      --v9[2];
  }
  v10 = (WebCore::PreviewConverter *)*((_QWORD *)this + 4);
  *((_QWORD *)this + 4) = 0;
  if (v10)
  {
    if (*((_DWORD *)v10 + 4) == 1)
    {
      WebCore::PreviewConverter::~PreviewConverter(v10, a2);
      WTF::fastFree(v19, v20);
    }
    else
    {
      --*((_DWORD *)v10 + 4);
    }
  }
  v11 = *((_QWORD *)this + 3);
  if (v11)
  {
    *(_QWORD *)(v11 + 8) = 0;
    v12 = (unsigned int *)*((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = 0;
    if (v12)
    {
      do
      {
        v13 = __ldaxr(v12);
        v14 = v13 - 1;
      }
      while (__stlxr(v14, v12));
      if (!v14)
      {
        atomic_store(1u, v12);
        WTF::fastFree((WTF *)v12, a2);
      }
    }
  }
  else
  {
    *((_QWORD *)this + 3) = 0;
  }
  v15 = *((_QWORD *)this + 1);
  if (v15)
  {
    *(_QWORD *)(v15 + 8) = 0;
    v16 = (unsigned int *)*((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = 0;
    if (v16)
    {
      do
      {
        v17 = __ldaxr(v16);
        v18 = v17 - 1;
      }
      while (__stlxr(v18, v16));
      if (!v18)
      {
        atomic_store(1u, v16);
        WTF::fastFree((WTF *)v16, a2);
      }
    }
  }
  else
  {
    *((_QWORD *)this + 1) = 0;
  }
}

{
  WTF *v2;
  void *v3;

  WebCore::LegacyPreviewLoader::~LegacyPreviewLoader(this, a2);
  WTF::fastFree(v2, v3);
}

void `non-virtual thunk to'WebCore::LegacyPreviewLoader::~LegacyPreviewLoader(WebCore::LegacyPreviewLoader *this, void *a2)
{
  WebCore::LegacyPreviewLoader::~LegacyPreviewLoader((WebCore::LegacyPreviewLoader *)((char *)this - 16), a2);
}

{
  WTF *v2;
  void *v3;

  WebCore::LegacyPreviewLoader::~LegacyPreviewLoader((WebCore::LegacyPreviewLoader *)((char *)this - 16), a2);
  WTF::fastFree(v2, v3);
}

WebCore::LegacyPreviewLoader *WebCore::LegacyPreviewLoader::LegacyPreviewLoader(WebCore::LegacyPreviewLoader *this, WebCore::ResourceLoader *a2, const WebCore::ResourceResponse *a3)
{
  char *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  void *v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  WebCore::PreviewConverter *v18;
  void *v19;
  WTF *v21;
  void *v22;
  uint64_t v23;
  int v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;

  *((_QWORD *)this + 2) = &unk_1E32CDF98;
  v6 = (char *)this + 16;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)this = off_1E32CDF30;
  *((_QWORD *)this + 1) = 0;
  v7 = WTF::fastMalloc((WTF *)0x1B8);
  WebCore::PreviewConverter::PreviewConverter(v7, (uint64_t)a3, (uint64_t)v6);
  *((_QWORD *)this + 4) = v7;
  MEMORY[0x19AEA5508](&v26, objc_msgSend(*(id *)(v7 + 432), "previewFileName"));
  MEMORY[0x19AEA5508](&v25, objc_msgSend(*(id *)(*((_QWORD *)this + 4) + 432), "previewUTI"));
  if ((byte_1ECE81489 & 1) != 0)
  {
    v9 = qword_1ECE81490;
    if (qword_1ECE81490)
    {
      ++*(_DWORD *)(qword_1ECE81490 + 8);
LABEL_4:
      *((_QWORD *)this + 5) = v9;
      goto LABEL_5;
    }
  }
  else
  {
    qword_1ECE81490 = 0;
    byte_1ECE81489 = 1;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 4) + 280) + 16);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, WTF::StringImpl **, WTF::StringImpl **))(*(_QWORD *)v23
                                                                                                 + 1088))(&v27, v23, &v26, &v25);
  v9 = v27;
  if (v27)
    goto LABEL_4;
  if (_MergedGlobals_114 == 1)
  {
    v24 = dword_1ECE814A0 + 1;
  }
  else
  {
    qword_1ECE81498 = (uint64_t)off_1E32CDFE8;
    *(_QWORD *)&dword_1ECE814A0 = 1;
    _MergedGlobals_114 = 1;
    v24 = 2;
  }
  dword_1ECE814A0 = v24;
  *((_QWORD *)this + 5) = &qword_1ECE81498;
LABEL_5:
  v10 = v25;
  v25 = 0;
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
      WTF::StringImpl::destroy(v10, v8);
    else
      *(_DWORD *)v10 -= 2;
  }
  v11 = v26;
  v26 = 0;
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v8);
    else
      *(_DWORD *)v11 -= 2;
  }
  *((_QWORD *)this + 6) = 0;
  v12 = *((_QWORD *)a2 + 1);
  if (v12)
    goto LABEL_34;
  v12 = WTF::fastCompactMalloc((WTF *)0x10);
  *(_DWORD *)v12 = 1;
  *(_QWORD *)(v12 + 8) = a2;
  v14 = (unsigned int *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = v12;
  if (!v14)
    goto LABEL_34;
  do
  {
    v15 = __ldaxr(v14);
    v16 = v15 - 1;
  }
  while (__stlxr(v16, v14));
  if (!v16)
  {
    atomic_store(1u, v14);
    WTF::fastFree((WTF *)v14, v13);
  }
  v12 = *((_QWORD *)a2 + 1);
  if (v12)
  {
LABEL_34:
    do
      v17 = __ldaxr((unsigned int *)v12);
    while (__stlxr(v17 + 1, (unsigned int *)v12));
  }
  *((_QWORD *)this + 7) = v12;
  *((_WORD *)this + 32) = 0;
  *((_BYTE *)this + 66) = 0;
  *((_BYTE *)this + 67) = (*(_DWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 4) + 136) + 696) & 0x4000) != 0;
  v18 = (WebCore::PreviewConverter *)*((_QWORD *)this + 4);
  if (v18)
  {
    ++*((_DWORD *)v18 + 4);
    WebCore::PreviewConverter::addClient((uint64_t)v18, (uint64_t)this);
    if (*((_DWORD *)v18 + 4) == 1)
    {
      WebCore::PreviewConverter::~PreviewConverter(v18, v19);
      WTF::fastFree(v21, v22);
    }
    else
    {
      --*((_DWORD *)v18 + 4);
    }
  }
  else
  {
    WebCore::PreviewConverter::addClient(0, (uint64_t)this);
  }
  return this;
}

void sub_194E0D678(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF *a9, WTF::StringImpl *a10, WTF::StringImpl *a11, char a12)
{
  _QWORD *v12;
  WebCore::PreviewConverter *v14;
  WTF *v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;

  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  if (a11)
  {
    if (*(_DWORD *)a11 == 2)
      WTF::StringImpl::destroy(a11, a2);
    else
      *(_DWORD *)a11 -= 2;
  }
  v14 = (WebCore::PreviewConverter *)v12[4];
  v12[4] = 0;
  if (v14)
  {
    if (*((_DWORD *)v14 + 4) == 1)
    {
      WebCore::PreviewConverter::~PreviewConverter(v14, a2);
      WTF::fastFree(v15, v16);
    }
    else
    {
      --*((_DWORD *)v14 + 4);
    }
  }
  v17 = v12[3];
  if (v17)
  {
    *(_QWORD *)(v17 + 8) = 0;
    v18 = (unsigned int *)v12[3];
    v12[3] = 0;
    if (v18)
    {
      do
      {
        v19 = __ldaxr(v18);
        v20 = v19 - 1;
      }
      while (__stlxr(v20, v18));
      if (!v20)
      {
        atomic_store(1u, v18);
        WTF::fastFree((WTF *)v18, a2);
      }
    }
  }
  else
  {
    v12[3] = 0;
  }
  v21 = v12[1];
  if (v21)
  {
    *(_QWORD *)(v21 + 8) = 0;
    v22 = (unsigned int *)v12[1];
    v12[1] = 0;
    if (v22)
    {
      do
      {
        v23 = __ldaxr(v22);
        v24 = v23 - 1;
      }
      while (__stlxr(v24, v22));
      if (!v24)
      {
        atomic_store(1u, v22);
        WTF::fastFree((WTF *)v22, a2);
      }
    }
  }
  else
  {
    v12[1] = 0;
  }
  _Unwind_Resume(exception_object);
}

uint64_t *WebCore::LegacyPreviewLoader::setClientForTesting(uint64_t *result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if ((byte_1ECE81489 & 1) != 0)
  {
    result = (uint64_t *)qword_1ECE81490;
    v2 = *v1;
    *v1 = 0;
    qword_1ECE81490 = v2;
    if (result)
    {
      if (*((_DWORD *)result + 2) == 1)
        return (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 8))(result);
      else
        --*((_DWORD *)result + 2);
    }
  }
  else
  {
    byte_1ECE81489 = 1;
    v3 = *result;
    *result = 0;
    qword_1ECE81490 = v3;
  }
  return result;
}

__CFString *suggestedFilenameWithMIMEType(NSURL *a1, const WTF::String *a2)
{
  WTF::StringImpl *v4;
  __CFString *v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v8;

  WebCore::copyImageUnknownFileLabel((uint64_t)&v8);
  v5 = suggestedFilenameWithMIMEType(a1, a2, (const WTF::String *)&v8);
  v6 = v8;
  v8 = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, v4);
    else
      *(_DWORD *)v6 -= 2;
  }
  return v5;
}

void sub_194E0D994(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

__CFString *suggestedFilenameWithMIMEType(NSURL *a1, const WTF::String *a2, const WTF::String *a3)
{
  NSString *v6;
  __CFString *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  CFTypeRef v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  char v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  const WTF::StringImpl *v18;
  unint64_t i;
  int v20;
  int v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  __CFString *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  int v32;
  unsigned int v33;
  WTF::StringImpl *v34[2];
  CFTypeRef cf;

  v6 = -[NSString lastPathComponent](-[NSURL path](a1, "path"), "lastPathComponent");
  v7 = (__CFString *)filenameByFixingIllegalCharacters(v6);
  if (-[__CFString length](v7, "length") && !-[NSString isEqualToString:](v6, "isEqualToString:", CFSTR("/")))
  {
    v12 = -[__CFString pathExtension](v7, "pathExtension");
  }
  else
  {
    MEMORY[0x19AEA52E0](&v31, a1);
    v34[0] = (WTF::StringImpl *)WTF::URL::host((WTF::URL *)&v31);
    v34[1] = v8;
    WTF::StringView::createNSString((WTF::StringView *)v34);
    v10 = v31;
    v31 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v9);
      else
        *(_DWORD *)v10 -= 2;
    }
    v7 = (__CFString *)filenameByFixingIllegalCharacters((NSString *)cf);
    if (!-[__CFString length](v7, "length"))
    {
      if (*(_QWORD *)a3)
        v7 = (__CFString *)WTF::StringImpl::operator NSString *();
      else
        v7 = &stru_1E3487BC0;
    }
    v11 = cf;
    cf = 0;
    if (v11)
      CFRelease(v11);
    v12 = 0;
  }
  if (*(_QWORD *)a2)
  {
    if ((MEMORY[0x19AEA53F4](*(_QWORD *)a2, "application/tar", 15) & 1) == 0
      && !MEMORY[0x19AEA53F4](*(_QWORD *)a2, "application/x-tar", 17))
    {
      goto LABEL_25;
    }
    MEMORY[0x19AEA5508](&v31, v7);
    if (!v31 || WTF::StringImpl::findIgnoringASCIICase() == -1)
    {
      MEMORY[0x19AEA5508](v34, v7);
      if (v34[0])
      {
        v14 = WTF::StringImpl::endsWithIgnoringASCIICase();
        v15 = v34[0];
        v34[0] = 0;
        if (v15)
        {
          if (*(_DWORD *)v15 == 2)
            WTF::StringImpl::destroy(v15, v13);
          else
            *(_DWORD *)v15 -= 2;
        }
      }
      else
      {
        v14 = 0;
      }
    }
    else
    {
      v14 = 1;
    }
    v16 = v31;
    v31 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
      {
        WTF::StringImpl::destroy(v16, v13);
        if ((v14 & 1) != 0)
          return v7;
        goto LABEL_25;
      }
      *(_DWORD *)v16 -= 2;
    }
    if ((v14 & 1) != 0)
      return v7;
LABEL_25:
    if ((MEMORY[0x19AEA53F4](*(_QWORD *)a2, "application/octet-stream", 24) & 1) != 0
      || (MEMORY[0x19AEA53F4](*(_QWORD *)a2, "text/plain", 10) & 1) != 0)
    {
      return v7;
    }
    WebCore::MIMETypeRegistry::extensionsForMIMEType(a2, (uint64_t)&v31);
    if (!v33)
      goto LABEL_42;
    MEMORY[0x19AEA5508](v34, v12);
    if (v33)
    {
      for (i = 0; i < v33; ++i)
      {
        v20 = WTF::equal(*((WTF **)v31 + i), v34[0], v18);
        if ((v20 & 1) != 0)
          break;
      }
      v21 = v20 ^ 1;
    }
    else
    {
      v21 = 1;
    }
    v22 = v34[0];
    v34[0] = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
      {
        WTF::StringImpl::destroy(v22, v17);
        if (v21)
          goto LABEL_42;
        goto LABEL_48;
      }
      *(_DWORD *)v22 -= 2;
    }
    if (v21)
    {
LABEL_42:
      WebCore::MIMETypeRegistry::preferredExtensionForMIMEType(a2, v34);
      if (v34[0])
      {
        v24 = (__CFString *)WTF::StringImpl::operator NSString *();
        v25 = v34[0];
        v34[0] = 0;
        if (v25)
        {
          if (*(_DWORD *)v25 == 2)
            WTF::StringImpl::destroy(v25, v23);
          else
            *(_DWORD *)v25 -= 2;
        }
      }
      else
      {
        v24 = &stru_1E3487BC0;
      }
      if (-[__CFString length](v24, "length", v31))
        v7 = (__CFString *)-[__CFString stringByAppendingPathExtension:](v7, "stringByAppendingPathExtension:", v24);
    }
LABEL_48:
    if (v33)
    {
      v28 = v31;
      v29 = 8 * v33;
      do
      {
        v30 = *(WTF::StringImpl **)v28;
        *(_QWORD *)v28 = 0;
        if (v30)
        {
          if (*(_DWORD *)v30 == 2)
            WTF::StringImpl::destroy(v30, v17);
          else
            *(_DWORD *)v30 -= 2;
        }
        v28 = (WTF::StringImpl *)((char *)v28 + 8);
        v29 -= 8;
      }
      while (v29);
    }
    v26 = v31;
    if (v31)
    {
      v31 = 0;
      v32 = 0;
      WTF::fastFree(v26, v17);
    }
  }
  return v7;
}

void sub_194E0DD40(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF::StringImpl *a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, WTF::StringImpl *a15, uint64_t a16, CFTypeRef cf)
{
  if (a9)
  {
    if (*(_DWORD *)a9 == 2)
      WTF::StringImpl::destroy(a9, a2);
    else
      *(_DWORD *)a9 -= 2;
  }
  _Unwind_Resume(exception_object);
}

CFTypeRef filenameByFixingIllegalCharacters(NSString *a1)
{
  void *v1;
  __int16 v3;

  v1 = (void *)-[NSString mutableCopy](a1, "mutableCopy");
  v3 = 0;
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithCharacters:length:", &v3, 0), &stru_1E3487BC0, 0, 0, objc_msgSend(v1, "length"));
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", CFSTR("/"), CFSTR("-"), 0, 0, objc_msgSend(v1, "length"));
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", CFSTR(":"), CFSTR("-"), 0, 0, objc_msgSend(v1, "length"));
  while (objc_msgSend(v1, "hasPrefix:", CFSTR(".")))
    objc_msgSend(v1, "deleteCharactersInRange:", 0, 1);
  return (id)CFMakeCollectable(v1);
}

void sub_194E0DF54(_Unwind_Exception *exception_object)
{
  const void *v1;

  if (v1)
    CFRelease(v1);
  _Unwind_Resume(exception_object);
}

void sub_194E0E008(_Unwind_Exception *a1, void *a2)
{
  WebCore::ResourceRequestBase::RequestData *v2;
  WebCore::FormData *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  bmalloc::api *v7;
  void *v8;

  v4 = (WebCore::FormData *)*((_QWORD *)v2 + 21);
  *((_QWORD *)v2 + 21) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 1)
    {
      WebCore::FormData::~FormData(v4, a2);
      bmalloc::api::isoDeallocate(v7, v8);
    }
    else
    {
      --*(_DWORD *)v4;
    }
  }
  v5 = (WTF::StringImpl *)*((_QWORD *)v2 + 20);
  *((_QWORD *)v2 + 20) = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = (WTF::StringImpl *)*((_QWORD *)v2 + 19);
  *((_QWORD *)v2 + 19) = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v6 -= 2;
  }
  WebCore::ResourceRequestBase::RequestData::~RequestData(v2, (WTF::StringImpl *)a2);
  _Unwind_Resume(a1);
}

uint64_t WebCore::LegacyPreviewLoaderClient::supportsPasswordEntry(WebCore::LegacyPreviewLoaderClient *this)
{
  return 0;
}

uint64_t WebCore::LegacyPreviewLoaderClient::didRequestPassword(uint64_t a1, _QWORD *a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)*a2 + 16))(*a2, MEMORY[0x1E0CBF738]);
}

_QWORD *WTF::Detail::CallableWrapper<WebCore::LegacyPreviewLoader::previewConverterDidStartConverting(WebCore::PreviewConverter &)::$_0,void>::~CallableWrapper(_QWORD *a1, void *a2)
{
  WebCore::PreviewConverter *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  WTF *v8;
  void *v9;

  *a1 = &off_1E32CE030;
  v3 = (WebCore::PreviewConverter *)a1[3];
  a1[3] = 0;
  if (v3)
  {
    if (*((_DWORD *)v3 + 4) == 1)
    {
      WebCore::PreviewConverter::~PreviewConverter(v3, a2);
      WTF::fastFree(v8, v9);
    }
    else
    {
      --*((_DWORD *)v3 + 4);
    }
  }
  v4 = (unsigned int *)a1[2];
  a1[2] = 0;
  if (v4)
  {
    do
    {
      v5 = __ldaxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
    {
      atomic_store(1u, v4);
      WTF::fastFree((WTF *)v4, a2);
    }
  }
  return a1;
}

uint64_t WTF::Detail::CallableWrapper<WebCore::LegacyPreviewLoader::previewConverterDidStartConverting(WebCore::PreviewConverter &)::$_0,void>::~CallableWrapper(WTF *this, void *a2)
{
  WebCore::PreviewConverter *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  WTF *v8;
  void *v9;

  *(_QWORD *)this = &off_1E32CE030;
  v3 = (WebCore::PreviewConverter *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v3)
  {
    if (*((_DWORD *)v3 + 4) == 1)
    {
      WebCore::PreviewConverter::~PreviewConverter(v3, a2);
      WTF::fastFree(v8, v9);
    }
    else
    {
      --*((_DWORD *)v3 + 4);
    }
  }
  v4 = (unsigned int *)*((_QWORD *)this + 2);
  *((_QWORD *)this + 2) = 0;
  if (v4)
  {
    do
    {
      v5 = __ldaxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
    {
      atomic_store(1u, v4);
      WTF::fastFree((WTF *)v4, a2);
    }
  }
  return WTF::fastFree(this, a2);
}

WTF::StringImpl *WTF::Detail::CallableWrapper<WebCore::LegacyPreviewLoader::previewConverterDidStartConverting(WebCore::PreviewConverter &)::$_0,void>::call(WTF::StringImpl *result, void *a2)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  WebCore::FragmentedSharedBuffer *v10;
  void *v11;
  WTF::StringImpl *v12;
  _DWORD *v13;
  _OWORD v14[5];
  WTF::StringImpl *v15[2];
  int v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;

  v2 = *((_QWORD *)result + 2);
  if (v2)
  {
    if (*(_QWORD *)(v2 + 8))
    {
      v3 = result;
      v4 = *((_QWORD *)result + 1);
      *(_BYTE *)(v4 + 65) = 1;
      v5 = *(_QWORD *)(v4 + 56);
      if (v5)
      {
        v6 = *(_DWORD **)(v5 + 8);
        if (v6)
        {
          ++v6[4];
          if (!*((_BYTE *)v6 + 752))
          {
            result = (WTF::StringImpl *)WebCore::PreviewConverter::previewData(*((WebCore::PreviewConverter **)result + 3), a2);
            if (*((_QWORD *)result + 6))
            {
              v8 = *(_QWORD *)(WebCore::PreviewConverter::previewData(*((WebCore::PreviewConverter **)v3 + 3), v7) + 48);
              v10 = (WebCore::FragmentedSharedBuffer *)WebCore::PreviewConverter::previewData(*((WebCore::PreviewConverter **)v3 + 3), v9);
              WebCore::FragmentedSharedBuffer::copy(v10, (uint64_t *)v14);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)v6 + 224))(v6, *(_QWORD *)&v14[0], v8, 1);
              result = (WTF::StringImpl *)WTF::Ref<WebCore::FragmentedSharedBuffer,WTF::RawPtrTraits<WebCore::FragmentedSharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::FragmentedSharedBuffer>>::~Ref((uint64_t *)v14, v11);
            }
            if (!*((_BYTE *)v6 + 752) && *(_BYTE *)(v4 + 66))
            {
              *(_BYTE *)(v4 + 66) = 0;
              v16 = 0;
              *(_OWORD *)v15 = 0u;
              memset(v14, 0, sizeof(v14));
              v17 = -1;
              v18 = -1;
              v19 = 0;
              (*(void (**)(_DWORD *, _OWORD *))(*(_QWORD *)v6 + 232))(v6, v14);
              v13 = v19;
              v19 = 0;
              if (v13)
                WTF::RefCounted<WebCore::AdditionalNetworkLoadMetricsForWebInspector>::deref(v13, v12);
              result = v15[1];
              v15[1] = 0;
              if (result)
              {
                if (*(_DWORD *)result == 2)
                  result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v12);
                else
                  *(_DWORD *)result -= 2;
              }
            }
          }
          if (v6[4] == 1)
            return (WTF::StringImpl *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v6 + 8))(v6);
          else
            --v6[4];
        }
      }
    }
  }
  return result;
}

void sub_194E0E324(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, WTF::StringImpl *a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24)
{
  _DWORD *v24;

  if (a24)
    WTF::RefCounted<WebCore::AdditionalNetworkLoadMetricsForWebInspector>::deref(a24, a2);
  if (a20)
  {
    if (*(_DWORD *)a20 == 2)
      WTF::StringImpl::destroy(a20, a2);
    else
      *(_DWORD *)a20 -= 2;
  }
  if (v24[4] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v24 + 8))(v24);
  else
    --v24[4];
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::JSPopStateEvent::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;

  v2 = a2[11];
  if (v2 && *(_BYTE *)(v2 + 24))
  {
    __break(0xC471u);
    JUMPOUT(0x194E0E3FCLL);
  }
  v3 = *(uint64_t **)(*(_QWORD *)(a1 + 24) + 80);
  if (v3)
  {
    if ((v3[1] & 3) != 0)
      v3 = 0;
    else
      v3 = (uint64_t *)*v3;
  }
  return (*(uint64_t (**)(_QWORD *, uint64_t *))(*a2 + 24))(a2, v3);
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPopStateEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  unint64_t v2;
  JSC::VM *v4;
  uint64_t v6;
  int v7;
  unint64_t v8;
  JSC::JSCell *v9;
  void (***v10)(WebCore::PopStateEvent *__hidden);
  uint64_t Object;
  uint64_t v12;
  WTF::StringImpl *v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  BOOL v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WebCore::JSDOMGlobalObject *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  JSC::VM *v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char **v32;
  int v33;
  unint64_t v34;
  WebCore::JSEvent *v35;
  JSC::JSCell *v36;
  unint64_t Structure;
  JSC::Structure *v38;
  JSC::JSCell *v39;
  uint64_t v40;
  JSCell *v41;
  JSC::JSCell *v42;
  JSC::JSGlobalObject *v43;
  JSC::JSObject *v44;
  JSC::JSGlobalObject *v45;
  JSC::VM *v46;
  WebCore::JSDOMGlobalObject *v47;
  JSC::Structure *v48;
  JSC::VM *FunctionRealm;
  uint64_t v50;
  unsigned int v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char **v56;
  int v57;
  JSC::JSCell *v58;
  unint64_t v59;
  JSC::Structure *v60;
  JSC::JSCell *v61;
  uint64_t v62;
  unint64_t SubclassStructure;
  void (***v64)(WebCore::PopStateEvent *__hidden);
  JSC::VM *v66;
  double v67;
  BOOL v68;
  WTF::StringImpl *v69;
  unint64_t v70;
  JSC::VM *v71;
  double v72;
  WTF::StringImpl *v73;
  JSC::VM *v74;
  double v75;
  JSC::VM *v76;
  double v77;
  JSValue v78;
  BOOL v79;
  int v80;
  uint64_t v81;
  int *v82;
  int v83;
  BOOL v84;
  int v85;
  uint64_t v86;
  int *v87;
  int v88;
  BOOL v89;
  int v90;
  uint64_t v91;
  int *v92;
  int v93;
  BOOL v94;
  int v95;
  uint64_t v96;
  int *v97;
  int v98;
  BOOL v99;
  uint64_t v100;
  WTF::StringImpl *v101[2];
  BOOL v102;
  _BYTE v103[7];
  WTF::StringImpl *v104;
  _DWORD v105[2];
  int v106;
  char v107;
  WTF::StringImpl *v108;
  int v109;
  int v110;
  char v111;
  void (***v112)(WebCore::PopStateEvent *__hidden);

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v78.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v4, a1, v78);
  }
  v6 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v108);
  v7 = v109;
  if (!v109)
  {
    v8 = 0xFFFE000000000002;
    v100 = v6;
    if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
    {
      v10 = (void (***)(WebCore::PopStateEvent *__hidden))*((_QWORD *)a1 + 7);
      v112 = v10;
    }
    else
    {
      v9 = *(JSC::JSCell **)(a2 + 56);
      v10 = (void (***)(WebCore::PopStateEvent *__hidden))*((_QWORD *)a1 + 7);
      v112 = v10;
      if (((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) != 2)
      {
        if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v9)) == 0)
        {
          JSC::throwTypeError();
          goto LABEL_130;
        }
        v12 = Object;
        WTF::AtomStringImpl::addLiteral();
        v2 = JSC::JSObject::get((JSC::Structure *)v12, a1, (unint64_t)v101[0]);
        if (v101[0])
        {
          if (*(_DWORD *)v101[0] == 2)
            WTF::StringImpl::destroy(v101[0], v13);
          else
            *(_DWORD *)v101[0] -= 2;
        }
        if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
        {
LABEL_130:
          v41 = 0;
LABEL_59:
          v7 = v109;
          goto LABEL_60;
        }
        if (v2 != 10)
        {
          v66 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v2 >= 0xFFFE000000000000)
            goto LABEL_132;
          *(_QWORD *)&v67 = v2 - 0x2000000000000;
          if (v2 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            v68 = v67 > 0.0 || v67 < 0.0;
            goto LABEL_67;
          }
          if ((v2 & 0xFFFE000000000002) != 0)
          {
            v68 = v2 == 7;
            goto LABEL_67;
          }
          v80 = *(unsigned __int8 *)(v2 + 5);
          if (v80 == 3)
          {
            v83 = *(_DWORD *)(v2 + 8);
          }
          else
          {
            if (v80 != 2)
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v79 = *(_QWORD *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                goto LABEL_186;
              }
              v68 = 1;
              goto LABEL_67;
            }
            v81 = *(_QWORD *)(v2 + 8);
            if ((v81 & 1) != 0)
              v82 = (int *)(v2 + 16);
            else
              v82 = (int *)(v81 + 4);
            v83 = *v82;
          }
          v79 = v83 == 0;
          goto LABEL_186;
        }
        v99 = 0;
        while (1)
        {
          WTF::AtomStringImpl::addLiteral();
          v70 = JSC::JSObject::get((JSC::Structure *)v12, a1, (unint64_t)v101[0]);
          if (v101[0])
          {
            if (*(_DWORD *)v101[0] == 2)
              WTF::StringImpl::destroy(v101[0], v69);
            else
              *(_DWORD *)v101[0] -= 2;
          }
          if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
            goto LABEL_130;
          if (v70 == 10)
          {
            v8 = 0;
            goto LABEL_79;
          }
          v71 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v70 >= 0xFFFE000000000000)
            break;
          *(_QWORD *)&v72 = v70 - 0x2000000000000;
          if (v70 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            if ((v70 & v8) != 0)
            {
              v8 = v70 == 7;
              goto LABEL_78;
            }
            v85 = *(unsigned __int8 *)(v70 + 5);
            if (v85 == 3)
            {
              v88 = *(_DWORD *)(v70 + 8);
              goto LABEL_174;
            }
            if (v85 == 2)
            {
              v86 = *(_QWORD *)(v70 + 8);
              if ((v86 & 1) != 0)
                v87 = (int *)(v70 + 16);
              else
                v87 = (int *)(v86 + 4);
              v88 = *v87;
LABEL_174:
              v84 = v88 == 0;
            }
            else
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v70 & 0xFFFFFFFE) + 0xA) & 1) == 0)
              {
LABEL_176:
                v8 = 1;
                goto LABEL_78;
              }
              v84 = *(_QWORD *)(16 * (*(_DWORD *)v70 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            }
LABEL_190:
            v8 = !v84;
            goto LABEL_78;
          }
          if (v72 > 0.0)
            goto LABEL_176;
          v8 = v72 < 0.0;
LABEL_78:
          if (*((_DWORD *)v71 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v71) & 1) != 0)
            goto LABEL_130;
LABEL_79:
          WTF::AtomStringImpl::addLiteral();
          v2 = JSC::JSObject::get((JSC::Structure *)v12, a1, (unint64_t)v101[0]);
          if (v101[0])
          {
            if (*(_DWORD *)v101[0] == 2)
              WTF::StringImpl::destroy(v101[0], v73);
            else
              *(_DWORD *)v101[0] -= 2;
          }
          if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
            goto LABEL_130;
          if (v2 != 10)
          {
            v74 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v2 >= 0xFFFE000000000000)
            {
              v89 = (_DWORD)v2 == 0;
              goto LABEL_194;
            }
            *(_QWORD *)&v75 = v2 - 0x2000000000000;
            if (v2 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
            {
              if (v75 > 0.0)
                goto LABEL_180;
              v14 = v75 < 0.0;
            }
            else
            {
              if ((v2 & 0xFFFE000000000002) != 0)
              {
                v14 = v2 == 7;
                goto LABEL_89;
              }
              v90 = *(unsigned __int8 *)(v2 + 5);
              if (v90 == 3)
              {
                v93 = *(_DWORD *)(v2 + 8);
                goto LABEL_178;
              }
              if (v90 == 2)
              {
                v91 = *(_QWORD *)(v2 + 8);
                if ((v91 & 1) != 0)
                  v92 = (int *)(v2 + 16);
                else
                  v92 = (int *)(v91 + 4);
                v93 = *v92;
LABEL_178:
                v89 = v93 == 0;
LABEL_194:
                v14 = !v89;
                goto LABEL_89;
              }
              if ((*(_BYTE *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v89 = *(_QWORD *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                goto LABEL_194;
              }
LABEL_180:
              v14 = 1;
            }
LABEL_89:
            if (*((_DWORD *)v74 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v74) & 1) != 0)
              goto LABEL_130;
            v15 = 0;
            goto LABEL_15;
          }
          v15 = 0;
          v14 = 0;
LABEL_15:
          v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
          if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 136))(v16) + 464) & 0x400000000000000) != 0
            && (v15 & 1) == 0)
          {
            WTF::AtomStringImpl::addLiteral();
            v2 = JSC::JSObject::get((JSC::Structure *)v12, a1, (unint64_t)v101[0]);
            if (v101[0])
            {
              if (*(_DWORD *)v101[0] == 2)
                WTF::StringImpl::destroy(v101[0], v17);
              else
                *(_DWORD *)v101[0] -= 2;
            }
            if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
              goto LABEL_130;
            if (v2 != 10)
            {
              v76 = (JSC::VM *)*((_QWORD *)a1 + 7);
              if (v2 >= 0xFFFE000000000000)
              {
                v94 = (_DWORD)v2 == 0;
                goto LABEL_198;
              }
              *(_QWORD *)&v77 = v2 - 0x2000000000000;
              if (v2 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
              {
                if (v77 <= 0.0)
                {
                  v18 = v77 < 0.0;
                  goto LABEL_95;
                }
              }
              else
              {
                if ((v2 & 0xFFFE000000000002) != 0)
                {
                  v18 = v2 == 7;
                  goto LABEL_95;
                }
                v95 = *(unsigned __int8 *)(v2 + 5);
                if (v95 == 3)
                {
                  v98 = *(_DWORD *)(v2 + 8);
                  goto LABEL_182;
                }
                if (v95 == 2)
                {
                  v96 = *(_QWORD *)(v2 + 8);
                  if ((v96 & 1) != 0)
                    v97 = (int *)(v2 + 16);
                  else
                    v97 = (int *)(v96 + 4);
                  v98 = *v97;
LABEL_182:
                  v94 = v98 == 0;
LABEL_198:
                  v18 = !v94;
LABEL_95:
                  if (*((_DWORD *)v76 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v76) & 1) != 0)
                    goto LABEL_130;
                  goto LABEL_23;
                }
                if ((*(_BYTE *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0xA) & 1) != 0)
                {
                  v94 = *(_QWORD *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                  goto LABEL_198;
                }
              }
              v18 = 1;
              goto LABEL_95;
            }
          }
          v18 = 0;
LABEL_23:
          if ((v15 & 1) != 0)
            goto LABEL_29;
          WTF::AtomStringImpl::addLiteral();
          LODWORD(v2) = v101[0];
          v12 = JSC::JSObject::get((JSC::Structure *)v12, a1, (unint64_t)v101[0]);
          if (v101[0])
          {
            if (*(_DWORD *)v101[0] == 2)
              WTF::StringImpl::destroy(v101[0], v19);
            else
              *(_DWORD *)v101[0] -= 2;
          }
          if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
            goto LABEL_130;
          if (v12 == 10)
LABEL_29:
            v12 = 2;
          v106 = v110;
          v107 = v111;
          v105[0] = (_DWORD)v104;
          *(_DWORD *)((char *)v105 + 3) = *(_DWORD *)((char *)&v104 + 3);
          if (!v109)
          {
            v20 = v108;
            v108 = 0;
            v104 = v20;
            LOBYTE(v101[0]) = v99;
            BYTE1(v101[0]) = v8;
            BYTE2(v101[0]) = v14;
            *(_DWORD *)((char *)v101 + 3) = v106;
            HIBYTE(v101[0]) = v107;
            v101[1] = (WTF::StringImpl *)v12;
            v102 = v18;
            *(_DWORD *)v103 = v105[0];
            *(_DWORD *)&v103[3] = *(_DWORD *)((char *)v105 + 3);
            WebCore::PopStateEvent::create(&v104, (unsigned __int8 *)v101, 0, (uint64_t *)&v112);
            v23 = v104;
            v104 = 0;
            if (v23)
            {
              if (*(_DWORD *)v23 == 2)
                WTF::StringImpl::destroy(v23, v21);
              else
                *(_DWORD *)v23 -= 2;
            }
            v24 = (uint64_t)v112;
            if (*v112 != off_1E33A66C0)
            {
              __break(0xC471u);
              JUMPOUT(0x194E0EC00);
            }
            v25 = *(JSC::VM **)(v100 + 40);
            v26 = *((_QWORD *)v25 + 412);
            if (!v26)
              goto LABEL_41;
            v27 = *(_DWORD *)(v26 - 8);
            v28 = ((unint64_t)&WebCore::JSPopStateEvent::s_info
                 + ~((_QWORD)&WebCore::JSPopStateEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPopStateEvent::s_info
                                                                         + ~((_QWORD)&WebCore::JSPopStateEvent::s_info << 32)) >> 22);
            v29 = 9 * ((v28 + ~(v28 << 13)) ^ ((v28 + ~(v28 << 13)) >> 8));
            v30 = (v29 ^ (v29 >> 15)) + ~((v29 ^ (v29 >> 15)) << 27);
            v31 = v27 & ((v30 >> 31) ^ v30);
            v32 = *(char ***)(v26 + 16 * v31);
            if (v32 == &WebCore::JSPopStateEvent::s_info)
            {
LABEL_40:
              v34 = *(_QWORD *)(v26 + 16 * v31 + 8);
              if (!v34)
                goto LABEL_41;
            }
            else
            {
              v33 = 1;
              while (v32)
              {
                v31 = ((_DWORD)v31 + v33) & v27;
                v32 = *(char ***)(v26 + 16 * v31);
                ++v33;
                if (v32 == &WebCore::JSPopStateEvent::s_info)
                  goto LABEL_40;
              }
LABEL_41:
              v35 = (WebCore::JSEvent *)*((_QWORD *)v25 + 7);
              v36 = (JSC::JSCell *)WebCore::JSEvent::prototype(v35, *(JSC::VM **)(v100 + 40), v22);
              Structure = WebCore::JSPopStateEventPrototype::createStructure((uint64_t *)v35, (uint64_t)v25, v36);
              *(_DWORD *)(Structure + 16) |= 0x80000u;
              v39 = (JSC::JSCell *)WebCore::JSPopStateEventPrototype::create(v35, v25, Structure, v38);
              v40 = WebCore::JSPopStateEvent::createStructure((uint64_t *)v35, (uint64_t)v25, v39);
              v34 = WebCore::cacheDOMStructure((JSCell *)v25, v40, (uint64_t)&WebCore::JSPopStateEvent::s_info);
            }
            v41 = (JSCell *)WebCore::JSPopStateEvent::create(v34, v25, (uint64_t *)&v112);
            WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v25 + 415), v24, (uint64_t)v41);
            v42 = *(JSC::JSCell **)(a2 + 40);
            if (((unint64_t)v42 & 0xFFFE000000000002) != 0
              || (v43 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v42)) == 0
              || (v45 = v43, v43 == *(JSC::JSGlobalObject **)(a2 + 24))
              || (v46 = (JSC::VM *)*((_QWORD *)a1 + 7),
                  FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v43, v44),
                  *((_DWORD *)v46 + 20))
              && (JSC::VM::hasExceptionsAfterHandlingTraps(v46) & 1) != 0)
            {
LABEL_55:
              if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
                v41 = 0;
              v64 = v112;
              v112 = 0;
              if (v64)
              {
                if (*((_DWORD *)v64 + 4) == 1)
                  (*v64)[1]((WebCore::PopStateEvent *)v64);
                else
                  --*((_DWORD *)v64 + 4);
              }
              goto LABEL_59;
            }
            v50 = *((_QWORD *)FunctionRealm + 412);
            if (v50)
            {
              v51 = *(_DWORD *)(v50 - 8);
              v52 = ((unint64_t)&WebCore::JSPopStateEvent::s_info
                   + ~((_QWORD)&WebCore::JSPopStateEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPopStateEvent::s_info
                                                                           + ~((_QWORD)&WebCore::JSPopStateEvent::s_info << 32)) >> 22);
              v53 = 9 * ((v52 + ~(v52 << 13)) ^ ((v52 + ~(v52 << 13)) >> 8));
              v54 = (v53 ^ (v53 >> 15)) + ~((v53 ^ (v53 >> 15)) << 27);
              v55 = v51 & ((v54 >> 31) ^ v54);
              v56 = *(char ***)(v50 + 16 * v55);
              if (v56 != &WebCore::JSPopStateEvent::s_info)
              {
                v57 = 1;
                while (v56)
                {
                  v55 = ((_DWORD)v55 + v57) & v51;
                  v56 = *(char ***)(v50 + 16 * v55);
                  ++v57;
                  if (v56 == &WebCore::JSPopStateEvent::s_info)
                    goto LABEL_51;
                }
                goto LABEL_52;
              }
LABEL_51:
              v47 = *(WebCore::JSDOMGlobalObject **)(v50 + 16 * v55 + 8);
              if (!v47)
                goto LABEL_52;
            }
            else
            {
LABEL_52:
              v58 = (JSC::JSCell *)WebCore::JSEvent::prototype(v46, FunctionRealm, v47);
              v59 = WebCore::JSPopStateEventPrototype::createStructure((uint64_t *)v46, (uint64_t)FunctionRealm, v58);
              *(_DWORD *)(v59 + 16) |= 0x80000u;
              v61 = (JSC::JSCell *)WebCore::JSPopStateEventPrototype::create(v46, FunctionRealm, v59, v60);
              v62 = WebCore::JSPopStateEvent::createStructure((uint64_t *)v46, (uint64_t)FunctionRealm, v61);
              v47 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v62, (uint64_t)&WebCore::JSPopStateEvent::s_info);
            }
            SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v45, v47, v48);
            if (!*((_DWORD *)v46 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v46) & 1) == 0)
              JSC::JSObject::setStructure(v41, v46, SubclassStructure);
            goto LABEL_55;
          }
          v66 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_132:
          v79 = (_DWORD)v2 == 0;
LABEL_186:
          v68 = !v79;
LABEL_67:
          v99 = v68;
          if (*((_DWORD *)v66 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v66) & 1) != 0)
            goto LABEL_130;
        }
        v84 = (_DWORD)v70 == 0;
        goto LABEL_190;
      }
    }
    v12 = 0;
    v99 = 0;
    v8 = 0;
    v14 = 0;
    v15 = 1;
    goto LABEL_15;
  }
  v41 = 0;
LABEL_60:
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2930[v7])(v101, &v108);
  return v41;
}

uint64_t WebCore::JSPopStateEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPopStateEvent::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  JSC::JSObject::visitChildren();
  result = WebCore::JSPopStateEvent::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
  v5 = *(_QWORD *)(a1 + 32);
  if ((v5 & 0xFFFE000000000002) == 0 && v5 != 0)
  {
    if ((v5 & 8) != 0)
    {
      if ((*(_BYTE *)(v5 - 79) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    else
    {
      v7 = v5 & 0xFFFFFFFFFFFFC000;
      if (*(_DWORD *)(v5 & 0xFFFFFFFFFFFFC000 | 0x20) != *(_DWORD *)(a2 + 132))
      {
        v8 = *(_QWORD *)(a1 + 32);
        v9 = v5 & 0xFFFFFFFFFFFFC000;
        result = JSC::MarkedBlock::aboutToMarkSlow((JSC::MarkedBlock *)(v5 & 0xFFFFFFFFFFFFC000));
        v5 = v8;
        v7 = v9;
      }
      if (((*(_QWORD *)(v7 + 8 * ((v5 >> 10) & 0xF) + 40) >> (v5 >> 4)) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    if (*(_QWORD *)(a2 + 168))
      return JSC::SlotVisitor::appendSlow();
  }
  return result;
}

uint64_t WebCore::JSPopStateEvent::visitChildren(WebCore::JSPopStateEvent *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];
  uint64_t v10;
  char v11;

  v9[0] = a2;
  v9[1] = this;
  v11 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v10 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v9;
    JSC::JSObject::visitChildren();
    v6 = *(uint64_t **)(*((_QWORD *)this + 3) + 80);
    if (!v6 || (v6[1] & 3) != 0)
      v7 = 0;
    else
      v7 = *v6;
    result = (*(uint64_t (**)(JSC::JSCell *, uint64_t))(*(_QWORD *)a2 + 24))(a2, v7);
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v9[0] + 88) = v10;
  }
  return result;
}

uint64_t WebCore::JSPopStateEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPopStateEventPrototype::create(WebCore::JSPopStateEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  JSC::Structure *v18;
  int v19;
  unint64_t v21;
  WTF::StringImpl *v22[6];
  int v23;
  int v24;
  JSC::Structure *v25;
  int v26;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v21 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v21);
    *((_QWORD *)this + 4865) = SlowCase + (int)v21;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSPopStateEvent::s_info, &WebCore::JSPopStateEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194E0F58CLL);
  }
  v10 = v9 - 192;
  if (!v9)
    v10 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v10 + 680) + 696) & 0x400000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v11 = v22[0];
    v12 = *((_DWORD *)this + 23281);
    *((_DWORD *)this + 23281) = 1;
    LODWORD(v22[0]) = -1;
    WORD2(v22[0]) = 1;
    JSC::JSObject::deleteProperty();
    *((_DWORD *)this + 23281) = v12;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v13);
      else
        *(_DWORD *)v11 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v14 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = JSC::JSString::create((uint64_t)this, v22);
  v17 = v22[0];
  v22[0] = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v15);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v26 = *(_DWORD *)SlowCase;
  v25 = v18;
  v19 = JSC::Structure::outOfLineCapacity(v18);
  v23 = 0;
  v24 = v19;
  v22[0] = (WTF::StringImpl *)&v24;
  v22[1] = (WTF::StringImpl *)SlowCase;
  v22[2] = this;
  v22[3] = (WTF::StringImpl *)&v26;
  v22[4] = (WTF::StringImpl *)&v25;
  v22[5] = (WTF::StringImpl *)&v23;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v18, this, v14, 6, (uint64_t)v22);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v23, v16);
  *((_DWORD *)v18 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPopStateEvent>,(WebCore::DOMConstructorID)473>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3784);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSPopStateEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPopStateEvent::s_info + ~((_QWORD)&WebCore::JSPopStateEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPopStateEvent::s_info + ~((_QWORD)&WebCore::JSPopStateEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPopStateEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPopStateEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPopStateEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSPopStateEventPrototype::create((WebCore::JSPopStateEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSPopStateEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSPopStateEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3784) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPopStateEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPopStateEventPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPopStateEvent>,(WebCore::DOMConstructorID)473>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPopStateEvent_state(JSC::JSGlobalObject *a1, JSCell *a2)
{
  return WebCore::JSPopStateEvent::state(a2, a1);
}

uint64_t WebCore::jsPopStateEvent_hasUAVisualTransition(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 97))
    return 7;
  else
    return 6;
}

uint64_t WebCore::JSPopStateEvent::subspaceForImpl(WebCore::JSPopStateEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3864);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 3864);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 40, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 3864);
    *(_QWORD *)(v8 + 3864) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 3864);
  *(_QWORD *)(v3 + 3864) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

WebCore::JSPositionCallback *WebCore::JSPositionCallback::JSPositionCallback(WebCore::JSPositionCallback *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::ScriptExecutionContext *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *Allocator;
  _QWORD *v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  *((_DWORD *)this + 4) = 1;
  *(_QWORD *)this = &off_1E33A18C0;
  *((_QWORD *)this + 1) = 0;
  WebCore::ContextDestructionObserver::observeContext(this, v6);
  *(_QWORD *)this = &off_1E32CE260;
  v7 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
  v8 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  Allocator = 0;
  if (a3)
  {
    v16 = v8;
    if ((a3 & 8) != 0)
      v12 = ((unint64_t)a3 - 112) | 1;
    else
      v12 = (unint64_t)a3 & 0xFFFFFFFFFFFFC000;
    if ((v12 & 1) != 0)
      v13 = v12 + 47;
    else
      v13 = *(_QWORD *)v12 + 32;
    Allocator = *(_QWORD **)(v13 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v13 + 16) = *Allocator;
    *Allocator = a3;
    Allocator[1] = 0;
    Allocator[2] = 0;
    v8 = v16;
  }
  *v7 = Allocator;
  v7[1] = &off_1E32268A0;
  if (a2)
  {
    v17 = v8;
    if ((a2 & 8) != 0)
      v14 = (a2 - 112) | 1;
    else
      v14 = a2 & 0xFFFFFFFFFFFFC000;
    if ((v14 & 1) != 0)
      v15 = v14 + 47;
    else
      v15 = *(_QWORD *)v14 + 32;
    v10 = *(_QWORD **)(v15 + 16);
    if (!v10)
      v10 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v15 + 16) = *v10;
    *v10 = a2;
    v10[1] = v7 + 1;
    v10[2] = v17;
  }
  else
  {
    v10 = 0;
  }
  v7[2] = v10;
  *((_QWORD *)this + 3) = v7;
  return this;
}

void WebCore::JSPositionCallback::~JSPositionCallback(WebCore::JSPositionCallback *this, void *a2)
{
  WTF *v2;
  void *v3;

  WebCore::JSAbortAlgorithm::~JSAbortAlgorithm(this, a2);
  WTF::fastFree(v2, v3);
}

uint64_t WebCore::JSPositionCallback::handleEvent(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  JSValue v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  JSC::Structure *v12;
  uint64_t *v13;
  _QWORD *v15;
  BOOL v16[8];
  uint64_t v17;
  WTF *v18;
  _OWORD v19[4];
  uint64_t v20;
  _BYTE v21[8];
  objc_class *v22;

  if (!WebCore::ActiveDOMCallback::canInvokeCallback((WebCore::ActiveDOMCallback *)a1, a2))
    return 2;
  ++*(_DWORD *)(a1 + 16);
  v4 = **(_QWORD **)(a1 + 24);
  if (!v4 || (*(_BYTE *)(v4 + 8) & 3) != 0)
    v5 = 0;
  else
    v5 = *(_QWORD *)v4;
  MEMORY[0x19AEA3294](v21, *(_QWORD *)(v5 + 56));
  v16[0] = 0;
  v17 = 0x800000000;
  v18 = (WTF *)((char *)v19 + 8);
  memset(v19, 0, sizeof(v19));
  v20 = 0;
  if (!a2)
  {
    v7 = 0;
    v6.super.isa = (Class)2;
    goto LABEL_10;
  }
  v6.super.isa = (Class)WebCore::wrap<WebCore::GeolocationPosition>(v5, v5, (WTF *)a2);
  v7 = v17;
  if (v18 == (WTF *)((char *)v19 + 8))
  {
LABEL_10:
    *((JSValue *)v19 + v7 + 1) = v6;
    LODWORD(v17) = v7 + 1;
    goto LABEL_11;
  }
  v16[0] = JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v17, v6) == 1;
LABEL_11:
  v22 = 0;
  v9 = *(uint64_t **)(a1 + 24);
  v10 = *v9;
  if (*v9
    && (*(_BYTE *)(v10 + 8) & 3) == 0
    && *(_QWORD *)v10
    && ((v11 = v9[2]) == 0 || (*(_BYTE *)(v11 + 8) & 3) != 0 ? (v12 = 0) : (v12 = *(JSC::Structure **)v11),
        WebCore::JSCallbackData::invokeCallback(*(JSC::JSGlobalObject **)v10, v12, 10, (uint64_t)v16, 0, 0, (uint64_t *)&v22), (v6.super.isa = v22) != 0))
  {
    WebCore::reportException(*(JSC::JSGlobalObject **)(16 * (***(_DWORD ***)(*(_QWORD *)(a1 + 24) + 16) & 0xFFFFFFFE) + 0x28), (uint64_t)v22, 0, 0, 0);
    v8 = 1;
  }
  else
  {
    v8 = 0;
  }
  v13 = *(uint64_t **)&v19[0];
  if (*(_QWORD *)&v19[0])
  {
    v22 = (objc_class *)&v17;
    v15 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v19[0], (uint64_t *)&v22);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v13, v15);
  }
  if (v18 != (WTF *)((char *)v19 + 8) && v18)
    WTF::fastFree(v18, v6.super.isa);
  MEMORY[0x19AEA32A0](v21);
  if (*(_DWORD *)(a1 + 16) == 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  else
    --*(_DWORD *)(a1 + 16);
  return v8;
}

WebCore::JSPositionErrorCallback *WebCore::JSPositionErrorCallback::JSPositionErrorCallback(WebCore::JSPositionErrorCallback *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::ScriptExecutionContext *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *Allocator;
  _QWORD *v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  *((_DWORD *)this + 4) = 1;
  *(_QWORD *)this = &off_1E33A18C0;
  *((_QWORD *)this + 1) = 0;
  WebCore::ContextDestructionObserver::observeContext(this, v6);
  *(_QWORD *)this = &off_1E32CE2A8;
  v7 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
  v8 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  Allocator = 0;
  if (a3)
  {
    v16 = v8;
    if ((a3 & 8) != 0)
      v12 = ((unint64_t)a3 - 112) | 1;
    else
      v12 = (unint64_t)a3 & 0xFFFFFFFFFFFFC000;
    if ((v12 & 1) != 0)
      v13 = v12 + 47;
    else
      v13 = *(_QWORD *)v12 + 32;
    Allocator = *(_QWORD **)(v13 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v13 + 16) = *Allocator;
    *Allocator = a3;
    Allocator[1] = 0;
    Allocator[2] = 0;
    v8 = v16;
  }
  *v7 = Allocator;
  v7[1] = &off_1E32268A0;
  if (a2)
  {
    v17 = v8;
    if ((a2 & 8) != 0)
      v14 = (a2 - 112) | 1;
    else
      v14 = a2 & 0xFFFFFFFFFFFFC000;
    if ((v14 & 1) != 0)
      v15 = v14 + 47;
    else
      v15 = *(_QWORD *)v14 + 32;
    v10 = *(_QWORD **)(v15 + 16);
    if (!v10)
      v10 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v15 + 16) = *v10;
    *v10 = a2;
    v10[1] = v7 + 1;
    v10[2] = v17;
  }
  else
  {
    v10 = 0;
  }
  v7[2] = v10;
  *((_QWORD *)this + 3) = v7;
  return this;
}

void WebCore::JSPositionErrorCallback::~JSPositionErrorCallback(WebCore::JSPositionErrorCallback *this, void *a2)
{
  WTF *v2;
  void *v3;

  WebCore::JSAbortAlgorithm::~JSAbortAlgorithm(this, a2);
  WTF::fastFree(v2, v3);
}

uint64_t WebCore::JSPositionErrorCallback::handleEvent(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  JSC::Structure *v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v14;
  _BYTE v15[8];
  uint64_t v16;
  WTF *v17;
  _OWORD v18[4];
  uint64_t v19;
  _BYTE v20[8];
  uint64_t *v21;

  if (!WebCore::ActiveDOMCallback::canInvokeCallback((WebCore::ActiveDOMCallback *)a1, a2))
    return 2;
  ++*(_DWORD *)(a1 + 16);
  v4 = **(_QWORD **)(a1 + 24);
  if (!v4 || (*(_BYTE *)(v4 + 8) & 3) != 0)
    v5 = 0;
  else
    v5 = *(_QWORD *)v4;
  MEMORY[0x19AEA3294](v20, *(_QWORD *)(v5 + 56));
  v15[0] = 0;
  v17 = (WTF *)((char *)v18 + 8);
  memset(v18, 0, sizeof(v18));
  v19 = 0;
  v6 = (void *)WebCore::wrap<WebCore::GeolocationPositionError>(v5, v5, (WTF *)a2);
  *((_QWORD *)&v18[0] + 1) = v6;
  v16 = 0x800000001;
  v21 = 0;
  v7 = *(uint64_t **)(a1 + 24);
  v8 = *v7;
  if (*v7
    && (*(_BYTE *)(v8 + 8) & 3) == 0
    && *(_QWORD *)v8
    && ((v9 = v7[2]) == 0 || (*(_BYTE *)(v9 + 8) & 3) != 0 ? (v10 = 0) : (v10 = *(JSC::Structure **)v9),
        WebCore::JSCallbackData::invokeCallback(*(JSC::JSGlobalObject **)v8, v10, 10, (uint64_t)v15, 0, 0, (uint64_t *)&v21), (v6 = v21) != 0))
  {
    WebCore::reportException(*(JSC::JSGlobalObject **)(16 * (***(_DWORD ***)(*(_QWORD *)(a1 + 24) + 16) & 0xFFFFFFFE) + 0x28), (uint64_t)v21, 0, 0, 0);
    v11 = 1;
  }
  else
  {
    v11 = 0;
  }
  v12 = *(uint64_t **)&v18[0];
  if (*(_QWORD *)&v18[0])
  {
    v21 = &v16;
    v14 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v18[0], (uint64_t *)&v21);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v12, v14);
  }
  if (v17 != (WTF *)((char *)v18 + 8) && v17)
    WTF::fastFree(v17, v6);
  MEMORY[0x19AEA32A0](v20);
  if (*(_DWORD *)(a1 + 16) == 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  else
    --*(_DWORD *)(a1 + 16);
  return v11;
}

unint64_t WebCore::convertDictionary<WebCore::PositionOptions>@<X0>(JSC::JSCell *this@<X1>, unint64_t result@<X0>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  BOOL v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t Object;
  JSC::Structure *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  JSC::VM *v12;
  double v13;
  WTF::StringImpl *v14;
  JSC::VM *v15;
  double v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  int v20;
  JSC::VM *v21;
  double v22;
  JSC::VM *v23;
  BOOL v24;
  int v25;
  uint64_t v26;
  int *v27;
  int v28;
  double v29;
  double v30;
  __int16 v31;
  char v32;
  WTF::StringImpl *v33;

  v4 = *(JSC::VM **)(result + 56);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v5 = 0;
    LODWORD(v6) = 0;
    goto LABEL_36;
  }
  v7 = (JSC::JSGlobalObject *)result;
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = JSC::throwTypeError();
    goto LABEL_52;
  }
  v9 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v11 = JSC::JSObject::get(v9, v7, (unint64_t)v33);
  if (v33)
  {
    if (*(_DWORD *)v33 == 2)
      WTF::StringImpl::destroy(v33, v10);
    else
      *(_DWORD *)v33 -= 2;
  }
  if (*((_DWORD *)v4 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    if ((result & 1) != 0)
      goto LABEL_52;
  }
  if (v11 != 10)
  {
    v12 = (JSC::VM *)*((_QWORD *)v7 + 7);
    if (v11 >= 0xFFFE000000000000)
    {
      v24 = (_DWORD)v11 == 0;
    }
    else
    {
      *(_QWORD *)&v13 = v11 - 0x2000000000000;
      if (v11 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        v5 = v13 > 0.0 || v13 < 0.0;
LABEL_15:
        if (*((_DWORD *)v12 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
          if ((result & 1) != 0)
            goto LABEL_52;
        }
        goto LABEL_16;
      }
      if ((v11 & 0xFFFE000000000002) != 0)
      {
        v5 = v11 == 7;
        goto LABEL_15;
      }
      v25 = *(unsigned __int8 *)(v11 + 5);
      if (v25 == 3)
      {
        v28 = *(_DWORD *)(v11 + 8);
      }
      else
      {
        if (v25 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            v5 = 1;
            goto LABEL_15;
          }
          v24 = *(_QWORD *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28) == (_QWORD)v7;
          goto LABEL_86;
        }
        v26 = *(_QWORD *)(v11 + 8);
        if ((v26 & 1) != 0)
          v27 = (int *)(v11 + 16);
        else
          v27 = (int *)(v26 + 4);
        v28 = *v27;
      }
      v24 = v28 == 0;
    }
LABEL_86:
    v5 = !v24;
    goto LABEL_15;
  }
  v5 = 0;
LABEL_16:
  WTF::AtomStringImpl::addLiteral();
  v6 = JSC::JSObject::get(v9, v7, (unint64_t)v33);
  if (v33)
  {
    if (*(_DWORD *)v33 == 2)
      WTF::StringImpl::destroy(v33, v14);
    else
      *(_DWORD *)v33 -= 2;
  }
  if (*((_DWORD *)v4 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    if ((result & 1) != 0)
      goto LABEL_52;
  }
  if (v6 == 10)
    goto LABEL_21;
  v33 = (WTF::StringImpl *)v6;
  if (v6 >= 0xFFFE000000000000 && (v6 & 0x80000000) == 0)
    goto LABEL_31;
  v15 = (JSC::VM *)*((_QWORD *)v7 + 7);
  if (v6 >= 0xFFFE000000000000)
  {
    v16 = (double)(int)v6;
  }
  else if (v6 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v23 = (JSC::VM *)*((_QWORD *)v7 + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, v7);
    v15 = v23;
  }
  else
  {
    *(_QWORD *)&v16 = v6 - 0x2000000000000;
  }
  if (*((_DWORD *)v15 + 20))
  {
    v29 = v16;
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v15);
    v16 = v29;
    if ((result & 1) != 0)
      goto LABEL_52;
  }
  if (v16 >= 4294967300.0)
  {
    LODWORD(v6) = -1;
    goto LABEL_31;
  }
  if (v16 <= 0.0)
LABEL_21:
    LODWORD(v6) = 0;
  else
    LODWORD(v6) = v16;
LABEL_31:
  WTF::AtomStringImpl::addLiteral();
  v17 = v33;
  result = JSC::JSObject::get(v9, v7, (unint64_t)v33);
  v19 = result;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      result = WTF::StringImpl::destroy(v17, v18);
    else
      *(_DWORD *)v17 -= 2;
  }
  if (*((_DWORD *)v4 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    if ((result & 1) != 0)
      goto LABEL_52;
  }
  if (v19 == 10)
    goto LABEL_36;
  v33 = (WTF::StringImpl *)v19;
  if (v19 >= 0xFFFE000000000000 && (v19 & 0x80000000) == 0)
    goto LABEL_37;
  v21 = (JSC::VM *)*((_QWORD *)v7 + 7);
  if (v19 >= 0xFFFE000000000000)
  {
    v22 = (double)(int)v19;
  }
  else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    result = JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v33, v7);
  }
  else
  {
    *(_QWORD *)&v22 = v19 - 0x2000000000000;
  }
  if (*((_DWORD *)v21 + 20))
  {
    v30 = v22;
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v21);
    v22 = v30;
    if ((result & 1) != 0)
    {
LABEL_52:
      v20 = 1;
      goto LABEL_38;
    }
  }
  if (v22 < 4294967300.0)
  {
    if (v22 <= 0.0)
      LODWORD(v19) = 0;
    else
      LODWORD(v19) = v22;
    goto LABEL_37;
  }
LABEL_36:
  LODWORD(v19) = -1;
LABEL_37:
  v20 = 0;
  *(_BYTE *)a3 = v5;
  *(_WORD *)(a3 + 1) = v31;
  *(_BYTE *)(a3 + 3) = v32;
  *(_DWORD *)(a3 + 4) = v19;
  *(_DWORD *)(a3 + 8) = v6;
LABEL_38:
  *(_DWORD *)(a3 + 12) = v20;
  return result;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::PredefinedColorSpace>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::PredefinedColorSpace)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::PredefinedColorSpace)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::PredefinedColorSpace)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::PredefinedColorSpace)::$_0::operator() const(void)::impl;
    *(_QWORD *)algn_1EE2F4978 = &WebCore::convertEnumerationToString(WebCore::PredefinedColorSpace)::$_1::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::PredefinedColorSpace)::values[a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::PredefinedColorSpace>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  int v9;
  int v10;
  char **v13;
  uint16x8_t v14;
  uint16x8_t v15;
  uint64_t v19;
  unint64_t v20;

  v3 = a1;
  v20 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
LABEL_34:
        v10 = 0;
        v9 = 0;
        return v10 | (v9 << 8);
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v20, a1);
  v4 = v19;
  if (!v19)
    goto LABEL_34;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "display-p3" && v7 == 10)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 100 || *(_QWORD *)(v6 + 1) != 0x702D79616C707369 || *(_QWORD *)(v6 + 2) != 0x33702D79616C7073)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 100)
        goto LABEL_16;
      v14 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 2), (int16x8_t)xmmword_1968BFCB0);
      v14.i16[0] = vminvq_u16(v14);
      if (!v14.i32[0])
        goto LABEL_16;
      v15 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 4), (int16x8_t)xmmword_1968BFCC0);
      v15.i16[0] = vminvq_u16(v15);
      if (!v15.i32[0])
        goto LABEL_16;
    }
LABEL_38:
    v13 = &WebCore::parseEnumerationFromString<WebCore::PredefinedColorSpace>(WTF::String const&)::mappings;
    goto LABEL_39;
  }
  if (v6 == "display-p3" && v7 == 10)
    goto LABEL_38;
  if (v6 == "srgb" || v7 != 4)
  {
    if (v7 != 4 || v6 != "srgb")
      goto LABEL_16;
    goto LABEL_30;
  }
  if ((v5 & 4) == 0)
  {
    if (*(_WORD *)v6 != 115)
      goto LABEL_16;
    if (*((_DWORD *)v6 + 1) != 6422631 || *(_DWORD *)(v6 + 2) != 6750322)
      goto LABEL_16;
    goto LABEL_30;
  }
  if (*v6 != 115 || *(_WORD *)(v6 + 1) != 26482 || *((_WORD *)v6 + 1) != 25191)
  {
LABEL_16:
    v9 = 0;
    v10 = 0;
    goto LABEL_40;
  }
LABEL_30:
  v13 = &off_1E32CE2F8;
LABEL_39:
  v10 = *((unsigned __int8 *)v13 + 16);
  v9 = 1;
LABEL_40:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v10 | (v9 << 8);
}

uint64_t WebCore::JSProcessingInstruction::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCharacterData::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCharacterData::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCharacterData::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSProcessingInstructionPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSProcessingInstructionPrototype::create(WebCore::JSProcessingInstructionPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSProcessingInstruction::s_info, &WebCore::JSProcessingInstructionPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSProcessingInstruction>,(WebCore::DOMConstructorID)474>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3792);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCharacterData>,(WebCore::DOMConstructorID)418>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSProcessingInstruction>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSProcessingInstruction::s_info
         + ~((_QWORD)&WebCore::JSProcessingInstruction::s_info << 32)) ^ (((unint64_t)&WebCore::JSProcessingInstruction::s_info
                                                                         + ~((_QWORD)&WebCore::JSProcessingInstruction::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSProcessingInstruction::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSProcessingInstruction::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCharacterData::prototype((WebCore::JSCharacterData *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSProcessingInstructionPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSProcessingInstructionPrototype::create((WebCore::JSProcessingInstructionPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSProcessingInstruction::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSProcessingInstruction::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3792) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsProcessingInstructionConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSProcessingInstructionPrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSProcessingInstruction>,(WebCore::DOMConstructorID)474>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsProcessingInstruction_target(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

unint64_t WebCore::jsProcessingInstruction_sheet(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 144);
  if (v2)
    return WebCore::wrap<WebCore::StyleSheet>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::JSProcessingInstruction::subspaceForImpl(WebCore::JSProcessingInstruction *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3872);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 3872);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 3872);
    *(_QWORD *)(v8 + 3872) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 3872);
  *(_QWORD *)(v3 + 3872) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSProgressEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::JSCell *v2;
  JSC::VM *v3;
  unint64_t v4;
  JSC::JSGlobalObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t Object;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSC::VM *v18;
  double v19;
  _BOOL4 v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  _BOOL4 v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  unint64_t v29;
  JSC::VM *v30;
  double v31;
  _BOOL4 v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  _BOOL4 v36;
  JSC::VM *v37;
  double v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  unint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  _BOOL4 v44;
  _BOOL4 v45;
  JSC::VM *v46;
  double v47;
  double v48;
  double v49;
  double v50;
  char v51;
  WTF::StringImpl *v52;
  unint64_t v53;
  WTF::StringImpl *v54;
  uint64_t v55;
  int v56;
  int v57;
  JSC::VM *v58;
  uint64_t v59;
  unint64_t v60;
  JSCell *v61;
  JSC::JSCell *v62;
  JSC::JSGlobalObject *v63;
  JSC::JSObject *v64;
  JSC::JSGlobalObject *v65;
  WebCore::JSProgressEvent *v66;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v68;
  JSC::Structure *v69;
  unint64_t SubclassStructure;
  _DWORD *v71;
  JSValue v73;
  char hasExceptionsAfterHandlingTraps;
  char v75;
  _BOOL4 v76;
  JSC::JSCell *v77;
  unint64_t v78;
  JSC::VM *v79;
  BOOL v80;
  int v81;
  uint64_t v82;
  int *v83;
  int v84;
  BOOL v85;
  int v86;
  uint64_t v87;
  int *v88;
  int v89;
  BOOL v90;
  int v91;
  uint64_t v92;
  int *v93;
  int v94;
  BOOL v95;
  int v96;
  uint64_t v97;
  int *v98;
  int v99;
  double v100;
  double v101;
  _BOOL4 v102;
  _BOOL4 v103;
  JSC *v104;
  _BOOL4 v105;
  uint64_t v106;
  WTF::StringImpl *v107;
  int v108;
  JSC::VM *v109;
  unint64_t v110;

  v5 = a1;
  v6 = *((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v73.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v6, v5, v73);
  }
  v7 = a2;
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 48);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, v9, (uint64_t)&v107);
  v10 = v108;
  if (!v108)
  {
    v11 = 0xFFFE000000000002;
    v104 = v5;
    v106 = v8;
    if ((unint64_t)(*(int *)(v7 + 32) - 3) < 0xFFFFFFFFFFFFFFFELL)
    {
      v2 = *(JSC::JSCell **)(v7 + 56);
      v3 = (JSC::VM *)*((_QWORD *)v5 + 7);
      v109 = v3;
      if (((unint64_t)v2 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v5 = (JSC::JSGlobalObject *)v7;
        v7 = v6;
        v6 = 0;
        v105 = 0;
        v12 = 0;
        v13 = 0;
        v14 = 0;
LABEL_6:
        v11 = 0;
        goto LABEL_102;
      }
      if (((unint64_t)v2 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v2)) == 0)
      {
        JSC::throwTypeError();
      }
      else
      {
        v4 = Object;
        WTF::AtomStringImpl::addLiteral();
        v16 = (WTF::StringImpl *)v110;
        v13 = JSC::JSObject::get((JSC::Structure *)v4, v5, v110);
        if (v16)
        {
          if (*(_DWORD *)v16 == 2)
            WTF::StringImpl::destroy(v16, v17);
          else
            *(_DWORD *)v16 -= 2;
        }
        if (!*((_DWORD *)v3 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) == 0)
        {
          if (v13 == 10)
          {
            v105 = 0;
            goto LABEL_21;
          }
          v18 = (JSC::VM *)*((_QWORD *)v5 + 7);
          if (v13 >= 0xFFFE000000000000)
            goto LABEL_167;
          *(_QWORD *)&v19 = v13 - 0x2000000000000;
          if (v13 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            v20 = v19 > 0.0 || v19 < 0.0;
            goto LABEL_20;
          }
          if ((v13 & 0xFFFE000000000002) != 0)
          {
            v20 = v13 == 7;
            goto LABEL_20;
          }
          v81 = *(unsigned __int8 *)(v13 + 5);
          if (v81 == 3)
          {
            v84 = *(_DWORD *)(v13 + 8);
          }
          else
          {
            if (v81 != 2)
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v80 = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)v5;
                goto LABEL_221;
              }
              v20 = 1;
              goto LABEL_20;
            }
            v82 = *(_QWORD *)(v13 + 8);
            if ((v82 & 1) != 0)
              v83 = (int *)(v13 + 16);
            else
              v83 = (int *)(v82 + 4);
            v84 = *v83;
          }
          v80 = v84 == 0;
          goto LABEL_221;
        }
      }
LABEL_129:
      v61 = 0;
LABEL_119:
      v10 = v108;
      goto LABEL_120;
    }
    v5 = (JSC::JSGlobalObject *)v7;
    v7 = v6;
    v6 = 0;
    v105 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v11 = 0;
    while (1)
    {
LABEL_102:
      if (!v108)
      {
        v51 = v14 | BYTE3(v6);
        v52 = v107;
        v107 = 0;
        v53 = bmalloc::api::isoAllocate();
        WTF::MonotonicTime::now((WTF::MonotonicTime *)v53);
        *(_QWORD *)(v53 + 8) = 0;
        if (v105)
          v56 = 2752514;
        else
          v56 = 2752512;
        v57 = (v6 >> 13) & 8 | v56 | v11 | (v52 != 0) | *(_DWORD *)(v53 + 20) & 0xFFC00000;
        *(_DWORD *)(v53 + 16) = 1;
        *(_DWORD *)(v53 + 20) = v57;
        if (v52)
        {
          *(_DWORD *)v52 += 2;
          v57 = *(_DWORD *)(v53 + 20);
        }
        v58 = (JSC::VM *)v7;
        *(_QWORD *)(v53 + 24) = v52;
        *(_QWORD *)(v53 + 32) = 0;
        *(_QWORD *)(v53 + 40) = 0;
        *(_QWORD *)(v53 + 48) = 0;
        *(_QWORD *)(v53 + 56) = v55;
        *(_DWORD *)(v53 + 20) = v57 | 0x4000;
        *(_QWORD *)(v53 + 64) = 0;
        *(_QWORD *)v53 = off_1E33A6BE0;
        *(_BYTE *)(v53 + 72) = v51;
        *(_QWORD *)(v53 + 80) = v12;
        *(_QWORD *)(v53 + 88) = v13;
        v110 = v53;
        if (v52)
        {
          if (*(_DWORD *)v52 == 2)
          {
            WTF::StringImpl::destroy(v52, v54);
            if (*(void (***)(WebCore::ProgressEvent *__hidden))v53 != off_1E33A6BE0)
            {
              __break(0xC471u);
              JUMPOUT(0x194E11FA0);
            }
          }
          else
          {
            *(_DWORD *)v52 -= 2;
          }
        }
        v59 = *(_QWORD *)(v106 + 40);
        v60 = WebCore::getDOMStructure<WebCore::JSProgressEvent>(*(WebCore::JSProgressEvent **)(v59 + 56), (JSC::VM *)v59);
        v61 = (JSCell *)WebCore::JSProgressEvent::create(v60, (JSC::VM *)v59, (uint64_t *)&v110);
        WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*(_QWORD *)(v59 + 3320), v53, (uint64_t)v61);
        v62 = (JSC::JSCell *)*((_QWORD *)v5 + 5);
        if (((unint64_t)v62 & 0xFFFE000000000002) == 0)
        {
          v63 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v62);
          if (v63)
          {
            v65 = v63;
            if (v63 != *((JSC::JSGlobalObject **)v5 + 3))
            {
              v66 = (WebCore::JSProgressEvent *)*((_QWORD *)v104 + 7);
              FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(v104, v63, v64);
              if (!*((_DWORD *)v66 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v66) & 1) == 0)
              {
                v68 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSProgressEvent>(v66, FunctionRealm);
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(v104, v65, v68, v69);
                if (!*((_DWORD *)v66 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v66) & 1) == 0)
                  JSC::JSObject::setStructure(v61, v66, SubclassStructure);
              }
            }
          }
        }
        if (*((_DWORD *)v58 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v58) & 1) != 0)
          v61 = 0;
        v71 = (_DWORD *)v110;
        v110 = 0;
        if (v71)
        {
          if (v71[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v71 + 8))(v71);
          else
            --v71[4];
        }
        goto LABEL_119;
      }
      v18 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_167:
      v80 = (_DWORD)v13 == 0;
LABEL_221:
      v20 = !v80;
LABEL_20:
      v105 = v20;
      if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
        goto LABEL_129;
LABEL_21:
      WTF::AtomStringImpl::addLiteral();
      v21 = (WTF::StringImpl *)v110;
      v23 = JSC::JSObject::get((JSC::Structure *)v4, v5, v110);
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, v22);
        else
          *(_DWORD *)v21 -= 2;
      }
      if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
        goto LABEL_129;
      if (v23 == 10)
      {
        v103 = 0;
        goto LABEL_32;
      }
      v24 = (JSC::VM *)*((_QWORD *)v5 + 7);
      if (v23 >= 0xFFFE000000000000)
        break;
      *(_QWORD *)&v25 = v23 - 0x2000000000000;
      if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v23 & v11) != 0)
        {
          v26 = v23 == 7;
          goto LABEL_31;
        }
        v86 = *(unsigned __int8 *)(v23 + 5);
        if (v86 == 3)
        {
          v89 = *(_DWORD *)(v23 + 8);
          goto LABEL_209;
        }
        if (v86 == 2)
        {
          v87 = *(_QWORD *)(v23 + 8);
          if ((v87 & 1) != 0)
            v88 = (int *)(v23 + 16);
          else
            v88 = (int *)(v87 + 4);
          v89 = *v88;
LABEL_209:
          v85 = v89 == 0;
        }
        else
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_211:
            v26 = 1;
            goto LABEL_31;
          }
          v85 = *(_QWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x28) == (_QWORD)v5;
        }
LABEL_225:
        v26 = !v85;
        goto LABEL_31;
      }
      if (v25 > 0.0)
        goto LABEL_211;
      v26 = v25 < 0.0;
LABEL_31:
      v103 = v26;
      if (*((_DWORD *)v24 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v24) & 1) != 0)
        goto LABEL_129;
LABEL_32:
      WTF::AtomStringImpl::addLiteral();
      v27 = (WTF::StringImpl *)v110;
      v29 = JSC::JSObject::get((JSC::Structure *)v4, v5, v110);
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          WTF::StringImpl::destroy(v27, v28);
        else
          *(_DWORD *)v27 -= 2;
      }
      if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
        goto LABEL_129;
      if (v29 == 10)
      {
        v102 = 0;
        goto LABEL_43;
      }
      v30 = (JSC::VM *)*((_QWORD *)v5 + 7);
      if (v29 >= 0xFFFE000000000000)
      {
        v90 = (_DWORD)v29 == 0;
        goto LABEL_229;
      }
      *(_QWORD *)&v31 = v29 - 0x2000000000000;
      if (v29 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v29 & v11) != 0)
        {
          v32 = v29 == 7;
          goto LABEL_42;
        }
        v91 = *(unsigned __int8 *)(v29 + 5);
        if (v91 == 3)
        {
          v94 = *(_DWORD *)(v29 + 8);
        }
        else
        {
          if (v91 != 2)
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v29 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_215:
              v32 = 1;
              goto LABEL_42;
            }
            v90 = *(_QWORD *)(16 * (*(_DWORD *)v29 & 0xFFFFFFFE) + 0x28) == (_QWORD)v5;
            goto LABEL_229;
          }
          v92 = *(_QWORD *)(v29 + 8);
          if ((v92 & 1) != 0)
            v93 = (int *)(v29 + 16);
          else
            v93 = (int *)(v92 + 4);
          v94 = *v93;
        }
        v90 = v94 == 0;
LABEL_229:
        v32 = !v90;
        goto LABEL_42;
      }
      if (v31 > 0.0)
        goto LABEL_215;
      v32 = v31 < 0.0;
LABEL_42:
      v102 = v32;
      if (*((_DWORD *)v30 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
        goto LABEL_129;
LABEL_43:
      WTF::AtomStringImpl::addLiteral();
      v33 = (WTF::StringImpl *)v110;
      v35 = JSC::JSObject::get((JSC::Structure *)v4, v5, v110);
      if (v33)
      {
        if (*(_DWORD *)v33 == 2)
          WTF::StringImpl::destroy(v33, v34);
        else
          *(_DWORD *)v33 -= 2;
      }
      if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
        goto LABEL_129;
      if (v35 == 10)
      {
        v36 = 0;
        goto LABEL_54;
      }
      v37 = (JSC::VM *)*((_QWORD *)v5 + 7);
      if (v35 >= 0xFFFE000000000000)
      {
        v95 = (_DWORD)v35 == 0;
        goto LABEL_233;
      }
      *(_QWORD *)&v38 = v35 - 0x2000000000000;
      if (v35 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v35 & v11) != 0)
        {
          v36 = v35 == 7;
          goto LABEL_53;
        }
        v96 = *(unsigned __int8 *)(v35 + 5);
        if (v96 == 3)
        {
          v99 = *(_DWORD *)(v35 + 8);
        }
        else
        {
          if (v96 != 2)
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v35 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_219:
              v36 = 1;
              goto LABEL_53;
            }
            v95 = *(_QWORD *)(16 * (*(_DWORD *)v35 & 0xFFFFFFFE) + 0x28) == (_QWORD)v5;
            goto LABEL_233;
          }
          v97 = *(_QWORD *)(v35 + 8);
          if ((v97 & 1) != 0)
            v98 = (int *)(v35 + 16);
          else
            v98 = (int *)(v97 + 4);
          v99 = *v98;
        }
        v95 = v99 == 0;
LABEL_233:
        v36 = !v95;
        goto LABEL_53;
      }
      if (v38 > 0.0)
        goto LABEL_219;
      v36 = v38 < 0.0;
LABEL_53:
      if (*((_DWORD *)v37 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v37) & 1) != 0)
        goto LABEL_129;
LABEL_54:
      WTF::AtomStringImpl::addLiteral();
      v39 = (WTF::StringImpl *)v110;
      v41 = JSC::JSObject::get((JSC::Structure *)v4, v5, v110);
      if (v39)
      {
        if (*(_DWORD *)v39 == 2)
          WTF::StringImpl::destroy(v39, v40);
        else
          *(_DWORD *)v39 -= 2;
      }
      if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
        goto LABEL_129;
      if (v41 != 10)
      {
        v110 = v41;
        if (v41 >= 0xFFFE000000000000 && (v41 & 0x80000000) == 0)
        {
          v12 = v41;
          goto LABEL_63;
        }
        v46 = (JSC::VM *)*((_QWORD *)v5 + 7);
        if (v41 >= 0xFFFE000000000000)
        {
          v47 = (double)(int)v41;
        }
        else if (v41 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v76 = v36;
          v77 = v2;
          v78 = v9;
          v79 = (JSC::VM *)*((_QWORD *)v5 + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v110, v5);
          v46 = v79;
          v9 = v78;
          v2 = v77;
          v36 = v76;
        }
        else
        {
          *(_QWORD *)&v47 = v41 - 0x2000000000000;
        }
        if (*((_DWORD *)v46 + 20))
        {
          v100 = v47;
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v46);
          v47 = v100;
          if ((hasExceptionsAfterHandlingTraps & 1) != 0)
            goto LABEL_129;
        }
        if (fabs(v47) != INFINITY)
        {
          v48 = fmod(trunc(v47), 1.84467441e19);
          if (v48 >= 0.0)
            v12 = (unint64_t)v48;
          else
            v12 = -(uint64_t)(unint64_t)-v48;
          goto LABEL_63;
        }
      }
      v12 = 0;
LABEL_63:
      WTF::AtomStringImpl::addLiteral();
      v42 = (WTF::StringImpl *)v110;
      v4 = JSC::JSObject::get((JSC::Structure *)v4, v5, v110);
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v43);
        else
          *(_DWORD *)v42 -= 2;
      }
      if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
        goto LABEL_129;
      if (v4 == 10)
      {
        v5 = (JSC::JSGlobalObject *)v7;
        v13 = 0;
        v45 = v102;
        v44 = v103;
        if (v36)
          goto LABEL_69;
LABEL_99:
        v7 = v6;
        v14 = 0;
        if (v45)
          goto LABEL_100;
LABEL_70:
        v6 = 0;
        if (v44)
          goto LABEL_101;
        v11 = 0;
      }
      else
      {
        v110 = v4;
        if (v4 < 0xFFFE000000000000 || (v4 & 0x80000000) != 0)
        {
          v3 = (JSC::VM *)*((_QWORD *)v5 + 7);
          if (v4 >= 0xFFFE000000000000)
          {
            v49 = (double)(int)v4;
          }
          else if (v4 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v110, v5);
          }
          else
          {
            *(_QWORD *)&v49 = v4 - 0x2000000000000;
          }
          if (*((_DWORD *)v3 + 20))
          {
            v101 = v49;
            v75 = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
            v49 = v101;
            if ((v75 & 1) != 0)
              goto LABEL_129;
          }
          if (fabs(v49) == INFINITY)
          {
            v5 = (JSC::JSGlobalObject *)v7;
            v13 = 0;
          }
          else
          {
            v50 = fmod(trunc(v49), 1.84467441e19);
            v5 = (JSC::JSGlobalObject *)v7;
            if (v50 >= 0.0)
              v13 = (unint64_t)v50;
            else
              v13 = -(uint64_t)(unint64_t)-v50;
          }
        }
        else
        {
          v5 = (JSC::JSGlobalObject *)v7;
          v13 = v4;
        }
        v45 = v102;
        v44 = v103;
        if (!v36)
          goto LABEL_99;
LABEL_69:
        v7 = v6;
        v14 = 1;
        if (!v45)
          goto LABEL_70;
LABEL_100:
        v6 = 0x10000;
        if (!v44)
          goto LABEL_6;
LABEL_101:
        v11 = 4;
      }
    }
    v85 = (_DWORD)v23 == 0;
    goto LABEL_225;
  }
  v61 = 0;
LABEL_120:
  if (v10 != -1)
    ((void (*)(unint64_t *, WTF::StringImpl **))off_1E32D2930[v10])(&v110, &v107);
  return v61;
}

uint64_t WebCore::JSProgressEvent::prototype(WebCore::JSProgressEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  return *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSProgressEvent>(this, a2) + 48);
}

uint64_t WebCore::JSProgressEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSProgressEvent>,(WebCore::DOMConstructorID)475>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3800);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v21) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v21, &WebCore::JSDOMConstructor<WebCore::JSProgressEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v20);
    v10[2848] = v2 + (int)v20;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v21);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSProgressEvent>((WebCore::JSProgressEvent *)a1, (JSC::VM *)a2)
                  + 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3800) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsProgressEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSProgressEventPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSProgressEvent>,(WebCore::DOMConstructorID)475>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsProgressEvent_lengthComputable(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 72))
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsProgressEvent_loaded(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  double v4;
  unint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  v3 = HIDWORD(v2);
  v4 = (double)v2;
  if ((v2 & 0x80000000) != 0)
    v5 = COERCE__INT64((double)v2) + 0x2000000000000;
  else
    v5 = v2 | 0xFFFE000000000000;
  if (v3)
    return *(_QWORD *)&v4 + 0x2000000000000;
  else
    return v5;
}

unint64_t WebCore::jsProgressEvent_total(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  double v4;
  unint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 88);
  v3 = HIDWORD(v2);
  v4 = (double)v2;
  if ((v2 & 0x80000000) != 0)
    v5 = COERCE__INT64((double)v2) + 0x2000000000000;
  else
    v5 = v2 | 0xFFFE000000000000;
  if (v3)
    return *(_QWORD *)&v4 + 0x2000000000000;
  else
    return v5;
}

uint64_t WebCore::JSProgressEvent::subspaceForImpl(WebCore::JSProgressEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3880);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3880))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3880);
    *(_QWORD *)(v8 + 3880) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3880);
  *(_QWORD *)(v3 + 3880) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSPromiseRejectionEvent::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;

  v2 = a2[11];
  if (v2 && *(_BYTE *)(v2 + 24))
  {
    __break(0xC471u);
    JUMPOUT(0x194E12AACLL);
  }
  v3 = *(uint64_t **)(*(_QWORD *)(a1 + 24) + 88);
  if (v3)
  {
    if ((v3[1] & 3) != 0)
      v3 = 0;
    else
      v3 = (uint64_t *)*v3;
  }
  return (*(uint64_t (**)(_QWORD *, uint64_t *))(*a2 + 24))(a2, v3);
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPromiseRejectionEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  int v6;
  JSC::JSCell *v7;
  uint64_t Object;
  JSC::Structure *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  JSC::VM *v12;
  double v13;
  BOOL v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  unint64_t v17;
  BOOL v18;
  JSC::VM *v19;
  double v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  BOOL v24;
  JSC::VM *v25;
  double v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  JSC::JSGlobalObject *v29;
  JSCell *v30;
  int v31;
  int v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  _DWORD *v36;
  void (***v37)(WebCore::PromiseRejectionEvent *__hidden);
  WTF::StringImpl *v38;
  _DWORD *v39;
  WTF::StringImpl *v40;
  uint64_t v41;
  unint64_t v42;
  JSC::JSCell *v43;
  JSC::JSGlobalObject *v44;
  JSC::JSObject *v45;
  JSC::JSGlobalObject *v46;
  WebCore::JSPromiseRejectionEvent *v47;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v49;
  JSC::Structure *v50;
  unint64_t SubclassStructure;
  JSC::VM *v52;
  JSValue v54;
  BOOL v55;
  int v56;
  uint64_t v57;
  int *v58;
  int v59;
  BOOL v60;
  int v61;
  uint64_t v62;
  int *v63;
  int v64;
  BOOL v65;
  int v66;
  uint64_t v67;
  int *v68;
  int v69;
  BOOL v70;
  JSC::VM *v71;
  unint64_t v72;
  _DWORD *v73;
  JSC::Structure *v74;
  WTF::StringImpl *v75;
  WTF::StringImpl *v76;
  unint64_t v77;
  JSC::Structure *v78;
  int v79;
  WTF::StringImpl *v80;
  int v81;
  JSC::VM *v82;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v54.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, a1, v54);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v80);
  v6 = v81;
  if (!v81)
  {
    v71 = v3;
    v7 = *(JSC::JSCell **)(a2 + 56);
    v82 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (((unint64_t)v7 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
LABEL_44:
      WebCore::throwRequiredMemberTypeError((int)a1, (int)&v82, "promise", 8, "PromiseRejectionEventInit", 26, "Promise", 8);
      goto LABEL_45;
    }
    if (((unint64_t)v7 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v7)) == 0)
    {
      JSC::throwTypeError();
      goto LABEL_45;
    }
    v9 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v11 = JSC::JSObject::get(v9, a1, (unint64_t)v76);
    if (v76)
    {
      if (*(_DWORD *)v76 == 2)
        WTF::StringImpl::destroy(v76, v10);
      else
        *(_DWORD *)v76 -= 2;
    }
    if (*((_DWORD *)v82 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v82) & 1) != 0)
    {
LABEL_45:
      v30 = 0;
      v31 = 1;
      v79 = 1;
LABEL_78:
      ((void (*)(unint64_t *, WTF::StringImpl **))off_1E32D2AE0[v31])(&v72, &v76);
LABEL_79:
      v6 = v81;
      goto LABEL_80;
    }
    if (v11 != 10)
    {
      v12 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v11 >= 0xFFFE000000000000)
        goto LABEL_122;
      *(_QWORD *)&v13 = v11 - 0x2000000000000;
      if (v11 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        v14 = v13 > 0.0 || v13 < 0.0;
        goto LABEL_16;
      }
      if ((v11 & 0xFFFE000000000002) != 0)
      {
        v14 = v11 == 7;
        goto LABEL_16;
      }
      v56 = *(unsigned __int8 *)(v11 + 5);
      if (v56 == 3)
      {
        v59 = *(_DWORD *)(v11 + 8);
      }
      else
      {
        if (v56 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v55 = *(_QWORD *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_166;
          }
          v14 = 1;
          goto LABEL_16;
        }
        v57 = *(_QWORD *)(v11 + 8);
        if ((v57 & 1) != 0)
          v58 = (int *)(v11 + 16);
        else
          v58 = (int *)(v57 + 4);
        v59 = *v58;
      }
      v55 = v59 == 0;
      goto LABEL_166;
    }
    v70 = 0;
    while (1)
    {
      WTF::AtomStringImpl::addLiteral();
      v15 = v76;
      v17 = JSC::JSObject::get(v9, a1, (unint64_t)v76);
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v16);
        else
          *(_DWORD *)v15 -= 2;
      }
      if (*((_DWORD *)v82 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v82) & 1) != 0)
        goto LABEL_45;
      if (v17 == 10)
      {
        v18 = 0;
        goto LABEL_28;
      }
      v19 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v17 >= 0xFFFE000000000000)
        break;
      *(_QWORD *)&v20 = v17 - 0x2000000000000;
      if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v17 & 0xFFFE000000000002) != 0)
        {
          v18 = v17 == 7;
          goto LABEL_27;
        }
        v61 = *(unsigned __int8 *)(v17 + 5);
        if (v61 == 3)
        {
          v64 = *(_DWORD *)(v17 + 8);
          goto LABEL_155;
        }
        if (v61 == 2)
        {
          v62 = *(_QWORD *)(v17 + 8);
          if ((v62 & 1) != 0)
            v63 = (int *)(v17 + 16);
          else
            v63 = (int *)(v62 + 4);
          v64 = *v63;
LABEL_155:
          v60 = v64 == 0;
        }
        else
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_157:
            v18 = 1;
            goto LABEL_27;
          }
          v60 = *(_QWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        }
LABEL_170:
        v18 = !v60;
        goto LABEL_27;
      }
      if (v20 > 0.0)
        goto LABEL_157;
      v18 = v20 < 0.0;
LABEL_27:
      if (*((_DWORD *)v19 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
        goto LABEL_45;
LABEL_28:
      WTF::AtomStringImpl::addLiteral();
      v21 = v76;
      v23 = JSC::JSObject::get(v9, a1, (unint64_t)v76);
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, v22);
        else
          *(_DWORD *)v21 -= 2;
      }
      if (*((_DWORD *)v82 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v82) & 1) != 0)
        goto LABEL_45;
      if (v23 == 10)
      {
        v24 = 0;
        goto LABEL_39;
      }
      v25 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v23 >= 0xFFFE000000000000)
      {
        v65 = (_DWORD)v23 == 0;
        goto LABEL_160;
      }
      *(_QWORD *)&v26 = v23 - 0x2000000000000;
      if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v23 & 0xFFFE000000000002) != 0)
        {
          v24 = v23 == 7;
          goto LABEL_38;
        }
        v66 = *(unsigned __int8 *)(v23 + 5);
        if (v66 == 3)
        {
          v69 = *(_DWORD *)(v23 + 8);
        }
        else
        {
          if (v66 != 2)
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_164:
              v24 = 1;
              goto LABEL_38;
            }
            v65 = *(_QWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_160;
          }
          v67 = *(_QWORD *)(v23 + 8);
          if ((v67 & 1) != 0)
            v68 = (int *)(v23 + 16);
          else
            v68 = (int *)(v67 + 4);
          v69 = *v68;
        }
        v65 = v69 == 0;
LABEL_160:
        v24 = !v65;
        goto LABEL_38;
      }
      if (v26 > 0.0)
        goto LABEL_164;
      v24 = v26 < 0.0;
LABEL_38:
      if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
        goto LABEL_45;
LABEL_39:
      WTF::AtomStringImpl::addLiteral();
      v27 = v76;
      v29 = (JSC::JSGlobalObject *)JSC::JSObject::get(v9, a1, (unint64_t)v76);
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          WTF::StringImpl::destroy(v27, v28);
        else
          *(_DWORD *)v27 -= 2;
      }
      if (*((_DWORD *)v82 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v82) & 1) != 0)
        goto LABEL_45;
      if (v29 == (JSC::JSGlobalObject *)10)
        goto LABEL_44;
      WebCore::Converter<WebCore::IDLPromise<WebCore::IDLAny>>::convert<WebCore::DefaultExceptionThrower>(a1, v29, (JSValue)&v76, (uint64_t)&v72);
      v32 = (int)v73;
      if ((_DWORD)v73)
      {
        v11 = 0;
        v31 = 1;
        v79 = 1;
      }
      else
      {
        v11 = v72;
        v72 = 0;
        WTF::AtomStringImpl::addLiteral();
        v33 = v76;
        v9 = (JSC::Structure *)JSC::JSObject::get(v9, a1, (unint64_t)v76);
        if (v33)
        {
          if (*(_DWORD *)v33 == 2)
            WTF::StringImpl::destroy(v33, v34);
          else
            *(_DWORD *)v33 -= 2;
        }
        if (*((_DWORD *)v82 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v82) & 1) != 0)
        {
          v31 = 1;
        }
        else
        {
          v31 = 0;
          LOBYTE(v76) = v70;
          BYTE1(v76) = v18;
          BYTE2(v76) = v24;
          v77 = v11;
          v78 = v9;
          v11 = 0;
        }
        v79 = v31;
        v32 = (int)v73;
      }
      if (v32 != -1)
        ((void (*)(WTF::StringImpl **, unint64_t *))off_1E32D2AD0[v32])(&v75, &v72);
      if (!v11)
        goto LABEL_58;
      if (*(_DWORD *)(v11 + 16) != 1)
      {
        --*(_DWORD *)(v11 + 16);
LABEL_58:
        if (v31)
          goto LABEL_88;
        goto LABEL_59;
      }
      (*(void (**)(unint64_t))(*(_QWORD *)v11 + 16))(v11);
      v31 = v79;
      if (v79)
      {
LABEL_88:
        v30 = 0;
        if (v31 == -1)
          goto LABEL_79;
        goto LABEL_78;
      }
LABEL_59:
      if (!v81)
      {
        v35 = v80;
        v80 = 0;
        LOWORD(v72) = (_WORD)v76;
        BYTE2(v72) = BYTE2(v76);
        v36 = (_DWORD *)v77;
        v77 = 0;
        v73 = v36;
        v74 = v78;
        v75 = v35;
        v37 = (void (***)(WebCore::PromiseRejectionEvent *__hidden))bmalloc::api::isoAllocate();
        v82 = (JSC::VM *)WebCore::PromiseRejectionEvent::PromiseRejectionEvent((uint64_t)v37, &v75, (unsigned __int8 *)&v72, 0);
        v39 = v73;
        v73 = 0;
        if (v39)
        {
          if (v39[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v39 + 16))(v39);
          else
            --v39[4];
        }
        v40 = v75;
        v75 = 0;
        if (v40)
        {
          if (*(_DWORD *)v40 == 2)
            WTF::StringImpl::destroy(v40, v38);
          else
            *(_DWORD *)v40 -= 2;
        }
        if (*v37 != off_1E33A6CA8)
        {
          __break(0xC471u);
          JUMPOUT(0x194E131BCLL);
        }
        v41 = *(_QWORD *)(v5 + 40);
        v42 = WebCore::getDOMStructure<WebCore::JSPromiseRejectionEvent>(*(WebCore::JSPromiseRejectionEvent **)(v41 + 56), (JSC::VM *)v41);
        v30 = (JSCell *)WebCore::JSPromiseRejectionEvent::create(v42, (JSC::VM *)v41, (uint64_t *)&v82);
        WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*(_QWORD *)(v41 + 3320), (uint64_t)v37, (uint64_t)v30);
        v43 = *(JSC::JSCell **)(a2 + 40);
        if (((unint64_t)v43 & 0xFFFE000000000002) == 0)
        {
          v44 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v43);
          if (v44)
          {
            v46 = v44;
            if (v44 != *(JSC::JSGlobalObject **)(a2 + 24))
            {
              v47 = (WebCore::JSPromiseRejectionEvent *)*((_QWORD *)a1 + 7);
              FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v44, v45);
              if (!*((_DWORD *)v47 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v47) & 1) == 0)
              {
                v49 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSPromiseRejectionEvent>(v47, FunctionRealm);
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v46, v49, v50);
                if (!*((_DWORD *)v47 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v47) & 1) == 0)
                  JSC::JSObject::setStructure(v30, v47, SubclassStructure);
              }
            }
          }
        }
        if (*((_DWORD *)v71 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v71) & 1) != 0)
          v30 = 0;
        v52 = v82;
        v82 = 0;
        if (v52)
        {
          if (*((_DWORD *)v52 + 4) == 1)
            (*(void (**)(JSC::VM *))(*(_QWORD *)v52 + 8))(v52);
          else
            --*((_DWORD *)v52 + 4);
        }
        v31 = 0;
        goto LABEL_78;
      }
      v12 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_122:
      v55 = (_DWORD)v11 == 0;
LABEL_166:
      v14 = !v55;
LABEL_16:
      v70 = v14;
      if (*((_DWORD *)v12 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) != 0)
        goto LABEL_45;
    }
    v60 = (_DWORD)v17 == 0;
    goto LABEL_170;
  }
  v30 = 0;
LABEL_80:
  if (v6 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2930[v6])(&v76, &v80);
  return v30;
}

BOOL WebCore::JSDOMConstructor<WebCore::JSPromiseRejectionEvent>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000002, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSPromiseRejectionEvent>((WebCore::JSPromiseRejectionEvent *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

WTF::StringImpl *WebCore::JSPromiseRejectionEventPrototype::finishCreation(WebCore::JSPromiseRejectionEventPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(a2, (uint64_t)&WebCore::JSPromiseRejectionEvent::s_info, &WebCore::JSPromiseRejectionEventPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSPromiseRejectionEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPromiseRejectionEvent::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  return WebCore::JSPromiseRejectionEvent::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
}

uint64_t WebCore::JSPromiseRejectionEvent::visitChildren(WebCore::JSPromiseRejectionEvent *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];
  uint64_t v10;
  char v11;

  v9[0] = a2;
  v9[1] = this;
  v11 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v10 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v9;
    JSC::JSObject::visitChildren();
    v6 = *(uint64_t **)(*((_QWORD *)this + 3) + 88);
    if (!v6 || (v6[1] & 3) != 0)
      v7 = 0;
    else
      v7 = *v6;
    result = (*(uint64_t (**)(JSC::JSCell *, uint64_t))(*(_QWORD *)a2 + 24))(a2, v7);
    *(_QWORD *)(v9[0] + 88) = v10;
  }
  return result;
}

unint64_t WebCore::JSPromiseRejectionEvent::createPrototype(WebCore::JSPromiseRejectionEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSEvent::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSPromiseRejectionEventPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSPromiseRejectionEventPrototype::create(WebCore::JSPromiseRejectionEventPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSPromiseRejectionEventPrototype::finishCreation((WebCore::JSPromiseRejectionEventPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPromiseRejectionEvent>,(WebCore::DOMConstructorID)476>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3808);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
    Structure = WebCore::JSDOMConstructor<WebCore::JSPromiseRejectionEvent>::createStructure((uint64_t *)a1, a2, v5);
    result = WebCore::JSDOMConstructor<WebCore::JSPromiseRejectionEvent>::create(a1, Structure, (JSC::VM *)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3808) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v7 = (JSC::Heap *)(a1 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)a2);
        return v8;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsPromiseRejectionEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPromiseRejectionEventPrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPromiseRejectionEvent>,(WebCore::DOMConstructorID)476>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPromiseRejectionEvent_promise(JSC::JSGlobalObject *a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;

  if ((a2 & 0xFFFE000000000002) != 0)
    return WebCore::rejectPromiseWithGetterTypeError(a1, (JSC **)&WebCore::JSPromiseRejectionEvent::s_info, a3);
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSPromiseRejectionEvent::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSPromiseRejectionEvent::s_info && v5 != 0);
  }
  if (!v4)
    return WebCore::rejectPromiseWithGetterTypeError(a1, (JSC **)&WebCore::JSPromiseRejectionEvent::s_info, a3);
  v8 = **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 72) + 24);
  if ((v8 & 0xFFFE000000000002) != 0)
    return 0;
  if (*(_BYTE *)(v8 + 5) == 68)
    return **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 72) + 24);
  return 0;
}

uint64_t WebCore::jsPromiseRejectionEvent_reason(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  _BYTE *v4;

  v2 = *(_QWORD *)(a2 + 24);
  result = *(_QWORD *)(v2 + 80);
  if (!result)
  {
    v4 = *(_BYTE **)(v2 + 88);
    if (v4 && *(_QWORD *)v4)
    {
      if ((v4[8] & 3) != 0)
        return 10;
      else
        return *(_QWORD *)v4;
    }
    else
    {
      return 10;
    }
  }
  return result;
}

uint64_t WebCore::JSPromiseRejectionEvent::subspaceForImpl(WebCore::JSPromiseRejectionEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3888);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 3888);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 3888);
    *(_QWORD *)(v8 + 3888) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 3888);
  *(_QWORD *)(v3 + 3888) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSPublicKeyCredential::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSBasicCredential::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSBasicCredential::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSBasicCredential::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPublicKeyCredentialPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPublicKeyCredentialPrototype::create(WebCore::JSPublicKeyCredentialPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSPublicKeyCredential::s_info, &WebCore::JSPublicKeyCredentialPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPublicKeyCredential>,(WebCore::DOMConstructorID)270>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2160);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSBasicCredential>,(WebCore::DOMConstructorID)73>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPublicKeyCredential>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSPublicKeyCredential::s_info
         + ~((_QWORD)&WebCore::JSPublicKeyCredential::s_info << 32)) ^ (((unint64_t)&WebCore::JSPublicKeyCredential::s_info
                                                                       + ~((_QWORD)&WebCore::JSPublicKeyCredential::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSPublicKeyCredential::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSPublicKeyCredential::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSBasicCredential::prototype((WebCore::JSBasicCredential *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSPublicKeyCredentialPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSPublicKeyCredentialPrototype::create((WebCore::JSPublicKeyCredentialPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSPublicKeyCredential::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSPublicKeyCredential::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  JSC::reifyStaticProperties<2u>((JSC::VM *)a1, (uint64_t)&WebCore::JSPublicKeyCredential::s_info, (uint64_t)&WebCore::JSPublicKeyCredentialConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2160) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPublicKeyCredentialConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPublicKeyCredentialPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPublicKeyCredential>,(WebCore::DOMConstructorID)270>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPublicKeyCredential_rawId(WebCore *a1, uint64_t a2, uint64_t a3, JSC::ArrayBuffer *a4)
{
  WebCore::JSDOMGlobalObject *v4;

  v4 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 32) + 16);
  if (v4)
    return WebCore::toJS(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v4, a4);
  else
    return 2;
}

unint64_t WebCore::jsPublicKeyCredential_response(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  if (v2)
    return WebCore::wrap<WebCore::AuthenticatorResponse>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::jsPublicKeyCredential_authenticatorAttachment(uint64_t a1, uint64_t a2)
{
  return WebCore::convertEnumerationToJS<WebCore::AuthenticatorAttachment>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 32) + 112));
}

uint64_t WebCore::JSPublicKeyCredential::subspaceForImpl(WebCore::JSPublicKeyCredential *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2184);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 2184))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 2184);
    *(_QWORD *)(v8 + 2184) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2184);
  *(_QWORD *)(v3 + 2184) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

void WebCore::convertDictionary<WebCore::PublicKeyCredentialCreationOptions>(JSC::JSCell *this@<X1>, JSC::VM **a2@<X0>, uint64_t a3@<X8>)
{
  unint64_t v5;
  JSC::Structure *Object;
  WTF::StringImpl *v7;
  unint64_t v8;
  unsigned __int16 v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  JSC::Structure *v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  unsigned int v20;
  unsigned __int16 v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  _BOOL4 v24;
  JSC::VM *v25;
  double v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  uint64_t v29;
  unsigned __int16 v30;
  WTF::StringImpl *v31;
  unint64_t v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  JSC::JSArrayBufferView *v35;
  void *v36;
  WTF::StringImpl *v37;
  int v38;
  uint64_t (*v39)();
  WTF::StringImpl *v40;
  uint64_t v41;
  WTF *v42;
  uint64_t v43;
  int v44;
  WTF *v45;
  uint64_t v46;
  unsigned int *v47;
  WTF *v48;
  uint64_t v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  JSC::JSCell *v52;
  unsigned int v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  unsigned int v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  JSValue v64;
  int i;
  unsigned int v66;
  JSC::JSCell *IndexQuickly;
  uint64_t v68;
  char *v69;
  WTF::StringImpl *v70;
  __int128 v71;
  WTF::StringImpl *v72;
  WTF::StringImpl *v73;
  int v74;
  uint64_t v75;
  JSC::JSCell *v77;
  uint64_t v78;
  char *v79;
  WTF::StringImpl *v80;
  __int128 v81;
  uint64_t v82;
  unint64_t v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v85;
  WTF *v86;
  WTF::StringImpl *v87;
  WTF::StringImpl *v88;
  uint64_t v89;
  int v90;
  WTF::StringImpl *v91;
  uint64_t v92;
  JSC::Structure *v93;
  WTF::StringImpl *v94;
  WTF::StringImpl *v95;
  uint64_t v96;
  WTF::StringImpl *v97;
  WTF::StringImpl *v98;
  uint64_t v99;
  WTF::StringImpl *v100;
  uint64_t v101;
  WTF::StringImpl *v102;
  WTF::StringImpl *v103;
  int v104;
  WTF::StringImpl *v105;
  int v106;
  WTF::StringImpl *v107;
  WTF::StringImpl *v108;
  WTF::StringImpl *v109;
  WTF::StringImpl *v110;
  JSC::VM *v111;
  WTF::StringImpl *v112;
  WTF::StringImpl *v113;
  WTF::StringImpl *v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  int v118;
  JSC::VM *v119;
  unint64_t v120;
  WTF::StringImpl *v121;
  uint64_t v122;
  WTF::StringImpl *v123;
  WTF::StringImpl *v124;
  unint64_t v125;
  WTF::StringImpl *v126;
  WTF::StringImpl *v127;
  uint64_t v128;
  uint64_t v129;
  JSC::Structure *v130;
  WTF::StringImpl *v131;
  WTF::StringImpl *v132;
  uint64_t v133;
  WTF::StringImpl *v134;
  int v135;
  WTF::StringImpl *v136;
  WTF::StringImpl *v137;
  int v138;
  WTF::StringImpl *v139;
  uint64_t v140;
  JSC::VM *v141;
  WTF::StringImpl *v142;
  WTF::StringImpl *v143;
  WTF::StringImpl *v144;
  WTF::StringImpl *v145;
  WTF::StringImpl *v146;
  uint64_t v147;
  uint64_t v148;
  JSC::VM *v149;
  uint64_t v150;
  WTF::StringImpl *v151;
  WTF::StringImpl *v152;
  WTF::StringImpl *v153;
  WTF::StringImpl *v154;
  JSC::JSArrayBufferView *v155;
  uint64_t v156;
  JSC::ArrayBufferView *v157;
  int v158;
  uint64_t (*v159)();
  __int128 v160;
  int v161;
  WTF::StringImpl *v162;
  int v163;
  WTF::StringImpl *v164;
  WTF::StringImpl *v165;
  WTF::StringImpl *v166;
  int v167;
  __int128 v168;
  int v169;
  WTF::StringImpl *v170;
  WTF::StringImpl *v171;
  WTF::StringImpl *v172;
  WTF::StringImpl *v173;
  WTF::StringImpl *v174;
  WTF::StringImpl *v175;
  int v176;
  WTF::StringImpl *v177;
  int v178;
  WTF::StringImpl *v179;
  int hasExceptionsAfterHandlingTraps;
  int v181;
  BOOL v182;
  int v183;
  uint64_t v184;
  int *v185;
  int v186;
  uint64_t v187;
  WTF::StringImpl *v188;
  WTF::StringImpl *v189;
  WTF::StringImpl *v190;
  unsigned __int8 v191;
  unsigned int v192;
  _QWORD v193[2];
  int v194;
  WTF::StringImpl *v195[2];
  uint64_t v196;
  int v197;
  WTF::StringImpl *v198;
  uint64_t v199;
  WTF::StringImpl *v200[2];
  int v201;
  int v202;
  WTF::StringImpl *v203;
  int v204;
  unsigned int v205;
  WTF *v206;
  uint64_t v207;
  int v208;
  WTF::StringImpl *v209;
  WTF::StringImpl *v210;
  WTF::StringImpl *v211;
  unsigned __int8 v212;
  _QWORD v213[3];
  int v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  WTF *v218;
  WTF::StringImpl *v219;
  int v220;
  char v221;
  WTF *v222;
  uint64_t v223;
  int v224;
  __int16 v225;
  char v226;
  char v227;
  WTF::StringImpl *v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  JSC::VM *v233;
  JSC::ArrayBufferView *v234;
  int v235;
  WTF::StringImpl *v236;
  int v237;
  WTF::StringImpl *v238;
  int v239;
  JSC::VM *v240;
  int v241;
  JSC::VM *v242;
  uint64_t *v243;
  WTF::StringImpl *v244;
  int v245;
  int v246;
  WTF::StringImpl *v247;
  JSC::ArrayBufferView *v248;
  int v249;
  int v250;
  uint64_t v251;

  v251 = *MEMORY[0x1E0C80C00];
  v233 = a2[7];
  v5 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    Object = 0;
    goto LABEL_5;
  }
  if (((unint64_t)this & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::Structure *)JSC::JSCell::getObject(this);
    if (Object)
    {
LABEL_5:
      v212 = 0;
      v209 = 0;
      v210 = 0;
      LOBYTE(v211) = 0;
      memset(v213, 0, sizeof(v213));
      v214 = 0;
      v221 = 0;
      v226 = 0;
      LOBYTE(v228) = 0;
      v232 = 0;
      v215 = 0;
      v216 = 0;
      v217 = 0;
      v219 = 0;
      v218 = 0;
      LOBYTE(v220) = 0;
      v223 = 0;
      v222 = 0;
      LOBYTE(v224) = 0;
      if (v5 == 2)
      {
        v227 = 0;
LABEL_71:
        WebCore::throwRequiredMemberTypeError((int)a2, (int)&v233, "challenge", 10, "PublicKeyCredentialCreationOptions", 35, "(ArrayBufferView or ArrayBuffer)", 33);
LABEL_72:
        *(_DWORD *)(a3 + 296) = 1;
LABEL_73:
        WebCore::PublicKeyCredentialCreationOptions::~PublicKeyCredentialCreationOptions((WebCore::PublicKeyCredentialCreationOptions *)&v209, v36);
        return;
      }
      WTF::AtomStringImpl::addLiteral();
      v8 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
      if (v200[0])
      {
        if (*(_DWORD *)v200[0] == 2)
          WTF::StringImpl::destroy(v200[0], v7);
        else
          *(_DWORD *)v200[0] -= 2;
      }
      if (*((_DWORD *)v233 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v233))
        goto LABEL_72;
      if (v8 == 10)
      {
        LOBYTE(v9) = 0;
      }
      else
      {
        v200[0] = a2[7];
        v9 = WebCore::parseEnumeration<WebCore::AttestationConveyancePreference>((JSC::JSGlobalObject *)a2, v8);
        if (*((_DWORD *)v200[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v200[0]) & 1) != 0)
          goto LABEL_72;
        if (v9 <= 0xFFu)
          goto LABEL_191;
      }
      v227 = v9;
      WTF::AtomStringImpl::addLiteral();
      v11 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
      if (v200[0])
      {
        if (*(_DWORD *)v200[0] == 2)
          WTF::StringImpl::destroy(v200[0], v10);
        else
          *(_DWORD *)v200[0] -= 2;
      }
      if (*((_DWORD *)v233 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v233))
        goto LABEL_72;
      if (v11 == 10)
      {
LABEL_66:
        WTF::AtomStringImpl::addLiteral();
        v35 = (JSC::JSArrayBufferView *)JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
        if (v200[0])
        {
          if (*(_DWORD *)v200[0] == 2)
            WTF::StringImpl::destroy(v200[0], v34);
          else
            *(_DWORD *)v200[0] -= 2;
        }
        if (*((_DWORD *)v233 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v233))
          goto LABEL_72;
        if (v35 == (JSC::JSArrayBufferView *)10)
          goto LABEL_71;
        v200[0] = a2[7];
        v37 = (WTF::StringImpl *)JSC::JSArrayBuffer::toWrapped((uint64_t)v200[0], (uint64_t)v35);
        if (v37)
        {
          *(_DWORD *)v37 += 2;
          v244 = v37;
          v38 = 1;
          v245 = 1;
        }
        else
        {
          JSC::JSArrayBufferView::toWrapped(v35, v195);
          if (!v195[0])
          {
            JSC::throwTypeError();
            v90 = 1;
            v246 = 1;
            *(_DWORD *)(a3 + 296) = 1;
            goto LABEL_212;
          }
          v38 = 0;
          v244 = v195[0];
          v245 = 0;
        }
        v246 = 0;
        LOBYTE(v195[0]) = 0;
        LODWORD(v195[1]) = -1;
        v39 = off_1E32D2C90[v38];
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **, WTF::StringImpl **))v39)(v200, v195, &v244);
        LODWORD(v195[1]) = v38;
        LOBYTE(v200[0]) = 0;
        LODWORD(v200[1]) = -1;
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **, WTF::StringImpl **))v39)(&v188, v200, v195);
        LODWORD(v200[1]) = v38;
        v188 = (WTF::StringImpl *)&v216;
        ((void (*)(WTF::StringImpl **))off_1E32D2CA0[v38])(&v188);
        if (LODWORD(v200[1]) != -1)
          ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2C80[LODWORD(v200[1])])(&v188, v200);
        LODWORD(v200[1]) = -1;
        if (LODWORD(v195[1]) != -1)
          ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2C80[LODWORD(v195[1])])(&v188, v195);
        WTF::AtomStringImpl::addLiteral();
        v40 = v200[0];
        v41 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
        if (v40)
        {
          if (*(_DWORD *)v40 == 2)
            WTF::StringImpl::destroy(v40, (WTF::StringImpl *)v36);
          else
            *(_DWORD *)v40 -= 2;
        }
        if (*((_DWORD *)v233 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v233))
        {
          *(_DWORD *)(a3 + 296) = 1;
          goto LABEL_211;
        }
        if (v41 == 10)
        {
          v42 = 0;
          v208 = 0;
          v43 = 0;
LABEL_92:
          v187 = v43;
          v206 = 0;
          v207 = 0;
          v45 = v222;
          if (HIDWORD(v223))
          {
            v46 = 40 * HIDWORD(v223);
            v47 = (unsigned int *)((char *)v222 + 16);
            do
            {
              v48 = (WTF *)*((_QWORD *)v47 + 1);
              if (v48)
              {
                *((_QWORD *)v47 + 1) = 0;
                v47[4] = 0;
                WTF::fastFree(v48, v36);
              }
              v49 = *v47;
              if ((_DWORD)v49 != -1)
                ((void (*)(WTF::StringImpl **, unsigned int *))off_1E32D2C80[v49])(v200, v47 - 2);
              *v47 = -1;
              v47 += 10;
              v46 -= 40;
            }
            while (v46);
            v45 = v222;
          }
          if (v45)
          {
            v222 = 0;
            LODWORD(v223) = 0;
            WTF::fastFree(v45, v36);
          }
          v222 = v42;
          v223 = v187;
          WTF::AtomStringImpl::addLiteral();
          v50 = v200[0];
          v52 = (JSC::JSCell *)JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
          if (v50)
          {
            if (*(_DWORD *)v50 == 2)
              WTF::StringImpl::destroy(v50, v51);
            else
              *(_DWORD *)v50 -= 2;
          }
          if (*((_DWORD *)v233 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v233))
            goto LABEL_132;
          if (v52 != (JSC::JSCell *)10)
          {
            WebCore::convertDictionary<WebCore::AuthenticationExtensionsClientInputs>(v52, (JSC::JSGlobalObject *)a2, (uint64_t)v200);
            v53 = v205;
            if (v205)
            {
              *(_DWORD *)(a3 + 296) = 1;
              v58 = v53;
            }
            else
            {
              WebCore::AuthenticationExtensionsClientInputs::AuthenticationExtensionsClientInputs((uint64_t)v195, (uint64_t)v200);
              if (v232)
              {
                v55 = v195[0];
                v195[0] = 0;
                v56 = v228;
                v228 = v55;
                if (v56)
                {
                  if (*(_DWORD *)v56 == 2)
                    WTF::StringImpl::destroy(v56, v54);
                  else
                    *(_DWORD *)v56 -= 2;
                }
                v229 = (char)v195[1];
                std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs::LargeBlobInputs,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs::LargeBlobInputs,false>>((uint64_t)&v230, (WTF::StringImpl *)&v196);
                std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs::PRFInputs,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs::PRFInputs,false>>((uint64_t)&v231, (uint64_t)&v199);
              }
              else
              {
                WebCore::AuthenticationExtensionsClientInputs::AuthenticationExtensionsClientInputs((uint64_t)&v228, (uint64_t)v195);
                v232 = 1;
              }
              WebCore::AuthenticationExtensionsClientInputs::~AuthenticationExtensionsClientInputs((WebCore::AuthenticationExtensionsClientInputs *)v195);
              v58 = v205;
            }
            if (v58 != -1)
              (*(&off_1E32D2CB0 + v58))((int)v195, (WebCore::AuthenticationExtensionsClientInputs *)v200);
            if (v53)
              goto LABEL_208;
          }
          WTF::AtomStringImpl::addLiteral();
          v59 = v200[0];
          v61 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
          if (v59)
          {
            if (*(_DWORD *)v59 == 2)
              WTF::StringImpl::destroy(v59, v60);
            else
              *(_DWORD *)v59 -= 2;
          }
          if (*((_DWORD *)v233 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v233))
            goto LABEL_132;
          if (v61 == 10)
          {
            WebCore::throwRequiredMemberTypeError((int)a2, (int)&v233, "pubKeyCredParams", 17, "PublicKeyCredentialCreationOptions", 35, "sequence", 9);
LABEL_132:
            *(_DWORD *)(a3 + 296) = 1;
LABEL_208:
            v44 = v208;
LABEL_209:
            if (v44 != -1)
              ((void (*)(WTF::StringImpl **, WTF **))off_1E32D2CF0[v44])(v200, &v206);
LABEL_211:
            v90 = v246;
            if (v246 == -1)
              goto LABEL_73;
LABEL_212:
            ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2D00[v90])(v200, &v244);
            goto LABEL_73;
          }
          v62 = (unint64_t)a2[7];
          v247 = (WTF::StringImpl *)v62;
          if ((v61 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v61 + 5) <= 0x16u)
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            JSC::throwTypeError();
            v73 = v200[0];
            v200[0] = 0;
            if (v73)
            {
              if (*(_DWORD *)v73 == 2)
                WTF::StringImpl::destroy(v73, v72);
              else
                *(_DWORD *)v73 -= 2;
            }
            v194 = 1;
            goto LABEL_157;
          }
          v188 = 0;
          v189 = 0;
          if (JSC::getIterationMode() == 2)
          {
            for (i = 1; ; ++i)
            {
              v66 = (*(_BYTE *)(v61 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v61 + 8) - 8) : 0;
              if (i - 1 >= v66)
                break;
              IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v61, i - 1, 0);
              if (!IndexQuickly)
                IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)v61, (JSC::JSGlobalObject *)a2, (i - 1));
              if (*(_DWORD *)(v62 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v62) & 1) != 0)
                break;
              WebCore::convertDictionary<WebCore::PublicKeyCredentialCreationOptions::Parameters>((uint64_t)v200, a2, IndexQuickly);
              if (!v201)
              {
                *(_OWORD *)v195 = *(_OWORD *)v200;
                v68 = HIDWORD(v189);
                if (HIDWORD(v189) == (_DWORD)v189)
                {
                  v69 = WTF::Vector<WebCore::FrameRateRange,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((char **)&v188, HIDWORD(v189) + 1, (unint64_t)v195);
                  v68 = HIDWORD(v189);
                  v70 = v188;
                  v71 = *(_OWORD *)v69;
                }
                else
                {
                  v70 = v188;
                  v71 = *(_OWORD *)v195;
                }
                *((_OWORD *)v70 + v68) = v71;
                ++HIDWORD(v189);
              }
              if (*(_QWORD *)(v62 + 16))
              {
                v82 = JSC::JSArrayIterator::create();
                v83 = i | 0xFFFE000000000000;
                if (i < 0)
                  v83 = COERCE__INT64((double)i) + 0x2000000000000;
                *(_QWORD *)(v82 + 16) = v83;
                goto LABEL_195;
              }
            }
          }
          else
          {
            JSC::iteratorForIterable((JSC *)a2, (JSC::JSGlobalObject *)v61, v64);
            if (!*(_DWORD *)(v62 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v62) & 1) == 0)
            {
              while (1)
              {
                v75 = JSC::iteratorStep();
                if (*(_QWORD *)(v62 + 16) || v75 == 6)
                  break;
                v77 = (JSC::JSCell *)JSC::iteratorValue();
                if (*(_DWORD *)(v62 + 80))
                {
                  if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v62) & 1) != 0)
                    break;
                }
                WebCore::convertDictionary<WebCore::PublicKeyCredentialCreationOptions::Parameters>((uint64_t)v200, a2, v77);
                if (!v201)
                {
                  *(_OWORD *)v195 = *(_OWORD *)v200;
                  v78 = HIDWORD(v189);
                  if (HIDWORD(v189) == (_DWORD)v189)
                  {
                    v79 = WTF::Vector<WebCore::FrameRateRange,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((char **)&v188, HIDWORD(v189) + 1, (unint64_t)v195);
                    v78 = HIDWORD(v189);
                    v80 = v188;
                    v81 = *(_OWORD *)v79;
                  }
                  else
                  {
                    v80 = v188;
                    v81 = *(_OWORD *)v195;
                  }
                  *((_OWORD *)v80 + v78) = v81;
                  ++HIDWORD(v189);
                }
                if (*(_QWORD *)(v62 + 16))
                {
LABEL_195:
                  JSC::iteratorClose();
                  break;
                }
              }
            }
          }
          if (*(_DWORD *)(v62 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v62))
          {
            v175 = v188;
            v194 = 1;
            if (v188)
            {
              v188 = 0;
              LODWORD(v189) = 0;
              WTF::fastFree(v175, v63);
            }
LABEL_157:
            v74 = 1;
LABEL_206:
            *(_DWORD *)(a3 + 296) = 1;
LABEL_207:
            ((void (*)(WTF::StringImpl **, _QWORD *))off_1E32D2CE0[v74])(v200, v193);
            goto LABEL_208;
          }
          v84 = v188;
          v85 = v189;
          v194 = 0;
          v193[0] = 0;
          v193[1] = 0;
          v86 = v218;
          if (v218)
          {
            v218 = 0;
            LODWORD(v219) = 0;
            WTF::fastFree(v86, v63);
          }
          v218 = v84;
          v219 = v85;
          WTF::AtomStringImpl::addLiteral();
          v87 = v200[0];
          v89 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
          if (v87)
          {
            if (*(_DWORD *)v87 == 2)
              WTF::StringImpl::destroy(v87, v88);
            else
              *(_DWORD *)v87 -= 2;
          }
          if (*((_DWORD *)v233 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v233) & 1) != 0)
          {
LABEL_205:
            v74 = 0;
            goto LABEL_206;
          }
          if (v89 == 10)
          {
            WebCore::throwRequiredMemberTypeError((int)a2, (int)&v233, "rp", 3, "PublicKeyCredentialCreationOptions", 35, "PublicKeyCredentialRpEntity", 28);
            goto LABEL_205;
          }
          v240 = a2[7];
          if ((v89 & 0xFFFFFFFFFFFFFFF7) == 2)
          {
            v91 = 0;
            goto LABEL_230;
          }
          if ((v89 & 0xFFFE000000000002) != 0 || (v92 = JSC::JSCell::getObject((JSC::JSCell *)v89)) == 0)
          {
            JSC::throwTypeError();
LABEL_481:
            v192 = 1;
            goto LABEL_238;
          }
          v93 = (JSC::Structure *)v92;
          WTF::AtomStringImpl::addLiteral();
          v94 = v200[0];
          v96 = JSC::JSObject::get(v93, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
          if (v94)
          {
            if (*(_DWORD *)v94 == 2)
              WTF::StringImpl::destroy(v94, v95);
            else
              *(_DWORD *)v94 -= 2;
          }
          if (*((_DWORD *)v240 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v240))
            goto LABEL_481;
          if (v96 == 10)
          {
            v91 = 0;
          }
          else
          {
            WebCore::valueToUSVString((JSC::JSGlobalObject *)a2, v96, (uint64_t)v200);
            if (LODWORD(v200[1]))
            {
              v192 = 1;
              if (LODWORD(v200[1]) != -1)
                ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2D10[LODWORD(v200[1])])(v195, v200);
LABEL_238:
              v101 = v192;
              if (v192)
              {
                *(_DWORD *)(a3 + 296) = 1;
                if ((_DWORD)v101 == -1)
                {
LABEL_444:
                  v74 = v194;
                  if (v194 == -1)
                    goto LABEL_208;
                  goto LABEL_207;
                }
LABEL_443:
                ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2CD0[v101])(v200, &v188);
                goto LABEL_444;
              }
              v102 = v188;
              v103 = v189;
              v188 = 0;
              v189 = 0;
              v104 = v191;
              if (v191)
              {
                v105 = v190;
                v190 = 0;
                v106 = 1;
              }
              else
              {
                v106 = 0;
                v105 = 0;
              }
              v107 = v209;
              v209 = v102;
              if (v107)
              {
                if (*(_DWORD *)v107 == 2)
                  WTF::StringImpl::destroy(v107, (WTF::StringImpl *)v36);
                else
                  *(_DWORD *)v107 -= 2;
              }
              v108 = v210;
              v210 = v103;
              if (v108)
              {
                if (*(_DWORD *)v108 == 2)
                  WTF::StringImpl::destroy(v108, (WTF::StringImpl *)v36);
                else
                  *(_DWORD *)v108 -= 2;
              }
              if (v212 == v106)
              {
                if (v212)
                {
                  v109 = v211;
                  v211 = v105;
                  if (!v109)
                    goto LABEL_303;
                  if (*(_DWORD *)v109 != 2)
                  {
                    *(_DWORD *)v109 -= 2;
                    goto LABEL_303;
                  }
                  goto LABEL_302;
                }
              }
              else
              {
                if (!v212)
                {
                  v211 = v105;
                  v212 = 1;
                  goto LABEL_303;
                }
                v110 = v211;
                v211 = 0;
                if (v110)
                {
                  if (*(_DWORD *)v110 == 2)
                    WTF::StringImpl::destroy(v110, (WTF::StringImpl *)v36);
                  else
                    *(_DWORD *)v110 -= 2;
                }
                v212 = 0;
              }
              if (!v104 || !v105)
              {
LABEL_303:
                WTF::AtomStringImpl::addLiteral();
                v123 = v200[0];
                v125 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
                if (v123)
                {
                  if (*(_DWORD *)v123 == 2)
                    WTF::StringImpl::destroy(v123, v124);
                  else
                    *(_DWORD *)v123 -= 2;
                }
                if (*((_DWORD *)v233 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v233))
                  goto LABEL_316;
                if (v125 != 10)
                {
                  WebCore::convertToInteger<WebCore::IDLUnsignedLong>((JSC::JSGlobalObject *)a2, v125, v200);
                  if (HIDWORD(v200[0]))
                  {
LABEL_316:
                    *(_DWORD *)(a3 + 296) = 1;
                    goto LABEL_443;
                  }
                  v220 = (int)v200[0];
                  v221 = 1;
                }
                WTF::AtomStringImpl::addLiteral();
                v126 = v200[0];
                v128 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
                if (v126)
                {
                  if (*(_DWORD *)v126 == 2)
                    WTF::StringImpl::destroy(v126, v127);
                  else
                    *(_DWORD *)v126 -= 2;
                }
                if (*((_DWORD *)v233 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v233))
                  goto LABEL_316;
                if (v128 == 10)
                {
                  WebCore::throwRequiredMemberTypeError((int)a2, (int)&v233, "user", 5, "PublicKeyCredentialCreationOptions", 35, "PublicKeyCredentialUserEntity", 30);
                  goto LABEL_316;
                }
                v242 = a2[7];
                if ((v128 & 0xFFFFFFFFFFFFFFF7) == 2)
                {
                  v198 = 0;
                  v195[1] = 0;
                  v196 = 0;
                  v195[0] = 0;
                  v197 = 0;
                  goto LABEL_337;
                }
                if ((v128 & 0xFFFE000000000002) != 0 || (v129 = JSC::JSCell::getObject((JSC::JSCell *)v128)) == 0)
                {
                  JSC::throwTypeError();
                  v167 = 1;
                  v204 = 1;
                  goto LABEL_484;
                }
                v130 = (JSC::Structure *)v129;
                v198 = 0;
                v195[1] = 0;
                v196 = 0;
                v195[0] = 0;
                v197 = 0;
                WTF::AtomStringImpl::addLiteral();
                v131 = v200[0];
                v133 = JSC::JSObject::get(v130, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
                if (v131)
                {
                  if (*(_DWORD *)v131 == 2)
                    WTF::StringImpl::destroy(v131, v132);
                  else
                    *(_DWORD *)v131 -= 2;
                }
                if (*((_DWORD *)v242 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v242))
                  goto LABEL_338;
                if (v133 == 10)
                {
LABEL_332:
                  WTF::AtomStringImpl::addLiteral();
                  v139 = v247;
                  v140 = JSC::JSObject::get(v130, (JSC::JSGlobalObject *)a2, (unint64_t)v247);
                  if (v139)
                  {
                    if (*(_DWORD *)v139 == 2)
                      WTF::StringImpl::destroy(v139, v134);
                    else
                      *(_DWORD *)v139 -= 2;
                  }
                  if (*((_DWORD *)v242 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v242))
                    goto LABEL_338;
                  if (v140 == 10)
                  {
LABEL_337:
                    WebCore::throwRequiredMemberTypeError((int)a2, (int)&v242, "name", 5, "PublicKeyCredentialUserEntity", 30, "DOMString", 10);
LABEL_338:
                    v204 = 1;
                    goto LABEL_415;
                  }
                  v247 = (WTF::StringImpl *)v140;
                  v141 = a2[7];
                  if ((v140 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v140 + 5) != 2)
                  {
                    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v247, (JSC::JSGlobalObject *)a2);
LABEL_345:
                    if (*((_DWORD *)v141 + 20))
                    {
                      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v141);
                      v143 = v238;
                      if (hasExceptionsAfterHandlingTraps)
                      {
                        v148 = 1;
                        v241 = 1;
                        v238 = 0;
                        if (v143)
                        {
                          if (*(_DWORD *)v143 == 2)
                            WTF::StringImpl::destroy(v143, v134);
                          else
                            *(_DWORD *)v143 -= 2;
                        }
                        v204 = 1;
                        goto LABEL_414;
                      }
                    }
                    else
                    {
                      v143 = v238;
                    }
                    v241 = 0;
                    v240 = 0;
                    v144 = v195[0];
                    v195[0] = v143;
                    if (v144)
                    {
                      if (*(_DWORD *)v144 == 2)
                        WTF::StringImpl::destroy(v144, v134);
                      else
                        *(_DWORD *)v144 -= 2;
                    }
                    WTF::AtomStringImpl::addLiteral();
                    v145 = v247;
                    v147 = JSC::JSObject::get(v130, (JSC::JSGlobalObject *)a2, (unint64_t)v247);
                    if (v145)
                    {
                      if (*(_DWORD *)v145 == 2)
                        WTF::StringImpl::destroy(v145, v146);
                      else
                        *(_DWORD *)v145 -= 2;
                    }
                    if (*((_DWORD *)v242 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v242))
                      goto LABEL_356;
                    if (v147 == 10)
                    {
                      WebCore::throwRequiredMemberTypeError((int)a2, (int)&v242, "displayName", 12, "PublicKeyCredentialUserEntity", 30, "DOMString", 10);
LABEL_356:
                      v148 = 0;
                      v204 = 1;
LABEL_414:
                      ((void (*)(WTF::StringImpl **, JSC::VM **))off_1E32D2D10[v148])(&v247, &v240);
LABEL_415:
                      v164 = v198;
                      v198 = 0;
                      if (v164)
                      {
                        if (*(_DWORD *)v164 == 2)
                          WTF::StringImpl::destroy(v164, v134);
                        else
                          *(_DWORD *)v164 -= 2;
                      }
                      if (v197 != -1)
                        ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32D2C80[v197])(&v247, &v196);
                      v197 = -1;
                      v165 = v195[1];
                      v195[1] = 0;
                      if (v165)
                      {
                        if (*(_DWORD *)v165 == 2)
                          WTF::StringImpl::destroy(v165, v134);
                        else
                          *(_DWORD *)v165 -= 2;
                      }
                      v166 = v195[0];
                      v195[0] = 0;
                      if (v166)
                      {
                        if (*(_DWORD *)v166 == 2)
                          WTF::StringImpl::destroy(v166, v134);
                        else
                          *(_DWORD *)v166 -= 2;
                      }
                      v167 = v204;
                      if (!v204)
                      {
                        v168 = *(_OWORD *)v200;
                        v200[0] = 0;
                        v200[1] = 0;
                        *(_OWORD *)v195 = v168;
                        LOBYTE(v196) = 0;
                        v197 = -1;
                        v169 = v202;
                        if (v202 != -1)
                        {
                          ((void (*)(WTF::StringImpl **, uint64_t *, int *))off_1E32D2C90[v202])(&v247, &v196, &v201);
                          v197 = v169;
                        }
                        v170 = v203;
                        v203 = 0;
                        v198 = v170;
                        WebCore::PublicKeyCredentialCreationOptions::UserEntity::operator=((uint64_t)v213, (WTF::StringImpl *)v195);
                        v172 = v198;
                        v198 = 0;
                        if (v172)
                        {
                          if (*(_DWORD *)v172 == 2)
                            WTF::StringImpl::destroy(v172, v171);
                          else
                            *(_DWORD *)v172 -= 2;
                        }
                        if (v197 != -1)
                          ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32D2C80[v197])(&v247, &v196);
                        v197 = -1;
                        v173 = v195[1];
                        v195[1] = 0;
                        if (v173)
                        {
                          if (*(_DWORD *)v173 == 2)
                            WTF::StringImpl::destroy(v173, v171);
                          else
                            *(_DWORD *)v173 -= 2;
                        }
                        v174 = v195[0];
                        v195[0] = 0;
                        if (v174)
                        {
                          if (*(_DWORD *)v174 == 2)
                            WTF::StringImpl::destroy(v174, v171);
                          else
                            *(_DWORD *)v174 -= 2;
                        }
                        WebCore::PublicKeyCredentialCreationOptions::PublicKeyCredentialCreationOptions(a3, (uint64_t *)&v209);
                        *(_DWORD *)(a3 + 296) = 0;
                        v167 = v204;
                        goto LABEL_441;
                      }
LABEL_484:
                      *(_DWORD *)(a3 + 296) = 1;
LABEL_441:
                      if (v167 != -1)
                        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2CC0[v167])(v195, v200);
                      goto LABEL_443;
                    }
                    v247 = (WTF::StringImpl *)v147;
                    v149 = a2[7];
                    if ((v147 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v147 + 5) != 2)
                    {
                      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v247, (JSC::JSGlobalObject *)a2);
LABEL_365:
                      if (*((_DWORD *)v149 + 20))
                      {
                        v181 = JSC::VM::hasExceptionsAfterHandlingTraps(v149);
                        v151 = v236;
                        if (v181)
                        {
                          v156 = 1;
                          v239 = 1;
                          v236 = 0;
                          if (v151)
                          {
                            if (*(_DWORD *)v151 == 2)
                              WTF::StringImpl::destroy(v151, v146);
                            else
                              *(_DWORD *)v151 -= 2;
                          }
                          v204 = 1;
                          goto LABEL_413;
                        }
                      }
                      else
                      {
                        v151 = v236;
                      }
                      v239 = 0;
                      v238 = 0;
                      v152 = v198;
                      v198 = v151;
                      if (v152)
                      {
                        if (*(_DWORD *)v152 == 2)
                          WTF::StringImpl::destroy(v152, v146);
                        else
                          *(_DWORD *)v152 -= 2;
                      }
                      WTF::AtomStringImpl::addLiteral();
                      v153 = v247;
                      v155 = (JSC::JSArrayBufferView *)JSC::JSObject::get(v130, (JSC::JSGlobalObject *)a2, (unint64_t)v247);
                      if (v153)
                      {
                        if (*(_DWORD *)v153 == 2)
                          WTF::StringImpl::destroy(v153, v154);
                        else
                          *(_DWORD *)v153 -= 2;
                      }
                      if (*((_DWORD *)v242 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v242))
                        goto LABEL_376;
                      if (v155 == (JSC::JSArrayBufferView *)10)
                      {
                        WebCore::throwRequiredMemberTypeError((int)a2, (int)&v242, "id", 3, "PublicKeyCredentialUserEntity", 30, "(ArrayBufferView or ArrayBuffer)", 33);
LABEL_376:
                        v156 = 0;
                        v204 = 1;
LABEL_413:
                        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2D10[v156])(&v247, &v238);
                        v148 = 0;
                        goto LABEL_414;
                      }
                      v236 = a2[7];
                      v157 = (JSC::ArrayBufferView *)JSC::JSArrayBuffer::toWrapped((uint64_t)v236, (uint64_t)v155);
                      if (v157)
                      {
                        *(_DWORD *)v157 += 2;
                        v248 = v157;
                        v158 = 1;
                        v249 = 1;
                      }
                      else
                      {
                        JSC::JSArrayBufferView::toWrapped(v155, &v234);
                        if (!v234)
                        {
                          JSC::throwTypeError();
                          v163 = 1;
                          v250 = 1;
                          v204 = 1;
LABEL_411:
                          ((void (*)(WTF::StringImpl **, JSC::ArrayBufferView **))off_1E32D2D00[v163])(&v236, &v248);
LABEL_412:
                          v156 = 0;
                          goto LABEL_413;
                        }
                        v158 = 0;
                        v248 = v234;
                        v249 = 0;
                      }
                      v250 = 0;
                      LOBYTE(v234) = 0;
                      v235 = -1;
                      v159 = off_1E32D2C90[v158];
                      ((void (*)(WTF::StringImpl **, JSC::ArrayBufferView **, JSC::ArrayBufferView **))v159)(&v236, &v234, &v248);
                      v235 = v158;
                      LOBYTE(v236) = 0;
                      v237 = -1;
                      ((void (*)(uint64_t **, WTF::StringImpl **, JSC::ArrayBufferView **))v159)(&v243, &v236, &v234);
                      v237 = v158;
                      v243 = &v196;
                      ((void (*)(uint64_t **, uint64_t *, WTF::StringImpl **))off_1E32D2CA0[v158])(&v243, &v196, &v236);
                      if (v237 != -1)
                        ((void (*)(uint64_t **, WTF::StringImpl **))off_1E32D2C80[v237])(&v243, &v236);
                      v237 = -1;
                      if (v235 != -1)
                        ((void (*)(uint64_t **, JSC::ArrayBufferView **))off_1E32D2C80[v235])(&v243, &v234);
                      v160 = *(_OWORD *)v195;
                      v195[0] = 0;
                      v195[1] = 0;
                      *(_OWORD *)v200 = v160;
                      LOBYTE(v201) = 0;
                      v202 = -1;
                      v161 = v197;
                      if (v197 != -1)
                      {
                        ((void (*)(WTF::StringImpl **, int *, uint64_t *))off_1E32D2C90[v197])(&v236, &v201, &v196);
                        v202 = v161;
                      }
                      v162 = v198;
                      v198 = 0;
                      v203 = v162;
                      v204 = 0;
                      v163 = v250;
                      if (v250 == -1)
                        goto LABEL_412;
                      goto LABEL_411;
                    }
                    v150 = *(_QWORD *)(v147 + 8);
                    if ((v150 & 1) != 0)
                    {
                      v150 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v147, (JSC::JSGlobalObject *)a2);
                      if (!v150)
                        goto LABEL_364;
                    }
                    else if (!v150)
                    {
LABEL_364:
                      v236 = (WTF::StringImpl *)v150;
                      goto LABEL_365;
                    }
                    *(_DWORD *)v150 += 2;
                    goto LABEL_364;
                  }
                  v142 = *(WTF::StringImpl **)(v140 + 8);
                  if ((v142 & 1) != 0)
                  {
                    v142 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v140, (JSC::JSGlobalObject *)a2);
                    if (!v142)
                      goto LABEL_344;
                  }
                  else if (!v142)
                  {
LABEL_344:
                    v238 = v142;
                    goto LABEL_345;
                  }
                  *(_DWORD *)v142 += 2;
                  goto LABEL_344;
                }
                WebCore::valueToUSVString((JSC::JSGlobalObject *)a2, v133, (uint64_t)&v247);
                v135 = (int)v248;
                if ((_DWORD)v248)
                {
                  v204 = 1;
                  v138 = (int)v248;
                }
                else
                {
                  v136 = v247;
                  v247 = 0;
                  v137 = v195[1];
                  v195[1] = v136;
                  if (!v137)
                  {
                    v138 = 0;
                    goto LABEL_330;
                  }
                  if (*(_DWORD *)v137 != 2)
                  {
                    v138 = 0;
                    *(_DWORD *)v137 -= 2;
                    goto LABEL_330;
                  }
                  WTF::StringImpl::destroy(v137, v134);
                  v138 = (int)v248;
                }
                if (v138 == -1)
                {
LABEL_331:
                  if (v135)
                    goto LABEL_415;
                  goto LABEL_332;
                }
LABEL_330:
                ((void (*)(JSC::VM **, WTF::StringImpl **))off_1E32D2D10[v138])(&v240, &v247);
                goto LABEL_331;
              }
              if (*(_DWORD *)v105 != 2)
              {
                *(_DWORD *)v105 -= 2;
                goto LABEL_303;
              }
              v109 = v105;
LABEL_302:
              WTF::StringImpl::destroy(v109, (WTF::StringImpl *)v36);
              goto LABEL_303;
            }
            v91 = v200[0];
          }
          WTF::AtomStringImpl::addLiteral();
          v97 = v200[0];
          v99 = JSC::JSObject::get(v93, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
          if (v97)
          {
            if (*(_DWORD *)v97 == 2)
              WTF::StringImpl::destroy(v97, v98);
            else
              *(_DWORD *)v97 -= 2;
          }
          if (*((_DWORD *)v240 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v240))
            goto LABEL_231;
          if (v99 == 10)
          {
LABEL_230:
            WebCore::throwRequiredMemberTypeError((int)a2, (int)&v240, "name", 5, "PublicKeyCredentialRpEntity", 28, "DOMString", 10);
LABEL_231:
            v100 = 0;
            v192 = 1;
            goto LABEL_232;
          }
          v195[0] = (WTF::StringImpl *)v99;
          v111 = a2[7];
          if ((v99 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v99 + 5) != 2)
          {
            JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v195, (JSC::JSGlobalObject *)a2);
LABEL_268:
            if (*((_DWORD *)v111 + 20))
            {
              v176 = JSC::VM::hasExceptionsAfterHandlingTraps(v111);
              v100 = v188;
              if (v176)
              {
                LODWORD(v200[1]) = 1;
                v188 = 0;
                if (v100)
                {
                  if (*(_DWORD *)v100 == 2)
                    WTF::StringImpl::destroy(v100, v177);
                  else
                    *(_DWORD *)v100 -= 2;
                }
                v118 = 0;
                v100 = 0;
                v116 = 1;
                v117 = 1;
                goto LABEL_290;
              }
            }
            else
            {
              v100 = v188;
            }
            LODWORD(v200[1]) = 0;
            v200[0] = 0;
            WTF::AtomStringImpl::addLiteral();
            v113 = v195[0];
            v115 = JSC::JSObject::get(v93, (JSC::JSGlobalObject *)a2, (unint64_t)v195[0]);
            if (v113)
            {
              if (*(_DWORD *)v113 == 2)
                WTF::StringImpl::destroy(v113, v114);
              else
                *(_DWORD *)v113 -= 2;
            }
            if (*((_DWORD *)v240 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v240) & 1) != 0)
            {
              v117 = 0;
              v118 = 0;
              v116 = 1;
              goto LABEL_290;
            }
            if (v115 == 10)
            {
              v116 = 0;
              v117 = 0;
              v118 = 0;
              v188 = v100;
              v189 = v91;
              LOBYTE(v190) = 0;
              v191 = 0;
LABEL_289:
              v91 = 0;
              v100 = 0;
LABEL_290:
              v121 = 0;
              v192 = v116;
LABEL_297:
              ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2D10[v117])(v195, v200);
              if (v118 && v121)
              {
                if (*(_DWORD *)v121 == 2)
                  WTF::StringImpl::destroy(v121, (WTF::StringImpl *)v36);
                else
                  *(_DWORD *)v121 -= 2;
              }
LABEL_232:
              if (v91)
              {
                if (*(_DWORD *)v91 == 2)
                {
                  WTF::StringImpl::destroy(v91, (WTF::StringImpl *)v36);
                  if (!v100)
                    goto LABEL_238;
                  goto LABEL_236;
                }
                *(_DWORD *)v91 -= 2;
              }
              if (!v100)
                goto LABEL_238;
LABEL_236:
              if (*(_DWORD *)v100 == 2)
                WTF::StringImpl::destroy(v100, (WTF::StringImpl *)v36);
              else
                *(_DWORD *)v100 -= 2;
              goto LABEL_238;
            }
            v188 = (WTF::StringImpl *)v115;
            v119 = a2[7];
            if ((v115 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v115 + 5) != 2)
            {
              JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v188, (JSC::JSGlobalObject *)a2);
LABEL_284:
              if (*((_DWORD *)v119 + 20))
              {
                v178 = JSC::VM::hasExceptionsAfterHandlingTraps(v119);
                v121 = v247;
                if (v178)
                {
                  v122 = 1;
                  LODWORD(v195[1]) = 1;
                  v247 = 0;
                  if (v121)
                  {
                    if (*(_DWORD *)v121 == 2)
                      WTF::StringImpl::destroy(v121, v179);
                    else
                      *(_DWORD *)v121 -= 2;
                  }
                  v118 = 0;
                  v121 = 0;
                  v192 = 1;
                  goto LABEL_287;
                }
              }
              else
              {
                v121 = v247;
              }
              v122 = 0;
              LODWORD(v195[1]) = 0;
              v195[0] = 0;
              v118 = 1;
LABEL_287:
              ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2D10[v122])(&v247, v195);
              if (!v118)
              {
                v117 = 0;
                goto LABEL_297;
              }
              v116 = 0;
              v117 = 0;
              v188 = v100;
              v189 = v91;
              v190 = v121;
              v118 = 1;
              v191 = 1;
              goto LABEL_289;
            }
            v120 = *(_QWORD *)(v115 + 8);
            if ((v120 & 1) != 0)
            {
              v120 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v115, (JSC::JSGlobalObject *)a2);
              if (!v120)
                goto LABEL_283;
            }
            else if (!v120)
            {
LABEL_283:
              v247 = (WTF::StringImpl *)v120;
              goto LABEL_284;
            }
            *(_DWORD *)v120 += 2;
            goto LABEL_283;
          }
          v112 = *(WTF::StringImpl **)(v99 + 8);
          if ((v112 & 1) != 0)
          {
            v112 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v99, (JSC::JSGlobalObject *)a2);
            if (!v112)
              goto LABEL_267;
          }
          else if (!v112)
          {
LABEL_267:
            v188 = v112;
            goto LABEL_268;
          }
          *(_DWORD *)v112 += 2;
          goto LABEL_267;
        }
        v195[0] = a2[7];
        if ((v41 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v41 + 5) <= 0x16u)
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          JSC::throwTypeError();
          v57 = v200[0];
          v200[0] = 0;
          if (v57)
          {
            if (*(_DWORD *)v57 == 2)
              WTF::StringImpl::destroy(v57, (WTF::StringImpl *)v36);
            else
              *(_DWORD *)v57 -= 2;
          }
          v44 = 1;
          v208 = 1;
        }
        else
        {
          WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PublicKeyCredentialDescriptor>>>::convert((uint64_t)&v206, (JSC::JSGlobalObject *)a2, v41);
          v44 = v208;
          if (!v208)
          {
            v42 = v206;
            v43 = v207;
            goto LABEL_92;
          }
        }
        *(_DWORD *)(a3 + 296) = 1;
        goto LABEL_209;
      }
      v12 = a2[7];
      v195[0] = v12;
      if ((v11 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v13 = 0;
        v14 = 0;
        v15 = 1;
        goto LABEL_64;
      }
      if ((v11 & 0xFFFE000000000002) != 0 || (v16 = JSC::JSCell::getObject((JSC::JSCell *)v11)) == 0)
      {
LABEL_191:
        JSC::throwTypeError();
        goto LABEL_72;
      }
      v17 = (JSC::Structure *)v16;
      WTF::AtomStringImpl::addLiteral();
      v19 = JSC::JSObject::get(v17, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
      if (v200[0])
      {
        if (*(_DWORD *)v200[0] == 2)
          WTF::StringImpl::destroy(v200[0], v18);
        else
          *(_DWORD *)v200[0] -= 2;
      }
      if (*((_DWORD *)v12 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) != 0)
        goto LABEL_72;
      if (v19 == 10)
      {
        v20 = 0;
      }
      else
      {
        v200[0] = a2[7];
        v21 = WebCore::parseEnumeration<WebCore::AuthenticatorAttachment>((JSC::JSGlobalObject *)a2, v19);
        if (*((_DWORD *)v200[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v200[0]) & 1) != 0)
          goto LABEL_72;
        if (v21 <= 0xFFu)
          goto LABEL_191;
        v20 = v21 | 0x100;
      }
      WTF::AtomStringImpl::addLiteral();
      v23 = JSC::JSObject::get(v17, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
      if (v200[0])
      {
        if (*(_DWORD *)v200[0] == 2)
          WTF::StringImpl::destroy(v200[0], v22);
        else
          *(_DWORD *)v200[0] -= 2;
      }
      if (*((_DWORD *)v12 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) != 0)
        goto LABEL_72;
      if (v23 == 10)
      {
        v24 = 0;
LABEL_44:
        WTF::AtomStringImpl::addLiteral();
        v28 = JSC::JSObject::get(v17, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
        if (v200[0])
        {
          if (*(_DWORD *)v200[0] == 2)
            WTF::StringImpl::destroy(v200[0], v27);
          else
            *(_DWORD *)v200[0] -= 2;
        }
        if (*((_DWORD *)v12 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) != 0)
          goto LABEL_72;
        if (v28 == 10)
        {
          v29 = 0;
        }
        else
        {
          v200[0] = a2[7];
          v30 = WebCore::parseEnumeration<WebCore::ResidentKeyRequirement>((JSC::JSGlobalObject *)a2, v28);
          if (*((_DWORD *)v200[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v200[0]) & 1) != 0)
            goto LABEL_72;
          if (v30 <= 0xFFu)
            goto LABEL_191;
          v29 = v30 | 0x100u;
        }
        WTF::AtomStringImpl::addLiteral();
        v32 = JSC::JSObject::get(v17, (JSC::JSGlobalObject *)a2, (unint64_t)v200[0]);
        if (v200[0])
        {
          if (*(_DWORD *)v200[0] == 2)
            WTF::StringImpl::destroy(v200[0], v31);
          else
            *(_DWORD *)v200[0] -= 2;
        }
        if (*((_DWORD *)v12 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) != 0)
          goto LABEL_72;
        if (v32 == 10)
        {
          v13 = v20 | (unint64_t)(v29 << 16);
          v15 = 1;
          if (v24)
          {
LABEL_59:
            v14 = 0x100000000;
            goto LABEL_64;
          }
LABEL_63:
          v14 = 0;
LABEL_64:
          v33 = v13 | v14;
          v224 = v33;
          v225 = (v33 | (unint64_t)(v15 << 40)) >> 32;
          if (!v226)
            v226 = 1;
          goto LABEL_66;
        }
        v200[0] = a2[7];
        v15 = WebCore::parseEnumeration<WebCore::UserVerificationRequirement>((JSC::JSGlobalObject *)a2, v32);
        if (*((_DWORD *)v200[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v200[0]) & 1) != 0)
          goto LABEL_72;
        if ((unsigned __int16)v15 > 0xFFu)
        {
          v13 = v20 | (unint64_t)(v29 << 16);
          if (v24)
            goto LABEL_59;
          goto LABEL_63;
        }
        goto LABEL_191;
      }
      v25 = a2[7];
      if (v23 >= 0xFFFE000000000000)
      {
        v182 = (_DWORD)v23 == 0;
        goto LABEL_555;
      }
      *(_QWORD *)&v26 = v23 - 0x2000000000000;
      if (v23 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        if (v26 <= 0.0)
        {
          v24 = v26 < 0.0;
          goto LABEL_43;
        }
      }
      else
      {
        if ((v23 & 0xFFFE000000000002) != 0)
        {
          v24 = v23 == 7;
          goto LABEL_43;
        }
        v183 = *(unsigned __int8 *)(v23 + 5);
        if (v183 == 3)
        {
          v186 = *(_DWORD *)(v23 + 8);
LABEL_551:
          v182 = v186 == 0;
          goto LABEL_555;
        }
        if (v183 == 2)
        {
          v184 = *(_QWORD *)(v23 + 8);
          if ((v184 & 1) != 0)
            v185 = (int *)(v23 + 16);
          else
            v185 = (int *)(v184 + 4);
          v186 = *v185;
          goto LABEL_551;
        }
        if ((*(_BYTE *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0xA) & 1) != 0)
        {
          v182 = *(_QWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x28) == (_QWORD)a2;
LABEL_555:
          v24 = !v182;
LABEL_43:
          if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
            goto LABEL_72;
          goto LABEL_44;
        }
      }
      v24 = 1;
      goto LABEL_43;
    }
  }
  JSC::throwTypeError();
  *(_DWORD *)(a3 + 296) = 1;
}

uint64_t WebCore::convertDictionary<WebCore::PublicKeyCredentialCreationOptions::Parameters>(uint64_t a1, JSC::VM **a2, JSC::JSCell *this)
{
  uint64_t Object;
  JSC::Structure *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  char *v9;
  char *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  int v15;
  JSC::VM *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  unsigned __int16 v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  int v26;
  int v27;
  JSC::VM *v28;
  unint64_t v29;
  _BYTE v30[7];
  JSC::VM *v31;
  WTF::StringImpl *v32;

  v31 = a2[7];
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)this & 0xFFFE000000000002) == 0)
    {
      Object = JSC::JSCell::getObject(this);
      if (Object)
      {
        v6 = (JSC::Structure *)Object;
        WTF::AtomStringImpl::addLiteral();
        v8 = (WTF::StringImpl *)JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v32);
        if (v32)
        {
          if (*(_DWORD *)v32 == 2)
            WTF::StringImpl::destroy(v32, v7);
          else
            *(_DWORD *)v32 -= 2;
        }
        if (*((_DWORD *)v31 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v31);
          if ((result & 1) != 0)
            goto LABEL_11;
        }
        if (v8 == (WTF::StringImpl *)10)
          goto LABEL_9;
        v32 = v8;
        v16 = a2[7];
        if ((unint64_t)v8 < 0xFFFE000000000000)
        {
          v22 = (unint64_t)v8 - 0x2000000000000;
          if ((unint64_t)v8 - 0x2000000000000 >= 0xFFFC000000000000)
          {
            v28 = a2[7];
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v32, (JSC::JSGlobalObject *)a2);
            v16 = v28;
            v22 = v29;
          }
          v23 = (v22 >> 52) & 0x7FF;
          v24 = v23 - 1023;
          v25 = v22 >> (51 - (v22 >> 52));
          if (v23 > 0x433)
            LODWORD(v25) = v22 << ((v22 >> 52) - 51);
          if (v23 >= 0x41F)
            v26 = v25;
          else
            v26 = (((1 << ((v22 >> 52) + 1)) - 1) & v25) + (1 << ((v22 >> 52) + 1));
          if ((v22 & 0x8000000000000000) == 0)
            v27 = v26;
          else
            v27 = -v26;
          if (v24 <= 0x53)
            LODWORD(v8) = v27;
          else
            LODWORD(v8) = 0;
        }
        if (*((_DWORD *)v16 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
          if ((_DWORD)result)
            goto LABEL_11;
        }
        WTF::AtomStringImpl::addLiteral();
        v17 = v32;
        v19 = JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v32);
        if (v17)
        {
          if (*(_DWORD *)v17 == 2)
            WTF::StringImpl::destroy(v17, v18);
          else
            *(_DWORD *)v17 -= 2;
        }
        if (*((_DWORD *)v31 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v31);
          if ((result & 1) != 0)
            goto LABEL_11;
        }
        if (v19 == 10)
        {
          v9 = "type";
          v10 = "PublicKeyCredentialType";
          v11 = (int)a2;
          v12 = 5;
          v13 = 24;
          goto LABEL_10;
        }
        v32 = a2[7];
        v20 = v32;
        result = WebCore::parseEnumeration<WebCore::PublicKeyCredentialType>((JSC::JSGlobalObject *)a2, v19);
        v21 = result;
        if (*((_DWORD *)v20 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v20);
          if ((result & 1) != 0)
            goto LABEL_11;
        }
        if (v21 > 0xFFu)
        {
          v15 = 0;
          *(_BYTE *)a1 = v21 != 0;
          *(_DWORD *)(a1 + 1) = *(_DWORD *)v30;
          *(_DWORD *)(a1 + 4) = *(_DWORD *)&v30[3];
          *(_QWORD *)(a1 + 8) = (int)v8;
          goto LABEL_12;
        }
      }
    }
    result = JSC::throwTypeError();
    goto LABEL_11;
  }
LABEL_9:
  v9 = "alg";
  v10 = "long";
  v11 = (int)a2;
  v12 = 4;
  v13 = 5;
LABEL_10:
  result = (uint64_t)WebCore::throwRequiredMemberTypeError(v11, (int)&v31, v9, v12, "PublicKeyCredentialParameters", 30, v10, v13);
LABEL_11:
  v15 = 1;
LABEL_12:
  *(_DWORD *)(a1 + 16) = v15;
  return result;
}

void WebCore::convertDictionary<WebCore::PublicKeyCredentialRequestOptions>(JSC::JSCell *this@<X1>, WTF::StringImpl **a2@<X0>, uint64_t a3@<X8>)
{
  unint64_t v5;
  JSC::Structure *Object;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  WTF *v10;
  uint64_t v11;
  unsigned int *v12;
  WTF *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSC::JSArrayBufferView *v17;
  int v18;
  JSC::ArrayBufferView *v19;
  int v20;
  WTF::StringImpl *v21;
  uint64_t (*v22)();
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  JSC::JSCell *v25;
  unsigned int v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  unsigned int v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  int v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  int v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  unint64_t v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  unint64_t v43;
  unsigned __int16 v44;
  WTF::StringImpl *v45;
  int v46;
  uint64_t v47;
  __int128 v48;
  int v49;
  uint64_t v50;
  JSC::ArrayBufferView *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  WTF::StringImpl *v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  char v66;
  WTF::StringImpl *v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  __int16 v72;
  JSC::VM *v73;
  uint64_t *v74;
  JSC::ArrayBufferView *v75;
  int v76;
  int v77;
  uint64_t v78;

  v78 = *MEMORY[0x1E0C80C00];
  v73 = a2[7];
  v5 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    Object = 0;
LABEL_5:
    v61 = 0;
    v62 = 0;
    LOBYTE(v63) = 0;
    BYTE4(v63) = 0;
    v65 = 0;
    v64 = 0uLL;
    v66 = 1;
    LOBYTE(v67) = 0;
    v71 = 0;
    v72 = 0;
    if (v5 == 2)
      goto LABEL_11;
    WTF::AtomStringImpl::addLiteral();
    v7 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v55);
    if (v55)
    {
      if (*(_DWORD *)v55 == 2)
        WTF::StringImpl::destroy(v55, this);
      else
        *(_DWORD *)v55 -= 2;
    }
    if (*((_DWORD *)v73 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v73))
    {
      *(_DWORD *)(a3 + 224) = 1;
LABEL_33:
      WebCore::PublicKeyCredentialRequestOptions::~PublicKeyCredentialRequestOptions((WebCore::PublicKeyCredentialRequestOptions *)&v61, this);
      return;
    }
    if (v7 == 10)
    {
LABEL_11:
      v8 = 0;
      v60 = 0;
      v9 = 0;
LABEL_12:
      v50 = v9;
      v58 = 0;
      v59 = 0;
      v10 = (WTF *)*((_QWORD *)&v64 + 1);
      if (HIDWORD(v65))
      {
        v11 = 40 * HIDWORD(v65);
        v12 = (unsigned int *)(*((_QWORD *)&v64 + 1) + 16);
        do
        {
          v13 = (WTF *)*((_QWORD *)v12 + 1);
          if (v13)
          {
            *((_QWORD *)v12 + 1) = 0;
            v12[4] = 0;
            WTF::fastFree(v13, this);
          }
          v14 = *v12;
          if ((_DWORD)v14 != -1)
            ((void (*)(WTF::StringImpl **, unsigned int *))off_1E32D2C80[v14])(&v55, v12 - 2);
          *v12 = -1;
          v12 += 10;
          v11 -= 40;
        }
        while (v11);
        v10 = (WTF *)*((_QWORD *)&v64 + 1);
      }
      if (v10)
      {
        *((_QWORD *)&v64 + 1) = 0;
        LODWORD(v65) = 0;
        WTF::fastFree(v10, this);
      }
      *((_QWORD *)&v64 + 1) = v8;
      v65 = v50;
      if (v5 == 2)
        goto LABEL_28;
      WTF::AtomStringImpl::addLiteral();
      v15 = v55;
      v17 = (JSC::JSArrayBufferView *)JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v55);
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v16);
        else
          *(_DWORD *)v15 -= 2;
      }
      if (*((_DWORD *)v73 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v73))
        goto LABEL_29;
      if (v17 == (JSC::JSArrayBufferView *)10)
      {
LABEL_28:
        WebCore::throwRequiredMemberTypeError((int)a2, (int)&v73, "challenge", 10, "PublicKeyCredentialRequestOptions", 34, "(ArrayBufferView or ArrayBuffer)", 33);
LABEL_29:
        *(_DWORD *)(a3 + 224) = 1;
LABEL_30:
        v18 = v60;
        goto LABEL_31;
      }
      v55 = a2[7];
      v19 = (JSC::ArrayBufferView *)JSC::JSArrayBuffer::toWrapped((uint64_t)v55, (uint64_t)v17);
      if (v19)
      {
        *(_DWORD *)v19 += 2;
        v75 = v19;
        v20 = 1;
        v76 = 1;
      }
      else
      {
        JSC::JSArrayBufferView::toWrapped(v17, &v51);
        if (!v51)
        {
          JSC::throwTypeError();
          v49 = 1;
          v77 = 1;
          *(_DWORD *)(a3 + 224) = 1;
          goto LABEL_99;
        }
        v20 = 0;
        v75 = v51;
        v76 = 0;
      }
      v77 = 0;
      LOBYTE(v51) = 0;
      v52 = -1;
      v22 = off_1E32D2C90[v20];
      ((void (*)(WTF::StringImpl **, JSC::ArrayBufferView **, JSC::ArrayBufferView **))v22)(&v55, &v51, &v75);
      v52 = v20;
      LOBYTE(v55) = 0;
      v56 = -1;
      ((void (*)(uint64_t **, WTF::StringImpl **, JSC::ArrayBufferView **))v22)(&v74, &v55, &v51);
      v56 = v20;
      v74 = &v61;
      ((void (*)(uint64_t **, uint64_t *, WTF::StringImpl **))off_1E32D2CA0[v20])(&v74, &v61, &v55);
      if (v56 != -1)
        ((void (*)(uint64_t **, WTF::StringImpl **))off_1E32D2C80[v56])(&v74, &v55);
      v56 = -1;
      if (v52 != -1)
        ((void (*)(uint64_t **, JSC::ArrayBufferView **))off_1E32D2C80[v52])(&v74, &v51);
      WTF::AtomStringImpl::addLiteral();
      v23 = v55;
      v25 = (JSC::JSCell *)JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v55);
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          WTF::StringImpl::destroy(v23, v24);
        else
          *(_DWORD *)v23 -= 2;
      }
      if (*((_DWORD *)v73 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v73))
        goto LABEL_131;
      if (v25 != (JSC::JSCell *)10)
      {
        WebCore::convertDictionary<WebCore::AuthenticationExtensionsClientInputs>(v25, (JSC::JSGlobalObject *)a2, (uint64_t)&v55);
        v26 = v57;
        if (v57)
        {
          *(_DWORD *)(a3 + 224) = 1;
          v30 = v26;
        }
        else
        {
          WebCore::AuthenticationExtensionsClientInputs::AuthenticationExtensionsClientInputs((uint64_t)&v51, (uint64_t)&v55);
          if (v71)
          {
            v28 = v51;
            v51 = 0;
            v29 = v67;
            v67 = v28;
            if (v29)
            {
              if (*(_DWORD *)v29 == 2)
                WTF::StringImpl::destroy(v29, v27);
              else
                *(_DWORD *)v29 -= 2;
            }
            v68 = v52;
            std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs::LargeBlobInputs,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs::LargeBlobInputs,false>>((uint64_t)&v69, (WTF::StringImpl *)&v53);
            std::__optional_storage_base<WebCore::AuthenticationExtensionsClientInputs::PRFInputs,false>::__assign_from[abi:sn180100]<std::__optional_move_assign_base<WebCore::AuthenticationExtensionsClientInputs::PRFInputs,false>>((uint64_t)&v70, (uint64_t)&v54);
          }
          else
          {
            WebCore::AuthenticationExtensionsClientInputs::AuthenticationExtensionsClientInputs((uint64_t)&v67, (uint64_t)&v51);
            v71 = 1;
          }
          WebCore::AuthenticationExtensionsClientInputs::~AuthenticationExtensionsClientInputs((WebCore::AuthenticationExtensionsClientInputs *)&v51);
          v30 = v57;
        }
        if (v30 != -1)
          (*(&off_1E32D2CB0 + v30))((int)&v51, (WebCore::AuthenticationExtensionsClientInputs *)&v55);
        if (v26)
        {
LABEL_98:
          v49 = v77;
          if (v77 == -1)
            goto LABEL_30;
LABEL_99:
          ((void (*)(WTF::StringImpl **, JSC::ArrayBufferView **))off_1E32D2D00[v49])(&v55, &v75);
          goto LABEL_30;
        }
      }
      WTF::AtomStringImpl::addLiteral();
      v31 = v55;
      v33 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v55);
      if (v31)
      {
        if (*(_DWORD *)v31 == 2)
          WTF::StringImpl::destroy(v31, v32);
        else
          *(_DWORD *)v31 -= 2;
      }
      if (*((_DWORD *)v73 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v73))
        goto LABEL_131;
      if (v33 == 10)
      {
LABEL_78:
        WTF::AtomStringImpl::addLiteral();
        v38 = v55;
        v40 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v55);
        if (v38)
        {
          if (*(_DWORD *)v38 == 2)
            WTF::StringImpl::destroy(v38, v39);
          else
            *(_DWORD *)v38 -= 2;
        }
        if (*((_DWORD *)v73 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v73))
          goto LABEL_131;
        if (v40 != 10)
        {
          WebCore::convertToInteger<WebCore::IDLUnsignedLong>((JSC::JSGlobalObject *)a2, v40, &v55);
          if (HIDWORD(v55))
            goto LABEL_131;
          LODWORD(v63) = (_DWORD)v55;
          BYTE4(v63) = 1;
        }
        WTF::AtomStringImpl::addLiteral();
        v41 = v55;
        v43 = JSC::JSObject::get(Object, (JSC::JSGlobalObject *)a2, (unint64_t)v55);
        if (v41)
        {
          if (*(_DWORD *)v41 == 2)
            WTF::StringImpl::destroy(v41, v42);
          else
            *(_DWORD *)v41 -= 2;
        }
        if (*((_DWORD *)v73 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v73))
          goto LABEL_131;
        if (v43 == 10)
        {
          LOBYTE(v44) = 1;
LABEL_93:
          v66 = v44;
          *(_BYTE *)(a3 + 8) = 0;
          this = (JSC::JSCell *)(a3 + 8);
          *(_DWORD *)(a3 + 16) = -1;
          v46 = v62;
          if (v62 != -1)
          {
            ((void (*)(WTF::StringImpl **))off_1E32D2C90[v62])(&v55);
            *(_DWORD *)(a3 + 16) = v46;
            LOBYTE(v44) = v66;
          }
          v47 = v63;
          *(_BYTE *)(a3 + 64) = 0;
          *(_QWORD *)(a3 + 24) = v47;
          v48 = v64;
          v64 = 0uLL;
          *(_OWORD *)(a3 + 32) = v48;
          *(_QWORD *)&v48 = v65;
          v65 = 0;
          *(_QWORD *)(a3 + 48) = v48;
          *(_BYTE *)(a3 + 56) = v44;
          *(_BYTE *)(a3 + 208) = 0;
          if (v71)
          {
            WebCore::AuthenticationExtensionsClientInputs::AuthenticationExtensionsClientInputs(a3 + 64, (uint64_t)&v67);
            *(_BYTE *)(a3 + 208) = 1;
          }
          *(_WORD *)(a3 + 216) = v72;
          *(_DWORD *)(a3 + 224) = 0;
          goto LABEL_98;
        }
        v55 = a2[7];
        v45 = v55;
        v44 = WebCore::parseEnumeration<WebCore::UserVerificationRequirement>((JSC::JSGlobalObject *)a2, v43);
        if (!*((_DWORD *)v45 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v45) & 1) == 0)
        {
          if (v44 > 0xFFu)
            goto LABEL_93;
          JSC::throwTypeError();
        }
LABEL_131:
        *(_DWORD *)(a3 + 224) = 1;
        goto LABEL_98;
      }
      WebCore::valueToUSVString((JSC::JSGlobalObject *)a2, v33, (uint64_t)&v55);
      v34 = v56;
      if (v56)
      {
        *(_DWORD *)(a3 + 224) = 1;
        v37 = v34;
      }
      else
      {
        v35 = v55;
        v55 = 0;
        v36 = (WTF::StringImpl *)v64;
        *(_QWORD *)&v64 = v35;
        if (!v36)
        {
          v37 = 0;
          goto LABEL_76;
        }
        if (*(_DWORD *)v36 != 2)
        {
          v37 = 0;
          *(_DWORD *)v36 -= 2;
          goto LABEL_76;
        }
        WTF::StringImpl::destroy(v36, this);
        v37 = v56;
      }
      if (v37 == -1)
      {
LABEL_77:
        if (v34)
          goto LABEL_98;
        goto LABEL_78;
      }
LABEL_76:
      ((void (*)(JSC::ArrayBufferView **, WTF::StringImpl **))off_1E32D2D10[v37])(&v51, &v55);
      goto LABEL_77;
    }
    v51 = a2[7];
    if ((v7 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v7 + 5) <= 0x16u)
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      JSC::throwTypeError();
      v21 = v55;
      v55 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, this);
        else
          *(_DWORD *)v21 -= 2;
      }
      v18 = 1;
      v60 = 1;
    }
    else
    {
      WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::PublicKeyCredentialDescriptor>>>::convert((uint64_t)&v58, (JSC::JSGlobalObject *)a2, v7);
      v18 = v60;
      if (!v60)
      {
        v8 = v58;
        v9 = v59;
        goto LABEL_12;
      }
    }
    *(_DWORD *)(a3 + 224) = 1;
LABEL_31:
    if (v18 != -1)
      ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32D2CF0[v18])(&v55, &v58);
    goto LABEL_33;
  }
  if (((unint64_t)this & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::Structure *)JSC::JSCell::getObject(this);
    if (Object)
      goto LABEL_5;
  }
  JSC::throwTypeError();
  *(_DWORD *)(a3 + 224) = 1;
}

uint64_t WebCore::parseEnumeration<WebCore::PublicKeyCredentialType>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  const char *v5;
  int v6;
  uint64_t v9;
  uint16x8_t v10;
  uint64_t v12;
  unint64_t v13;

  v3 = a1;
  v13 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
        return 0;
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v13, a1);
  v4 = v12;
  if (!v12)
    return 0;
LABEL_7:
  v5 = *(const char **)(v4 + 8);
  v6 = *(_DWORD *)(v4 + 4);
  if (v5 == "public-key" || v6 != 10)
  {
    if (v6 != 10 || v5 != "public-key")
      goto LABEL_30;
LABEL_22:
    v9 = 256;
    goto LABEL_31;
  }
  if ((*(_BYTE *)(v4 + 16) & 4) != 0)
  {
    if (*v5 == 112 && *(_QWORD *)(v5 + 1) == 0x656B2D63696C6275 && *(_QWORD *)(v5 + 2) == 0x79656B2D63696C62)
      goto LABEL_22;
  }
  else if (*(_WORD *)v5 == 112)
  {
    v10 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968C0A70);
    v10.i16[0] = vminvq_u16(v10);
    if (v10.i32[0])
    {
      if (vminvq_u16((uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 4), (int16x8_t)xmmword_1968C0A80)))
        goto LABEL_22;
    }
  }
LABEL_30:
  v9 = 0;
LABEL_31:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v9;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPushEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v6;
  int v7;
  JSC::Structure *v8;
  JSC::JSCell *v9;
  uint64_t Object;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  BOOL v13;
  int v14;
  WTF::StringImpl *v15;
  unsigned int v16;
  WTF::StringImpl *v17;
  WebCore::JSDOMGlobalObject *v18;
  WTF::StringImpl *v19;
  JSCell *v20;
  JSC::JSCell *v21;
  JSC::JSGlobalObject *v22;
  JSC::JSObject *v23;
  JSC::JSGlobalObject *v24;
  JSC::VM *v25;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::VM *FunctionRealm;
  uint64_t v29;
  unsigned int v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char **v35;
  int v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char **v41;
  int v42;
  uint64_t v43;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t v46;
  JSC::Structure *v47;
  JSC::JSCell *v48;
  uint64_t v49;
  unint64_t SubclassStructure;
  void (***v51)(WebCore::PushEvent *__hidden);
  JSC::VM *v53;
  double v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  unint64_t v57;
  BOOL v58;
  JSC::VM *v59;
  double v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  unint64_t v63;
  BOOL v64;
  JSC::VM *v65;
  double v66;
  WTF::StringImpl *v67;
  WTF::StringImpl *v68;
  JSC::JSArrayBufferView *v69;
  WTF::StringImpl *v70;
  int v71;
  uint64_t (*v72)();
  JSValue v73;
  BOOL v74;
  int v75;
  uint64_t v76;
  int *v77;
  int v78;
  BOOL v79;
  int v80;
  uint64_t v81;
  int *v82;
  int v83;
  BOOL v84;
  int v85;
  uint64_t v86;
  int *v87;
  int v88;
  unint64_t v89;
  __int16 v90;
  BOOL v91;
  char v92[8];
  int v93;
  char v94;
  int v95;
  WTF::StringImpl *v96;
  int v97;
  __int16 v98;
  BOOL v99;
  char v100[8];
  unsigned int v101;
  char v102;
  uint64_t v103;
  char *v104;
  WTF::StringImpl *v105;
  int v106;
  void (***v107)(WebCore::PushEvent *__hidden);
  WTF::StringImpl *v108;
  int v109;
  int v110;
  uint64_t v111;

  v111 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v73.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v4, a1, v73);
  }
  v6 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v96);
  v7 = v97;
  if (v97)
  {
    v20 = 0;
    goto LABEL_63;
  }
  v8 = (JSC::Structure *)0xFFFE000000000002;
  if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v103 = *((_QWORD *)a1 + 7);
    goto LABEL_14;
  }
  v9 = *(JSC::JSCell **)(a2 + 56);
  v2 = *((_QWORD *)a1 + 7);
  v103 = v2;
  if (((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
LABEL_14:
    v100[0] = 0;
    v102 = 0;
    v98 = 0;
    v99 = 0;
    goto LABEL_15;
  }
  if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v9)) == 0)
  {
    JSC::throwTypeError();
    v20 = 0;
    v14 = 1;
    v95 = 1;
    goto LABEL_61;
  }
  v8 = (JSC::Structure *)Object;
  v89 = v4;
  v98 = 0;
  v99 = 0;
  v100[0] = 0;
  v102 = 0;
  WTF::AtomStringImpl::addLiteral();
  v11 = (WTF::StringImpl *)v107;
  v4 = JSC::JSObject::get(v8, a1, (unint64_t)v107);
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v12);
    else
      *(_DWORD *)v11 -= 2;
  }
  if (!*(_DWORD *)(v2 + 80) || !JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2))
  {
    if (v4 == 10)
    {
      v13 = 0;
      goto LABEL_71;
    }
    v53 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v4 >= 0xFFFE000000000000)
      goto LABEL_147;
    *(_QWORD *)&v54 = v4 - 0x2000000000000;
    if (v4 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v54 <= 0.0)
      {
        v13 = v54 < 0.0;
        goto LABEL_70;
      }
    }
    else
    {
      if ((v4 & 0xFFFE000000000002) != 0)
      {
        v13 = v4 == 7;
        goto LABEL_70;
      }
      v75 = *(unsigned __int8 *)(v4 + 5);
      if (v75 == 3)
      {
        v78 = *(_DWORD *)(v4 + 8);
LABEL_175:
        v74 = v78 == 0;
        goto LABEL_176;
      }
      if (v75 == 2)
      {
        v76 = *(_QWORD *)(v4 + 8);
        if ((v76 & 1) != 0)
          v77 = (int *)(v4 + 16);
        else
          v77 = (int *)(v76 + 4);
        v78 = *v77;
        goto LABEL_175;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v74 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        goto LABEL_176;
      }
    }
    v13 = 1;
    goto LABEL_70;
  }
LABEL_145:
  v14 = 1;
  v95 = 1;
  v4 = v89;
  v8 = (JSC::Structure *)0xFFFE000000000002;
  while (1)
  {
    if (v102 && v101 != -1)
    {
      ((void (*)(void (****)(WebCore::PushEvent *__hidden), char *))off_1E32D2D20[v101])(&v107, v100);
      v14 = v95;
    }
    if (v14)
    {
      v20 = 0;
      goto LABEL_60;
    }
    if (!v97)
      break;
    v53 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_147:
    v74 = (_DWORD)v4 == 0;
LABEL_176:
    v13 = !v74;
LABEL_70:
    if (*((_DWORD *)v53 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v53))
      goto LABEL_145;
LABEL_71:
    LOBYTE(v98) = v13;
    WTF::AtomStringImpl::addLiteral();
    v55 = (WTF::StringImpl *)v107;
    v57 = JSC::JSObject::get(v8, a1, (unint64_t)v107);
    if (v55)
    {
      if (*(_DWORD *)v55 == 2)
        WTF::StringImpl::destroy(v55, v56);
      else
        *(_DWORD *)v55 -= 2;
    }
    if (*(_DWORD *)(v2 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2))
      goto LABEL_145;
    if (v57 == 10)
    {
      v58 = 0;
      goto LABEL_82;
    }
    v59 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v57 >= 0xFFFE000000000000)
    {
      v79 = (_DWORD)v57 == 0;
      goto LABEL_183;
    }
    *(_QWORD *)&v60 = v57 - 0x2000000000000;
    if (v57 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v57 & 0xFFFE000000000002) != 0)
      {
        v58 = v57 == 7;
        goto LABEL_81;
      }
      v80 = *(unsigned __int8 *)(v57 + 5);
      if (v80 == 3)
      {
        v83 = *(_DWORD *)(v57 + 8);
      }
      else
      {
        if (v80 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v57 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_187:
            v58 = 1;
            goto LABEL_81;
          }
          v79 = *(_QWORD *)(16 * (*(_DWORD *)v57 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_183;
        }
        v81 = *(_QWORD *)(v57 + 8);
        if ((v81 & 1) != 0)
          v82 = (int *)(v57 + 16);
        else
          v82 = (int *)(v81 + 4);
        v83 = *v82;
      }
      v79 = v83 == 0;
LABEL_183:
      v58 = !v79;
      goto LABEL_81;
    }
    if (v60 > 0.0)
      goto LABEL_187;
    v58 = v60 < 0.0;
LABEL_81:
    if (*((_DWORD *)v59 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v59))
      goto LABEL_145;
LABEL_82:
    HIBYTE(v98) = v58;
    WTF::AtomStringImpl::addLiteral();
    v61 = (WTF::StringImpl *)v107;
    v63 = JSC::JSObject::get(v8, a1, (unint64_t)v107);
    if (v61)
    {
      if (*(_DWORD *)v61 == 2)
        WTF::StringImpl::destroy(v61, v62);
      else
        *(_DWORD *)v61 -= 2;
    }
    if (*(_DWORD *)(v2 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2))
      goto LABEL_145;
    if (v63 != 10)
    {
      v65 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v63 >= 0xFFFE000000000000)
      {
        v84 = (_DWORD)v63 == 0;
        goto LABEL_190;
      }
      *(_QWORD *)&v66 = v63 - 0x2000000000000;
      if (v63 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        if (v66 <= 0.0)
        {
          v64 = v66 < 0.0;
          goto LABEL_92;
        }
      }
      else
      {
        if ((v63 & 0xFFFE000000000002) != 0)
        {
          v64 = v63 == 7;
          goto LABEL_92;
        }
        v85 = *(unsigned __int8 *)(v63 + 5);
        if (v85 == 3)
        {
          v88 = *(_DWORD *)(v63 + 8);
          goto LABEL_189;
        }
        if (v85 == 2)
        {
          v86 = *(_QWORD *)(v63 + 8);
          if ((v86 & 1) != 0)
            v87 = (int *)(v63 + 16);
          else
            v87 = (int *)(v86 + 4);
          v88 = *v87;
LABEL_189:
          v84 = v88 == 0;
LABEL_190:
          v64 = !v84;
LABEL_92:
          if (*((_DWORD *)v65 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v65))
            goto LABEL_145;
          goto LABEL_93;
        }
        if ((*(_BYTE *)(16 * (*(_DWORD *)v63 & 0xFFFFFFFE) + 0xA) & 1) != 0)
        {
          v84 = *(_QWORD *)(16 * (*(_DWORD *)v63 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_190;
        }
      }
      v64 = 1;
      goto LABEL_92;
    }
    v64 = 0;
LABEL_93:
    v99 = v64;
    WTF::AtomStringImpl::addLiteral();
    v67 = (WTF::StringImpl *)v107;
    v69 = (JSC::JSArrayBufferView *)JSC::JSObject::get(v8, a1, (unint64_t)v107);
    if (v67)
    {
      if (*(_DWORD *)v67 == 2)
        WTF::StringImpl::destroy(v67, v68);
      else
        *(_DWORD *)v67 -= 2;
    }
    if (*(_DWORD *)(v2 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2))
      goto LABEL_145;
    v4 = v89;
    if (v69 == (JSC::JSArrayBufferView *)10)
    {
      v8 = (JSC::Structure *)0xFFFE000000000002;
      goto LABEL_15;
    }
    v2 = *((_QWORD *)a1 + 7);
    v70 = (WTF::StringImpl *)JSC::JSArrayBuffer::toWrapped(v2, (uint64_t)v69);
    if (v70)
    {
      *(_DWORD *)v70 += 2;
      v108 = v70;
      v71 = 1;
LABEL_101:
      v109 = v71;
LABEL_105:
      v110 = 0;
      LOBYTE(v105) = 0;
      v106 = -1;
      v2 = (uint64_t)&v108;
      v72 = off_1E32D2D38[v71];
      ((void (*)(char **, WTF::StringImpl **, WTF::StringImpl **))v72)(&v104, &v105, &v108);
      v106 = v71;
      if (v102)
      {
        v104 = v100;
        ((void (*)(char **, char *, WTF::StringImpl **))off_1E32D2DB0[v71])(&v104, v100, &v105);
      }
      else
      {
        v100[0] = 0;
        v101 = -1;
        ((void (*)(char **, char *, WTF::StringImpl **))v72)(&v104, v100, &v105);
        v101 = v71;
        v102 = 1;
      }
      v4 = v89;
      v8 = (JSC::Structure *)0xFFFE000000000002;
      if (v106 != -1)
        ((void (*)(char **, WTF::StringImpl **))off_1E32D2D20[v106])(&v104, &v105);
      if (v110 != -1)
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32D2DC8[v110])(&v105, &v108);
LABEL_15:
      v90 = v98;
      v91 = v99;
      v92[0] = 0;
      v94 = 0;
      if (v102)
      {
        v93 = -1;
        v2 = v101;
        if (v101 != -1)
        {
          ((void (*)(void (****)(WebCore::PushEvent *__hidden), char *, char *))off_1E32D2D38[v101])(&v107, v92, v100);
          v93 = v2;
        }
        v94 = 1;
      }
      v14 = 0;
      v95 = 0;
    }
    else
    {
      JSC::JSArrayBufferView::toWrapped(v69, &v105);
      if (v105)
      {
        v71 = 0;
        v108 = v105;
        v109 = 0;
        goto LABEL_105;
      }
      WebCore::valueToUSVString(a1, (uint64_t)v69, (uint64_t)&v105);
      if (v106 != -1)
      {
        if (!v106)
        {
          v108 = v105;
          v71 = 2;
          goto LABEL_101;
        }
        ((void (*)(char **, WTF::StringImpl **))off_1E32D2D10[v106])(&v104, &v105);
      }
      v8 = (JSC::Structure *)0xFFFE000000000002;
      v14 = 1;
      v95 = 1;
    }
  }
  v15 = v96;
  v96 = 0;
  v105 = v15;
  v98 = v90;
  v99 = v91;
  v100[0] = 0;
  v102 = 0;
  if (v94)
  {
    v101 = -1;
    v16 = v93;
    if (v93 != -1)
    {
      ((void (*)(void (****)(WebCore::PushEvent *__hidden), char *, char *))off_1E32D2D38[v93])(&v107, v100, v92);
      v101 = v16;
    }
    v102 = 1;
  }
  WebCore::PushEvent::create(&v105, (unsigned __int8 *)&v98, 0, (uint64_t *)&v107);
  if (v102 && v101 != -1)
    ((void (*)(char **, char *))off_1E32D2D20[v101])(&v104, v100);
  v19 = v105;
  v105 = 0;
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v17);
    else
      *(_DWORD *)v19 -= 2;
  }
  if (*v107 != off_1E3365E78)
  {
    __break(0xC471u);
    JUMPOUT(0x194E17DF0);
  }
  v20 = (JSCell *)WebCore::createWrapper<WebCore::PushEvent,WebCore::PushEvent>(*(JSC::VM **)(v6 + 40), (uint64_t *)&v107, v18);
  v21 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v21 & 0xFFFE000000000002) != 0)
    goto LABEL_55;
  v22 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v21);
  if (!v22)
    goto LABEL_55;
  v24 = v22;
  if (v22 == *(JSC::JSGlobalObject **)(a2 + 24))
    goto LABEL_55;
  v25 = (JSC::VM *)*((_QWORD *)a1 + 7);
  FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v22, v23);
  if (*((_DWORD *)v25 + 20))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
      goto LABEL_55;
  }
  v29 = *((_QWORD *)FunctionRealm + 412);
  if (!v29)
  {
LABEL_51:
    Prototype = (JSC::JSCell *)WebCore::JSExtendableEvent::createPrototype(v25, FunctionRealm, v26);
    Structure = WebCore::JSExtendableEvent::createStructure((uint64_t *)v25, (uint64_t)FunctionRealm, Prototype);
    v43 = WebCore::cacheDOMStructure((JSCell *)FunctionRealm, Structure, (uint64_t)&WebCore::JSExtendableEvent::s_info);
    goto LABEL_52;
  }
  v30 = *(_DWORD *)(v29 - 8);
  v31 = ((unint64_t)&WebCore::JSPushEvent::s_info + ~((_QWORD)&WebCore::JSPushEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushEvent::s_info + ~((_QWORD)&WebCore::JSPushEvent::s_info << 32)) >> 22);
  v32 = 9 * ((v31 + ~(v31 << 13)) ^ ((v31 + ~(v31 << 13)) >> 8));
  v33 = (v32 ^ (v32 >> 15)) + ~((v32 ^ (v32 >> 15)) << 27);
  v34 = v30 & ((v33 >> 31) ^ v33);
  v35 = *(char ***)(v29 + 16 * v34);
  if (v35 == &WebCore::JSPushEvent::s_info)
  {
LABEL_45:
    v26 = *(WebCore::JSDOMGlobalObject **)(v29 + 16 * v34 + 8);
    if (!v26)
      goto LABEL_46;
  }
  else
  {
    v36 = 1;
    while (v35)
    {
      v34 = ((_DWORD)v34 + v36) & v30;
      v35 = *(char ***)(v29 + 16 * v34);
      ++v36;
      if (v35 == &WebCore::JSPushEvent::s_info)
        goto LABEL_45;
    }
LABEL_46:
    v37 = ((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) >> 22);
    v38 = 9 * ((v37 + ~(v37 << 13)) ^ ((v37 + ~(v37 << 13)) >> 8));
    v39 = (v38 ^ (v38 >> 15)) + ~((v38 ^ (v38 >> 15)) << 27);
    v40 = v30 & ((v39 >> 31) ^ v39);
    v41 = *(char ***)(v29 + 16 * v40);
    if (v41 != &WebCore::JSExtendableEvent::s_info)
    {
      v42 = 1;
      while (v41)
      {
        v40 = ((_DWORD)v40 + v42) & v30;
        v41 = *(char ***)(v29 + 16 * v40);
        ++v42;
        if (v41 == &WebCore::JSExtendableEvent::s_info)
          goto LABEL_50;
      }
      goto LABEL_51;
    }
LABEL_50:
    v43 = *(_QWORD *)(v29 + 16 * v40 + 8);
    if (!v43)
      goto LABEL_51;
LABEL_52:
    v46 = WebCore::JSPushEventPrototype::createStructure((uint64_t *)v25, (uint64_t)FunctionRealm, *(JSC::JSCell **)(v43 + 48));
    *(_DWORD *)(v46 + 16) |= 0x80000u;
    v48 = (JSC::JSCell *)WebCore::JSPushEventPrototype::create(v25, FunctionRealm, v46, v47);
    v49 = WebCore::JSPushEvent::createStructure((uint64_t *)v25, (uint64_t)FunctionRealm, v48);
    v26 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v49, (uint64_t)&WebCore::JSPushEvent::s_info);
  }
  SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v24, v26, v27);
  if (!*((_DWORD *)v25 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) == 0)
    JSC::JSObject::setStructure(v20, v25, SubclassStructure);
LABEL_55:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    v20 = 0;
  v51 = v107;
  v107 = 0;
  if (v51)
  {
    if (*((_DWORD *)v51 + 4) == 1)
      (*v51)[1]((WebCore::PushEvent *)v51);
    else
      --*((_DWORD *)v51 + 4);
  }
  v14 = v95;
LABEL_60:
  if (v14 != -1)
LABEL_61:
    ((void (*)(__int16 *, __int16 *))off_1E32D2D50[v14])(&v98, &v90);
  v7 = v97;
LABEL_63:
  if (v7 != -1)
    ((void (*)(__int16 *, WTF::StringImpl **))off_1E32D2930[v7])(&v90, &v96);
  return v20;
}

uint64_t WebCore::JSPushEvent::prototype(WebCore::JSPushEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char **v18;
  int v19;
  uint64_t v20;
  JSC::JSCell *Prototype;
  uint64_t v22;
  unint64_t Structure;
  JSC::Structure *v24;
  JSC::JSCell *v25;
  uint64_t v26;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_12;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSPushEvent::s_info + ~((_QWORD)&WebCore::JSPushEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushEvent::s_info + ~((_QWORD)&WebCore::JSPushEvent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSPushEvent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSPushEvent::s_info)
        goto LABEL_6;
    }
LABEL_7:
    v14 = ((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) >> 22);
    v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
    v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
    v17 = v6 & ((v16 >> 31) ^ v16);
    v18 = *(char ***)(v5 + 16 * v17);
    if (v18 == &WebCore::JSExtendableEvent::s_info)
    {
LABEL_11:
      v20 = *(_QWORD *)(v5 + 16 * v17 + 8);
      if (v20)
      {
LABEL_13:
        Structure = WebCore::JSPushEventPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v20 + 48));
        *(_DWORD *)(Structure + 16) |= 0x80000u;
        v25 = (JSC::JSCell *)WebCore::JSPushEventPrototype::create(this, a2, Structure, v24);
        v26 = WebCore::JSPushEvent::createStructure((uint64_t *)this, (uint64_t)a2, v25);
        v13 = WebCore::cacheDOMStructure((JSCell *)a2, v26, (uint64_t)&WebCore::JSPushEvent::s_info);
        return *(_QWORD *)(v13 + 48);
      }
    }
    else
    {
      v19 = 1;
      while (v18)
      {
        v17 = ((_DWORD)v17 + v19) & v6;
        v18 = *(char ***)(v5 + 16 * v17);
        ++v19;
        if (v18 == &WebCore::JSExtendableEvent::s_info)
          goto LABEL_11;
      }
    }
LABEL_12:
    Prototype = (JSC::JSCell *)WebCore::JSExtendableEvent::createPrototype(this, a2, a3);
    v22 = WebCore::JSExtendableEvent::createStructure((uint64_t *)this, (uint64_t)a2, Prototype);
    v20 = WebCore::cacheDOMStructure((JSCell *)a2, v22, (uint64_t)&WebCore::JSExtendableEvent::s_info);
    goto LABEL_13;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
    goto LABEL_7;
  return *(_QWORD *)(v13 + 48);
}

uint64_t WebCore::JSPushEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSExtendableEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSExtendableEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSExtendableEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPushEvent::JSPushEvent(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  return result;
}

uint64_t WebCore::JSPushEvent::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  ++*(_DWORD *)(v2 + 16);
  *a2 = v2;
  return this;
}

unint64_t WebCore::JSPushEvent::createPrototype(WebCore::JSPushEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t v16;
  JSC::Structure *v17;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSExtendableEvent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSExtendableEvent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Prototype = (JSC::JSCell *)WebCore::JSExtendableEvent::createPrototype(this, a2, a3);
    Structure = WebCore::JSExtendableEvent::createStructure((uint64_t *)this, (uint64_t)a2, Prototype);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSExtendableEvent::s_info);
  }
  v16 = WebCore::JSPushEventPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v16 + 16) |= 0x80000u;
  return WebCore::JSPushEventPrototype::create(this, a2, v16, v17);
}

uint64_t WebCore::JSPushEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPushEventPrototype::create(WebCore::JSPushEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSPushEvent::s_info, (uint64_t)&WebCore::JSPushEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPushEvent>,(WebCore::DOMConstructorID)186>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1488);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSExtendableEvent>,(WebCore::DOMConstructorID)899>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructor<WebCore::JSPushEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSPushEvent::prototype((WebCore::JSPushEvent *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1488) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPushEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPushEventPrototype::s_info != (char **)(16
                                                         * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPushEvent>,(WebCore::DOMConstructorID)186>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPushEvent_data(uint64_t a1, uint64_t a2)
{
  WTF *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  WTF *v10;
  int v11;
  uint64_t v12;
  unint64_t SlowCase;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char **v20;
  int v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v25;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  WTF *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  WTF *v43;
  void *v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *Allocator;
  unint64_t v51;
  _QWORD *v52;
  WTF *v53;

  v2 = *(WTF **)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 + 3320) + 32);
  if (v4)
  {
    v5 = *(_DWORD *)(v4 - 8);
    v6 = ((unint64_t)v2 + ~((_QWORD)v2 << 32)) ^ (((unint64_t)v2 + ~((_QWORD)v2 << 32)) >> 22);
    v7 = 9 * ((v6 + ~(v6 << 13)) ^ ((v6 + ~(v6 << 13)) >> 8));
    v8 = (v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27);
    v9 = v5 & ((v8 >> 31) ^ v8);
    v10 = *(WTF **)(v4 + 16 * v9);
    if (v10 == v2)
    {
LABEL_7:
      v12 = *(_QWORD *)(v4 + 16 * v9 + 8);
      if (v12)
      {
        if ((*(_BYTE *)(v12 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v12;
          if (*(_QWORD *)v12)
            return SlowCase;
        }
      }
    }
    else
    {
      v11 = 1;
      while (v10)
      {
        v9 = ((_DWORD)v9 + v11) & v5;
        v10 = *(WTF **)(v4 + 16 * v9);
        ++v11;
        if (v10 == v2)
          goto LABEL_7;
      }
    }
  }
  ++*(_DWORD *)v2;
  v14 = *(_QWORD *)(v3 + 3296);
  if (v14)
  {
    v15 = *(_DWORD *)(v14 - 8);
    v16 = ((unint64_t)&WebCore::JSPushMessageData::s_info + ~((_QWORD)&WebCore::JSPushMessageData::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushMessageData::s_info + ~((_QWORD)&WebCore::JSPushMessageData::s_info << 32)) >> 22);
    v17 = 9 * ((v16 + ~(v16 << 13)) ^ ((v16 + ~(v16 << 13)) >> 8));
    v18 = (v17 ^ (v17 >> 15)) + ~((v17 ^ (v17 >> 15)) << 27);
    v19 = v15 & ((v18 >> 31) ^ v18);
    v20 = *(char ***)(v14 + 16 * v19);
    if (v20 == &WebCore::JSPushMessageData::s_info)
    {
LABEL_15:
      v22 = *(_QWORD *)(v14 + 16 * v19 + 8);
      if (v22)
        goto LABEL_17;
    }
    else
    {
      v21 = 1;
      while (v20)
      {
        v19 = ((_DWORD)v19 + v21) & v15;
        v20 = *(char ***)(v14 + 16 * v19);
        ++v21;
        if (v20 == &WebCore::JSPushMessageData::s_info)
          goto LABEL_15;
      }
    }
  }
  v23 = *(uint64_t **)(v3 + 56);
  Structure = WebCore::JSPushMessageDataPrototype::createStructure(v23, v3, *(JSC::JSCell **)(v3 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSPushMessageDataPrototype::create((WebCore::JSPushMessageDataPrototype *)v23, Structure, v25, v26);
  v28 = WebCore::JSPushMessageData::createStructure(v23, v3, v27);
  v22 = WebCore::cacheDOMStructure((JSCell *)v3, v28, (uint64_t)&WebCore::JSPushMessageData::s_info);
LABEL_17:
  v29 = *(_QWORD *)(v3 + 56);
  v30 = *(_QWORD *)(v29 + 41456);
  v31 = *(_QWORD *)(v30 + 23536);
  v32 = *(_QWORD **)(v31 + 1528);
  if (v32)
    goto LABEL_38;
  v33 = *(_QWORD *)(v30 + 22648);
  if (__ldaxr((unsigned __int8 *)v33))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v33))
  {
    goto LABEL_23;
  }
  MEMORY[0x19AEA534C](v33);
LABEL_23:
  v35 = *(_QWORD *)(v33 + 2824);
  if (!*(_QWORD *)(v35 + 1528))
  {
    v36 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v53, "IsoSpace T");
    v52 = 0;
    MEMORY[0x19AEA3204](v36, &v53, v29 + 192, v29 + 1872, 32, 8, &v52);
    v38 = (uint64_t)v52;
    v52 = 0;
    if (v38)
      (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
    v39 = v53;
    v53 = 0;
    if (v39)
    {
      if (*(_DWORD *)v39 == 1)
        WTF::fastFree(v39, v37);
      else
        --*(_DWORD *)v39;
    }
    v40 = *(_QWORD *)(v35 + 1528);
    *(_QWORD *)(v35 + 1528) = v36;
    if (v40)
      (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
  }
  v32 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v42 = *(_QWORD *)(v31 + 1528);
  *(_QWORD *)(v31 + 1528) = v32;
  if (v42)
  {
    v43 = (WTF *)MEMORY[0x19AEA3528](v42, v41);
    WTF::fastFree(v43, v44);
  }
  v45 = __ldxr((unsigned __int8 *)v33);
  if (v45 != 1)
  {
    __clrex();
    goto LABEL_37;
  }
  if (__stlxr(0, (unsigned __int8 *)v33))
LABEL_37:
    WTF::Lock::unlockSlow((WTF::Lock *)v33);
LABEL_38:
  SlowCase = v32[3];
  if (SlowCase >= v32[4])
  {
    SlowCase = v32[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_40;
    }
    v51 = *(_QWORD *)(SlowCase + 8) ^ v32[6];
    v32[4] = SlowCase + HIDWORD(v51);
    v32[5] = SlowCase + (int)v51;
  }
  v32[3] = SlowCase + 32;
LABEL_40:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v22);
  *(_QWORD *)(SlowCase + 24) = v2;
  if (*(_BYTE *)(v29 + 755))
    __dmb(0xAu);
  v46 = *(_QWORD *)(v3 + 3320);
  if ((byte_1EE336530 & 1) == 0)
  {
    qword_1EE336528 = (uint64_t)&off_1E32D2700;
    byte_1EE336530 = 1;
  }
  v53 = v2;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  Allocator = *(_QWORD **)(v48 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE336528;
  Allocator[2] = v46;
  v52 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v46 + 32), (uint64_t *)&v53, (uint64_t *)&v52);
  if (v52)
    v52[1] = 3;
  return SlowCase;
}

uint64_t WebCore::JSPushEvent::subspaceForImpl(WebCore::JSPushEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 1512);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 1512))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 1512);
    *(_QWORD *)(v8 + 1512) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 1512);
  *(_QWORD *)(v3 + 1512) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::PushEvent,WebCore::PushEvent>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char **v20;
  int v21;
  uint64_t v22;
  JSC::JSCell *Prototype;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
  {
    v15 = (uint64_t *)*((_QWORD *)a1 + 7);
    goto LABEL_12;
  }
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSPushEvent::s_info + ~((_QWORD)&WebCore::JSPushEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushEvent::s_info + ~((_QWORD)&WebCore::JSPushEvent::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSPushEvent::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSPushEvent::s_info)
        goto LABEL_6;
    }
LABEL_7:
    v15 = (uint64_t *)*((_QWORD *)a1 + 7);
    v16 = ((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) >> 22);
    v17 = 9 * ((v16 + ~(v16 << 13)) ^ ((v16 + ~(v16 << 13)) >> 8));
    v18 = (v17 ^ (v17 >> 15)) + ~((v17 ^ (v17 >> 15)) << 27);
    v19 = v7 & ((v18 >> 31) ^ v18);
    v20 = *(char ***)(v6 + 16 * v19);
    if (v20 == &WebCore::JSExtendableEvent::s_info)
    {
LABEL_11:
      v22 = *(_QWORD *)(v6 + 16 * v19 + 8);
      if (v22)
      {
LABEL_13:
        Structure = WebCore::JSPushEventPrototype::createStructure(v15, (uint64_t)a1, *(JSC::JSCell **)(v22 + 48));
        *(_DWORD *)(Structure + 16) |= 0x80000u;
        v27 = (JSC::JSCell *)WebCore::JSPushEventPrototype::create((WebCore::JSPushEventPrototype *)v15, a1, Structure, v26);
        v28 = WebCore::JSPushEvent::createStructure(v15, (uint64_t)a1, v27);
        v14 = WebCore::cacheDOMStructure((JSCell *)a1, v28, (uint64_t)&WebCore::JSPushEvent::s_info);
        goto LABEL_14;
      }
    }
    else
    {
      v21 = 1;
      while (v20)
      {
        v19 = ((_DWORD)v19 + v21) & v7;
        v20 = *(char ***)(v6 + 16 * v19);
        ++v21;
        if (v20 == &WebCore::JSExtendableEvent::s_info)
          goto LABEL_11;
      }
    }
LABEL_12:
    Prototype = (JSC::JSCell *)WebCore::JSExtendableEvent::createPrototype((WebCore::JSExtendableEvent *)v15, a1, a3);
    v24 = WebCore::JSExtendableEvent::createStructure(v15, (uint64_t)a1, Prototype);
    v22 = WebCore::cacheDOMStructure((JSCell *)a1, v24, (uint64_t)&WebCore::JSExtendableEvent::s_info);
    goto LABEL_13;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
    goto LABEL_7;
LABEL_14:
  v29 = WebCore::JSPushEvent::create(v14, a1, a2);
  WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)a1 + 415), v5, v29);
  return v29;
}

uint64_t WebCore::JSPushEvent::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSPushEvent::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSPushEvent::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

uint64_t WebCore::JSPushManager::destroy(uint64_t this, JSCell *a2)
{
  _QWORD *v2;

  v2 = *(_QWORD **)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*v2 + 24))(*v2);
  return this;
}

uint64_t WebCore::JSPushManager::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPushManagerPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPushManagerPrototype::create(WebCore::JSPushManagerPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSPushManager::s_info, &WebCore::JSPushManagerPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushManager>,(WebCore::DOMConstructorID)187>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1496);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v36) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushManager>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v35 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v35);
    v9[2848] = v2 + (int)v35;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v36);
  v13 = v36;
  v36 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v36);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (!v16)
    goto LABEL_21;
  v17 = *(_DWORD *)(v16 - 8);
  v18 = ((unint64_t)&WebCore::JSPushManager::s_info + ~((_QWORD)&WebCore::JSPushManager::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushManager::s_info + ~((_QWORD)&WebCore::JSPushManager::s_info << 32)) >> 22);
  v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
  v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
  v21 = v17 & ((v20 >> 31) ^ v20);
  v22 = *(char ***)(v16 + 16 * v21);
  if (v22 != &WebCore::JSPushManager::s_info)
  {
    v23 = 1;
    while (v22)
    {
      v21 = ((_DWORD)v21 + v23) & v17;
      v22 = *(char ***)(v16 + 16 * v21);
      ++v23;
      if (v22 == &WebCore::JSPushManager::s_info)
        goto LABEL_20;
    }
    goto LABEL_21;
  }
LABEL_20:
  v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
  if (!v24)
  {
LABEL_21:
    Structure = WebCore::JSPushManagerPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v28 = (JSC::JSCell *)WebCore::JSPushManagerPrototype::create((WebCore::JSPushManagerPrototype *)a1, Structure, v26, v27);
    v29 = WebCore::JSPushManager::createStructure((uint64_t *)a1, a2, v28);
    v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSPushManager::s_info);
  }
  v30 = *(_QWORD *)(v24 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v36);
  if ((*(_BYTE *)((16 * *(unsigned int *)v2) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v2, (JSC::VM *)a1);
  WTF::AtomStringImpl::addLiteral();
  v31 = v36;
  JSC::reifyStaticProperty((JSC::VM *)a1, (uint64_t)&WebCore::JSPushManager::s_info, (unint64_t *)&v36, (uint64_t)&WebCore::JSPushManagerConstructorTableValues, (unsigned __int8 *)v2);
  if (v31)
  {
    if (*(_DWORD *)v31 == 2)
      WTF::StringImpl::destroy(v31, v32);
    else
      *(_DWORD *)v31 -= 2;
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1496) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPushManagerConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPushManagerPrototype::s_info != (char **)(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushManager>,(WebCore::DOMConstructorID)187>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPushManagerConstructor_supportedContentEncodings(JSC *a1)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  WTF *v4;
  WTF *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF *v9;
  int v10;
  unsigned int v11;

  WebCore::PushManager::supportedContentEncodings((uint64_t)&v9);
  v3 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDOMString>>::convert<WTF::String,0ul>(a1, (uint64_t)a1, (uint64_t)&v9);
  if (v11)
  {
    v6 = v9;
    v7 = 8 * v11;
    do
    {
      v8 = *(WTF::StringImpl **)v6;
      *(_QWORD *)v6 = 0;
      if (v8)
      {
        if (*(_DWORD *)v8 == 2)
          WTF::StringImpl::destroy(v8, v2);
        else
          *(_DWORD *)v8 -= 2;
      }
      v6 = (WTF *)((char *)v6 + 8);
      v7 -= 8;
    }
    while (v7);
  }
  v4 = v9;
  if (v9)
  {
    v9 = 0;
    v10 = 0;
    WTF::fastFree(v4, v2);
  }
  return v3;
}

uint64_t WebCore::JSPushManagerOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

uint64_t WebCore::JSPushManagerOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;

  v4 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  (*(void (**)(_QWORD))(*(_QWORD *)*v4 + 16))(*v4);
  v7 = *(_QWORD *)(a3 + 32);
  v6 = (uint64_t *)(a3 + 32);
  v5 = v7;
  if (v7)
  {
    v8 = *(_DWORD *)(v5 - 8);
    v9 = ((unint64_t)v4 + ~((_QWORD)v4 << 32)) ^ (((unint64_t)v4 + ~((_QWORD)v4 << 32)) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = *(_QWORD **)(v5 + 16 * v12);
    if (v13 != v4)
    {
      v14 = 1;
      while (v13)
      {
        v12 = ((_DWORD)v12 + v14) & v8;
        v13 = *(_QWORD **)(v5 + 16 * v12);
        ++v14;
        if (v13 == v4)
          goto LABEL_6;
      }
      v12 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v12 != *(_DWORD *)(v5 - 4))
    {
      v15 = (_QWORD *)(v5 + 16 * v12);
      *v15 = -1;
      v18 = v15[1];
      v17 = v15 + 1;
      v16 = v18;
      if (v18)
      {
        *(_QWORD *)(v16 + 8) = 3;
        *v17 = 0;
      }
      ++*(_DWORD *)(*v6 - 16);
      v19 = *v6;
      if (*v6)
        v20 = *(_DWORD *)(v19 - 12) - 1;
      else
        v20 = -1;
      *(_DWORD *)(v19 - 12) = v20;
      v21 = *v6;
      if (*v6)
      {
        v22 = 6 * *(_DWORD *)(v21 - 12);
        v23 = *(_DWORD *)(v21 - 4);
        if (v22 < v23 && v23 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v23 >> 1, 0);
      }
    }
  }
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*v4 + 24))(*v4);
}

unint64_t WebCore::wrap<WebCore::PushManager>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t SlowCase;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  WTF *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *Allocator;
  unint64_t v52;
  _QWORD *v53;
  WTF *v54;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return SlowCase;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  (*(void (**)(_QWORD))(**(_QWORD **)a3 + 16))(*(_QWORD *)a3);
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSPushManager::s_info + ~((_QWORD)&WebCore::JSPushManager::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushManager::s_info + ~((_QWORD)&WebCore::JSPushManager::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSPushManager::s_info)
    {
LABEL_14:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_16;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSPushManager::s_info)
          goto LABEL_14;
      }
    }
  }
  v24 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSPushManagerPrototype::createStructure(v24, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSPushManagerPrototype::create((WebCore::JSPushManagerPrototype *)v24, Structure, v26, v27);
  v29 = WebCore::JSPushManager::createStructure(v24, a2, v28);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSPushManager::s_info);
LABEL_16:
  v30 = *(_QWORD *)(a2 + 56);
  v31 = *(_QWORD *)(v30 + 41456);
  v32 = *(_QWORD *)(v31 + 23536);
  v33 = *(_QWORD **)(v32 + 1520);
  if (v33)
    goto LABEL_36;
  v34 = *(_QWORD *)(v31 + 22648);
  if (__ldaxr((unsigned __int8 *)v34))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v34))
  {
    goto LABEL_21;
  }
  MEMORY[0x19AEA534C](v34);
LABEL_21:
  v36 = *(_QWORD *)(v34 + 2824);
  if (!*(_QWORD *)(v36 + 1520))
  {
    v37 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v54, "IsoSpace T");
    v53 = 0;
    MEMORY[0x19AEA3204](v37, &v54, v30 + 192, v30 + 1872, 32, 8, &v53);
    v39 = (uint64_t)v53;
    v53 = 0;
    if (v39)
      (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
    v40 = v54;
    v54 = 0;
    if (v40)
    {
      if (*(_DWORD *)v40 == 1)
        WTF::fastFree(v40, v38);
      else
        --*(_DWORD *)v40;
    }
    v41 = *(_QWORD *)(v36 + 1520);
    *(_QWORD *)(v36 + 1520) = v37;
    if (v41)
      (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
  }
  v33 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v43 = *(_QWORD *)(v32 + 1520);
  *(_QWORD *)(v32 + 1520) = v33;
  if (v43)
  {
    v44 = (WTF *)MEMORY[0x19AEA3528](v43, v42);
    WTF::fastFree(v44, v45);
  }
  v46 = __ldxr((unsigned __int8 *)v34);
  if (v46 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v34))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v34);
LABEL_36:
  SlowCase = v33[3];
  if (SlowCase >= v33[4])
  {
    SlowCase = v33[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_38;
    }
    v52 = *(_QWORD *)(SlowCase + 8) ^ v33[6];
    v33[4] = SlowCase + HIDWORD(v52);
    v33[5] = SlowCase + (int)v52;
  }
  v33[3] = SlowCase + 32;
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v30 + 755))
    __dmb(0xAu);
  v47 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336520 & 1) == 0)
  {
    qword_1EE336518 = (uint64_t)&off_1E32D26D0;
    byte_1EE336520 = 1;
  }
  v54 = a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  Allocator = *(_QWORD **)(v49 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE336518;
  Allocator[2] = v47;
  v53 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v47 + 32), (uint64_t *)&v54, (uint64_t *)&v53);
  if (v53)
    v53[1] = 3;
  return SlowCase;
}

uint64_t WebCore::JSPushMessageData::destroy(uint64_t this, JSC::JSCell *a2)
{
  uint64_t v2;
  WTF *v3;

  v2 = *(_QWORD *)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = *(WTF **)(v2 + 8);
      if (v3)
      {
        *(_QWORD *)(v2 + 8) = 0;
        *(_DWORD *)(v2 + 16) = 0;
        WTF::fastFree(v3, a2);
      }
      return bmalloc::api::isoDeallocate((bmalloc::api *)v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSPushMessageData::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPushMessageDataPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPushMessageDataPrototype::create(WebCore::JSPushMessageDataPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(this, (uint64_t)&WebCore::JSPushMessageData::s_info, &WebCore::JSPushMessageDataPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushMessageData>,(WebCore::DOMConstructorID)188>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1504);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushMessageData>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSPushMessageData::s_info + ~((_QWORD)&WebCore::JSPushMessageData::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushMessageData::s_info + ~((_QWORD)&WebCore::JSPushMessageData::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSPushMessageData::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSPushMessageData::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSPushMessageDataPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSPushMessageDataPrototype::create((WebCore::JSPushMessageDataPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSPushMessageData::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSPushMessageData::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1504) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPushMessageDataConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPushMessageDataPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushMessageData>,(WebCore::DOMConstructorID)188>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSPushMessageDataOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSPushMessageDataOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  WTF *v24;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = (~(v3 << 32) + v3) ^ ((unint64_t)(~(v3 << 32) + v3) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_QWORD *)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_QWORD *)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = *(WTF **)(v3 + 8);
    if (v24)
    {
      *(_QWORD *)(v3 + 8) = 0;
      *(_DWORD *)(v3 + 16) = 0;
      WTF::fastFree(v24, a2);
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPushNotificationEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  uint64_t v7;
  int v8;
  JSC::JSCell *v9;
  JSC::VM *v10;
  uint64_t Object;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  _BOOL4 v14;
  _BOOL4 v15;
  _BOOL4 v16;
  char v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  _BOOL4 v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  unint64_t v29;
  JSC::VM *v30;
  double v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  JSC::VM *v35;
  double v36;
  double v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  JSCell *v43;
  uint64_t v44;
  uint64_t v45;
  _BOOL4 v46;
  WTF::StringImpl *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  JSC::JSCell *v55;
  JSC::JSGlobalObject *v56;
  JSC::JSObject *v57;
  JSC::JSGlobalObject *v58;
  JSC::VM *v59;
  JSC::Structure *v60;
  uint64_t FunctionRealm;
  uint64_t v62;
  unsigned int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char **v68;
  int v69;
  JSC::JSObject *v70;
  unint64_t Structure;
  JSC::Structure *v72;
  JSC::JSCell *v73;
  uint64_t v74;
  unint64_t SubclassStructure;
  _DWORD *v76;
  bmalloc::api *v78;
  void *v79;
  JSValue v80;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v82;
  BOOL v83;
  int v84;
  uint64_t v85;
  int *v86;
  int v87;
  BOOL v88;
  int v89;
  uint64_t v90;
  int *v91;
  int v92;
  BOOL v93;
  int v94;
  uint64_t v95;
  int *v96;
  int v97;
  double v98;
  _BOOL4 v99;
  uint64_t v100;
  JSC::VM *v101;
  _BYTE v102[8];
  uint64_t v103;
  unint64_t v104;
  char v105;
  _BYTE v106[7];
  int v107;
  WTF::StringImpl *v108;
  int v109;
  _BYTE v110[7];
  JSC::VM *v111;
  unint64_t v112;

  v5 = *((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v80.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v5, a1, v80);
  }
  v7 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v108);
  v8 = v109;
  if (!v109)
  {
    v100 = v7;
    v101 = (JSC::VM *)v5;
    if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL
      || (v9 = *(JSC::JSCell **)(a2 + 56),
          v10 = (JSC::VM *)*((_QWORD *)a1 + 7),
          v111 = v10,
          ((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) == 2))
    {
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = 0;
      LOBYTE(v18) = 0;
      v10 = 0;
      goto LABEL_83;
    }
    if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v9)) == 0)
    {
      JSC::throwTypeError();
      v43 = 0;
      v44 = 1;
      v107 = 1;
      goto LABEL_119;
    }
    v2 = Object;
    WTF::AtomStringImpl::addLiteral();
    v12 = (WTF::StringImpl *)v112;
    v3 = JSC::JSObject::get((JSC::Structure *)v2, a1, v112);
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v13);
      else
        *(_DWORD *)v12 -= 2;
    }
    if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
    {
LABEL_80:
      v43 = 0;
      v44 = 1;
      v107 = 1;
LABEL_119:
      ((void (*)(unint64_t *, _BYTE *))off_1E32D2FD0[v44])(&v112, v102);
      v8 = v109;
      goto LABEL_120;
    }
    if (v3 == 10)
    {
      v99 = 0;
      while (1)
      {
        WTF::AtomStringImpl::addLiteral();
        v22 = (WTF::StringImpl *)v112;
        v24 = JSC::JSObject::get((JSC::Structure *)v2, a1, v112);
        if (v22)
        {
          if (*(_DWORD *)v22 == 2)
            WTF::StringImpl::destroy(v22, v23);
          else
            *(_DWORD *)v22 -= 2;
        }
        if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
          goto LABEL_80;
        if (v24 == 10)
        {
          v15 = 0;
          goto LABEL_30;
        }
        v25 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v24 >= 0xFFFE000000000000)
          break;
        *(_QWORD *)&v26 = v24 - 0x2000000000000;
        if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          if ((v24 & 0xFFFE000000000002) != 0)
          {
            v15 = v24 == 7;
            goto LABEL_29;
          }
          v89 = *(unsigned __int8 *)(v24 + 5);
          if (v89 == 3)
          {
            v92 = *(_DWORD *)(v24 + 8);
            goto LABEL_190;
          }
          if (v89 == 2)
          {
            v90 = *(_QWORD *)(v24 + 8);
            if ((v90 & 1) != 0)
              v91 = (int *)(v24 + 16);
            else
              v91 = (int *)(v90 + 4);
            v92 = *v91;
LABEL_190:
            v88 = v92 == 0;
          }
          else
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_192:
              v15 = 1;
              goto LABEL_29;
            }
            v88 = *(_QWORD *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          }
LABEL_202:
          v15 = !v88;
          goto LABEL_29;
        }
        if (v26 > 0.0)
          goto LABEL_192;
        v15 = v26 < 0.0;
LABEL_29:
        if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
          goto LABEL_80;
LABEL_30:
        WTF::AtomStringImpl::addLiteral();
        v27 = (WTF::StringImpl *)v112;
        v29 = JSC::JSObject::get((JSC::Structure *)v2, a1, v112);
        if (v27)
        {
          if (*(_DWORD *)v27 == 2)
            WTF::StringImpl::destroy(v27, v28);
          else
            *(_DWORD *)v27 -= 2;
        }
        if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
          goto LABEL_80;
        if (v29 != 10)
        {
          v30 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v29 >= 0xFFFE000000000000)
          {
            v93 = (_DWORD)v29 == 0;
            goto LABEL_206;
          }
          *(_QWORD *)&v31 = v29 - 0x2000000000000;
          if (v29 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            if (v31 <= 0.0)
            {
              v16 = v31 < 0.0;
              goto LABEL_40;
            }
          }
          else
          {
            if ((v29 & 0xFFFE000000000002) != 0)
            {
              v16 = v29 == 7;
              goto LABEL_40;
            }
            v94 = *(unsigned __int8 *)(v29 + 5);
            if (v94 == 3)
            {
              v97 = *(_DWORD *)(v29 + 8);
              goto LABEL_194;
            }
            if (v94 == 2)
            {
              v95 = *(_QWORD *)(v29 + 8);
              if ((v95 & 1) != 0)
                v96 = (int *)(v29 + 16);
              else
                v96 = (int *)(v95 + 4);
              v97 = *v96;
LABEL_194:
              v93 = v97 == 0;
LABEL_206:
              v16 = !v93;
LABEL_40:
              if (*((_DWORD *)v30 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
                goto LABEL_80;
              goto LABEL_41;
            }
            if ((*(_BYTE *)(16 * (*(_DWORD *)v29 & 0xFFFFFFFE) + 0xA) & 1) != 0)
            {
              v93 = *(_QWORD *)(16 * (*(_DWORD *)v29 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
              goto LABEL_206;
            }
          }
          v16 = 1;
          goto LABEL_40;
        }
        v16 = 0;
LABEL_41:
        WTF::AtomStringImpl::addLiteral();
        v32 = (WTF::StringImpl *)v112;
        v34 = JSC::JSObject::get((JSC::Structure *)v2, a1, v112);
        if (v32)
        {
          if (*(_DWORD *)v32 == 2)
            WTF::StringImpl::destroy(v32, v33);
          else
            *(_DWORD *)v32 -= 2;
        }
        if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
          goto LABEL_80;
        if (v34 == 10)
        {
          v17 = 0;
          LOBYTE(v18) = 0;
        }
        else
        {
          v112 = v34;
          if (v34 < 0xFFFE000000000000 || (v34 & 0x80000000) != 0)
          {
            v35 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v34 >= 0xFFFE000000000000)
            {
              v36 = (double)(int)v34;
            }
            else if (v34 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              v82 = (JSC::VM *)*((_QWORD *)a1 + 7);
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v112, a1);
              v35 = v82;
            }
            else
            {
              *(_QWORD *)&v36 = v34 - 0x2000000000000;
            }
            if (*((_DWORD *)v35 + 20))
            {
              v98 = v36;
              hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v35);
              v36 = v98;
              if ((hasExceptionsAfterHandlingTraps & 1) != 0)
                goto LABEL_80;
            }
            if (fabs(v36) == INFINITY)
            {
              v18 = 0;
            }
            else
            {
              v37 = fmod(trunc(v36), 1.84467441e19);
              v18 = v37 >= 0.0 ? (unint64_t)v37 : -(uint64_t)(unint64_t)-v37;
            }
          }
          else
          {
            v18 = v34;
          }
          v5 = v18 >> 8;
          v17 = 1;
        }
        WTF::AtomStringImpl::addLiteral();
        v3 = v112;
        v2 = JSC::JSObject::get((JSC::Structure *)v2, a1, v112);
        if (v3)
        {
          if (*(_DWORD *)v3 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v3, v38);
          else
            *(_DWORD *)v3 -= 2;
        }
        if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
          goto LABEL_80;
        if (v2 == 10)
        {
          v10 = 0;
        }
        else
        {
          v112 = *((_QWORD *)a1 + 7);
          if ((v2 & 0xFFFE000000000002) != 0)
            goto LABEL_79;
          v39 = *(unsigned int *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0x4C);
          v40 = *(_DWORD *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0x4C) != 0;
          if ((_DWORD)v39)
          {
            v41 = 16 * v39;
            if ((char **)v41 != &WebCore::JSNotification::s_info)
            {
              do
              {
                v41 = *(_QWORD *)(v41 + 16);
                v40 = v41 != 0;
              }
              while ((char **)v41 != &WebCore::JSNotification::s_info && v41 != 0);
            }
          }
          if (!v40)
          {
LABEL_79:
            JSC::throwTypeError();
            goto LABEL_80;
          }
          v45 = *(_QWORD *)(v2 + 24);
          v10 = (JSC::VM *)(v45 - 32);
          ++*(_DWORD *)(v45 - 8);
        }
        v14 = v99;
LABEL_83:
        v102[0] = v14;
        v102[1] = v15;
        v102[2] = v16;
        v104 = v18 | (v5 << 8);
        v105 = v17;
        v46 = v14;
        *(_DWORD *)v106 = *(_DWORD *)v110;
        *(_DWORD *)&v106[3] = *(_DWORD *)&v110[3];
        v107 = 0;
        if (!v109)
        {
          v47 = v108;
          v108 = 0;
          v103 = 0;
          v48 = bmalloc::api::isoAllocate();
          WTF::MonotonicTime::now((WTF::MonotonicTime *)v48);
          *(_QWORD *)(v48 + 8) = 0;
          if (v15)
            v51 = 4;
          else
            v51 = 0;
          if (v16)
            v52 = 8;
          else
            v52 = 0;
          if (v46)
            v53 = 262146;
          else
            v53 = 0x40000;
          v54 = v53 | v51 | v52 | (v47 != 0) | *(_DWORD *)(v48 + 20) & 0xFFC00000;
          *(_DWORD *)(v48 + 16) = 1;
          *(_DWORD *)(v48 + 20) = v54;
          if (v47)
          {
            *(_DWORD *)v47 += 2;
            v54 = *(_DWORD *)(v48 + 20);
          }
          *(_QWORD *)(v48 + 24) = v47;
          *(_QWORD *)(v48 + 32) = 0;
          *(_OWORD *)(v48 + 40) = 0u;
          *(_QWORD *)(v48 + 56) = v50;
          *(_DWORD *)(v48 + 20) = v54 | 0x4000;
          *(_OWORD *)(v48 + 64) = 0u;
          *(_DWORD *)(v48 + 80) = 0;
          *(_QWORD *)(v48 + 88) = 0;
          *(_QWORD *)v48 = off_1E3365F40;
          *(_BYTE *)(v48 + 368) = 0;
          *(_BYTE *)(v48 + 384) = 0;
          *(_BYTE *)(v48 + 400) = 0;
          *(_OWORD *)(v48 + 96) = 0u;
          *(_OWORD *)(v48 + 112) = 0u;
          *(_BYTE *)(v48 + 128) = 0;
          v112 = v48;
          if (v10)
          {
            if (*((_DWORD *)v10 + 6) != 1)
            {
              --*((_DWORD *)v10 + 6);
              goto LABEL_98;
            }
            WebCore::Notification::~Notification(v10, v49);
            bmalloc::api::isoDeallocate(v78, v79);
            if (!v47)
            {
LABEL_101:
              v43 = (JSCell *)WebCore::toJSNewlyCreated(*(_QWORD *)(v100 + 40), (uint64_t *)&v112);
              v55 = *(JSC::JSCell **)(a2 + 40);
              if (((unint64_t)v55 & 0xFFFE000000000002) != 0
                || (v56 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v55)) == 0
                || (v58 = v56, v56 == *(JSC::JSGlobalObject **)(a2 + 24))
                || (v59 = (JSC::VM *)*((_QWORD *)a1 + 7),
                    FunctionRealm = JSC::getFunctionRealm(a1, v56, v57),
                    *((_DWORD *)v59 + 20))
                && (JSC::VM::hasExceptionsAfterHandlingTraps(v59) & 1) != 0)
              {
LABEL_114:
                if (*((_DWORD *)v101 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v101) & 1) != 0)
                  v43 = 0;
                v76 = (_DWORD *)v112;
                v112 = 0;
                if (v76)
                {
                  if (v76[4] == 1)
                    (*(void (**)(_DWORD *))(*(_QWORD *)v76 + 8))(v76);
                  else
                    --v76[4];
                }
                v44 = 0;
                goto LABEL_119;
              }
              v62 = *(_QWORD *)(FunctionRealm + 3296);
              if (v62)
              {
                v63 = *(_DWORD *)(v62 - 8);
                v64 = ((unint64_t)&WebCore::JSPushNotificationEvent::s_info
                     + ~((_QWORD)&WebCore::JSPushNotificationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushNotificationEvent::s_info
                                                                                     + ~((_QWORD)&WebCore::JSPushNotificationEvent::s_info << 32)) >> 22);
                v65 = 9 * ((v64 + ~(v64 << 13)) ^ ((v64 + ~(v64 << 13)) >> 8));
                v66 = (v65 ^ (v65 >> 15)) + ~((v65 ^ (v65 >> 15)) << 27);
                v67 = v63 & ((v66 >> 31) ^ v66);
                v68 = *(char ***)(v62 + 16 * v67);
                if (v68 != &WebCore::JSPushNotificationEvent::s_info)
                {
                  v69 = 1;
                  while (v68)
                  {
                    v67 = ((_DWORD)v67 + v69) & v63;
                    v68 = *(char ***)(v62 + 16 * v67);
                    ++v69;
                    if (v68 == &WebCore::JSPushNotificationEvent::s_info)
                      goto LABEL_110;
                  }
                  goto LABEL_111;
                }
LABEL_110:
                v70 = *(JSC::JSObject **)(v62 + 16 * v67 + 8);
                if (!v70)
                  goto LABEL_111;
              }
              else
              {
LABEL_111:
                Structure = WebCore::JSPushNotificationEventPrototype::createStructure((uint64_t *)v59, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
                *(_DWORD *)(Structure + 16) |= 0x80000u;
                v73 = (JSC::JSCell *)WebCore::JSPushNotificationEventPrototype::create(v59, (JSC::VM *)FunctionRealm, Structure, v72);
                v74 = WebCore::JSPushNotificationEvent::createStructure((uint64_t *)v59, FunctionRealm, v73);
                v70 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v74, (uint64_t)&WebCore::JSPushNotificationEvent::s_info);
              }
              SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v58, v70, v60);
              if (!*((_DWORD *)v59 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v59) & 1) == 0)
                JSC::JSObject::setStructure(v43, v59, SubclassStructure);
              goto LABEL_114;
            }
          }
          else
          {
LABEL_98:
            if (!v47)
              goto LABEL_101;
          }
          if (*(_DWORD *)v47 == 2)
            WTF::StringImpl::destroy(v47, (WTF::StringImpl *)v49);
          else
            *(_DWORD *)v47 -= 2;
          goto LABEL_101;
        }
        v19 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_158:
        v83 = (_DWORD)v3 == 0;
LABEL_198:
        v21 = !v83;
LABEL_18:
        v99 = v21;
        if (*((_DWORD *)v19 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
          goto LABEL_80;
      }
      v88 = (_DWORD)v24 == 0;
      goto LABEL_202;
    }
    v19 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v3 >= 0xFFFE000000000000)
      goto LABEL_158;
    *(_QWORD *)&v20 = v3 - 0x2000000000000;
    if (v3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v20 <= 0.0)
      {
        v21 = v20 < 0.0;
        goto LABEL_18;
      }
    }
    else
    {
      if ((v3 & 0xFFFE000000000002) != 0)
      {
        v21 = v3 == 7;
        goto LABEL_18;
      }
      v84 = *(unsigned __int8 *)(v3 + 5);
      if (v84 == 3)
      {
        v87 = *(_DWORD *)(v3 + 8);
LABEL_186:
        v83 = v87 == 0;
        goto LABEL_198;
      }
      if (v84 == 2)
      {
        v85 = *(_QWORD *)(v3 + 8);
        if ((v85 & 1) != 0)
          v86 = (int *)(v3 + 16);
        else
          v86 = (int *)(v85 + 4);
        v87 = *v86;
        goto LABEL_186;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v83 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        goto LABEL_198;
      }
    }
    v21 = 1;
    goto LABEL_18;
  }
  v43 = 0;
LABEL_120:
  if (v8 != -1)
    ((void (*)(_BYTE *, WTF::StringImpl **))off_1E32D2930[v8])(v102, &v108);
  return v43;
}

uint64_t WebCore::JSPushNotificationEvent::prototype(WebCore::JSPushNotificationEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSPushNotificationEvent::s_info
      + ~((_QWORD)&WebCore::JSPushNotificationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushNotificationEvent::s_info
                                                                      + ~((_QWORD)&WebCore::JSPushNotificationEvent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSPushNotificationEvent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSPushNotificationEvent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSPushNotificationEventPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSPushNotificationEventPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSPushNotificationEvent::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSPushNotificationEvent::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

_DWORD *WebCore::JSPushNotificationEvent::destroy(WebCore::JSPushNotificationEvent *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::JSPushNotificationEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPushNotificationEvent::JSPushNotificationEvent(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

unint64_t WebCore::JSPushNotificationEvent::createPrototype(WebCore::JSPushNotificationEvent *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t Structure;
  JSC::Structure *v6;

  Structure = WebCore::JSPushNotificationEventPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSPushNotificationEventPrototype::create(this, (JSC::VM *)a2, Structure, v6);
}

uint64_t WebCore::JSPushNotificationEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPushNotificationEventPrototype::create(WebCore::JSPushNotificationEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSPushNotificationEvent::s_info, &WebCore::JSPushNotificationEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPushNotificationEvent>,(WebCore::DOMConstructorID)189>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1512);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v33) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v33, &WebCore::JSDOMConstructor<WebCore::JSPushNotificationEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v32);
    v9[2848] = v2 + (int)v32;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000001, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v33);
  v13 = v33;
  v33 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v33);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSPushNotificationEvent::s_info
         + ~((_QWORD)&WebCore::JSPushNotificationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushNotificationEvent::s_info
                                                                         + ~((_QWORD)&WebCore::JSPushNotificationEvent::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSPushNotificationEvent::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSPushNotificationEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSPushNotificationEventPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSPushNotificationEventPrototype::create((WebCore::JSPushNotificationEventPrototype *)a1, (JSC::VM *)a2, Structure, v26);
  v28 = WebCore::JSPushNotificationEvent::createStructure((uint64_t *)a1, a2, v27);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSPushNotificationEvent::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v24 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1512) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsPushNotificationEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSPushNotificationEventPrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPushNotificationEvent>,(WebCore::DOMConstructorID)189>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsPushNotificationEvent_proposedNotification(int a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v2)
    return WebCore::wrap<WebCore::Notification>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

unint64_t WebCore::jsPushNotificationEvent_proposedAppBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  double v5;

  v2 = *(_QWORD *)(a2 + 24);
  if (!*(_BYTE *)(v2 + 120))
    return 2;
  v3 = *(_QWORD *)(v2 + 112);
  if (HIDWORD(v3))
  {
    v5 = (double)v3;
  }
  else
  {
    if ((v3 & 0x80000000) == 0)
      return v3 | 0xFFFE000000000000;
    v5 = (double)v3;
  }
  return *(_QWORD *)&v5 + 0x2000000000000;
}

uint64_t WebCore::JSPushNotificationEvent::subspaceForImpl(WebCore::JSPushNotificationEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 1536);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 1536))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 1536);
    *(_QWORD *)(v8 + 1536) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 1536);
  *(_QWORD *)(v3 + 1536) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSPushNotificationEventOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

uint64_t WebCore::JSPushNotificationEventOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v26;

  result = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = *(_DWORD *)(result + 16);
  *(_DWORD *)(result + 16) = v4 + 1;
  v5 = result + 8;
  if (!result)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v8 = *(_QWORD *)(a3 + 32);
    v6 = (uint64_t *)(a3 + 32);
    v7 = v8;
    if (v8)
    {
      v9 = *(_DWORD *)(v7 - 8);
      v10 = (~(result << 32) + result) ^ ((unint64_t)(~(result << 32) + result) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(_QWORD *)(v7 + 16 * v13);
      if (v14 != result)
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(_QWORD *)(v7 + 16 * v13);
          ++v15;
          if (v14 == result)
            goto LABEL_14;
        }
        v13 = *(unsigned int *)(v7 - 4);
      }
LABEL_14:
      if (v13 != *(_DWORD *)(v7 - 4))
      {
        v16 = (_QWORD *)(v7 + 16 * v13);
        *v16 = -1;
        v19 = v16[1];
        v18 = v16 + 1;
        v17 = v19;
        if (v19)
        {
          *(_QWORD *)(v17 + 8) = 3;
          *v18 = 0;
        }
        ++*(_DWORD *)(*v6 - 16);
        v20 = *v6;
        if (*v6)
          v21 = *(_DWORD *)(v20 - 12) - 1;
        else
          v21 = -1;
        *(_DWORD *)(v20 - 12) = v21;
        v22 = *v6;
        if (*v6)
        {
          v23 = 6 * *(_DWORD *)(v22 - 12);
          v24 = *(_DWORD *)(v22 - 4);
          if (v23 < v24 && v24 >= 9)
          {
            v26 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v24 >> 1, 0);
            result = v26;
          }
        }
      }
    }
    v4 = *(_DWORD *)(result + 16) - 1;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (!v4)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  *(_DWORD *)(result + 16) = v4;
  return result;
}

uint64_t WebCore::toJS(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _DWORD *v16;

  v3 = *(_QWORD *)(a2 + 3320);
  if (*(_DWORD *)(v3 + 48))
  {
    v8 = *(_QWORD *)(v3 + 32);
    if (v8)
    {
      v9 = *(_DWORD *)(v8 - 8);
      v10 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(_QWORD *)(v8 + 16 * v13);
      if (v14 == a3)
      {
LABEL_15:
        v4 = *(_QWORD *)(v8 + 16 * v13 + 8);
        if (v4)
          goto LABEL_3;
      }
      else
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(_QWORD *)(v8 + 16 * v13);
          ++v15;
          if (v14 == a3)
            goto LABEL_15;
        }
      }
    }
  }
  else
  {
    v4 = *(_QWORD *)(a3 + 8);
    if (v4)
    {
LABEL_3:
      if ((*(_BYTE *)(v4 + 8) & 3) == 0)
      {
        v5 = *(_QWORD *)v4;
        if (*(_QWORD *)v4)
          return v5;
      }
    }
  }
  ++*(_DWORD *)(a3 + 16);
  v16 = (_DWORD *)a3;
  v5 = WebCore::toJSNewlyCreated(a2, (uint64_t *)&v16);
  v6 = v16;
  v16 = 0;
  if (v6)
  {
    if (v6[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 8))(v6);
    else
      --v6[4];
  }
  return v5;
}

uint64_t WebCore::JSPushNotificationEvent::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSPushNotificationEvent::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSPushNotificationEvent::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::PushPermissionState>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::PushPermissionState)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::PushPermissionState)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::PushPermissionState)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::PushPermissionState)::$_0::operator() const(void)::impl;
    unk_1EE2F4990 = &WebCore::convertEnumerationToString(WebCore::PushPermissionState)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::PushPermissionState)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F4998 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::PushPermissionState)::$_2::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::PushPermissionState)::values[a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::JSPushSubscription::prototype(WebCore::JSPushSubscription *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v15;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSPushSubscription::s_info + ~((_QWORD)&WebCore::JSPushSubscription::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushSubscription::s_info + ~((_QWORD)&WebCore::JSPushSubscription::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSPushSubscription::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSPushSubscription::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSPushSubscriptionPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSPushSubscriptionPrototype::create(this, Structure, v15, v16);
    v18 = WebCore::JSPushSubscription::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSPushSubscription::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

WebCore::PushSubscription *WebCore::JSPushSubscription::destroy(WebCore::JSPushSubscription *this, JSC::JSCell *a2)
{
  WebCore::PushSubscription *result;
  bmalloc::api *v4;
  void *v5;

  result = (WebCore::PushSubscription *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::PushSubscription::~PushSubscription(result, a2);
      return (WebCore::PushSubscription *)bmalloc::api::isoDeallocate(v4, v5);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSPushSubscription::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSPushSubscription::JSPushSubscription(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

unint64_t WebCore::JSPushSubscription::createPrototype(WebCore::JSPushSubscription *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  Structure = WebCore::JSPushSubscriptionPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSPushSubscriptionPrototype::create(this, Structure, v5, v6);
}

uint64_t WebCore::JSPushSubscriptionPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSPushSubscriptionPrototype::create(WebCore::JSPushSubscriptionPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(this, (uint64_t)&WebCore::JSPushSubscription::s_info, &WebCore::JSPushSubscriptionPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

