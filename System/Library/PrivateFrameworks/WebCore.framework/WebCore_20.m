uint64_t WebCore::JSBlobEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSBlobEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSBlobEventPrototype::create(WebCore::JSBlobEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSBlobEvent::s_info, &WebCore::JSBlobEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBlobEvent>,(WebCore::DOMConstructorID)120>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 960);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSBlobEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSBlobEvent::s_info + ~((_QWORD)&WebCore::JSBlobEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSBlobEvent::s_info + ~((_QWORD)&WebCore::JSBlobEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSBlobEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSBlobEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSBlobEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSBlobEventPrototype::create((WebCore::JSBlobEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSBlobEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSBlobEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 960) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsBlobEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSBlobEventPrototype::s_info != (char **)(16
                                                         * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBlobEvent>,(WebCore::DOMConstructorID)120>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsBlobEvent_data(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::Blob>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72));
}

unint64_t WebCore::jsBlobEvent_timecode(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 80);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

uint64_t WebCore::JSBlobEvent::subspaceForImpl(WebCore::JSBlobEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 984);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 984))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 984);
    *(_QWORD *)(v8 + 984) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 984);
  *(_QWORD *)(v3 + 984) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::convertDictionary<WebCore::BlobPropertyBag>(uint64_t a1, JSC::JSGlobalObject *a2, JSC::JSCell *this)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t Object;
  JSC::Structure *v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  uint64_t result;
  int v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  unsigned int v18;
  _QWORD v19[2];
  char v20;

  v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v19[1] = v5;
  v6 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v8 = 0;
    v10 = 10;
  }
  else
  {
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      result = JSC::throwTypeError();
      goto LABEL_22;
    }
    v8 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v10 = JSC::JSObject::get(v8, a2, (unint64_t)v17);
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v9);
      else
        *(_DWORD *)v17 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
        goto LABEL_22;
    }
  }
  result = (uint64_t)WebCore::convertOptionalWithDefault<WebCore::IDLEnumeration<WebCore::EndingType>,WebCore::ConversionResult<WebCore::IDLDictionary<WebCore::BlobPropertyBag>> WebCore::convertDictionary<WebCore::BlobPropertyBag>(JSC::JSGlobalObject &,JSC::JSValue)::$_0>(v19, a2, (JSC::JSRopeString *)v10);
  if (HIDWORD(v19[0]))
  {
LABEL_22:
    *(_DWORD *)(a1 + 16) = 1;
    return result;
  }
  v12 = v19[0];
  if (v6 == 2)
  {
    v14 = 10;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v14 = JSC::JSObject::get(v8, a2, (unint64_t)v17);
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v13);
      else
        *(_DWORD *)v17 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
        goto LABEL_22;
    }
  }
  result = (uint64_t)WebCore::convertOptionalWithDefault<WebCore::IDLDOMString,WebCore::ConversionResult<WebCore::IDLDictionary<WebCore::BlobPropertyBag>> WebCore::convertDictionary<WebCore::BlobPropertyBag>(JSC::JSGlobalObject &,JSC::JSValue)::$_1>((WTF::StringImpl *)&v17, a2, v14);
  v15 = v18;
  if (!v18)
  {
    v16 = v17;
    v17 = 0;
    *(_QWORD *)a1 = v16;
    *(_DWORD *)(a1 + 8) = v12;
    *(_DWORD *)(a1 + 16) = 0;
    return ((uint64_t (*)(char *, WTF::StringImpl **))off_1E322E100[v15])(&v20, &v17);
  }
  *(_DWORD *)(a1 + 16) = 1;
  if ((_DWORD)v15 != -1)
    return ((uint64_t (*)(char *, WTF::StringImpl **))off_1E322E100[v15])(&v20, &v17);
  return result;
}

_QWORD *WebCore::convertOptionalWithDefault<WebCore::IDLEnumeration<WebCore::EndingType>,WebCore::ConversionResult<WebCore::IDLDictionary<WebCore::BlobPropertyBag>> WebCore::convertDictionary<WebCore::BlobPropertyBag>(JSC::JSGlobalObject &,JSC::JSValue)::$_0>(_QWORD *result, JSC::JSGlobalObject *a2, JSC::JSRopeString *this)
{
  _DWORD *v3;
  JSC::VM *v4;
  unint64_t v5;

  v3 = result;
  if (this == (JSC::JSRopeString *)10)
  {
    *result = 0;
    return result;
  }
  v4 = (JSC::VM *)*((_QWORD *)a2 + 7);
  result = (_QWORD *)WebCore::parseEnumeration<WebCore::EndingType>(a2, (unint64_t)this);
  v5 = (unint64_t)result;
  if (*((_DWORD *)v4 + 20))
  {
    result = (_QWORD *)JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    if ((_DWORD)result)
      goto LABEL_10;
  }
  if ((v5 & 0xFF00000000) == 0)
  {
    result = (_QWORD *)JSC::throwTypeError();
LABEL_10:
    v3[1] = 1;
    return result;
  }
  *v3 = v5;
  v3[1] = 0;
  return result;
}

WTF::StringImpl *WebCore::convertOptionalWithDefault<WebCore::IDLDOMString,WebCore::ConversionResult<WebCore::IDLDictionary<WebCore::BlobPropertyBag>> WebCore::convertDictionary<WebCore::BlobPropertyBag>(JSC::JSGlobalObject &,JSC::JSValue)::$_1>(WTF::StringImpl *result, JSC::JSGlobalObject *a2, unint64_t this)
{
  _QWORD *v3;
  _DWORD *v4;
  JSC::VM *v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  char hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v9;
  unint64_t v10;

  v3 = result;
  if (this == 10)
  {
    v4 = (_DWORD *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *v4 += 2;
    *(_QWORD *)result = v4;
    goto LABEL_14;
  }
  v10 = this;
  v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v6 = *(WTF::StringImpl **)(this + 8);
    if ((v6 & 1) != 0)
    {
      v6 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a2);
      if (!v6)
        goto LABEL_10;
    }
    else if (!v6)
    {
LABEL_10:
      v9 = v6;
      goto LABEL_11;
    }
    *(_DWORD *)v6 += 2;
    goto LABEL_10;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v10, a2);
LABEL_11:
  if (!*((_DWORD *)v5 + 20))
  {
    result = v9;
LABEL_13:
    *v3 = result;
LABEL_14:
    *((_DWORD *)v3 + 2) = 0;
    return result;
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
  result = v9;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0)
    goto LABEL_13;
  *((_DWORD *)v3 + 2) = 1;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSBroadcastChannel>::construct(JSC *this, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  uint64_t v6;
  WebCore::ScriptExecutionContext *v7;
  uint64_t v8;
  JSC::VM *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WebCore::BroadcastChannel *v12;
  WTF::StringImpl *v13;
  WebCore::JSDOMGlobalObject *v14;
  WTF::StringImpl *v15;
  void *v16;
  JSCell *v17;
  JSC::JSCell *v18;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v20;
  JSC::JSGlobalObject *v21;
  JSC::VM *v22;
  JSC::JSObject *v23;
  JSC::Structure *v24;
  JSC::VM *FunctionRealm;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char **v32;
  int v33;
  JSC::JSCell *v34;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v36;
  JSC::Structure *v37;
  JSC::JSCell *v38;
  uint64_t v39;
  unint64_t SubclassStructure;
  WTF *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  int v48;
  int v49;
  JSValue v51;
  WTF::StringImpl *v53;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v55;
  uint64_t v56;
  int v57;
  JSC::VM *v58;
  WTF::StringImpl *v59;
  WTF *v60;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v58 = v3;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v51.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, this, v51);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(this, &v58, (uint64_t)"BroadcastChannel", 17);
  v7 = (WebCore::ScriptExecutionContext *)v6;
  v8 = *(_QWORD *)(a2 + 48);
  v60 = (WTF *)v8;
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v8 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v8 + 5) == 2)
  {
    v10 = *(WTF::StringImpl **)(v8 + 8);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, this);
      if (!v10)
        goto LABEL_8;
    }
    else if (!v10)
    {
LABEL_8:
      v59 = v10;
      goto LABEL_9;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_8;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v60, this);
LABEL_9:
  if (*((_DWORD *)v9 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v9);
    v11 = v59;
    if (hasExceptionsAfterHandlingTraps)
    {
      v57 = 1;
      v59 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v53);
        else
          *(_DWORD *)v11 -= 2;
      }
      v17 = 0;
      v49 = 1;
      goto LABEL_47;
    }
  }
  else
  {
    v11 = v59;
  }
  v57 = 0;
  v56 = 0;
  v59 = v11;
  v12 = (WebCore::BroadcastChannel *)bmalloc::api::isoAllocate();
  v60 = WebCore::BroadcastChannel::BroadcastChannel(v12, v7, (const WTF::String *)&v59);
  WebCore::ActiveDOMObject::suspendIfNeeded((_QWORD *)v60 + 4);
  v15 = v59;
  v59 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  if (*(uint64_t (***)(WebCore::BroadcastChannel *__hidden))v12 != off_1E33A0AE8)
  {
    __break(0xC471u);
    JUMPOUT(0x19488CADCLL);
  }
  v17 = (JSCell *)WebCore::createWrapper<WebCore::BroadcastChannel,WebCore::BroadcastChannel>(*(JSC::VM **)(v5 + 40), &v60, v14);
  v18 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v18 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v18);
    if (Object)
    {
      v21 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v22 = (JSC::VM *)*((_QWORD *)this + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v20);
        if (!*((_DWORD *)v22 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) == 0)
        {
          v26 = *((_QWORD *)FunctionRealm + 412);
          if (v26)
          {
            v27 = *(_DWORD *)(v26 - 8);
            v28 = ((unint64_t)&WebCore::JSBroadcastChannel::s_info
                 + ~((_QWORD)&WebCore::JSBroadcastChannel::s_info << 32)) ^ (((unint64_t)&WebCore::JSBroadcastChannel::s_info
                                                                            + ~((_QWORD)&WebCore::JSBroadcastChannel::s_info << 32)) >> 22);
            v29 = 9 * ((v28 + ~(v28 << 13)) ^ ((v28 + ~(v28 << 13)) >> 8));
            v30 = (v29 ^ (v29 >> 15)) + ~((v29 ^ (v29 >> 15)) << 27);
            v31 = v27 & ((v30 >> 31) ^ v30);
            v32 = *(char ***)(v26 + 16 * v31);
            if (v32 == &WebCore::JSBroadcastChannel::s_info)
            {
LABEL_24:
              v23 = *(JSC::JSObject **)(v26 + 16 * v31 + 8);
              if (v23)
              {
LABEL_26:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v21, v23, v24);
                if (!*((_DWORD *)v22 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) == 0)
                  JSC::JSObject::setStructure(v17, v22, SubclassStructure);
                goto LABEL_28;
              }
            }
            else
            {
              v33 = 1;
              while (v32)
              {
                v31 = ((_DWORD)v31 + v33) & v27;
                v32 = *(char ***)(v26 + 16 * v31);
                ++v33;
                if (v32 == &WebCore::JSBroadcastChannel::s_info)
                  goto LABEL_24;
              }
            }
          }
          v34 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v22, FunctionRealm, v23);
          Structure = WebCore::JSBroadcastChannelPrototype::createStructure((uint64_t *)v22, (uint64_t)FunctionRealm, v34);
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v38 = (JSC::JSCell *)WebCore::JSBroadcastChannelPrototype::create(v22, Structure, v36, v37);
          v39 = WebCore::JSBroadcastChannel::createStructure((uint64_t *)v22, (uint64_t)FunctionRealm, v38);
          v23 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v39, (uint64_t)&WebCore::JSBroadcastChannel::s_info);
          goto LABEL_26;
        }
      }
    }
  }
LABEL_28:
  if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
    v17 = 0;
  v41 = v60;
  v60 = 0;
  if (v41)
  {
    v42 = *((_QWORD *)v41 + 3);
    if (__ldaxr((unsigned __int8 *)v42))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v42))
    {
      goto LABEL_34;
    }
    MEMORY[0x19AEA534C](v42);
LABEL_34:
    v44 = *(_QWORD *)(v42 + 8);
    v45 = v44 - 1;
    *(_QWORD *)(v42 + 8) = v44 - 1;
    if (v44 == 1)
    {
      v55 = *(_QWORD *)(v42 + 16);
      v46 = *(_QWORD *)(v42 + 24);
      *(_QWORD *)(v42 + 24) = 0;
      v47 = v55 != 0;
    }
    else
    {
      v46 = 0;
      v47 = 1;
    }
    v48 = __ldxr((unsigned __int8 *)v42);
    if (v48 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v42))
      {
        if (v45)
          goto LABEL_46;
LABEL_42:
        if (v46)
          (*(void (**)(uint64_t))(*(_QWORD *)v46 + 72))(v46);
        if (!v47)
          WTF::fastFree((WTF *)v42, v16);
        goto LABEL_46;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v42);
    if (v45)
      goto LABEL_46;
    goto LABEL_42;
  }
LABEL_46:
  v49 = v57;
  if (v57 != -1)
LABEL_47:
    ((void (*)(WTF **, uint64_t *))off_1E322E100[v49])(&v60, &v56);
  return v17;
}

uint64_t WebCore::JSBroadcastChannel::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSBroadcastChannelPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSBroadcastChannelPrototype::create(WebCore::JSBroadcastChannelPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(this, (uint64_t)&WebCore::JSBroadcastChannel::s_info, &WebCore::JSBroadcastChannelPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBroadcastChannel>,(WebCore::DOMConstructorID)416>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3328);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSBroadcastChannel>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSBroadcastChannel::s_info + ~((_QWORD)&WebCore::JSBroadcastChannel::s_info << 32)) ^ (((unint64_t)&WebCore::JSBroadcastChannel::s_info + ~((_QWORD)&WebCore::JSBroadcastChannel::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSBroadcastChannel::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSBroadcastChannel::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSBroadcastChannelPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSBroadcastChannelPrototype::create((WebCore::JSBroadcastChannelPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSBroadcastChannel::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSBroadcastChannel::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3328) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsBroadcastChannelConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSBroadcastChannelPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBroadcastChannel>,(WebCore::DOMConstructorID)416>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsBroadcastChannel_name(uint64_t a1)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v10;

  WTF::String::isolatedCopy();
  v2 = *(_QWORD *)(a1 + 56);
  v3 = v10;
  if (!v10 || (v4 = *((_DWORD *)v10 + 1)) == 0)
  {
    v5 = *(_QWORD *)(v2 + 41968);
LABEL_7:
    if (!v3)
      return v5;
    goto LABEL_15;
  }
  if (v4 != 1)
    goto LABEL_4;
  v6 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
  if ((*((_BYTE *)v10 + 16) & 4) != 0)
  {
    v7 = *v6;
LABEL_14:
    v5 = *(_QWORD *)(v2 + 8 * v7 + 42216);
    goto LABEL_15;
  }
  v8 = *(unsigned __int16 *)v6;
  if (v8 <= 0xFF)
  {
    v7 = v8;
    goto LABEL_14;
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
  {
    v5 = JSC::jsStringWithCacheSlowCase();
    v3 = v10;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v5;
}

uint64_t WebCore::jsBroadcastChannel_onmessage(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  int v20;
  uint64_t v22;

  v5 = *(WebCore **)(a2 + 24);
  v6 = *((_QWORD *)v5 + 3);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v6))
  {
    goto LABEL_5;
  }
  a1 = (WebCore *)MEMORY[0x19AEA534C](v6);
LABEL_5:
  ++*(_QWORD *)(v6 + 8);
  v8 = __ldxr((unsigned __int8 *)v6);
  if (v8 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      goto LABEL_10;
  }
  else
  {
    __clrex();
  }
  a1 = (WebCore *)WTF::Lock::unlockSlow((WTF::Lock *)v6);
LABEL_10:
  v9 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v9 || (v10 = *(_QWORD *)(v9 + 96)) == 0)
    v10 = WebCore::threadGlobalDataSlow(a1);
  v11 = *(_QWORD *)(v10 + 40);
  if (!v11)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v10);
    v11 = *(_QWORD *)(v10 + 40);
  }
  v13 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v11 + 1192), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  v14 = *((_QWORD *)v5 + 3);
  if (__ldaxr((unsigned __int8 *)v14))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v14))
  {
    goto LABEL_19;
  }
  MEMORY[0x19AEA534C](v14);
LABEL_19:
  v16 = *(_QWORD *)(v14 + 8);
  v17 = v16 - 1;
  *(_QWORD *)(v14 + 8) = v16 - 1;
  if (v16 == 1)
  {
    v22 = *(_QWORD *)(v14 + 16);
    v18 = *(_QWORD *)(v14 + 24);
    *(_QWORD *)(v14 + 24) = 0;
    v19 = v22 != 0;
  }
  else
  {
    v18 = 0;
    v19 = 1;
  }
  v20 = __ldxr((unsigned __int8 *)v14);
  if (v20 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v14))
    {
      if (v17)
        return v13;
      goto LABEL_27;
    }
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v14);
  if (v17)
    return v13;
LABEL_27:
  if (v18)
    (*(void (**)(uint64_t))(*(_QWORD *)v18 + 72))(v18);
  if (!v19)
    WTF::fastFree((WTF *)v14, v12);
  return v13;
}

uint64_t WebCore::setJSBroadcastChannel_onmessage(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  int v25;
  uint64_t v27;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBroadcastChannel::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBroadcastChannel::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::EventTarget **)(a2 + 24);
  v12 = *((_QWORD *)v11 + 3);
  if (__ldaxr((unsigned __int8 *)v12))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v12))
  {
    goto LABEL_16;
  }
  a1 = (WebCore *)MEMORY[0x19AEA534C](v12);
LABEL_16:
  ++*(_QWORD *)(v12 + 8);
  v14 = __ldxr((unsigned __int8 *)v12);
  if (v14 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v12))
      goto LABEL_21;
  }
  else
  {
    __clrex();
  }
  a1 = (WebCore *)WTF::Lock::unlockSlow((WTF::Lock *)v12);
LABEL_21:
  v15 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v15 || (v16 = *(_QWORD *)(v15 + 96)) == 0)
    v16 = WebCore::threadGlobalDataSlow(a1);
  v17 = *(_QWORD *)(v16 + 40);
  if (!v17)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v16);
    v17 = *(_QWORD *)(v16 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v17 + 1192), a3, (_DWORD *)a2);
  v19 = *((_QWORD *)v11 + 3);
  if (__ldaxr((unsigned __int8 *)v19))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v19))
  {
    goto LABEL_30;
  }
  MEMORY[0x19AEA534C](v19);
LABEL_30:
  v21 = *(_QWORD *)(v19 + 8);
  v22 = v21 - 1;
  *(_QWORD *)(v19 + 8) = v21 - 1;
  if (v21 == 1)
  {
    v27 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v19 + 24) = 0;
    v24 = v27 != 0;
  }
  else
  {
    v23 = 0;
    v24 = 1;
  }
  v25 = __ldxr((unsigned __int8 *)v19);
  if (v25 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v19))
    {
      if (!v22)
        goto LABEL_38;
      goto LABEL_42;
    }
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v19);
  if (!v22)
  {
LABEL_38:
    if (v23)
      (*(void (**)(uint64_t))(*(_QWORD *)v23 + 72))(v23);
    if (!v24)
      WTF::fastFree((WTF *)v19, v18);
  }
LABEL_42:
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsBroadcastChannel_onmessageerror(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  int v20;
  uint64_t v22;

  v5 = *(WebCore **)(a2 + 24);
  v6 = *((_QWORD *)v5 + 3);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v6))
  {
    goto LABEL_5;
  }
  a1 = (WebCore *)MEMORY[0x19AEA534C](v6);
LABEL_5:
  ++*(_QWORD *)(v6 + 8);
  v8 = __ldxr((unsigned __int8 *)v6);
  if (v8 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      goto LABEL_10;
  }
  else
  {
    __clrex();
  }
  a1 = (WebCore *)WTF::Lock::unlockSlow((WTF::Lock *)v6);
LABEL_10:
  v9 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v9 || (v10 = *(_QWORD *)(v9 + 96)) == 0)
    v10 = WebCore::threadGlobalDataSlow(a1);
  v11 = *(_QWORD *)(v10 + 40);
  if (!v11)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v10);
    v11 = *(_QWORD *)(v10 + 40);
  }
  v13 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v11 + 1200), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  v14 = *((_QWORD *)v5 + 3);
  if (__ldaxr((unsigned __int8 *)v14))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v14))
  {
    goto LABEL_19;
  }
  MEMORY[0x19AEA534C](v14);
LABEL_19:
  v16 = *(_QWORD *)(v14 + 8);
  v17 = v16 - 1;
  *(_QWORD *)(v14 + 8) = v16 - 1;
  if (v16 == 1)
  {
    v22 = *(_QWORD *)(v14 + 16);
    v18 = *(_QWORD *)(v14 + 24);
    *(_QWORD *)(v14 + 24) = 0;
    v19 = v22 != 0;
  }
  else
  {
    v18 = 0;
    v19 = 1;
  }
  v20 = __ldxr((unsigned __int8 *)v14);
  if (v20 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v14))
    {
      if (v17)
        return v13;
      goto LABEL_27;
    }
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v14);
  if (v17)
    return v13;
LABEL_27:
  if (v18)
    (*(void (**)(uint64_t))(*(_QWORD *)v18 + 72))(v18);
  if (!v19)
    WTF::fastFree((WTF *)v14, v12);
  return v13;
}

uint64_t WebCore::setJSBroadcastChannel_onmessageerror(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  int v25;
  uint64_t v27;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBroadcastChannel::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBroadcastChannel::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::EventTarget **)(a2 + 24);
  v12 = *((_QWORD *)v11 + 3);
  if (__ldaxr((unsigned __int8 *)v12))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v12))
  {
    goto LABEL_16;
  }
  a1 = (WebCore *)MEMORY[0x19AEA534C](v12);
LABEL_16:
  ++*(_QWORD *)(v12 + 8);
  v14 = __ldxr((unsigned __int8 *)v12);
  if (v14 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v12))
      goto LABEL_21;
  }
  else
  {
    __clrex();
  }
  a1 = (WebCore *)WTF::Lock::unlockSlow((WTF::Lock *)v12);
LABEL_21:
  v15 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v15 || (v16 = *(_QWORD *)(v15 + 96)) == 0)
    v16 = WebCore::threadGlobalDataSlow(a1);
  v17 = *(_QWORD *)(v16 + 40);
  if (!v17)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v16);
    v17 = *(_QWORD *)(v16 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v17 + 1200), a3, (_DWORD *)a2);
  v19 = *((_QWORD *)v11 + 3);
  if (__ldaxr((unsigned __int8 *)v19))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v19))
  {
    goto LABEL_30;
  }
  MEMORY[0x19AEA534C](v19);
LABEL_30:
  v21 = *(_QWORD *)(v19 + 8);
  v22 = v21 - 1;
  *(_QWORD *)(v19 + 8) = v21 - 1;
  if (v21 == 1)
  {
    v27 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v19 + 24) = 0;
    v24 = v27 != 0;
  }
  else
  {
    v23 = 0;
    v24 = 1;
  }
  v25 = __ldxr((unsigned __int8 *)v19);
  if (v25 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v19))
    {
      if (!v22)
        goto LABEL_38;
      goto LABEL_42;
    }
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v19);
  if (!v22)
  {
LABEL_38:
    if (v23)
      (*(void (**)(uint64_t))(*(_QWORD *)v23 + 72))(v23);
    if (!v24)
      WTF::fastFree((WTF *)v19, v18);
  }
LABEL_42:
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::JSBroadcastChannelOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v6 = v5[5];
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (v5[6] || (result = (*(uint64_t (**)(_QWORD *))(v5[4] + 64))(v5 + 4), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

uint64_t WebCore::JSBroadcastChannelOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v37;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v5 = *(_QWORD *)(v4 + 24);
  if (__ldaxr((unsigned __int8 *)v5))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v5))
  {
    goto LABEL_5;
  }
  result = MEMORY[0x19AEA534C](v5);
LABEL_5:
  ++*(_QWORD *)(v5 + 8);
  v8 = __ldxr((unsigned __int8 *)v5);
  if (v8 != 1)
  {
    __clrex();
    goto LABEL_9;
  }
  if (__stlxr(0, (unsigned __int8 *)v5))
LABEL_9:
    result = WTF::Lock::unlockSlow((WTF::Lock *)v5);
  if (*(_DWORD *)(a3 + 48))
  {
    v19 = *(_QWORD *)(a3 + 32);
    v18 = (uint64_t *)(a3 + 32);
    v17 = v19;
    if (v19)
    {
      v20 = *(_DWORD *)(v17 - 8);
      v21 = (~(v4 << 32) + v4) ^ ((unint64_t)(~(v4 << 32) + v4) >> 22);
      v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
      v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
      v24 = v20 & ((v23 >> 31) ^ v23);
      v25 = *(_QWORD *)(v17 + 16 * v24);
      if (v25 != v4)
      {
        v26 = 1;
        while (v25)
        {
          v24 = ((_DWORD)v24 + v26) & v20;
          v25 = *(_QWORD *)(v17 + 16 * v24);
          ++v26;
          if (v25 == v4)
            goto LABEL_35;
        }
        v24 = *(unsigned int *)(v17 - 4);
      }
LABEL_35:
      if (v24 != *(_DWORD *)(v17 - 4))
      {
        v27 = (_QWORD *)(v17 + 16 * v24);
        *v27 = -1;
        v30 = v27[1];
        v29 = v27 + 1;
        v28 = v30;
        if (v30)
        {
          *(_QWORD *)(v28 + 8) = 3;
          *v29 = 0;
        }
        ++*(_DWORD *)(*v18 - 16);
        v31 = *v18;
        if (*v18)
          v32 = *(_DWORD *)(v31 - 12) - 1;
        else
          v32 = -1;
        *(_DWORD *)(v31 - 12) = v32;
        v33 = *v18;
        if (*v18)
        {
          v34 = 6 * *(_DWORD *)(v33 - 12);
          v35 = *(_DWORD *)(v33 - 4);
          if (v34 < v35 && v35 >= 9)
            result = (uint64_t)WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v18, v35 >> 1, 0);
        }
      }
    }
  }
  else
  {
    v9 = *(_QWORD *)(v4 + 8);
    if (v9)
    {
      *(_QWORD *)(v9 + 8) = 3;
      *(_QWORD *)(v4 + 8) = 0;
    }
  }
  v10 = *(_QWORD *)(v4 + 24);
  if (__ldaxr((unsigned __int8 *)v10))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v10))
  {
    goto LABEL_17;
  }
  result = MEMORY[0x19AEA534C](v10);
LABEL_17:
  v12 = *(_QWORD *)(v10 + 8);
  v13 = v12 - 1;
  *(_QWORD *)(v10 + 8) = v12 - 1;
  if (v12 == 1)
  {
    v37 = *(_QWORD *)(v10 + 16);
    v14 = *(_QWORD *)(v10 + 24);
    *(_QWORD *)(v10 + 24) = 0;
    v15 = v37 != 0;
  }
  else
  {
    v14 = 0;
    v15 = 1;
  }
  v16 = __ldxr((unsigned __int8 *)v10);
  if (v16 != 1)
  {
    __clrex();
LABEL_24:
    result = WTF::Lock::unlockSlow((WTF::Lock *)v10);
    if (v13)
      return result;
    goto LABEL_25;
  }
  if (__stlxr(0, (unsigned __int8 *)v10))
    goto LABEL_24;
  if (v13)
    return result;
LABEL_25:
  if (v14)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 72))(v14);
  if (!v15)
    return WTF::fastFree((WTF *)v10, a2);
  return result;
}

unint64_t WebCore::createWrapper<WebCore::BroadcastChannel,WebCore::BroadcastChannel>(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSEventTarget *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v18;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  WTF *v37;
  void *v38;
  int v39;
  unint64_t SlowCase;
  WTF *v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *Allocator;
  uint64_t v47;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  WTF *v55;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSBroadcastChannel::s_info + ~((_QWORD)&WebCore::JSBroadcastChannel::s_info << 32)) ^ (((unint64_t)&WebCore::JSBroadcastChannel::s_info + ~((_QWORD)&WebCore::JSBroadcastChannel::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSBroadcastChannel::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSBroadcastChannel::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSEventTarget *)*((_QWORD *)a1 + 7);
  v16 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v15, a1, a3);
  Structure = WebCore::JSBroadcastChannelPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSBroadcastChannelPrototype::create(v15, Structure, v18, v19);
  v21 = WebCore::JSBroadcastChannel::createStructure((uint64_t *)v15, (uint64_t)a1, v20);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v21, (uint64_t)&WebCore::JSBroadcastChannel::s_info);
LABEL_8:
  v22 = *((_QWORD *)a1 + 7);
  v23 = *(_QWORD *)(v22 + 41456);
  v24 = *(_QWORD *)(v23 + 23536);
  v25 = *(_QWORD **)(v24 + 3408);
  if (v25)
    goto LABEL_31;
  v26 = *(_QWORD *)(v23 + 22648);
  if (__ldaxr((unsigned __int8 *)v26))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v26))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v26);
LABEL_13:
  v28 = *(_QWORD *)(v26 + 2824);
  v53 = *(_QWORD *)(v28 + 3408);
  if (!v53)
  {
    v29 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v55, "IsoSpace T");
    v54 = 0;
    MEMORY[0x19AEA3204](v29, &v55, v22 + 192, v22 + 1872, 32, 8, &v54);
    v31 = (uint64_t)v54;
    v54 = 0;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = v55;
    v55 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 1)
        WTF::fastFree(v32, v30);
      else
        --*(_DWORD *)v32;
    }
    v53 = v29;
    v33 = *(_QWORD *)(v28 + 3408);
    *(_QWORD *)(v28 + 3408) = v29;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = *(unsigned int *)(v26 + 2844);
    if ((_DWORD)v34 == *(_DWORD *)(v26 + 2840))
    {
      v35 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v26 + 2832, v34 + 1, (unint64_t)&v53);
      v34 = *(unsigned int *)(v26 + 2844);
      *(_QWORD *)(*(_QWORD *)(v26 + 2832) + 8 * v34) = *v35;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v26 + 2832) + 8 * v34) = v29;
    }
    *(_DWORD *)(v26 + 2844) = v34 + 1;
  }
  v25 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v36 = *(_QWORD *)(v24 + 3408);
  *(_QWORD *)(v24 + 3408) = v25;
  if (v36)
  {
    v37 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v37, v38);
  }
  v39 = __ldxr((unsigned __int8 *)v26);
  if (v39 != 1)
  {
    __clrex();
    goto LABEL_30;
  }
  if (__stlxr(0, (unsigned __int8 *)v26))
LABEL_30:
    WTF::Lock::unlockSlow((WTF::Lock *)v26);
LABEL_31:
  SlowCase = v25[3];
  if (SlowCase < v25[4])
  {
LABEL_32:
    v25[3] = SlowCase + 32;
    goto LABEL_33;
  }
  SlowCase = v25[5];
  if ((SlowCase & 1) == 0)
  {
    v52 = *(_QWORD *)(SlowCase + 8) ^ v25[6];
    v25[4] = SlowCase + HIDWORD(v52);
    v25[5] = SlowCase + (int)v52;
    goto LABEL_32;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_33:
  *(_DWORD *)SlowCase = 0;
  v41 = *a2;
  *a2 = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  *(_QWORD *)(SlowCase + 24) = v41;
  if (*(_BYTE *)(v22 + 755))
    __dmb(0xAu);
  v42 = *((_QWORD *)a1 + 415);
  if ((byte_1EE334CD0 & 1) == 0)
  {
    qword_1EE334CC8 = (uint64_t)&off_1E322DF90;
    byte_1EE334CD0 = 1;
  }
  if (v5)
    v43 = (uint64_t *)((char *)v5 + 8);
  else
    v43 = 0;
  if (!*(_DWORD *)(v42 + 48))
  {
    if ((SlowCase & 8) != 0)
      v44 = (SlowCase - 112) | 1;
    else
      v44 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v44 & 1) != 0)
      v45 = v44 + 47;
    else
      v45 = *(_QWORD *)v44 + 32;
    Allocator = *(_QWORD **)(v45 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v45 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE334CC8;
    Allocator[2] = v42;
    v47 = *v43;
    *v43 = (uint64_t)Allocator;
    if (!v47)
      return SlowCase;
LABEL_58:
    *(_QWORD *)(v47 + 8) = 3;
    return SlowCase;
  }
  v55 = v5;
  if ((SlowCase & 8) != 0)
    v49 = (SlowCase - 112) | 1;
  else
    v49 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v49 & 1) != 0)
    v50 = v49 + 47;
  else
    v50 = *(_QWORD *)v49 + 32;
  v51 = *(_QWORD **)(v50 + 16);
  if (!v51)
    v51 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v50 + 16) = *v51;
  *v51 = SlowCase;
  v51[1] = &qword_1EE334CC8;
  v51[2] = v42;
  v54 = v51;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v42 + 32), (uint64_t *)&v55, (uint64_t *)&v54);
  v47 = (uint64_t)v54;
  if (v54)
    goto LABEL_58;
  return SlowCase;
}

unint64_t WebCore::wrap<WebCore::BroadcastChannel>(int a1, JSC::VM *a2, WTF *a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v10;
  void *v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  int v19;
  uint64_t v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  WTF *v27;
  int v28;
  uint64_t v29;
  WTF *v30;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v21 = *(_QWORD *)(v5 + 32);
    if (!v21)
      goto LABEL_5;
    v22 = *(_DWORD *)(v21 - 8);
    v23 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v24 = 9 * ((v23 + ~(v23 << 13)) ^ ((v23 + ~(v23 << 13)) >> 8));
    v25 = (v24 ^ (v24 >> 15)) + ~((v24 ^ (v24 >> 15)) << 27);
    v26 = v22 & ((v25 >> 31) ^ v25);
    v27 = *(WTF **)(v21 + 16 * v26);
    if (v27 != a3)
    {
      v28 = 1;
      while (v27)
      {
        v26 = ((_DWORD)v26 + v28) & v22;
        v27 = *(WTF **)(v21 + 16 * v26);
        ++v28;
        if (v27 == a3)
          goto LABEL_38;
      }
      goto LABEL_5;
    }
LABEL_38:
    v6 = *(_QWORD *)(v21 + 16 * v26 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *((_QWORD *)a3 + 1);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return v7;
  }
LABEL_5:
  v8 = *((_QWORD *)a3 + 3);
  if (__ldaxr((unsigned __int8 *)v8))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v8))
  {
    goto LABEL_9;
  }
  MEMORY[0x19AEA534C](v8);
LABEL_9:
  ++*(_QWORD *)(v8 + 8);
  v10 = __ldxr((unsigned __int8 *)v8);
  if (v10 != 1)
  {
    __clrex();
    goto LABEL_13;
  }
  if (__stlxr(0, (unsigned __int8 *)v8))
LABEL_13:
    WTF::Lock::unlockSlow((WTF::Lock *)v8);
  v30 = a3;
  if (*(uint64_t (***)(WebCore::BroadcastChannel *__hidden))a3 != off_1E33A0AE8)
  {
    __break(0xC471u);
    JUMPOUT(0x19488E5F4);
  }
  v7 = WebCore::createWrapper<WebCore::BroadcastChannel,WebCore::BroadcastChannel>(a2, &v30, a3);
  v12 = v30;
  v30 = 0;
  if (v12)
  {
    v13 = *((_QWORD *)v12 + 3);
    if (__ldaxr((unsigned __int8 *)v13))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v13))
    {
      goto LABEL_20;
    }
    MEMORY[0x19AEA534C](v13);
LABEL_20:
    v15 = *(_QWORD *)(v13 + 8);
    v16 = v15 - 1;
    *(_QWORD *)(v13 + 8) = v15 - 1;
    if (v15 == 1)
    {
      v29 = *(_QWORD *)(v13 + 16);
      v17 = *(_QWORD *)(v13 + 24);
      *(_QWORD *)(v13 + 24) = 0;
      v18 = v29 != 0;
    }
    else
    {
      v17 = 0;
      v18 = 1;
    }
    v19 = __ldxr((unsigned __int8 *)v13);
    if (v19 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v13))
      {
        if (v16)
          return v7;
        goto LABEL_28;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v13);
    if (v16)
      return v7;
LABEL_28:
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 72))(v17);
    if (!v18)
      WTF::fastFree((WTF *)v13, v11);
  }
  return v7;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSBufferedChangeEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v2;
  JSC::VM *v4;
  uint64_t v6;
  int v7;
  JSC::JSCell *v8;
  JSC::VM *v9;
  _BOOL4 v10;
  _BOOL4 v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  double v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  JSC::VM *v20;
  double v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL4 v29;
  uint64_t v30;
  WTF::StringImpl *v32;
  _DWORD *i;
  WTF::StringImpl *v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  WebCore::JSDOMGlobalObject *v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  JSC::VM *v43;
  uint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char **v50;
  int v51;
  unint64_t v52;
  WebCore::JSEvent *v53;
  JSC::JSCell *v54;
  unint64_t Structure;
  JSC::Structure *v56;
  JSC::JSCell *v57;
  uint64_t v58;
  JSCell *v59;
  JSC::JSCell *v60;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v62;
  JSC::JSGlobalObject *v63;
  JSC::VM *v64;
  WebCore::JSDOMGlobalObject *v65;
  JSC::Structure *v66;
  JSC::VM *FunctionRealm;
  uint64_t v68;
  unsigned int v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char **v74;
  int v75;
  JSC::JSCell *v76;
  unint64_t v77;
  JSC::Structure *v78;
  JSC::JSCell *v79;
  uint64_t v80;
  unint64_t SubclassStructure;
  _DWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _BOOL4 v85;
  char **v86;
  BOOL v87;
  void *v89;
  WTF *v91;
  JSValue v92;
  BOOL v93;
  int v94;
  uint64_t v95;
  int *v96;
  int v97;
  BOOL v98;
  int v99;
  uint64_t v100;
  int *v101;
  int v102;
  BOOL v103;
  int v104;
  uint64_t v105;
  int *v106;
  int v107;
  JSC::VM *v108;
  uint64_t v109;
  WTF::StringImpl *v110[3];
  int v111;
  WTF::StringImpl *v112;
  int v113;
  _DWORD *v114;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v92.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v4, a1, v92);
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 24);
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v112);
    v7 = v113;
    if (v113)
    {
      v59 = 0;
    }
    else
    {
      v8 = *(JSC::JSCell **)(a2 + 56);
      v9 = (JSC::VM *)*((_QWORD *)a1 + 7);
      v114 = v9;
      v109 = v6;
      v108 = v4;
      if (((unint64_t)v8 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        v13 = 0;
LABEL_64:
        for (i = 0; ; ++*i)
        {
          LOBYTE(v110[0]) = v10;
          BYTE1(v110[0]) = v11;
          BYTE2(v110[0]) = v12;
          v111 = 0;
          if (!v113)
          {
            v34 = v112;
            v112 = 0;
            v110[1] = 0;
            v110[2] = 0;
            v35 = bmalloc::api::isoAllocate();
            WTF::MonotonicTime::now((WTF::MonotonicTime *)v35);
            *(_QWORD *)(v35 + 8) = 0;
            if (v11)
              v39 = 4;
            else
              v39 = 0;
            if (v12)
              v40 = 8;
            else
              v40 = 0;
            if (v10)
              v41 = 622594;
            else
              v41 = 622592;
            v42 = v41 | v39 | v40 | (v34 != 0) | *(_DWORD *)(v35 + 20) & 0xFFC00000;
            *(_DWORD *)(v35 + 16) = 1;
            *(_DWORD *)(v35 + 20) = v42;
            if (v34)
            {
              *(_DWORD *)v34 += 2;
              v42 = *(_DWORD *)(v35 + 20);
            }
            *(_QWORD *)(v35 + 24) = v34;
            *(_QWORD *)(v35 + 32) = 0;
            *(_QWORD *)(v35 + 40) = 0;
            *(_QWORD *)(v35 + 48) = 0;
            *(_QWORD *)(v35 + 56) = v38;
            *(_DWORD *)(v35 + 20) = v42 | 0x4000;
            *(_QWORD *)v35 = off_1E335CF68;
            *(_QWORD *)(v35 + 64) = 0;
            *(_QWORD *)(v35 + 72) = v13;
            *(_QWORD *)(v35 + 80) = i;
            v114 = (_DWORD *)v35;
            if (v34)
            {
              if (*(_DWORD *)v34 == 2)
              {
                WTF::StringImpl::destroy(v34, v36);
                if (*(void (***)(WebCore::BufferedChangeEvent *__hidden))v35 != off_1E335CF68)
                {
                  __break(0xC471u);
                  JUMPOUT(0x19488EE8CLL);
                }
              }
              else
              {
                *(_DWORD *)v34 -= 2;
              }
            }
            v43 = *(JSC::VM **)(v109 + 40);
            v44 = *((_QWORD *)v43 + 412);
            if (!v44)
              goto LABEL_86;
            v45 = *(_DWORD *)(v44 - 8);
            v46 = ((unint64_t)&WebCore::JSBufferedChangeEvent::s_info
                 + ~((_QWORD)&WebCore::JSBufferedChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSBufferedChangeEvent::s_info
                                                                               + ~((_QWORD)&WebCore::JSBufferedChangeEvent::s_info << 32)) >> 22);
            v47 = 9 * ((v46 + ~(v46 << 13)) ^ ((v46 + ~(v46 << 13)) >> 8));
            v48 = (v47 ^ (v47 >> 15)) + ~((v47 ^ (v47 >> 15)) << 27);
            v49 = v45 & ((v48 >> 31) ^ v48);
            v50 = *(char ***)(v44 + 16 * v49);
            if (v50 == &WebCore::JSBufferedChangeEvent::s_info)
            {
LABEL_85:
              v52 = *(_QWORD *)(v44 + 16 * v49 + 8);
              if (!v52)
                goto LABEL_86;
            }
            else
            {
              v51 = 1;
              while (v50)
              {
                v49 = ((_DWORD)v49 + v51) & v45;
                v50 = *(char ***)(v44 + 16 * v49);
                ++v51;
                if (v50 == &WebCore::JSBufferedChangeEvent::s_info)
                  goto LABEL_85;
              }
LABEL_86:
              v53 = (WebCore::JSEvent *)*((_QWORD *)v43 + 7);
              v54 = (JSC::JSCell *)WebCore::JSEvent::prototype(v53, v43, v37);
              Structure = WebCore::JSBufferedChangeEventPrototype::createStructure((uint64_t *)v53, (uint64_t)v43, v54);
              *(_DWORD *)(Structure + 16) |= 0x80000u;
              v57 = (JSC::JSCell *)WebCore::JSBufferedChangeEventPrototype::create(v53, v43, Structure, v56);
              v58 = WebCore::JSBufferedChangeEvent::createStructure((uint64_t *)v53, (uint64_t)v43, v57);
              v52 = WebCore::cacheDOMStructure((JSCell *)v43, v58, (uint64_t)&WebCore::JSBufferedChangeEvent::s_info);
            }
            v59 = (JSCell *)WebCore::JSBufferedChangeEvent::create(v52, v43, (uint64_t *)&v114);
            WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v43 + 415), v35, (uint64_t)v59);
            v60 = *(JSC::JSCell **)(a2 + 40);
            if (((unint64_t)v60 & 0xFFFE000000000002) != 0
              || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v60)) == 0
              || (v63 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
              || (v64 = (JSC::VM *)*((_QWORD *)a1 + 7),
                  FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v62),
                  *((_DWORD *)v64 + 20))
              && (JSC::VM::hasExceptionsAfterHandlingTraps(v64) & 1) != 0)
            {
LABEL_100:
              if (*((_DWORD *)v108 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v108) & 1) != 0)
                v59 = 0;
              v82 = v114;
              v114 = 0;
              if (v82)
              {
                if (v82[4] == 1)
                  (*(void (**)(_DWORD *))(*(_QWORD *)v82 + 8))(v82);
                else
                  --v82[4];
              }
              v83 = 0;
              goto LABEL_121;
            }
            v68 = *((_QWORD *)FunctionRealm + 412);
            if (v68)
            {
              v69 = *(_DWORD *)(v68 - 8);
              v70 = ((unint64_t)&WebCore::JSBufferedChangeEvent::s_info
                   + ~((_QWORD)&WebCore::JSBufferedChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSBufferedChangeEvent::s_info
                                                                                 + ~((_QWORD)&WebCore::JSBufferedChangeEvent::s_info << 32)) >> 22);
              v71 = 9 * ((v70 + ~(v70 << 13)) ^ ((v70 + ~(v70 << 13)) >> 8));
              v72 = (v71 ^ (v71 >> 15)) + ~((v71 ^ (v71 >> 15)) << 27);
              v73 = v69 & ((v72 >> 31) ^ v72);
              v74 = *(char ***)(v68 + 16 * v73);
              if (v74 != &WebCore::JSBufferedChangeEvent::s_info)
              {
                v75 = 1;
                while (v74)
                {
                  v73 = ((_DWORD)v73 + v75) & v69;
                  v74 = *(char ***)(v68 + 16 * v73);
                  ++v75;
                  if (v74 == &WebCore::JSBufferedChangeEvent::s_info)
                    goto LABEL_96;
                }
                goto LABEL_97;
              }
LABEL_96:
              v65 = *(WebCore::JSDOMGlobalObject **)(v68 + 16 * v73 + 8);
              if (!v65)
                goto LABEL_97;
            }
            else
            {
LABEL_97:
              v76 = (JSC::JSCell *)WebCore::JSEvent::prototype(v64, FunctionRealm, v65);
              v77 = WebCore::JSBufferedChangeEventPrototype::createStructure((uint64_t *)v64, (uint64_t)FunctionRealm, v76);
              *(_DWORD *)(v77 + 16) |= 0x80000u;
              v79 = (JSC::JSCell *)WebCore::JSBufferedChangeEventPrototype::create(v64, FunctionRealm, v77, v78);
              v80 = WebCore::JSBufferedChangeEvent::createStructure((uint64_t *)v64, (uint64_t)FunctionRealm, v79);
              v65 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v80, (uint64_t)&WebCore::JSBufferedChangeEvent::s_info);
            }
            SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v63, v65, v66);
            if (!*((_DWORD *)v64 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v64) & 1) == 0)
              JSC::JSObject::setStructure(v59, v64, SubclassStructure);
            goto LABEL_100;
          }
          v16 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_165:
          v93 = (_DWORD)v13 == 0;
LABEL_209:
          v10 = !v93;
LABEL_17:
          if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
            goto LABEL_139;
LABEL_18:
          WTF::AtomStringImpl::addLiteral();
          v19 = JSC::JSObject::get((JSC::Structure *)v2, a1, (unint64_t)v110[0]);
          if (v110[0])
          {
            if (*(_DWORD *)v110[0] == 2)
              WTF::StringImpl::destroy(v110[0], v18);
            else
              *(_DWORD *)v110[0] -= 2;
          }
          if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
            goto LABEL_139;
          if (v19 == 10)
          {
            v11 = 0;
            goto LABEL_29;
          }
          v20 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v19 >= 0xFFFE000000000000)
            break;
          *(_QWORD *)&v21 = v19 - 0x2000000000000;
          if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            if ((v19 & 0xFFFE000000000002) != 0)
            {
              v11 = v19 == 7;
              goto LABEL_28;
            }
            v99 = *(unsigned __int8 *)(v19 + 5);
            if (v99 == 3)
            {
              v102 = *(_DWORD *)(v19 + 8);
              goto LABEL_198;
            }
            if (v99 == 2)
            {
              v100 = *(_QWORD *)(v19 + 8);
              if ((v100 & 1) != 0)
                v101 = (int *)(v19 + 16);
              else
                v101 = (int *)(v100 + 4);
              v102 = *v101;
LABEL_198:
              v98 = v102 == 0;
            }
            else
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0xA) & 1) == 0)
              {
LABEL_200:
                v11 = 1;
                goto LABEL_28;
              }
              v98 = *(_QWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            }
LABEL_213:
            v11 = !v98;
            goto LABEL_28;
          }
          if (v21 > 0.0)
            goto LABEL_200;
          v11 = v21 < 0.0;
LABEL_28:
          if (*((_DWORD *)v20 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v20))
            goto LABEL_139;
LABEL_29:
          WTF::AtomStringImpl::addLiteral();
          v23 = JSC::JSObject::get((JSC::Structure *)v2, a1, (unint64_t)v110[0]);
          if (v110[0])
          {
            if (*(_DWORD *)v110[0] == 2)
              WTF::StringImpl::destroy(v110[0], v22);
            else
              *(_DWORD *)v110[0] -= 2;
          }
          if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
            goto LABEL_139;
          if (v23 == 10)
          {
            v12 = 0;
            goto LABEL_40;
          }
          v24 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v23 >= 0xFFFE000000000000)
          {
            v103 = (_DWORD)v23 == 0;
            goto LABEL_203;
          }
          *(_QWORD *)&v25 = v23 - 0x2000000000000;
          if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            if ((v23 & 0xFFFE000000000002) != 0)
            {
              v12 = v23 == 7;
              goto LABEL_39;
            }
            v104 = *(unsigned __int8 *)(v23 + 5);
            if (v104 == 3)
            {
              v107 = *(_DWORD *)(v23 + 8);
            }
            else
            {
              if (v104 != 2)
              {
                if ((*(_BYTE *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0xA) & 1) == 0)
                {
LABEL_207:
                  v12 = 1;
                  goto LABEL_39;
                }
                v103 = *(_QWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                goto LABEL_203;
              }
              v105 = *(_QWORD *)(v23 + 8);
              if ((v105 & 1) != 0)
                v106 = (int *)(v23 + 16);
              else
                v106 = (int *)(v105 + 4);
              v107 = *v106;
            }
            v103 = v107 == 0;
LABEL_203:
            v12 = !v103;
            goto LABEL_39;
          }
          if (v25 > 0.0)
            goto LABEL_207;
          v12 = v25 < 0.0;
LABEL_39:
          if (*((_DWORD *)v24 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v24))
            goto LABEL_56;
LABEL_40:
          WTF::AtomStringImpl::addLiteral();
          v27 = JSC::JSObject::get((JSC::Structure *)v2, a1, (unint64_t)v110[0]);
          if (v110[0])
          {
            if (*(_DWORD *)v110[0] == 2)
              WTF::StringImpl::destroy(v110[0], v26);
            else
              *(_DWORD *)v110[0] -= 2;
          }
          if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
            goto LABEL_56;
          if (v27 == 10)
          {
            v13 = 0;
          }
          else
          {
            v110[0] = *((WTF::StringImpl **)a1 + 7);
            if ((v27 & 0xFFFE000000000002) != 0)
              goto LABEL_55;
            v28 = *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C);
            v29 = *(_DWORD *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C) != 0;
            if ((_DWORD)v28)
            {
              v30 = 16 * v28;
              if ((char **)v30 != &WebCore::JSTimeRanges::s_info)
              {
                do
                {
                  v30 = *(_QWORD *)(v30 + 16);
                  v29 = v30 != 0;
                }
                while ((char **)v30 != &WebCore::JSTimeRanges::s_info && v30 != 0);
              }
            }
            if (!v29 || (v13 = *(_QWORD *)(v27 + 24)) == 0)
            {
LABEL_55:
              JSC::throwTypeError();
LABEL_56:
              v111 = 1;
              goto LABEL_120;
            }
            ++*(_DWORD *)v13;
          }
          WTF::AtomStringImpl::addLiteral();
          v2 = JSC::JSObject::get((JSC::Structure *)v2, a1, (unint64_t)v110[0]);
          if (v110[0])
          {
            if (*(_DWORD *)v110[0] == 2)
              WTF::StringImpl::destroy(v110[0], v32);
            else
              *(_DWORD *)v110[0] -= 2;
          }
          if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
            goto LABEL_117;
          if (v2 == 10)
            goto LABEL_64;
          v110[0] = *((WTF::StringImpl **)a1 + 7);
          if ((v2 & 0xFFFE000000000002) == 0)
          {
            v84 = *(unsigned int *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0x4C);
            v85 = *(_DWORD *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0x4C) != 0;
            v86 = (char **)(16 * v84);
            if ((_DWORD)v84)
              v87 = v86 == &WebCore::JSTimeRanges::s_info;
            else
              v87 = 1;
            if (!v87)
            {
              do
              {
                v86 = (char **)v86[2];
                v85 = v86 != 0;
              }
              while (v86 != &WebCore::JSTimeRanges::s_info && v86 != 0);
            }
            if (v85)
            {
              i = *(_DWORD **)(v2 + 24);
              if (i)
                continue;
            }
          }
          JSC::throwTypeError();
LABEL_117:
          v111 = 1;
          if (v13)
          {
            if (*(_DWORD *)v13 == 1)
            {
              v91 = *(WTF **)(v13 + 8);
              if (v91)
              {
                *(_QWORD *)(v13 + 8) = 0;
                *(_DWORD *)(v13 + 16) = 0;
                WTF::fastFree(v91, v89);
              }
              WTF::fastFree((WTF *)v13, v89);
            }
            else
            {
              --*(_DWORD *)v13;
            }
          }
          goto LABEL_120;
        }
        v98 = (_DWORD)v19 == 0;
        goto LABEL_213;
      }
      if (((unint64_t)v8 & 0xFFFE000000000002) != 0 || (v14 = JSC::JSCell::getObject(v8)) == 0)
      {
        JSC::throwTypeError();
      }
      else
      {
        v2 = v14;
        WTF::AtomStringImpl::addLiteral();
        v13 = JSC::JSObject::get((JSC::Structure *)v2, a1, (unint64_t)v110[0]);
        if (v110[0])
        {
          if (*(_DWORD *)v110[0] == 2)
            WTF::StringImpl::destroy(v110[0], v15);
          else
            *(_DWORD *)v110[0] -= 2;
        }
        if (!*((_DWORD *)v9 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v9))
        {
          if (v13 == 10)
          {
            v10 = 0;
            goto LABEL_18;
          }
          v16 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v13 >= 0xFFFE000000000000)
            goto LABEL_165;
          *(_QWORD *)&v17 = v13 - 0x2000000000000;
          if (v13 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            v10 = v17 > 0.0 || v17 < 0.0;
            goto LABEL_17;
          }
          if ((v13 & 0xFFFE000000000002) != 0)
          {
            v10 = v13 == 7;
            goto LABEL_17;
          }
          v94 = *(unsigned __int8 *)(v13 + 5);
          if (v94 == 3)
          {
            v97 = *(_DWORD *)(v13 + 8);
          }
          else
          {
            if (v94 != 2)
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v93 = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                goto LABEL_209;
              }
              v10 = 1;
              goto LABEL_17;
            }
            v95 = *(_QWORD *)(v13 + 8);
            if ((v95 & 1) != 0)
              v96 = (int *)(v13 + 16);
            else
              v96 = (int *)(v95 + 4);
            v97 = *v96;
          }
          v93 = v97 == 0;
          goto LABEL_209;
        }
      }
LABEL_139:
      v111 = 1;
LABEL_120:
      v59 = 0;
      v83 = 1;
LABEL_121:
      ((void (*)(_DWORD **, WTF::StringImpl **))off_1E322F070[v83])(&v114, v110);
      v7 = v113;
    }
    if (v7 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E322E3B0[v7])(v110, &v112);
  }
  return v59;
}

uint64_t WebCore::JSBufferedChangeEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSBufferedChangeEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSBufferedChangeEventPrototype::create(WebCore::JSBufferedChangeEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSBufferedChangeEvent::s_info, &WebCore::JSBufferedChangeEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBufferedChangeEvent>,(WebCore::DOMConstructorID)126>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1008);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSBufferedChangeEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSBufferedChangeEvent::s_info
         + ~((_QWORD)&WebCore::JSBufferedChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSBufferedChangeEvent::s_info
                                                                       + ~((_QWORD)&WebCore::JSBufferedChangeEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSBufferedChangeEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSBufferedChangeEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSBufferedChangeEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSBufferedChangeEventPrototype::create((WebCore::JSBufferedChangeEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSBufferedChangeEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSBufferedChangeEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1008) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsBufferedChangeEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSBufferedChangeEventPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBufferedChangeEvent>,(WebCore::DOMConstructorID)126>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsBufferedChangeEvent_addedRanges(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  WTF *v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  ++*(_DWORD *)v2;
  v5 = WebCore::wrap<WebCore::TimeRanges>(a1, v3, v2);
  if (*(_DWORD *)v2 == 1)
  {
    v7 = *(WTF **)(v2 + 8);
    if (v7)
    {
      *(_QWORD *)(v2 + 8) = 0;
      *(_DWORD *)(v2 + 16) = 0;
      WTF::fastFree(v7, v4);
    }
    WTF::fastFree((WTF *)v2, v4);
  }
  else
  {
    --*(_DWORD *)v2;
  }
  return v5;
}

uint64_t WebCore::jsBufferedChangeEvent_removedRanges(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  WTF *v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  ++*(_DWORD *)v2;
  v5 = WebCore::wrap<WebCore::TimeRanges>(a1, v3, v2);
  if (*(_DWORD *)v2 == 1)
  {
    v7 = *(WTF **)(v2 + 8);
    if (v7)
    {
      *(_QWORD *)(v2 + 8) = 0;
      *(_DWORD *)(v2 + 16) = 0;
      WTF::fastFree(v7, v4);
    }
    WTF::fastFree((WTF *)v2, v4);
  }
  else
  {
    --*(_DWORD *)v2;
  }
  return v5;
}

uint64_t WebCore::JSBufferedChangeEvent::subspaceForImpl(WebCore::JSBufferedChangeEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 1032);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 1032))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 1032);
    *(_QWORD *)(v8 + 1032) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 1032);
  *(_QWORD *)(v3 + 1032) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSByteLengthQueuingStrategyPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSByteLengthQueuingStrategyPrototype::create(WebCore::JSByteLengthQueuingStrategyPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSByteLengthQueuingStrategy::s_info, &WebCore::JSByteLengthQueuingStrategyPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::jsByteLengthQueuingStrategyConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSByteLengthQueuingStrategyPrototype::s_info != (char **)(16
                                                                         * *(unsigned int *)(16
                                                                                           * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                           + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 1704);
  if (!result)
  {
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSByteLengthQueuingStrategy>::createStructure((uint64_t *)v2, v3, *(JSC::JSCell **)(v3 + 664));
    result = WebCore::JSDOMBuiltinConstructor<WebCore::JSByteLengthQueuingStrategy>::create(v2, Structure, v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 1704) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v6 = (JSC::Heap *)(v2 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)v3);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSCDATASection::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSText::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSText::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSText::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCDATASectionPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCDATASectionPrototype::create(WebCore::JSCDATASectionPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSCDATASection::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSCDATASectionPrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCDATASection>,(WebCore::DOMConstructorID)417>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3336);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSText>,(WebCore::DOMConstructorID)481>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCDATASection>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCDATASection::s_info + ~((_QWORD)&WebCore::JSCDATASection::s_info << 32)) ^ (((unint64_t)&WebCore::JSCDATASection::s_info + ~((_QWORD)&WebCore::JSCDATASection::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCDATASection::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCDATASection::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSText::prototype((WebCore::JSText *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCDATASectionPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCDATASectionPrototype::create((WebCore::JSCDATASectionPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCDATASection::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCDATASection::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3336) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCDATASectionConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCDATASectionPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCDATASection>,(WebCore::DOMConstructorID)417>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCDATASection::subspaceForImpl(WebCore::JSCDATASection *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3416);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 3416);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 3416);
    *(_QWORD *)(v8 + 3416) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 3416);
  *(_QWORD *)(v3 + 3416) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::toJSNewlyCreated(int a1, JSC::VM *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSText *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v3 = *a3;
  if (*(uint64_t (***)(WebCore::Node *__hidden))*a3 == off_1E33A0DB8)
  {
    v6 = *((_QWORD *)a2 + 412);
    if (v6)
    {
      v7 = *(_DWORD *)(v6 - 8);
      v8 = ((unint64_t)&WebCore::JSCDATASection::s_info + ~((_QWORD)&WebCore::JSCDATASection::s_info << 32)) ^ (((unint64_t)&WebCore::JSCDATASection::s_info + ~((_QWORD)&WebCore::JSCDATASection::s_info << 32)) >> 22);
      v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
      v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
      v11 = v7 & ((v10 >> 31) ^ v10);
      v12 = *(char ***)(v6 + 16 * v11);
      if (v12 == &WebCore::JSCDATASection::s_info)
      {
LABEL_7:
        v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
        if (v14)
        {
LABEL_9:
          v21 = WebCore::JSCDATASection::create(v14, a2, a3);
          WebCore::cacheWrapper<WebCore::CDATASection,WebCore::JSCDATASection>(*((_QWORD *)a2 + 415), v3, v21);
          return v21;
        }
      }
      else
      {
        v13 = 1;
        while (v12)
        {
          v11 = ((_DWORD)v11 + v13) & v7;
          v12 = *(char ***)(v6 + 16 * v11);
          ++v13;
          if (v12 == &WebCore::JSCDATASection::s_info)
            goto LABEL_7;
        }
      }
    }
    v15 = (WebCore::JSText *)*((_QWORD *)a2 + 7);
    v16 = (JSC::JSCell *)WebCore::JSText::prototype(v15, a2, (WebCore::JSDOMGlobalObject *)a3);
    Structure = WebCore::JSCDATASectionPrototype::createStructure((uint64_t *)v15, (uint64_t)a2, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSCDATASectionPrototype::create(v15, a2, Structure, v18);
    v20 = WebCore::JSCDATASection::createStructure((uint64_t *)v15, (uint64_t)a2, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a2, v20, (uint64_t)&WebCore::JSCDATASection::s_info);
    goto LABEL_9;
  }
  result = 196;
  __break(0xC471u);
  return result;
}

{
  uint64_t result;

  if (*(uint64_t (***)(WebCore::Node *__hidden))*a3 == off_1E33A15C0)
    return WebCore::createWrapper<WebCore::Comment,WebCore::Comment>(a2, a3, (WebCore::JSDOMGlobalObject *)a3);
  result = 227;
  __break(0xC471u);
  return result;
}

{
  uint64_t result;

  if (*(uint64_t (***)(WebCore::Node *__hidden))*a3 == off_1E33A3E18)
    return WebCore::createWrapper<WebCore::DocumentType,WebCore::DocumentType>(a2, a3, (WebCore::JSDOMGlobalObject *)a3);
  result = 340;
  __break(0xC471u);
  return result;
}

{
  uint64_t v3;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSExtendableMessageEvent *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t result;

  v3 = *a3;
  if (*(void (***)(WebCore::ExtendableMessageEvent *__hidden))*a3 == off_1E347DFE8)
  {
    v6 = *((_QWORD *)a2 + 412);
    if (v6)
    {
      v7 = *(_DWORD *)(v6 - 8);
      v8 = ((unint64_t)&WebCore::JSExtendableMessageEvent::s_info
          + ~((_QWORD)&WebCore::JSExtendableMessageEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSExtendableMessageEvent::s_info
                                                                           + ~((_QWORD)&WebCore::JSExtendableMessageEvent::s_info << 32)) >> 22);
      v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
      v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
      v11 = v7 & ((v10 >> 31) ^ v10);
      v12 = *(char ***)(v6 + 16 * v11);
      if (v12 == &WebCore::JSExtendableMessageEvent::s_info)
      {
LABEL_7:
        v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
        if (v14)
        {
LABEL_9:
          v18 = WebCore::JSExtendableMessageEvent::create(v14, a2, a3);
          WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)a2 + 415), v3, v18);
          return v18;
        }
      }
      else
      {
        v13 = 1;
        while (v12)
        {
          v11 = ((_DWORD)v11 + v13) & v7;
          v12 = *(char ***)(v6 + 16 * v11);
          ++v13;
          if (v12 == &WebCore::JSExtendableMessageEvent::s_info)
            goto LABEL_7;
        }
      }
    }
    v15 = (WebCore::JSExtendableMessageEvent *)*((_QWORD *)a2 + 7);
    Prototype = (JSC::JSCell *)WebCore::JSExtendableMessageEvent::createPrototype(v15, a2, (WebCore::JSDOMGlobalObject *)a3);
    Structure = WebCore::JSExtendableMessageEvent::createStructure((uint64_t *)v15, (uint64_t)a2, Prototype);
    v14 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSExtendableMessageEvent::s_info);
    goto LABEL_9;
  }
  result = 417;
  __break(0xC471u);
  return result;
}

{
  uint64_t v3;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCharacterData *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v3 = *a3;
  if (*(uint64_t (***)(WebCore::Node *__hidden))*a3 == off_1E33A6788)
  {
    v6 = *((_QWORD *)a2 + 412);
    if (v6)
    {
      v7 = *(_DWORD *)(v6 - 8);
      v8 = ((unint64_t)&WebCore::JSProcessingInstruction::s_info
          + ~((_QWORD)&WebCore::JSProcessingInstruction::s_info << 32)) ^ (((unint64_t)&WebCore::JSProcessingInstruction::s_info
                                                                          + ~((_QWORD)&WebCore::JSProcessingInstruction::s_info << 32)) >> 22);
      v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
      v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
      v11 = v7 & ((v10 >> 31) ^ v10);
      v12 = *(char ***)(v6 + 16 * v11);
      if (v12 == &WebCore::JSProcessingInstruction::s_info)
      {
LABEL_7:
        v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
        if (v14)
        {
LABEL_9:
          v21 = WebCore::JSProcessingInstruction::create(v14, a2, a3);
          WebCore::cacheWrapper<WebCore::CDATASection,WebCore::JSCDATASection>(*((_QWORD *)a2 + 415), v3, v21);
          return v21;
        }
      }
      else
      {
        v13 = 1;
        while (v12)
        {
          v11 = ((_DWORD)v11 + v13) & v7;
          v12 = *(char ***)(v6 + 16 * v11);
          ++v13;
          if (v12 == &WebCore::JSProcessingInstruction::s_info)
            goto LABEL_7;
        }
      }
    }
    v15 = (WebCore::JSCharacterData *)*((_QWORD *)a2 + 7);
    v16 = (JSC::JSCell *)WebCore::JSCharacterData::prototype(v15, a2, (WebCore::JSDOMGlobalObject *)a3);
    Structure = WebCore::JSProcessingInstructionPrototype::createStructure((uint64_t *)v15, (uint64_t)a2, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSProcessingInstructionPrototype::create(v15, a2, Structure, v18);
    v20 = WebCore::JSProcessingInstruction::createStructure((uint64_t *)v15, (uint64_t)a2, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a2, v20, (uint64_t)&WebCore::JSProcessingInstruction::s_info);
    goto LABEL_9;
  }
  result = 232;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCOEPInheritenceViolationReportBody::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSReportBody::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSReportBody::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSReportBody::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCOEPInheritenceViolationReportBodyPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCOEPInheritenceViolationReportBodyPrototype::create(WebCore::JSCOEPInheritenceViolationReportBodyPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSCOEPInheritenceViolationReportBody::s_info, &WebCore::JSCOEPInheritenceViolationReportBodyPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

uint64_t WebCore::jsCOEPInheritenceViolationReportBody_disposition(uint64_t a1)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v10;

  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v3 = *(_QWORD *)(a1 + 56);
  if (!v10)
    return *(_QWORD *)(v3 + 41968);
  v4 = *((_DWORD *)v10 + 1);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v5 = *(_QWORD *)(v3 + 64760);
      if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
        v5 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v7 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
    if ((*((_BYTE *)v10 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    v5 = *(_QWORD *)(v3 + 8 * v8 + 42216);
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 41968);
  }
LABEL_7:
  if (*(_DWORD *)v10 == 2)
    WTF::StringImpl::destroy(v10, v2);
  else
    *(_DWORD *)v10 -= 2;
  return v5;
}

uint64_t WebCore::jsCOEPInheritenceViolationReportBody_type(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 56);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsCOEPInheritenceViolationReportBody_blockedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::JSCOEPInheritenceViolationReportBody::subspaceForImpl(WebCore::JSCOEPInheritenceViolationReportBody *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5712);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 5712))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 5712);
    *(_QWORD *)(v8 + 5712) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 5712);
  *(_QWORD *)(v3 + 5712) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCORPViolationReportBody::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSReportBody::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSReportBody::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSReportBody::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCORPViolationReportBodyPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCORPViolationReportBodyPrototype::create(WebCore::JSCORPViolationReportBodyPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCORPViolationReportBody::s_info, &WebCore::JSCORPViolationReportBodyPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

uint64_t WebCore::jsCORPViolationReportBody_disposition(uint64_t a1)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v10;

  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v3 = *(_QWORD *)(a1 + 56);
  if (!v10)
    return *(_QWORD *)(v3 + 41968);
  v4 = *((_DWORD *)v10 + 1);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v5 = *(_QWORD *)(v3 + 64760);
      if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
        v5 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v7 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
    if ((*((_BYTE *)v10 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    v5 = *(_QWORD *)(v3 + 8 * v8 + 42216);
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 41968);
  }
LABEL_7:
  if (*(_DWORD *)v10 == 2)
    WTF::StringImpl::destroy(v10, v2);
  else
    *(_DWORD *)v10 -= 2;
  return v5;
}

uint64_t WebCore::jsCORPViolationReportBody_type(uint64_t a1)
{
  int *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned __int8 *v6;
  unsigned int v7;

  {
    v1 = (int *)WebCore::CORPViolationReportBody::type(void)const::corpType;
    v2 = *(_QWORD *)(a1 + 56);
    if (!WebCore::CORPViolationReportBody::type(void)const::corpType)
      return *(_QWORD *)(v2 + 41968);
  }
  else
  {
    v1 = &WebCore::CORPViolationReportBody::type(void)::$_0::operator() const(void)::impl;
    WebCore::CORPViolationReportBody::type(void)::$_0::operator() const(void)::impl += 2;
    WebCore::CORPViolationReportBody::type(void)const::corpType = (uint64_t)&WebCore::CORPViolationReportBody::type(void)::$_0::operator() const(void)::impl;
    v2 = *(_QWORD *)(a1 + 56);
  }
  v3 = v1[1];
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  if (v3 == 1)
  {
    v6 = (unsigned __int8 *)*((_QWORD *)v1 + 1);
    if ((v1[4] & 4) != 0)
    {
      v7 = *v6;
    }
    else
    {
      v7 = *(unsigned __int16 *)v6;
      if (v7 > 0xFF)
        goto LABEL_5;
      v7 = v7;
    }
    return *(_QWORD *)(v2 + 8 * v7 + 42216);
  }
LABEL_5:
  v4 = *(_QWORD *)(v2 + 64760);
  if (!v4 || v1 != *(int **)(v4 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v4;
}

uint64_t WebCore::jsCORPViolationReportBody_blockedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsCORPViolationReportBody_destination(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  WTF::StringImpl *v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  WebCore::convertEnumerationToString(*(unsigned __int8 *)(*(_QWORD *)(a2 + 24) + 56), &v11);
  v5 = v11;
  if (!v11)
    return *v3;
  v6 = *((_DWORD *)v11 + 1);
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v11 != *(WTF::StringImpl **)(v7 + 8))
        v7 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v9 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
    if ((*((_BYTE *)v11 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy(v5, v4);
  else
    *(_DWORD *)v5 -= 2;
  return v7;
}

uint64_t WebCore::JSCORPViolationReportBody::subspaceForImpl(WebCore::JSCORPViolationReportBody *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5720);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 5720))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 5720);
    *(_QWORD *)(v8 + 5720) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 5720);
  *(_QWORD *)(v3 + 5720) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSPViolationReportBody::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSReportBody::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSReportBody::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSReportBody::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSPViolationReportBodyPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSPViolationReportBodyPrototype::create(WebCore::JSCSPViolationReportBodyPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<13u>(this, (uint64_t)&WebCore::JSCSPViolationReportBody::s_info, (uint64_t)&WebCore::JSCSPViolationReportBodyPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSPViolationReportBody>,(WebCore::DOMConstructorID)753>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  unint64_t v30;
  unint64_t v31;
  JSC::JSObject *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  WTF::StringImpl *v39;
  unint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6024);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSReportBody>,(WebCore::DOMConstructorID)196>(a1, a2);
  v7 = v6;
  LODWORD(v39) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v36 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v36);
    v5[2] = SlowCase + (int)v36;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v39, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSPViolationReportBody>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v37 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v37);
    v10[2848] = v2 + (int)v37;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v39);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v39);
  v14 = v39;
  v39 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v39);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (!v18)
    goto LABEL_21;
  v19 = *(_DWORD *)(v18 - 8);
  v20 = ((unint64_t)&WebCore::JSCSPViolationReportBody::s_info
       + ~((_QWORD)&WebCore::JSCSPViolationReportBody::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSPViolationReportBody::s_info
                                                                        + ~((_QWORD)&WebCore::JSCSPViolationReportBody::s_info << 32)) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(char ***)(v18 + 16 * v23);
  if (v24 != &WebCore::JSCSPViolationReportBody::s_info)
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(char ***)(v18 + 16 * v23);
      ++v25;
      if (v24 == &WebCore::JSCSPViolationReportBody::s_info)
        goto LABEL_20;
    }
LABEL_21:
    v27 = (JSC::JSCell *)WebCore::JSReportBody::prototype((WebCore::JSReportBody *)a1, (JSC::VM *)a2, v16);
    Structure = WebCore::JSCSPViolationReportBodyPrototype::createStructure((uint64_t *)a1, a2, v27);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v30 = WebCore::JSCSPViolationReportBodyPrototype::create((WebCore::JSCSPViolationReportBodyPrototype *)a1, (JSC::VM *)a2, Structure, v29);
    v31 = v30;
    LODWORD(v39) = 23;
    if ((v30 & 0xFFFE000000000002) == 0)
    {
      v32 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
      if (v32)
        JSC::JSObject::didBecomePrototype(v32, (JSC::VM *)a1);
    }
    v33 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v33 = v5[2];
      if ((v33 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v33 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_26;
      }
      v38 = *(_QWORD *)(v33 + 8) ^ v5[3];
      v5[1] = v33 + HIDWORD(v38);
      v5[2] = v33 + (int)v38;
    }
    *v5 = v33 + 128;
LABEL_26:
    *(_DWORD *)v33 = 0;
    MEMORY[0x19AEA4278](v33, a1, a2, v31, &v39, &WebCore::JSCSPViolationReportBody::s_info, 0, 0);
    if (*(_BYTE *)(a1 + 755))
      __dmb(0xAu);
    v26 = WebCore::cacheDOMStructure((JSCell *)a2, v33, (uint64_t)&WebCore::JSCSPViolationReportBody::s_info);
    goto LABEL_29;
  }
LABEL_20:
  v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
  if (!v26)
    goto LABEL_21;
LABEL_29:
  v34 = *(_QWORD *)(v26 + 48);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v34, 14, (uint64_t)&v39);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6024) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSPViolationReportBodyConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSPViolationReportBodyPrototype::s_info != (char **)(16
                                                                      * *(unsigned int *)(16
                                                                                        * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                        + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSPViolationReportBody>,(WebCore::DOMConstructorID)753>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSPViolationReportBody_documentURL(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsCSPViolationReportBody_referrer(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24);
  if (!v2)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_DWORD *)(v2 + 4);
  if (!v5)
    return *(_QWORD *)(v4 + 41968);
  if (v5 == 1)
  {
    v7 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_5;
      v8 = v9;
    }
    return *(_QWORD *)(v4 + 8 * v8 + 42216);
  }
LABEL_5:
  v3 = *(_QWORD *)(v4 + 64760);
  if (!v3 || v2 != *(_QWORD *)(v3 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v3;
}

uint64_t WebCore::jsCSPViolationReportBody_blockedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  if (!v2)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_DWORD *)(v2 + 4);
  if (!v5)
    return *(_QWORD *)(v4 + 41968);
  if (v5 == 1)
  {
    v7 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_5;
      v8 = v9;
    }
    return *(_QWORD *)(v4 + 8 * v8 + 42216);
  }
LABEL_5:
  v3 = *(_QWORD *)(v4 + 64760);
  if (!v3 || v2 != *(_QWORD *)(v3 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v3;
}

uint64_t WebCore::jsCSPViolationReportBody_effectiveDirective(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 40);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsCSPViolationReportBody_originalPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 48);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsCSPViolationReportBody_sourceFile(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 56);
  if (!v2)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_DWORD *)(v2 + 4);
  if (!v5)
    return *(_QWORD *)(v4 + 41968);
  if (v5 == 1)
  {
    v7 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_5;
      v8 = v9;
    }
    return *(_QWORD *)(v4 + 8 * v8 + 42216);
  }
LABEL_5:
  v3 = *(_QWORD *)(v4 + 64760);
  if (!v3 || v2 != *(_QWORD *)(v3 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v3;
}

uint64_t WebCore::jsCSPViolationReportBody_sample(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 64);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_DWORD *)(v2 + 4);
  if (!v4)
    return *(_QWORD *)(v3 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v3 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v3 + 64760);
  if (!v5 || v2 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsCSPViolationReportBody_disposition(uint64_t a1, uint64_t a2)
{
  return WebCore::convertEnumerationToJS<WebCore::SecurityPolicyViolationEventDisposition>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned __int8 *)(*(_QWORD *)(a2 + 24) + 72));
}

unint64_t WebCore::jsCSPViolationReportBody_statusCode(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int16 *)(*(_QWORD *)(a2 + 24) + 74) | 0xFFFE000000000000;
}

unint64_t WebCore::jsCSPViolationReportBody_lineNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80) | 0xFFFE000000000000;
}

unint64_t WebCore::jsCSPViolationReportBody_columnNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 88);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 88) | 0xFFFE000000000000;
}

uint64_t WebCore::JSCSPViolationReportBody::subspaceForImpl(WebCore::JSCSPViolationReportBody *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 6104);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 6104))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 6104);
    *(_QWORD *)(v8 + 6104) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 6104);
  *(_QWORD *)(v3 + 6104) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSAnimation::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSWebAnimation::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSWebAnimation::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSWebAnimation::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSAnimationPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSAnimationPrototype::create(WebCore::JSCSSAnimationPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSAnimation::s_info, (uint64_t)&WebCore::JSCSSAnimationPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSAnimation>,(WebCore::DOMConstructorID)319>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2552);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebAnimation>,(WebCore::DOMConstructorID)328>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSAnimation>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSAnimation::s_info + ~((_QWORD)&WebCore::JSCSSAnimation::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSAnimation::s_info + ~((_QWORD)&WebCore::JSCSSAnimation::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSAnimation::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSAnimation::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSWebAnimation::prototype((WebCore::JSWebAnimation *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSAnimationPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSAnimationPrototype::create((WebCore::JSCSSAnimationPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSAnimation::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSAnimation::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2552) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSAnimationConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSAnimationPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSAnimation>,(WebCore::DOMConstructorID)319>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSAnimation_animationName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 232);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::JSCSSAnimation::subspaceForImpl(WebCore::JSCSSAnimation *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2592);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2592);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2592);
    *(_QWORD *)(v8 + 2592) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2592);
  *(_QWORD *)(v3 + 2592) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSAnimationOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v6 = v5[5];
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (v5[6] || (result = (*(uint64_t (**)(_QWORD *))(v5[4] + 64))(v5 + 4), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

uint64_t WebCore::JSCSSAnimationOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v26;

  result = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = *(_DWORD *)(result + 24);
  *(_DWORD *)(result + 24) = v4 + 1;
  v5 = result + 8;
  if (!result)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v8 = *(_QWORD *)(a3 + 32);
    v6 = (uint64_t *)(a3 + 32);
    v7 = v8;
    if (v8)
    {
      v9 = *(_DWORD *)(v7 - 8);
      v10 = (~(result << 32) + result) ^ ((unint64_t)(~(result << 32) + result) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(_QWORD *)(v7 + 16 * v13);
      if (v14 != result)
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(_QWORD *)(v7 + 16 * v13);
          ++v15;
          if (v14 == result)
            goto LABEL_14;
        }
        v13 = *(unsigned int *)(v7 - 4);
      }
LABEL_14:
      if (v13 != *(_DWORD *)(v7 - 4))
      {
        v16 = (_QWORD *)(v7 + 16 * v13);
        *v16 = -1;
        v19 = v16[1];
        v18 = v16 + 1;
        v17 = v19;
        if (v19)
        {
          *(_QWORD *)(v17 + 8) = 3;
          *v18 = 0;
        }
        ++*(_DWORD *)(*v6 - 16);
        v20 = *v6;
        if (*v6)
          v21 = *(_DWORD *)(v20 - 12) - 1;
        else
          v21 = -1;
        *(_DWORD *)(v20 - 12) = v21;
        v22 = *v6;
        if (*v6)
        {
          v23 = 6 * *(_DWORD *)(v22 - 12);
          v24 = *(_DWORD *)(v22 - 4);
          if (v23 < v24 && v24 >= 9)
          {
            v26 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v24 >> 1, 0);
            result = v26;
          }
        }
      }
    }
    v4 = *(_DWORD *)(result + 24) - 1;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (!v4)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 72))(result);
  *(_DWORD *)(result + 24) = v4;
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSAnimationEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v3;
  unint64_t v5;
  int v6;
  WTF::StringImpl **v7;
  JSC::JSCell *v8;
  JSC::VM *v9;
  uint64_t Object;
  uint64_t v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  char v17;
  double v18;
  JSC::VM *v19;
  double v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  JSC::VM *v29;
  double v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  JSC::VM *v34;
  _DWORD *v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  JSC::VM *v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  JSC::VM *v43;
  WTF::StringImpl *v44;
  int v45;
  WTF::StringImpl *v46;
  JSC::VM *v47;
  uint64_t v48;
  WTF::StringImpl *v49;
  unint64_t v50;
  WTF::StringImpl *v51;
  WebCore::JSDOMGlobalObject *v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  JSC::VM *v56;
  uint64_t v57;
  unsigned int v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char **v63;
  int v64;
  unint64_t v65;
  WebCore::JSEvent *v66;
  JSC::JSCell *v67;
  unint64_t Structure;
  JSC::Structure *v69;
  JSC::JSCell *v70;
  uint64_t v71;
  JSCell *v72;
  JSC::JSCell *v73;
  JSC::JSGlobalObject *v74;
  JSC::JSObject *v75;
  JSC::JSGlobalObject *v76;
  JSC::VM *v77;
  WebCore::JSDOMGlobalObject *v78;
  JSC::Structure *v79;
  JSC::VM *FunctionRealm;
  uint64_t v81;
  unsigned int v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char **v87;
  int v88;
  JSC::JSCell *v89;
  unint64_t v90;
  JSC::Structure *v91;
  JSC::JSCell *v92;
  uint64_t v93;
  unint64_t SubclassStructure;
  _DWORD *v95;
  JSValue v97;
  WTF::StringImpl *v98;
  int v99;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v101;
  double v102;
  BOOL v103;
  int v104;
  uint64_t v105;
  int *v106;
  int v107;
  BOOL v108;
  int v109;
  uint64_t v110;
  int *v111;
  int v112;
  BOOL v113;
  int v114;
  uint64_t v115;
  int *v116;
  int v117;
  unint64_t v118;
  JSC::VM *v119;
  WTF::StringImpl *v120;
  WTF::StringImpl *v121;
  double v122;
  WTF::StringImpl *v123;
  __int16 v124;
  BOOL v125;
  WTF::StringImpl *v126;
  double v127;
  WTF::StringImpl *v128;
  int v129;
  uint64_t v130;
  int v131;
  unint64_t v132;
  int v133;
  JSC::VM *v134;
  WTF::StringImpl *v135;
  _QWORD v136[2];

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v97.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, a1, v97);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v130);
  v6 = v131;
  if (!v131)
  {
    v7 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
    v118 = v5;
    v119 = v3;
    if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
    {
      v134 = (JSC::VM *)*((_QWORD *)a1 + 7);
    }
    else
    {
      v8 = *(JSC::JSCell **)(a2 + 56);
      v9 = (JSC::VM *)*((_QWORD *)a1 + 7);
      v134 = v9;
      if (((unint64_t)v8 & 0xFFFFFFFFFFFFFFF7) != 2)
      {
        if (((unint64_t)v8 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v8)) == 0)
        {
          JSC::throwTypeError();
          goto LABEL_158;
        }
        v11 = Object;
        WTF::AtomStringImpl::addLiteral();
        v13 = JSC::JSObject::get((JSC::Structure *)v11, a1, (unint64_t)v120);
        if (v120)
        {
          if (*(_DWORD *)v120 == 2)
            WTF::StringImpl::destroy(v120, v12);
          else
            *(_DWORD *)v120 -= 2;
        }
        if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
        {
LABEL_158:
          v72 = 0;
          v45 = 1;
          v129 = 1;
LABEL_132:
          ((void (*)(WTF::StringImpl **, __int16 *))off_1E322F558[v45])(&v120, &v124);
LABEL_133:
          v6 = v131;
          goto LABEL_134;
        }
        if (v13 == 10)
        {
          v14 = 0;
          while (1)
          {
            WTF::AtomStringImpl::addLiteral();
            v21 = v120;
            v23 = JSC::JSObject::get((JSC::Structure *)v11, a1, (unint64_t)v120);
            if (v21)
            {
              if (*(_DWORD *)v21 == 2)
                WTF::StringImpl::destroy(v21, v22);
              else
                *(_DWORD *)v21 -= 2;
            }
            if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
              goto LABEL_158;
            if (v23 == 10)
            {
              v15 = 0;
              goto LABEL_35;
            }
            v24 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v23 >= 0xFFFE000000000000)
              break;
            *(_QWORD *)&v25 = v23 - 0x2000000000000;
            if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              if ((v23 & 0xFFFE000000000002) != 0)
              {
                v15 = v23 == 7;
                goto LABEL_34;
              }
              v109 = *(unsigned __int8 *)(v23 + 5);
              if (v109 == 3)
              {
                v112 = *(_DWORD *)(v23 + 8);
                goto LABEL_237;
              }
              if (v109 == 2)
              {
                v110 = *(_QWORD *)(v23 + 8);
                if ((v110 & 1) != 0)
                  v111 = (int *)(v23 + 16);
                else
                  v111 = (int *)(v110 + 4);
                v112 = *v111;
LABEL_237:
                v108 = v112 == 0;
              }
              else
              {
                if ((*(_BYTE *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0xA) & 1) == 0)
                {
LABEL_239:
                  v15 = 1;
                  goto LABEL_34;
                }
                v108 = *(_QWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
              }
LABEL_249:
              v15 = !v108;
              goto LABEL_34;
            }
            if (v25 > 0.0)
              goto LABEL_239;
            v15 = v25 < 0.0;
LABEL_34:
            if (*((_DWORD *)v24 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v24) & 1) != 0)
              goto LABEL_158;
LABEL_35:
            WTF::AtomStringImpl::addLiteral();
            v26 = v120;
            v28 = JSC::JSObject::get((JSC::Structure *)v11, a1, (unint64_t)v120);
            if (v26)
            {
              if (*(_DWORD *)v26 == 2)
                WTF::StringImpl::destroy(v26, v27);
              else
                *(_DWORD *)v26 -= 2;
            }
            if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
              goto LABEL_158;
            if (v28 == 10)
            {
              v16 = 0;
              goto LABEL_46;
            }
            v29 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v28 >= 0xFFFE000000000000)
            {
              v113 = (_DWORD)v28 == 0;
              goto LABEL_253;
            }
            *(_QWORD *)&v30 = v28 - 0x2000000000000;
            if (v28 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              if ((v28 & 0xFFFE000000000002) != 0)
              {
                v16 = v28 == 7;
                goto LABEL_45;
              }
              v114 = *(unsigned __int8 *)(v28 + 5);
              if (v114 == 3)
              {
                v117 = *(_DWORD *)(v28 + 8);
              }
              else
              {
                if (v114 != 2)
                {
                  if ((*(_BYTE *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0xA) & 1) == 0)
                  {
LABEL_243:
                    v16 = 1;
                    goto LABEL_45;
                  }
                  v113 = *(_QWORD *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                  goto LABEL_253;
                }
                v115 = *(_QWORD *)(v28 + 8);
                if ((v115 & 1) != 0)
                  v116 = (int *)(v28 + 16);
                else
                  v116 = (int *)(v115 + 4);
                v117 = *v116;
              }
              v113 = v117 == 0;
LABEL_253:
              v16 = !v113;
              goto LABEL_45;
            }
            if (v30 > 0.0)
              goto LABEL_243;
            v16 = v30 < 0.0;
LABEL_45:
            if (*((_DWORD *)v29 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v29) & 1) != 0)
              goto LABEL_158;
LABEL_46:
            WTF::AtomStringImpl::addLiteral();
            v31 = v120;
            v33 = JSC::JSObject::get((JSC::Structure *)v11, a1, (unint64_t)v120);
            if (v31)
            {
              if (*(_DWORD *)v31 == 2)
                WTF::StringImpl::destroy(v31, v32);
              else
                *(_DWORD *)v31 -= 2;
            }
            if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
              goto LABEL_158;
            if (v33 != 10)
            {
              v132 = v33;
              v34 = (JSC::VM *)*((_QWORD *)a1 + 7);
              if ((v33 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v33 + 5) != 2)
              {
                JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v132, a1);
              }
              else
              {
                v35 = *(_DWORD **)(v33 + 8);
                if ((v35 & 1) != 0)
                {
                  v35 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v33, a1);
                  if (v35)
LABEL_56:
                    *v35 += 2;
                }
                else if (v35)
                {
                  goto LABEL_56;
                }
                v136[0] = v35;
              }
              if (*((_DWORD *)v34 + 20))
              {
                hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v34);
                v9 = (JSC::VM *)v136[0];
                if (hasExceptionsAfterHandlingTraps)
                {
                  v45 = 1;
                  LODWORD(v121) = 1;
                  v136[0] = 0;
                  if (v9)
                  {
                    if (*(_DWORD *)v9 == 2)
                      WTF::StringImpl::destroy(v9, v46);
                    else
                      *(_DWORD *)v9 -= 2;
                  }
                  v9 = 0;
                  goto LABEL_184;
                }
              }
              else
              {
                v9 = (JSC::VM *)v136[0];
              }
              LODWORD(v121) = 0;
              v120 = 0;
              goto LABEL_61;
            }
            v17 = 0;
            v7 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
LABEL_15:
            v9 = *v7;
            if (*v7)
              *(_DWORD *)v9 += 2;
            LODWORD(v121) = 0;
            v120 = 0;
            if ((v17 & 1) != 0)
            {
              v18 = 0.0;
LABEL_77:
              v42 = *v7;
              if (*v7)
                *(_DWORD *)v42 += 2;
              goto LABEL_87;
            }
LABEL_61:
            WTF::AtomStringImpl::addLiteral();
            v36 = (WTF::StringImpl *)v132;
            v38 = JSC::JSObject::get((JSC::Structure *)v11, a1, v132);
            if (v36)
            {
              if (*(_DWORD *)v36 == 2)
                WTF::StringImpl::destroy(v36, v37);
              else
                *(_DWORD *)v36 -= 2;
            }
            if (!*((_DWORD *)v134 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v134))
            {
              v18 = 0.0;
              if (v38 == 10)
                goto LABEL_71;
              v132 = v38;
              v39 = (JSC::VM *)*((_QWORD *)a1 + 7);
              v136[0] = v39;
              if (v38 >= 0xFFFE000000000000)
              {
                v18 = (double)(int)v38;
              }
              else if (v38 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                v101 = v39;
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v132, a1);
                v39 = v101;
                v18 = v102;
              }
              else
              {
                *(_QWORD *)&v18 = v38 - 0x2000000000000;
              }
              if (!*((_DWORD *)v39 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v39) & 1) == 0)
              {
                if ((*(_QWORD *)&v18 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
                {
LABEL_71:
                  WTF::AtomStringImpl::addLiteral();
                  v40 = (WTF::StringImpl *)v132;
                  v11 = JSC::JSObject::get((JSC::Structure *)v11, a1, v132);
                  if (v40)
                  {
                    if (*(_DWORD *)v40 == 2)
                      WTF::StringImpl::destroy(v40, v41);
                    else
                      *(_DWORD *)v40 -= 2;
                  }
                  if (!*((_DWORD *)v134 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v134))
                  {
                    if (v11 == 10)
                    {
                      v7 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
                      goto LABEL_77;
                    }
                    v136[0] = v11;
                    v43 = (JSC::VM *)*((_QWORD *)a1 + 7);
                    if ((v11 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v11 + 5) != 2)
                    {
                      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v136, a1);
                    }
                    else
                    {
                      v44 = *(WTF::StringImpl **)(v11 + 8);
                      if ((v44 & 1) != 0)
                      {
                        v44 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, a1);
                        if (v44)
LABEL_83:
                          *(_DWORD *)v44 += 2;
                      }
                      else if (v44)
                      {
                        goto LABEL_83;
                      }
                      v135 = v44;
                    }
                    if (!*((_DWORD *)v43 + 20))
                    {
                      v42 = v135;
                      goto LABEL_87;
                    }
                    v99 = JSC::VM::hasExceptionsAfterHandlingTraps(v43);
                    v42 = v135;
                    if (v99)
                    {
                      v133 = 1;
                      v135 = 0;
                      if (v42)
                      {
                        if (*(_DWORD *)v42 == 2)
                          WTF::StringImpl::destroy(v42, v98);
                        else
                          *(_DWORD *)v42 -= 2;
                      }
                      v45 = 1;
                    }
                    else
                    {
LABEL_87:
                      v133 = 0;
                      v45 = 0;
                      v132 = 0;
                      LOBYTE(v124) = v14;
                      HIBYTE(v124) = v15;
                      v125 = v16;
                      v126 = v9;
                      v127 = v18;
                      v128 = v42;
                      v9 = 0;
                    }
                    v129 = v45;
                    ((void (*)(_QWORD *, unint64_t *))off_1E322E100[v45])(v136, &v132);
                    v13 = v118;
                    v47 = v119;
                    goto LABEL_89;
                  }
                  goto LABEL_183;
                }
                JSC::throwTypeError();
              }
            }
LABEL_183:
            v45 = 1;
LABEL_184:
            v129 = 1;
            v13 = v118;
            v47 = v119;
LABEL_89:
            if ((_DWORD)v121 != -1)
              ((void (*)(unint64_t *, WTF::StringImpl **))off_1E322E100[v121])(&v132, &v120);
            if (!v9)
              goto LABEL_94;
            if (*(_DWORD *)v9 != 2)
            {
              *(_DWORD *)v9 -= 2;
LABEL_94:
              if (v45)
                goto LABEL_138;
              goto LABEL_95;
            }
            WTF::StringImpl::destroy(v9, v46);
            v45 = v129;
            if (v129)
            {
LABEL_138:
              v72 = 0;
              if (v45 == -1)
                goto LABEL_133;
              goto LABEL_132;
            }
LABEL_95:
            if (!v131)
            {
              v48 = v130;
              v130 = 0;
              v136[0] = v48;
              LOWORD(v120) = v124;
              BYTE2(v120) = v125;
              v121 = v126;
              v122 = v127;
              v49 = v128;
              v126 = 0;
              v128 = 0;
              v123 = v49;
              v50 = bmalloc::api::isoAllocate();
              *(_QWORD *)WebCore::StyleOriginatedAnimationEvent::StyleOriginatedAnimationEvent(v50, 51, v136, (unsigned __int8 *)&v120, 0, (WTF::StringImpl *)&v123, v122) = off_1E338CC18;
              v53 = v121;
              if (v121)
                *(_DWORD *)v121 += 2;
              *(_QWORD *)(v50 + 128) = v53;
              v132 = v50;
              v54 = v123;
              v123 = 0;
              if (v54)
              {
                if (*(_DWORD *)v54 == 2)
                {
                  WTF::StringImpl::destroy(v54, v51);
                  v53 = v121;
                }
                else
                {
                  *(_DWORD *)v54 -= 2;
                }
              }
              v121 = 0;
              if (v53)
              {
                if (*(_DWORD *)v53 == 2)
                  WTF::StringImpl::destroy(v53, v51);
                else
                  *(_DWORD *)v53 -= 2;
              }
              v55 = (WTF::StringImpl *)v136[0];
              v136[0] = 0;
              if (v55)
              {
                if (*(_DWORD *)v55 == 2)
                  WTF::StringImpl::destroy(v55, v51);
                else
                  *(_DWORD *)v55 -= 2;
              }
              if (*(void (***)(WebCore::CSSAnimationEvent *__hidden))v50 != off_1E338CC18)
              {
                __break(0xC471u);
                JUMPOUT(0x194894604);
              }
              v56 = *(JSC::VM **)(v13 + 40);
              v57 = *((_QWORD *)v56 + 412);
              if (!v57)
                goto LABEL_114;
              v58 = *(_DWORD *)(v57 - 8);
              v59 = ((unint64_t)&WebCore::JSCSSAnimationEvent::s_info
                   + ~((_QWORD)&WebCore::JSCSSAnimationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSAnimationEvent::s_info
                                                                               + ~((_QWORD)&WebCore::JSCSSAnimationEvent::s_info << 32)) >> 22);
              v60 = 9 * ((v59 + ~(v59 << 13)) ^ ((v59 + ~(v59 << 13)) >> 8));
              v61 = (v60 ^ (v60 >> 15)) + ~((v60 ^ (v60 >> 15)) << 27);
              v62 = v58 & ((v61 >> 31) ^ v61);
              v63 = *(char ***)(v57 + 16 * v62);
              if (v63 == &WebCore::JSCSSAnimationEvent::s_info)
              {
LABEL_113:
                v65 = *(_QWORD *)(v57 + 16 * v62 + 8);
                if (!v65)
                  goto LABEL_114;
              }
              else
              {
                v64 = 1;
                while (v63)
                {
                  v62 = ((_DWORD)v62 + v64) & v58;
                  v63 = *(char ***)(v57 + 16 * v62);
                  ++v64;
                  if (v63 == &WebCore::JSCSSAnimationEvent::s_info)
                    goto LABEL_113;
                }
LABEL_114:
                v66 = (WebCore::JSEvent *)*((_QWORD *)v56 + 7);
                v67 = (JSC::JSCell *)WebCore::JSEvent::prototype(v66, v56, v52);
                Structure = WebCore::JSCSSAnimationEventPrototype::createStructure((uint64_t *)v66, (uint64_t)v56, v67);
                *(_DWORD *)(Structure + 16) |= 0x80000u;
                v70 = (JSC::JSCell *)WebCore::JSCSSAnimationEventPrototype::create(v66, v56, Structure, v69);
                v71 = WebCore::JSCSSAnimationEvent::createStructure((uint64_t *)v66, (uint64_t)v56, v70);
                v65 = WebCore::cacheDOMStructure((JSCell *)v56, v71, (uint64_t)&WebCore::JSCSSAnimationEvent::s_info);
              }
              v72 = (JSCell *)WebCore::JSCSSAnimationEvent::create(v65, v56, (uint64_t *)&v132);
              WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v56 + 415), v50, (uint64_t)v72);
              v73 = *(JSC::JSCell **)(a2 + 40);
              if (((unint64_t)v73 & 0xFFFE000000000002) != 0
                || (v74 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v73)) == 0
                || (v76 = v74, v74 == *(JSC::JSGlobalObject **)(a2 + 24))
                || (v77 = (JSC::VM *)*((_QWORD *)a1 + 7),
                    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v74, v75),
                    *((_DWORD *)v77 + 20))
                && (JSC::VM::hasExceptionsAfterHandlingTraps(v77) & 1) != 0)
              {
LABEL_128:
                if (*((_DWORD *)v47 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v47) & 1) != 0)
                  v72 = 0;
                v95 = (_DWORD *)v132;
                v132 = 0;
                if (v95)
                {
                  if (v95[4] == 1)
                    (*(void (**)(_DWORD *))(*(_QWORD *)v95 + 8))(v95);
                  else
                    --v95[4];
                }
                goto LABEL_132;
              }
              v81 = *((_QWORD *)FunctionRealm + 412);
              if (v81)
              {
                v82 = *(_DWORD *)(v81 - 8);
                v83 = ((unint64_t)&WebCore::JSCSSAnimationEvent::s_info
                     + ~((_QWORD)&WebCore::JSCSSAnimationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSAnimationEvent::s_info
                                                                                 + ~((_QWORD)&WebCore::JSCSSAnimationEvent::s_info << 32)) >> 22);
                v84 = 9 * ((v83 + ~(v83 << 13)) ^ ((v83 + ~(v83 << 13)) >> 8));
                v85 = (v84 ^ (v84 >> 15)) + ~((v84 ^ (v84 >> 15)) << 27);
                v86 = v82 & ((v85 >> 31) ^ v85);
                v87 = *(char ***)(v81 + 16 * v86);
                if (v87 != &WebCore::JSCSSAnimationEvent::s_info)
                {
                  v88 = 1;
                  while (v87)
                  {
                    v86 = ((_DWORD)v86 + v88) & v82;
                    v87 = *(char ***)(v81 + 16 * v86);
                    ++v88;
                    if (v87 == &WebCore::JSCSSAnimationEvent::s_info)
                      goto LABEL_124;
                  }
                  goto LABEL_125;
                }
LABEL_124:
                v78 = *(WebCore::JSDOMGlobalObject **)(v81 + 16 * v86 + 8);
                if (!v78)
                  goto LABEL_125;
              }
              else
              {
LABEL_125:
                v89 = (JSC::JSCell *)WebCore::JSEvent::prototype(v77, FunctionRealm, v78);
                v90 = WebCore::JSCSSAnimationEventPrototype::createStructure((uint64_t *)v77, (uint64_t)FunctionRealm, v89);
                *(_DWORD *)(v90 + 16) |= 0x80000u;
                v92 = (JSC::JSCell *)WebCore::JSCSSAnimationEventPrototype::create(v77, FunctionRealm, v90, v91);
                v93 = WebCore::JSCSSAnimationEvent::createStructure((uint64_t *)v77, (uint64_t)FunctionRealm, v92);
                v78 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v93, (uint64_t)&WebCore::JSCSSAnimationEvent::s_info);
              }
              SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v76, v78, v79);
              if (!*((_DWORD *)v77 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v77) & 1) == 0)
                JSC::JSObject::setStructure(v72, v77, SubclassStructure);
              goto LABEL_128;
            }
            v19 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_205:
            v103 = (_DWORD)v13 == 0;
LABEL_245:
            v14 = !v103;
LABEL_23:
            if (*((_DWORD *)v19 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
              goto LABEL_158;
          }
          v108 = (_DWORD)v23 == 0;
          goto LABEL_249;
        }
        v19 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v13 >= 0xFFFE000000000000)
          goto LABEL_205;
        *(_QWORD *)&v20 = v13 - 0x2000000000000;
        if (v13 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          if (v20 <= 0.0)
          {
            v14 = v20 < 0.0;
            goto LABEL_23;
          }
        }
        else
        {
          if ((v13 & 0xFFFE000000000002) != 0)
          {
            v14 = v13 == 7;
            goto LABEL_23;
          }
          v104 = *(unsigned __int8 *)(v13 + 5);
          if (v104 == 3)
          {
            v107 = *(_DWORD *)(v13 + 8);
LABEL_233:
            v103 = v107 == 0;
            goto LABEL_245;
          }
          if (v104 == 2)
          {
            v105 = *(_QWORD *)(v13 + 8);
            if ((v105 & 1) != 0)
              v106 = (int *)(v13 + 16);
            else
              v106 = (int *)(v105 + 4);
            v107 = *v106;
            goto LABEL_233;
          }
          if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v103 = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_245;
          }
        }
        v14 = 1;
        goto LABEL_23;
      }
    }
    v11 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 1;
    goto LABEL_15;
  }
  v72 = 0;
LABEL_134:
  if (v6 != -1)
    ((void (*)(__int16 *, uint64_t *))off_1E322E3B0[v6])(&v124, &v130);
  return v72;
}

uint64_t WebCore::JSCSSAnimationEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSAnimationEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSAnimationEventPrototype::create(WebCore::JSCSSAnimationEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSCSSAnimationEvent::s_info, &WebCore::JSCSSAnimationEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSAnimationEvent>,(WebCore::DOMConstructorID)320>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2560);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCSSAnimationEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSAnimationEvent::s_info
         + ~((_QWORD)&WebCore::JSCSSAnimationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSAnimationEvent::s_info
                                                                     + ~((_QWORD)&WebCore::JSCSSAnimationEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSAnimationEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSAnimationEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSAnimationEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSAnimationEventPrototype::create((WebCore::JSCSSAnimationEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSAnimationEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSAnimationEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2560) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSAnimationEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSAnimationEventPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSAnimationEvent>,(WebCore::DOMConstructorID)320>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSAnimationEvent_animationName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 128);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

unint64_t WebCore::jsCSSAnimationEvent_elapsedTime(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 88);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

uint64_t WebCore::jsCSSAnimationEvent_pseudoElement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  WTF::StringImpl *v15;
  unsigned int v16;
  WTF::StringImpl *v17;

  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 120))
  {
    if (!*(_QWORD *)(v3 + 96))
    {
      WebCore::pseudoElementIdentifierAsString(v3 + 104, (uint64_t *)&v17);
      v5 = v17;
      v17 = 0;
      v6 = *(WTF::StringImpl **)(v3 + 96);
      *(_QWORD *)(v3 + 96) = v5;
      if (v6)
      {
        v7 = *(_DWORD *)v6 - 2;
        if (*(_DWORD *)v6 == 2)
        {
          WTF::StringImpl::destroy(v6, v4);
          v6 = v17;
          v17 = 0;
          if (!v6)
            goto LABEL_6;
          v7 = *(_DWORD *)v6 - 2;
          if (*(_DWORD *)v6 == 2)
          {
            WTF::StringImpl::destroy(v6, v15);
            goto LABEL_6;
          }
        }
        *(_DWORD *)v6 = v7;
      }
    }
  }
LABEL_6:
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(v3 + 96);
  if (!v9)
    return *(_QWORD *)(v8 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v8 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v16 = *(unsigned __int16 *)v13;
      if (v16 > 0xFF)
        goto LABEL_9;
      v14 = v16;
    }
    return *(_QWORD *)(v8 + 8 * v14 + 42216);
  }
LABEL_9:
  v11 = *(_QWORD *)(v8 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

uint64_t WebCore::JSCSSAnimationEvent::subspaceForImpl(WebCore::JSCSSAnimationEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2600);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 2600))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 2600);
    *(_QWORD *)(v8 + 2600) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2600);
  *(_QWORD *)(v3 + 2600) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSCSSColor>::construct(JSC *a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t (**v8)();
  JSValue v9;
  int i;
  unsigned int v11;
  unint64_t IndexQuickly;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  unint64_t SlowCase;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  WTF *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  char **v27;
  BOOL v28;
  uint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  void *v34;
  WebCore::JSDOMGlobalObject *v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  WTF *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char **v49;
  int v50;
  unint64_t v51;
  WebCore::JSCSSColorValue *v52;
  JSC::JSCell *v53;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v55;
  JSC::Structure *v56;
  JSC::JSCell *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  WTF *v69;
  uint64_t v70;
  uint64_t v71;
  WTF *v72;
  void *v73;
  int v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  JSC::JSCell *v80;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v82;
  JSC::JSGlobalObject *v83;
  JSC::VM *v84;
  JSC::JSObject *v85;
  JSC::Structure *v86;
  JSC::VM *FunctionRealm;
  uint64_t v88;
  unsigned int v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char **v94;
  int v95;
  JSC::JSCell *v96;
  unint64_t v97;
  WebCore::JSDOMGlobalObject *v98;
  JSC::Structure *v99;
  JSC::JSCell *v100;
  uint64_t v101;
  unint64_t SubclassStructure;
  int v103;
  unint64_t v105;
  uint64_t v106;
  _QWORD *Allocator;
  JSValue v108;
  int hasExceptionsAfterHandlingTraps;
  void *v110;
  uint64_t v111;
  WTF::StringImpl *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t *v115;
  JSC::VM *v116;
  uint64_t v117;
  uint64_t v118;
  char v119[8];
  unsigned int v120;
  char v121[8];
  unsigned int v122;
  WTF *v123;
  uint64_t v124;
  int v125;
  _QWORD *v126;
  int v127;
  WTF *v128;
  int v129;
  char v130;
  WTF::StringImpl *v131;
  uint64_t v132;
  int v133;
  int v134;
  char v135[8];
  uint64_t v136;
  unsigned int v137;
  int v138;
  uint64_t v139;

  v139 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v108.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException(v3, a1, v108);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert((uint64_t)v135, a1, *(_QWORD *)(a2 + 48));
  v6 = v138;
  if (!v138)
  {
    v7 = *(_QWORD *)(a2 + 56);
    v8 = (uint64_t (**)())*((_QWORD *)a1 + 7);
    v128 = (WTF *)v8;
    if ((v7 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v7 + 5) <= 0x16u)
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      JSC::throwTypeError();
      v14 = v131;
      v131 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v13);
        else
          *(_DWORD *)v14 -= 2;
      }
      SlowCase = 0;
      v16 = 1;
      v125 = 1;
      goto LABEL_146;
    }
    v117 = v5;
    v131 = 0;
    v132 = 0;
    if (JSC::getIterationMode() == 2)
    {
      for (i = 1; ; ++i)
      {
        v11 = (*(_BYTE *)(v7 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v7 + 8) - 8) : 0;
        if (i - 1 >= v11)
          break;
        IndexQuickly = JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v7, i - 1, 0);
        if (!IndexQuickly)
          IndexQuickly = JSC::JSObject::get((JSC::JSObject *)v7, a1, (i - 1));
        if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
          break;
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, IndexQuickly, (uint64_t)&v131);
        if (v8[2])
        {
          v20 = JSC::JSArrayIterator::create();
          v21 = i | 0xFFFE000000000000;
          if (i < 0)
            v21 = COERCE__INT64((double)i) + 0x2000000000000;
          *(_QWORD *)(v20 + 16) = v21;
          goto LABEL_36;
        }
      }
    }
    else
    {
      JSC::iteratorForIterable(a1, (JSC::JSGlobalObject *)v7, v9);
      if (!*((_DWORD *)v8 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) == 0)
      {
        while (1)
        {
          v17 = JSC::iteratorStep();
          if (v8[2] || v17 == 6)
            break;
          v19 = JSC::iteratorValue();
          if (*((_DWORD *)v8 + 20))
          {
            if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
              break;
          }
          WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, v19, (uint64_t)&v131);
          if (v8[2])
          {
LABEL_36:
            JSC::iteratorClose();
            break;
          }
        }
      }
    }
    if (*((_DWORD *)v8 + 20))
    {
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8);
      v22 = v131;
      if (hasExceptionsAfterHandlingTraps)
      {
        v125 = 1;
        if (HIDWORD(v132))
        {
          v111 = 16 * HIDWORD(v132);
          v112 = v131;
          do
          {
            v113 = *((unsigned int *)v112 + 2);
            if ((_DWORD)v113 != -1)
              ((void (*)(_QWORD **, WTF::StringImpl *))off_1E322FC50[v113])(&v126, v112);
            *((_DWORD *)v112 + 2) = -1;
            v112 = (WTF::StringImpl *)((char *)v112 + 16);
            v111 -= 16;
          }
          while (v111);
        }
        if (v22)
          WTF::fastFree(v22, v110);
        SlowCase = 0;
        v16 = 1;
        goto LABEL_146;
      }
    }
    else
    {
      v22 = v131;
    }
    v123 = v22;
    v23 = HIDWORD(v132);
    v124 = v132;
    v125 = 0;
    if ((unint64_t)(*(int *)(a2 + 32) - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v24 = *(_QWORD *)(a2 + 64), v24 == 10))
    {
      v132 = 0x3FF0000000000000;
      v133 = 0;
    }
    else
    {
      if ((v24 & 0xFFFE000000000002) != 0)
        goto LABEL_56;
      v25 = *(unsigned int *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C);
      v26 = *(_DWORD *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C) != 0;
      v27 = (char **)(16 * v25);
      if ((_DWORD)v25)
        v28 = v27 == &WebCore::JSCSSNumericValue::s_info;
      else
        v28 = 1;
      if (!v28)
      {
        do
        {
          v27 = (char **)v27[2];
          v26 = v27 != 0;
        }
        while (v27 != &WebCore::JSCSSNumericValue::s_info && v27 != 0);
      }
      if (!v26 || (v30 = *(_QWORD *)(v24 + 24)) == 0)
      {
LABEL_56:
        WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 64), (uint64_t)&v128);
        v31 = v129;
        if (v129)
        {
          v31 = 1;
        }
        else
        {
          v132 = (uint64_t)v128;
          v133 = 0;
        }
        v134 = v31;
        if (v31)
        {
          SlowCase = 0;
          v103 = 1;
LABEL_144:
          ((void (*)(WTF **, uint64_t *))off_1E322F648[v103])(&v128, &v132);
LABEL_145:
          v16 = 0;
LABEL_146:
          ((void (*)(WTF::StringImpl **, WTF **))off_1E322F658[v16])(&v131, &v123);
          v6 = v138;
          goto LABEL_147;
        }
LABEL_60:
        if (!v138)
        {
          v121[0] = 0;
          v122 = -1;
          v32 = v137;
          v8 = off_1E322F618;
          v116 = v3;
          if (v137 == -1)
          {
LABEL_64:
            v123 = 0;
            v124 = 0;
LABEL_65:
            v119[0] = 0;
            v120 = -1;
            v33 = v133;
            if (v133 != -1)
            {
              ((void (*)(WTF **, char *, uint64_t *))off_1E322F638[v133])(&v128, v119, &v132);
              v120 = v33;
            }
            v36 = bmalloc::api::isoAllocate();
            LOBYTE(v128) = 0;
            v129 = -1;
            v37 = v122;
            if (v122 != -1)
            {
              ((void (*)(_QWORD **, WTF **, char *))v8[v122])(&v126, &v128, v121);
              v129 = v37;
            }
            LOBYTE(v126) = 0;
            v127 = -1;
            v38 = v120;
            if (v120 == -1)
            {
              *(_QWORD *)(v36 + 16) = 0;
              v115 = (uint64_t *)(v36 + 16);
              *(_DWORD *)(v36 + 8) = 1;
              *(_QWORD *)(v36 + 24) = 0;
              *(_QWORD *)(v36 + 32) = 0;
              *(_QWORD *)v36 = &off_1E339F4F0;
              *(_BYTE *)(v36 + 40) = 0;
              *(_DWORD *)(v36 + 48) = -1;
            }
            else
            {
              ((void (*)(char *, _QWORD **, char *))off_1E322F638[v120])(&v130, &v126, v119);
              v127 = v38;
              *(_QWORD *)(v36 + 16) = 0;
              v115 = (uint64_t *)(v36 + 16);
              *(_DWORD *)(v36 + 8) = 1;
              *(_QWORD *)(v36 + 24) = 0;
              *(_QWORD *)(v36 + 32) = 0;
              *(_BYTE *)(v36 + 40) = 0;
              *(_QWORD *)v36 = &off_1E339F4F0;
              *(_DWORD *)(v36 + 48) = -1;
              ((void (*)(char *, uint64_t, _QWORD **))__const__ZNSt3__116__variant_detail12__visitation6__base14__visit_alt_atB8sn180100IZNS0_6__ctorINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISF_LNS0_6_TraitE1EEEEEvRSG_OT_EUlRSM_OT0_E_JSL_SK_EEEDcmSN_DpOT0____fdiagonal[v38])(&v130, v36 + 40, &v126);
              *(_DWORD *)(v36 + 48) = v38;
              if (v127 != -1)
                ((void (*)(char *, _QWORD **))off_1E322F628[v127])(&v130, &v126);
            }
            v127 = -1;
            if ((_DWORD)v23)
            {
              v39 = 16 * v23;
              v40 = v22;
              do
              {
                v41 = *((unsigned int *)v40 + 2);
                if ((_DWORD)v41 != -1)
                  ((void (*)(char *, WTF *))off_1E322FC50[v41])(&v130, v40);
                *((_DWORD *)v40 + 2) = -1;
                v40 = (WTF *)((char *)v40 + 16);
                v39 -= 16;
              }
              while (v39);
            }
            if (v22)
              WTF::fastFree(v22, v34);
            if (v129 != -1)
              ((void (*)(char *, WTF **))off_1E322F608[v129])(&v130, &v128);
            if (v120 != -1)
              ((void (*)(WTF **, char *))off_1E322F628[v120])(&v128, v119);
            if (v122 != -1)
              ((void (*)(WTF **, char *))off_1E322F608[v122])(&v128, v121);
            if (*(uint64_t (***)())v36 != &off_1E339F4F0)
            {
              __break(0xC471u);
              JUMPOUT(0x19489617CLL);
            }
            v42 = *(_QWORD *)(v117 + 40);
            v43 = *(_QWORD *)(v42 + 3296);
            if (v43)
            {
              v44 = *(_DWORD *)(v43 - 8);
              v45 = ((unint64_t)&WebCore::JSCSSColor::s_info + ~((_QWORD)&WebCore::JSCSSColor::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSColor::s_info + ~((_QWORD)&WebCore::JSCSSColor::s_info << 32)) >> 22);
              v46 = 9 * ((v45 + ~(v45 << 13)) ^ ((v45 + ~(v45 << 13)) >> 8));
              v47 = (v46 ^ (v46 >> 15)) + ~((v46 ^ (v46 >> 15)) << 27);
              v48 = v44 & ((v47 >> 31) ^ v47);
              v49 = *(char ***)(v43 + 16 * v48);
              if (v49 == &WebCore::JSCSSColor::s_info)
              {
LABEL_92:
                v51 = *(_QWORD *)(v43 + 16 * v48 + 8);
                if (v51)
                  goto LABEL_94;
              }
              else
              {
                v50 = 1;
                while (v49)
                {
                  v48 = ((_DWORD)v48 + v50) & v44;
                  v49 = *(char ***)(v43 + 16 * v48);
                  ++v50;
                  if (v49 == &WebCore::JSCSSColor::s_info)
                    goto LABEL_92;
                }
              }
            }
            v52 = *(WebCore::JSCSSColorValue **)(v42 + 56);
            v53 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v52, *(JSC::VM **)(v117 + 40), v35);
            Structure = WebCore::JSCSSColorPrototype::createStructure((uint64_t *)v52, v42, v53);
            *(_DWORD *)(Structure + 16) |= 0x80000u;
            v57 = (JSC::JSCell *)WebCore::JSCSSColorPrototype::create(v52, Structure, v55, v56);
            v58 = WebCore::JSCSSColor::createStructure((uint64_t *)v52, v42, v57);
            v51 = WebCore::cacheDOMStructure((JSCell *)v42, v58, (uint64_t)&WebCore::JSCSSColor::s_info);
LABEL_94:
            v59 = *(_QWORD *)(v42 + 56);
            v60 = *(_QWORD *)(v59 + 41456);
            v61 = *(_QWORD *)(v60 + 23536);
            v62 = *(_QWORD **)(v61 + 3128);
            if (v62)
              goto LABEL_114;
            v63 = *(_QWORD *)(v60 + 22648);
            v64 = __ldaxr((unsigned __int8 *)v63);
            v118 = *(_QWORD *)(v42 + 56);
            if (v64)
            {
              __clrex();
            }
            else if (!__stxr(1u, (unsigned __int8 *)v63))
            {
              goto LABEL_99;
            }
            MEMORY[0x19AEA534C](v63);
LABEL_99:
            v65 = *(_QWORD *)(v63 + 2824);
            if (!*(_QWORD *)(v65 + 3128))
            {
              v66 = WTF::fastMalloc((WTF *)0xF8);
              WTF::CString::CString((WTF::CString *)&v128, "IsoSpace T");
              v126 = 0;
              MEMORY[0x19AEA3204](v66, &v128, v118 + 192, v118 + 1872, 32, 8, &v126);
              v68 = (uint64_t)v126;
              v126 = 0;
              if (v68)
                (*(void (**)(uint64_t))(*(_QWORD *)v68 + 8))(v68);
              v69 = v128;
              v128 = 0;
              if (v69)
              {
                if (*(_DWORD *)v69 == 1)
                  WTF::fastFree(v69, v67);
                else
                  --*(_DWORD *)v69;
              }
              v70 = *(_QWORD *)(v65 + 3128);
              *(_QWORD *)(v65 + 3128) = v66;
              if (v70)
                (*(void (**)(uint64_t))(*(_QWORD *)v70 + 8))(v70);
            }
            v62 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
            JSC::GCClient::IsoSubspace::IsoSubspace();
            v71 = *(_QWORD *)(v61 + 3128);
            *(_QWORD *)(v61 + 3128) = v62;
            if (v71)
            {
              v72 = (WTF *)MEMORY[0x19AEA3528]();
              WTF::fastFree(v72, v73);
            }
            v74 = __ldxr((unsigned __int8 *)v63);
            if (v74 == 1)
            {
              v59 = v118;
              if (!__stlxr(0, (unsigned __int8 *)v63))
              {
LABEL_114:
                SlowCase = v62[3];
                if (SlowCase >= v62[4])
                {
                  SlowCase = v62[5];
                  if ((SlowCase & 1) != 0)
                  {
                    JSC::sanitizeStackForVM();
                    SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_116:
                    *(_DWORD *)SlowCase = 0;
                    WebCore::JSDOMObject::JSDOMObject(SlowCase, v51);
                    *(_QWORD *)(SlowCase + 24) = v36;
                    if (*(_BYTE *)(v59 + 755))
                      __dmb(0xAu);
                    v75 = *(_QWORD *)(v42 + 3320);
                    {
                      WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner = (uint64_t)&off_1E324B170;
                    }
                    if (*(_DWORD *)(v75 + 48))
                    {
                      v128 = (WTF *)v36;
                      if ((SlowCase & 8) != 0)
                        v105 = (SlowCase - 112) | 1;
                      else
                        v105 = SlowCase & 0xFFFFFFFFFFFFC000;
                      if ((v105 & 1) != 0)
                        v106 = v105 + 47;
                      else
                        v106 = *(_QWORD *)v105 + 32;
                      Allocator = *(_QWORD **)(v106 + 16);
                      if (!Allocator)
                        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
                      *(_QWORD *)(v106 + 16) = *Allocator;
                      *Allocator = SlowCase;
                      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
                      Allocator[2] = v75;
                      v126 = Allocator;
                      JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v75 + 32), (uint64_t *)&v128, (uint64_t *)&v126);
                      v79 = (uint64_t)v126;
                      if (!v126)
                      {
LABEL_129:
                        v80 = *(JSC::JSCell **)(a2 + 40);
                        if (((unint64_t)v80 & 0xFFFE000000000002) != 0)
                          goto LABEL_142;
                        Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v80);
                        if (!Object)
                          goto LABEL_142;
                        v83 = Object;
                        if (Object == *(JSC::JSGlobalObject **)(a2 + 24))
                          goto LABEL_142;
                        v84 = (JSC::VM *)*((_QWORD *)a1 + 7);
                        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v82);
                        if (*((_DWORD *)v84 + 20))
                        {
                          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v84) & 1) != 0)
                            goto LABEL_142;
                        }
                        v88 = *((_QWORD *)FunctionRealm + 412);
                        if (v88)
                        {
                          v89 = *(_DWORD *)(v88 - 8);
                          v90 = ((unint64_t)&WebCore::JSCSSColor::s_info
                               + ~((_QWORD)&WebCore::JSCSSColor::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSColor::s_info
                                                                                  + ~((_QWORD)&WebCore::JSCSSColor::s_info << 32)) >> 22);
                          v91 = 9 * ((v90 + ~(v90 << 13)) ^ ((v90 + ~(v90 << 13)) >> 8));
                          v92 = (v91 ^ (v91 >> 15)) + ~((v91 ^ (v91 >> 15)) << 27);
                          v93 = v89 & ((v92 >> 31) ^ v92);
                          v94 = *(char ***)(v88 + 16 * v93);
                          if (v94 == &WebCore::JSCSSColor::s_info)
                          {
LABEL_138:
                            v85 = *(JSC::JSObject **)(v88 + 16 * v93 + 8);
                            if (v85)
                            {
LABEL_140:
                              SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v83, v85, v86);
                              if (!*((_DWORD *)v84 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v84) & 1) == 0)
                                JSC::JSObject::setStructure((JSCell *)SlowCase, v84, SubclassStructure);
LABEL_142:
                              if (*((_DWORD *)v116 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v116) & 1) != 0)
                                SlowCase = 0;
                              v103 = v134;
                              if (v134 == -1)
                                goto LABEL_145;
                              goto LABEL_144;
                            }
                          }
                          else
                          {
                            v95 = 1;
                            while (v94)
                            {
                              v93 = ((_DWORD)v93 + v95) & v89;
                              v94 = *(char ***)(v88 + 16 * v93);
                              ++v95;
                              if (v94 == &WebCore::JSCSSColor::s_info)
                                goto LABEL_138;
                            }
                          }
                        }
                        v96 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v84, FunctionRealm, v85);
                        v97 = WebCore::JSCSSColorPrototype::createStructure((uint64_t *)v84, (uint64_t)FunctionRealm, v96);
                        *(_DWORD *)(v97 + 16) |= 0x80000u;
                        v100 = (JSC::JSCell *)WebCore::JSCSSColorPrototype::create(v84, v97, v98, v99);
                        v101 = WebCore::JSCSSColor::createStructure((uint64_t *)v84, (uint64_t)FunctionRealm, v100);
                        v85 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v101, (uint64_t)&WebCore::JSCSSColor::s_info);
                        goto LABEL_140;
                      }
                    }
                    else
                    {
                      if ((SlowCase & 8) != 0)
                        v76 = (SlowCase - 112) | 1;
                      else
                        v76 = SlowCase & 0xFFFFFFFFFFFFC000;
                      if ((v76 & 1) != 0)
                        v77 = v76 + 47;
                      else
                        v77 = *(_QWORD *)v76 + 32;
                      v78 = *(_QWORD **)(v77 + 16);
                      if (!v78)
                        v78 = (_QWORD *)JSC::WeakSet::findAllocator();
                      *(_QWORD *)(v77 + 16) = *v78;
                      *v78 = SlowCase;
                      v78[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
                      v78[2] = v75;
                      v79 = *v115;
                      *v115 = (uint64_t)v78;
                      if (!v79)
                        goto LABEL_129;
                    }
                    *(_QWORD *)(v79 + 8) = 3;
                    goto LABEL_129;
                  }
                  v114 = *(_QWORD *)(SlowCase + 8) ^ v62[6];
                  v62[4] = SlowCase + HIDWORD(v114);
                  v62[5] = SlowCase + (int)v114;
                }
                v62[3] = SlowCase + 32;
                goto LABEL_116;
              }
            }
            else
            {
              __clrex();
              v59 = v118;
            }
            WTF::Lock::unlockSlow((WTF::Lock *)v63);
            goto LABEL_114;
          }
          ((void (*)(WTF **, char *, uint64_t *))off_1E322F618[v137])(&v128, v121, &v136);
          v122 = v32;
          v123 = 0;
          v124 = 0;
          if (!v134)
            goto LABEL_65;
        }
        std::__throw_bad_variant_access[abi:sn180100]();
        goto LABEL_64;
      }
      ++*(_DWORD *)(v30 + 8);
      v132 = v30;
      v133 = 1;
    }
    v134 = 0;
    goto LABEL_60;
  }
  SlowCase = 0;
LABEL_147:
  if (v6 != -1)
    ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322F668[v6])(&v131, &v136);
  return SlowCase;
}

uint64_t WebCore::JSCSSColor::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSColorPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSColorValue::prototype(WebCore::JSCSSColorValue *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSColorValue::s_info + ~((_QWORD)&WebCore::JSCSSColorValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSColorValue::s_info + ~((_QWORD)&WebCore::JSCSSColorValue::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSColorValue::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSColorValue::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    v14 = (JSC::JSCell *)WebCore::JSCSSStyleValue::prototype(this, a2, a3);
    Structure = WebCore::JSCSSColorValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSCSSColorValuePrototype::create(this, a2, Structure, v16);
    v18 = WebCore::JSCSSColorValue::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSCSSColorValue::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

unint64_t WebCore::JSCSSColorPrototype::create(WebCore::JSCSSColorPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCSSColor::s_info, &WebCore::JSCSSColorPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSColor>,(WebCore::DOMConstructorID)383>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3064);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSCSSColor>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSColor::s_info + ~((_QWORD)&WebCore::JSCSSColor::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSColor::s_info + ~((_QWORD)&WebCore::JSCSSColor::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSColor::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSColor::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype((WebCore::JSCSSColorValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSColorPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSCSSColorPrototype::create((WebCore::JSCSSColorPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSCSSColor::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSCSSColor::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3064) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSColorConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSColorPrototype::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSColor>,(WebCore::DOMConstructorID)383>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSColor_colorSpace()
{
  return 2;
}

BOOL WebCore::setJSCSSColor_colorSpace(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  int v8;
  _BOOL8 v9;
  uint64_t v10;
  _BYTE v12[8];
  int v13;
  char v14;
  _BYTE v15[8];
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSCSSColor::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSCSSColor::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert((uint64_t)v15, a1, a3);
  v8 = v18;
  v9 = v18 == 0;
  if (!v18)
  {
    v12[0] = 0;
    v13 = -1;
    v10 = v17;
    if (v17 == -1)
    {
      v8 = 0;
    }
    else
    {
      ((void (*)(char *, _BYTE *, uint64_t *))off_1E322F618[v17])(&v14, v12, &v16);
      v13 = v10;
      ((void (*)(char *, _BYTE *))off_1E322F608[v10])(&v14, v12);
      v8 = v18;
    }
  }
  if (v8 != -1)
    ((void (*)(_BYTE *, uint64_t *))off_1E322F668[v8])(v12, &v16);
  return v9;
}

uint64_t WebCore::jsCSSColor_alpha(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  _BYTE v8[40];
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(uint64_t **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (uint64_t *)(v2 + 40);
  v5 = *(unsigned int *)(v2 + 48);
  if ((_DWORD)v5 == -1)
    v5 = -1;
  v11 = v5;
  LOBYTE(v9) = 0;
  v10 = 0;
  v12[0] = &v11;
  v12[1] = &v9;
  v12[2] = a1;
  v12[3] = v3;
  v12[4] = v4;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENSS_IlLl1EEEEEET_SV_(v12, (uint64_t)v8);
  if (v10)
    return v9;
  v7 = std::__throw_bad_optional_access[abi:sn180100]();
  return WebCore::setJSCSSColor_alpha(v7);
}

BOOL WebCore::setJSCSSColor_alpha(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSCSSColor::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSCSSColor::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_25;
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSCSSNumericValue::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSCSSNumericValue::s_info && v11 != 0);
  }
  if (v10 && (v14 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v14 + 8);
    v23 = v14;
    v15 = 1;
    v24 = 1;
    v25 = 0;
  }
  else
  {
LABEL_25:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, a3, (uint64_t)&v20);
    v16 = v21;
    if (v21)
    {
      v16 = 1;
    }
    else
    {
      v23 = v20;
      v24 = 0;
    }
    v25 = v16;
    v15 = 0;
    if (v16)
    {
      v18 = 0;
      v17 = 1;
LABEL_32:
      ((void (*)(uint64_t *, uint64_t *))off_1E322F648[v17])(&v20, &v23);
      return v18;
    }
  }
  LOBYTE(v20) = 0;
  v21 = -1;
  ((void (*)(uint64_t *, uint64_t *, uint64_t *))off_1E322F638[v15])(&v22, &v20, &v23);
  v21 = v15;
  v22 = v8 + 40;
  ((void (*)(uint64_t *))off_1E3230860[v15])(&v22);
  if (v21 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_1E322F628[v21])(&v22, &v20);
  v17 = v25;
  v18 = 1;
  if (v25 != -1)
    goto LABEL_32;
  return v18;
}

uint64_t WebCore::JSCSSColorValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSColorValuePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSColorValuePrototype::create(WebCore::JSCSSColorValuePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCSSColorValue::s_info, &WebCore::JSCSSColorValuePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  WTF::StringImpl *v25;
  int v26;
  WTF::StringImpl *v27;
  unint64_t v29;
  unint64_t v30;
  WTF::StringImpl *v31;
  unint64_t v32;
  int v33;
  int v34;
  uint64_t v35;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3072);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(a1, a2);
  v7 = v6;
  LODWORD(v31) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v29 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v29);
    v5[2] = SlowCase + (int)v29;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v31, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v30 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v30);
    v10[2848] = v2 + (int)v30;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v31 = 0;
  v32 = v2;
  v33 = -1;
  v34 = 0x1000000;
  v35 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v31);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v31);
  v14 = v31;
  v31 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v31 = 0;
  v32 = v2;
  v33 = -1;
  v34 = 0x1000000;
  v35 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v31);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSCSSColorValue::prototype((WebCore::JSCSSColorValue *)a1, (JSC::VM *)a2, v17);
  v31 = 0;
  v32 = v2;
  v33 = -1;
  v34 = 0x1000000;
  v35 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v31);
  if ((*(_BYTE *)((16 * *(unsigned int *)v2) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v2, (JSC::VM *)a1);
  WTF::AtomStringImpl::addLiteral();
  v19 = v31;
  JSC::reifyStaticProperty((JSC::VM *)a1, (uint64_t)&WebCore::JSCSSColorValue::s_info, (unint64_t *)&v31, (uint64_t)&WebCore::JSCSSColorValueConstructorTableValues, (unsigned __int8 *)v2);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v22 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  if ((_DWORD)v21)
  {
    v23 = 16 * v21;
    if ((char **)v23 != &WebCore::JSDOMWindowBase::s_info)
    {
      do
      {
        v23 = *(_QWORD *)(v23 + 16);
        v22 = v23 != 0;
      }
      while ((char **)v23 != &WebCore::JSDOMWindowBase::s_info && v23 != 0);
    }
  }
  if (!v22)
  {
    WTF::AtomStringImpl::addLiteral();
    v25 = v31;
    v26 = *(_DWORD *)(a1 + 93124);
    *(_DWORD *)(a1 + 93124) = 1;
    LODWORD(v31) = -1;
    WORD2(v31) = 1;
    JSC::JSObject::deleteProperty();
    *(_DWORD *)(a1 + 93124) = v26;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v27);
      else
        *(_DWORD *)v25 -= 2;
    }
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3072) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSColorValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSColorValuePrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSColorValue_colorSpace()
{
  return 2;
}

uint64_t WebCore::JSCSSConditionRule::prototype(WebCore::JSCSSConditionRule *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSConditionRule::s_info + ~((_QWORD)&WebCore::JSCSSConditionRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSConditionRule::s_info + ~((_QWORD)&WebCore::JSCSSConditionRule::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSConditionRule::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSConditionRule::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    v14 = (JSC::JSCell *)WebCore::JSCSSGroupingRule::prototype(this, a2, a3);
    Structure = WebCore::JSCSSConditionRulePrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSCSSConditionRulePrototype::create(this, a2, Structure, v16);
    v18 = WebCore::JSCSSConditionRule::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSCSSConditionRule::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

uint64_t WebCore::JSCSSConditionRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSConditionRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSGroupingRule::prototype(WebCore::JSCSSGroupingRule *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSGroupingRule::s_info + ~((_QWORD)&WebCore::JSCSSGroupingRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSGroupingRule::s_info + ~((_QWORD)&WebCore::JSCSSGroupingRule::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSGroupingRule::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSGroupingRule::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    v14 = (JSC::JSCell *)WebCore::JSCSSRule::prototype(this, a2, a3);
    Structure = WebCore::JSCSSGroupingRulePrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSCSSGroupingRulePrototype::create(this, a2, Structure, v16);
    v18 = WebCore::JSCSSGroupingRule::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSCSSGroupingRule::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

unint64_t WebCore::JSCSSConditionRulePrototype::create(WebCore::JSCSSConditionRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSConditionRule::s_info, (uint64_t)&WebCore::JSCSSConditionRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSConditionRule>,(WebCore::DOMConstructorID)331>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2648);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSGroupingRule>,(WebCore::DOMConstructorID)337>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSConditionRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSCSSConditionRule::prototype((WebCore::JSCSSConditionRule *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2648) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSConditionRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSConditionRulePrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSConditionRule>,(WebCore::DOMConstructorID)331>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSConditionRule_conditionText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  (*(void (**)(WTF::StringImpl **__return_ptr))(**(_QWORD **)(a2 + 24) + 72))(&v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::JSCSSGroupingRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSContainerRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSConditionRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSConditionRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSConditionRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSContainerRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSContainerRulePrototype::create(WebCore::JSCSSContainerRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCSSContainerRule::s_info, &WebCore::JSCSSContainerRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSContainerRule>,(WebCore::DOMConstructorID)332>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2656);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSConditionRule>,(WebCore::DOMConstructorID)331>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSContainerRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSContainerRule::s_info + ~((_QWORD)&WebCore::JSCSSContainerRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSContainerRule::s_info + ~((_QWORD)&WebCore::JSCSSContainerRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSContainerRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSContainerRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSConditionRule::prototype((WebCore::JSCSSConditionRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSContainerRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSContainerRulePrototype::create((WebCore::JSCSSContainerRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSContainerRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSContainerRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2656) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSContainerRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSContainerRulePrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSContainerRule>,(WebCore::DOMConstructorID)332>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSContainerRule_containerName(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v13;

  WebCore::CSSContainerRule::containerName(*(WebCore::CSSContainerRule **)(a2 + 24), &v13);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = v13;
  if (!v13)
    return *v5;
  v7 = *((_DWORD *)v13 + 1);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_4:
      v8 = *(_QWORD *)(v4 + 64760);
      if (!v8 || v13 != *(WTF::StringImpl **)(v8 + 8))
        v8 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v10 = (unsigned __int8 *)*((_QWORD *)v13 + 1);
    if ((*((_BYTE *)v13 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_4;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v4 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v5;
  }
LABEL_7:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v3);
  else
    *(_DWORD *)v6 -= 2;
  return v8;
}

uint64_t WebCore::jsCSSContainerRule_containerQuery(uint64_t a1, uint64_t a2, const Condition *a3)
{
  WTF::StringImpl *v4;
  uint64_t v5;
  uint64_t *v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  WTF::StringImpl *v14;

  WebCore::CSSContainerRule::containerQuery(*(WebCore::CSSContainerRule **)(a2 + 24), a3, &v14);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = (uint64_t *)(v5 + 41968);
  v7 = v14;
  if (!v14)
    return *v6;
  v8 = *((_DWORD *)v14 + 1);
  if (v8)
  {
    if (v8 != 1)
    {
LABEL_4:
      v9 = *(_QWORD *)(v5 + 64760);
      if (!v9 || v14 != *(WTF::StringImpl **)(v9 + 8))
        v9 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v11 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
    if ((*((_BYTE *)v14 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_4;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v5 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *v6;
  }
LABEL_7:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v4);
  else
    *(_DWORD *)v7 -= 2;
  return v9;
}

uint64_t WebCore::JSCSSContainerRule::subspaceForImpl(WebCore::JSCSSContainerRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2696);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2696);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2696);
    *(_QWORD *)(v8 + 2696) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2696);
  *(_QWORD *)(v3 + 2696) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSCounterStyleRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSCounterStyleRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSCounterStyleRulePrototype::create(WebCore::JSCSSCounterStyleRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<12u>(this, (uint64_t)&WebCore::JSCSSCounterStyleRule::s_info, (uint64_t)&WebCore::JSCSSCounterStyleRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSCounterStyleRule>,(WebCore::DOMConstructorID)333>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2664);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSCounterStyleRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSCounterStyleRule::s_info
         + ~((_QWORD)&WebCore::JSCSSCounterStyleRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSCounterStyleRule::s_info
                                                                       + ~((_QWORD)&WebCore::JSCSSCounterStyleRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSCounterStyleRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSCounterStyleRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSRule::prototype((WebCore::JSCSSRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSCounterStyleRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSCounterStyleRulePrototype::create((WebCore::JSCSSCounterStyleRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSCounterStyleRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSCounterStyleRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2664) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSCounterStyleRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSCounterStyleRulePrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSCounterStyleRule>,(WebCore::DOMConstructorID)333>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSCounterStyleRule_name(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 3) + 24) + 8);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

BOOL WebCore::setJSCSSCounterStyleRule_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CSSCounterStyleRule *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSCounterStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSCounterStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CSSCounterStyleRule **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CSSCounterStyleRule::setName(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v14])(&v22, &v19);
  return v15;
}

uint64_t WebCore::jsCSSCounterStyleRule_system(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::CSSCounterStyleDescriptors::systemCSSText(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 24) + 16, &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSCSSCounterStyleRule_system(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CSSCounterStyleRule *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSCounterStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSCounterStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CSSCounterStyleRule **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CSSCounterStyleRule::setSystem(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v14])(&v22, &v19);
  return v15;
}

uint64_t WebCore::jsCSSCounterStyleRule_symbols(uint64_t a1, uint64_t a2, WTF::StringBuilder *a3)
{
  uint64_t v4;
  WTF::StringImpl *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  WebCore::CSSCounterStyleDescriptors::symbolsCSSText(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 24) + 16, a3, &v12);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = v12;
  if (!v12 || (v6 = *((_DWORD *)v12 + 1)) == 0)
  {
    v7 = *(_QWORD *)(v4 + 41968);
LABEL_7:
    v12 = 0;
    if (!v5)
      return v7;
    goto LABEL_16;
  }
  if (v6 != 1)
    goto LABEL_4;
  v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
  if ((*((_BYTE *)v12 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_14:
    v7 = *(_QWORD *)(v4 + 8 * v9 + 42216);
    goto LABEL_15;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_14;
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v5 = v12;
    goto LABEL_7;
  }
LABEL_15:
  v12 = 0;
LABEL_16:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy(v5, v5);
  else
    *(_DWORD *)v5 -= 2;
  return v7;
}

BOOL WebCore::setJSCSSCounterStyleRule_symbols(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CSSCounterStyleRule *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSCounterStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSCounterStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CSSCounterStyleRule **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CSSCounterStyleRule::setSymbols(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v14])(&v22, &v19);
  return v15;
}

uint64_t WebCore::jsCSSCounterStyleRule_additiveSymbols(uint64_t a1, uint64_t a2, WTF::StringBuilder *a3)
{
  uint64_t v4;
  WTF::StringImpl *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  WebCore::CSSCounterStyleDescriptors::additiveSymbolsCSSText(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 24) + 16, a3, &v12);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = v12;
  if (!v12 || (v6 = *((_DWORD *)v12 + 1)) == 0)
  {
    v7 = *(_QWORD *)(v4 + 41968);
LABEL_7:
    v12 = 0;
    if (!v5)
      return v7;
    goto LABEL_16;
  }
  if (v6 != 1)
    goto LABEL_4;
  v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
  if ((*((_BYTE *)v12 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_14:
    v7 = *(_QWORD *)(v4 + 8 * v9 + 42216);
    goto LABEL_15;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_14;
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v5 = v12;
    goto LABEL_7;
  }
LABEL_15:
  v12 = 0;
LABEL_16:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy(v5, v5);
  else
    *(_DWORD *)v5 -= 2;
  return v7;
}

BOOL WebCore::setJSCSSCounterStyleRule_additiveSymbols(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CSSCounterStyleRule *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSCounterStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSCounterStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CSSCounterStyleRule **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CSSCounterStyleRule::setAdditiveSymbols(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v14])(&v22, &v19);
  return v15;
}

uint64_t WebCore::jsCSSCounterStyleRule_negative(uint64_t a1, uint64_t a2, WTF::StringBuilder *a3)
{
  uint64_t v4;
  WTF::StringImpl *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  WebCore::CSSCounterStyleDescriptors::negativeCSSText(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 24) + 16, a3, &v12);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = v12;
  if (!v12 || (v6 = *((_DWORD *)v12 + 1)) == 0)
  {
    v7 = *(_QWORD *)(v4 + 41968);
LABEL_7:
    v12 = 0;
    if (!v5)
      return v7;
    goto LABEL_16;
  }
  if (v6 != 1)
    goto LABEL_4;
  v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
  if ((*((_BYTE *)v12 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_14:
    v7 = *(_QWORD *)(v4 + 8 * v9 + 42216);
    goto LABEL_15;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_14;
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v5 = v12;
    goto LABEL_7;
  }
LABEL_15:
  v12 = 0;
LABEL_16:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy(v5, v5);
  else
    *(_DWORD *)v5 -= 2;
  return v7;
}

BOOL WebCore::setJSCSSCounterStyleRule_negative(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CSSCounterStyleRule *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSCounterStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSCounterStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CSSCounterStyleRule **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CSSCounterStyleRule::setNegative(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v14])(&v22, &v19);
  return v15;
}

uint64_t WebCore::jsCSSCounterStyleRule_prefix(uint64_t a1, WTF::StringImpl *a2, WTF::StringBuilder *a3)
{
  uint64_t v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  WTF::StringImpl *v14;

  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 24);
  if ((*(_WORD *)(v4 + 196) & 4) != 0)
  {
    WebCore::CSSCounterStyleDescriptors::Symbol::cssText((WebCore::CSSCounterStyleDescriptors::Symbol *)(v4 + 64), a3, &v14);
    v5 = v14;
  }
  else
  {
    v5 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v5 += 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = (uint64_t *)(v6 + 41968);
  if (!v5)
    return *v7;
  v8 = *((_DWORD *)v5 + 1);
  if (v8)
  {
    if (v8 != 1)
    {
LABEL_8:
      v9 = *(_QWORD *)(v6 + 64760);
      if (!v9 || v5 != *(WTF::StringImpl **)(v9 + 8))
        v9 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_11;
    }
    v11 = (unsigned __int8 *)*((_QWORD *)v5 + 1);
    if ((*((_BYTE *)v5 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_8;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v6 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *v7;
  }
LABEL_11:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy(v5, a2);
  else
    *(_DWORD *)v5 -= 2;
  return v9;
}

BOOL WebCore::setJSCSSCounterStyleRule_prefix(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CSSCounterStyleRule *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSCounterStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSCounterStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CSSCounterStyleRule **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CSSCounterStyleRule::setPrefix(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v14])(&v22, &v19);
  return v15;
}

uint64_t WebCore::jsCSSCounterStyleRule_suffix(uint64_t a1, WTF::StringImpl *a2, WTF::StringBuilder *a3)
{
  uint64_t v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  WTF::StringImpl *v14;

  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 24);
  if ((*(_WORD *)(v4 + 196) & 8) != 0)
  {
    WebCore::CSSCounterStyleDescriptors::Symbol::cssText((WebCore::CSSCounterStyleDescriptors::Symbol *)(v4 + 80), a3, &v14);
    v5 = v14;
  }
  else
  {
    v5 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v5 += 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = (uint64_t *)(v6 + 41968);
  if (!v5)
    return *v7;
  v8 = *((_DWORD *)v5 + 1);
  if (v8)
  {
    if (v8 != 1)
    {
LABEL_8:
      v9 = *(_QWORD *)(v6 + 64760);
      if (!v9 || v5 != *(WTF::StringImpl **)(v9 + 8))
        v9 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_11;
    }
    v11 = (unsigned __int8 *)*((_QWORD *)v5 + 1);
    if ((*((_BYTE *)v5 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_8;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v6 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *v7;
  }
LABEL_11:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy(v5, a2);
  else
    *(_DWORD *)v5 -= 2;
  return v9;
}

BOOL WebCore::setJSCSSCounterStyleRule_suffix(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CSSCounterStyleRule *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSCounterStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSCounterStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CSSCounterStyleRule **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CSSCounterStyleRule::setSuffix(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v14])(&v22, &v19);
  return v15;
}

uint64_t WebCore::jsCSSCounterStyleRule_range(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::CSSCounterStyleDescriptors::rangesCSSText(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 24) + 16, &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSCSSCounterStyleRule_range(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CSSCounterStyleRule *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSCounterStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSCounterStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CSSCounterStyleRule **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CSSCounterStyleRule::setRange(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v14])(&v22, &v19);
  return v15;
}

uint64_t WebCore::jsCSSCounterStyleRule_pad(uint64_t a1, uint64_t a2, WTF::StringBuilder *a3)
{
  uint64_t v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  WTF::StringImpl *v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_WORD *)(v4 + 196) & 0x20) != 0)
  {
    WebCore::CSSCounterStyleDescriptors::Pad::cssText((WebCore::CSSCounterStyleDescriptors::Pad *)(v4 + 112), a3, &v13);
    v5 = v13;
  }
  else
  {
    v5 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v5 += 2;
    v13 = v5;
  }
  v6 = *(_QWORD *)(a1 + 56);
  if (!v5 || (v7 = *((_DWORD *)v5 + 1)) == 0)
  {
    v8 = *(_QWORD *)(v6 + 41968);
LABEL_12:
    v13 = 0;
    if (!v5)
      return v8;
    goto LABEL_21;
  }
  if (v7 != 1)
    goto LABEL_9;
  v9 = (unsigned __int8 *)*((_QWORD *)v5 + 1);
  if ((*((_BYTE *)v5 + 16) & 4) != 0)
  {
    v10 = *v9;
LABEL_19:
    v8 = *(_QWORD *)(v6 + 8 * v10 + 42216);
    goto LABEL_20;
  }
  v11 = *(unsigned __int16 *)v9;
  if (v11 <= 0xFF)
  {
    v10 = v11;
    goto LABEL_19;
  }
LABEL_9:
  v8 = *(_QWORD *)(v6 + 64760);
  if (!v8 || v5 != *(WTF::StringImpl **)(v8 + 8))
  {
    v8 = JSC::jsStringWithCacheSlowCase();
    v5 = v13;
    goto LABEL_12;
  }
LABEL_20:
  v13 = 0;
LABEL_21:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy(v5, v5);
  else
    *(_DWORD *)v5 -= 2;
  return v8;
}

BOOL WebCore::setJSCSSCounterStyleRule_pad(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CSSCounterStyleRule *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSCounterStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSCounterStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CSSCounterStyleRule **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CSSCounterStyleRule::setPad(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v14])(&v22, &v19);
  return v15;
}

uint64_t WebCore::jsCSSCounterStyleRule_speakAs(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
}

BOOL WebCore::setJSCSSCounterStyleRule_speakAs(JSC::JSGlobalObject *a1, WTF::StringImpl *a2, unint64_t this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  uint64_t v12;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v15;
  int v16;
  WTF::StringImpl *v17;
  unint64_t v18;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSCounterStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSCounterStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v18 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v9 = *(WTF::StringImpl **)(this + 8);
    if ((v9 & 1) != 0)
    {
      v9 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
      if (!v9)
        goto LABEL_17;
    }
    else if (!v9)
    {
LABEL_17:
      v17 = v9;
      goto LABEL_18;
    }
    *(_DWORD *)v9 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v18, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v10 = v17;
    if (hasExceptionsAfterHandlingTraps)
    {
      v16 = 1;
      v17 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, a2);
        else
          *(_DWORD *)v10 -= 2;
      }
      v12 = 0;
      v11 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v10 = v17;
  }
  v16 = 0;
  v15 = 0;
  if (!v10)
    goto LABEL_29;
  if (*(_DWORD *)v10 == 2)
  {
    WTF::StringImpl::destroy(v10, a2);
LABEL_29:
    v11 = 0;
    goto LABEL_23;
  }
  v11 = 0;
  *(_DWORD *)v10 -= 2;
LABEL_23:
  v12 = 1;
LABEL_24:
  ((void (*)(unint64_t *, uint64_t *))off_1E322E100[v11])(&v18, &v15);
  return v12;
}

uint64_t WebCore::jsCSSCounterStyleRule_fallback(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::CSSCounterStyleDescriptors::fallbackCSSText(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 24) + 16, &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSCSSCounterStyleRule_fallback(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CSSCounterStyleRule *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSCounterStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSCounterStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CSSCounterStyleRule **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CSSCounterStyleRule::setFallback(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v14])(&v22, &v19);
  return v15;
}

uint64_t WebCore::JSCSSCounterStyleRule::subspaceForImpl(WebCore::JSCSSCounterStyleRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2704);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2704);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2704);
    *(_QWORD *)(v8 + 2704) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2704);
  *(_QWORD *)(v3 + 2704) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSFontFaceRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSFontFaceRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSFontFaceRulePrototype::create(WebCore::JSCSSFontFaceRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSFontFaceRule::s_info, (uint64_t)&WebCore::JSCSSFontFaceRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSFontFaceRule>,(WebCore::DOMConstructorID)334>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2672);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSFontFaceRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSFontFaceRule::s_info + ~((_QWORD)&WebCore::JSCSSFontFaceRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSFontFaceRule::s_info + ~((_QWORD)&WebCore::JSCSSFontFaceRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSFontFaceRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSFontFaceRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSRule::prototype((WebCore::JSCSSRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSFontFaceRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSFontFaceRulePrototype::create((WebCore::JSCSSFontFaceRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSFontFaceRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSFontFaceRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2672) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSFontFaceRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSFontFaceRulePrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSFontFaceRule>,(WebCore::DOMConstructorID)334>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSFontFaceRule_style(WebCore *a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::JSDOMGlobalObject *v4;
  WebCore::CSSStyleDeclaration *v5;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WebCore::JSDOMGlobalObject *)WebCore::CSSFontFaceRule::style(*(WebCore::CSSFontFaceRule **)(a2 + 24));
  return WebCore::toJS(a1, v3, v4, v5);
}

uint64_t WebCore::JSCSSFontFaceRule::subspaceForImpl(WebCore::JSCSSFontFaceRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2712);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2712);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2712);
    *(_QWORD *)(v8 + 2712) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2712);
  *(_QWORD *)(v3 + 2712) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::CSSFontFaceRule,WebCore::CSSFontFaceRule>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSRule *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *Allocator;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSCSSFontFaceRule::s_info + ~((_QWORD)&WebCore::JSCSSFontFaceRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSFontFaceRule::s_info + ~((_QWORD)&WebCore::JSCSSFontFaceRule::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSCSSFontFaceRule::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSCSSFontFaceRule::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSCSSRule *)*((_QWORD *)a1 + 7);
  v16 = (JSC::JSCell *)WebCore::JSCSSRule::prototype(v15, a1, a3);
  Structure = WebCore::JSCSSFontFaceRulePrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSCSSFontFaceRulePrototype::create(v15, a1, Structure, v18);
  v20 = WebCore::JSCSSFontFaceRule::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSCSSFontFaceRule::s_info);
LABEL_8:
  v21 = WebCore::JSCSSFontFaceRule::create(v14, a1, a2);
  v22 = v21;
  v23 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSRule *)::owner = (uint64_t)&off_1E324B1A0;
  }
  v24 = (uint64_t *)(v23 + 32);
  v31 = v5;
  if (v21)
  {
    v27 = v23;
    if ((v21 & 8) != 0)
      v28 = (v21 - 112) | 1;
    else
      v28 = v21 & 0xFFFFFFFFFFFFC000;
    if ((v28 & 1) != 0)
      v29 = v28 + 47;
    else
      v29 = *(_QWORD *)v28 + 32;
    Allocator = *(_QWORD **)(v29 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v29 + 16) = *Allocator;
    *Allocator = v22;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSRule *)::owner;
    Allocator[2] = v27;
  }
  else
  {
    Allocator = 0;
  }
  v30 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v24, &v31, (uint64_t *)&v30);
  if (v30)
    v30[1] = 3;
  return v22;
}

uint64_t WebCore::JSCSSFontFeatureValuesRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSFontFeatureValuesRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSFontFeatureValuesRulePrototype::create(WebCore::JSCSSFontFeatureValuesRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSFontFeatureValuesRule::s_info, (uint64_t)&WebCore::JSCSSFontFeatureValuesRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSFontFeatureValuesRule>,(WebCore::DOMConstructorID)335>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2680);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSFontFeatureValuesRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSFontFeatureValuesRule::s_info
         + ~((_QWORD)&WebCore::JSCSSFontFeatureValuesRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSFontFeatureValuesRule::s_info
                                                                            + ~((_QWORD)&WebCore::JSCSSFontFeatureValuesRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSFontFeatureValuesRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSFontFeatureValuesRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSRule::prototype((WebCore::JSCSSRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSFontFeatureValuesRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSFontFeatureValuesRulePrototype::create((WebCore::JSCSSFontFeatureValuesRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSFontFeatureValuesRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSFontFeatureValuesRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2680) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSFontFeatureValuesRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSFontFeatureValuesRulePrototype::s_info != (char **)(16
                                                                        * *(unsigned int *)(16
                                                                                          * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                          + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSFontFeatureValuesRule>,(WebCore::DOMConstructorID)335>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSFontFeatureValuesRule_fontFamily(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl **v4;
  uint64_t v5;
  WTF::StringImpl **v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  unsigned int v17;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  int v22;
  char v23;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24);
  v4 = *(WTF::StringImpl ***)(v3 + 8);
  v5 = *(unsigned int *)(v3 + 20);
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 1;
  if ((_DWORD)v5)
  {
    WTF::StringBuilder::append(&v20, v4);
    if ((_DWORD)v5 != 1)
    {
      v6 = v4 + 1;
      v7 = 8 * v5 - 8;
      do
      {
        WTF::StringBuilder::append();
        WTF::StringBuilder::append(&v20, v6++);
        v7 -= 8;
      }
      while (v7);
    }
  }
  WTF::StringBuilder::toAtomString((WTF::AtomString *)&v20, (WTF::AtomString *)&v19);
  v9 = v21;
  v21 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v8);
    else
      *(_DWORD *)v9 -= 2;
  }
  v10 = v20;
  v20 = 0;
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
      WTF::StringImpl::destroy(v10, v8);
    else
      *(_DWORD *)v10 -= 2;
  }
  v11 = *(_QWORD *)(a1 + 56);
  v12 = v19;
  if (!v19 || (v13 = *((_DWORD *)v19 + 1)) == 0)
  {
    v14 = *(_QWORD *)(v11 + 41968);
LABEL_17:
    v19 = 0;
    if (!v12)
      return v14;
    goto LABEL_28;
  }
  if (v13 != 1)
    goto LABEL_14;
  v15 = (unsigned __int8 *)*((_QWORD *)v19 + 1);
  if ((*((_BYTE *)v19 + 16) & 4) != 0)
  {
    v16 = *v15;
LABEL_26:
    v14 = *(_QWORD *)(v11 + 8 * v16 + 42216);
    goto LABEL_27;
  }
  v17 = *(unsigned __int16 *)v15;
  if (v17 <= 0xFF)
  {
    v16 = v17;
    goto LABEL_26;
  }
LABEL_14:
  v14 = *(_QWORD *)(v11 + 64760);
  if (!v14 || v19 != *(WTF::StringImpl **)(v14 + 8))
  {
    v14 = JSC::jsStringWithCacheSlowCase();
    v12 = v19;
    goto LABEL_17;
  }
LABEL_27:
  v19 = 0;
LABEL_28:
  if (*(_DWORD *)v12 == 2)
    WTF::StringImpl::destroy(v12, v12);
  else
    *(_DWORD *)v12 -= 2;
  return v14;
}

uint64_t WebCore::JSCSSFontFeatureValuesRule::subspaceForImpl(WebCore::JSCSSFontFeatureValuesRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2720);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2720);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2720);
    *(_QWORD *)(v8 + 2720) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2720);
  *(_QWORD *)(v3 + 2720) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSFontPaletteValuesRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSFontPaletteValuesRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSFontPaletteValuesRulePrototype::create(WebCore::JSCSSFontPaletteValuesRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCSSFontPaletteValuesRule::s_info, &WebCore::JSCSSFontPaletteValuesRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSFontPaletteValuesRule>,(WebCore::DOMConstructorID)336>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2688);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSFontPaletteValuesRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSFontPaletteValuesRule::s_info
         + ~((_QWORD)&WebCore::JSCSSFontPaletteValuesRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSFontPaletteValuesRule::s_info
                                                                            + ~((_QWORD)&WebCore::JSCSSFontPaletteValuesRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSFontPaletteValuesRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSFontPaletteValuesRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSRule::prototype((WebCore::JSCSSRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSFontPaletteValuesRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSFontPaletteValuesRulePrototype::create((WebCore::JSCSSFontPaletteValuesRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSFontPaletteValuesRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSFontPaletteValuesRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2688) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSFontPaletteValuesRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSFontPaletteValuesRulePrototype::s_info != (char **)(16
                                                                        * *(unsigned int *)(16
                                                                                          * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                          + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSFontPaletteValuesRule>,(WebCore::DOMConstructorID)336>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSFontPaletteValuesRule_name(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 3) + 24) + 8);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsCSSFontPaletteValuesRule_fontFamily(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::CSSFontPaletteValuesRule::fontFamily(*(WTF::StringImpl **)(a2 + 24));
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    if (!v4)
      return v6;
    goto LABEL_15;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsCSSFontPaletteValuesRule_basePalette(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::CSSFontPaletteValuesRule::basePalette(*(_QWORD **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsCSSFontPaletteValuesRule_overrideColors(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::CSSFontPaletteValuesRule::overrideColors(*(WebCore::CSSFontPaletteValuesRule **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::JSCSSFontPaletteValuesRule::subspaceForImpl(WebCore::JSCSSFontPaletteValuesRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2728);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2728);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2728);
    *(_QWORD *)(v8 + 2728) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2728);
  *(_QWORD *)(v3 + 2728) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSGroupingRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSGroupingRulePrototype::create(WebCore::JSCSSGroupingRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSCSSGroupingRule::s_info, &WebCore::JSCSSGroupingRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSGroupingRule>,(WebCore::DOMConstructorID)337>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2696);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSGroupingRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSCSSGroupingRule::prototype((WebCore::JSCSSGroupingRule *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2696) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSGroupingRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSGroupingRulePrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSGroupingRule>,(WebCore::DOMConstructorID)337>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSGroupingRule_cssRules(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(WTF **)(v3 + 48);
  if (!v5)
  {
    v5 = (WTF *)WTF::fastMalloc((WTF *)0x10);
    *(_QWORD *)v5 = off_1E3398468;
    *((_QWORD *)v5 + 1) = v3;
    v6 = *(_QWORD *)(v3 + 48);
    *(_QWORD *)(v3 + 48) = v5;
    if (v6)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
      v5 = *(WTF **)(v3 + 48);
    }
  }
  return WebCore::toJS(a1, v4, v5);
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSCSSHSL>::construct(JSC::VM **a1, uint64_t a2)
{
  uint64_t v2;
  JSC::JSGlobalObject *v3;
  JSC::VM *v4;
  uint64_t v6;
  int v7;
  int v8;
  WTF *v9;
  int v10;
  unint64_t SlowCase;
  int v12;
  WebCore::JSDOMGlobalObject *v13;
  JSC::VM *v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  WebCore::JSCSSColorValue *v24;
  JSC::JSCell *v25;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v27;
  JSC::Structure *v28;
  JSC::JSCell *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  WTF *v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  _BYTE *v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  JSC::VM *v52;
  JSC::JSCell *v53;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v55;
  JSC::JSGlobalObject *v56;
  JSC::VM *v57;
  JSC::JSObject *v58;
  JSC::Structure *v59;
  JSC::VM *FunctionRealm;
  uint64_t v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  JSC::JSGlobalObject *v67;
  int v68;
  JSC::JSCell *v69;
  unint64_t v70;
  WebCore::JSDOMGlobalObject *v71;
  JSC::Structure *v72;
  JSC::JSCell *v73;
  uint64_t v74;
  unint64_t SubclassStructure;
  unint64_t v77;
  uint64_t v78;
  _QWORD *Allocator;
  JSValue v80;
  WTF::StringImpl *v81;
  WTF::StringImpl *v82;
  JSValue v83;
  unint64_t v84;
  JSC::VM *v85;
  JSC::InternalFunction *v86;
  char v87[8];
  int v88;
  char v89[8];
  int v90;
  _QWORD *v91;
  int v92;
  int v93[2];
  WTF::StringImpl *v94;
  int v95;
  char v96;
  WTF *v97;
  WTF::StringImpl *v98;
  char v99[8];
  uint64_t v100;
  unsigned int v101;
  int v102;
  char v103[8];
  uint64_t v104;
  unsigned int v105;
  int v106;
  char v107[8];
  uint64_t v108;
  unsigned int v109;
  int v110;
  char v111[8];
  uint64_t v112;
  unsigned int v113;
  int v114;
  uint64_t v115;

  v3 = (JSC::JSGlobalObject *)a1;
  v115 = *MEMORY[0x1E0C80C00];
  v4 = a1[7];
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 2)
  {
    v80.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)a1, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException(v4, v3, v80);
  }
  v6 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert((JSC::JSGlobalObject *)a1, *(_QWORD *)(a2 + 48), (uint64_t)v111);
  v7 = v114;
  if (!v114)
  {
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, *(_QWORD *)(a2 + 56), (uint64_t)v107);
    v8 = v110;
    if (v110)
    {
      SlowCase = 0;
LABEL_98:
      if (v8 != -1)
        ((void (*)(char *, uint64_t *))off_1E322FCA0[v8])(v103, &v108);
      v7 = v114;
      goto LABEL_101;
    }
    v9 = *(WTF **)(a2 + 64);
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, (unint64_t)v9, (uint64_t)v103);
    v10 = v106;
    if (v106)
    {
      SlowCase = 0;
LABEL_95:
      if (v10 != -1)
        ((void (*)(char *, uint64_t *))off_1E322FCA0[v10])(v99, &v104);
      v8 = v110;
      goto LABEL_98;
    }
    v86 = v3;
    if ((unint64_t)(*(int *)(a2 + 32) - 5) >= 0xFFFFFFFFFFFFFFFCLL
      || (SlowCase = *(_QWORD *)(a2 + 72), SlowCase == 10))
    {
      v100 = 0x3FF0000000000000;
      v101 = 0;
      v102 = 0;
      SlowCase = 10;
    }
    else
    {
      WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, *(_QWORD *)(a2 + 72), (uint64_t)v99);
      v12 = v102;
      if (v102)
      {
        SlowCase = 0;
LABEL_92:
        if (v12 != -1)
          ((void (*)(int *, uint64_t *))off_1E322FCA0[v12])(v93, &v100);
        v10 = v106;
        goto LABEL_95;
      }
    }
    if (!v114)
    {
      LOBYTE(v97) = 0;
      LODWORD(v98) = -1;
      v2 = v113;
      v3 = (JSC::JSGlobalObject *)off_1E322FC70;
      if (v113 != -1)
      {
        ((void (*)(int *, WTF **, uint64_t *))off_1E322FC70[v113])(v93, &v97, &v112);
        LODWORD(v98) = v2;
      }
      if (!v110)
      {
        LOBYTE(v91) = 0;
        v92 = -1;
        v2 = v109;
        if (v109 != -1)
        {
          ((void (*)(int *, _QWORD **, uint64_t *))off_1E322FC70[v109])(v93, &v91, &v108);
          v92 = v2;
        }
        if (!v106)
        {
          v89[0] = 0;
          v90 = -1;
          v2 = v105;
          if (v105 != -1)
          {
            ((void (*)(int *, char *, uint64_t *))off_1E322FC70[v105])(v93, v89, &v104);
            v90 = v2;
          }
          if (!v102)
          {
            v87[0] = 0;
            v88 = -1;
            v2 = v101;
            if (v101 != -1)
            {
              ((void (*)(int *, char *, uint64_t *))off_1E322FC70[v101])(v93, v87, &v100);
              v88 = v2;
            }
            WebCore::CSSHSL::create((uint64_t)&v97, (uint64_t)&v91, (uint64_t)v89, (uint64_t)v87, (uint64_t)v93);
            if (v88 != -1)
              ((void (*)(char *, char *))off_1E322FC50[v88])(&v96, v87);
            if (v90 != -1)
              ((void (*)(char *, char *))off_1E322FC50[v90])(v87, v89);
            if (v92 != -1)
              ((void (*)(char *, _QWORD **))off_1E322FC50[v92])(v89, &v91);
            if ((_DWORD)v98 != -1)
              ((void (*)(_QWORD **, WTF **))off_1E322FC50[v98])(&v91, &v97);
            if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
              goto LABEL_134;
            v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSHSL::s_info;
            if (!v95)
            {
              v85 = v4;
              v14 = *(JSC::VM **)(v6 + 40);
              v9 = *(WTF **)v93;
              *(_QWORD *)v93 = 0;
              if (*(uint64_t (***)())v9 != &off_1E339F530)
              {
                __break(0xC471u);
                JUMPOUT(0x19489F1C0);
              }
              v15 = *((_QWORD *)v14 + 412);
              if (v15)
              {
                v16 = *(_DWORD *)(v15 - 8);
                v17 = ((unint64_t)&WebCore::JSCSSHSL::s_info + ~((_QWORD)&WebCore::JSCSSHSL::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSHSL::s_info + ~((_QWORD)&WebCore::JSCSSHSL::s_info << 32)) >> 22);
                v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
                v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
                v20 = v16 & ((v19 >> 31) ^ v19);
                v21 = *(char ***)(v15 + 16 * v20);
                if (v21 == &WebCore::JSCSSHSL::s_info)
                {
LABEL_37:
                  v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
                  if (v23)
                    goto LABEL_39;
                }
                else
                {
                  v22 = 1;
                  while (v21)
                  {
                    v20 = ((_DWORD)v20 + v22) & v16;
                    v21 = *(char ***)(v15 + 16 * v20);
                    ++v22;
                    if (v21 == &WebCore::JSCSSHSL::s_info)
                      goto LABEL_37;
                  }
                }
              }
              v24 = (WebCore::JSCSSColorValue *)*((_QWORD *)v14 + 7);
              v25 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v24, v14, v13);
              Structure = WebCore::JSCSSHSLPrototype::createStructure((uint64_t *)v24, (uint64_t)v14, v25);
              *(_DWORD *)(Structure + 16) |= 0x80000u;
              v29 = (JSC::JSCell *)WebCore::JSCSSHSLPrototype::create(v24, Structure, v27, v28);
              v30 = WebCore::JSCSSHSL::createStructure((uint64_t *)v24, (uint64_t)v14, v29);
              v23 = WebCore::cacheDOMStructure((JSCell *)v14, v30, (uint64_t)&WebCore::JSCSSHSL::s_info);
LABEL_39:
              v31 = *((_QWORD *)v14 + 7);
              v32 = *(_QWORD *)(v31 + 41456);
              v33 = *(_QWORD *)(v32 + 23536);
              v34 = *(_QWORD **)(v33 + 3144);
              if (v34)
                goto LABEL_59;
              v35 = *(_QWORD *)(v32 + 22648);
              if (__ldaxr((unsigned __int8 *)v35))
              {
                __clrex();
              }
              else if (!__stxr(1u, (unsigned __int8 *)v35))
              {
                goto LABEL_44;
              }
              MEMORY[0x19AEA534C](v35);
LABEL_44:
              v37 = *(_QWORD *)(v35 + 2824);
              if (!*(_QWORD *)(v37 + 3144))
              {
                v38 = WTF::fastMalloc((WTF *)0xF8);
                WTF::CString::CString((WTF::CString *)&v97, "IsoSpace T");
                v91 = 0;
                MEMORY[0x19AEA3204](v38, &v97, v31 + 192, v31 + 1872, 32, 8, &v91);
                v40 = (uint64_t)v91;
                v91 = 0;
                if (v40)
                  (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
                v41 = v97;
                v97 = 0;
                if (v41)
                {
                  if (*(_DWORD *)v41 == 1)
                    WTF::fastFree(v41, v39);
                  else
                    --*(_DWORD *)v41;
                }
                v42 = *(_QWORD *)(v37 + 3144);
                *(_QWORD *)(v37 + 3144) = v38;
                if (v42)
                  (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
              }
              v34 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
              JSC::GCClient::IsoSubspace::IsoSubspace();
              v43 = *(_QWORD *)(v33 + 3144);
              *(_QWORD *)(v33 + 3144) = v34;
              if (v43)
              {
                v44 = (WTF *)MEMORY[0x19AEA3528]();
                WTF::fastFree(v44, v45);
              }
              v46 = __ldxr((unsigned __int8 *)v35);
              if (v46 == 1)
              {
                if (!__stlxr(0, (unsigned __int8 *)v35))
                {
LABEL_59:
                  SlowCase = v34[3];
                  if (SlowCase >= v34[4])
                  {
                    SlowCase = v34[5];
                    if ((SlowCase & 1) != 0)
                    {
                      JSC::sanitizeStackForVM();
                      SlowCase = JSC::LocalAllocator::allocateSlowCase();
                    }
                    else
                    {
                      v84 = *(_QWORD *)(SlowCase + 8) ^ v34[6];
                      v34[4] = SlowCase + HIDWORD(v84);
                      v34[5] = SlowCase + (int)v84;
                      v34[3] = SlowCase + 32;
                    }
                  }
                  else
                  {
                    v34[3] = SlowCase + 32;
                  }
                  *(_DWORD *)SlowCase = 0;
                  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
                  *(_QWORD *)(SlowCase + 24) = v9;
                  v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSHSL::s_info;
                  if (*(_BYTE *)(v31 + 755))
                    __dmb(0xAu);
                  v2 = *((_QWORD *)v14 + 415);
                  v47 = &unk_1EE2DD000;
                    goto LABEL_64;
                  goto LABEL_144;
                }
              }
              else
              {
                __clrex();
              }
              WTF::Lock::unlockSlow((WTF::Lock *)v35);
              goto LABEL_59;
            }
            if (v95 == 1)
            {
              v81 = (WTF::StringImpl *)LOBYTE(v93[0]);
              LOBYTE(v97) = v93[0];
              v82 = v94;
              v94 = 0;
              v98 = v82;
              if (!*((_QWORD *)v4 + 2))
              {
                v83.super.isa = (Class)WebCore::createDOMException(v86, (JSC::JSGlobalObject *)LOBYTE(v93[0]), (JSC::JSGlobalObject *)&v98);
                JSC::VM::throwException(v4, v86, v83);
                v82 = v98;
              }
              v98 = 0;
              if (v82)
              {
                if (*(_DWORD *)v82 == 2)
                  WTF::StringImpl::destroy(v82, v81);
                else
                  *(_DWORD *)v82 -= 2;
              }
              SlowCase = 0;
LABEL_74:
              if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
              {
LABEL_134:
                SlowCase = 0;
LABEL_89:
                if (v95 != -1)
                  ((void (*)(WTF **, int *))off_1E322FC90[v95])(&v97, v93);
                v12 = v102;
                goto LABEL_92;
              }
              v52 = v4;
              v53 = *(JSC::JSCell **)(a2 + 40);
              if (((unint64_t)v53 & 0xFFFE000000000002) != 0
                || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v53)) == 0
                || (v56 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
                || (v57 = (JSC::VM *)*((_QWORD *)v86 + 7),
                    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(v86, Object, v55),
                    *((_DWORD *)v57 + 20))
                && (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) != 0)
              {
LABEL_88:
                if (!*((_DWORD *)v52 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v52) & 1) == 0)
                  goto LABEL_89;
                goto LABEL_134;
              }
              v61 = *((_QWORD *)FunctionRealm + 412);
              if (v61)
              {
                v62 = *(_DWORD *)(v61 - 8);
                v63 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
                v64 = 9 * ((v63 + ~(v63 << 13)) ^ ((v63 + ~(v63 << 13)) >> 8));
                v65 = (v64 ^ (v64 >> 15)) + ~((v64 ^ (v64 >> 15)) << 27);
                v66 = v62 & ((v65 >> 31) ^ v65);
                v67 = *(JSC::JSGlobalObject **)(v61 + 16 * v66);
                if (v67 == v3)
                {
LABEL_84:
                  v58 = *(JSC::JSObject **)(v61 + 16 * v66 + 8);
                  if (v58)
                  {
LABEL_86:
                    SubclassStructure = JSC::InternalFunction::createSubclassStructure(v86, v56, v58, v59);
                    if (!*((_DWORD *)v57 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) == 0)
                      JSC::JSObject::setStructure((JSCell *)SlowCase, v57, SubclassStructure);
                    goto LABEL_88;
                  }
                }
                else
                {
                  v68 = 1;
                  while (v67)
                  {
                    v66 = ((_DWORD)v66 + v68) & v62;
                    v67 = *(JSC::JSGlobalObject **)(v61 + 16 * v66);
                    ++v68;
                    if (v67 == v3)
                      goto LABEL_84;
                  }
                }
              }
              v69 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v57, FunctionRealm, v58);
              v70 = WebCore::JSCSSHSLPrototype::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v69);
              *(_DWORD *)(v70 + 16) |= 0x80000u;
              v73 = (JSC::JSCell *)WebCore::JSCSSHSLPrototype::create(v57, v70, v71, v72);
              v74 = WebCore::JSCSSHSL::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v73);
              v58 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v74, (uint64_t)&WebCore::JSCSSHSL::s_info);
              goto LABEL_86;
            }
          }
        }
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_144:
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner = (uint64_t)&off_1E324B170;
    v47[3656] = 1;
LABEL_64:
    v4 = v85;
    if (*(_DWORD *)(v2 + 48))
    {
      v97 = v9;
      if ((SlowCase & 8) != 0)
        v77 = (SlowCase - 112) | 1;
      else
        v77 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v77 & 1) != 0)
        v78 = v77 + 47;
      else
        v78 = *(_QWORD *)v77 + 32;
      Allocator = *(_QWORD **)(v78 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v78 + 16) = *Allocator;
      *Allocator = SlowCase;
      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      Allocator[2] = v2;
      v91 = Allocator;
      JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v2 + 32), (uint64_t *)&v97, (uint64_t *)&v91);
      if (v91)
        v91[1] = 3;
      v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSHSL::s_info;
    }
    else
    {
      if ((SlowCase & 8) != 0)
        v48 = (SlowCase - 112) | 1;
      else
        v48 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v48 & 1) != 0)
        v49 = v48 + 47;
      else
        v49 = *(_QWORD *)v48 + 32;
      v50 = *(_QWORD **)(v49 + 16);
      if (!v50)
        v50 = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v49 + 16) = *v50;
      *v50 = SlowCase;
      v50[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      v50[2] = v2;
      v51 = *((_QWORD *)v9 + 2);
      *((_QWORD *)v9 + 2) = v50;
      if (v51)
        *(_QWORD *)(v51 + 8) = 3;
    }
    goto LABEL_74;
  }
  SlowCase = 0;
LABEL_101:
  if (v7 != -1)
    ((void (*)(char *, uint64_t *))off_1E322FCA0[v7])(v107, &v112);
  return SlowCase;
}

uint64_t WebCore::JSCSSHSL::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSHSLPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSHSLPrototype::create(WebCore::JSCSSHSLPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCSSHSL::s_info, &WebCore::JSCSSHSLPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHSL>,(WebCore::DOMConstructorID)385>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3080);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSCSSHSL>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000003, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSHSL::s_info + ~((_QWORD)&WebCore::JSCSSHSL::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSHSL::s_info + ~((_QWORD)&WebCore::JSCSSHSL::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSHSL::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSHSL::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype((WebCore::JSCSSColorValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSHSLPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSCSSHSLPrototype::create((WebCore::JSCSSHSLPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSCSSHSL::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSCSSHSL::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3080) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSHSLConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSHSLPrototype::s_info != (char **)(16
                                                      * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHSL>,(WebCore::DOMConstructorID)385>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSHSL_h(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 48);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSHSL_h(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue15toCSSColorAngleERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_15toCSSColorAngleESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 40);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSHSL_h(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  char v21;
  _BYTE v22[8];
  WTF::StringImpl *v23;
  char v24;
  _BYTE v25[8];
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSHSL::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSHSL::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v25);
  v11 = v28;
  v12 = v28 == 0;
  if (!v28)
  {
    v22[0] = 0;
    LODWORD(v23) = -1;
    v13 = v27;
    if (v27 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v27])(&v19, v22, &v26);
      LODWORD(v23) = v13;
    }
    WebCore::CSSHSL::setH(v10, (uint64_t)v22, (uint64_t)&v19);
    if ((_DWORD)v23 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v23])(&v24, v22);
    if (v21)
    {
      v15 = (WTF::StringImpl *)v19;
      v22[0] = v19;
      v16 = v20;
      v20 = 0;
      v23 = v16;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v19, (JSC::JSGlobalObject *)&v23);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v23;
      }
      v23 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
      if (v21)
      {
        v18 = v20;
        v20 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v15);
          else
            *(_DWORD *)v18 -= 2;
        }
      }
    }
    v11 = v28;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v19, &v26);
  return v12;
}

uint64_t WebCore::jsCSSHSL_s(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 64);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSHSL_s(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 56);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSHSL_s(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  char v21;
  _BYTE v22[8];
  WTF::StringImpl *v23;
  char v24;
  _BYTE v25[8];
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSHSL::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSHSL::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v25);
  v11 = v28;
  v12 = v28 == 0;
  if (!v28)
  {
    v22[0] = 0;
    LODWORD(v23) = -1;
    v13 = v27;
    if (v27 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v27])(&v19, v22, &v26);
      LODWORD(v23) = v13;
    }
    WebCore::CSSHSL::setS(v10, (uint64_t)v22, (uint64_t)&v19);
    if ((_DWORD)v23 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v23])(&v24, v22);
    if (v21)
    {
      v15 = (WTF::StringImpl *)v19;
      v22[0] = v19;
      v16 = v20;
      v20 = 0;
      v23 = v16;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v19, (JSC::JSGlobalObject *)&v23);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v23;
      }
      v23 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
      if (v21)
      {
        v18 = v20;
        v20 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v15);
          else
            *(_DWORD *)v18 -= 2;
        }
      }
    }
    v11 = v28;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v19, &v26);
  return v12;
}

uint64_t WebCore::jsCSSHSL_l(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 80);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSHSL_l(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 72);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSHSL_l(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  char v21;
  _BYTE v22[8];
  WTF::StringImpl *v23;
  char v24;
  _BYTE v25[8];
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSHSL::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSHSL::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v25);
  v11 = v28;
  v12 = v28 == 0;
  if (!v28)
  {
    v22[0] = 0;
    LODWORD(v23) = -1;
    v13 = v27;
    if (v27 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v27])(&v19, v22, &v26);
      LODWORD(v23) = v13;
    }
    WebCore::CSSHSL::setL(v10, (uint64_t)v22, (uint64_t)&v19);
    if ((_DWORD)v23 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v23])(&v24, v22);
    if (v21)
    {
      v15 = (WTF::StringImpl *)v19;
      v22[0] = v19;
      v16 = v20;
      v20 = 0;
      v23 = v16;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v19, (JSC::JSGlobalObject *)&v23);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v23;
      }
      v23 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
      if (v21)
      {
        v18 = v20;
        v20 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v15);
          else
            *(_DWORD *)v18 -= 2;
        }
      }
    }
    v11 = v28;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v19, &v26);
  return v12;
}

uint64_t WebCore::jsCSSHSL_alpha(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 96);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSHSL_alpha(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 88);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSHSL_alpha(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  char v21;
  _BYTE v22[8];
  WTF::StringImpl *v23;
  char v24;
  _BYTE v25[8];
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSHSL::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSHSL::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v25);
  v11 = v28;
  v12 = v28 == 0;
  if (!v28)
  {
    v22[0] = 0;
    LODWORD(v23) = -1;
    v13 = v27;
    if (v27 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v27])(&v19, v22, &v26);
      LODWORD(v23) = v13;
    }
    WebCore::CSSHSL::setAlpha(v10, (uint64_t)v22, (uint64_t)&v19);
    if ((_DWORD)v23 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v23])(&v24, v22);
    if (v21)
    {
      v15 = (WTF::StringImpl *)v19;
      v22[0] = v19;
      v16 = v20;
      v20 = 0;
      v23 = v16;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v19, (JSC::JSGlobalObject *)&v23);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v23;
      }
      v23 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
      if (v21)
      {
        v18 = v20;
        v20 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v15);
          else
            *(_DWORD *)v18 -= 2;
        }
      }
    }
    v11 = v28;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v19, &v26);
  return v12;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSCSSHWB>::construct(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  char **v15;
  BOOL v16;
  unint64_t SlowCase;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL4 v22;
  char **v23;
  BOOL v24;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL4 v30;
  char **v31;
  BOOL v32;
  uint64_t v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL4 v38;
  char **v39;
  BOOL v40;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  int v46;
  WebCore::JSDOMGlobalObject *v47;
  _DWORD *v48;
  JSC::VM *v49;
  WTF *v50;
  uint64_t v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char **v57;
  int v58;
  unint64_t v59;
  WebCore::JSCSSColorValue *v60;
  JSC::JSCell *v61;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v63;
  JSC::Structure *v64;
  JSC::JSCell *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  WTF *v77;
  uint64_t v78;
  uint64_t v79;
  WTF *v80;
  void *v81;
  int v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  JSC::VM *v88;
  JSC::JSCell *v89;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v91;
  JSC::JSGlobalObject *v92;
  JSC::VM *v93;
  JSC::JSObject *v94;
  JSC::Structure *v95;
  JSC::VM *FunctionRealm;
  uint64_t v97;
  unsigned int v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char **v103;
  int v104;
  JSC::JSCell *v105;
  unint64_t v106;
  WebCore::JSDOMGlobalObject *v107;
  JSC::Structure *v108;
  JSC::JSCell *v109;
  uint64_t v110;
  unint64_t SubclassStructure;
  int v112;
  int v113;
  int v114;
  unint64_t v116;
  uint64_t v117;
  _QWORD *Allocator;
  JSValue v119;
  WTF::StringImpl *v120;
  WTF::StringImpl *v121;
  JSValue v122;
  unint64_t v123;
  JSC *v124;
  JSC::VM *v125;
  _BYTE v126[8];
  int v127;
  _QWORD *v128;
  int v129;
  _DWORD *v130;
  int v131[2];
  WTF::StringImpl *v132;
  int v133;
  char v134;
  WTF *v135;
  WTF::StringImpl *v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  int v148;
  uint64_t v149;

  v149 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 2)
  {
    v119.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException(v9, a1, v119);
  }
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 48);
  v145 = *((_QWORD *)a1 + 7);
  if ((v12 & 0xFFFE000000000002) != 0)
    goto LABEL_13;
  v13 = *(unsigned int *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C);
  v14 = *(_DWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C) != 0;
  v15 = (char **)(16 * v13);
  if ((_DWORD)v13)
    v16 = v15 == &WebCore::JSCSSNumericValue::s_info;
  else
    v16 = 1;
  if (!v16)
  {
    do
    {
      v15 = (char **)v15[2];
      v14 = v15 != 0;
    }
    while (v15 != &WebCore::JSCSSNumericValue::s_info && v15 != 0);
  }
  if (!v14 || (v19 = *(_QWORD *)(v12 + 24)) == 0)
  {
LABEL_13:
    WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)&v145, 0, "h", 2, "CSSHWB", 7, a8, 0, 0, "CSSNumericValue", 16);
    return 0;
  }
  v20 = *(_QWORD *)(a2 + 56);
  if ((v20 & 0xFFFE000000000002) != 0)
    goto LABEL_28;
  v21 = *(unsigned int *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x4C);
  v22 = *(_DWORD *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x4C) != 0;
  v23 = (char **)(16 * v21);
  if ((_DWORD)v21)
    v24 = v23 == &WebCore::JSCSSNumericValue::s_info;
  else
    v24 = 1;
  if (!v24)
  {
    do
    {
      v23 = (char **)v23[2];
      v22 = v23 != 0;
    }
    while (v23 != &WebCore::JSCSSNumericValue::s_info && v23 != 0);
  }
  if (v22 && (v26 = *(_QWORD *)(v20 + 24)) != 0)
  {
    ++*(_DWORD *)(v26 + 8);
    v146 = v26;
    v147 = 1;
    v148 = 0;
  }
  else
  {
LABEL_28:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 56), (uint64_t)&v141);
    v27 = v142;
    if ((_DWORD)v142)
    {
      v27 = 1;
    }
    else
    {
      v146 = v141;
      v147 = 0;
    }
    v148 = v27;
    if (v27)
    {
      SlowCase = 0;
      v114 = 1;
      goto LABEL_156;
    }
  }
  v28 = *(_QWORD *)(a2 + 64);
  if ((v28 & 0xFFFE000000000002) == 0)
  {
    v29 = *(unsigned int *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x4C);
    v30 = *(_DWORD *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x4C) != 0;
    v31 = (char **)(16 * v29);
    if ((_DWORD)v29)
      v32 = v31 == &WebCore::JSCSSNumericValue::s_info;
    else
      v32 = 1;
    if (!v32)
    {
      do
      {
        v31 = (char **)v31[2];
        v30 = v31 != 0;
      }
      while (v31 != &WebCore::JSCSSNumericValue::s_info && v31 != 0);
    }
    if (v30)
    {
      v34 = *(_QWORD *)(v28 + 24);
      if (v34)
      {
        ++*(_DWORD *)(v34 + 8);
        v142 = v34;
        v143 = 1;
        v144 = 0;
        goto LABEL_49;
      }
    }
  }
  WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 64), (uint64_t)&v137);
  v35 = v138;
  if ((_DWORD)v138)
  {
    v35 = 1;
  }
  else
  {
    v142 = v137;
    v143 = 0;
  }
  v144 = v35;
  if (!v35)
  {
LABEL_49:
    if ((unint64_t)(*(int *)(a2 + 32) - 5) >= 0xFFFFFFFFFFFFFFFCLL || (v36 = *(_QWORD *)(a2 + 72), v36 == 10))
    {
      v138 = 0x3FF0000000000000;
      v139 = 0;
    }
    else
    {
      if ((v36 & 0xFFFE000000000002) != 0)
        goto LABEL_66;
      v37 = *(unsigned int *)(16 * (*(_DWORD *)v36 & 0xFFFFFFFE) + 0x4C);
      v38 = *(_DWORD *)(16 * (*(_DWORD *)v36 & 0xFFFFFFFE) + 0x4C) != 0;
      v39 = (char **)(16 * v37);
      if ((_DWORD)v37)
        v40 = v39 == &WebCore::JSCSSNumericValue::s_info;
      else
        v40 = 1;
      if (!v40)
      {
        do
        {
          v39 = (char **)v39[2];
          v38 = v39 != 0;
        }
        while (v39 != &WebCore::JSCSSNumericValue::s_info && v39 != 0);
      }
      if (!v38 || (v42 = *(_QWORD *)(v36 + 24)) == 0)
      {
LABEL_66:
        WebCore::Converter<WebCore::IDLDouble>::convert(a1, v36, (uint64_t)v131);
        v43 = (int)v132;
        if ((_DWORD)v132)
        {
          v43 = 1;
        }
        else
        {
          v138 = *(_QWORD *)v131;
          v139 = 0;
        }
        v140 = v43;
        if (v43)
        {
          SlowCase = 0;
          v112 = 1;
          goto LABEL_152;
        }
LABEL_70:
        ++*(_DWORD *)(v19 + 8);
        v130 = (_DWORD *)v19;
        if (!v148)
        {
          LOBYTE(v135) = 0;
          LODWORD(v136) = -1;
          v44 = v147;
          if (v147 != -1)
          {
            ((void (*)(int *, WTF **, uint64_t *))off_1E322F638[v147])(v131, &v135, &v146);
            LODWORD(v136) = v44;
          }
          if (!v144)
          {
            LOBYTE(v128) = 0;
            v129 = -1;
            v45 = v143;
            if (v143 != -1)
            {
              ((void (*)(int *, _QWORD **, uint64_t *))off_1E322F638[v143])(v131, &v128, &v142);
              v129 = v45;
            }
            if (!v140)
            {
              v126[0] = 0;
              v127 = -1;
              v46 = v139;
              if (v139 != -1)
              {
                ((void (*)(int *, _BYTE *, uint64_t *))off_1E322F638[v139])(v131, v126, &v138);
                v127 = v46;
              }
              WebCore::CSSHWB::create((uint64_t *)&v130, (uint64_t)&v135, (uint64_t)&v128, (uint64_t)v126, (uint64_t)v131);
              if (v127 != -1)
                ((void (*)(char *, _BYTE *))off_1E322F628[v127])(&v134, v126);
              if (v129 != -1)
                ((void (*)(_BYTE *, _QWORD **))off_1E322F628[v129])(v126, &v128);
              if ((_DWORD)v136 != -1)
                ((void (*)(_QWORD **, WTF **))off_1E322F628[v136])(&v128, &v135);
              v48 = v130;
              v130 = 0;
              if (v48)
              {
                if (v48[2] == 1)
                  (*(void (**)(_DWORD *))(*(_QWORD *)v48 + 16))(v48);
                else
                  --v48[2];
              }
              if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
                goto LABEL_186;
              v124 = a1;
              if (!v133)
              {
                v49 = *(JSC::VM **)(v11 + 40);
                v50 = *(WTF **)v131;
                *(_QWORD *)v131 = 0;
                if (*(uint64_t (***)())v50 != &off_1E339F570)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1948A13BCLL);
                }
                v125 = v9;
                v51 = *((_QWORD *)v49 + 412);
                if (v51)
                {
                  v52 = *(_DWORD *)(v51 - 8);
                  v53 = ((unint64_t)&WebCore::JSCSSHWB::s_info + ~((_QWORD)&WebCore::JSCSSHWB::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSHWB::s_info + ~((_QWORD)&WebCore::JSCSSHWB::s_info << 32)) >> 22);
                  v54 = 9 * ((v53 + ~(v53 << 13)) ^ ((v53 + ~(v53 << 13)) >> 8));
                  v55 = (v54 ^ (v54 >> 15)) + ~((v54 ^ (v54 >> 15)) << 27);
                  v56 = v52 & ((v55 >> 31) ^ v55);
                  v57 = *(char ***)(v51 + 16 * v56);
                  if (v57 == &WebCore::JSCSSHWB::s_info)
                  {
LABEL_96:
                    v59 = *(_QWORD *)(v51 + 16 * v56 + 8);
                    if (v59)
                      goto LABEL_98;
                  }
                  else
                  {
                    v58 = 1;
                    while (v57)
                    {
                      v56 = ((_DWORD)v56 + v58) & v52;
                      v57 = *(char ***)(v51 + 16 * v56);
                      ++v58;
                      if (v57 == &WebCore::JSCSSHWB::s_info)
                        goto LABEL_96;
                    }
                  }
                }
                v60 = (WebCore::JSCSSColorValue *)*((_QWORD *)v49 + 7);
                v61 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v60, v49, v47);
                Structure = WebCore::JSCSSHWBPrototype::createStructure((uint64_t *)v60, (uint64_t)v49, v61);
                *(_DWORD *)(Structure + 16) |= 0x80000u;
                v65 = (JSC::JSCell *)WebCore::JSCSSHWBPrototype::create(v60, Structure, v63, v64);
                v66 = WebCore::JSCSSHWB::createStructure((uint64_t *)v60, (uint64_t)v49, v65);
                v59 = WebCore::cacheDOMStructure((JSCell *)v49, v66, (uint64_t)&WebCore::JSCSSHWB::s_info);
LABEL_98:
                v67 = *((_QWORD *)v49 + 7);
                v68 = *(_QWORD *)(v67 + 41456);
                v69 = *(_QWORD *)(v68 + 23536);
                v70 = *(_QWORD **)(v69 + 3152);
                if (v70)
                  goto LABEL_118;
                v71 = *(_QWORD *)(v68 + 22648);
                if (__ldaxr((unsigned __int8 *)v71))
                {
                  __clrex();
                }
                else if (!__stxr(1u, (unsigned __int8 *)v71))
                {
                  goto LABEL_103;
                }
                MEMORY[0x19AEA534C](v71);
LABEL_103:
                v73 = *(_QWORD *)(v71 + 2824);
                if (!*(_QWORD *)(v73 + 3152))
                {
                  v74 = WTF::fastMalloc((WTF *)0xF8);
                  WTF::CString::CString((WTF::CString *)&v135, "IsoSpace T");
                  v128 = 0;
                  MEMORY[0x19AEA3204](v74, &v135, v67 + 192, v67 + 1872, 32, 8, &v128);
                  v76 = (uint64_t)v128;
                  v128 = 0;
                  if (v76)
                    (*(void (**)(uint64_t))(*(_QWORD *)v76 + 8))(v76);
                  v77 = v135;
                  v135 = 0;
                  if (v77)
                  {
                    if (*(_DWORD *)v77 == 1)
                      WTF::fastFree(v77, v75);
                    else
                      --*(_DWORD *)v77;
                  }
                  v78 = *(_QWORD *)(v73 + 3152);
                  *(_QWORD *)(v73 + 3152) = v74;
                  if (v78)
                    (*(void (**)(uint64_t))(*(_QWORD *)v78 + 8))(v78);
                }
                v70 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
                JSC::GCClient::IsoSubspace::IsoSubspace();
                v79 = *(_QWORD *)(v69 + 3152);
                *(_QWORD *)(v69 + 3152) = v70;
                if (v79)
                {
                  v80 = (WTF *)MEMORY[0x19AEA3528]();
                  WTF::fastFree(v80, v81);
                }
                v82 = __ldxr((unsigned __int8 *)v71);
                if (v82 == 1)
                {
                  if (!__stlxr(0, (unsigned __int8 *)v71))
                  {
LABEL_118:
                    SlowCase = v70[3];
                    if (SlowCase >= v70[4])
                    {
                      SlowCase = v70[5];
                      if ((SlowCase & 1) != 0)
                      {
                        JSC::sanitizeStackForVM();
                        SlowCase = JSC::LocalAllocator::allocateSlowCase();
                        goto LABEL_120;
                      }
                      v123 = *(_QWORD *)(SlowCase + 8) ^ v70[6];
                      v70[4] = SlowCase + HIDWORD(v123);
                      v70[5] = SlowCase + (int)v123;
                    }
                    v70[3] = SlowCase + 32;
LABEL_120:
                    *(_DWORD *)SlowCase = 0;
                    WebCore::JSDOMObject::JSDOMObject(SlowCase, v59);
                    *(_QWORD *)(SlowCase + 24) = v50;
                    if (*(_BYTE *)(v67 + 755))
                      __dmb(0xAu);
                    v83 = *((_QWORD *)v49 + 415);
                    v9 = v125;
                    {
                      WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner = (uint64_t)&off_1E324B170;
                    }
                    if (*(_DWORD *)(v83 + 48))
                    {
                      v135 = v50;
                      if ((SlowCase & 8) != 0)
                        v116 = (SlowCase - 112) | 1;
                      else
                        v116 = SlowCase & 0xFFFFFFFFFFFFC000;
                      if ((v116 & 1) != 0)
                        v117 = v116 + 47;
                      else
                        v117 = *(_QWORD *)v116 + 32;
                      Allocator = *(_QWORD **)(v117 + 16);
                      if (!Allocator)
                        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
                      *(_QWORD *)(v117 + 16) = *Allocator;
                      *Allocator = SlowCase;
                      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
                      Allocator[2] = v83;
                      v128 = Allocator;
                      JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v83 + 32), (uint64_t *)&v135, (uint64_t *)&v128);
                      if (v128)
                        v128[1] = 3;
                    }
                    else
                    {
                      if ((SlowCase & 8) != 0)
                        v84 = (SlowCase - 112) | 1;
                      else
                        v84 = SlowCase & 0xFFFFFFFFFFFFC000;
                      if ((v84 & 1) != 0)
                        v85 = v84 + 47;
                      else
                        v85 = *(_QWORD *)v84 + 32;
                      v86 = *(_QWORD **)(v85 + 16);
                      if (!v86)
                        v86 = (_QWORD *)JSC::WeakSet::findAllocator();
                      *(_QWORD *)(v85 + 16) = *v86;
                      *v86 = SlowCase;
                      v86[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
                      v86[2] = v83;
                      v87 = *((_QWORD *)v50 + 2);
                      *((_QWORD *)v50 + 2) = v86;
                      if (v87)
                        *(_QWORD *)(v87 + 8) = 3;
                    }
                    goto LABEL_134;
                  }
                }
                else
                {
                  __clrex();
                }
                WTF::Lock::unlockSlow((WTF::Lock *)v71);
                goto LABEL_118;
              }
              if (v133 == 1)
              {
                v120 = (WTF::StringImpl *)LOBYTE(v131[0]);
                LOBYTE(v135) = v131[0];
                v121 = v132;
                v132 = 0;
                v136 = v121;
                if (!*((_QWORD *)v9 + 2))
                {
                  v122.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v131[0]), (JSC::JSGlobalObject *)&v136);
                  JSC::VM::throwException(v9, a1, v122);
                  v121 = v136;
                }
                v136 = 0;
                if (v121)
                {
                  if (*(_DWORD *)v121 == 2)
                    WTF::StringImpl::destroy(v121, v120);
                  else
                    *(_DWORD *)v121 -= 2;
                }
                SlowCase = 0;
LABEL_134:
                if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
                {
LABEL_186:
                  SlowCase = 0;
                  goto LABEL_149;
                }
                v88 = v9;
                v89 = *(JSC::JSCell **)(a2 + 40);
                if (((unint64_t)v89 & 0xFFFE000000000002) != 0
                  || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v89)) == 0
                  || (v92 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
                  || (v93 = (JSC::VM *)*((_QWORD *)v124 + 7),
                      FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(v124, Object, v91),
                      *((_DWORD *)v93 + 20))
                  && (JSC::VM::hasExceptionsAfterHandlingTraps(v93) & 1) != 0)
                {
LABEL_148:
                  if (*((_DWORD *)v88 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v88) & 1) != 0)
                    SlowCase = 0;
LABEL_149:
                  if (v133 != -1)
                    ((void (*)(WTF **, int *))off_1E322FD78[v133])(&v135, v131);
                  v112 = v140;
                  if (v140 == -1)
                  {
LABEL_153:
                    v113 = v144;
                    if (v144 == -1)
                      goto LABEL_155;
                    goto LABEL_154;
                  }
LABEL_152:
                  ((void (*)(int *, uint64_t *))off_1E322F648[v112])(v131, &v138);
                  goto LABEL_153;
                }
                v97 = *((_QWORD *)FunctionRealm + 412);
                if (v97)
                {
                  v98 = *(_DWORD *)(v97 - 8);
                  v99 = ((unint64_t)&WebCore::JSCSSHWB::s_info + ~((_QWORD)&WebCore::JSCSSHWB::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSHWB::s_info + ~((_QWORD)&WebCore::JSCSSHWB::s_info << 32)) >> 22);
                  v100 = 9 * ((v99 + ~(v99 << 13)) ^ ((v99 + ~(v99 << 13)) >> 8));
                  v101 = (v100 ^ (v100 >> 15)) + ~((v100 ^ (v100 >> 15)) << 27);
                  v102 = v98 & ((v101 >> 31) ^ v101);
                  v103 = *(char ***)(v97 + 16 * v102);
                  if (v103 == &WebCore::JSCSSHWB::s_info)
                  {
LABEL_144:
                    v94 = *(JSC::JSObject **)(v97 + 16 * v102 + 8);
                    if (v94)
                    {
LABEL_146:
                      SubclassStructure = JSC::InternalFunction::createSubclassStructure(v124, v92, v94, v95);
                      if (!*((_DWORD *)v93 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v93) & 1) == 0)
                        JSC::JSObject::setStructure((JSCell *)SlowCase, v93, SubclassStructure);
                      goto LABEL_148;
                    }
                  }
                  else
                  {
                    v104 = 1;
                    while (v103)
                    {
                      v102 = ((_DWORD)v102 + v104) & v98;
                      v103 = *(char ***)(v97 + 16 * v102);
                      ++v104;
                      if (v103 == &WebCore::JSCSSHWB::s_info)
                        goto LABEL_144;
                    }
                  }
                }
                v105 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v93, FunctionRealm, v94);
                v106 = WebCore::JSCSSHWBPrototype::createStructure((uint64_t *)v93, (uint64_t)FunctionRealm, v105);
                *(_DWORD *)(v106 + 16) |= 0x80000u;
                v109 = (JSC::JSCell *)WebCore::JSCSSHWBPrototype::create(v93, v106, v107, v108);
                v110 = WebCore::JSCSSHWB::createStructure((uint64_t *)v93, (uint64_t)FunctionRealm, v109);
                v94 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v110, (uint64_t)&WebCore::JSCSSHWB::s_info);
                goto LABEL_146;
              }
            }
          }
        }
        std::__throw_bad_variant_access[abi:sn180100]();
      }
      ++*(_DWORD *)(v42 + 8);
      v138 = v42;
      v139 = 1;
    }
    v140 = 0;
    goto LABEL_70;
  }
  SlowCase = 0;
  v113 = 1;
LABEL_154:
  ((void (*)(uint64_t *, uint64_t *))off_1E322F648[v113])(&v137, &v142);
LABEL_155:
  v114 = v148;
  if (v148 != -1)
LABEL_156:
    ((void (*)(uint64_t *, uint64_t *))off_1E322F648[v114])(&v141, &v146);
  return SlowCase;
}

uint64_t WebCore::JSCSSHWB::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSHWBPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSHWBPrototype::create(WebCore::JSCSSHWBPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCSSHWB::s_info, &WebCore::JSCSSHWBPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHWB>,(WebCore::DOMConstructorID)386>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3088);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSCSSHWB>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000003, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSHWB::s_info + ~((_QWORD)&WebCore::JSCSSHWB::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSHWB::s_info + ~((_QWORD)&WebCore::JSCSSHWB::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSHWB::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSHWB::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype((WebCore::JSCSSColorValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSHWBPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSCSSHWBPrototype::create((WebCore::JSCSSHWBPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSCSSHWB::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSCSSHWB::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3088) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSHWBConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSHWBPrototype::s_info != (char **)(16
                                                      * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHWB>,(WebCore::DOMConstructorID)386>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSHWB_h(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 40));
}

BOOL WebCore::setJSCSSHWB_h(JSC *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v17;
  _DWORD *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WTF::StringImpl *v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  int v25[2];
  WTF::StringImpl *v26;
  char v27;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSHWB::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSHWB::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)v25 = v4;
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_23;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v17 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v17 + 8);
    v23 = (_DWORD *)v17;
    WebCore::CSSHWB::setH(v10, (uint64_t *)&v23, (uint64_t)v25);
    v18 = v23;
    v23 = 0;
    if (v18)
    {
      if (v18[2] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v18 + 16))(v18);
      else
        --v18[2];
    }
    if (v27)
    {
      v19 = (WTF::StringImpl *)LOBYTE(v25[0]);
      LOBYTE(v23) = v25[0];
      v20 = v26;
      v26 = 0;
      v24 = v20;
      if (!*((_QWORD *)v4 + 2))
      {
        v21.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v25[0]), (JSC::JSGlobalObject *)&v24);
        JSC::VM::throwException(v4, a1, v21);
        v20 = v24;
      }
      v24 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 == 2)
          WTF::StringImpl::destroy(v20, v19);
        else
          *(_DWORD *)v20 -= 2;
      }
      if (v27)
      {
        v22 = v26;
        v26 = 0;
        if (v22)
        {
          if (*(_DWORD *)v22 == 2)
            WTF::StringImpl::destroy(v22, v19);
          else
            *(_DWORD *)v22 -= 2;
        }
      }
    }
    return 1;
  }
  else
  {
LABEL_23:
    WebCore::throwAttributeTypeError((int)a1, (int)v25, "CSSHWB", 7, "h", 2, "CSSNumericValue", 16);
    return 0;
  }
}

uint64_t WebCore::jsCSSHWB_w(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  int v9;
  _BYTE v10[40];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14[5];

  v2 = *(uint64_t **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 48);
  ++*(_DWORD *)(v3 + 8);
  v8 = v3;
  v9 = 1;
  v13 = 1;
  LOBYTE(v11) = 0;
  v12 = 0;
  v14[0] = &v13;
  v14[1] = &v11;
  v14[2] = a1;
  v14[3] = v2;
  v14[4] = &v8;
  v4 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENSS_IlLl1EEEEEET_SV_(v14, (uint64_t)v10);
  if (v12)
  {
    v5 = v11;
    if (v9 != -1)
      ((void (*)(uint64_t **, uint64_t *, double))off_1E322F628[v9])(v14, &v8, v4);
    return v5;
  }
  else
  {
    v7 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSHWB_w(v7);
  }
}

BOOL WebCore::setJSCSSHWB_w(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  JSValue v24;
  WTF::StringImpl *v25;
  int v26[2];
  WTF::StringImpl *v27;
  char v28;
  _BYTE v29[8];
  WTF::StringImpl *v30;
  char v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSHWB::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSHWB::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_25;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v16 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v16 + 8);
    v32 = v16;
    v17 = 1;
    v33 = 1;
    v34 = 0;
  }
  else
  {
LABEL_25:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, a3, (uint64_t)v26);
    v18 = (int)v27;
    if ((_DWORD)v27)
    {
      v18 = 1;
    }
    else
    {
      v32 = *(_QWORD *)v26;
      v33 = 0;
    }
    v34 = v18;
    v17 = 0;
    if (v18)
    {
      v20 = 0;
      v19 = 1;
LABEL_33:
      ((void (*)(int *, uint64_t *))off_1E322F648[v19])(v26, &v32);
      return v20;
    }
  }
  v29[0] = 0;
  LODWORD(v30) = -1;
  ((void (*)(int *, _BYTE *, uint64_t *))off_1E322F638[v17])(v26, v29, &v32);
  LODWORD(v30) = v17;
  WebCore::CSSHWB::setW(v10, (uint64_t)v29, v26);
  if ((_DWORD)v30 != -1)
    ((void (*)(char *, _BYTE *))off_1E322F628[v30])(&v31, v29);
  if (v28)
  {
    v22 = (WTF::StringImpl *)LOBYTE(v26[0]);
    v29[0] = v26[0];
    v23 = v27;
    v27 = 0;
    v30 = v23;
    if (!*((_QWORD *)v4 + 2))
    {
      v24.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v26[0]), (JSC::JSGlobalObject *)&v30);
      JSC::VM::throwException(v4, a1, v24);
      v23 = v30;
    }
    v30 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v22);
      else
        *(_DWORD *)v23 -= 2;
    }
    if (v28)
    {
      v25 = v27;
      v27 = 0;
      if (v25)
      {
        if (*(_DWORD *)v25 == 2)
          WTF::StringImpl::destroy(v25, v22);
        else
          *(_DWORD *)v25 -= 2;
      }
    }
  }
  v19 = v34;
  v20 = 1;
  if (v34 != -1)
    goto LABEL_33;
  return v20;
}

uint64_t WebCore::jsCSSHWB_b(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  int v9;
  _BYTE v10[40];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14[5];

  v2 = *(uint64_t **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 56);
  ++*(_DWORD *)(v3 + 8);
  v8 = v3;
  v9 = 1;
  v13 = 1;
  LOBYTE(v11) = 0;
  v12 = 0;
  v14[0] = &v13;
  v14[1] = &v11;
  v14[2] = a1;
  v14[3] = v2;
  v14[4] = &v8;
  v4 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENSS_IlLl1EEEEEET_SV_(v14, (uint64_t)v10);
  if (v12)
  {
    v5 = v11;
    if (v9 != -1)
      ((void (*)(uint64_t **, uint64_t *, double))off_1E322F628[v9])(v14, &v8, v4);
    return v5;
  }
  else
  {
    v7 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSHWB_b(v7);
  }
}

BOOL WebCore::setJSCSSHWB_b(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  JSValue v24;
  WTF::StringImpl *v25;
  int v26[2];
  WTF::StringImpl *v27;
  char v28;
  _BYTE v29[8];
  WTF::StringImpl *v30;
  char v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSHWB::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSHWB::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_25;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v16 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v16 + 8);
    v32 = v16;
    v17 = 1;
    v33 = 1;
    v34 = 0;
  }
  else
  {
LABEL_25:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, a3, (uint64_t)v26);
    v18 = (int)v27;
    if ((_DWORD)v27)
    {
      v18 = 1;
    }
    else
    {
      v32 = *(_QWORD *)v26;
      v33 = 0;
    }
    v34 = v18;
    v17 = 0;
    if (v18)
    {
      v20 = 0;
      v19 = 1;
LABEL_33:
      ((void (*)(int *, uint64_t *))off_1E322F648[v19])(v26, &v32);
      return v20;
    }
  }
  v29[0] = 0;
  LODWORD(v30) = -1;
  ((void (*)(int *, _BYTE *, uint64_t *))off_1E322F638[v17])(v26, v29, &v32);
  LODWORD(v30) = v17;
  WebCore::CSSHWB::setB(v10, (uint64_t)v29, v26);
  if ((_DWORD)v30 != -1)
    ((void (*)(char *, _BYTE *))off_1E322F628[v30])(&v31, v29);
  if (v28)
  {
    v22 = (WTF::StringImpl *)LOBYTE(v26[0]);
    v29[0] = v26[0];
    v23 = v27;
    v27 = 0;
    v30 = v23;
    if (!*((_QWORD *)v4 + 2))
    {
      v24.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v26[0]), (JSC::JSGlobalObject *)&v30);
      JSC::VM::throwException(v4, a1, v24);
      v23 = v30;
    }
    v30 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v22);
      else
        *(_DWORD *)v23 -= 2;
    }
    if (v28)
    {
      v25 = v27;
      v27 = 0;
      if (v25)
      {
        if (*(_DWORD *)v25 == 2)
          WTF::StringImpl::destroy(v25, v22);
        else
          *(_DWORD *)v25 -= 2;
      }
    }
  }
  v19 = v34;
  v20 = 1;
  if (v34 != -1)
    goto LABEL_33;
  return v20;
}

uint64_t WebCore::jsCSSHWB_alpha(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  int v9;
  _BYTE v10[40];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14[5];

  v2 = *(uint64_t **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 64);
  ++*(_DWORD *)(v3 + 8);
  v8 = v3;
  v9 = 1;
  v13 = 1;
  LOBYTE(v11) = 0;
  v12 = 0;
  v14[0] = &v13;
  v14[1] = &v11;
  v14[2] = a1;
  v14[3] = v2;
  v14[4] = &v8;
  v4 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENSS_IlLl1EEEEEET_SV_(v14, (uint64_t)v10);
  if (v12)
  {
    v5 = v11;
    if (v9 != -1)
      ((void (*)(uint64_t **, uint64_t *, double))off_1E322F628[v9])(v14, &v8, v4);
    return v5;
  }
  else
  {
    v7 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSHWB_alpha(v7);
  }
}

BOOL WebCore::setJSCSSHWB_alpha(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  JSValue v24;
  WTF::StringImpl *v25;
  int v26[2];
  WTF::StringImpl *v27;
  char v28;
  _BYTE v29[8];
  WTF::StringImpl *v30;
  char v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSHWB::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSHWB::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_25;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v16 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v16 + 8);
    v32 = v16;
    v17 = 1;
    v33 = 1;
    v34 = 0;
  }
  else
  {
LABEL_25:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, a3, (uint64_t)v26);
    v18 = (int)v27;
    if ((_DWORD)v27)
    {
      v18 = 1;
    }
    else
    {
      v32 = *(_QWORD *)v26;
      v33 = 0;
    }
    v34 = v18;
    v17 = 0;
    if (v18)
    {
      v20 = 0;
      v19 = 1;
LABEL_33:
      ((void (*)(int *, uint64_t *))off_1E322F648[v19])(v26, &v32);
      return v20;
    }
  }
  v29[0] = 0;
  LODWORD(v30) = -1;
  ((void (*)(int *, _BYTE *, uint64_t *))off_1E322F638[v17])(v26, v29, &v32);
  LODWORD(v30) = v17;
  WebCore::CSSHWB::setAlpha(v10, (uint64_t)v29, v26);
  if ((_DWORD)v30 != -1)
    ((void (*)(char *, _BYTE *))off_1E322F628[v30])(&v31, v29);
  if (v28)
  {
    v22 = (WTF::StringImpl *)LOBYTE(v26[0]);
    v29[0] = v26[0];
    v23 = v27;
    v27 = 0;
    v30 = v23;
    if (!*((_QWORD *)v4 + 2))
    {
      v24.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v26[0]), (JSC::JSGlobalObject *)&v30);
      JSC::VM::throwException(v4, a1, v24);
      v23 = v30;
    }
    v30 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v22);
      else
        *(_DWORD *)v23 -= 2;
    }
    if (v28)
    {
      v25 = v27;
      v27 = 0;
      if (v25)
      {
        if (*(_DWORD *)v25 == 2)
          WTF::StringImpl::destroy(v25, v22);
        else
          *(_DWORD *)v25 -= 2;
      }
    }
  }
  v19 = v34;
  v20 = 1;
  if (v34 != -1)
    goto LABEL_33;
  return v20;
}

uint64_t WebCore::JSCSSImportRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSImportRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSImportRulePrototype::create(WebCore::JSCSSImportRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(this, (uint64_t)&WebCore::JSCSSImportRule::s_info, &WebCore::JSCSSImportRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSImportRule>,(WebCore::DOMConstructorID)338>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2704);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSImportRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSImportRule::s_info + ~((_QWORD)&WebCore::JSCSSImportRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSImportRule::s_info + ~((_QWORD)&WebCore::JSCSSImportRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSImportRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSImportRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSRule::prototype((WebCore::JSCSSRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSImportRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSImportRulePrototype::create((WebCore::JSCSSImportRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSImportRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSImportRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2704) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSImportRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSImportRulePrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSImportRule>,(WebCore::DOMConstructorID)338>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSImportRule_href(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 3) + 32) + 40);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

unint64_t WebCore::jsCSSImportRule_media(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  WTF *v7;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(_QWORD *)(v3 + 40);
  if (!v5)
  {
    v5 = WTF::fastMalloc((WTF *)0x30);
    *(_DWORD *)v5 = 1;
    *(_QWORD *)(v5 + 8) = 0;
    *(_QWORD *)(v5 + 16) = v3;
    *(_BYTE *)(v5 + 24) = 0;
    *(_BYTE *)(v5 + 40) = 0;
    v7 = *(WTF **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v5;
    if (v7)
    {
      if (*(_DWORD *)v7 == 1)
      {
        if (*((_BYTE *)v7 + 40))
          WTF::Vector<WebCore::MQ::MediaQuery,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)v7 + 24, v6);
        WTF::fastFree(v7, v6);
        v5 = *(_QWORD *)(v3 + 40);
      }
      else
      {
        --*(_DWORD *)v7;
      }
    }
  }
  return WebCore::wrap<WebCore::MediaList>(a1, v4, (WTF *)v5);
}

BOOL WebCore::setJSCSSImportRule_media(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSImportRule::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSImportRule::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

uint64_t WebCore::jsCSSImportRule_styleSheet(int a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v4;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = WebCore::CSSImportRule::styleSheet(*(WebCore::CSSImportRule **)(a2 + 24));
  if (v4)
    return WebCore::wrap<WebCore::CSSStyleSheet>(a1, v3, v4);
  else
    return 2;
}

uint64_t WebCore::jsCSSImportRule_layerName(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  WebCore::CSSImportRule::layerName(*(WTF::String **)(a2 + 24), &v12);
  v3 = v12;
  if (!v12)
    return 2;
  v5 = *(_QWORD *)(a1 + 56);
  v6 = (uint64_t *)(v5 + 41968);
  v7 = *((_DWORD *)v12 + 1);
  if (!v7)
    goto LABEL_14;
  if (v7 == 1)
  {
    v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
    if ((*((_BYTE *)v12 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_5;
      v9 = v10;
    }
    v6 = (uint64_t *)(v5 + 8 * v9 + 42216);
LABEL_14:
    v4 = *v6;
    goto LABEL_15;
  }
LABEL_5:
  v4 = *(_QWORD *)(v5 + 64760);
  if (!v4 || v12 != *(WTF::StringImpl **)(v4 + 8))
  {
    v4 = JSC::jsStringWithCacheSlowCase();
    v3 = v12;
    v12 = 0;
    if (!v3)
      return v4;
    goto LABEL_16;
  }
LABEL_15:
  v12 = 0;
LABEL_16:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v4;
}

uint64_t WebCore::jsCSSImportRule_supportsText(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 3) + 32) + 112);
  if (!v2)
    return 2;
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  v6 = (uint64_t *)(v5 + 41968);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v5 + 64760);
      if (!v7 || v2 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      if (v3)
        goto LABEL_8;
LABEL_14:
      WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
      return v7;
    }
    v9 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v6 = (uint64_t *)(v5 + 8 * v10 + 42216);
  }
  v7 = *v6;
  if (!v3)
    goto LABEL_14;
LABEL_8:
  *(_DWORD *)v2 = v3;
  return v7;
}

uint64_t WebCore::JSCSSImportRule::subspaceForImpl(WebCore::JSCSSImportRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2744);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2744);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2744);
    *(_QWORD *)(v8 + 2744) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2744);
  *(_QWORD *)(v3 + 2744) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSKeyframeRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSKeyframeRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSKeyframeRulePrototype::create(WebCore::JSCSSKeyframeRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCSSKeyframeRule::s_info, &WebCore::JSCSSKeyframeRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSKeyframeRule>,(WebCore::DOMConstructorID)339>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2712);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSKeyframeRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSKeyframeRule::s_info + ~((_QWORD)&WebCore::JSCSSKeyframeRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSKeyframeRule::s_info + ~((_QWORD)&WebCore::JSCSSKeyframeRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSKeyframeRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSKeyframeRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSRule::prototype((WebCore::JSCSSRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSKeyframeRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSKeyframeRulePrototype::create((WebCore::JSCSSKeyframeRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSKeyframeRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSKeyframeRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2712) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSKeyframeRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSKeyframeRulePrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSKeyframeRule>,(WebCore::DOMConstructorID)339>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSKeyframeRule_keyText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::StyleRuleKeyframe::keyText(*(WebCore::StyleRuleKeyframe **)(*(_QWORD *)(a2 + 24) + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSCSSKeyframeRule_keyText(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSKeyframeRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSKeyframeRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::StyleRuleKeyframe::setKeyText(*(WebCore::StyleRuleKeyframe **)(v9 + 24), (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v14])(&v22, &v19);
  return v15;
}

unint64_t WebCore::jsCSSKeyframeRule_style(WebCore *a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::JSDOMGlobalObject *v4;
  WebCore::CSSStyleDeclaration *v5;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WebCore::JSDOMGlobalObject *)WebCore::CSSKeyframeRule::style(*(WebCore::CSSKeyframeRule **)(a2 + 24));
  return WebCore::toJS(a1, v3, v4, v5);
}

BOOL WebCore::setJSCSSKeyframeRule_style(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSKeyframeRule::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSKeyframeRule::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

uint64_t WebCore::JSCSSKeyframeRule::subspaceForImpl(WebCore::JSCSSKeyframeRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2752);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2752);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2752);
    *(_QWORD *)(v8 + 2752) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2752);
  *(_QWORD *)(v3 + 2752) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSKeyframesRule::put(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  JSC::VM *v21;
  _BYTE *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t result;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned int v32;
  int OwnProperty;
  int v34;
  int v35;
  char hasExceptionsAfterHandlingTraps;
  _BYTE v37[16];
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = (WebCore::JSDOMGlobalObject *)a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (v15)
  {
    v16 = v15;
    if (!*(_BYTE *)(v15 + 274))
    {
      v17 = *(_BYTE **)(v15 + 496);
      if (!v17)
        v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
      if (*(_QWORD *)v17)
      {
        v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
        if (v18)
        {
          v19 = *(_QWORD *)(v18 + 680);
          if (*(_BYTE *)(v19 + 243))
          {
            if (!*(_BYTE *)(v19 + 242))
              goto LABEL_23;
          }
          else if ((*(_QWORD *)(v19 + 688) & 0x80000) == 0)
          {
            goto LABEL_23;
          }
          if (v17[65])
            return JSC::JSObject::put();
        }
      }
    }
  }
LABEL_23:
  if (!a3)
    return JSC::JSObject::put();
  v20 = *(_DWORD *)(a3 + 16);
  if ((v20 & 0x20) != 0)
    return JSC::JSObject::put();
  v21 = *(JSC::VM **)(a2 + 56);
  v22 = *(_BYTE **)(a3 + 8);
  v23 = *(unsigned int *)(a3 + 4);
  if ((v20 & 4) != 0)
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *v22 - 48;
    if (v24 > 9 || v23 >= 2 && *v22 == 48)
      return JSC::JSObject::put();
    v30 = v22 + 1;
    v31 = v23 - 1;
    while (v31)
    {
      if (v24 <= 0x19999999)
      {
        v32 = *v30 - 48;
        if (v32 <= 9)
        {
          v29 = __CFADD__(v32, 10 * v24);
          v24 = v32 + 10 * v24;
          ++v30;
          --v31;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  else
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *(unsigned __int16 *)v22 - 48;
    if (v24 > 9 || v23 >= 2 && *(_WORD *)v22 == 48)
      return JSC::JSObject::put();
    v26 = (unsigned __int16 *)(v22 + 2);
    v27 = v23 - 1;
    while (v27)
    {
      if (v24 <= 0x19999999)
      {
        v28 = *v26 - 48;
        if (v28 <= 9)
        {
          v29 = __CFADD__(v28, 10 * v24);
          v24 = v28 + 10 * v24;
          ++v26;
          --v27;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  if (v24 == -1)
    return JSC::JSObject::put();
  v48 = 0;
  v49 = 0;
  v50 = 0;
  v51 = 14;
  v38 = 0xFFFFFFFF00000000;
  v40 = 0;
  v41 = 0;
  v39 = v8;
  v42 = 0x20000;
  v43 = 0;
  LOBYTE(v44) = 0;
  v45 = 0;
  v46 = 0;
  v47 = 0;
  OwnProperty = WebCore::JSCSSKeyframesRule::legacyPlatformObjectGetOwnProperty(a1, a2, a3, (uint64_t)v37);
  if (*((_DWORD *)v21 + 20)
    && (v35 = OwnProperty,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v21),
        OwnProperty = v35,
        (hasExceptionsAfterHandlingTraps & 1) != 0)
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v21 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v45)
  {
    v34 = *(_DWORD *)(v44 + 4);
    if (!v34)
    {
      __break(0xC471u);
      JUMPOUT(0x1948A4D10);
    }
    *(_DWORD *)(v44 + 4) = v34 - 1;
  }
  return result;
}

uint64_t WebCore::JSCSSKeyframesRule::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSCSSKeyframesRule::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (*(_BYTE *)(v15 + 242))
            {
LABEL_21:
              if (v13[65])
                return JSC::JSObject::deleteProperty();
            }
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) != 0)
          {
            goto LABEL_21;
          }
        }
      }
    }
  }
  if (a3)
  {
    v16 = *(_DWORD *)(a3 + 16);
    if ((v16 & 0x20) == 0)
    {
      v17 = *(_BYTE **)(a3 + 8);
      v18 = *(unsigned int *)(a3 + 4);
      if ((v16 & 4) != 0)
      {
        if (!(_DWORD)v18 || (v29 = *v17 - 48, v29 > 9) || v18 >= 2 && *v17 == 48)
        {
LABEL_46:
          v30 = 0;
          v31 = 0;
          v32 = 0;
        }
        else
        {
          v33 = v18 - 1;
          v34 = v17 + 1;
          while (v33)
          {
            if (v29 > 0x19999999)
              goto LABEL_46;
            v35 = *v34 - 48;
            if (v35 > 9)
              goto LABEL_46;
            v30 = 0;
            v31 = 0;
            v32 = 0;
            v28 = __CFADD__(v35, 10 * v29);
            v29 = v35 + 10 * v29;
            --v33;
            ++v34;
            if (v28)
              goto LABEL_47;
          }
          v30 = 0x100000000;
          if (v29 == -1)
          {
            v30 = 0;
            v31 = 0;
          }
          else
          {
            v31 = v29;
          }
          if (v29 == -1)
            v32 = 0;
          else
            v32 = v29 & 0xFFFFFF00;
        }
LABEL_47:
        v23 = v32 | v31;
        if ((v30 & 0x100000000) != 0)
          return *(_DWORD *)(*(_QWORD *)(v9 + 24) + 20) <= v23;
      }
      else
      {
        if ((_DWORD)v18
          && (v19 = *(unsigned __int16 *)v17 - 48, v19 <= 9)
          && (v18 < 2 || *(_WORD *)v17 != 48))
        {
          v25 = (unsigned __int16 *)(v17 + 2);
          v26 = v18 - 1;
          while (v26)
          {
            if (v19 <= 0x19999999)
            {
              v27 = *v25 - 48;
              if (v27 <= 9)
              {
                v28 = __CFADD__(v27, 10 * v19);
                v19 = v27 + 10 * v19;
                ++v25;
                --v26;
                if (!v28)
                  continue;
              }
            }
            goto LABEL_29;
          }
          v7 = v19 == -1;
          v22 = v19 & 0xFFFFFF00;
          v21 = v19;
          v20 = 0x100000000;
          if (v7)
          {
            v20 = 0;
            v21 = 0;
            v22 = 0;
          }
        }
        else
        {
LABEL_29:
          v20 = 0;
          v21 = 0;
          v22 = 0;
        }
        v23 = v22 | v21;
        if ((v20 & 0x100000000) != 0)
          return *(_DWORD *)(*(_QWORD *)(v9 + 24) + 20) <= v23;
      }
    }
  }
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSCSSKeyframesRule::deletePropertyByIndex(WebCore::JSCSSKeyframesRule *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return *(_DWORD *)(*(_QWORD *)(v11 + 24) + 20) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return *(_DWORD *)(*(_QWORD *)(v11 + 24) + 20) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return *(_DWORD *)(*(_QWORD *)(v11 + 24) + 20) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return *(_DWORD *)(*(_QWORD *)(v11 + 24) + 20) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return *(_DWORD *)(*(_QWORD *)(v11 + 24) + 20) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return *(_DWORD *)(*(_QWORD *)(v11 + 24) + 20) <= a3;
  }
  if (!v15[65])
    return *(_DWORD *)(*(_QWORD *)(v11 + 24) + 20) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSCSSKeyframesRule::getOwnPropertySlotByIndex(WebCore::JSCSSKeyframesRule *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  unsigned int v6;
  uint64_t v9;
  JSC::VM *v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  unint64_t v17;
  uint64_t result;

  v6 = a3;
  if ((_DWORD)a3 == -1)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v9 = *((_QWORD *)this + 3);
  if (*(_DWORD *)(*(_QWORD *)(v9 + 24) + 20) <= a3)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  if (*(_DWORD *)(v9 + 44) <= a3)
    goto LABEL_15;
  v10 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v11 = *(_QWORD *)(v9 + 32);
  v12 = *(_DWORD **)(v11 + 8 * a3);
  if (v12)
    goto LABEL_9;
  v13 = WTF::fastMalloc((WTF *)0x28);
  v14 = *(_QWORD *)(v9 + 24);
  if (*(_DWORD *)(v14 + 20) <= v6)
  {
LABEL_15:
    __break(0xC471u);
    JUMPOUT(0x1948A53B4);
  }
  v12 = (_DWORD *)v13;
  v15 = *(_DWORD **)(*(_QWORD *)(v14 + 8) + 8 * v6);
  *(_DWORD *)(v13 + 8) = 1;
  *(_BYTE *)(v13 + 12) &= 0xFCu;
  *(_QWORD *)v13 = off_1E33984D8;
  *(_QWORD *)(v13 + 16) = 0;
  ++*v15;
  *(_QWORD *)(v13 + 24) = v15;
  *(_QWORD *)(v13 + 32) = 0;
  *(_BYTE *)(v13 + 12) |= 2u;
  *(_QWORD *)(v13 + 16) = v9;
  v16 = *(_DWORD **)(v11 + 8 * v6);
  *(_QWORD *)(v11 + 8 * v6) = v12;
  if (v16)
  {
    if (v16[2] != 1)
    {
      --v16[2];
      goto LABEL_9;
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)v16 + 8))(v16);
    v12 = *(_DWORD **)(v11 + 8 * v6);
    if (v12)
      goto LABEL_9;
    return JSC::JSObject::getOwnPropertySlotByIndex();
  }
LABEL_9:
  v17 = WebCore::wrap<WebCore::CSSRule>((uint64_t)a2, *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v12);
  if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
    return 0;
  *(_QWORD *)a4 = v17;
  *(_DWORD *)(a4 + 16) = 2;
  *(_QWORD *)(a4 + 32) = this;
  result = 1;
  *(_BYTE *)(a4 + 49) = 1;
  return result;
}

uint64_t WebCore::JSCSSKeyframesRule::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v4;
  int v5;
  uint64_t *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl **v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44[2];
  char v45;
  WTF::StringImpl *v46;

  v4 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 24) + 20);
  if (v4)
  {
    v5 = 0;
    v6 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v8 = v43;
      v46 = v43;
      v9 = *((_DWORD *)v43 + 4);
      if ((v9 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v43 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v10 = *a3;
      v11 = *(unsigned int *)(*a3 + 20);
      if (v11 <= 0x13)
      {
        if ((_DWORD)v11)
        {
          v12 = *(WTF::StringImpl ***)(v10 + 8);
          while (*v12 != v43)
          {
            ++v12;
            if (!--v11)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v9 & 0x20) != 0)
        {
          v33 = *(_DWORD *)v8 + 2;
        }
        else
        {
          if ((v9 & 0x10) != 0)
          {
            *(_DWORD *)v8 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v8 = v44[0];
          }
          v33 = *(_DWORD *)v8;
          *(_DWORD *)v8 += 2;
          if (!v33)
          {
            WTF::StringImpl::destroy(v8, v7);
LABEL_54:
            v34 = (uint64_t *)(v10 + 8);
            v44[0] = v8;
            v35 = *(unsigned int *)(v10 + 20);
            if ((_DWORD)v35 == *(_DWORD *)(v10 + 16))
            {
              v36 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v34, v35 + 1, (unint64_t)v44);
              v35 = *(unsigned int *)(v10 + 20);
              v37 = *(_QWORD *)(v10 + 8);
              v38 = *v36;
              *v36 = 0;
              *(_QWORD *)(v37 + 8 * v35) = v38;
            }
            else
            {
              v39 = *v34;
              v44[0] = 0;
              *(_QWORD *)(v39 + 8 * v35) = v8;
            }
            *(_DWORD *)(v10 + 20) = v35 + 1;
            v40 = v44[0];
            v44[0] = 0;
            if (v40)
            {
              if (*(_DWORD *)v40 == 2)
                WTF::StringImpl::destroy(v40, v7);
              else
                *(_DWORD *)v40 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v8 = v33;
        goto LABEL_54;
      }
      if (!*v6 || !*(_DWORD *)(*v6 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v46, (uint64_t)v44);
      if (v45)
      {
        v8 = v46;
        v10 = *a3;
        v9 = *((_DWORD *)v46 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v41 = v43;
      v43 = 0;
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v7);
        else
          *(_DWORD *)v41 -= 2;
      }
      if (++v5 == v4)
        return JSC::JSObject::getOwnPropertyNames();
    }
    v13 = *(uint64_t **)(v10 + 8);
    v14 = &v13[v11];
    while (1)
    {
      v15 = *v13;
      v16 = *v6;
      if (*v6
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v16 = *v6) != 0))
      {
        v17 = *(_DWORD *)(v16 - 8);
      }
      else
      {
        v17 = 0;
      }
      v18 = (~(v15 << 32) + v15) ^ ((unint64_t)(~(v15 << 32) + v15) >> 22);
      v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
      v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
      v21 = v17 & ((v20 >> 31) ^ v20);
      v22 = (uint64_t *)(v16 + 8 * v21);
      v23 = *v22;
      if (*v22)
      {
        v24 = 0;
        v25 = 1;
        while (v23 != v15)
        {
          if (v23 == -1)
            v24 = v22;
          v21 = (v21 + v25) & v17;
          v22 = (uint64_t *)(v16 + 8 * v21);
          v23 = *v22;
          ++v25;
          if (!*v22)
          {
            if (v24)
            {
              *v24 = 0;
              --*(_DWORD *)(*v6 - 16);
              v22 = v24;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v22 = v15;
      v26 = *v6;
      v27 = *v6 ? *(_DWORD *)(v26 - 12) + 1 : 1;
      *(_DWORD *)(v26 - 12) = v27;
      v28 = *v6;
      v29 = *v6 ? *(_DWORD *)(v28 - 12) : 0;
      v30 = (*(_DWORD *)(v28 - 16) + v29);
      v31 = *(unsigned int *)(v28 - 4);
      if (v31 > 0x400)
        break;
      if (3 * v31 <= 4 * v30)
      {
        if ((_DWORD)v31)
          goto LABEL_43;
        v32 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v13 == v14)
        goto LABEL_17;
    }
    if (v31 > 2 * v30)
      goto LABEL_47;
LABEL_43:
    v32 = (_DWORD)v31 << (6 * *(_DWORD *)(v28 - 12) >= (2 * v31));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v32, v22);
    goto LABEL_47;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSCSSKeyframesRule::defineOwnProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;

  if (!a3)
    return JSC::JSObject::defineOwnProperty();
  v5 = *(_DWORD *)(a3 + 16);
  if ((v5 & 0x20) != 0)
    return JSC::JSObject::defineOwnProperty();
  v6 = *(_BYTE **)(a3 + 8);
  v7 = *(unsigned int *)(a3 + 4);
  if ((v5 & 4) != 0)
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *v6 - 48;
    if (v8 > 9 || v7 >= 2 && *v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v14 = v7 - 1;
    v15 = v6 + 1;
    while (v14)
    {
      if (v8 <= 0x19999999)
      {
        v16 = *v15 - 48;
        if (v16 <= 9)
        {
          v13 = __CFADD__(v16, 10 * v8);
          v8 = v16 + 10 * v8;
          --v14;
          ++v15;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  else
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *(unsigned __int16 *)v6 - 48;
    if (v8 > 9 || v7 >= 2 && *(_WORD *)v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v10 = (unsigned __int16 *)(v6 + 2);
    v11 = v7 - 1;
    while (v11)
    {
      if (v8 <= 0x19999999)
      {
        v12 = *v10 - 48;
        if (v12 <= 9)
        {
          v13 = __CFADD__(v12, 10 * v8);
          v8 = v12 + 10 * v8;
          ++v10;
          --v11;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  if (v8 == -1)
    return JSC::JSObject::defineOwnProperty();
  if (a5)
    JSC::throwTypeError();
  return 0;
}

uint64_t WebCore::JSCSSKeyframesRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSKeyframesRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSKeyframesRulePrototype::create(WebCore::JSCSSKeyframesRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  JSC::Structure *v20;
  int v21;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  JSC::Structure **v30;
  int *v31;
  int v32;
  int v33;
  JSC::Structure *v34;
  int v35;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v23 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v23);
    *((_QWORD *)this + 4865) = SlowCase + (int)v23;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(this, (uint64_t)&WebCore::JSCSSKeyframesRule::s_info, &WebCore::JSCSSKeyframesRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2712);
  v10 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) + 672);
  v11 = (WTF::StringImpl *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  if (((unint64_t)v11 >> 4)
    && (((unint64_t)v11 >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x20)) == 0
    && (v12 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE)), this)) != 0&& (v26 = v11, v13 = JSC::PropertyTable::get(v12, (uint64_t *)&v26), (_DWORD)v13 != -1))
  {
    if ((int)v13 > 63)
    {
      v24 = *(_QWORD *)(v10 + 8) - 8;
      v25 = 0x3F00000000 - (v13 << 32);
    }
    else
    {
      v24 = v10 + 16;
      v25 = v13 << 32;
    }
    v14 = *(_QWORD *)(v24 + (v25 >> 29));
  }
  else
  {
    v14 = 0;
  }
  v26 = 0;
  v27 = SlowCase;
  v28 = 0x1000000FFFFFFFFLL;
  v29 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v9, v14, 4, (uint64_t)&v26);
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v15);
  else
    *(_DWORD *)v11 -= 2;
  v16 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v18 = JSC::JSString::create((uint64_t)this, &v26);
  v19 = v26;
  v26 = 0;
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v17);
    else
      *(_DWORD *)v19 -= 2;
  }
  v20 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v35 = *(_DWORD *)SlowCase;
  v34 = v20;
  v21 = JSC::Structure::outOfLineCapacity(v20);
  v32 = 0;
  v33 = v21;
  v26 = (WTF::StringImpl *)&v33;
  v27 = SlowCase;
  v28 = (uint64_t)this;
  v29 = &v35;
  v30 = &v34;
  v31 = &v32;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v20, this, v16, 6, (uint64_t)&v26);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v32, v18);
  *((_DWORD *)v20 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSKeyframesRule>,(WebCore::DOMConstructorID)340>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2720);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSKeyframesRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSKeyframesRule::s_info + ~((_QWORD)&WebCore::JSCSSKeyframesRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSKeyframesRule::s_info + ~((_QWORD)&WebCore::JSCSSKeyframesRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSKeyframesRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSKeyframesRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSRule::prototype((WebCore::JSCSSRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSKeyframesRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSKeyframesRulePrototype::create((WebCore::JSCSSKeyframesRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSKeyframesRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSKeyframesRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2720) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

uint64_t WebCore::JSCSSKeyframesRule::legacyPlatformObjectGetOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  JSC::VM *v6;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t result;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned int v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unsigned __int16 *v30;
  uint64_t v31;
  unsigned int v32;
  BOOL v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  _DWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  _DWORD *v48;
  unint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unsigned __int8 *v52;
  uint64_t v53;
  unsigned int v54;
  unint64_t v55;

  v6 = *(JSC::VM **)(a2 + 56);
  if (!a3)
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
      return JSC::JSObject::getOwnStaticPropertySlot();
    return 0;
  }
  v9 = *(_DWORD *)(a3 + 16);
  if ((v9 & 0x20) == 0)
  {
    v10 = *(_BYTE **)(a3 + 8);
    v11 = *(unsigned int *)(a3 + 4);
    if ((v9 & 4) != 0)
    {
      if (!(_DWORD)v11)
        goto LABEL_8;
      v12 = *v10 - 48;
      if (v12 > 9 || v11 >= 2 && *v10 == 48)
        goto LABEL_8;
      v39 = v11 - 1;
      v40 = v10 + 1;
      while (v39)
      {
        if (v12 <= 0x19999999)
        {
          v41 = *v40 - 48;
          if (v41 <= 9)
          {
            v25 = __CFADD__(v41, 10 * v12);
            v12 = v41 + 10 * v12;
            --v39;
            ++v40;
            if (!v25)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v11)
        goto LABEL_8;
      v12 = *(unsigned __int16 *)v10 - 48;
      if (v12 > 9 || v11 >= 2 && *(_WORD *)v10 == 48)
        goto LABEL_8;
      v22 = (unsigned __int16 *)(v10 + 2);
      v23 = v11 - 1;
      while (v23)
      {
        if (v12 <= 0x19999999)
        {
          v24 = *v22 - 48;
          if (v24 <= 9)
          {
            v25 = __CFADD__(v24, 10 * v12);
            v12 = v24 + 10 * v12;
            ++v22;
            --v23;
            if (!v25)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v12 != -1)
    {
      v42 = *(_QWORD *)(a1 + 24);
      if (*(_DWORD *)(*(_QWORD *)(v42 + 24) + 20) > v12)
      {
        if (*(_DWORD *)(v42 + 44) <= v12)
        {
          __break(0xC471u);
          JUMPOUT(0x1948A6704);
        }
        v43 = *(_QWORD *)(v42 + 32);
        v44 = *(_DWORD **)(v43 + 8 * v12);
        if (!v44)
        {
          v45 = WTF::fastMalloc((WTF *)0x28);
          v46 = *(_QWORD *)(v42 + 24);
          if (*(_DWORD *)(v46 + 20) <= v12)
          {
            __break(0xC471u);
            JUMPOUT(0x1948A670CLL);
          }
          v44 = (_DWORD *)v45;
          v47 = *(_DWORD **)(*(_QWORD *)(v46 + 8) + 8 * v12);
          *(_DWORD *)(v45 + 8) = 1;
          *(_BYTE *)(v45 + 12) &= 0xFCu;
          *(_QWORD *)v45 = off_1E33984D8;
          *(_QWORD *)(v45 + 16) = 0;
          ++*v47;
          *(_QWORD *)(v45 + 24) = v47;
          *(_QWORD *)(v45 + 32) = 0;
          *(_BYTE *)(v45 + 12) |= 2u;
          *(_QWORD *)(v45 + 16) = v42;
          v48 = *(_DWORD **)(v43 + 8 * v12);
          *(_QWORD *)(v43 + 8 * v12) = v44;
          if (v48)
          {
            if (v48[2] == 1)
            {
              (*(void (**)(_DWORD *))(*(_QWORD *)v48 + 8))(v48);
              v44 = *(_DWORD **)(v43 + 8 * v12);
              if (!v44)
              {
                v6 = *(JSC::VM **)(a2 + 56);
                goto LABEL_8;
              }
            }
            else
            {
              --v48[2];
            }
          }
        }
        v49 = WebCore::wrap<WebCore::CSSRule>(a2, *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v44);
        if (!*((_DWORD *)v6 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) == 0)
        {
          *(_QWORD *)a4 = v49;
          *(_DWORD *)(a4 + 16) = 2;
          *(_QWORD *)(a4 + 32) = a1;
          result = 1;
          *(_BYTE *)(a4 + 49) = 1;
          return result;
        }
        return 0;
      }
    }
  }
LABEL_8:
  if (!(a3 >> 4)
    || (v13 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v13 + 0x20)) != 0)
    || (v14 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v6)) == 0
    || (v55 = a3, v15 = JSC::PropertyTable::get(v14, (uint64_t *)&v55), (_DWORD)v15 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      return 1;
    v16 = *(_DWORD *)(a3 + 16);
    if ((v16 & 0x20) != 0)
      return 0;
    v17 = *(_BYTE **)(a3 + 8);
    v18 = *(unsigned int *)(a3 + 4);
    if ((v16 & 4) != 0)
    {
      if ((_DWORD)v18)
      {
        v50 = *v17 - 48;
        if (v50 > 9 || v18 >= 2 && *v17 == 48)
        {
LABEL_87:
          v51 = 0;
        }
        else
        {
          v52 = v17 + 1;
          v53 = v18 - 1;
          while (v53)
          {
            if (v50 > 0x19999999)
              goto LABEL_87;
            v54 = *v52 - 48;
            if (v54 > 9)
              goto LABEL_87;
            v51 = 0;
            v25 = __CFADD__(v54, 10 * v50);
            v50 = v54 + 10 * v50;
            ++v52;
            --v53;
            if (v25)
              goto LABEL_88;
          }
          v51 = 0x100000000;
          if (v50 == -1)
            v51 = 0;
        }
      }
      else
      {
        v51 = 0;
      }
LABEL_88:
      if ((v51 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      if ((_DWORD)v18)
      {
        v19 = *(unsigned __int16 *)v17 - 48;
        if (v19 > 9 || v18 >= 2 && *(_WORD *)v17 == 48)
        {
LABEL_19:
          v20 = 0;
        }
        else
        {
          v30 = (unsigned __int16 *)(v17 + 2);
          v31 = v18 - 1;
          while (v31)
          {
            if (v19 <= 0x19999999)
            {
              v32 = *v30 - 48;
              if (v32 <= 9)
              {
                v25 = __CFADD__(v32, 10 * v19);
                v19 = v32 + 10 * v19;
                ++v30;
                --v31;
                if (!v25)
                  continue;
              }
            }
            goto LABEL_19;
          }
          v33 = v19 == -1;
          v20 = 0x100000000;
          if (v33)
            v20 = 0;
        }
      }
      else
      {
        v20 = 0;
      }
      if ((v20 & 0x100000000) == 0)
        return 0;
    }
    return JSC::JSObject::getOwnPropertySlotByIndex();
  }
  if ((int)v15 > 63)
  {
    v26 = *(_QWORD *)(a1 + 8) - 8;
    v27 = 0x3F00000000 - (v15 << 32);
  }
  else
  {
    v26 = a1 + 16;
    v27 = v15 << 32;
  }
  v28 = *(_QWORD *)(v26 + (v27 >> 29));
  if ((v28 & 0xFFFE000000000002) != 0)
  {
LABEL_36:
    *(_QWORD *)a4 = v28;
    *(_QWORD *)(a4 + 32) = a1;
    *(_DWORD *)(a4 + 16) = HIDWORD(v15);
    *(_DWORD *)(a4 + 20) = v15;
    result = 1;
    *(_WORD *)(a4 + 48) = 257;
    return result;
  }
  v29 = *(unsigned __int8 *)(v28 + 5);
  if (v29 != 6)
  {
    if (v29 == 5)
    {
      JSC::JSObject::fillGetterPropertySlot();
      return 1;
    }
    goto LABEL_36;
  }
  v34 = *(_DWORD *)(v13 + 16) & 3;
  v36 = *(_QWORD *)(v28 + 8);
  v35 = *(_QWORD *)(v28 + 16);
  if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x4C))
  {
    v38 = *(_QWORD *)(v28 + 24);
    v37 = *(_QWORD *)(v28 + 32);
    *(_QWORD *)a4 = v36;
    *(_QWORD *)(a4 + 8) = v35;
    *(_DWORD *)(a4 + 16) = HIDWORD(v15);
    *(_QWORD *)(a4 + 32) = a1;
    *(_BYTE *)(a4 + 49) = 3;
    result = 1;
    if (v34 != 2)
      *(_BYTE *)(a4 + 48) = 1;
    *(_BYTE *)(a4 + 51) = 1;
    *(_QWORD *)(a4 + 72) = v38;
    *(_QWORD *)(a4 + 80) = v37;
  }
  else
  {
    *(_QWORD *)a4 = v36;
    *(_QWORD *)(a4 + 8) = v35;
    *(_DWORD *)(a4 + 16) = HIDWORD(v15);
    *(_QWORD *)(a4 + 32) = a1;
    result = 1;
    *(_BYTE *)(a4 + 49) = 3;
    if (v34 != 2)
      *(_BYTE *)(a4 + 48) = 1;
  }
  return result;
}

unint64_t WebCore::jsCSSKeyframesRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSKeyframesRulePrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSKeyframesRule>,(WebCore::DOMConstructorID)340>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSKeyframesRule_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 24) + 24);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

BOOL WebCore::setJSCSSKeyframesRule_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::CSSRule *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v17;
  int v18;
  _BYTE v19[32];

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSCSSKeyframesRule::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSCSSKeyframesRule::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::CSSRule **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v17);
  v9 = v18;
  v10 = v18 == 0;
  if (!v18)
  {
    v11 = v17;
    v17 = 0;
    WebCore::CSSStyleSheet::RuleMutationScope::RuleMutationScope((WebCore::CSSStyleSheet::RuleMutationScope *)v19, v8);
    v13 = *((_QWORD *)v8 + 3);
    if (v11)
      *(_DWORD *)v11 += 2;
    v14 = *(WTF::StringImpl **)(v13 + 24);
    *(_QWORD *)(v13 + 24) = v11;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v12);
      else
        *(_DWORD *)v14 -= 2;
    }
    WebCore::CSSStyleSheet::RuleMutationScope::~RuleMutationScope((WebCore::CSSStyleSheet::RuleMutationScope *)v19, v12);
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v15);
      else
        *(_DWORD *)v11 -= 2;
    }
    v9 = v18;
  }
  if (v9 != -1)
    ((void (*)(_BYTE *, WTF::StringImpl **))off_1E322E3B0[v9])(v19, &v17);
  return v10;
}

unint64_t WebCore::jsCSSKeyframesRule_cssRules(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(WTF **)(v3 + 48);
  if (!v5)
  {
    v5 = (WTF *)WTF::fastMalloc((WTF *)0x10);
    *(_QWORD *)v5 = off_1E3398698;
    *((_QWORD *)v5 + 1) = v3;
    v6 = *(_QWORD *)(v3 + 48);
    *(_QWORD *)(v3 + 48) = v5;
    if (v6)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
      v5 = *(WTF **)(v3 + 48);
    }
  }
  return WebCore::toJS(a1, v4, v5);
}

unint64_t WebCore::jsCSSKeyframesRule_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 24) + 20);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::JSCSSKeyframesRule::subspaceForImpl(WebCore::JSCSSKeyframesRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2760);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2760);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2760);
    *(_QWORD *)(v8 + 2760) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2760);
  *(_QWORD *)(v3 + 2760) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSKeywordValue>::construct(JSC *this, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  WTF::StringImpl *v6;
  WebCore::JSDOMGlobalObject *v7;
  int v8;
  int *v9;
  unsigned __int8 v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  JSC::VM *v15;
  uint64_t (***v16)();
  JSCell *v17;
  uint64_t (***v18)();
  JSC::JSCell *v19;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v21;
  JSC::JSGlobalObject *v22;
  JSC::VM *v23;
  JSC::JSObject *v24;
  JSC::Structure *v25;
  JSC::VM *FunctionRealm;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char **v33;
  int v34;
  JSC::JSCell *v35;
  unint64_t Structure;
  JSC::Structure *v37;
  JSC::JSCell *v38;
  uint64_t v39;
  unint64_t SubclassStructure;
  JSValue v42;
  JSValue v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  uint64_t (***v46)();
  uint64_t v47;
  int v48;
  int *v49;
  int v50;
  uint64_t (***v51)();
  WTF::StringImpl *v52;

  v3 = *((_QWORD *)this + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v42.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v3, this, v42);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(this, *(_QWORD *)(a2 + 48), (uint64_t)&v49);
  v8 = v50;
  if (!v50)
  {
    v9 = v49;
    v49 = 0;
    if (v9)
    {
      if (v9[1])
      {
        v12 = bmalloc::api::isoAllocate();
        v10 = v12;
        v11 = 0;
        *(_DWORD *)(v12 + 8) = 1;
        *(_QWORD *)(v12 + 24) = 0;
        *(_QWORD *)(v12 + 32) = 0;
        *(_QWORD *)(v12 + 16) = 0;
        *(_QWORD *)v12 = &off_1E339E7E0;
        v13 = *v9 + 2;
        *v9 = v13;
        *(_QWORD *)(v12 + 40) = v9;
        v46 = (uint64_t (***)())v12;
      }
      else
      {
        v10 = 33;
        LOBYTE(v46) = 33;
        v47 = 0;
        v13 = *v9;
        v11 = 1;
      }
      v48 = v11;
      v14 = v13 - 2;
      if (v14)
        *v9 = v14;
      else
        WTF::StringImpl::destroy((WTF::StringImpl *)v9, v6);
    }
    else
    {
      v10 = 33;
      LOBYTE(v46) = 33;
      v47 = 0;
      v11 = 1;
      v48 = 1;
    }
    if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
      goto LABEL_52;
    if (v11)
    {
      LOBYTE(v51) = v10;
      v47 = 0;
      v52 = 0;
      if (!*(_QWORD *)(v3 + 16))
      {
        v43.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v10, (JSC::JSGlobalObject *)&v52);
        JSC::VM::throwException((JSC::VM *)v3, this, v43);
        v45 = v52;
        v52 = 0;
        if (v45)
        {
          if (*(_DWORD *)v45 == 2)
            WTF::StringImpl::destroy(v45, v44);
          else
            *(_DWORD *)v45 -= 2;
        }
      }
      v17 = 0;
    }
    else
    {
      v15 = *(JSC::VM **)(v5 + 40);
      v16 = v46;
      v46 = 0;
      v51 = v16;
      if (*v16 != &off_1E339E7E0)
      {
        __break(0xC471u);
        JUMPOUT(0x1948A704CLL);
      }
      v17 = (JSCell *)WebCore::createWrapper<WebCore::CSSKeywordValue,WebCore::CSSKeywordValue>(v15, (uint64_t *)&v51, v7);
      v18 = v51;
      v51 = 0;
      if (v18)
      {
        if (*((_DWORD *)v18 + 2) == 1)
          ((void (*)(uint64_t (***)()))(*v18)[2])(v18);
        else
          --*((_DWORD *)v18 + 2);
      }
    }
    if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
    {
LABEL_52:
      v17 = 0;
LABEL_31:
      if (v48 != -1)
        ((void (*)(uint64_t (****)(), uint64_t (****)()))off_1E32300D0[v48])(&v51, &v46);
      v8 = v50;
      goto LABEL_34;
    }
    v19 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v19 & 0xFFFE000000000002) != 0
      || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v19)) == 0
      || (v22 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v23 = (JSC::VM *)*((_QWORD *)this + 7),
          FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v21),
          *((_DWORD *)v23 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) != 0)
    {
LABEL_30:
      if (!*(_DWORD *)(v3 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) == 0)
        goto LABEL_31;
      goto LABEL_52;
    }
    v27 = *((_QWORD *)FunctionRealm + 412);
    if (v27)
    {
      v28 = *(_DWORD *)(v27 - 8);
      v29 = ((unint64_t)&WebCore::JSCSSKeywordValue::s_info + ~((_QWORD)&WebCore::JSCSSKeywordValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSKeywordValue::s_info + ~((_QWORD)&WebCore::JSCSSKeywordValue::s_info << 32)) >> 22);
      v30 = 9 * ((v29 + ~(v29 << 13)) ^ ((v29 + ~(v29 << 13)) >> 8));
      v31 = (v30 ^ (v30 >> 15)) + ~((v30 ^ (v30 >> 15)) << 27);
      v32 = v28 & ((v31 >> 31) ^ v31);
      v33 = *(char ***)(v27 + 16 * v32);
      if (v33 == &WebCore::JSCSSKeywordValue::s_info)
      {
LABEL_26:
        v24 = *(JSC::JSObject **)(v27 + 16 * v32 + 8);
        if (v24)
        {
LABEL_28:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v22, v24, v25);
          if (!*((_DWORD *)v23 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) == 0)
            JSC::JSObject::setStructure(v17, v23, SubclassStructure);
          goto LABEL_30;
        }
      }
      else
      {
        v34 = 1;
        while (v33)
        {
          v32 = ((_DWORD)v32 + v34) & v28;
          v33 = *(char ***)(v27 + 16 * v32);
          ++v34;
          if (v33 == &WebCore::JSCSSKeywordValue::s_info)
            goto LABEL_26;
        }
      }
    }
    v35 = (JSC::JSCell *)WebCore::JSCSSStyleValue::prototype(v23, FunctionRealm, v24);
    Structure = WebCore::JSCSSKeywordValuePrototype::createStructure((uint64_t *)v23, (uint64_t)FunctionRealm, v35);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v38 = (JSC::JSCell *)WebCore::JSCSSKeywordValuePrototype::create(v23, FunctionRealm, Structure, v37);
    v39 = WebCore::JSCSSKeywordValue::createStructure((uint64_t *)v23, (uint64_t)FunctionRealm, v38);
    v24 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v39, (uint64_t)&WebCore::JSCSSKeywordValue::s_info);
    goto LABEL_28;
  }
  v17 = 0;
LABEL_34:
  if (v8 != -1)
    ((void (*)(uint64_t (****)(), int **))off_1E322E100[v8])(&v46, &v49);
  return v17;
}

uint64_t WebCore::JSCSSKeywordValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSKeywordValuePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSKeywordValuePrototype::create(WebCore::JSCSSKeywordValuePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSKeywordValue::s_info, (uint64_t)&WebCore::JSCSSKeywordValuePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSKeywordValue>,(WebCore::DOMConstructorID)374>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2992);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCSSKeywordValue>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSKeywordValue::s_info + ~((_QWORD)&WebCore::JSCSSKeywordValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSKeywordValue::s_info + ~((_QWORD)&WebCore::JSCSSKeywordValue::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSKeywordValue::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSKeywordValue::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSStyleValue::prototype((WebCore::JSCSSStyleValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSKeywordValuePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSKeywordValuePrototype::create((WebCore::JSCSSKeywordValuePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSKeywordValue::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSKeywordValue::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2992) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSKeywordValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSKeywordValuePrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSKeywordValue>,(WebCore::DOMConstructorID)374>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSKeywordValue_value(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 40);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

BOOL WebCore::setJSCSSKeywordValue_value(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  _BOOL8 v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  JSValue v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v22;
  int v23;
  _BYTE v24[8];
  WTF::StringImpl *v25;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSKeywordValue::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSKeywordValue::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v22);
  v12 = v23;
  v13 = v23 == 0;
  if (!v23)
  {
    v14 = v22;
    v22 = 0;
    if (!v14)
    {
      v15 = 33;
LABEL_15:
      v24[0] = v15;
      v25 = 0;
      if (!*((_QWORD *)v4 + 2))
      {
        v16.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v15, (JSC::JSGlobalObject *)&v25);
        JSC::VM::throwException(v4, a1, v16);
        v18 = v25;
        v25 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v17);
          else
            *(_DWORD *)v18 -= 2;
        }
      }
      goto LABEL_26;
    }
    v19 = *((_DWORD *)v14 + 1);
    if (v19)
    {
      *(_DWORD *)v14 += 2;
      v20 = *(WTF::StringImpl **)(v10 + 40);
      *(_QWORD *)(v10 + 40) = v14;
      if (v20)
      {
        if (*(_DWORD *)v20 != 2)
        {
          v15 = 0;
          *(_DWORD *)v20 -= 2;
          goto LABEL_24;
        }
        WTF::StringImpl::destroy(v20, v11);
      }
      v15 = 0;
    }
    else
    {
      v15 = 33;
    }
LABEL_24:
    if (*(_DWORD *)v14 == 2)
    {
      WTF::StringImpl::destroy(v14, v11);
      if (!v19)
        goto LABEL_15;
    }
    else
    {
      *(_DWORD *)v14 -= 2;
      if (!v19)
        goto LABEL_15;
    }
LABEL_26:
    v12 = v23;
  }
  if (v12 != -1)
    ((void (*)(_BYTE *, WTF::StringImpl **))off_1E322E100[v12])(v24, &v22);
  return v13;
}

uint64_t WebCore::JSCSSKeywordValue::subspaceForImpl(WebCore::JSCSSKeywordValue *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3040);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3040))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3040);
    *(_QWORD *)(v8 + 3040) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3040);
  *(_QWORD *)(v3 + 3040) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::CSSKeywordValue,WebCore::CSSKeywordValue>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSStyleValue *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSCSSKeywordValue::s_info + ~((_QWORD)&WebCore::JSCSSKeywordValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSKeywordValue::s_info + ~((_QWORD)&WebCore::JSCSSKeywordValue::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSCSSKeywordValue::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSCSSKeywordValue::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSCSSStyleValue *)*((_QWORD *)a1 + 7);
    v16 = (JSC::JSCell *)WebCore::JSCSSStyleValue::prototype(v15, a1, a3);
    Structure = WebCore::JSCSSKeywordValuePrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSCSSKeywordValuePrototype::create(v15, a1, Structure, v18);
    v20 = WebCore::JSCSSKeywordValue::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSCSSKeywordValue::s_info);
  }
  v21 = WebCore::JSCSSKeywordValue::create(v14, a1, a2);
  WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(*((_QWORD *)a1 + 415), v5, v21);
  return v21;
}

uint64_t WebCore::wrap<WebCore::CSSKeywordValue>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t result;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _DWORD *v16;

  v3 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v3 + 48))
  {
    v8 = *(_QWORD *)(v3 + 32);
    if (!v8)
      goto LABEL_5;
    v9 = *(_DWORD *)(v8 - 8);
    v10 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(_QWORD *)(v8 + 16 * v13);
    if (v14 != a3)
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(_QWORD *)(v8 + 16 * v13);
        ++v15;
        if (v14 == a3)
          goto LABEL_16;
      }
      goto LABEL_5;
    }
LABEL_16:
    v4 = *(_QWORD *)(v8 + 16 * v13 + 8);
    if (!v4)
      goto LABEL_5;
  }
  else
  {
    v4 = *(_QWORD *)(a3 + 16);
    if (!v4)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v4 + 8) & 3) == 0)
  {
    v5 = *(_QWORD *)v4;
    if (*(_QWORD *)v4)
      return v5;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 8);
  v16 = (_DWORD *)a3;
  if (*(uint64_t (***)())a3 == &off_1E339E7E0)
  {
    v5 = WebCore::createWrapper<WebCore::CSSKeywordValue,WebCore::CSSKeywordValue>(a2, (uint64_t *)&v16, (WebCore::JSDOMGlobalObject *)a3);
    v6 = v16;
    v16 = 0;
    if (v6)
    {
      if (v6[2] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 16))(v6);
      else
        --v6[2];
    }
    return v5;
  }
  result = 262;
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSCSSLCH>::construct(JSC::VM **a1, uint64_t a2)
{
  uint64_t v2;
  JSC::JSGlobalObject *v3;
  JSC::VM *v4;
  uint64_t v6;
  int v7;
  int v8;
  WTF *v9;
  int v10;
  unint64_t SlowCase;
  int v12;
  WebCore::JSDOMGlobalObject *v13;
  JSC::VM *v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  WebCore::JSCSSColorValue *v24;
  JSC::JSCell *v25;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v27;
  JSC::Structure *v28;
  JSC::JSCell *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  WTF *v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  _BYTE *v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  JSC::VM *v52;
  JSC::JSCell *v53;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v55;
  JSC::JSGlobalObject *v56;
  JSC::VM *v57;
  JSC::JSObject *v58;
  JSC::Structure *v59;
  JSC::VM *FunctionRealm;
  uint64_t v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  JSC::JSGlobalObject *v67;
  int v68;
  JSC::JSCell *v69;
  unint64_t v70;
  WebCore::JSDOMGlobalObject *v71;
  JSC::Structure *v72;
  JSC::JSCell *v73;
  uint64_t v74;
  unint64_t SubclassStructure;
  unint64_t v77;
  uint64_t v78;
  _QWORD *Allocator;
  JSValue v80;
  WTF::StringImpl *v81;
  WTF::StringImpl *v82;
  JSValue v83;
  unint64_t v84;
  JSC::VM *v85;
  JSC::InternalFunction *v86;
  char v87[8];
  int v88;
  char v89[8];
  int v90;
  _QWORD *v91;
  int v92;
  int v93[2];
  WTF::StringImpl *v94;
  int v95;
  char v96;
  WTF *v97;
  WTF::StringImpl *v98;
  char v99[8];
  uint64_t v100;
  unsigned int v101;
  int v102;
  char v103[8];
  uint64_t v104;
  unsigned int v105;
  int v106;
  char v107[8];
  uint64_t v108;
  unsigned int v109;
  int v110;
  char v111[8];
  uint64_t v112;
  unsigned int v113;
  int v114;
  uint64_t v115;

  v3 = (JSC::JSGlobalObject *)a1;
  v115 = *MEMORY[0x1E0C80C00];
  v4 = a1[7];
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 2)
  {
    v80.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)a1, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException(v4, v3, v80);
  }
  v6 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert((JSC::JSGlobalObject *)a1, *(_QWORD *)(a2 + 48), (uint64_t)v111);
  v7 = v114;
  if (!v114)
  {
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, *(_QWORD *)(a2 + 56), (uint64_t)v107);
    v8 = v110;
    if (v110)
    {
      SlowCase = 0;
LABEL_98:
      if (v8 != -1)
        ((void (*)(char *, uint64_t *))off_1E322FCA0[v8])(v103, &v108);
      v7 = v114;
      goto LABEL_101;
    }
    v9 = *(WTF **)(a2 + 64);
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, (unint64_t)v9, (uint64_t)v103);
    v10 = v106;
    if (v106)
    {
      SlowCase = 0;
LABEL_95:
      if (v10 != -1)
        ((void (*)(char *, uint64_t *))off_1E322FCA0[v10])(v99, &v104);
      v8 = v110;
      goto LABEL_98;
    }
    v86 = v3;
    if ((unint64_t)(*(int *)(a2 + 32) - 5) >= 0xFFFFFFFFFFFFFFFCLL
      || (SlowCase = *(_QWORD *)(a2 + 72), SlowCase == 10))
    {
      v100 = 0x3FF0000000000000;
      v101 = 0;
      v102 = 0;
      SlowCase = 10;
    }
    else
    {
      WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, *(_QWORD *)(a2 + 72), (uint64_t)v99);
      v12 = v102;
      if (v102)
      {
        SlowCase = 0;
LABEL_92:
        if (v12 != -1)
          ((void (*)(int *, uint64_t *))off_1E322FCA0[v12])(v93, &v100);
        v10 = v106;
        goto LABEL_95;
      }
    }
    if (!v114)
    {
      LOBYTE(v97) = 0;
      LODWORD(v98) = -1;
      v2 = v113;
      v3 = (JSC::JSGlobalObject *)off_1E322FC70;
      if (v113 != -1)
      {
        ((void (*)(int *, WTF **, uint64_t *))off_1E322FC70[v113])(v93, &v97, &v112);
        LODWORD(v98) = v2;
      }
      if (!v110)
      {
        LOBYTE(v91) = 0;
        v92 = -1;
        v2 = v109;
        if (v109 != -1)
        {
          ((void (*)(int *, _QWORD **, uint64_t *))off_1E322FC70[v109])(v93, &v91, &v108);
          v92 = v2;
        }
        if (!v106)
        {
          v89[0] = 0;
          v90 = -1;
          v2 = v105;
          if (v105 != -1)
          {
            ((void (*)(int *, char *, uint64_t *))off_1E322FC70[v105])(v93, v89, &v104);
            v90 = v2;
          }
          if (!v102)
          {
            v87[0] = 0;
            v88 = -1;
            v2 = v101;
            if (v101 != -1)
            {
              ((void (*)(int *, char *, uint64_t *))off_1E322FC70[v101])(v93, v87, &v100);
              v88 = v2;
            }
            WebCore::CSSLCH::create((uint64_t)&v97, (uint64_t)&v91, (uint64_t)v89, (uint64_t)v87, (uint64_t)v93);
            if (v88 != -1)
              ((void (*)(char *, char *))off_1E322FC50[v88])(&v96, v87);
            if (v90 != -1)
              ((void (*)(char *, char *))off_1E322FC50[v90])(v87, v89);
            if (v92 != -1)
              ((void (*)(char *, _QWORD **))off_1E322FC50[v92])(v89, &v91);
            if ((_DWORD)v98 != -1)
              ((void (*)(_QWORD **, WTF **))off_1E322FC50[v98])(&v91, &v97);
            if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
              goto LABEL_134;
            v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSLCH::s_info;
            if (!v95)
            {
              v85 = v4;
              v14 = *(JSC::VM **)(v6 + 40);
              v9 = *(WTF **)v93;
              *(_QWORD *)v93 = 0;
              if (*(uint64_t (***)())v9 != &off_1E339F750)
              {
                __break(0xC471u);
                JUMPOUT(0x1948A8950);
              }
              v15 = *((_QWORD *)v14 + 412);
              if (v15)
              {
                v16 = *(_DWORD *)(v15 - 8);
                v17 = ((unint64_t)&WebCore::JSCSSLCH::s_info + ~((_QWORD)&WebCore::JSCSSLCH::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSLCH::s_info + ~((_QWORD)&WebCore::JSCSSLCH::s_info << 32)) >> 22);
                v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
                v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
                v20 = v16 & ((v19 >> 31) ^ v19);
                v21 = *(char ***)(v15 + 16 * v20);
                if (v21 == &WebCore::JSCSSLCH::s_info)
                {
LABEL_37:
                  v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
                  if (v23)
                    goto LABEL_39;
                }
                else
                {
                  v22 = 1;
                  while (v21)
                  {
                    v20 = ((_DWORD)v20 + v22) & v16;
                    v21 = *(char ***)(v15 + 16 * v20);
                    ++v22;
                    if (v21 == &WebCore::JSCSSLCH::s_info)
                      goto LABEL_37;
                  }
                }
              }
              v24 = (WebCore::JSCSSColorValue *)*((_QWORD *)v14 + 7);
              v25 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v24, v14, v13);
              Structure = WebCore::JSCSSLCHPrototype::createStructure((uint64_t *)v24, (uint64_t)v14, v25);
              *(_DWORD *)(Structure + 16) |= 0x80000u;
              v29 = (JSC::JSCell *)WebCore::JSCSSLCHPrototype::create(v24, Structure, v27, v28);
              v30 = WebCore::JSCSSLCH::createStructure((uint64_t *)v24, (uint64_t)v14, v29);
              v23 = WebCore::cacheDOMStructure((JSCell *)v14, v30, (uint64_t)&WebCore::JSCSSLCH::s_info);
LABEL_39:
              v31 = *((_QWORD *)v14 + 7);
              v32 = *(_QWORD *)(v31 + 41456);
              v33 = *(_QWORD *)(v32 + 23536);
              v34 = *(_QWORD **)(v33 + 3160);
              if (v34)
                goto LABEL_59;
              v35 = *(_QWORD *)(v32 + 22648);
              if (__ldaxr((unsigned __int8 *)v35))
              {
                __clrex();
              }
              else if (!__stxr(1u, (unsigned __int8 *)v35))
              {
                goto LABEL_44;
              }
              MEMORY[0x19AEA534C](v35);
LABEL_44:
              v37 = *(_QWORD *)(v35 + 2824);
              if (!*(_QWORD *)(v37 + 3160))
              {
                v38 = WTF::fastMalloc((WTF *)0xF8);
                WTF::CString::CString((WTF::CString *)&v97, "IsoSpace T");
                v91 = 0;
                MEMORY[0x19AEA3204](v38, &v97, v31 + 192, v31 + 1872, 32, 8, &v91);
                v40 = (uint64_t)v91;
                v91 = 0;
                if (v40)
                  (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
                v41 = v97;
                v97 = 0;
                if (v41)
                {
                  if (*(_DWORD *)v41 == 1)
                    WTF::fastFree(v41, v39);
                  else
                    --*(_DWORD *)v41;
                }
                v42 = *(_QWORD *)(v37 + 3160);
                *(_QWORD *)(v37 + 3160) = v38;
                if (v42)
                  (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
              }
              v34 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
              JSC::GCClient::IsoSubspace::IsoSubspace();
              v43 = *(_QWORD *)(v33 + 3160);
              *(_QWORD *)(v33 + 3160) = v34;
              if (v43)
              {
                v44 = (WTF *)MEMORY[0x19AEA3528]();
                WTF::fastFree(v44, v45);
              }
              v46 = __ldxr((unsigned __int8 *)v35);
              if (v46 == 1)
              {
                if (!__stlxr(0, (unsigned __int8 *)v35))
                {
LABEL_59:
                  SlowCase = v34[3];
                  if (SlowCase >= v34[4])
                  {
                    SlowCase = v34[5];
                    if ((SlowCase & 1) != 0)
                    {
                      JSC::sanitizeStackForVM();
                      SlowCase = JSC::LocalAllocator::allocateSlowCase();
                    }
                    else
                    {
                      v84 = *(_QWORD *)(SlowCase + 8) ^ v34[6];
                      v34[4] = SlowCase + HIDWORD(v84);
                      v34[5] = SlowCase + (int)v84;
                      v34[3] = SlowCase + 32;
                    }
                  }
                  else
                  {
                    v34[3] = SlowCase + 32;
                  }
                  *(_DWORD *)SlowCase = 0;
                  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
                  *(_QWORD *)(SlowCase + 24) = v9;
                  v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSLCH::s_info;
                  if (*(_BYTE *)(v31 + 755))
                    __dmb(0xAu);
                  v2 = *((_QWORD *)v14 + 415);
                  v47 = &unk_1EE2DD000;
                    goto LABEL_64;
                  goto LABEL_144;
                }
              }
              else
              {
                __clrex();
              }
              WTF::Lock::unlockSlow((WTF::Lock *)v35);
              goto LABEL_59;
            }
            if (v95 == 1)
            {
              v81 = (WTF::StringImpl *)LOBYTE(v93[0]);
              LOBYTE(v97) = v93[0];
              v82 = v94;
              v94 = 0;
              v98 = v82;
              if (!*((_QWORD *)v4 + 2))
              {
                v83.super.isa = (Class)WebCore::createDOMException(v86, (JSC::JSGlobalObject *)LOBYTE(v93[0]), (JSC::JSGlobalObject *)&v98);
                JSC::VM::throwException(v4, v86, v83);
                v82 = v98;
              }
              v98 = 0;
              if (v82)
              {
                if (*(_DWORD *)v82 == 2)
                  WTF::StringImpl::destroy(v82, v81);
                else
                  *(_DWORD *)v82 -= 2;
              }
              SlowCase = 0;
LABEL_74:
              if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
              {
LABEL_134:
                SlowCase = 0;
LABEL_89:
                if (v95 != -1)
                  ((void (*)(WTF **, int *))off_1E3230130[v95])(&v97, v93);
                v12 = v102;
                goto LABEL_92;
              }
              v52 = v4;
              v53 = *(JSC::JSCell **)(a2 + 40);
              if (((unint64_t)v53 & 0xFFFE000000000002) != 0
                || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v53)) == 0
                || (v56 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
                || (v57 = (JSC::VM *)*((_QWORD *)v86 + 7),
                    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(v86, Object, v55),
                    *((_DWORD *)v57 + 20))
                && (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) != 0)
              {
LABEL_88:
                if (!*((_DWORD *)v52 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v52) & 1) == 0)
                  goto LABEL_89;
                goto LABEL_134;
              }
              v61 = *((_QWORD *)FunctionRealm + 412);
              if (v61)
              {
                v62 = *(_DWORD *)(v61 - 8);
                v63 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
                v64 = 9 * ((v63 + ~(v63 << 13)) ^ ((v63 + ~(v63 << 13)) >> 8));
                v65 = (v64 ^ (v64 >> 15)) + ~((v64 ^ (v64 >> 15)) << 27);
                v66 = v62 & ((v65 >> 31) ^ v65);
                v67 = *(JSC::JSGlobalObject **)(v61 + 16 * v66);
                if (v67 == v3)
                {
LABEL_84:
                  v58 = *(JSC::JSObject **)(v61 + 16 * v66 + 8);
                  if (v58)
                  {
LABEL_86:
                    SubclassStructure = JSC::InternalFunction::createSubclassStructure(v86, v56, v58, v59);
                    if (!*((_DWORD *)v57 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) == 0)
                      JSC::JSObject::setStructure((JSCell *)SlowCase, v57, SubclassStructure);
                    goto LABEL_88;
                  }
                }
                else
                {
                  v68 = 1;
                  while (v67)
                  {
                    v66 = ((_DWORD)v66 + v68) & v62;
                    v67 = *(JSC::JSGlobalObject **)(v61 + 16 * v66);
                    ++v68;
                    if (v67 == v3)
                      goto LABEL_84;
                  }
                }
              }
              v69 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v57, FunctionRealm, v58);
              v70 = WebCore::JSCSSLCHPrototype::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v69);
              *(_DWORD *)(v70 + 16) |= 0x80000u;
              v73 = (JSC::JSCell *)WebCore::JSCSSLCHPrototype::create(v57, v70, v71, v72);
              v74 = WebCore::JSCSSLCH::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v73);
              v58 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v74, (uint64_t)&WebCore::JSCSSLCH::s_info);
              goto LABEL_86;
            }
          }
        }
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_144:
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner = (uint64_t)&off_1E324B170;
    v47[3656] = 1;
LABEL_64:
    v4 = v85;
    if (*(_DWORD *)(v2 + 48))
    {
      v97 = v9;
      if ((SlowCase & 8) != 0)
        v77 = (SlowCase - 112) | 1;
      else
        v77 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v77 & 1) != 0)
        v78 = v77 + 47;
      else
        v78 = *(_QWORD *)v77 + 32;
      Allocator = *(_QWORD **)(v78 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v78 + 16) = *Allocator;
      *Allocator = SlowCase;
      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      Allocator[2] = v2;
      v91 = Allocator;
      JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v2 + 32), (uint64_t *)&v97, (uint64_t *)&v91);
      if (v91)
        v91[1] = 3;
      v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSLCH::s_info;
    }
    else
    {
      if ((SlowCase & 8) != 0)
        v48 = (SlowCase - 112) | 1;
      else
        v48 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v48 & 1) != 0)
        v49 = v48 + 47;
      else
        v49 = *(_QWORD *)v48 + 32;
      v50 = *(_QWORD **)(v49 + 16);
      if (!v50)
        v50 = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v49 + 16) = *v50;
      *v50 = SlowCase;
      v50[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      v50[2] = v2;
      v51 = *((_QWORD *)v9 + 2);
      *((_QWORD *)v9 + 2) = v50;
      if (v51)
        *(_QWORD *)(v51 + 8) = 3;
    }
    goto LABEL_74;
  }
  SlowCase = 0;
LABEL_101:
  if (v7 != -1)
    ((void (*)(char *, uint64_t *))off_1E322FCA0[v7])(v107, &v112);
  return SlowCase;
}

uint64_t WebCore::JSCSSLCH::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSLCHPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSLCHPrototype::create(WebCore::JSCSSLCHPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCSSLCH::s_info, &WebCore::JSCSSLCHPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLCH>,(WebCore::DOMConstructorID)387>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3096);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSCSSLCH>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000003, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSLCH::s_info + ~((_QWORD)&WebCore::JSCSSLCH::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSLCH::s_info + ~((_QWORD)&WebCore::JSCSSLCH::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSLCH::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSLCH::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype((WebCore::JSCSSColorValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSLCHPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSCSSLCHPrototype::create((WebCore::JSCSSLCHPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSCSSLCH::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSCSSLCH::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3096) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSLCHConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSLCHPrototype::s_info != (char **)(16
                                                      * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLCH>,(WebCore::DOMConstructorID)387>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSLCH_l(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 48);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSLCH_l(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue15toCSSColorAngleERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_15toCSSColorAngleESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 40);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSLCH_l(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSLCH::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSLCH::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setL(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSLCH_c(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 64);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSLCH_c(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue15toCSSColorAngleERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_15toCSSColorAngleESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 56);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSLCH_c(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSLCH::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSLCH::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setC(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSLCH_h(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 80);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSLCH_h(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue15toCSSColorAngleERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_15toCSSColorAngleESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 72);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSLCH_h(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSLCH::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSLCH::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setH(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSLCH_alpha(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 96);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSLCH_alpha(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 88);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSLCH_alpha(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSLCH::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSLCH::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setAlpha(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v18, &v25);
  return v12;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSCSSLab>::construct(JSC::VM **a1, uint64_t a2)
{
  uint64_t v2;
  JSC::JSGlobalObject *v3;
  JSC::VM *v4;
  uint64_t v6;
  int v7;
  int v8;
  WTF *v9;
  int v10;
  unint64_t SlowCase;
  int v12;
  WebCore::JSDOMGlobalObject *v13;
  JSC::VM *v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  WebCore::JSCSSColorValue *v24;
  JSC::JSCell *v25;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v27;
  JSC::Structure *v28;
  JSC::JSCell *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  WTF *v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  _BYTE *v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  JSC::VM *v52;
  JSC::JSCell *v53;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v55;
  JSC::JSGlobalObject *v56;
  JSC::VM *v57;
  JSC::JSObject *v58;
  JSC::Structure *v59;
  JSC::VM *FunctionRealm;
  uint64_t v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  JSC::JSGlobalObject *v67;
  int v68;
  JSC::JSCell *v69;
  unint64_t v70;
  WebCore::JSDOMGlobalObject *v71;
  JSC::Structure *v72;
  JSC::JSCell *v73;
  uint64_t v74;
  unint64_t SubclassStructure;
  unint64_t v77;
  uint64_t v78;
  _QWORD *Allocator;
  JSValue v80;
  WTF::StringImpl *v81;
  WTF::StringImpl *v82;
  JSValue v83;
  unint64_t v84;
  JSC::VM *v85;
  JSC::InternalFunction *v86;
  char v87[8];
  int v88;
  char v89[8];
  int v90;
  _QWORD *v91;
  int v92;
  int v93[2];
  WTF::StringImpl *v94;
  int v95;
  char v96;
  WTF *v97;
  WTF::StringImpl *v98;
  char v99[8];
  uint64_t v100;
  unsigned int v101;
  int v102;
  char v103[8];
  uint64_t v104;
  unsigned int v105;
  int v106;
  char v107[8];
  uint64_t v108;
  unsigned int v109;
  int v110;
  char v111[8];
  uint64_t v112;
  unsigned int v113;
  int v114;
  uint64_t v115;

  v3 = (JSC::JSGlobalObject *)a1;
  v115 = *MEMORY[0x1E0C80C00];
  v4 = a1[7];
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 2)
  {
    v80.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)a1, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException(v4, v3, v80);
  }
  v6 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert((JSC::JSGlobalObject *)a1, *(_QWORD *)(a2 + 48), (uint64_t)v111);
  v7 = v114;
  if (!v114)
  {
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, *(_QWORD *)(a2 + 56), (uint64_t)v107);
    v8 = v110;
    if (v110)
    {
      SlowCase = 0;
LABEL_98:
      if (v8 != -1)
        ((void (*)(char *, uint64_t *))off_1E322FCA0[v8])(v103, &v108);
      v7 = v114;
      goto LABEL_101;
    }
    v9 = *(WTF **)(a2 + 64);
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, (unint64_t)v9, (uint64_t)v103);
    v10 = v106;
    if (v106)
    {
      SlowCase = 0;
LABEL_95:
      if (v10 != -1)
        ((void (*)(char *, uint64_t *))off_1E322FCA0[v10])(v99, &v104);
      v8 = v110;
      goto LABEL_98;
    }
    v86 = v3;
    if ((unint64_t)(*(int *)(a2 + 32) - 5) >= 0xFFFFFFFFFFFFFFFCLL
      || (SlowCase = *(_QWORD *)(a2 + 72), SlowCase == 10))
    {
      v100 = 0x3FF0000000000000;
      v101 = 0;
      v102 = 0;
      SlowCase = 10;
    }
    else
    {
      WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, *(_QWORD *)(a2 + 72), (uint64_t)v99);
      v12 = v102;
      if (v102)
      {
        SlowCase = 0;
LABEL_92:
        if (v12 != -1)
          ((void (*)(int *, uint64_t *))off_1E322FCA0[v12])(v93, &v100);
        v10 = v106;
        goto LABEL_95;
      }
    }
    if (!v114)
    {
      LOBYTE(v97) = 0;
      LODWORD(v98) = -1;
      v2 = v113;
      v3 = (JSC::JSGlobalObject *)off_1E322FC70;
      if (v113 != -1)
      {
        ((void (*)(int *, WTF **, uint64_t *))off_1E322FC70[v113])(v93, &v97, &v112);
        LODWORD(v98) = v2;
      }
      if (!v110)
      {
        LOBYTE(v91) = 0;
        v92 = -1;
        v2 = v109;
        if (v109 != -1)
        {
          ((void (*)(int *, _QWORD **, uint64_t *))off_1E322FC70[v109])(v93, &v91, &v108);
          v92 = v2;
        }
        if (!v106)
        {
          v89[0] = 0;
          v90 = -1;
          v2 = v105;
          if (v105 != -1)
          {
            ((void (*)(int *, char *, uint64_t *))off_1E322FC70[v105])(v93, v89, &v104);
            v90 = v2;
          }
          if (!v102)
          {
            v87[0] = 0;
            v88 = -1;
            v2 = v101;
            if (v101 != -1)
            {
              ((void (*)(int *, char *, uint64_t *))off_1E322FC70[v101])(v93, v87, &v100);
              v88 = v2;
            }
            WebCore::CSSLab::create((uint64_t)&v97, (uint64_t)&v91, (uint64_t)v89, (uint64_t)v87, (uint64_t)v93);
            if (v88 != -1)
              ((void (*)(char *, char *))off_1E322FC50[v88])(&v96, v87);
            if (v90 != -1)
              ((void (*)(char *, char *))off_1E322FC50[v90])(v87, v89);
            if (v92 != -1)
              ((void (*)(char *, _QWORD **))off_1E322FC50[v92])(v89, &v91);
            if ((_DWORD)v98 != -1)
              ((void (*)(_QWORD **, WTF **))off_1E322FC50[v98])(&v91, &v97);
            if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
              goto LABEL_134;
            v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSLab::s_info;
            if (!v95)
            {
              v85 = v4;
              v14 = *(JSC::VM **)(v6 + 40);
              v9 = *(WTF **)v93;
              *(_QWORD *)v93 = 0;
              if (*(uint64_t (***)())v9 != &off_1E339F790)
              {
                __break(0xC471u);
                JUMPOUT(0x1948AA860);
              }
              v15 = *((_QWORD *)v14 + 412);
              if (v15)
              {
                v16 = *(_DWORD *)(v15 - 8);
                v17 = ((unint64_t)&WebCore::JSCSSLab::s_info + ~((_QWORD)&WebCore::JSCSSLab::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSLab::s_info + ~((_QWORD)&WebCore::JSCSSLab::s_info << 32)) >> 22);
                v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
                v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
                v20 = v16 & ((v19 >> 31) ^ v19);
                v21 = *(char ***)(v15 + 16 * v20);
                if (v21 == &WebCore::JSCSSLab::s_info)
                {
LABEL_37:
                  v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
                  if (v23)
                    goto LABEL_39;
                }
                else
                {
                  v22 = 1;
                  while (v21)
                  {
                    v20 = ((_DWORD)v20 + v22) & v16;
                    v21 = *(char ***)(v15 + 16 * v20);
                    ++v22;
                    if (v21 == &WebCore::JSCSSLab::s_info)
                      goto LABEL_37;
                  }
                }
              }
              v24 = (WebCore::JSCSSColorValue *)*((_QWORD *)v14 + 7);
              v25 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v24, v14, v13);
              Structure = WebCore::JSCSSLabPrototype::createStructure((uint64_t *)v24, (uint64_t)v14, v25);
              *(_DWORD *)(Structure + 16) |= 0x80000u;
              v29 = (JSC::JSCell *)WebCore::JSCSSLabPrototype::create(v24, Structure, v27, v28);
              v30 = WebCore::JSCSSLab::createStructure((uint64_t *)v24, (uint64_t)v14, v29);
              v23 = WebCore::cacheDOMStructure((JSCell *)v14, v30, (uint64_t)&WebCore::JSCSSLab::s_info);
LABEL_39:
              v31 = *((_QWORD *)v14 + 7);
              v32 = *(_QWORD *)(v31 + 41456);
              v33 = *(_QWORD *)(v32 + 23536);
              v34 = *(_QWORD **)(v33 + 3168);
              if (v34)
                goto LABEL_59;
              v35 = *(_QWORD *)(v32 + 22648);
              if (__ldaxr((unsigned __int8 *)v35))
              {
                __clrex();
              }
              else if (!__stxr(1u, (unsigned __int8 *)v35))
              {
                goto LABEL_44;
              }
              MEMORY[0x19AEA534C](v35);
LABEL_44:
              v37 = *(_QWORD *)(v35 + 2824);
              if (!*(_QWORD *)(v37 + 3168))
              {
                v38 = WTF::fastMalloc((WTF *)0xF8);
                WTF::CString::CString((WTF::CString *)&v97, "IsoSpace T");
                v91 = 0;
                MEMORY[0x19AEA3204](v38, &v97, v31 + 192, v31 + 1872, 32, 8, &v91);
                v40 = (uint64_t)v91;
                v91 = 0;
                if (v40)
                  (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
                v41 = v97;
                v97 = 0;
                if (v41)
                {
                  if (*(_DWORD *)v41 == 1)
                    WTF::fastFree(v41, v39);
                  else
                    --*(_DWORD *)v41;
                }
                v42 = *(_QWORD *)(v37 + 3168);
                *(_QWORD *)(v37 + 3168) = v38;
                if (v42)
                  (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
              }
              v34 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
              JSC::GCClient::IsoSubspace::IsoSubspace();
              v43 = *(_QWORD *)(v33 + 3168);
              *(_QWORD *)(v33 + 3168) = v34;
              if (v43)
              {
                v44 = (WTF *)MEMORY[0x19AEA3528]();
                WTF::fastFree(v44, v45);
              }
              v46 = __ldxr((unsigned __int8 *)v35);
              if (v46 == 1)
              {
                if (!__stlxr(0, (unsigned __int8 *)v35))
                {
LABEL_59:
                  SlowCase = v34[3];
                  if (SlowCase >= v34[4])
                  {
                    SlowCase = v34[5];
                    if ((SlowCase & 1) != 0)
                    {
                      JSC::sanitizeStackForVM();
                      SlowCase = JSC::LocalAllocator::allocateSlowCase();
                    }
                    else
                    {
                      v84 = *(_QWORD *)(SlowCase + 8) ^ v34[6];
                      v34[4] = SlowCase + HIDWORD(v84);
                      v34[5] = SlowCase + (int)v84;
                      v34[3] = SlowCase + 32;
                    }
                  }
                  else
                  {
                    v34[3] = SlowCase + 32;
                  }
                  *(_DWORD *)SlowCase = 0;
                  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
                  *(_QWORD *)(SlowCase + 24) = v9;
                  v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSLab::s_info;
                  if (*(_BYTE *)(v31 + 755))
                    __dmb(0xAu);
                  v2 = *((_QWORD *)v14 + 415);
                  v47 = &unk_1EE2DD000;
                    goto LABEL_64;
                  goto LABEL_144;
                }
              }
              else
              {
                __clrex();
              }
              WTF::Lock::unlockSlow((WTF::Lock *)v35);
              goto LABEL_59;
            }
            if (v95 == 1)
            {
              v81 = (WTF::StringImpl *)LOBYTE(v93[0]);
              LOBYTE(v97) = v93[0];
              v82 = v94;
              v94 = 0;
              v98 = v82;
              if (!*((_QWORD *)v4 + 2))
              {
                v83.super.isa = (Class)WebCore::createDOMException(v86, (JSC::JSGlobalObject *)LOBYTE(v93[0]), (JSC::JSGlobalObject *)&v98);
                JSC::VM::throwException(v4, v86, v83);
                v82 = v98;
              }
              v98 = 0;
              if (v82)
              {
                if (*(_DWORD *)v82 == 2)
                  WTF::StringImpl::destroy(v82, v81);
                else
                  *(_DWORD *)v82 -= 2;
              }
              SlowCase = 0;
LABEL_74:
              if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
              {
LABEL_134:
                SlowCase = 0;
LABEL_89:
                if (v95 != -1)
                  ((void (*)(WTF **, int *))off_1E3230208[v95])(&v97, v93);
                v12 = v102;
                goto LABEL_92;
              }
              v52 = v4;
              v53 = *(JSC::JSCell **)(a2 + 40);
              if (((unint64_t)v53 & 0xFFFE000000000002) != 0
                || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v53)) == 0
                || (v56 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
                || (v57 = (JSC::VM *)*((_QWORD *)v86 + 7),
                    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(v86, Object, v55),
                    *((_DWORD *)v57 + 20))
                && (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) != 0)
              {
LABEL_88:
                if (!*((_DWORD *)v52 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v52) & 1) == 0)
                  goto LABEL_89;
                goto LABEL_134;
              }
              v61 = *((_QWORD *)FunctionRealm + 412);
              if (v61)
              {
                v62 = *(_DWORD *)(v61 - 8);
                v63 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
                v64 = 9 * ((v63 + ~(v63 << 13)) ^ ((v63 + ~(v63 << 13)) >> 8));
                v65 = (v64 ^ (v64 >> 15)) + ~((v64 ^ (v64 >> 15)) << 27);
                v66 = v62 & ((v65 >> 31) ^ v65);
                v67 = *(JSC::JSGlobalObject **)(v61 + 16 * v66);
                if (v67 == v3)
                {
LABEL_84:
                  v58 = *(JSC::JSObject **)(v61 + 16 * v66 + 8);
                  if (v58)
                  {
LABEL_86:
                    SubclassStructure = JSC::InternalFunction::createSubclassStructure(v86, v56, v58, v59);
                    if (!*((_DWORD *)v57 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) == 0)
                      JSC::JSObject::setStructure((JSCell *)SlowCase, v57, SubclassStructure);
                    goto LABEL_88;
                  }
                }
                else
                {
                  v68 = 1;
                  while (v67)
                  {
                    v66 = ((_DWORD)v66 + v68) & v62;
                    v67 = *(JSC::JSGlobalObject **)(v61 + 16 * v66);
                    ++v68;
                    if (v67 == v3)
                      goto LABEL_84;
                  }
                }
              }
              v69 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v57, FunctionRealm, v58);
              v70 = WebCore::JSCSSLabPrototype::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v69);
              *(_DWORD *)(v70 + 16) |= 0x80000u;
              v73 = (JSC::JSCell *)WebCore::JSCSSLabPrototype::create(v57, v70, v71, v72);
              v74 = WebCore::JSCSSLab::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v73);
              v58 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v74, (uint64_t)&WebCore::JSCSSLab::s_info);
              goto LABEL_86;
            }
          }
        }
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_144:
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner = (uint64_t)&off_1E324B170;
    v47[3656] = 1;
LABEL_64:
    v4 = v85;
    if (*(_DWORD *)(v2 + 48))
    {
      v97 = v9;
      if ((SlowCase & 8) != 0)
        v77 = (SlowCase - 112) | 1;
      else
        v77 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v77 & 1) != 0)
        v78 = v77 + 47;
      else
        v78 = *(_QWORD *)v77 + 32;
      Allocator = *(_QWORD **)(v78 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v78 + 16) = *Allocator;
      *Allocator = SlowCase;
      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      Allocator[2] = v2;
      v91 = Allocator;
      JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v2 + 32), (uint64_t *)&v97, (uint64_t *)&v91);
      if (v91)
        v91[1] = 3;
      v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSLab::s_info;
    }
    else
    {
      if ((SlowCase & 8) != 0)
        v48 = (SlowCase - 112) | 1;
      else
        v48 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v48 & 1) != 0)
        v49 = v48 + 47;
      else
        v49 = *(_QWORD *)v48 + 32;
      v50 = *(_QWORD **)(v49 + 16);
      if (!v50)
        v50 = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v49 + 16) = *v50;
      *v50 = SlowCase;
      v50[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      v50[2] = v2;
      v51 = *((_QWORD *)v9 + 2);
      *((_QWORD *)v9 + 2) = v50;
      if (v51)
        *(_QWORD *)(v51 + 8) = 3;
    }
    goto LABEL_74;
  }
  SlowCase = 0;
LABEL_101:
  if (v7 != -1)
    ((void (*)(char *, uint64_t *))off_1E322FCA0[v7])(v107, &v112);
  return SlowCase;
}

uint64_t WebCore::JSCSSLab::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSLabPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSLabPrototype::create(WebCore::JSCSSLabPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCSSLab::s_info, &WebCore::JSCSSLabPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLab>,(WebCore::DOMConstructorID)388>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3104);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSCSSLab>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000003, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSLab::s_info + ~((_QWORD)&WebCore::JSCSSLab::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSLab::s_info + ~((_QWORD)&WebCore::JSCSSLab::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSLab::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSLab::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype((WebCore::JSCSSColorValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSLabPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSCSSLabPrototype::create((WebCore::JSCSSLabPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSCSSLab::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSCSSLab::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3104) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSLabConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSLabPrototype::s_info != (char **)(16
                                                      * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLab>,(WebCore::DOMConstructorID)388>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSLab_l(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 48);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSLab_l(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 40);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSLab_l(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSLab::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSLab::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setL(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSLab_a(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 64);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSLab_a(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue16toCSSColorNumberERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_16toCSSColorNumberESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 56);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSLab_a(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSLab::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSLab::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLab::setA(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSLab_b(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 80);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSLab_b(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue16toCSSColorNumberERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_16toCSSColorNumberESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 72);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSLab_b(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSLab::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSLab::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLab::setB(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSLab_alpha(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 96);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSLab_alpha(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 88);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E322FC50[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSLab_alpha(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSLab::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSLab::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E322FC70[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setAlpha(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E322FC50[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E322FCA0[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::JSCSSLayerBlockRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSLayerBlockRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSLayerBlockRulePrototype::create(WebCore::JSCSSLayerBlockRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSLayerBlockRule::s_info, (uint64_t)&WebCore::JSCSSLayerBlockRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSLayerBlockRule>,(WebCore::DOMConstructorID)341>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2728);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSGroupingRule>,(WebCore::DOMConstructorID)337>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSLayerBlockRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSLayerBlockRule::s_info
         + ~((_QWORD)&WebCore::JSCSSLayerBlockRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSLayerBlockRule::s_info
                                                                     + ~((_QWORD)&WebCore::JSCSSLayerBlockRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSLayerBlockRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSLayerBlockRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSGroupingRule::prototype((WebCore::JSCSSGroupingRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSLayerBlockRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSLayerBlockRulePrototype::create((WebCore::JSCSSLayerBlockRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSLayerBlockRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSLayerBlockRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2728) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSLayerBlockRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSLayerBlockRulePrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSLayerBlockRule>,(WebCore::DOMConstructorID)341>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSLayerBlockRule_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WTF::StringImpl *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v11;
  WebCore::JSCSSLayerBlockRule *v12;
  JSC::VM *v13;
  WTF::StringImpl *v14;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_BYTE *)(v2 + 4) & 0x1E) != 0x10)
  {
    __break(0xC471u);
    JUMPOUT(0x1948AC814);
  }
  if (!*(_DWORD *)(v2 + 40))
  {
    if (*(_DWORD *)(v2 + 36))
    {
      WebCore::stringFromCascadeLayerName(v2 + 24, &v14);
      v4 = v14;
    }
    else
    {
      v4 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
      if (*MEMORY[0x1E0CBF738])
        *(_DWORD *)v4 += 2;
      v14 = v4;
    }
    v5 = *(_QWORD *)(a1 + 56);
    if (!v4 || (v6 = *((_DWORD *)v4 + 1)) == 0)
    {
      v7 = *(_QWORD *)(v5 + 41968);
LABEL_14:
      v14 = 0;
      if (!v4)
        return v7;
LABEL_21:
      if (*(_DWORD *)v4 == 2)
        WTF::StringImpl::destroy(v4, v4);
      else
        *(_DWORD *)v4 -= 2;
      return v7;
    }
    if (v6 != 1)
      goto LABEL_11;
    v8 = (unsigned __int8 *)*((_QWORD *)v4 + 1);
    if ((*((_BYTE *)v4 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v11 = *(unsigned __int16 *)v8;
      if (v11 > 0xFF)
      {
LABEL_11:
        v7 = *(_QWORD *)(v5 + 64760);
        if (!v7 || v4 != *(WTF::StringImpl **)(v7 + 8))
        {
          v7 = JSC::jsStringWithCacheSlowCase();
          v4 = v14;
          goto LABEL_14;
        }
LABEL_20:
        v14 = 0;
        goto LABEL_21;
      }
      v9 = v11;
    }
    v7 = *(_QWORD *)(v5 + 8 * v9 + 42216);
    goto LABEL_20;
  }
  v12 = (WebCore::JSCSSLayerBlockRule *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSCSSLayerBlockRule::subspaceForImpl(v12, v13);
}

uint64_t WebCore::JSCSSLayerBlockRule::subspaceForImpl(WebCore::JSCSSLayerBlockRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2768);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2768);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2768);
    *(_QWORD *)(v8 + 2768) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2768);
  *(_QWORD *)(v3 + 2768) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSLayerStatementRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSLayerStatementRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSLayerStatementRulePrototype::create(WebCore::JSCSSLayerStatementRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSLayerStatementRule::s_info, (uint64_t)&WebCore::JSCSSLayerStatementRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSLayerStatementRule>,(WebCore::DOMConstructorID)342>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2736);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSLayerStatementRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSLayerStatementRule::s_info
         + ~((_QWORD)&WebCore::JSCSSLayerStatementRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSLayerStatementRule::s_info
                                                                         + ~((_QWORD)&WebCore::JSCSSLayerStatementRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSLayerStatementRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSLayerStatementRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSRule::prototype((WebCore::JSCSSRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSLayerStatementRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSLayerStatementRulePrototype::create((WebCore::JSCSSLayerStatementRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSLayerStatementRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSLayerStatementRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2736) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSLayerStatementRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSLayerStatementRulePrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSLayerStatementRule>,(WebCore::DOMConstructorID)342>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSLayerStatementRule_nameList(JSC *a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  WTF *v6;
  WTF *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF *v11;
  int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::CSSLayerStatementRule::nameList(*(WTF::StringImpl **)(a2 + 24), (uint64_t)&v11);
  v5 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLUSVString>>::convert<WTF::String,0ul>(a1, v3, (uint64_t)&v11);
  if (v13)
  {
    v8 = v11;
    v9 = 8 * v13;
    do
    {
      v10 = *(WTF::StringImpl **)v8;
      *(_QWORD *)v8 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v4);
        else
          *(_DWORD *)v10 -= 2;
      }
      v8 = (WTF *)((char *)v8 + 8);
      v9 -= 8;
    }
    while (v9);
  }
  v6 = v11;
  if (v11)
  {
    v11 = 0;
    v12 = 0;
    WTF::fastFree(v6, v4);
  }
  return v5;
}

uint64_t WebCore::JSCSSLayerStatementRule::subspaceForImpl(WebCore::JSCSSLayerStatementRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2776);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2776);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2776);
    *(_QWORD *)(v8 + 2776) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2776);
  *(_QWORD *)(v3 + 2776) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSMathClamp>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  char **v17;
  BOOL v18;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL4 v24;
  char **v25;
  BOOL v26;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  WebCore::JSDOMGlobalObject *v33;
  JSC::VM *v34;
  uint64_t (***v35)();
  uint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char **v42;
  int v43;
  unint64_t v44;
  WebCore::JSCSSMathValue *v45;
  JSC::JSCell *v46;
  unint64_t Structure;
  JSC::Structure *v48;
  JSC::JSCell *v49;
  uint64_t v50;
  JSCell *v51;
  uint64_t (***v52)();
  JSC::JSCell *v53;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v55;
  JSC::JSGlobalObject *v56;
  JSC::VM *v57;
  JSC::JSObject *v58;
  JSC::Structure *v59;
  JSC::VM *FunctionRealm;
  uint64_t v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char **v67;
  int v68;
  JSC::JSCell *v69;
  unint64_t v70;
  JSC::Structure *v71;
  JSC::JSCell *v72;
  uint64_t v73;
  unint64_t SubclassStructure;
  int v75;
  int v76;
  int v77;
  JSValue v79;
  WTF::StringImpl *v80;
  WTF::StringImpl *v81;
  JSValue v82;
  char v83[8];
  int v84;
  char v85[8];
  int v86;
  int v87[2];
  WTF::StringImpl *v88;
  int v89;
  char v90;
  uint64_t (***v91)();
  WTF::StringImpl *v92;
  uint64_t v93;
  uint64_t (***v94)();
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  int v100;
  uint64_t v101;
  int v102;
  int v103;
  uint64_t v104;

  v104 = *MEMORY[0x1E0C80C00];
  v3 = *((_QWORD *)a1 + 7);
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 2)
  {
    v79.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v3, a1, v79);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  if ((v6 & 0xFFFE000000000002) != 0)
    goto LABEL_15;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSNumericValue::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSNumericValue::s_info && v9 != 0);
  }
  if (v8 && (v12 = *(_QWORD *)(v6 + 24)) != 0)
  {
    ++*(_DWORD *)(v12 + 8);
    v101 = v12;
    v102 = 1;
    v103 = 0;
  }
  else
  {
LABEL_15:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v97);
    v13 = v98;
    if ((_DWORD)v98)
    {
      v13 = 1;
    }
    else
    {
      v101 = v97;
      v102 = 0;
    }
    v103 = v13;
    if (v13)
    {
      v51 = 0;
      v77 = 1;
      goto LABEL_103;
    }
  }
  v14 = *(_QWORD *)(a2 + 56);
  if ((v14 & 0xFFFE000000000002) == 0)
  {
    v15 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
    v16 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
    v17 = (char **)(16 * v15);
    if ((_DWORD)v15)
      v18 = v17 == &WebCore::JSCSSNumericValue::s_info;
    else
      v18 = 1;
    if (!v18)
    {
      do
      {
        v17 = (char **)v17[2];
        v16 = v17 != 0;
      }
      while (v17 != &WebCore::JSCSSNumericValue::s_info && v17 != 0);
    }
    if (v16)
    {
      v20 = *(_QWORD *)(v14 + 24);
      if (v20)
      {
        ++*(_DWORD *)(v20 + 8);
        v98 = v20;
        v99 = 1;
        v100 = 0;
LABEL_36:
        v22 = *(_QWORD *)(a2 + 64);
        if ((v22 & 0xFFFE000000000002) != 0)
          goto LABEL_49;
        v23 = *(unsigned int *)(16 * (*(_DWORD *)v22 & 0xFFFFFFFE) + 0x4C);
        v24 = *(_DWORD *)(16 * (*(_DWORD *)v22 & 0xFFFFFFFE) + 0x4C) != 0;
        v25 = (char **)(16 * v23);
        if ((_DWORD)v23)
          v26 = v25 == &WebCore::JSCSSNumericValue::s_info;
        else
          v26 = 1;
        if (!v26)
        {
          do
          {
            v25 = (char **)v25[2];
            v24 = v25 != 0;
          }
          while (v25 != &WebCore::JSCSSNumericValue::s_info && v25 != 0);
        }
        if (v24 && (v28 = *(_QWORD *)(v22 + 24)) != 0)
        {
          ++*(_DWORD *)(v28 + 8);
          v94 = (uint64_t (***)())v28;
          v95 = 1;
          v96 = 0;
        }
        else
        {
LABEL_49:
          WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 64), (uint64_t)v87);
          v29 = (int)v88;
          if ((_DWORD)v88)
          {
            v29 = 1;
          }
          else
          {
            v94 = *(uint64_t (****)())v87;
            v95 = 0;
          }
          v96 = v29;
          if (v29)
          {
            v51 = 0;
            v75 = 1;
            goto LABEL_99;
          }
        }
        if (!v103)
        {
          LOBYTE(v91) = 0;
          LODWORD(v92) = -1;
          v30 = v102;
          if (v102 != -1)
          {
            ((void (*)(int *, uint64_t (****)(), uint64_t *))off_1E322F638[v102])(v87, &v91, &v101);
            LODWORD(v92) = v30;
          }
          if (!v100)
          {
            v85[0] = 0;
            v86 = -1;
            v31 = v99;
            if (v99 != -1)
            {
              ((void (*)(int *, char *, uint64_t *))off_1E322F638[v99])(v87, v85, &v98);
              v86 = v31;
            }
            if (!v96)
            {
              v83[0] = 0;
              v84 = -1;
              v32 = v95;
              if (v95 != -1)
              {
                ((void (*)(int *, char *, uint64_t (****)()))off_1E322F638[v95])(v87, v83, &v94);
                v84 = v32;
              }
              WebCore::CSSMathClamp::create((uint64_t)&v91, (uint64_t)v85, (uint64_t)v83, (uint64_t)v87);
              if (v84 != -1)
                ((void (*)(char *, char *))off_1E322F628[v84])(&v90, v83);
              if (v86 != -1)
                ((void (*)(char *, char *))off_1E322F628[v86])(v83, v85);
              if ((_DWORD)v92 != -1)
                ((void (*)(char *, uint64_t (****)()))off_1E322F628[v92])(v85, &v91);
              if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
                goto LABEL_121;
              if (!v89)
              {
                v34 = *(JSC::VM **)(v5 + 40);
                v35 = *(uint64_t (****)())v87;
                *(_QWORD *)v87 = 0;
                v91 = v35;
                if (*v35 != &off_1E339F890)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1948ADD58);
                }
                v36 = *((_QWORD *)v34 + 412);
                if (v36)
                {
                  v37 = *(_DWORD *)(v36 - 8);
                  v38 = ((unint64_t)&WebCore::JSCSSMathClamp::s_info
                       + ~((_QWORD)&WebCore::JSCSSMathClamp::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathClamp::s_info
                                                                              + ~((_QWORD)&WebCore::JSCSSMathClamp::s_info << 32)) >> 22);
                  v39 = 9 * ((v38 + ~(v38 << 13)) ^ ((v38 + ~(v38 << 13)) >> 8));
                  v40 = (v39 ^ (v39 >> 15)) + ~((v39 ^ (v39 >> 15)) << 27);
                  v41 = v37 & ((v40 >> 31) ^ v40);
                  v42 = *(char ***)(v36 + 16 * v41);
                  if (v42 == &WebCore::JSCSSMathClamp::s_info)
                  {
LABEL_76:
                    v44 = *(_QWORD *)(v36 + 16 * v41 + 8);
                    if (v44)
                      goto LABEL_78;
                  }
                  else
                  {
                    v43 = 1;
                    while (v42)
                    {
                      v41 = ((_DWORD)v41 + v43) & v37;
                      v42 = *(char ***)(v36 + 16 * v41);
                      ++v43;
                      if (v42 == &WebCore::JSCSSMathClamp::s_info)
                        goto LABEL_76;
                    }
                  }
                }
                v45 = (WebCore::JSCSSMathValue *)*((_QWORD *)v34 + 7);
                v46 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v45, v34, v33);
                Structure = WebCore::JSCSSMathClampPrototype::createStructure((uint64_t *)v45, (uint64_t)v34, v46);
                *(_DWORD *)(Structure + 16) |= 0x80000u;
                v49 = (JSC::JSCell *)WebCore::JSCSSMathClampPrototype::create(v45, v34, Structure, v48);
                v50 = WebCore::JSCSSMathClamp::createStructure((uint64_t *)v45, (uint64_t)v34, v49);
                v44 = WebCore::cacheDOMStructure((JSCell *)v34, v50, (uint64_t)&WebCore::JSCSSMathClamp::s_info);
LABEL_78:
                v51 = (JSCell *)WebCore::JSCSSMathClamp::create(v44, v34, (uint64_t *)&v91);
                WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(*((_QWORD *)v34 + 415), (uint64_t)v35, (uint64_t)v51);
                v52 = v91;
                v91 = 0;
                if (v52)
                {
                  if (*((_DWORD *)v52 + 2) == 1)
                    ((void (*)(uint64_t (***)()))(*v52)[2])(v52);
                  else
                    --*((_DWORD *)v52 + 2);
                }
                goto LABEL_81;
              }
              if (v89 == 1)
              {
                v80 = (WTF::StringImpl *)LOBYTE(v87[0]);
                LOBYTE(v91) = v87[0];
                v81 = v88;
                v88 = 0;
                v92 = v81;
                if (!*(_QWORD *)(v3 + 16))
                {
                  v82.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v87[0]), (JSC::JSGlobalObject *)&v92);
                  JSC::VM::throwException((JSC::VM *)v3, a1, v82);
                  v81 = v92;
                }
                v92 = 0;
                if (v81)
                {
                  if (*(_DWORD *)v81 == 2)
                    WTF::StringImpl::destroy(v81, v80);
                  else
                    *(_DWORD *)v81 -= 2;
                }
                v51 = 0;
LABEL_81:
                if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
                {
LABEL_121:
                  v51 = 0;
                  goto LABEL_96;
                }
                v53 = *(JSC::JSCell **)(a2 + 40);
                if (((unint64_t)v53 & 0xFFFE000000000002) != 0
                  || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v53)) == 0
                  || (v56 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
                  || (v57 = (JSC::VM *)*((_QWORD *)a1 + 7),
                      FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v55),
                      *((_DWORD *)v57 + 20))
                  && (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) != 0)
                {
LABEL_95:
                  if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
                    v51 = 0;
LABEL_96:
                  if (v89 != -1)
                    ((void (*)(uint64_t (****)(), int *))off_1E3230380[v89])(&v91, v87);
                  v75 = v96;
                  if (v96 == -1)
                  {
LABEL_100:
                    v76 = v100;
                    if (v100 == -1)
                      goto LABEL_102;
                    goto LABEL_101;
                  }
LABEL_99:
                  ((void (*)(int *, uint64_t (****)()))off_1E322F648[v75])(v87, &v94);
                  goto LABEL_100;
                }
                v61 = *((_QWORD *)FunctionRealm + 412);
                if (v61)
                {
                  v62 = *(_DWORD *)(v61 - 8);
                  v63 = ((unint64_t)&WebCore::JSCSSMathClamp::s_info
                       + ~((_QWORD)&WebCore::JSCSSMathClamp::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathClamp::s_info
                                                                              + ~((_QWORD)&WebCore::JSCSSMathClamp::s_info << 32)) >> 22);
                  v64 = 9 * ((v63 + ~(v63 << 13)) ^ ((v63 + ~(v63 << 13)) >> 8));
                  v65 = (v64 ^ (v64 >> 15)) + ~((v64 ^ (v64 >> 15)) << 27);
                  v66 = v62 & ((v65 >> 31) ^ v65);
                  v67 = *(char ***)(v61 + 16 * v66);
                  if (v67 == &WebCore::JSCSSMathClamp::s_info)
                  {
LABEL_91:
                    v58 = *(JSC::JSObject **)(v61 + 16 * v66 + 8);
                    if (v58)
                    {
LABEL_93:
                      SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v56, v58, v59);
                      if (!*((_DWORD *)v57 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) == 0)
                        JSC::JSObject::setStructure(v51, v57, SubclassStructure);
                      goto LABEL_95;
                    }
                  }
                  else
                  {
                    v68 = 1;
                    while (v67)
                    {
                      v66 = ((_DWORD)v66 + v68) & v62;
                      v67 = *(char ***)(v61 + 16 * v66);
                      ++v68;
                      if (v67 == &WebCore::JSCSSMathClamp::s_info)
                        goto LABEL_91;
                    }
                  }
                }
                v69 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v57, FunctionRealm, v58);
                v70 = WebCore::JSCSSMathClampPrototype::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v69);
                *(_DWORD *)(v70 + 16) |= 0x80000u;
                v72 = (JSC::JSCell *)WebCore::JSCSSMathClampPrototype::create(v57, FunctionRealm, v70, v71);
                v73 = WebCore::JSCSSMathClamp::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v72);
                v58 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v73, (uint64_t)&WebCore::JSCSSMathClamp::s_info);
                goto LABEL_93;
              }
            }
          }
        }
        std::__throw_bad_variant_access[abi:sn180100]();
      }
    }
  }
  WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 56), (uint64_t)&v93);
  v21 = (int)v94;
  if ((_DWORD)v94)
  {
    v21 = 1;
  }
  else
  {
    v98 = v93;
    v99 = 0;
  }
  v100 = v21;
  if (!v21)
    goto LABEL_36;
  v51 = 0;
  v76 = 1;
LABEL_101:
  ((void (*)(uint64_t *, uint64_t *))off_1E322F648[v76])(&v93, &v98);
LABEL_102:
  v77 = v103;
  if (v103 != -1)
LABEL_103:
    ((void (*)(uint64_t *, uint64_t *))off_1E322F648[v77])(&v97, &v101);
  return v51;
}

uint64_t WebCore::JSCSSMathClamp::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSMathClampPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathValue::prototype(WebCore::JSCSSMathValue *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char **v18;
  int v19;
  uint64_t v20;
  JSC::JSCell *Prototype;
  uint64_t v22;
  unint64_t Structure;
  JSC::Structure *v24;
  JSC::JSCell *v25;
  uint64_t v26;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_12;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSMathValue::s_info + ~((_QWORD)&WebCore::JSCSSMathValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathValue::s_info + ~((_QWORD)&WebCore::JSCSSMathValue::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSMathValue::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSMathValue::s_info)
        goto LABEL_6;
    }
LABEL_7:
    v14 = ((unint64_t)&WebCore::JSCSSNumericValue::s_info + ~((_QWORD)&WebCore::JSCSSNumericValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSNumericValue::s_info + ~((_QWORD)&WebCore::JSCSSNumericValue::s_info << 32)) >> 22);
    v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
    v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
    v17 = v6 & ((v16 >> 31) ^ v16);
    v18 = *(char ***)(v5 + 16 * v17);
    if (v18 == &WebCore::JSCSSNumericValue::s_info)
    {
LABEL_11:
      v20 = *(_QWORD *)(v5 + 16 * v17 + 8);
      if (v20)
      {
LABEL_13:
        Structure = WebCore::JSCSSMathValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v20 + 48));
        *(_DWORD *)(Structure + 16) |= 0x80000u;
        v25 = (JSC::JSCell *)WebCore::JSCSSMathValuePrototype::create(this, a2, Structure, v24);
        v26 = WebCore::JSCSSMathValue::createStructure((uint64_t *)this, (uint64_t)a2, v25);
        v13 = WebCore::cacheDOMStructure((JSCell *)a2, v26, (uint64_t)&WebCore::JSCSSMathValue::s_info);
        return *(_QWORD *)(v13 + 48);
      }
    }
    else
    {
      v19 = 1;
      while (v18)
      {
        v17 = ((_DWORD)v17 + v19) & v6;
        v18 = *(char ***)(v5 + 16 * v17);
        ++v19;
        if (v18 == &WebCore::JSCSSNumericValue::s_info)
          goto LABEL_11;
      }
    }
LABEL_12:
    Prototype = (JSC::JSCell *)WebCore::JSCSSNumericValue::createPrototype(this, a2, a3);
    v22 = WebCore::JSCSSNumericValue::createStructure((uint64_t *)this, (uint64_t)a2, Prototype);
    v20 = WebCore::cacheDOMStructure((JSCell *)a2, v22, (uint64_t)&WebCore::JSCSSNumericValue::s_info);
    goto LABEL_13;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
    goto LABEL_7;
  return *(_QWORD *)(v13 + 48);
}

unint64_t WebCore::JSCSSMathClampPrototype::create(WebCore::JSCSSMathClampPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSCSSMathClamp::s_info, &WebCore::JSCSSMathClampPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathClamp>,(WebCore::DOMConstructorID)392>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3136);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCSSMathClamp>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000003, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSMathClamp::s_info + ~((_QWORD)&WebCore::JSCSSMathClamp::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathClamp::s_info + ~((_QWORD)&WebCore::JSCSSMathClamp::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSMathClamp::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSMathClamp::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype((WebCore::JSCSSMathValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSMathClampPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSMathClampPrototype::create((WebCore::JSCSSMathClampPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSMathClamp::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSMathClamp::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3136) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSMathClampConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSMathClampPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathClamp>,(WebCore::DOMConstructorID)392>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSMathClamp_lower(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72));
}

unint64_t WebCore::jsCSSMathClamp_value(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80));
}

unint64_t WebCore::jsCSSMathClamp_upper(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 88));
}

uint64_t WebCore::JSCSSMathClamp::subspaceForImpl(WebCore::JSCSSMathClamp *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3200);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3200))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3200);
    *(_QWORD *)(v8 + 3200) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3200);
  *(_QWORD *)(v3 + 3200) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSMathValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSNumericValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSNumericValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSNumericValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSMathInvert>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  WebCore::JSDOMGlobalObject *v18;
  JSC::VM *v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char **v26;
  int v27;
  unint64_t v28;
  WebCore::JSCSSMathValue *v29;
  JSC::JSCell *v30;
  unint64_t Structure;
  JSC::Structure *v32;
  JSC::JSCell *v33;
  uint64_t v34;
  JSCell *v35;
  JSC::JSCell *v36;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v38;
  JSC::JSGlobalObject *v39;
  JSC::VM *v40;
  WebCore::JSDOMGlobalObject *v41;
  JSC::Structure *v42;
  JSC::VM *FunctionRealm;
  uint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char **v50;
  int v51;
  JSC::JSCell *v52;
  unint64_t v53;
  JSC::Structure *v54;
  JSC::JSCell *v55;
  uint64_t v56;
  unint64_t SubclassStructure;
  _DWORD *v58;
  int v59;
  JSValue v61;
  _BYTE v62[8];
  int v63;
  _OWORD v64[2];
  char v65;
  char *v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v61.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, a1, v61);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  if ((v6 & 0xFFFE000000000002) != 0)
    goto LABEL_15;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSNumericValue::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSNumericValue::s_info && v9 != 0);
  }
  if (v8 && (v12 = *(_QWORD *)(v6 + 24)) != 0)
  {
    ++*(_DWORD *)(v12 + 8);
    v67 = v12;
    v13 = 1;
    v68 = 1;
    v69 = 0;
  }
  else
  {
LABEL_15:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 48), (uint64_t)v64);
    v14 = DWORD2(v64[0]);
    if (DWORD2(v64[0]))
    {
      v14 = 1;
    }
    else
    {
      v67 = *(_QWORD *)&v64[0];
      v68 = 0;
    }
    v69 = v14;
    if (v14)
    {
      v35 = 0;
      v59 = 1;
LABEL_50:
      ((void (*)(_OWORD *, uint64_t *))off_1E322F648[v59])(v64, &v67);
      return v35;
    }
    v13 = 0;
  }
  v62[0] = 0;
  v63 = -1;
  ((void (*)(_OWORD *, _BYTE *, uint64_t *))off_1E322F638[v13])(v64, v62, &v67);
  v63 = v13;
  v15 = bmalloc::api::isoAllocate();
  if (v63 == -1)
    goto LABEL_62;
  v16 = v15;
  v66 = &v65;
  ((void (*)(_OWORD *__return_ptr, char **, _BYTE *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCoreL11negatedTypeERKNS_7variantIJdNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISB_EENS6_21DefaultRefDerefTraitsISB_EEEEEEEE3__1JZNS8_L11negatedTypeESJ_E3__0EEEEEJRKNS0_6__implIJdSG_EEEEEEDcOT_DpOT0____fmatrix[v63])(v64, &v66, v62);
  *(_DWORD *)(v16 + 8) = 1;
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 32) = 0;
  v17 = v64[1];
  *(_OWORD *)(v16 + 40) = v64[0];
  *(_OWORD *)(v16 + 56) = v17;
  *(_QWORD *)v16 = &off_1E339F8F0;
  if (v63 == -1)
LABEL_62:
    std::__throw_bad_variant_access[abi:sn180100]();
  v66 = &v65;
  ((void (*)(char **, _BYTE *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore15CSSNumericValue16rectifyNumberishEONS_7variantIJdNS6_6RefPtrIS9_NS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEEEEEE3__0JZNS9_16rectifyNumberishESI_E3__1EEEEEJRNS0_6__implIJdSG_EEEEEEDcOT_DpOT0____fmatrix[v63])(&v66, v62);
  *(_QWORD *)&v64[0] = v16;
  if (v63 != -1)
    ((void (*)(char **, _BYTE *))off_1E322F628[v63])(&v66, v62);
  if (*(uint64_t (***)())v16 != &off_1E339F8F0)
  {
    __break(0xC471u);
    JUMPOUT(0x1948AF09CLL);
  }
  v19 = *(JSC::VM **)(v5 + 40);
  v20 = *((_QWORD *)v19 + 412);
  if (!v20)
    goto LABEL_31;
  v21 = *(_DWORD *)(v20 - 8);
  v22 = ((unint64_t)&WebCore::JSCSSMathInvert::s_info + ~((_QWORD)&WebCore::JSCSSMathInvert::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathInvert::s_info + ~((_QWORD)&WebCore::JSCSSMathInvert::s_info << 32)) >> 22);
  v23 = 9 * ((v22 + ~(v22 << 13)) ^ ((v22 + ~(v22 << 13)) >> 8));
  v24 = (v23 ^ (v23 >> 15)) + ~((v23 ^ (v23 >> 15)) << 27);
  v25 = v21 & ((v24 >> 31) ^ v24);
  v26 = *(char ***)(v20 + 16 * v25);
  if (v26 != &WebCore::JSCSSMathInvert::s_info)
  {
    v27 = 1;
    while (v26)
    {
      v25 = ((_DWORD)v25 + v27) & v21;
      v26 = *(char ***)(v20 + 16 * v25);
      ++v27;
      if (v26 == &WebCore::JSCSSMathInvert::s_info)
        goto LABEL_30;
    }
    goto LABEL_31;
  }
LABEL_30:
  v28 = *(_QWORD *)(v20 + 16 * v25 + 8);
  if (!v28)
  {
LABEL_31:
    v29 = (WebCore::JSCSSMathValue *)*((_QWORD *)v19 + 7);
    v30 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v29, v19, v18);
    Structure = WebCore::JSCSSMathInvertPrototype::createStructure((uint64_t *)v29, (uint64_t)v19, v30);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v33 = (JSC::JSCell *)WebCore::JSCSSMathInvertPrototype::create(v29, v19, Structure, v32);
    v34 = WebCore::JSCSSMathInvert::createStructure((uint64_t *)v29, (uint64_t)v19, v33);
    v28 = WebCore::cacheDOMStructure((JSCell *)v19, v34, (uint64_t)&WebCore::JSCSSMathInvert::s_info);
  }
  v35 = (JSCell *)WebCore::JSCSSMathInvert::create(v28, v19, (uint64_t *)v64);
  WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(*((_QWORD *)v19 + 415), v16, (uint64_t)v35);
  v36 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v36 & 0xFFFE000000000002) != 0)
    goto LABEL_45;
  Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v36);
  if (!Object)
    goto LABEL_45;
  v39 = Object;
  if (Object == *(JSC::JSGlobalObject **)(a2 + 24))
    goto LABEL_45;
  v40 = (JSC::VM *)*((_QWORD *)a1 + 7);
  FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v38);
  if (*((_DWORD *)v40 + 20))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v40) & 1) != 0)
      goto LABEL_45;
  }
  v44 = *((_QWORD *)FunctionRealm + 412);
  if (!v44)
    goto LABEL_42;
  v45 = *(_DWORD *)(v44 - 8);
  v46 = ((unint64_t)&WebCore::JSCSSMathInvert::s_info + ~((_QWORD)&WebCore::JSCSSMathInvert::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathInvert::s_info + ~((_QWORD)&WebCore::JSCSSMathInvert::s_info << 32)) >> 22);
  v47 = 9 * ((v46 + ~(v46 << 13)) ^ ((v46 + ~(v46 << 13)) >> 8));
  v48 = (v47 ^ (v47 >> 15)) + ~((v47 ^ (v47 >> 15)) << 27);
  v49 = v45 & ((v48 >> 31) ^ v48);
  v50 = *(char ***)(v44 + 16 * v49);
  if (v50 != &WebCore::JSCSSMathInvert::s_info)
  {
    v51 = 1;
    while (v50)
    {
      v49 = ((_DWORD)v49 + v51) & v45;
      v50 = *(char ***)(v44 + 16 * v49);
      ++v51;
      if (v50 == &WebCore::JSCSSMathInvert::s_info)
        goto LABEL_41;
    }
    goto LABEL_42;
  }
LABEL_41:
  v41 = *(WebCore::JSDOMGlobalObject **)(v44 + 16 * v49 + 8);
  if (!v41)
  {
LABEL_42:
    v52 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v40, FunctionRealm, v41);
    v53 = WebCore::JSCSSMathInvertPrototype::createStructure((uint64_t *)v40, (uint64_t)FunctionRealm, v52);
    *(_DWORD *)(v53 + 16) |= 0x80000u;
    v55 = (JSC::JSCell *)WebCore::JSCSSMathInvertPrototype::create(v40, FunctionRealm, v53, v54);
    v56 = WebCore::JSCSSMathInvert::createStructure((uint64_t *)v40, (uint64_t)FunctionRealm, v55);
    v41 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v56, (uint64_t)&WebCore::JSCSSMathInvert::s_info);
  }
  SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v39, v41, v42);
  if (!*((_DWORD *)v40 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v40) & 1) == 0)
    JSC::JSObject::setStructure(v35, v40, SubclassStructure);
LABEL_45:
  if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
    v35 = 0;
  v58 = *(_DWORD **)&v64[0];
  *(_QWORD *)&v64[0] = 0;
  if (v58)
  {
    if (v58[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v58 + 16))(v58);
    else
      --v58[2];
  }
  v59 = v69;
  if (v69 != -1)
    goto LABEL_50;
  return v35;
}

uint64_t WebCore::JSCSSMathInvert::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSMathInvertPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSMathInvertPrototype::create(WebCore::JSCSSMathInvertPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSMathInvert::s_info, (uint64_t)&WebCore::JSCSSMathInvertPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathInvert>,(WebCore::DOMConstructorID)393>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3144);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCSSMathInvert>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSMathInvert::s_info + ~((_QWORD)&WebCore::JSCSSMathInvert::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathInvert::s_info + ~((_QWORD)&WebCore::JSCSSMathInvert::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSMathInvert::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSMathInvert::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype((WebCore::JSCSSMathValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSMathInvertPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSMathInvertPrototype::create((WebCore::JSCSSMathInvertPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSMathInvert::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSMathInvert::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3144) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSMathInvertConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSMathInvertPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathInvert>,(WebCore::DOMConstructorID)393>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSMathInvert_value(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72));
}

uint64_t WebCore::JSCSSMathInvert::subspaceForImpl(WebCore::JSCSSMathInvert *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3208);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3208))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3208);
    *(_QWORD *)(v8 + 3208) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3208);
  *(_QWORD *)(v3 + 3208) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSCSSMathMax>::construct(JSC *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  WebCore::JSDOMGlobalObject *v6;
  JSC::VM *v7;
  uint64_t (***v8)();
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char **v15;
  int v16;
  unint64_t v17;
  WebCore::JSCSSMathValue *v18;
  JSC::JSCell *v19;
  unint64_t v20;
  JSC::Structure *v21;
  JSC::JSCell *v22;
  uint64_t v23;
  JSCell *v24;
  WTF::StringImpl *v25;
  uint64_t (***v26)();
  JSC::JSCell *v27;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v29;
  JSC::JSGlobalObject *v30;
  JSC::VM *v31;
  JSC::JSObject *v32;
  JSC::Structure *v33;
  JSC::VM *FunctionRealm;
  uint64_t v35;
  unsigned int v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char **v41;
  int v42;
  JSC::JSCell *v43;
  unint64_t Structure;
  JSC::Structure *v45;
  JSC::JSCell *v46;
  uint64_t v47;
  unint64_t SubclassStructure;
  WTF *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  WTF::StringImpl *v55;
  JSValue v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  WTF **v60;
  int v61[2];
  WTF::StringImpl *v62;
  int v63;
  WTF *v64;
  uint64_t (***v65)();
  WTF::StringImpl *v66;

  v4 = *((_QWORD *)a1 + 7);
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>((uint64_t)a1, a2, 0, &v64);
  if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
  {
    WebCore::CSSMathMax::create((unsigned int **)&v64, (uint64_t)v61);
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      goto LABEL_56;
    if (v63)
    {
      if (v63 != 1)
      {
        v57 = std::__throw_bad_variant_access[abi:sn180100]();
        return WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>(v57, v58, v59, v60);
      }
      v25 = (WTF::StringImpl *)LOBYTE(v61[0]);
      LOBYTE(v65) = v61[0];
      v55 = v62;
      v62 = 0;
      v66 = v55;
      if (!*(_QWORD *)(v4 + 16))
      {
        v56.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v61[0]), (JSC::JSGlobalObject *)&v66);
        JSC::VM::throwException((JSC::VM *)v4, a1, v56);
        v55 = v66;
      }
      v66 = 0;
      if (v55)
      {
        if (*(_DWORD *)v55 == 2)
          WTF::StringImpl::destroy(v55, v25);
        else
          *(_DWORD *)v55 -= 2;
      }
      v24 = 0;
LABEL_15:
      if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
        goto LABEL_56;
      v27 = *(JSC::JSCell **)(a2 + 40);
      if (((unint64_t)v27 & 0xFFFE000000000002) != 0
        || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v27)) == 0
        || (v30 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
        || (v31 = (JSC::VM *)*((_QWORD *)a1 + 7),
            FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v29),
            *((_DWORD *)v31 + 20))
        && (JSC::VM::hasExceptionsAfterHandlingTraps(v31) & 1) != 0)
      {
LABEL_29:
        if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
        {
LABEL_30:
          if (v63 != -1)
            ((void (*)(uint64_t (****)(), int *))off_1E3230480[v63])(&v65, v61);
          goto LABEL_32;
        }
LABEL_56:
        v24 = 0;
        goto LABEL_30;
      }
      v35 = *((_QWORD *)FunctionRealm + 412);
      if (v35)
      {
        v36 = *(_DWORD *)(v35 - 8);
        v37 = ((unint64_t)&WebCore::JSCSSMathMax::s_info + ~((_QWORD)&WebCore::JSCSSMathMax::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathMax::s_info + ~((_QWORD)&WebCore::JSCSSMathMax::s_info << 32)) >> 22);
        v38 = 9 * ((v37 + ~(v37 << 13)) ^ ((v37 + ~(v37 << 13)) >> 8));
        v39 = (v38 ^ (v38 >> 15)) + ~((v38 ^ (v38 >> 15)) << 27);
        v40 = v36 & ((v39 >> 31) ^ v39);
        v41 = *(char ***)(v35 + 16 * v40);
        if (v41 == &WebCore::JSCSSMathMax::s_info)
        {
LABEL_25:
          v32 = *(JSC::JSObject **)(v35 + 16 * v40 + 8);
          if (v32)
          {
LABEL_27:
            SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v30, v32, v33);
            if (!*((_DWORD *)v31 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v31) & 1) == 0)
              JSC::JSObject::setStructure(v24, v31, SubclassStructure);
            goto LABEL_29;
          }
        }
        else
        {
          v42 = 1;
          while (v41)
          {
            v40 = ((_DWORD)v40 + v42) & v36;
            v41 = *(char ***)(v35 + 16 * v40);
            ++v42;
            if (v41 == &WebCore::JSCSSMathMax::s_info)
              goto LABEL_25;
          }
        }
      }
      v43 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v31, FunctionRealm, v32);
      Structure = WebCore::JSCSSMathMaxPrototype::createStructure((uint64_t *)v31, (uint64_t)FunctionRealm, v43);
      *(_DWORD *)(Structure + 16) |= 0x80000u;
      v46 = (JSC::JSCell *)WebCore::JSCSSMathMaxPrototype::create(v31, FunctionRealm, Structure, v45);
      v47 = WebCore::JSCSSMathMax::createStructure((uint64_t *)v31, (uint64_t)FunctionRealm, v46);
      v32 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v47, (uint64_t)&WebCore::JSCSSMathMax::s_info);
      goto LABEL_27;
    }
    v7 = *(JSC::VM **)(v5 + 40);
    v8 = *(uint64_t (****)())v61;
    *(_QWORD *)v61 = 0;
    v65 = v8;
    if (*v8 != &off_1E339F950)
    {
      __break(0xC471u);
      JUMPOUT(0x1948AFFACLL);
    }
    v9 = *((_QWORD *)v7 + 412);
    if (v9)
    {
      v10 = *(_DWORD *)(v9 - 8);
      v11 = ((unint64_t)&WebCore::JSCSSMathMax::s_info + ~((_QWORD)&WebCore::JSCSSMathMax::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathMax::s_info + ~((_QWORD)&WebCore::JSCSSMathMax::s_info << 32)) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(char ***)(v9 + 16 * v14);
      if (v15 == &WebCore::JSCSSMathMax::s_info)
      {
LABEL_10:
        v17 = *(_QWORD *)(v9 + 16 * v14 + 8);
        if (v17)
          goto LABEL_12;
      }
      else
      {
        v16 = 1;
        while (v15)
        {
          v14 = ((_DWORD)v14 + v16) & v10;
          v15 = *(char ***)(v9 + 16 * v14);
          ++v16;
          if (v15 == &WebCore::JSCSSMathMax::s_info)
            goto LABEL_10;
        }
      }
    }
    v18 = (WebCore::JSCSSMathValue *)*((_QWORD *)v7 + 7);
    v19 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v18, v7, v6);
    v20 = WebCore::JSCSSMathMaxPrototype::createStructure((uint64_t *)v18, (uint64_t)v7, v19);
    *(_DWORD *)(v20 + 16) |= 0x80000u;
    v22 = (JSC::JSCell *)WebCore::JSCSSMathMaxPrototype::create(v18, v7, v20, v21);
    v23 = WebCore::JSCSSMathMax::createStructure((uint64_t *)v18, (uint64_t)v7, v22);
    v17 = WebCore::cacheDOMStructure((JSCell *)v7, v23, (uint64_t)&WebCore::JSCSSMathMax::s_info);
LABEL_12:
    v24 = (JSCell *)WebCore::JSCSSMathMax::create(v17, v7, (uint64_t *)&v65);
    WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(*((_QWORD *)v7 + 415), (uint64_t)v8, (uint64_t)v24);
    v26 = v65;
    v65 = 0;
    if (v26)
    {
      if (*((_DWORD *)v26 + 2) == 1)
        ((void (*)(uint64_t (***)()))(*v26)[2])(v26);
      else
        --*((_DWORD *)v26 + 2);
    }
    goto LABEL_15;
  }
  v24 = 0;
LABEL_32:
  v49 = v64;
  v64 = 0;
  if (v49)
  {
    v51 = (char *)v49 + 8;
    v50 = *(unsigned int *)v49;
    if ((_DWORD)v50)
    {
      v52 = 16 * v50;
      do
      {
        v53 = *((unsigned int *)v51 + 2);
        if ((_DWORD)v53 != -1)
          ((void (*)(int *, char *))off_1E322F628[v53])(v61, v51);
        *((_DWORD *)v51 + 2) = -1;
        v51 += 16;
        v52 -= 16;
      }
      while (v52);
    }
    WTF::fastFree(v49, v25);
  }
  return (uint64_t)v24;
}

uint64_t WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, WTF **a4@<X8>)
{
  unint64_t v5;
  int v6;
  WTF *v7;
  void *v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  JSC::VM *v19;
  unint64_t v20;
  char v21;

  v19 = *(JSC::VM **)(result + 56);
  v20 = a3;
  v5 = *(int *)(a2 + 32) - 1;
  v6 = v5 - a3;
  if (v5 <= a3)
  {
    *a4 = 0;
  }
  else
  {
    v18[0] = result;
    v18[1] = a2;
    v18[2] = &v20;
    v18[3] = &v19;
    v7 = (WTF *)WTF::fastMalloc((WTF *)((16 * (v5 - a3)) | 8));
    v9 = *WTF::TrailingArray<WTF::EmbeddedFixedVector<std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>>>,std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>>>::TrailingArray<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>::Item> WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>(v7, v6, (uint64_t)v18);
    if ((_DWORD)v9 != v6)
    {
      if ((_DWORD)v9)
      {
        v10 = (_DWORD *)((char *)v7 + 8);
        v11 = 16 * v9;
        do
        {
          v12 = v10[2];
          if ((_DWORD)v12 != -1)
            ((void (*)(char *, _DWORD *))off_1E322F628[v12])(&v21, v10);
          v10[2] = -1;
          v10 += 4;
          v11 -= 16;
        }
        while (v11);
      }
      WTF::fastFree(v7, v8);
      v7 = 0;
    }
    result = (uint64_t)v19;
    if (*((_DWORD *)v19 + 20) && (result = JSC::VM::hasExceptionsAfterHandlingTraps(v19), (result & 1) != 0))
    {
      *a4 = 0;
      if (v7)
      {
        v15 = (_DWORD *)((char *)v7 + 8);
        v14 = *(unsigned int *)v7;
        if ((_DWORD)v14)
        {
          v16 = 16 * v14;
          do
          {
            v17 = v15[2];
            if ((_DWORD)v17 != -1)
              ((void (*)(_QWORD *, _DWORD *))off_1E322F628[v17])(v18, v15);
            v15[2] = -1;
            v15 += 4;
            v16 -= 16;
          }
          while (v16);
        }
        return WTF::fastFree(v7, v13);
      }
    }
    else
    {
      *a4 = v7;
    }
  }
  return result;
}

uint64_t WebCore::JSCSSMathMax::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSMathMaxPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSMathMaxPrototype::create(WebCore::JSCSSMathMaxPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSMathMax::s_info, (uint64_t)&WebCore::JSCSSMathMaxPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMax>,(WebCore::DOMConstructorID)394>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3152);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCSSMathMax>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSMathMax::s_info + ~((_QWORD)&WebCore::JSCSSMathMax::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathMax::s_info + ~((_QWORD)&WebCore::JSCSSMathMax::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSMathMax::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSMathMax::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype((WebCore::JSCSSMathValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSMathMaxPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSMathMaxPrototype::create((WebCore::JSCSSMathMaxPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSMathMax::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSMathMax::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3152) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSMathMaxConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSMathMaxPrototype::s_info != (char **)(16
                                                          * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMax>,(WebCore::DOMConstructorID)394>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSMathMax_values(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSNumericArray>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 72));
}

uint64_t WebCore::JSCSSMathMax::subspaceForImpl(WebCore::JSCSSMathMax *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3216);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3216))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3216);
    *(_QWORD *)(v8 + 3216) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3216);
  *(_QWORD *)(v3 + 3216) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSCSSMathMin>::construct(JSC *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  WebCore::JSDOMGlobalObject *v6;
  int v7;
  JSC::VM *v8;
  uint64_t (***v9)();
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char **v16;
  int v17;
  unint64_t v18;
  WebCore::JSCSSMathValue *v19;
  JSC::JSCell *v20;
  unint64_t v21;
  JSC::Structure *v22;
  JSC::JSCell *v23;
  uint64_t v24;
  JSCell *v25;
  WTF::StringImpl *v26;
  uint64_t (***v27)();
  JSC::JSCell *v28;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v30;
  JSC::JSGlobalObject *v31;
  JSC::VM *v32;
  JSC::JSObject *v33;
  JSC::Structure *v34;
  JSC::VM *FunctionRealm;
  uint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char **v42;
  int v43;
  JSC::JSCell *v44;
  unint64_t Structure;
  JSC::Structure *v46;
  JSC::JSCell *v47;
  uint64_t v48;
  unint64_t SubclassStructure;
  WTF *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  WTF::StringImpl *v56;
  JSValue v57;
  uint64_t v58;
  uint64_t v59;
  int v60[2];
  WTF::StringImpl *v61;
  int v62;
  WTF *v63;
  uint64_t (***v64)();
  WTF::StringImpl *v65;

  v4 = *((_QWORD *)a1 + 7);
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>((uint64_t)a1, a2, 0, &v63);
  if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
  {
    WebCore::CSSMathMin::create((unsigned int **)&v63, (uint64_t)v60);
    if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    {
      v25 = 0;
      v7 = v62;
      goto LABEL_30;
    }
    v7 = v62;
    if (v62)
    {
      if (v62 != 1)
      {
        v58 = std::__throw_bad_variant_access[abi:sn180100]();
        return WebCore::JSCSSMathMin::analyzeHeap(v58, v59);
      }
      v26 = (WTF::StringImpl *)LOBYTE(v60[0]);
      LOBYTE(v64) = v60[0];
      v56 = v61;
      v61 = 0;
      v65 = v56;
      if (!*(_QWORD *)(v4 + 16))
      {
        v57.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v60[0]), (JSC::JSGlobalObject *)&v65);
        JSC::VM::throwException((JSC::VM *)v4, a1, v57);
        v56 = v65;
      }
      v65 = 0;
      if (v56)
      {
        if (*(_DWORD *)v56 == 2)
          WTF::StringImpl::destroy(v56, v26);
        else
          *(_DWORD *)v56 -= 2;
      }
      v25 = 0;
LABEL_15:
      if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
        goto LABEL_56;
      v28 = *(JSC::JSCell **)(a2 + 40);
      if (((unint64_t)v28 & 0xFFFE000000000002) != 0
        || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v28)) == 0
        || (v31 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
        || (v32 = (JSC::VM *)*((_QWORD *)a1 + 7),
            FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v30),
            *((_DWORD *)v32 + 20))
        && (JSC::VM::hasExceptionsAfterHandlingTraps(v32) & 1) != 0)
      {
LABEL_29:
        if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
        {
LABEL_30:
          if (v7 != -1)
            ((void (*)(uint64_t (****)(), int *))off_1E32304E0[v7])(&v64, v60);
          goto LABEL_32;
        }
LABEL_56:
        v25 = 0;
        goto LABEL_30;
      }
      v36 = *((_QWORD *)FunctionRealm + 412);
      if (v36)
      {
        v37 = *(_DWORD *)(v36 - 8);
        v38 = ((unint64_t)&WebCore::JSCSSMathMin::s_info + ~((_QWORD)&WebCore::JSCSSMathMin::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathMin::s_info + ~((_QWORD)&WebCore::JSCSSMathMin::s_info << 32)) >> 22);
        v39 = 9 * ((v38 + ~(v38 << 13)) ^ ((v38 + ~(v38 << 13)) >> 8));
        v40 = (v39 ^ (v39 >> 15)) + ~((v39 ^ (v39 >> 15)) << 27);
        v41 = v37 & ((v40 >> 31) ^ v40);
        v42 = *(char ***)(v36 + 16 * v41);
        if (v42 == &WebCore::JSCSSMathMin::s_info)
        {
LABEL_25:
          v33 = *(JSC::JSObject **)(v36 + 16 * v41 + 8);
          if (v33)
          {
LABEL_27:
            SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v31, v33, v34);
            if (!*((_DWORD *)v32 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v32) & 1) == 0)
              JSC::JSObject::setStructure(v25, v32, SubclassStructure);
            goto LABEL_29;
          }
        }
        else
        {
          v43 = 1;
          while (v42)
          {
            v41 = ((_DWORD)v41 + v43) & v37;
            v42 = *(char ***)(v36 + 16 * v41);
            ++v43;
            if (v42 == &WebCore::JSCSSMathMin::s_info)
              goto LABEL_25;
          }
        }
      }
      v44 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v32, FunctionRealm, v33);
      Structure = WebCore::JSCSSMathMinPrototype::createStructure((uint64_t *)v32, (uint64_t)FunctionRealm, v44);
      *(_DWORD *)(Structure + 16) |= 0x80000u;
      v47 = (JSC::JSCell *)WebCore::JSCSSMathMinPrototype::create(v32, FunctionRealm, Structure, v46);
      v48 = WebCore::JSCSSMathMin::createStructure((uint64_t *)v32, (uint64_t)FunctionRealm, v47);
      v33 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v48, (uint64_t)&WebCore::JSCSSMathMin::s_info);
      goto LABEL_27;
    }
    v8 = *(JSC::VM **)(v5 + 40);
    v9 = *(uint64_t (****)())v60;
    *(_QWORD *)v60 = 0;
    v64 = v9;
    if (*v9 != &off_1E339FAE8)
    {
      __break(0xC471u);
      JUMPOUT(0x1948B1014);
    }
    v10 = *((_QWORD *)v8 + 412);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 - 8);
      v12 = ((unint64_t)&WebCore::JSCSSMathMin::s_info + ~((_QWORD)&WebCore::JSCSSMathMin::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathMin::s_info + ~((_QWORD)&WebCore::JSCSSMathMin::s_info << 32)) >> 22);
      v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
      v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
      v15 = v11 & ((v14 >> 31) ^ v14);
      v16 = *(char ***)(v10 + 16 * v15);
      if (v16 == &WebCore::JSCSSMathMin::s_info)
      {
LABEL_10:
        v18 = *(_QWORD *)(v10 + 16 * v15 + 8);
        if (v18)
          goto LABEL_12;
      }
      else
      {
        v17 = 1;
        while (v16)
        {
          v15 = ((_DWORD)v15 + v17) & v11;
          v16 = *(char ***)(v10 + 16 * v15);
          ++v17;
          if (v16 == &WebCore::JSCSSMathMin::s_info)
            goto LABEL_10;
        }
      }
    }
    v19 = (WebCore::JSCSSMathValue *)*((_QWORD *)v8 + 7);
    v20 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v19, v8, v6);
    v21 = WebCore::JSCSSMathMinPrototype::createStructure((uint64_t *)v19, (uint64_t)v8, v20);
    *(_DWORD *)(v21 + 16) |= 0x80000u;
    v23 = (JSC::JSCell *)WebCore::JSCSSMathMinPrototype::create(v19, v8, v21, v22);
    v24 = WebCore::JSCSSMathMin::createStructure((uint64_t *)v19, (uint64_t)v8, v23);
    v18 = WebCore::cacheDOMStructure((JSCell *)v8, v24, (uint64_t)&WebCore::JSCSSMathMin::s_info);
LABEL_12:
    v25 = (JSCell *)WebCore::JSCSSMathMin::create(v18, v8, (uint64_t *)&v64);
    WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(*((_QWORD *)v8 + 415), (uint64_t)v9, (uint64_t)v25);
    v27 = v64;
    v64 = 0;
    if (v27)
    {
      if (*((_DWORD *)v27 + 2) == 1)
        ((void (*)(uint64_t (***)()))(*v27)[2])(v27);
      else
        --*((_DWORD *)v27 + 2);
    }
    goto LABEL_15;
  }
  v25 = 0;
LABEL_32:
  v50 = v63;
  v63 = 0;
  if (v50)
  {
    v52 = (char *)v50 + 8;
    v51 = *(unsigned int *)v50;
    if ((_DWORD)v51)
    {
      v53 = 16 * v51;
      do
      {
        v54 = *((unsigned int *)v52 + 2);
        if ((_DWORD)v54 != -1)
          ((void (*)(int *, char *))off_1E322F628[v54])(v60, v52);
        *((_DWORD *)v52 + 2) = -1;
        v52 += 16;
        v53 -= 16;
      }
      while (v53);
    }
    WTF::fastFree(v50, v26);
  }
  return (uint64_t)v25;
}

uint64_t WebCore::JSCSSMathMin::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSMathMinPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSMathMinPrototype::create(WebCore::JSCSSMathMinPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSMathMin::s_info, (uint64_t)&WebCore::JSCSSMathMinPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMin>,(WebCore::DOMConstructorID)395>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3160);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCSSMathMin>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSMathMin::s_info + ~((_QWORD)&WebCore::JSCSSMathMin::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathMin::s_info + ~((_QWORD)&WebCore::JSCSSMathMin::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSMathMin::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSMathMin::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype((WebCore::JSCSSMathValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSMathMinPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSMathMinPrototype::create((WebCore::JSCSSMathMinPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSMathMin::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSMathMin::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3160) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSMathMinConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSMathMinPrototype::s_info != (char **)(16
                                                          * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMin>,(WebCore::DOMConstructorID)395>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSMathMin_values(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSNumericArray>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 72));
}

uint64_t WebCore::JSCSSMathMin::subspaceForImpl(WebCore::JSCSSMathMin *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3224);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3224))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3224);
    *(_QWORD *)(v8 + 3224) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3224);
  *(_QWORD *)(v3 + 3224) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSMathNegate>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  WebCore::JSDOMGlobalObject *v18;
  JSC::VM *v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char **v26;
  int v27;
  unint64_t v28;
  WebCore::JSCSSMathValue *v29;
  JSC::JSCell *v30;
  unint64_t Structure;
  JSC::Structure *v32;
  JSC::JSCell *v33;
  uint64_t v34;
  JSCell *v35;
  JSC::JSCell *v36;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v38;
  JSC::JSGlobalObject *v39;
  JSC::VM *v40;
  WebCore::JSDOMGlobalObject *v41;
  JSC::Structure *v42;
  JSC::VM *FunctionRealm;
  uint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char **v50;
  int v51;
  JSC::JSCell *v52;
  unint64_t v53;
  JSC::Structure *v54;
  JSC::JSCell *v55;
  uint64_t v56;
  unint64_t SubclassStructure;
  _DWORD *v58;
  int v59;
  JSValue v61;
  _BYTE v62[8];
  int v63;
  _OWORD v64[2];
  char v65;
  char *v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v61.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, a1, v61);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  if ((v6 & 0xFFFE000000000002) != 0)
    goto LABEL_15;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSNumericValue::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSNumericValue::s_info && v9 != 0);
  }
  if (v8 && (v12 = *(_QWORD *)(v6 + 24)) != 0)
  {
    ++*(_DWORD *)(v12 + 8);
    v67 = v12;
    v13 = 1;
    v68 = 1;
    v69 = 0;
  }
  else
  {
LABEL_15:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 48), (uint64_t)v64);
    v14 = DWORD2(v64[0]);
    if (DWORD2(v64[0]))
    {
      v14 = 1;
    }
    else
    {
      v67 = *(_QWORD *)&v64[0];
      v68 = 0;
    }
    v69 = v14;
    if (v14)
    {
      v35 = 0;
      v59 = 1;
LABEL_50:
      ((void (*)(_OWORD *, uint64_t *))off_1E322F648[v59])(v64, &v67);
      return v35;
    }
    v13 = 0;
  }
  v62[0] = 0;
  v63 = -1;
  ((void (*)(_OWORD *, _BYTE *, uint64_t *))off_1E322F638[v13])(v64, v62, &v67);
  v63 = v13;
  v15 = bmalloc::api::isoAllocate();
  if (v63 == -1)
    goto LABEL_62;
  v16 = v15;
  v66 = &v65;
  ((void (*)(_OWORD *__return_ptr, char **, _BYTE *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCoreL8copyTypeERKNS_7variantIJdNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISB_EENS6_21DefaultRefDerefTraitsISB_EEEEEEEE3__0JZNS8_L8copyTypeESJ_E3__1EEEEEJRKNS0_6__implIJdSG_EEEEEEDcOT_DpOT0____fmatrix[v63])(v64, &v66, v62);
  *(_DWORD *)(v16 + 8) = 1;
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 32) = 0;
  v17 = v64[1];
  *(_OWORD *)(v16 + 40) = v64[0];
  *(_OWORD *)(v16 + 56) = v17;
  *(_QWORD *)v16 = &off_1E339FB48;
  if (v63 == -1)
LABEL_62:
    std::__throw_bad_variant_access[abi:sn180100]();
  v66 = &v65;
  ((void (*)(char **, _BYTE *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore15CSSNumericValue16rectifyNumberishEONS_7variantIJdNS6_6RefPtrIS9_NS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEEEEEE3__0JZNS9_16rectifyNumberishESI_E3__1EEEEEJRNS0_6__implIJdSG_EEEEEEDcOT_DpOT0____fmatrix[v63])(&v66, v62);
  *(_QWORD *)&v64[0] = v16;
  if (v63 != -1)
    ((void (*)(char **, _BYTE *))off_1E322F628[v63])(&v66, v62);
  if (*(uint64_t (***)())v16 != &off_1E339FB48)
  {
    __break(0xC471u);
    JUMPOUT(0x1948B2004);
  }
  v19 = *(JSC::VM **)(v5 + 40);
  v20 = *((_QWORD *)v19 + 412);
  if (!v20)
    goto LABEL_31;
  v21 = *(_DWORD *)(v20 - 8);
  v22 = ((unint64_t)&WebCore::JSCSSMathNegate::s_info + ~((_QWORD)&WebCore::JSCSSMathNegate::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathNegate::s_info + ~((_QWORD)&WebCore::JSCSSMathNegate::s_info << 32)) >> 22);
  v23 = 9 * ((v22 + ~(v22 << 13)) ^ ((v22 + ~(v22 << 13)) >> 8));
  v24 = (v23 ^ (v23 >> 15)) + ~((v23 ^ (v23 >> 15)) << 27);
  v25 = v21 & ((v24 >> 31) ^ v24);
  v26 = *(char ***)(v20 + 16 * v25);
  if (v26 != &WebCore::JSCSSMathNegate::s_info)
  {
    v27 = 1;
    while (v26)
    {
      v25 = ((_DWORD)v25 + v27) & v21;
      v26 = *(char ***)(v20 + 16 * v25);
      ++v27;
      if (v26 == &WebCore::JSCSSMathNegate::s_info)
        goto LABEL_30;
    }
    goto LABEL_31;
  }
LABEL_30:
  v28 = *(_QWORD *)(v20 + 16 * v25 + 8);
  if (!v28)
  {
LABEL_31:
    v29 = (WebCore::JSCSSMathValue *)*((_QWORD *)v19 + 7);
    v30 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v29, v19, v18);
    Structure = WebCore::JSCSSMathNegatePrototype::createStructure((uint64_t *)v29, (uint64_t)v19, v30);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v33 = (JSC::JSCell *)WebCore::JSCSSMathNegatePrototype::create(v29, v19, Structure, v32);
    v34 = WebCore::JSCSSMathNegate::createStructure((uint64_t *)v29, (uint64_t)v19, v33);
    v28 = WebCore::cacheDOMStructure((JSCell *)v19, v34, (uint64_t)&WebCore::JSCSSMathNegate::s_info);
  }
  v35 = (JSCell *)WebCore::JSCSSMathNegate::create(v28, v19, (uint64_t *)v64);
  WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(*((_QWORD *)v19 + 415), v16, (uint64_t)v35);
  v36 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v36 & 0xFFFE000000000002) != 0)
    goto LABEL_45;
  Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v36);
  if (!Object)
    goto LABEL_45;
  v39 = Object;
  if (Object == *(JSC::JSGlobalObject **)(a2 + 24))
    goto LABEL_45;
  v40 = (JSC::VM *)*((_QWORD *)a1 + 7);
  FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v38);
  if (*((_DWORD *)v40 + 20))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v40) & 1) != 0)
      goto LABEL_45;
  }
  v44 = *((_QWORD *)FunctionRealm + 412);
  if (!v44)
    goto LABEL_42;
  v45 = *(_DWORD *)(v44 - 8);
  v46 = ((unint64_t)&WebCore::JSCSSMathNegate::s_info + ~((_QWORD)&WebCore::JSCSSMathNegate::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathNegate::s_info + ~((_QWORD)&WebCore::JSCSSMathNegate::s_info << 32)) >> 22);
  v47 = 9 * ((v46 + ~(v46 << 13)) ^ ((v46 + ~(v46 << 13)) >> 8));
  v48 = (v47 ^ (v47 >> 15)) + ~((v47 ^ (v47 >> 15)) << 27);
  v49 = v45 & ((v48 >> 31) ^ v48);
  v50 = *(char ***)(v44 + 16 * v49);
  if (v50 != &WebCore::JSCSSMathNegate::s_info)
  {
    v51 = 1;
    while (v50)
    {
      v49 = ((_DWORD)v49 + v51) & v45;
      v50 = *(char ***)(v44 + 16 * v49);
      ++v51;
      if (v50 == &WebCore::JSCSSMathNegate::s_info)
        goto LABEL_41;
    }
    goto LABEL_42;
  }
LABEL_41:
  v41 = *(WebCore::JSDOMGlobalObject **)(v44 + 16 * v49 + 8);
  if (!v41)
  {
LABEL_42:
    v52 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v40, FunctionRealm, v41);
    v53 = WebCore::JSCSSMathNegatePrototype::createStructure((uint64_t *)v40, (uint64_t)FunctionRealm, v52);
    *(_DWORD *)(v53 + 16) |= 0x80000u;
    v55 = (JSC::JSCell *)WebCore::JSCSSMathNegatePrototype::create(v40, FunctionRealm, v53, v54);
    v56 = WebCore::JSCSSMathNegate::createStructure((uint64_t *)v40, (uint64_t)FunctionRealm, v55);
    v41 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v56, (uint64_t)&WebCore::JSCSSMathNegate::s_info);
  }
  SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v39, v41, v42);
  if (!*((_DWORD *)v40 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v40) & 1) == 0)
    JSC::JSObject::setStructure(v35, v40, SubclassStructure);
LABEL_45:
  if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
    v35 = 0;
  v58 = *(_DWORD **)&v64[0];
  *(_QWORD *)&v64[0] = 0;
  if (v58)
  {
    if (v58[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v58 + 16))(v58);
    else
      --v58[2];
  }
  v59 = v69;
  if (v69 != -1)
    goto LABEL_50;
  return v35;
}

uint64_t WebCore::JSCSSMathNegate::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSMathNegatePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSMathNegatePrototype::create(WebCore::JSCSSMathNegatePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSMathNegate::s_info, (uint64_t)&WebCore::JSCSSMathNegatePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathNegate>,(WebCore::DOMConstructorID)396>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3168);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCSSMathNegate>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSMathNegate::s_info + ~((_QWORD)&WebCore::JSCSSMathNegate::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathNegate::s_info + ~((_QWORD)&WebCore::JSCSSMathNegate::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSMathNegate::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSMathNegate::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype((WebCore::JSCSSMathValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSMathNegatePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSMathNegatePrototype::create((WebCore::JSCSSMathNegatePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSMathNegate::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSMathNegate::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3168) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSMathNegateConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSMathNegatePrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathNegate>,(WebCore::DOMConstructorID)396>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSMathNegate_value(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72));
}

uint64_t WebCore::JSCSSMathNegate::subspaceForImpl(WebCore::JSCSSMathNegate *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3232);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3232))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3232);
    *(_QWORD *)(v8 + 3232) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3232);
  *(_QWORD *)(v3 + 3232) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSCSSMathProduct>::construct(JSC *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  WTF *v6;
  void *v7;
  WebCore::JSDOMGlobalObject *v8;
  WTF *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  JSC::VM *v14;
  uint64_t (***v15)();
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  unint64_t v24;
  WebCore::JSCSSMathValue *v25;
  JSC::JSCell *v26;
  unint64_t v27;
  JSC::Structure *v28;
  JSC::JSCell *v29;
  uint64_t v30;
  JSCell *v31;
  WTF::StringImpl *v32;
  uint64_t (***v33)();
  JSC::JSCell *v34;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v36;
  JSC::JSGlobalObject *v37;
  JSC::VM *v38;
  JSC::JSObject *v39;
  JSC::Structure *v40;
  JSC::VM *FunctionRealm;
  uint64_t v42;
  unsigned int v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char **v48;
  int v49;
  JSC::JSCell *v50;
  unint64_t Structure;
  JSC::Structure *v52;
  JSC::JSCell *v53;
  uint64_t v54;
  unint64_t SubclassStructure;
  WTF *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  WTF::StringImpl *v62;
  JSValue v63;
  uint64_t v64;
  uint64_t v65;
  WTF *v66;
  int v67[2];
  WTF::StringImpl *v68;
  int v69;
  WTF *v70;
  uint64_t (***v71)();
  WTF::StringImpl *v72;

  v4 = *((_QWORD *)a1 + 7);
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>((uint64_t)a1, a2, 0, &v70);
  if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
  {
    v6 = v70;
    v70 = 0;
    v66 = v6;
    WebCore::CSSMathProduct::create((unsigned int **)&v66, (uint64_t)v67);
    v9 = v66;
    v66 = 0;
    if (v9)
    {
      v11 = (char *)v9 + 8;
      v10 = *(unsigned int *)v9;
      if ((_DWORD)v10)
      {
        v12 = 16 * v10;
        do
        {
          v13 = *((unsigned int *)v11 + 2);
          if ((_DWORD)v13 != -1)
            ((void (*)(uint64_t (****)(), char *))off_1E322F628[v13])(&v71, v11);
          *((_DWORD *)v11 + 2) = -1;
          v11 += 16;
          v12 -= 16;
        }
        while (v12);
      }
      WTF::fastFree(v9, v7);
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      goto LABEL_63;
    if (v69)
    {
      if (v69 != 1)
      {
        v64 = std::__throw_bad_variant_access[abi:sn180100]();
        return WebCore::JSCSSMathProduct::analyzeHeap(v64, v65);
      }
      v32 = (WTF::StringImpl *)LOBYTE(v67[0]);
      LOBYTE(v71) = v67[0];
      v62 = v68;
      v68 = 0;
      v72 = v62;
      if (!*(_QWORD *)(v4 + 16))
      {
        v63.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v67[0]), (JSC::JSGlobalObject *)&v72);
        JSC::VM::throwException((JSC::VM *)v4, a1, v63);
        v62 = v72;
      }
      v72 = 0;
      if (v62)
      {
        if (*(_DWORD *)v62 == 2)
          WTF::StringImpl::destroy(v62, v32);
        else
          *(_DWORD *)v62 -= 2;
      }
      v31 = 0;
LABEL_22:
      if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
        goto LABEL_63;
      v34 = *(JSC::JSCell **)(a2 + 40);
      if (((unint64_t)v34 & 0xFFFE000000000002) != 0
        || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v34)) == 0
        || (v37 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
        || (v38 = (JSC::VM *)*((_QWORD *)a1 + 7),
            FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v36),
            *((_DWORD *)v38 + 20))
        && (JSC::VM::hasExceptionsAfterHandlingTraps(v38) & 1) != 0)
      {
LABEL_36:
        if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
        {
LABEL_37:
          if (v69 != -1)
            ((void (*)(uint64_t (****)(), int *))off_1E3230590[v69])(&v71, v67);
          goto LABEL_39;
        }
LABEL_63:
        v31 = 0;
        goto LABEL_37;
      }
      v42 = *((_QWORD *)FunctionRealm + 412);
      if (v42)
      {
        v43 = *(_DWORD *)(v42 - 8);
        v44 = ((unint64_t)&WebCore::JSCSSMathProduct::s_info + ~((_QWORD)&WebCore::JSCSSMathProduct::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathProduct::s_info + ~((_QWORD)&WebCore::JSCSSMathProduct::s_info << 32)) >> 22);
        v45 = 9 * ((v44 + ~(v44 << 13)) ^ ((v44 + ~(v44 << 13)) >> 8));
        v46 = (v45 ^ (v45 >> 15)) + ~((v45 ^ (v45 >> 15)) << 27);
        v47 = v43 & ((v46 >> 31) ^ v46);
        v48 = *(char ***)(v42 + 16 * v47);
        if (v48 == &WebCore::JSCSSMathProduct::s_info)
        {
LABEL_32:
          v39 = *(JSC::JSObject **)(v42 + 16 * v47 + 8);
          if (v39)
          {
LABEL_34:
            SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v37, v39, v40);
            if (!*((_DWORD *)v38 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v38) & 1) == 0)
              JSC::JSObject::setStructure(v31, v38, SubclassStructure);
            goto LABEL_36;
          }
        }
        else
        {
          v49 = 1;
          while (v48)
          {
            v47 = ((_DWORD)v47 + v49) & v43;
            v48 = *(char ***)(v42 + 16 * v47);
            ++v49;
            if (v48 == &WebCore::JSCSSMathProduct::s_info)
              goto LABEL_32;
          }
        }
      }
      v50 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v38, FunctionRealm, v39);
      Structure = WebCore::JSCSSMathProductPrototype::createStructure((uint64_t *)v38, (uint64_t)FunctionRealm, v50);
      *(_DWORD *)(Structure + 16) |= 0x80000u;
      v53 = (JSC::JSCell *)WebCore::JSCSSMathProductPrototype::create(v38, FunctionRealm, Structure, v52);
      v54 = WebCore::JSCSSMathProduct::createStructure((uint64_t *)v38, (uint64_t)FunctionRealm, v53);
      v39 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v54, (uint64_t)&WebCore::JSCSSMathProduct::s_info);
      goto LABEL_34;
    }
    v14 = *(JSC::VM **)(v5 + 40);
    v15 = *(uint64_t (****)())v67;
    *(_QWORD *)v67 = 0;
    v71 = v15;
    if (*v15 != &off_1E339FBA8)
    {
      __break(0xC471u);
      JUMPOUT(0x1948B2F84);
    }
    v16 = *((_QWORD *)v14 + 412);
    if (v16)
    {
      v17 = *(_DWORD *)(v16 - 8);
      v18 = ((unint64_t)&WebCore::JSCSSMathProduct::s_info + ~((_QWORD)&WebCore::JSCSSMathProduct::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathProduct::s_info + ~((_QWORD)&WebCore::JSCSSMathProduct::s_info << 32)) >> 22);
      v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
      v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
      v21 = v17 & ((v20 >> 31) ^ v20);
      v22 = *(char ***)(v16 + 16 * v21);
      if (v22 == &WebCore::JSCSSMathProduct::s_info)
      {
LABEL_17:
        v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
        if (v24)
          goto LABEL_19;
      }
      else
      {
        v23 = 1;
        while (v22)
        {
          v21 = ((_DWORD)v21 + v23) & v17;
          v22 = *(char ***)(v16 + 16 * v21);
          ++v23;
          if (v22 == &WebCore::JSCSSMathProduct::s_info)
            goto LABEL_17;
        }
      }
    }
    v25 = (WebCore::JSCSSMathValue *)*((_QWORD *)v14 + 7);
    v26 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v25, v14, v8);
    v27 = WebCore::JSCSSMathProductPrototype::createStructure((uint64_t *)v25, (uint64_t)v14, v26);
    *(_DWORD *)(v27 + 16) |= 0x80000u;
    v29 = (JSC::JSCell *)WebCore::JSCSSMathProductPrototype::create(v25, v14, v27, v28);
    v30 = WebCore::JSCSSMathProduct::createStructure((uint64_t *)v25, (uint64_t)v14, v29);
    v24 = WebCore::cacheDOMStructure((JSCell *)v14, v30, (uint64_t)&WebCore::JSCSSMathProduct::s_info);
LABEL_19:
    v31 = (JSCell *)WebCore::JSCSSMathProduct::create(v24, v14, (uint64_t *)&v71);
    WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(*((_QWORD *)v14 + 415), (uint64_t)v15, (uint64_t)v31);
    v33 = v71;
    v71 = 0;
    if (v33)
    {
      if (*((_DWORD *)v33 + 2) == 1)
        ((void (*)(uint64_t (***)()))(*v33)[2])(v33);
      else
        --*((_DWORD *)v33 + 2);
    }
    goto LABEL_22;
  }
  v31 = 0;
LABEL_39:
  v56 = v70;
  v70 = 0;
  if (v56)
  {
    v58 = (char *)v56 + 8;
    v57 = *(unsigned int *)v56;
    if ((_DWORD)v57)
    {
      v59 = 16 * v57;
      do
      {
        v60 = *((unsigned int *)v58 + 2);
        if ((_DWORD)v60 != -1)
          ((void (*)(int *, char *))off_1E322F628[v60])(v67, v58);
        *((_DWORD *)v58 + 2) = -1;
        v58 += 16;
        v59 -= 16;
      }
      while (v59);
    }
    WTF::fastFree(v56, v32);
  }
  return (uint64_t)v31;
}

uint64_t WebCore::JSCSSMathProduct::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSMathProductPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSMathProductPrototype::create(WebCore::JSCSSMathProductPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSMathProduct::s_info, (uint64_t)&WebCore::JSCSSMathProductPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathProduct>,(WebCore::DOMConstructorID)397>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3176);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCSSMathProduct>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSMathProduct::s_info + ~((_QWORD)&WebCore::JSCSSMathProduct::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathProduct::s_info + ~((_QWORD)&WebCore::JSCSSMathProduct::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSMathProduct::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSMathProduct::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype((WebCore::JSCSSMathValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSMathProductPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSMathProductPrototype::create((WebCore::JSCSSMathProductPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSMathProduct::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSMathProduct::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3176) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSMathProductConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSMathProductPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathProduct>,(WebCore::DOMConstructorID)397>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSMathProduct_values(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSNumericArray>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 72));
}

uint64_t WebCore::JSCSSMathProduct::subspaceForImpl(WebCore::JSCSSMathProduct *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3240);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3240))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3240);
    *(_QWORD *)(v8 + 3240) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3240);
  *(_QWORD *)(v3 + 3240) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSCSSMathSum>::construct(JSC *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  void *v7;
  WebCore::JSDOMGlobalObject *v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  JSC::VM *v14;
  uint64_t (***v15)();
  WTF::StringImpl *v16;
  JSCell *v17;
  uint64_t (***v18)();
  JSC::JSCell *v19;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v21;
  JSC::JSGlobalObject *v22;
  JSC::VM *v23;
  JSC::JSObject *v24;
  JSC::Structure *v25;
  JSC::VM *FunctionRealm;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char **v33;
  int v34;
  JSC::JSCell *v35;
  unint64_t Structure;
  JSC::Structure *v37;
  JSC::JSCell *v38;
  uint64_t v39;
  unint64_t SubclassStructure;
  WTF *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  WTF::StringImpl *v47;
  JSValue v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int *v51;
  int v52[2];
  WTF::StringImpl *v53;
  int v54;
  WTF *v55;
  uint64_t (***v56)();
  WTF::StringImpl *v57;

  v4 = *((_QWORD *)a1 + 7);
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>((uint64_t)a1, a2, 0, &v55);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
  {
    v17 = 0;
    goto LABEL_32;
  }
  v6 = (unsigned int *)v55;
  v55 = 0;
  v51 = v6;
  WebCore::CSSMathSum::create(&v51, (uint64_t)v52);
  v51 = 0;
  if (v6)
  {
    v10 = v6 + 2;
    v9 = *v6;
    if ((_DWORD)v9)
    {
      v11 = 16 * v9;
      do
      {
        v12 = v10[2];
        if ((_DWORD)v12 != -1)
          ((void (*)(uint64_t (****)(), unsigned int *))off_1E322F628[v12])(&v56, v10);
        v10[2] = -1;
        v10 += 4;
        v11 -= 16;
      }
      while (v11);
    }
    WTF::fastFree((WTF *)v6, v7);
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
  {
    v17 = 0;
    v13 = v54;
    goto LABEL_30;
  }
  v13 = v54;
  if (v54)
  {
    if (v54 != 1)
    {
      v49 = std::__throw_bad_variant_access[abi:sn180100]();
      return WebCore::JSCSSMathSum::analyzeHeap(v49, v50);
    }
    v16 = (WTF::StringImpl *)LOBYTE(v52[0]);
    LOBYTE(v56) = v52[0];
    v47 = v53;
    v53 = 0;
    v57 = v47;
    if (!*(_QWORD *)(v4 + 16))
    {
      v48.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v52[0]), (JSC::JSGlobalObject *)&v57);
      JSC::VM::throwException((JSC::VM *)v4, a1, v48);
      v47 = v57;
    }
    v57 = 0;
    if (v47)
    {
      if (*(_DWORD *)v47 == 2)
        WTF::StringImpl::destroy(v47, v16);
      else
        *(_DWORD *)v47 -= 2;
    }
    v17 = 0;
  }
  else
  {
    v14 = *(JSC::VM **)(v5 + 40);
    v15 = *(uint64_t (****)())v52;
    *(_QWORD *)v52 = 0;
    v56 = v15;
    if (*v15 != &off_1E339FC08)
    {
      __break(0xC471u);
      JUMPOUT(0x1948B3E14);
    }
    v17 = (JSCell *)WebCore::createWrapper<WebCore::CSSMathSum,WebCore::CSSMathSum>(v14, (uint64_t *)&v56, v8);
    v18 = v56;
    v56 = 0;
    if (v18)
    {
      if (*((_DWORD *)v18 + 2) == 1)
        ((void (*)(uint64_t (***)()))(*v18)[2])(v18);
      else
        --*((_DWORD *)v18 + 2);
    }
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
  {
    v17 = 0;
    goto LABEL_31;
  }
  v19 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v19 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v19);
    if (Object)
    {
      v22 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v23 = (JSC::VM *)*((_QWORD *)a1 + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v21);
        if (!*((_DWORD *)v23 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) == 0)
        {
          v27 = *((_QWORD *)FunctionRealm + 412);
          if (v27)
          {
            v28 = *(_DWORD *)(v27 - 8);
            v29 = ((unint64_t)&WebCore::JSCSSMathSum::s_info + ~((_QWORD)&WebCore::JSCSSMathSum::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathSum::s_info + ~((_QWORD)&WebCore::JSCSSMathSum::s_info << 32)) >> 22);
            v30 = 9 * ((v29 + ~(v29 << 13)) ^ ((v29 + ~(v29 << 13)) >> 8));
            v31 = (v30 ^ (v30 >> 15)) + ~((v30 ^ (v30 >> 15)) << 27);
            v32 = v28 & ((v31 >> 31) ^ v31);
            v33 = *(char ***)(v27 + 16 * v32);
            if (v33 == &WebCore::JSCSSMathSum::s_info)
            {
LABEL_25:
              v24 = *(JSC::JSObject **)(v27 + 16 * v32 + 8);
              if (v24)
              {
LABEL_27:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v22, v24, v25);
                if (!*((_DWORD *)v23 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) == 0)
                  JSC::JSObject::setStructure(v17, v23, SubclassStructure);
                goto LABEL_29;
              }
            }
            else
            {
              v34 = 1;
              while (v33)
              {
                v32 = ((_DWORD)v32 + v34) & v28;
                v33 = *(char ***)(v27 + 16 * v32);
                ++v34;
                if (v33 == &WebCore::JSCSSMathSum::s_info)
                  goto LABEL_25;
              }
            }
          }
          v35 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v23, FunctionRealm, v24);
          Structure = WebCore::JSCSSMathSumPrototype::createStructure((uint64_t *)v23, (uint64_t)FunctionRealm, v35);
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v38 = (JSC::JSCell *)WebCore::JSCSSMathSumPrototype::create(v23, FunctionRealm, Structure, v37);
          v39 = WebCore::JSCSSMathSum::createStructure((uint64_t *)v23, (uint64_t)FunctionRealm, v38);
          v24 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v39, (uint64_t)&WebCore::JSCSSMathSum::s_info);
          goto LABEL_27;
        }
      }
    }
  }
LABEL_29:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    v17 = 0;
LABEL_30:
  if (v13 != -1)
LABEL_31:
    ((void (*)(uint64_t (****)(), int *))off_1E32305F0[v13])(&v56, v52);
LABEL_32:
  v41 = v55;
  v55 = 0;
  if (v41)
  {
    v43 = (char *)v41 + 8;
    v42 = *(unsigned int *)v41;
    if ((_DWORD)v42)
    {
      v44 = 16 * v42;
      do
      {
        v45 = *((unsigned int *)v43 + 2);
        if ((_DWORD)v45 != -1)
          ((void (*)(int *, char *))off_1E322F628[v45])(v52, v43);
        *((_DWORD *)v43 + 2) = -1;
        v43 += 16;
        v44 -= 16;
      }
      while (v44);
    }
    WTF::fastFree(v41, v16);
  }
  return (uint64_t)v17;
}

uint64_t WebCore::JSCSSMathSum::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSMathValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSMathSumPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSMathSumPrototype::create(WebCore::JSCSSMathSumPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSMathSum::s_info, (uint64_t)&WebCore::JSCSSMathSumPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathSum>,(WebCore::DOMConstructorID)398>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3184);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCSSMathSum>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSMathSum::s_info + ~((_QWORD)&WebCore::JSCSSMathSum::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathSum::s_info + ~((_QWORD)&WebCore::JSCSSMathSum::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSMathSum::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSMathSum::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype((WebCore::JSCSSMathValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSMathSumPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSMathSumPrototype::create((WebCore::JSCSSMathSumPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSMathSum::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSMathSum::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3184) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSMathSumConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSMathSumPrototype::s_info != (char **)(16
                                                          * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathSum>,(WebCore::DOMConstructorID)398>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSMathSum_values(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSNumericArray>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 72));
}

uint64_t WebCore::JSCSSMathSum::subspaceForImpl(WebCore::JSCSSMathSum *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3248);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3248))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3248);
    *(_QWORD *)(v8 + 3248) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3248);
  *(_QWORD *)(v3 + 3248) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::CSSMathSum,WebCore::CSSMathSum>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSMathValue *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSCSSMathSum::s_info + ~((_QWORD)&WebCore::JSCSSMathSum::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMathSum::s_info + ~((_QWORD)&WebCore::JSCSSMathSum::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSCSSMathSum::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSCSSMathSum::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSCSSMathValue *)*((_QWORD *)a1 + 7);
    v16 = (JSC::JSCell *)WebCore::JSCSSMathValue::prototype(v15, a1, a3);
    Structure = WebCore::JSCSSMathSumPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSCSSMathSumPrototype::create(v15, a1, Structure, v18);
    v20 = WebCore::JSCSSMathSum::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSCSSMathSum::s_info);
  }
  v21 = WebCore::JSCSSMathSum::create(v14, a1, a2);
  WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(*((_QWORD *)a1 + 415), v5, v21);
  return v21;
}

uint64_t WebCore::wrap<WebCore::CSSMathSum>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t result;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _DWORD *v16;

  v3 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v3 + 48))
  {
    v8 = *(_QWORD *)(v3 + 32);
    if (!v8)
      goto LABEL_5;
    v9 = *(_DWORD *)(v8 - 8);
    v10 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(_QWORD *)(v8 + 16 * v13);
    if (v14 != a3)
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(_QWORD *)(v8 + 16 * v13);
        ++v15;
        if (v14 == a3)
          goto LABEL_16;
      }
      goto LABEL_5;
    }
LABEL_16:
    v4 = *(_QWORD *)(v8 + 16 * v13 + 8);
    if (!v4)
      goto LABEL_5;
  }
  else
  {
    v4 = *(_QWORD *)(a3 + 16);
    if (!v4)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v4 + 8) & 3) == 0)
  {
    v5 = *(_QWORD *)v4;
    if (*(_QWORD *)v4)
      return v5;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 8);
  v16 = (_DWORD *)a3;
  if (*(uint64_t (***)())a3 == &off_1E339FC08)
  {
    v5 = WebCore::createWrapper<WebCore::CSSMathSum,WebCore::CSSMathSum>(a2, (uint64_t *)&v16, (WebCore::JSDOMGlobalObject *)a3);
    v6 = v16;
    v16 = 0;
    if (v6)
    {
      if (v6[2] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 16))(v6);
      else
        --v6[2];
    }
    return v5;
  }
  result = 243;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSMathValuePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSMathValuePrototype::create(WebCore::JSCSSMathValuePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSMathValue::s_info, (uint64_t)&WebCore::JSCSSMathValuePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3192);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericValue>,(WebCore::DOMConstructorID)375>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSCSSMathValue::prototype((WebCore::JSCSSMathValue *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3192) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSMathValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSMathValuePrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSMathValue_operator(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;

  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 72))(*(_QWORD *)(a2 + 24));
  v5 = *(_QWORD *)(a1 + 56);
  v6 = (uint64_t *)(v5 + 41968);
  if ((byte_1EE334C74 & 1) == 0)
  {
    dword_1ECE77020 += 2;
    unk_1EE334D20 = &dword_1ECE77020;
    dword_1ECE77040 += 2;
    unk_1EE334D28 = &dword_1ECE77040;
    dword_1ECE77060 += 2;
    unk_1EE334D30 = &dword_1ECE77060;
    dword_1ECE77080 += 2;
    unk_1EE334D38 = &dword_1ECE77080;
    dword_1ECE770A0 += 2;
    unk_1EE334D40 = &dword_1ECE770A0;
    dword_1ECE770C0 += 2;
    unk_1EE334D48 = &dword_1ECE770C0;
    dword_1ECE770E0 += 2;
    unk_1EE334D50 = &dword_1ECE770E0;
    byte_1EE334C74 = 1;
  }
  v7 = *(_QWORD *)&_MergedGlobals_770[8 * v4 + 176];
  if (!v7)
    return *v6;
  v8 = *(_DWORD *)v7;
  v9 = *(_DWORD *)(v7 + 4);
  *(_DWORD *)v7 += 2;
  if (v9)
  {
    if (v9 != 1)
    {
LABEL_6:
      v10 = *(_QWORD *)(v5 + 64760);
      if (!v10 || v7 != *(_QWORD *)(v10 + 8))
      {
        v10 = JSC::jsStringWithCacheSlowCase();
        v8 = *(_DWORD *)v7 - 2;
      }
      goto LABEL_9;
    }
    v12 = *(unsigned __int8 **)(v7 + 8);
    if ((*(_BYTE *)(v7 + 16) & 4) != 0)
    {
      v13 = *v12;
    }
    else
    {
      v14 = *(unsigned __int16 *)v12;
      if (v14 > 0xFF)
        goto LABEL_6;
      v13 = v14;
    }
    v10 = *(_QWORD *)(v5 + 8 * v13 + 42216);
  }
  else
  {
    v10 = *v6;
  }
LABEL_9:
  if (v8)
    *(_DWORD *)v7 = v8;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v7, v3);
  return v10;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSMatrixComponent>::construct(JSC *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  char **v16;
  BOOL v17;
  JSCell *v19;
  _DWORD *v20;
  JSC::JSCell *v21;
  uint64_t Object;
  JSC::Structure *v23;
  WTF::StringImpl *v24;
  unint64_t v25;
  JSC::VM *v26;
  double v27;
  char v28;
  _DWORD *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  JSC::JSCell *v40;
  JSC::JSGlobalObject *v41;
  JSC::JSObject *v42;
  JSC::JSGlobalObject *v43;
  JSC::VM *v44;
  WebCore::JSDOMGlobalObject *v45;
  JSC::Structure *v46;
  JSC::VM *FunctionRealm;
  uint64_t v48;
  unsigned int v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char **v54;
  int v55;
  JSC::JSCell *v56;
  unint64_t Structure;
  JSC::Structure *v58;
  JSC::JSCell *v59;
  uint64_t v60;
  unint64_t SubclassStructure;
  WTF::StringImpl *v62;
  JSValue v64;
  BOOL v65;
  int v66;
  uint64_t v67;
  int *v68;
  int v69;
  WTF::StringImpl *v70;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v10 = *(int *)(a2 + 32);
  if ((_DWORD)v10 == 1)
  {
    v64.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v9, this, v64);
  }
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 48);
  v70 = (WTF::StringImpl *)*((_QWORD *)this + 7);
  if ((v13 & 0xFFFE000000000002) != 0)
    goto LABEL_13;
  v14 = *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C);
  v15 = *(_DWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) != 0;
  v16 = (char **)(16 * v14);
  if ((_DWORD)v14)
    v17 = v16 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v17 = 1;
  if (!v17)
  {
    do
    {
      v16 = (char **)v16[2];
      v15 = v16 != 0;
    }
    while (v16 != &WebCore::JSDOMMatrixReadOnly::s_info && v16 != 0);
  }
  if (!v15 || (v20 = *(_DWORD **)(v13 + 24)) == 0)
  {
LABEL_13:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v70, 0, "matrix", 7, "CSSMatrixComponent", 19, a8, 0, 0, "DOMMatrixReadOnly", 18);
    return 0;
  }
  if ((unint64_t)(v10 - 3) >= 0xFFFFFFFFFFFFFFFELL)
    goto LABEL_30;
  v21 = *(JSC::JSCell **)(a2 + 56);
  if (((unint64_t)v21 & 0xFFFFFFFFFFFFFFF7) == 2)
    goto LABEL_30;
  if (((unint64_t)v21 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v21)) == 0)
  {
    JSC::throwTypeError();
    return 0;
  }
  v23 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v25 = JSC::JSObject::get(v23, this, (unint64_t)v70);
  if (v70)
  {
    if (*(_DWORD *)v70 == 2)
      WTF::StringImpl::destroy(v70, v24);
    else
      *(_DWORD *)v70 -= 2;
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  if (v25 == 10)
  {
LABEL_30:
    v29 = v20 + 2;
    ++v20[2];
    v28 = *((_BYTE *)v20 + 144);
    goto LABEL_31;
  }
  v26 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v25 >= 0xFFFE000000000000)
  {
    v65 = (_DWORD)v25 == 0;
    goto LABEL_84;
  }
  *(_QWORD *)&v27 = v25 - 0x2000000000000;
  if (v25 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    v28 = v27 > 0.0 || v27 < 0.0;
    goto LABEL_28;
  }
  if ((v25 & 0xFFFE000000000002) != 0)
  {
    v28 = v25 == 7;
    goto LABEL_28;
  }
  v66 = *(unsigned __int8 *)(v25 + 5);
  if (v66 == 3)
  {
    v69 = *(_DWORD *)(v25 + 8);
LABEL_80:
    v65 = v69 == 0;
    goto LABEL_84;
  }
  if (v66 == 2)
  {
    v67 = *(_QWORD *)(v25 + 8);
    if ((v67 & 1) != 0)
      v68 = (int *)(v25 + 16);
    else
      v68 = (int *)(v67 + 4);
    v69 = *v68;
    goto LABEL_80;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0xA) & 1) != 0)
  {
    v65 = *(_QWORD *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_84:
    v28 = !v65;
    goto LABEL_28;
  }
  v28 = 1;
LABEL_28:
  if (*((_DWORD *)v26 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v26))
    return 0;
  v29 = v20 + 2;
  ++v20[2];
LABEL_31:
  v30 = bmalloc::api::isoAllocate();
  *(_DWORD *)(v30 + 8) = 1;
  *(_BYTE *)(v30 + 12) = v28;
  *(_QWORD *)v30 = &off_1E339FC68;
  v31 = *((_BYTE *)v20 + 144);
  v32 = bmalloc::api::isoAllocate();
  *(_QWORD *)v32 = 0;
  *(_DWORD *)(v32 + 8) = 1;
  v34 = *((_OWORD *)v20 + 1);
  v35 = *((_OWORD *)v20 + 2);
  v36 = *((_OWORD *)v20 + 4);
  *(_OWORD *)(v32 + 48) = *((_OWORD *)v20 + 3);
  *(_OWORD *)(v32 + 64) = v36;
  *(_OWORD *)(v32 + 16) = v34;
  *(_OWORD *)(v32 + 32) = v35;
  v37 = *((_OWORD *)v20 + 5);
  v38 = *((_OWORD *)v20 + 6);
  v39 = *((_OWORD *)v20 + 8);
  *(_OWORD *)(v32 + 112) = *((_OWORD *)v20 + 7);
  *(_OWORD *)(v32 + 128) = v39;
  *(_OWORD *)(v32 + 80) = v37;
  *(_OWORD *)(v32 + 96) = v38;
  *(_BYTE *)(v32 + 144) = v31;
  *(_QWORD *)(v30 + 16) = v32;
  v70 = (WTF::StringImpl *)v30;
  if (v20[2] == 1)
  {
    if (*(_QWORD *)v20)
    {
      *(_QWORD *)(*(_QWORD *)v20 + 8) = 3;
      *(_QWORD *)v20 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v20, v33);
  }
  else
  {
    *v29 = v20[2] - 1;
  }
  v19 = (JSCell *)WebCore::toJSNewlyCreated((uint64_t)this, *(_QWORD *)(v12 + 40), (uint64_t *)&v70);
  v40 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v40 & 0xFFFE000000000002) != 0)
    goto LABEL_46;
  v41 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v40);
  if (!v41)
    goto LABEL_46;
  v43 = v41;
  if (v41 == *(JSC::JSGlobalObject **)(a2 + 24))
    goto LABEL_46;
  v44 = (JSC::VM *)*((_QWORD *)this + 7);
  FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, v41, v42);
  if (*((_DWORD *)v44 + 20))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v44) & 1) != 0)
      goto LABEL_46;
  }
  v48 = *((_QWORD *)FunctionRealm + 412);
  if (!v48)
    goto LABEL_43;
  v49 = *(_DWORD *)(v48 - 8);
  v50 = ((unint64_t)&WebCore::JSCSSMatrixComponent::s_info
       + ~((_QWORD)&WebCore::JSCSSMatrixComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMatrixComponent::s_info
                                                                    + ~((_QWORD)&WebCore::JSCSSMatrixComponent::s_info << 32)) >> 22);
  v51 = 9 * ((v50 + ~(v50 << 13)) ^ ((v50 + ~(v50 << 13)) >> 8));
  v52 = (v51 ^ (v51 >> 15)) + ~((v51 ^ (v51 >> 15)) << 27);
  v53 = v49 & ((v52 >> 31) ^ v52);
  v54 = *(char ***)(v48 + 16 * v53);
  if (v54 != &WebCore::JSCSSMatrixComponent::s_info)
  {
    v55 = 1;
    while (v54)
    {
      v53 = ((_DWORD)v53 + v55) & v49;
      v54 = *(char ***)(v48 + 16 * v53);
      ++v55;
      if (v54 == &WebCore::JSCSSMatrixComponent::s_info)
        goto LABEL_42;
    }
    goto LABEL_43;
  }
LABEL_42:
  v45 = *(WebCore::JSDOMGlobalObject **)(v48 + 16 * v53 + 8);
  if (!v45)
  {
LABEL_43:
    v56 = (JSC::JSCell *)WebCore::JSCSSTransformComponent::prototype(v44, FunctionRealm, v45);
    Structure = WebCore::JSCSSMatrixComponentPrototype::createStructure((uint64_t *)v44, (uint64_t)FunctionRealm, v56);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v59 = (JSC::JSCell *)WebCore::JSCSSMatrixComponentPrototype::create(v44, FunctionRealm, Structure, v58);
    v60 = WebCore::JSCSSMatrixComponent::createStructure((uint64_t *)v44, (uint64_t)FunctionRealm, v59);
    v45 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v60, (uint64_t)&WebCore::JSCSSMatrixComponent::s_info);
  }
  SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v43, v45, v46);
  if (!*((_DWORD *)v44 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v44) & 1) == 0)
    JSC::JSObject::setStructure(v19, v44, SubclassStructure);
LABEL_46:
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    v19 = 0;
  v62 = v70;
  v70 = 0;
  if (v62)
  {
    if (*((_DWORD *)v62 + 2) == 1)
      (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v62 + 32))(v62);
    else
      --*((_DWORD *)v62 + 2);
  }
  return v19;
}

uint64_t WebCore::JSCSSMatrixComponent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSMatrixComponentPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSMatrixComponentPrototype::create(WebCore::JSCSSMatrixComponentPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSMatrixComponent::s_info, (uint64_t)&WebCore::JSCSSMatrixComponentPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMatrixComponent>,(WebCore::DOMConstructorID)401>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3208);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCSSMatrixComponent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSMatrixComponent::s_info
         + ~((_QWORD)&WebCore::JSCSSMatrixComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMatrixComponent::s_info
                                                                      + ~((_QWORD)&WebCore::JSCSSMatrixComponent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSMatrixComponent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSMatrixComponent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSTransformComponent::prototype((WebCore::JSCSSTransformComponent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSMatrixComponentPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSMatrixComponentPrototype::create((WebCore::JSCSSMatrixComponentPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSMatrixComponent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSMatrixComponent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3208) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSMatrixComponentConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSMatrixComponentPrototype::s_info != (char **)(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                    + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMatrixComponent>,(WebCore::DOMConstructorID)401>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSMatrixComponent_matrix(int a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::DOMMatrix>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(bmalloc::api **)(*(_QWORD *)(a2 + 24) + 16));
}

uint64_t WebCore::setJSCSSMatrixComponent_matrix(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  uint64_t v15;
  bmalloc::api *v16;
  uint64_t v17;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSCSSMatrixComponent::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSCSSMatrixComponent::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a1 + 56);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_23;
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMMatrix::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMMatrix::s_info && v11 != 0);
  }
  if (v10 && (v15 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v15 + 8);
    v16 = *(bmalloc::api **)(v8 + 16);
    *(_QWORD *)(v8 + 16) = v15;
    if (v16)
    {
      if (*((_DWORD *)v16 + 2) == 1)
      {
        if (*(_QWORD *)v16)
        {
          *(_QWORD *)(*(_QWORD *)v16 + 8) = 3;
          *(_QWORD *)v16 = 0;
        }
        bmalloc::api::isoDeallocate(v16, (void *)a2);
      }
      else
      {
        --*((_DWORD *)v16 + 2);
      }
    }
    return 1;
  }
  else
  {
LABEL_23:
    WebCore::throwAttributeTypeError(a1, (int)&v17, "CSSMatrixComponent", 19, "matrix", 7, "DOMMatrix", 10);
    return 0;
  }
}

uint64_t WebCore::JSCSSMatrixComponent::subspaceForImpl(WebCore::JSCSSMatrixComponent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3280);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3280))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3280);
    *(_QWORD *)(v8 + 3280) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3280);
  *(_QWORD *)(v3 + 3280) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::CSSMatrixComponent,WebCore::CSSMatrixComponent>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSTransformComponent *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *Allocator;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSCSSMatrixComponent::s_info
        + ~((_QWORD)&WebCore::JSCSSMatrixComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMatrixComponent::s_info
                                                                     + ~((_QWORD)&WebCore::JSCSSMatrixComponent::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSCSSMatrixComponent::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSCSSMatrixComponent::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSCSSTransformComponent *)*((_QWORD *)a1 + 7);
  v16 = (JSC::JSCell *)WebCore::JSCSSTransformComponent::prototype(v15, a1, a3);
  Structure = WebCore::JSCSSMatrixComponentPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSCSSMatrixComponentPrototype::create(v15, a1, Structure, v18);
  v20 = WebCore::JSCSSMatrixComponent::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSCSSMatrixComponent::s_info);
LABEL_8:
  v21 = WebCore::JSCSSMatrixComponent::create(v14, a1, a2);
  v22 = v21;
  v23 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner = (uint64_t)&off_1E324B1D0;
  }
  v24 = (uint64_t *)(v23 + 32);
  v31 = v5;
  if (v21)
  {
    v27 = v23;
    if ((v21 & 8) != 0)
      v28 = (v21 - 112) | 1;
    else
      v28 = v21 & 0xFFFFFFFFFFFFC000;
    if ((v28 & 1) != 0)
      v29 = v28 + 47;
    else
      v29 = *(_QWORD *)v28 + 32;
    Allocator = *(_QWORD **)(v29 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v29 + 16) = *Allocator;
    *Allocator = v22;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner;
    Allocator[2] = v27;
  }
  else
  {
    Allocator = 0;
  }
  v30 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v24, &v31, (uint64_t *)&v30);
  if (v30)
    v30[1] = 3;
  return v22;
}

uint64_t WebCore::JSCSSMediaRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSConditionRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSConditionRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSConditionRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSMediaRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSMediaRulePrototype::create(WebCore::JSCSSMediaRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSMediaRule::s_info, (uint64_t)&WebCore::JSCSSMediaRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMediaRule>,(WebCore::DOMConstructorID)343>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2744);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSConditionRule>,(WebCore::DOMConstructorID)331>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMediaRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSMediaRule::s_info + ~((_QWORD)&WebCore::JSCSSMediaRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSMediaRule::s_info + ~((_QWORD)&WebCore::JSCSSMediaRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSMediaRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSMediaRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSConditionRule::prototype((WebCore::JSCSSConditionRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSMediaRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSMediaRulePrototype::create((WebCore::JSCSSMediaRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSMediaRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSMediaRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2744) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSMediaRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSMediaRulePrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMediaRule>,(WebCore::DOMConstructorID)343>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSMediaRule_media(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  WTF *v7;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(_QWORD *)(v3 + 56);
  if (v5)
    return WebCore::wrap<WebCore::MediaList>(a1, v4, (WTF *)v5);
  v5 = WTF::fastMalloc((WTF *)0x30);
  *(_DWORD *)v5 = 1;
  *(_QWORD *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = 0;
  *(_BYTE *)(v5 + 40) = 0;
  v7 = *(WTF **)(v3 + 56);
  *(_QWORD *)(v3 + 56) = v5;
  if (!v7)
    return WebCore::wrap<WebCore::MediaList>(a1, v4, (WTF *)v5);
  if (*(_DWORD *)v7 != 1)
  {
    --*(_DWORD *)v7;
    return WebCore::wrap<WebCore::MediaList>(a1, v4, (WTF *)v5);
  }
  if (*((_BYTE *)v7 + 40))
    WTF::Vector<WebCore::MQ::MediaQuery,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)v7 + 24, v6);
  WTF::fastFree(v7, v6);
  v5 = *(_QWORD *)(v3 + 56);
  if (v5)
    return WebCore::wrap<WebCore::MediaList>(a1, v4, (WTF *)v5);
  return 2;
}

BOOL WebCore::setJSCSSMediaRule_media(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSMediaRule::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSMediaRule::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

uint64_t WebCore::JSCSSMediaRule::subspaceForImpl(WebCore::JSCSSMediaRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2784);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2784);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2784);
    *(_QWORD *)(v8 + 2784) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2784);
  *(_QWORD *)(v3 + 2784) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSNamespaceRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSNamespaceRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSNamespaceRulePrototype::create(WebCore::JSCSSNamespaceRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCSSNamespaceRule::s_info, &WebCore::JSCSSNamespaceRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNamespaceRule>,(WebCore::DOMConstructorID)344>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2752);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNamespaceRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSNamespaceRule::s_info + ~((_QWORD)&WebCore::JSCSSNamespaceRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSNamespaceRule::s_info + ~((_QWORD)&WebCore::JSCSSNamespaceRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSNamespaceRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSNamespaceRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSRule::prototype((WebCore::JSCSSRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSNamespaceRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSNamespaceRulePrototype::create((WebCore::JSCSSNamespaceRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSNamespaceRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSNamespaceRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2752) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSNamespaceRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSNamespaceRulePrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNamespaceRule>,(WebCore::DOMConstructorID)344>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSNamespaceRule_namespaceURI(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 3) + 24) + 16);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsCSSNamespaceRule_prefix(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 3) + 24) + 8);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::JSCSSNamespaceRule::subspaceForImpl(WebCore::JSCSSNamespaceRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2792);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2792);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2792);
    *(_QWORD *)(v8 + 2792) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2792);
  *(_QWORD *)(v3 + 2792) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

void WebCore::JSBackgroundFetchManagerOwner::~JSBackgroundFetchManagerOwner(WebCore::JSBackgroundFetchManagerOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSBackgroundFetchRecordOwner::~JSBackgroundFetchRecordOwner(WebCore::JSBackgroundFetchRecordOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSBackgroundFetchRegistrationOwner::~JSBackgroundFetchRegistrationOwner(WebCore::JSBackgroundFetchRegistrationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSBarPropOwner::~JSBarPropOwner(WebCore::JSBarPropOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSBarcodeDetectorOwner::~JSBarcodeDetectorOwner(WebCore::JSBarcodeDetectorOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSBaseAudioContextOwner::~JSBaseAudioContextOwner(WebCore::JSBaseAudioContextOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSBasicCredentialOwner::~JSBasicCredentialOwner(WebCore::JSBasicCredentialOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSBlobOwner::~JSBlobOwner(WebCore::JSBlobOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

BOOL WebCore::JSBlobCallback::hasCallback(WebCore::JSBlobCallback *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 3);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

void WebCore::JSBroadcastChannelOwner::~JSBroadcastChannelOwner(WebCore::JSBroadcastChannelOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCSSAnimationOwner::~JSCSSAnimationOwner(WebCore::JSCSSAnimationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

unint64_t WebCore::jsBackgroundFetchManagerPrototypeFunction_fetch(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  JSC::VM *v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  JSC::VM *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  JSC::VM *v31;
  uint64_t v32;
  void *v33;
  JSC::JSObject *v34;
  WTF::StringImpl *v35;
  JSC::JSObject *v36;
  WTF::StringImpl *v37;
  int v38;
  JSC::JSCell *v39;
  JSC::VM *v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t Object;
  JSC::Structure *v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  uint64_t v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  uint64_t v53;
  JSC::VM *v54;
  WTF::StringImpl *v55;
  uint64_t v56;
  int v57;
  WTF::StringImpl *v58;
  unint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  unint64_t v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  JSC::VM *v66;
  WTF::StringImpl *v67;
  WTF *v68;
  WTF::StringImpl *v69;
  uint64_t v70;
  uint64_t v71;
  JSC::VM *v73;
  double v74;
  uint64_t v75;
  JSValue v76;
  int i;
  unsigned int v78;
  uint64_t IndexQuickly;
  double v80;
  uint64_t v81;
  uint64_t v83;
  objc_class *v84;
  WebCore::DOMGuardedObject *v85;
  JSC::VM *v86;
  JSValue v87;
  WTF::StringImpl *v88;
  uint64_t v89;
  unint64_t v90;
  unsigned int *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  WTF::StringImpl *v96;
  char v97;
  int hasExceptionsAfterHandlingTraps;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  WebCore *v102;
  JSC::JSGlobalObject *v103;
  JSC::CallFrame *v104;
  unint64_t v105;
  WTF::StringImpl *v106;
  double v107;
  WebCore::SecurityContext *v108;
  uint64_t v109;
  JSC::VM *v110;
  JSC::JSObject *v111;
  WTF::StringImpl *v112;
  unint64_t v113;
  WTF::StringImpl *v114;
  uint64_t v115;
  unsigned int v116;
  WTF::StringImpl *v117;
  int v118;
  WTF *v119;
  unint64_t v120;
  WTF::StringImpl *v121;
  uint64_t v122;
  _QWORD v123[2];
  int v124;
  JSC::VM *v125;
  WTF::StringImpl *v126;
  WebCore::DOMGuardedObject *v127;
  _QWORD v128[2];
  int v129;
  int v130;
  uint64_t v131;

  v131 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948B8C7CLL);
  }
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_177;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSBackgroundFetchManager::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSBackgroundFetchManager::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_177:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"BackgroundFetchManager", "fetch", v17);
    goto LABEL_123;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v86 = (JSC::VM *)*((_QWORD *)this + 7);
    v87.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v86, this, v87);
LABEL_123:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_125;
  }
  v24 = *(_QWORD *)(v18 + 24);
  v25 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v25)
    goto LABEL_123;
  v108 = (WebCore::SecurityContext *)v25;
  v110 = v10;
  v26 = *((_QWORD *)a2 + 6);
  v127 = (WebCore::DOMGuardedObject *)v26;
  v27 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v26 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v26 + 5) == 2)
  {
    v28 = *(WTF::StringImpl **)(v26 + 8);
    if ((v28 & 1) != 0)
    {
      v28 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v26, this);
      if (!v28)
        goto LABEL_32;
    }
    else if (!v28)
    {
LABEL_32:
      v112 = v28;
      goto LABEL_33;
    }
    *(_DWORD *)v28 += 2;
    goto LABEL_32;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v127, this);
LABEL_33:
  v109 = v24;
  if (!*((_DWORD *)v27 + 20))
  {
    v29 = v112;
LABEL_35:
    v117 = v29;
    v118 = 0;
    v30 = *((_QWORD *)a2 + 7);
    v31 = (JSC::VM *)*((_QWORD *)this + 7);
    v32 = WebCore::JSFetchRequest::toWrapped((uint64_t)v31, v30);
    v111 = (JSC::JSObject *)v30;
    if (v32)
    {
      ++*(_DWORD *)(v32 + 24);
      v128[0] = v32;
      v129 = 0;
      v130 = 0;
      goto LABEL_47;
    }
    v35 = v29;
    if ((v30 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v30 + 5) < 0x17u)
      goto LABEL_41;
    v36 = (JSC::JSObject *)JSC::iteratorMethod(this, (JSC::JSGlobalObject *)v30, v34);
    if (*((_DWORD *)v31 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v31))
    {
      v130 = 1;
      goto LABEL_46;
    }
    if (v36 == (JSC::JSObject *)10)
    {
LABEL_41:
      WebCore::valueToUSVString(this, v30, (uint64_t)&v112);
      if ((_DWORD)v113)
      {
        v130 = 1;
        if ((_DWORD)v113 == -1)
          goto LABEL_46;
      }
      else
      {
        v37 = v112;
        v112 = 0;
        v128[0] = v37;
        v129 = 1;
        v130 = 0;
      }
      ((void (*)(WTF **, WTF::StringImpl **))off_1E322E100[v113])(&v119, &v112);
LABEL_46:
      v29 = v35;
      goto LABEL_47;
    }
    v127 = 0;
    v128[0] = 0;
    v75 = *((_QWORD *)this + 7);
    if (JSC::getIterationMode() == 2)
    {
      for (i = 1; ; ++i)
      {
        v78 = (*(_BYTE *)(v30 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v30 + 8) - 8) : 0;
        if (i - 1 >= v78)
          break;
        IndexQuickly = JSC::JSObject::tryGetIndexQuickly(v111, i - 1, 0);
        if (!IndexQuickly)
          IndexQuickly = JSC::JSObject::get(v111, this, (i - 1));
        if (*(_DWORD *)(v75 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v75) & 1) != 0)
          break;
        v112 = (WTF::StringImpl *)v75;
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t)&v112, (uint64_t *)this, IndexQuickly, (uint64_t)&v127);
        if (*(_QWORD *)(v75 + 16))
        {
          v89 = JSC::JSArrayIterator::create();
          v90 = i | 0xFFFE000000000000;
          if (i < 0)
            v90 = COERCE__INT64((double)i) + 0x2000000000000;
          *(_QWORD *)(v89 + 16) = v90;
          goto LABEL_197;
        }
        v30 = (uint64_t)v111;
      }
    }
    else
    {
      JSC::iteratorForIterable(this, (JSC::JSGlobalObject *)v30, v36, v76);
      if (!*(_DWORD *)(v75 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v75) & 1) == 0)
      {
        while (1)
        {
          v81 = JSC::iteratorStep();
          if (*(_QWORD *)(v75 + 16) || v81 == 6)
            break;
          v83 = JSC::iteratorValue();
          if (*(_DWORD *)(v75 + 80))
          {
            if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v75) & 1) != 0)
              break;
          }
          v112 = (WTF::StringImpl *)v75;
          WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t)&v112, (uint64_t *)this, v83, (uint64_t)&v127);
          if (*(_QWORD *)(v75 + 16))
          {
LABEL_197:
            JSC::iteratorClose();
            break;
          }
        }
      }
    }
    if (*(_DWORD *)(v75 + 80))
    {
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v75);
      v91 = (unsigned int *)v127;
      if (hasExceptionsAfterHandlingTraps)
      {
        LODWORD(v114) = 1;
        if (HIDWORD(v128[0]))
        {
          v100 = 16 * HIDWORD(v128[0]);
          do
          {
            v101 = v91[2];
            if ((_DWORD)v101 != -1)
              ((void (*)(WTF **, unsigned int *))off_1E322E068[v101])(&v119, v91);
            v91[2] = -1;
            v91 += 4;
            v100 -= 16;
          }
          while (v100);
          v91 = (unsigned int *)v127;
        }
        if (v91)
        {
          v127 = 0;
          LODWORD(v128[0]) = 0;
          WTF::fastFree((WTF *)v91, v99);
        }
        v92 = 1;
        v93 = 1;
        v29 = v35;
        goto LABEL_201;
      }
    }
    else
    {
      v91 = (unsigned int *)v127;
    }
    v29 = v35;
    v92 = 0;
    v93 = 0;
    LODWORD(v114) = 0;
    v94 = v128[0];
    v112 = 0;
    v113 = 0;
    v128[0] = v91;
    v128[1] = v94;
    v129 = 2;
LABEL_201:
    v130 = v92;
    ((void (*)(WTF **, WTF::StringImpl **))off_1E322E0C0[v93])(&v119, &v112);
LABEL_47:
    v38 = v130;
    if (v130)
    {
LABEL_119:
      if (v38 != -1)
        ((void (*)(WTF::StringImpl **, _QWORD *))off_1E322E0E0[v38])(&v112, v128);
      v70 = 0;
      goto LABEL_122;
    }
    if ((unint64_t)(*((int *)a2 + 8) - 4) >= 0xFFFFFFFFFFFFFFFDLL)
    {
      v41 = 0;
      v42 = 0;
      v43 = 0;
      v44 = 0;
      v45 = 0;
      v125 = (JSC::VM *)*((_QWORD *)this + 7);
      goto LABEL_88;
    }
    v39 = (JSC::JSCell *)*((_QWORD *)a2 + 8);
    v40 = (JSC::VM *)*((_QWORD *)this + 7);
    v125 = v40;
    if (((unint64_t)v39 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v41 = 0;
      v42 = 0;
      v43 = 0;
      v44 = 0;
      v45 = 0;
      goto LABEL_88;
    }
    v106 = v29;
    if (((unint64_t)v39 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v39)) == 0)
    {
      JSC::throwTypeError();
      v116 = 1;
LABEL_176:
      v29 = v106;
      goto LABEL_97;
    }
    v47 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v48 = v119;
    v50 = JSC::JSObject::get(v47, this, (unint64_t)v119);
    if (v48)
    {
      if (*(_DWORD *)v48 == 2)
        WTF::StringImpl::destroy(v48, v49);
      else
        *(_DWORD *)v48 -= 2;
    }
    if (*((_DWORD *)v40 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v40))
    {
      v116 = 1;
      goto LABEL_176;
    }
    v105 = v13;
    if (v50 == 10)
    {
      v45 = 0;
      v44 = 0;
      v43 = 0;
    }
    else
    {
      WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::ImageResource>>>::convert((uint64_t)&v119, this, v50);
      if ((_DWORD)v121)
      {
        v116 = 1;
        if ((_DWORD)v121 != -1)
          ((void (*)(_QWORD *, WTF **))off_1E322E0F0[v121])(v123, &v119);
        goto LABEL_176;
      }
      v43 = v119;
      v44 = v120;
      v45 = HIDWORD(v120);
    }
    WTF::AtomStringImpl::addLiteral();
    v51 = v119;
    v53 = JSC::JSObject::get(v47, this, (unint64_t)v119);
    if (v51)
    {
      if (*(_DWORD *)v51 == 2)
        WTF::StringImpl::destroy(v51, v52);
      else
        *(_DWORD *)v51 -= 2;
    }
    if (*((_DWORD *)v40 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v40))
    {
      v116 = 1;
      v13 = v105;
      v29 = v106;
LABEL_93:
      if (v45)
        WTF::VectorDestructor<true,WebCore::ImageResource>::destruct(v43, (WTF::StringImpl *)((char *)v43 + 32 * v45));
      if (v43)
        WTF::fastFree(v43, v33);
LABEL_97:
      v61 = v116;
      if (v116)
      {
        if (v116 == -1)
          goto LABEL_118;
      }
      else
      {
        v117 = 0;
        v126 = v29;
        if (v130)
        {
          v102 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
          return WebCore::jsBackgroundFetchManagerPrototypeFunction_get(v102, v103, v104);
        }
        LOBYTE(v123[0]) = 0;
        v124 = -1;
        v62 = v129;
        if (v129 != -1)
        {
          ((void (*)(WTF **, _QWORD *, _QWORD *))off_1E322E078[v129])(&v119, v123, v128);
          v124 = v62;
        }
        v119 = v112;
        v63 = v113;
        v112 = 0;
        v113 = 0;
        v120 = v63;
        v64 = v114;
        v114 = 0;
        v121 = v64;
        v122 = v115;
        v125 = v14;
        WebCore::BackgroundFetchManager::fetch(v109, v108, (uint64_t)&v126, (uint64_t)v123, (uint64_t)&v119, (uint64_t *)&v125);
        v66 = v125;
        v125 = 0;
        if (v66)
        {
          if (*((_DWORD *)v66 + 4) == 1)
            (*(void (**)(JSC::VM *))(*(_QWORD *)v66 + 16))(v66);
          else
            --*((_DWORD *)v66 + 4);
        }
        v67 = v121;
        v121 = 0;
        if (v67)
        {
          if (*(_DWORD *)v67 == 2)
            WTF::StringImpl::destroy(v67, v65);
          else
            *(_DWORD *)v67 -= 2;
        }
        if (HIDWORD(v120))
          WTF::VectorDestructor<true,WebCore::ImageResource>::destruct(v119, (WTF *)((char *)v119 + 32 * HIDWORD(v120)));
        v68 = v119;
        if (v119)
        {
          v119 = 0;
          LODWORD(v120) = 0;
          WTF::fastFree(v68, v65);
        }
        if (v124 != -1)
          ((void (*)(WTF **, _QWORD *))off_1E322E050[v124])(&v119, v123);
        v69 = v126;
        v126 = 0;
        if (v69)
        {
          if (*(_DWORD *)v69 == 2)
            WTF::StringImpl::destroy(v69, v65);
          else
            *(_DWORD *)v69 -= 2;
        }
        v14 = 0;
      }
      ((void (*)(WTF **, WTF::StringImpl **))off_1E322E0D0[v61])(&v119, &v112);
LABEL_118:
      v38 = v130;
      goto LABEL_119;
    }
    if (v53 == 10)
    {
      v42 = 0;
LABEL_78:
      WTF::AtomStringImpl::addLiteral();
      v58 = v119;
      v59 = JSC::JSObject::get(v47, this, (unint64_t)v119);
      if (v58)
      {
        if (*(_DWORD *)v58 == 2)
          WTF::StringImpl::destroy(v58, (WTF::StringImpl *)v33);
        else
          *(_DWORD *)v58 -= 2;
      }
      if (*((_DWORD *)v40 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v40) & 1) != 0)
      {
        v60 = 1;
        v13 = v105;
        v29 = v106;
        goto LABEL_89;
      }
      v13 = v105;
      if (v59 == 10)
      {
        v41 = 0;
      }
      else
      {
        v119 = (WTF *)v59;
        if (v59 < 0xFFFE000000000000 || (v59 & 0x80000000) != 0)
        {
          v73 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v59 >= 0xFFFE000000000000)
          {
            v74 = (double)(int)v59;
          }
          else if (v59 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v119, this);
          }
          else
          {
            *(_QWORD *)&v74 = v59 - 0x2000000000000;
          }
          v29 = v106;
          if (*((_DWORD *)v73 + 20))
          {
            v107 = v74;
            v97 = JSC::VM::hasExceptionsAfterHandlingTraps(v73);
            v74 = v107;
            if ((v97 & 1) != 0)
            {
              v60 = 1;
              goto LABEL_89;
            }
          }
          if (fabs(v74) == INFINITY)
          {
            v41 = 0;
          }
          else
          {
            v80 = fmod(trunc(v74), 1.84467441e19);
            if (v80 >= 0.0)
              v41 = (unint64_t)v80;
            else
              v41 = -(uint64_t)(unint64_t)-v80;
          }
          goto LABEL_88;
        }
        v41 = v59;
      }
      v29 = v106;
LABEL_88:
      v60 = 0;
      v112 = v43;
      v113 = __PAIR64__(v45, v44);
      v114 = v42;
      v115 = v41;
      v42 = 0;
      v45 = 0;
      v43 = 0;
LABEL_89:
      v116 = v60;
      goto LABEL_90;
    }
    v123[0] = v53;
    v54 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((v53 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v53 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v123, this);
LABEL_74:
      if (*((_DWORD *)v54 + 20))
      {
        v95 = JSC::VM::hasExceptionsAfterHandlingTraps(v54);
        v42 = v126;
        if (v95)
        {
          LODWORD(v120) = 1;
          v126 = 0;
          if (v42)
          {
            if (*(_DWORD *)v42 == 2)
              WTF::StringImpl::destroy(v42, v96);
            else
              *(_DWORD *)v42 -= 2;
          }
          v57 = 0;
          v42 = 0;
          v56 = 1;
          v116 = 1;
LABEL_77:
          ((void (*)(_QWORD *, WTF **))off_1E322E100[v56])(v123, &v119);
          if (!v57)
          {
            v13 = v105;
            v29 = v106;
LABEL_90:
            if (v42)
            {
              if (*(_DWORD *)v42 == 2)
                WTF::StringImpl::destroy(v42, (WTF::StringImpl *)v33);
              else
                *(_DWORD *)v42 -= 2;
            }
            goto LABEL_93;
          }
          goto LABEL_78;
        }
      }
      else
      {
        v42 = v126;
      }
      v56 = 0;
      LODWORD(v120) = 0;
      v119 = 0;
      v57 = 1;
      goto LABEL_77;
    }
    v55 = *(WTF::StringImpl **)(v53 + 8);
    if ((v55 & 1) != 0)
    {
      v55 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v53, this);
      if (!v55)
        goto LABEL_73;
    }
    else if (!v55)
    {
LABEL_73:
      v126 = v55;
      goto LABEL_74;
    }
    *(_DWORD *)v55 += 2;
    goto LABEL_73;
  }
  v29 = v112;
  if (!JSC::VM::hasExceptionsAfterHandlingTraps(v27))
    goto LABEL_35;
  v118 = 1;
  v112 = 0;
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v88);
    else
      *(_DWORD *)v29 -= 2;
  }
  v70 = 1;
LABEL_122:
  ((void (*)(WebCore::DOMGuardedObject **, WTF::StringImpl **))off_1E322E100[v70])(&v127, &v117);
  v10 = v110;
  if (v14)
    goto LABEL_123;
LABEL_125:
  v71 = *((_QWORD *)v10 + 2);
  if (v71)
  {
    if (*((_QWORD *)v10 + 3) != v71)
    {
      v84 = *(objc_class **)(v71 + 8);
      JSC::VM::clearException(v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v127);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v127, v84, 0);
      v85 = v127;
      v127 = 0;
      if (v85)
      {
        if (*((_DWORD *)v85 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v85 + 16))(v85);
        else
          --*((_DWORD *)v85 + 4);
      }
    }
  }
  if (*((_DWORD *)v10 + 20))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
      return 10;
  }
  return v13;
}

unint64_t WebCore::jsBackgroundFetchManagerPrototypeFunction_get(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  _QWORD *v24;
  uint64_t v25;
  WebCore::WorkerGlobalScope *v26;
  uint64_t v27;
  JSC::VM *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  uint64_t v35;
  JSC::VM *v37;
  JSValue v38;
  objc_class *v39;
  WebCore::DOMGuardedObject *v40;
  WTF::StringImpl *v41;
  int hasExceptionsAfterHandlingTraps;
  WebCore::DOMGuardedObject *v43;
  int v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948B92DCLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_54;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSBackgroundFetchManager::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSBackgroundFetchManager::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_54:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"BackgroundFetchManager", "get", v17);
  }
  else if (*((_DWORD *)a2 + 8) == 1)
  {
    v37 = (JSC::VM *)*((_QWORD *)this + 7);
    v38.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v37, this, v38);
  }
  else
  {
    v24 = *(_QWORD **)(v18 + 24);
    v25 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if (v25)
    {
      v26 = (WebCore::WorkerGlobalScope *)v25;
      v27 = *((_QWORD *)a2 + 6);
      v46 = (WTF::StringImpl *)v27;
      v28 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((v27 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v27 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v46, this);
LABEL_33:
        if (*((_DWORD *)v28 + 20))
        {
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v28);
          v30 = v45;
          if (hasExceptionsAfterHandlingTraps)
          {
            v44 = 1;
            v45 = 0;
            if (v30)
            {
              if (*(_DWORD *)v30 == 2)
                WTF::StringImpl::destroy(v30, v41);
              else
                *(_DWORD *)v30 -= 2;
            }
            v34 = 1;
LABEL_42:
            ((void (*)(WTF::StringImpl **, WebCore::DOMGuardedObject **))off_1E322E100[v34])(&v46, &v43);
            if (!v14)
              goto LABEL_45;
            goto LABEL_43;
          }
        }
        else
        {
          v30 = v45;
        }
        v44 = 0;
        v43 = 0;
        v45 = v14;
        v46 = v30;
        WebCore::BackgroundFetchManager::get(v24, v26, &v46, (uint64_t *)&v45);
        v32 = v45;
        v45 = 0;
        if (v32)
        {
          if (*((_DWORD *)v32 + 4) == 1)
            (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v32 + 16))(v32);
          else
            --*((_DWORD *)v32 + 4);
        }
        v33 = v46;
        v46 = 0;
        if (v33)
        {
          if (*(_DWORD *)v33 == 2)
            WTF::StringImpl::destroy(v33, v31);
          else
            *(_DWORD *)v33 -= 2;
        }
        v14 = 0;
        v34 = 0;
        goto LABEL_42;
      }
      v29 = *(WTF::StringImpl **)(v27 + 8);
      if ((v29 & 1) != 0)
      {
        v29 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v27, this);
        if (!v29)
          goto LABEL_32;
      }
      else if (!v29)
      {
LABEL_32:
        v45 = v29;
        goto LABEL_33;
      }
      *(_DWORD *)v29 += 2;
      goto LABEL_32;
    }
  }
LABEL_43:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_45:
  v35 = *(_QWORD *)(v10 + 16);
  if (v35)
  {
    if (*(_QWORD *)(v10 + 24) != v35)
    {
      v39 = *(objc_class **)(v35 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v43);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v43, v39, 0);
      v40 = v43;
      v43 = 0;
      if (v40)
      {
        if (*((_DWORD *)v40 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v40 + 16))(v40);
        else
          --*((_DWORD *)v40 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsBackgroundFetchManagerPrototypeFunction_getIds(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::WorkerGlobalScope *v24;
  uint64_t v25;
  void (*v27)(void);
  objc_class *v28;
  WebCore::DOMGuardedObject *v29;
  WebCore::DOMGuardedObject *v30;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948B95A0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_34;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSBackgroundFetchManager::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSBackgroundFetchManager::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_34:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"BackgroundFetchManager", "getIds", v16);
    goto LABEL_35;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v24 = (WebCore::WorkerGlobalScope *)WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v24)
  {
LABEL_35:
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_29;
    }
    v27 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_33;
  }
  v30 = v14;
  WebCore::BackgroundFetchManager::getIds(v23, v24, (uint64_t *)&v30);
  if (v30)
  {
    if (*((_DWORD *)v30 + 4) != 1)
    {
      --*((_DWORD *)v30 + 4);
      goto LABEL_29;
    }
    v27 = *(void (**)(void))(*(_QWORD *)v30 + 16);
LABEL_33:
    v27();
  }
LABEL_29:
  v25 = *(_QWORD *)(v10 + 16);
  if (v25)
  {
    if (*(_QWORD *)(v10 + 24) != v25)
    {
      v28 = *(objc_class **)(v25 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v30);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v30, v28, 0);
      v29 = v30;
      v30 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS8_6VectorINS_7variantIJSG_SH_EEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSP_1EJSG_SH_SN_EEEEEEDcSR_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[6];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS8_6VectorINS_7variantIJSG_SH_EEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSP_1EJSG_SH_SN_EEEEEEDcSR_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS8_6VectorINS_7variantIJSG_SH_EEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSP_1EJSG_SH_SN_EEEEEEDcSR_DpT0_(uint64_t a1, unsigned int **a2)
{
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;

  v3 = *((unsigned int *)a2 + 3);
  v4 = *a2;
  if ((_DWORD)v3)
  {
    v5 = 16 * v3;
    do
    {
      v6 = v4[2];
      if ((_DWORD)v6 != -1)
        result = ((uint64_t (*)(char *, unsigned int *))off_1E322E068[v6])(&v8, v4);
      v4[2] = -1;
      v4 += 4;
      v5 -= 16;
    }
    while (v5);
    v4 = *a2;
  }
  if (v4)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return WTF::fastFree((WTF *)v4, a2);
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[6];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS8_6VectorINS_7variantIJSG_SH_EEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISO_LNS0_6_TraitE1EEEEEvRSP_OT_EUlRSV_OT0_E_JRNS0_6__baseILSS_1EJSG_SH_SN_EEEOS13_EEEDcSV_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS8_6VectorINS_7variantIJSG_SH_EEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISO_LNS0_6_TraitE1EEEEEvRSP_OT_EUlRSV_OT0_E_JRNS0_6__baseILSS_1EJSG_SH_SN_EEEOS13_EEEDcSV_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS8_6VectorINS_7variantIJSG_SH_EEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISO_LNS0_6_TraitE1EEEEEvRSP_OT_EUlRSV_OT0_E_JRNS0_6__baseILSS_1EJSG_SH_SN_EEEOS13_EEEDcSV_DpT0_(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  v3 = *a3;
  *a3 = 0;
  *(_QWORD *)a2 = v3;
  LODWORD(v3) = *((_DWORD *)a3 + 2);
  *((_DWORD *)a3 + 2) = 0;
  *(_DWORD *)(a2 + 8) = v3;
  LODWORD(v3) = *((_DWORD *)a3 + 3);
  *((_DWORD *)a3 + 3) = 0;
  *(_DWORD *)(a2 + 12) = v3;
}

unint64_t JSC::JSObject::getIndex(JSC::JSObject *this, JSC::JSGlobalObject *a2, unint64_t a3)
{
  unint64_t result;

  if (a3 > 0xFFFFFFFE)
    return JSC::JSObject::get(this, a2, a3);
  result = JSC::JSObject::tryGetIndexQuickly(this, a3, 0);
  if (!result)
    return JSC::JSObject::get(this, a2, a3);
  return result;
}

uint64_t JSC::JSObject::get(JSC::JSObject *this, JSC::JSGlobalObject *a2, unint64_t a3)
{
  WTF::StringImpl *v6;
  uint64_t v7;
  WTF::StringImpl *v8;

  if (a3 <= 0xFFFFFFFE)
    return JSC::JSObject::get(this, a2, a3);
  if (a3 == 0xFFFFFFFF)
    JSC::Identifier::from();
  else
    JSC::Identifier::from();
  v7 = JSC::JSObject::get(this, a2, (unint64_t)v8);
  if (v8)
  {
    if (*(_DWORD *)v8 == 2)
      WTF::StringImpl::destroy(v8, v6);
    else
      *(_DWORD *)v8 -= 2;
  }
  return v7;
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12[8];
  unsigned int v13;
  char v14;
  char v15[8];
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert(a2, a3, (uint64_t)v15);
  v6 = v18;
  if (v18)
    goto LABEL_14;
  v12[0] = 0;
  v13 = -1;
  v7 = v17;
  if (v17 != -1)
  {
    result = ((uint64_t (*)(char *, char *, uint64_t *))off_1E322E0A0[v17])(&v14, v12, &v16);
    v13 = v7;
  }
  v8 = *(unsigned int *)(a4 + 12);
  if ((_DWORD)v8 == *(_DWORD *)(a4 + 8))
  {
    result = WTF::Vector<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a4, v8 + 1, (unint64_t)v12);
    v9 = *(_QWORD *)a4 + 16 * *(unsigned int *)(a4 + 12);
    *(_BYTE *)v9 = 0;
    *(_DWORD *)(v9 + 8) = -1;
    v10 = *(unsigned int *)(result + 8);
    if ((_DWORD)v10 == -1)
      goto LABEL_10;
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1E322E0A0[v10])(&v14, v9, result);
LABEL_9:
    *(_DWORD *)(v9 + 8) = v10;
LABEL_10:
    v11 = v13;
    ++*(_DWORD *)(a4 + 12);
    if ((_DWORD)v11 != -1)
      result = ((uint64_t (*)(char *, char *))off_1E322E068[v11])(&v14, v12);
    goto LABEL_13;
  }
  v9 = *(_QWORD *)a4 + 16 * v8;
  *(_BYTE *)v9 = 0;
  *(_DWORD *)(v9 + 8) = -1;
  LODWORD(v10) = v13;
  if (v13 != -1)
  {
    result = ((uint64_t (*)(char *, uint64_t, char *))off_1E322E0A0[v13])(&v14, v9, v12);
    goto LABEL_9;
  }
  ++*(_DWORD *)(a4 + 12);
LABEL_13:
  v6 = v18;
LABEL_14:
  if (v6 != -1)
    return ((uint64_t (*)(char *, uint64_t *))off_1E322E0B0[v6])(v12, &v16);
  return result;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t (**v10)();
  unsigned int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned __int8 v15;
  uint64_t v16;
  int v17;
  char v18;

  LOBYTE(v13) = 0;
  v15 = 0;
  v6 = WebCore::JSFetchRequest::toWrapped(a1[7], a2);
  if (!v6)
    goto LABEL_2;
  ++*(_DWORD *)(v6 + 24);
  v16 = v6;
  v17 = 0;
  result = std::optional<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>,void>((uint64_t)&v13, (uint64_t)&v16);
  if (v17 != -1)
    result = ((uint64_t (*)(char *, uint64_t *))off_1E322E068[v17])(&v18, &v16);
  if (!v15)
  {
LABEL_2:
    result = WebCore::valueToUSVString((JSC::JSGlobalObject *)a1, a2, (uint64_t)&v13);
    v8 = v14;
    if (v14)
    {
      *(_DWORD *)(a3 + 24) = 1;
      if ((_DWORD)v8 == -1)
        return result;
    }
    else
    {
      v9 = v13;
      v13 = 0;
      *(_QWORD *)(a3 + 8) = v9;
      *(_DWORD *)(a3 + 16) = 1;
      *(_DWORD *)(a3 + 24) = 0;
    }
    v10 = off_1E322E100;
    return ((uint64_t (*)(uint64_t *, uint64_t *))v10[v8])(&v16, &v13);
  }
  *(_BYTE *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 16) = -1;
  v11 = v14;
  if (v14 == -1)
  {
    *(_DWORD *)(a3 + 24) = 0;
    return result;
  }
  result = ((uint64_t (*)(uint64_t *))off_1E322E0A0[v14])(&v16);
  *(_DWORD *)(a3 + 16) = v11;
  v12 = v15;
  *(_DWORD *)(a3 + 24) = 0;
  if (v12)
  {
    v8 = v14;
    if (v14 != -1)
    {
      v10 = off_1E322E068;
      return ((uint64_t (*)(uint64_t *, uint64_t *))v10[v8])(&v16, &v13);
    }
  }
  return result;
}

uint64_t std::optional<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>,void>(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;

  if (*(_BYTE *)(a1 + 16))
  {
    v3 = *(unsigned int *)(a1 + 8);
    v4 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v3 == -1)
    {
      if ((_DWORD)v4 == -1)
        return a1;
    }
    else if ((_DWORD)v4 == -1)
    {
      ((void (*)(char *, uint64_t, uint64_t))off_1E322E068[v3])(&v8, a1, a2);
      *(_DWORD *)(a1 + 8) = -1;
      return a1;
    }
    v7 = a1;
    ((void (*)(uint64_t *, uint64_t, uint64_t))off_1E322E090[v4])(&v7, a1, a2);
    return a1;
  }
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 8) = -1;
  v5 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v5 != -1)
  {
    ((void (*)(char *, uint64_t, uint64_t))off_1E322E0A0[v5])(&v9, a1, a2);
    *(_DWORD *)(a1 + 8) = v5;
  }
  *(_BYTE *)(a1 + 16) = 1;
  return a1;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISI_LNS0_6_TraitE1EEEEEvOT_EUlRSO_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSW_EEEDcSO_DpT0_(_DWORD *result, _DWORD **a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5)
  {
    result = (_DWORD *)((uint64_t (*)(char *, uint64_t))off_1E322E068[v5])(&v8, v4);
LABEL_7:
    v7 = (_DWORD *)*a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 0;
    return result;
  }
  v6 = (_DWORD *)*a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (result[6] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[6];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISI_LNS0_6_TraitE1EEEEEvOT_EUlRSO_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSW_EEEDcSO_DpT0_(WTF::StringImpl *result, WTF::StringImpl *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 1)
  {
    result = (WTF::StringImpl *)((uint64_t (*)(char *, uint64_t))off_1E322E068[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 1;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = v6;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

unint64_t WTF::Vector<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 16 * (unint64_t)*(unsigned int *)(a1 + 12) <= a3)
  {
    v9 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v9 >= 0x10)
      v10 = v9 + 1;
    else
      v10 = 16;
    if (v10 > a2)
      a2 = v10;
    WTF::Vector<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    v7 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v7 >= 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    if (v8 > a2)
      a2 = v8;
    WTF::Vector<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

uint64_t WTF::Vector<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(uint64_t result, unint64_t a2)
{
  int v2;
  uint64_t v3;
  WTF *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  WTF *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  if (*(unsigned int *)(result + 8) >= a2)
    return 1;
  v2 = a2;
  if (!(a2 >> 28))
  {
    v3 = result;
    v4 = *(WTF **)result;
    v5 = *(unsigned int *)(result + 12);
    v6 = WTF::fastMalloc((WTF *)(16 * a2));
    *(_DWORD *)(v3 + 8) = v2;
    *(_QWORD *)v3 = v6;
    if ((_DWORD)v5)
    {
      v8 = v6;
      v9 = 16 * v5;
      v10 = v4;
      do
      {
        *(_BYTE *)v8 = 0;
        *(_DWORD *)(v8 + 8) = -1;
        v11 = *((unsigned int *)v10 + 2);
        if ((_DWORD)v11 != -1)
        {
          ((void (*)(char *, uint64_t, WTF *))off_1E322E0A0[v11])(&v13, v8, v10);
          *(_DWORD *)(v8 + 8) = v11;
          v12 = *((unsigned int *)v10 + 2);
          if ((_DWORD)v12 != -1)
            ((void (*)(char *, WTF *))off_1E322E068[v12])(&v14, v10);
        }
        *((_DWORD *)v10 + 2) = -1;
        v8 += 16;
        v10 = (WTF *)((char *)v10 + 16);
        v9 -= 16;
      }
      while (v9);
    }
    if (v4)
    {
      if (*(WTF **)v3 == v4)
      {
        *(_QWORD *)v3 = 0;
        *(_DWORD *)(v3 + 8) = 0;
      }
      WTF::fastFree(v4, v7);
    }
    return 1;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::Detail::ConversionResultStorage<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>::releaseReturnValue(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (*(_DWORD *)(a2 + 24))
  {
    v4 = std::__throw_bad_variant_access[abi:sn180100]();
    return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore12FetchRequestENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENS9_6StringEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSJ_SK_EEEEEEDcSO_DpT0_(v4, v5);
  }
  else
  {
    v2 = result;
    *(_BYTE *)result = 0;
    *(_DWORD *)(result + 8) = -1;
    v3 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v3 != -1)
    {
      result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1E322E0A0[v3])(&v6, result, a2 + 8);
      *(_DWORD *)(v2 + 8) = v3;
    }
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore12FetchRequestENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENS9_6StringEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSJ_SK_EEEEEEDcSO_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E322E068[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS_7variantIJNS8_6RefPtrIN7WebCore12FetchRequestENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEENS8_6StringEEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSN_SO_EEEEEEDcSS_DpT0_(uint64_t a1, unsigned int **a2)
{
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;

  v3 = *((unsigned int *)a2 + 3);
  v4 = *a2;
  if ((_DWORD)v3)
  {
    v5 = 16 * v3;
    do
    {
      v6 = v4[2];
      if ((_DWORD)v6 != -1)
        result = ((uint64_t (*)(char *, unsigned int *))off_1E322E068[v6])(&v8, v4);
      v4[2] = -1;
      v4 += 4;
      v5 -= 16;
    }
    while (v5);
    v4 = *a2;
  }
  if (v4)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return WTF::fastFree((WTF *)v4, a2);
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore22BackgroundFetchOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  WTF *result;

  v3 = *(WTF::StringImpl **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = *(unsigned int *)(a2 + 12);
  if ((_DWORD)v4)
    WTF::VectorDestructor<true,WebCore::ImageResource>::destruct(*(WTF::StringImpl **)a2, (WTF::StringImpl *)(*(_QWORD *)a2 + 32 * v4));
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *(_DWORD *)(a2 + 8) = 0;
    return (WTF *)WTF::fastFree(result, (void *)a2);
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore12FetchRequestENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENS9_6StringENS9_6VectorINS8_IJSH_SI_EEELm0ENS9_15CrashOnOverflowELm16ENS9_10FastMallocEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSR_1EJSO_SP_EEEEEEDcST_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 16);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E322E050[v3])(&v5, a2);
  *(_DWORD *)(a2 + 16) = -1;
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore13ImageResourceELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *result;

  v3 = *(unsigned int *)(a2 + 12);
  if ((_DWORD)v3)
    WTF::VectorDestructor<true,WebCore::ImageResource>::destruct(*(WTF::StringImpl **)a2, (WTF::StringImpl *)(*(_QWORD *)a2 + 32 * v3));
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *(_DWORD *)(a2 + 8) = 0;
    return (WTF *)WTF::fastFree(result, (void *)a2);
  }
  return result;
}

unint64_t WebCore::jsBackgroundFetchRegistrationPrototypeFunction_abort(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::WorkerGlobalScope *v24;
  uint64_t v25;
  void (*v27)(void);
  objc_class *v28;
  WebCore::DOMGuardedObject *v29;
  WebCore::DOMGuardedObject *v30;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948BA404);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_34;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSBackgroundFetchRegistration::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSBackgroundFetchRegistration::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_34:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"BackgroundFetchRegistration", "abort", v16);
    goto LABEL_35;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v24 = (WebCore::WorkerGlobalScope *)WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v24)
  {
LABEL_35:
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_29;
    }
    v27 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_33;
  }
  v30 = v14;
  WebCore::BackgroundFetchRegistration::abort(v23, v24, (uint64_t *)&v30);
  if (v30)
  {
    if (*((_DWORD *)v30 + 4) != 1)
    {
      --*((_DWORD *)v30 + 4);
      goto LABEL_29;
    }
    v27 = *(void (**)(void))(*(_QWORD *)v30 + 16);
LABEL_33:
    v27();
  }
LABEL_29:
  v25 = *(_QWORD *)(v10 + 16);
  if (v25)
  {
    if (*(_QWORD *)(v10 + 24) != v25)
    {
      v28 = *(objc_class **)(v25 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v30);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v30, v28, 0);
      v29 = v30;
      v30 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsBackgroundFetchRegistrationPrototypeFunction_match(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  WebCore::DOMGuardedObject *v30;
  uint64_t v31;
  objc_class *v33;
  WebCore::DOMGuardedObject *v34;
  JSC::VM *v35;
  JSValue v36;
  __int16 v37;
  char v38;
  int v39;
  WebCore::DOMGuardedObject *v40;
  __int16 v41;
  char v42;
  char v43[8];
  int v44;
  WebCore::DOMGuardedObject *v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948BA7ECLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_52;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSBackgroundFetchRegistration::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSBackgroundFetchRegistration::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_52:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"BackgroundFetchRegistration", "match", v17);
    goto LABEL_45;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v35 = (JSC::VM *)*((_QWORD *)this + 7);
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v35, this, v36);
LABEL_45:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_47;
  }
  v24 = *(_QWORD *)(v18 + 24);
  v25 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v25)
    goto LABEL_45;
  v26 = v25;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t *)this, *((_QWORD *)a2 + 6), (uint64_t)&v45);
  v27 = v48;
  if (!v48)
  {
    if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
      v28 = 10;
    else
      v28 = *((_QWORD *)a2 + 7);
    WebCore::convertDictionary<WebCore::CacheQueryOptions>((JSC::JSCell *)v28, (unint64_t)this, (uint64_t)&v37);
    if (!v39)
    {
      if (v48
        || (v43[0] = 0, v44 = -1, v29 = v47, v47 != -1)
        && (((void (*)(WebCore::DOMGuardedObject **, char *, uint64_t *))off_1E322E0A0[v47])(&v40, v43, &v46),
            v44 = v29,
            v39))
      {
        std::__throw_bad_variant_access[abi:sn180100]();
      }
      v42 = v38;
      v41 = v37;
      v40 = v14;
      WebCore::BackgroundFetchRegistration::match(v24, v26, (uint64_t)v43, (char *)&v41, (uint64_t *)&v40);
      v30 = v40;
      v40 = 0;
      if (v30)
      {
        if (*((_DWORD *)v30 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v30 + 16))(v30);
        else
          --*((_DWORD *)v30 + 4);
      }
      if (v44 != -1)
        ((void (*)(WebCore::DOMGuardedObject **, char *))off_1E322E068[v44])(&v40, v43);
      v14 = 0;
    }
    v27 = v48;
  }
  if (v27 != -1)
    ((void (*)(char *, uint64_t *))off_1E322E0B0[v27])(v43, &v46);
  if (v14)
    goto LABEL_45;
LABEL_47:
  v31 = *(_QWORD *)(v10 + 16);
  if (v31)
  {
    if (*(_QWORD *)(v10 + 24) != v31)
    {
      v33 = *(objc_class **)(v31 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v45);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v45, v33, 0);
      v34 = v45;
      v45 = 0;
      if (v34)
      {
        if (*((_DWORD *)v34 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v34 + 16))(v34);
        else
          --*((_DWORD *)v34 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsBackgroundFetchRegistrationPrototypeFunction_matchAll(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  WebCore::DOMGuardedObject *v30;
  uint64_t v31;
  objc_class *v33;
  WebCore::DOMGuardedObject *v34;
  __int16 v35;
  char v36;
  int v37;
  WebCore::DOMGuardedObject *v38;
  __int16 v39;
  char v40;
  WebCore::DOMGuardedObject *v41;
  char v42[8];
  int v43;
  char v44;
  int v45;
  char v46[8];
  int v47;
  char v48;
  int v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948BAC68);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_61;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSBackgroundFetchRegistration::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSBackgroundFetchRegistration::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_61:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"BackgroundFetchRegistration", "matchAll", v16);
LABEL_54:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_56;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v24 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v24)
    goto LABEL_54;
  v25 = v24;
  v26 = *((_DWORD *)a2 + 8);
  if (v26 == 1 || *((_QWORD *)a2 + 6) == 10)
  {
    v42[0] = 0;
    v44 = 0;
    v45 = 0;
LABEL_33:
    if ((unint64_t)(v26 - 3) > 0xFFFFFFFFFFFFFFFDLL)
      v28 = 10;
    else
      v28 = *((_QWORD *)a2 + 7);
    WebCore::convertDictionary<WebCore::CacheQueryOptions>((JSC::JSCell *)v28, (unint64_t)this, (uint64_t)&v35);
    if (v37)
    {
LABEL_50:
      v27 = v45;
      goto LABEL_51;
    }
    if (v45)
      goto LABEL_41;
    v46[0] = 0;
    v48 = 0;
    if (v44)
    {
      v47 = -1;
      v29 = v43;
      if (v43 == -1)
      {
LABEL_42:
        v48 = 1;
        goto LABEL_43;
      }
      ((void (*)(WebCore::DOMGuardedObject **, char *, char *))off_1E322E0A0[v43])(&v38, v46, v42);
      v47 = v29;
      v48 = 1;
      if (v37)
      {
LABEL_41:
        std::__throw_bad_variant_access[abi:sn180100]();
        goto LABEL_42;
      }
    }
LABEL_43:
    v40 = v36;
    v39 = v35;
    v38 = v14;
    WebCore::BackgroundFetchRegistration::matchAll(v23, v25, (uint64_t)v46, (char *)&v39, (uint64_t *)&v38);
    v30 = v38;
    v38 = 0;
    if (v30)
    {
      if (*((_DWORD *)v30 + 4) == 1)
        (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v30 + 16))(v30);
      else
        --*((_DWORD *)v30 + 4);
    }
    if (v48 && v47 != -1)
      ((void (*)(WebCore::DOMGuardedObject **, char *))off_1E322E068[v47])(&v38, v46);
    v14 = 0;
    goto LABEL_50;
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t *)this, *((_QWORD *)a2 + 6), (uint64_t)v46);
  WebCore::Detail::ConversionResultStorage<std::optional<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>>::ConversionResultStorage<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>((uint64_t)&v41, (uint64_t)v46);
  if (v49 != -1)
    ((void (*)(WebCore::DOMGuardedObject **, int *))off_1E322E0B0[v49])(&v38, &v47);
  v27 = v45;
  if (!v45)
  {
    v26 = *((_DWORD *)a2 + 8);
    goto LABEL_33;
  }
LABEL_51:
  if (v27 != -1)
    ((void (*)(char *, char *))off_1E322E390[v27])(v46, v42);
  if (v14)
    goto LABEL_54;
LABEL_56:
  v31 = *(_QWORD *)(v10 + 16);
  if (v31)
  {
    if (*(_QWORD *)(v10 + 24) != v31)
    {
      v33 = *(objc_class **)(v31 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v41);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v41, v33, 0);
      v34 = v41;
      v41 = 0;
      if (v34)
      {
        if (*((_DWORD *)v34 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v34 + 16))(v34);
        else
          --*((_DWORD *)v34 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t WebCore::Detail::ConversionResultStorage<std::optional<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>>::ConversionResultStorage<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t (*v4)();
  int v5;
  uint64_t v7;
  int v8;
  char v9[8];
  int v10;
  unsigned __int8 v11;
  char v12;

  if (*(_DWORD *)(a2 + 24))
  {
    *(_DWORD *)(a1 + 32) = 1;
    return a1;
  }
  WebCore::Detail::ConversionResultStorage<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>::releaseReturnValue((uint64_t)&v7, a2);
  v9[0] = 0;
  v10 = -1;
  v3 = v8;
  if (v8 == -1)
  {
    v11 = 1;
    *(_BYTE *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 16) = -1;
    *(_BYTE *)(a1 + 24) = 1;
    *(_DWORD *)(a1 + 32) = 0;
  }
  else
  {
    v4 = off_1E322E0A0[v8];
    ((void (*)(char *, char *, uint64_t *))v4)(&v12, v9, &v7);
    v10 = v3;
    v11 = 1;
    *(_BYTE *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 16) = -1;
    ((void (*)(char *, uint64_t, char *))v4)(&v12, a1 + 8, v9);
    *(_DWORD *)(a1 + 16) = v3;
    v5 = v11;
    *(_BYTE *)(a1 + 24) = 1;
    *(_DWORD *)(a1 + 32) = 0;
    if (!v5)
      goto LABEL_9;
    if (v10 != -1)
      ((void (*)(char *, char *))off_1E322E068[v10])(&v12, v9);
  }
  v10 = -1;
LABEL_9:
  if (v8 != -1)
    ((void (*)(char *, uint64_t *))off_1E322E068[v8])(&v12, &v7);
  return a1;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalINS_7variantIJN3WTF6RefPtrIN7WebCore12FetchRequestENSA_12RawPtrTraitsISD_EENSA_21DefaultRefDerefTraitsISD_EEEENSA_6StringEEEEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSO_1EJSL_SM_EEEEEEDcSQ_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  if (*(_BYTE *)(a2 + 16))
  {
    v3 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E322E068[v3])(&v5, a2);
    *(_DWORD *)(a2 + 8) = -1;
  }
  return result;
}

unint64_t WebCore::jsBackgroundFetchUpdateUIEventPrototypeFunction_updateUI(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  WTF::StringImpl *v16;
  const char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char **v22;
  BOOL v23;
  JSC::JSCell *v25;
  JSC::VM *v26;
  unsigned int v27;
  int v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  uint64_t Object;
  JSC::Structure *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  JSC::VM *v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  uint64_t v45;
  objc_class *v47;
  WTF *v48;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v50;
  unint64_t v51;
  WTF *v52;
  unint64_t v53;
  WTF::StringImpl *v54;
  unsigned int v55;
  WTF::StringImpl *v56;
  int v57;
  unsigned int v58;
  int v59;
  JSC::VM *v60;
  WTF::StringImpl *v61;
  uint64_t v62;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948BB360);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_91;
  v19 = 16 * (*(_DWORD *)v18 & 0xFFFFFFFE);
  v20 = *(unsigned int *)(v19 + 76);
  v21 = *(_DWORD *)(v19 + 76) != 0;
  v22 = (char **)(16 * v20);
  if ((_DWORD)v20)
    v23 = v22 == &WebCore::JSBackgroundFetchUpdateUIEvent::s_info;
  else
    v23 = 1;
  if (!v23)
  {
    do
    {
      v22 = (char **)v22[2];
      v21 = v22 != 0;
    }
    while (v22 != &WebCore::JSBackgroundFetchUpdateUIEvent::s_info && v22 != 0);
  }
  if (!v21)
  {
LABEL_91:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"BackgroundFetchUpdateUIEvent", "updateUI", v17);
    goto LABEL_68;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v60 = (JSC::VM *)*((_QWORD *)this + 7);
    goto LABEL_56;
  }
  v25 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
  v26 = (JSC::VM *)*((_QWORD *)this + 7);
  v60 = v26;
  if (((unint64_t)v25 & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)v25 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v25)) == 0)
    {
      JSC::throwTypeError();
      v55 = 1;
      goto LABEL_57;
    }
    v32 = (JSC::Structure *)Object;
    v51 = v13;
    WTF::AtomStringImpl::addLiteral();
    v34 = JSC::JSObject::get(v32, this, (unint64_t)v56);
    if (v56)
    {
      if (*(_DWORD *)v56 == 2)
        WTF::StringImpl::destroy(v56, v33);
      else
        *(_DWORD *)v56 -= 2;
    }
    if (*((_DWORD *)v26 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v26))
    {
      v55 = 1;
      goto LABEL_57;
    }
    if (v34 == 10)
    {
      v27 = 0;
      v28 = 0;
      v29 = 0;
    }
    else
    {
      WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::ImageResource>>>::convert((uint64_t)&v56, this, v34);
      if (v59)
      {
        v55 = 1;
        if (v59 != -1)
          ((void (*)(uint64_t *, WTF::StringImpl **))off_1E322E0F0[v59])(&v62, &v56);
        goto LABEL_57;
      }
      v29 = v56;
      v28 = v57;
      v27 = v58;
    }
    WTF::AtomStringImpl::addLiteral();
    v35 = v56;
    v36 = JSC::JSObject::get(v32, this, (unint64_t)v56);
    if (v35)
    {
      if (*(_DWORD *)v35 == 2)
        WTF::StringImpl::destroy(v35, v16);
      else
        *(_DWORD *)v35 -= 2;
    }
    if (*((_DWORD *)v26 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v26))
    {
      v55 = 1;
LABEL_78:
      if (v27)
        WTF::VectorDestructor<true,WebCore::ImageResource>::destruct(v29, (WTF::StringImpl *)((char *)v29 + 32 * v27));
      v13 = v51;
      if (v29)
        WTF::fastFree(v29, v16);
      goto LABEL_57;
    }
    if (v36 == 10)
    {
      v30 = 0;
      goto LABEL_55;
    }
    v62 = v36;
    v37 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((v36 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v36 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v62, this);
LABEL_51:
      if (*((_DWORD *)v37 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v37);
        v30 = v61;
        if (hasExceptionsAfterHandlingTraps)
        {
          v39 = 1;
          v57 = 1;
          v61 = 0;
          if (v30)
          {
            if (*(_DWORD *)v30 == 2)
              WTF::StringImpl::destroy(v30, v50);
            else
              *(_DWORD *)v30 -= 2;
          }
          v40 = 0;
          v30 = 0;
          v55 = 1;
LABEL_54:
          ((void (*)(uint64_t *, WTF::StringImpl **))off_1E322E100[v39])(&v62, &v56);
          if (!v40)
          {
            if (v30)
            {
              if (*(_DWORD *)v30 == 2)
                WTF::StringImpl::destroy(v30, v16);
              else
                *(_DWORD *)v30 -= 2;
            }
            goto LABEL_78;
          }
LABEL_55:
          v13 = v51;
          goto LABEL_56;
        }
      }
      else
      {
        v30 = v61;
      }
      v39 = 0;
      v57 = 0;
      v56 = 0;
      v40 = 1;
      goto LABEL_54;
    }
    v38 = *(WTF::StringImpl **)(v36 + 8);
    if ((v38 & 1) != 0)
    {
      v38 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v36, this);
      if (!v38)
        goto LABEL_50;
    }
    else if (!v38)
    {
LABEL_50:
      v61 = v38;
      goto LABEL_51;
    }
    *(_DWORD *)v38 += 2;
    goto LABEL_50;
  }
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
LABEL_56:
  v52 = v29;
  v53 = __PAIR64__(v27, v28);
  v54 = v30;
  v55 = 0;
LABEL_57:
  v41 = v55;
  if (!v55)
  {
    v42 = v52;
    v43 = HIDWORD(v53);
    v52 = 0;
    v53 = 0;
    v44 = v54;
    v54 = 0;
    if (*((_DWORD *)v14 + 4) == 1)
    {
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
      if (v44)
      {
LABEL_60:
        if (*(_DWORD *)v44 == 2)
          WTF::StringImpl::destroy(v44, v16);
        else
          *(_DWORD *)v44 -= 2;
      }
    }
    else
    {
      --*((_DWORD *)v14 + 4);
      if (v44)
        goto LABEL_60;
    }
    if ((_DWORD)v43)
      WTF::VectorDestructor<true,WebCore::ImageResource>::destruct(v42, (WTF::StringImpl *)((char *)v42 + 32 * v43));
    if (v42)
      WTF::fastFree(v42, v16);
    v14 = 0;
LABEL_67:
    ((void (*)(WTF::StringImpl **, WTF **))off_1E322E410[v41])(&v56, &v52);
    if (!v14)
      goto LABEL_70;
    goto LABEL_68;
  }
  if (v55 != -1)
    goto LABEL_67;
LABEL_68:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_70:
  v45 = *(_QWORD *)(v10 + 16);
  if (v45)
  {
    if (*(_QWORD *)(v10 + 24) != v45)
    {
      v47 = *(objc_class **)(v45 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v52);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v52, v47, 0);
      v48 = v52;
      v52 = 0;
      if (v48)
      {
        if (*((_DWORD *)v48 + 4) == 1)
          (*(void (**)(WTF *))(*(_QWORD *)v48 + 16))(v48);
        else
          --*((_DWORD *)v48 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore24BackgroundFetchUIOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  WTF *result;

  v3 = *(WTF::StringImpl **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = *(unsigned int *)(a2 + 12);
  if ((_DWORD)v4)
    WTF::VectorDestructor<true,WebCore::ImageResource>::destruct(*(WTF::StringImpl **)a2, (WTF::StringImpl *)(*(_QWORD *)a2 + 32 * v4));
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *(_DWORD *)(a2 + 8) = 0;
    return (WTF *)WTF::fastFree(result, (void *)a2);
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15BarcodeDetectorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *v2;
  _DWORD *v3;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v3)
      {
        if (v3[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
        else
          --v3[2];
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15BarcodeDetectorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore22BarcodeDetectorOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *result;

  result = *a2;
  if (*a2)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

unint64_t WebCore::jsBarcodeDetectorConstructorFunction_getSupportedFormats(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  int v10;
  JSC::VM *v11;
  unint64_t v12;
  WebCore::DOMGuardedObject *v13;
  WebCore::DOMGuardedObject *v14;
  JSC::VM *v15;
  unsigned int *v16;
  uint64_t v17;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  JSValue v21;
  objc_class *v22;
  _DWORD *v23;
  WebCore::DOMGuardedObject *v24;
  WTF::StringImpl *v25;
  int v26[2];
  WTF::StringImpl *v27;
  char v28;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  if (!v5)
  {
    __break(0xC471u);
    JUMPOUT(0x1948BB718);
  }
  v9 = *((_QWORD *)this + 7);
  v10 = *((_DWORD *)this + 291);
  if (v10)
    v11 = (JSC::VM *)(16 * (v10 & 0xFFFFFFFE));
  else
    v11 = 0;
  v12 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v11, a3);
  v13 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v14 = WebCore::DOMGuardedObject::DOMGuardedObject(v13, (unint64_t)this, v12);
  *(_QWORD *)v14 = &off_1E3226868;
  *((_DWORD *)v14 + 10) = 0;
  *((_BYTE *)v14 + 44) = 0;
  v15 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = (unsigned int *)WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (v16)
  {
    v24 = v13;
    WebCore::BarcodeDetector::getSupportedFormats(v16, (uint64_t *)&v24, (uint64_t)v26);
    if (v24)
    {
      if (*((_DWORD *)v24 + 4) == 1)
        (*(void (**)(void))(*(_QWORD *)v24 + 16))();
      else
        --*((_DWORD *)v24 + 4);
    }
    if (v28)
    {
      v19 = (WTF::StringImpl *)LOBYTE(v26[0]);
      LOBYTE(v24) = v26[0];
      v20 = v27;
      v27 = 0;
      v25 = v20;
      if (!*((_QWORD *)v15 + 2))
      {
        v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v26[0]), (JSC::JSGlobalObject *)&v25);
        JSC::VM::throwException(v15, this, v21);
        v20 = v25;
      }
      v25 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 == 2)
          WTF::StringImpl::destroy(v20, v19);
        else
          *(_DWORD *)v20 -= 2;
      }
    }
  }
  else if (*((_DWORD *)v13 + 4) == 1)
  {
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v13 + 16))(v13);
  }
  else
  {
    --*((_DWORD *)v13 + 4);
  }
  v17 = *(_QWORD *)(v9 + 16);
  if (v17)
  {
    if (*(_QWORD *)(v9 + 24) != v17)
    {
      v22 = *(objc_class **)(v17 + 8);
      JSC::VM::clearException((JSC::VM *)v9);
      WebCore::DeferredPromise::create((unint64_t)this, v12, 0, (WebCore::DOMGuardedObject **)v26);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>(*(uint64_t *)v26, v22, 0);
      v23 = *(_DWORD **)v26;
      *(_QWORD *)v26 = 0;
      if (v23)
      {
        if (v23[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v23 + 16))(v23);
        else
          --v23[4];
      }
    }
  }
  if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
    return 10;
  return v12;
}

unint64_t WebCore::jsBarcodeDetectorPrototypeFunction_detect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  objc_class *v34;
  WebCore::DOMGuardedObject *v35;
  JSC::VM *v36;
  JSValue v37;
  char v38[8];
  int v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;
  char v43;
  char v44;
  char v45;
  char v46;
  int v47;
  _QWORD v48[3];
  _QWORD *v49;
  char v50[8];
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;

  v54 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948BBB78);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_45;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSBarcodeDetector::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSBarcodeDetector::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_45:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"BarcodeDetector", "detect", v17);
    goto LABEL_39;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v36 = (JSC::VM *)*((_QWORD *)this + 7);
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v36, this, v37);
LABEL_39:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_41;
  }
  v24 = *(_QWORD *)(v18 + 24);
  v25 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v25)
    goto LABEL_39;
  v26 = v25;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLInterface<WebCore::ImageData>>>::convert((unint64_t *)this, *((_QWORD *)a2 + 6), (uint64_t)v50);
  v27 = v53;
  if (!v53)
  {
    v38[0] = 0;
    v39 = -1;
    v28 = v52;
    if (v52 != -1)
    {
      ((void (*)(uint64_t *, char *, uint64_t *))off_1E322E558[v52])(&v41, v38, &v51);
      v39 = v28;
    }
    v41 = 0x200000000;
    v42 = 1;
    v43 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 0;
    v47 = 1;
    v29 = *(_QWORD *)(v24 + 8);
    ++*(_DWORD *)(v29 + 8);
    v30 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
    *v30 = &off_1E334D3C0;
    v30[1] = v29;
    v30[2] = v14;
    v40 = v30;
    v48[0] = v26;
    v48[1] = &v41;
    v48[2] = &v40;
    if (v39 == -1)
      std::__throw_bad_variant_access[abi:sn180100]();
    v49 = v48;
    ((void (*)(_QWORD **, char *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore11ImageBitmap23createCompletionHandlerERNS8_22ScriptExecutionContextEONS_7variantIJNS6_6RefPtrINS8_16HTMLImageElementENS6_12RawPtrTraitsISE_EENS6_21DefaultRefDerefTraitsISE_EEEENSD_INS8_16HTMLVideoElementENSF_ISK_EENSH_ISK_EEEENSD_INS8_17HTMLCanvasElementENSF_ISO_EENSH_ISO_EEEENSD_INS8_15SVGImageElementENSF_ISS_EENSH_ISS_EEEENSD_IS9_NSF_IS9_EENSH_IS9_EEEENSD_INS8_15OffscreenCanvasENSF_ISZ_EENSH_ISZ_EEEENSD_INS8_18CSSStyleImageValueENSF_IS13_EENSH_IS13_EEEENSD_INS8_19WebCodecsVideoFrameENSF_IS17_EENSH_IS17_EEEENSD_INS8_4BlobENSF_IS1B_EENSH_IS1B_EEEENSD_INS8_9ImageDataENSF_IS1F_EENSH_IS1F_EEEEEEEONS8_18ImageBitmapOptionsEONS6_17CompletionHandlerIFvONS8_11ExceptionOrINS6_3RefIS9_SW_SX_EEEEEEEE3__0JEEEEEJRNS0_6__implIJSJ_SN_SR_SV_SY_S12_S16_S1A_S1E_S1I_EEEEEEDcOT_DpOT0____fmatrix[v39])(&v49, v38);
    v31 = v40;
    v40 = 0;
    if (v31)
      (*(void (**)(_QWORD *))(*v31 + 8))(v31);
    if (v39 != -1)
      ((void (*)(uint64_t *, char *))off_1E322E508[v39])(&v41, v38);
    v14 = 0;
    v27 = v53;
  }
  if (v27 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_1E322E5A8[v27])(&v41, &v51);
  if (v14)
    goto LABEL_39;
LABEL_41:
  v32 = *(_QWORD *)(v10 + 16);
  if (v32)
  {
    if (*(_QWORD *)(v10 + 24) != v32)
    {
      v34 = *(objc_class **)(v32 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, (WebCore::DOMGuardedObject **)&v41);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>(v41, v34, 0);
      v35 = (WebCore::DOMGuardedObject *)v41;
      v41 = 0;
      if (v35)
      {
        if (*((_DWORD *)v35 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v35 + 16))(v35);
        else
          --*((_DWORD *)v35 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

void WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLInterface<WebCore::ImageData>>>::convert(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __n128 v4;
  int v5;
  int v6;
  _BYTE v7[24];
  _BYTE v8[8];
  int v9;
  unsigned __int8 v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13[3];

  v11 = a1[7];
  v8[0] = 0;
  v10 = 0;
  v12 = a2;
  v13[0] = (unint64_t *)v8;
  v13[1] = a1;
  v13[2] = (unint64_t *)&v12;
  v4 = _ZN7WebCore6Detail11forEachArgsIZNS_9ConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_16HTMLImageElementEEENS4_INS_16HTMLVideoElementEEENS4_INS_17HTMLCanvasElementEEENS4_INS_15SVGImageElementEEENS4_INS_11ImageBitmapEEENS4_INS_15OffscreenCanvasEEENS4_INS_18CSSStyleImageValueEEENS4_INS_19WebCodecsVideoFrameEEENS4_INS_4BlobEEENS4_INS_9ImageDataEEEEEEE7convertERN3JSC14JSGlobalObjectENSR_7JSValueEEUlTyvE_JS6_S8_SA_SC_SE_SG_SI_SK_SM_SO_EEET_SW_(v13, (uint64_t)v7);
  if (v10)
  {
    *(_BYTE *)(a3 + 8) = 0;
    *(_DWORD *)(a3 + 16) = -1;
    v5 = v9;
    if (v9 == -1)
    {
      *(_DWORD *)(a3 + 24) = 0;
    }
    else
    {
      ((void (*)(unint64_t **, __n128))off_1E322E558[v9])(v13, v4);
      *(_DWORD *)(a3 + 16) = v5;
      v6 = v10;
      *(_DWORD *)(a3 + 24) = 0;
      if (v6)
      {
        if (v9 != -1)
          ((void (*)(unint64_t **, _BYTE *))off_1E322E508[v9])(v13, v8);
      }
    }
  }
  else
  {
    JSC::throwTypeError();
    *(_DWORD *)(a3 + 24) = 1;
  }
}

__n128 _ZN7WebCore6Detail11forEachArgsIZNS_9ConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_16HTMLImageElementEEENS4_INS_16HTMLVideoElementEEENS4_INS_17HTMLCanvasElementEEENS4_INS_15SVGImageElementEEENS4_INS_11ImageBitmapEEENS4_INS_15OffscreenCanvasEEENS4_INS_18CSSStyleImageValueEEENS4_INS_19WebCodecsVideoFrameEEENS4_INS_4BlobEEENS4_INS_9ImageDataEEEEEEE7convertERN3JSC14JSGlobalObjectENSR_7JSValueEEUlTyvE_JS6_S8_SA_SC_SE_SG_SI_SK_SM_SO_EEET_SW_@<Q0>(unint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  unint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  char **v16;
  BOOL v17;
  _DWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _BOOL4 v23;
  char **v24;
  BOOL v25;
  uint64_t v27;
  uint64_t v28;
  _BOOL4 v29;
  char **v30;
  BOOL v31;
  uint64_t v33;
  uint64_t v34;
  _BOOL4 v35;
  char **v36;
  BOOL v37;
  uint64_t v39;
  uint64_t v40;
  _BOOL4 v41;
  char **v42;
  BOOL v43;
  unint64_t v45;
  unint64_t v46;
  void *v47;
  unint64_t v48;
  unint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  __n128 result;
  uint64_t v54;
  uint64_t v55;
  _BOOL4 v56;
  char **v57;
  BOOL v58;
  uint64_t v60;
  uint64_t v61;
  _BOOL4 v62;
  char **v63;
  BOOL v64;
  _BOOL4 v65;
  uint64_t v66;
  char v69;

  v4 = *a1;
  if (!*((_BYTE *)*a1 + 16))
  {
    v5 = *a1[2];
    if ((v5 & 0xFFFE000000000002) == 0)
    {
      v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
      v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
      v8 = (char **)(16 * v6);
      if ((_DWORD)v6)
        v9 = v8 == &WebCore::JSHTMLImageElement::s_info;
      else
        v9 = 1;
      if (!v9)
      {
        do
        {
          v8 = (char **)v8[2];
          v7 = v8 != 0;
        }
        while (v8 != &WebCore::JSHTMLImageElement::s_info && v8 != 0);
      }
      if (v7)
      {
        v11 = *(_QWORD *)(v5 + 24);
        if (v11)
        {
          *(_DWORD *)(v11 + 24) += 2;
          *v4 = v11;
          *((_DWORD *)v4 + 2) = 0;
LABEL_15:
          *((_BYTE *)v4 + 16) = 1;
          goto LABEL_16;
        }
      }
    }
    v39 = *a1[2];
    if ((v39 & 0xFFFE000000000002) == 0)
    {
      v40 = *(unsigned int *)(16 * (*(_DWORD *)v39 & 0xFFFFFFFE) + 0x4C);
      v41 = *(_DWORD *)(16 * (*(_DWORD *)v39 & 0xFFFFFFFE) + 0x4C) != 0;
      v42 = (char **)(16 * v40);
      if ((_DWORD)v40)
        v43 = v42 == &WebCore::JSHTMLVideoElement::s_info;
      else
        v43 = 1;
      if (!v43)
      {
        do
        {
          v42 = (char **)v42[2];
          v41 = v42 != 0;
        }
        while (v42 != &WebCore::JSHTMLVideoElement::s_info && v42 != 0);
      }
      if (v41)
      {
        v45 = *(_QWORD *)(v39 + 24);
        if (v45)
        {
          *(_DWORD *)(v45 + 24) += 2;
          *v4 = v45;
          *((_DWORD *)v4 + 2) = 1;
          goto LABEL_15;
        }
      }
    }
    v46 = JSC::jsDynamicCast<WebCore::JSHTMLCanvasElement *>(*a1[2]);
    if (v46)
    {
      v48 = *(_QWORD *)(v46 + 24);
      if (v48)
      {
        *(_DWORD *)(v48 + 24) += 2;
        v49 = *a1;
        if (!*((_BYTE *)*a1 + 16))
        {
          *v49 = v48;
          *((_DWORD *)v49 + 2) = 2;
          *((_BYTE *)v49 + 16) = 1;
          goto LABEL_16;
        }
        v50 = *((unsigned int *)v49 + 2);
        if ((_DWORD)v50 != -1)
        {
          if ((_DWORD)v50 == 2)
          {
            v51 = *v49;
            *v49 = v48;
            if (v51)
            {
              if (*(_DWORD *)(v51 + 24) == 2)
              {
                if ((*(_WORD *)(v51 + 30) & 0x400) == 0)
                  WebCore::Node::removedLastRef((WebCore::Node *)v51, v47);
              }
              else
              {
                *(_DWORD *)(v51 + 24) -= 2;
              }
            }
            goto LABEL_16;
          }
          ((void (*)(char *, unint64_t *))off_1E322E508[v50])(&v69, *a1);
        }
        *v49 = v48;
        *((_DWORD *)v49 + 2) = 2;
      }
    }
  }
LABEL_16:
  v12 = *a1;
  if (!*((_BYTE *)*a1 + 16))
  {
    v13 = *a1[2];
    if ((v13 & 0xFFFE000000000002) == 0)
    {
      v14 = *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C);
      v15 = *(_DWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) != 0;
      v16 = (char **)(16 * v14);
      if ((_DWORD)v14)
        v17 = v16 == &WebCore::JSSVGImageElement::s_info;
      else
        v17 = 1;
      if (!v17)
      {
        do
        {
          v16 = (char **)v16[2];
          v15 = v16 != 0;
        }
        while (v16 != &WebCore::JSSVGImageElement::s_info && v16 != 0);
      }
      if (v15)
      {
        v19 = *(_DWORD **)(v13 + 24);
        if (v19)
        {
          v19[6] += 2;
          v20 = 3;
LABEL_89:
          *v12 = (unint64_t)v19;
          *((_DWORD *)v12 + 2) = v20;
          *((_BYTE *)v12 + 16) = 1;
          goto LABEL_90;
        }
      }
    }
    v21 = *a1[2];
    if ((v21 & 0xFFFE000000000002) == 0)
    {
      v22 = *(unsigned int *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x4C);
      v23 = *(_DWORD *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x4C) != 0;
      v24 = (char **)(16 * v22);
      if ((_DWORD)v22)
        v25 = v24 == &WebCore::JSImageBitmap::s_info;
      else
        v25 = 1;
      if (!v25)
      {
        do
        {
          v24 = (char **)v24[2];
          v23 = v24 != 0;
        }
        while (v24 != &WebCore::JSImageBitmap::s_info && v24 != 0);
      }
      if (v23)
      {
        v19 = *(_DWORD **)(v21 + 24);
        if (v19)
        {
          ++v19[2];
          v20 = 4;
          goto LABEL_89;
        }
      }
    }
    v27 = *a1[2];
    if ((v27 & 0xFFFE000000000002) == 0)
    {
      v28 = *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C);
      v29 = *(_DWORD *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C) != 0;
      v30 = (char **)(16 * v28);
      if ((_DWORD)v28)
        v31 = v30 == &WebCore::JSOffscreenCanvas::s_info;
      else
        v31 = 1;
      if (!v31)
      {
        do
        {
          v30 = (char **)v30[2];
          v29 = v30 != 0;
        }
        while (v30 != &WebCore::JSOffscreenCanvas::s_info && v30 != 0);
      }
      if (v29)
      {
        v52 = *(_QWORD *)(v27 + 24);
        v19 = (_DWORD *)(v52 - 144);
        ++*(_DWORD *)(v52 - 120);
        v20 = 5;
        goto LABEL_89;
      }
    }
    v33 = *a1[2];
    if ((v33 & 0xFFFE000000000002) == 0)
    {
      v34 = *(unsigned int *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x4C);
      v35 = *(_DWORD *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x4C) != 0;
      v36 = (char **)(16 * v34);
      if ((_DWORD)v34)
        v37 = v36 == &WebCore::JSCSSStyleImageValue::s_info;
      else
        v37 = 1;
      if (!v37)
      {
        do
        {
          v36 = (char **)v36[2];
          v35 = v36 != 0;
        }
        while (v36 != &WebCore::JSCSSStyleImageValue::s_info && v36 != 0);
      }
      if (v35)
      {
        v19 = *(_DWORD **)(v33 + 24);
        if (v19)
        {
          ++v19[2];
          v20 = 6;
          goto LABEL_89;
        }
      }
    }
    v54 = *a1[2];
    if ((v54 & 0xFFFE000000000002) == 0)
    {
      v55 = *(unsigned int *)(16 * (*(_DWORD *)v54 & 0xFFFFFFFE) + 0x4C);
      v56 = *(_DWORD *)(16 * (*(_DWORD *)v54 & 0xFFFFFFFE) + 0x4C) != 0;
      v57 = (char **)(16 * v55);
      if ((_DWORD)v55)
        v58 = v57 == &WebCore::JSWebCodecsVideoFrame::s_info;
      else
        v58 = 1;
      if (!v58)
      {
        do
        {
          v57 = (char **)v57[2];
          v56 = v57 != 0;
        }
        while (v57 != &WebCore::JSWebCodecsVideoFrame::s_info && v57 != 0);
      }
      if (v56)
      {
        v19 = *(_DWORD **)(v54 + 24);
        if (v19)
        {
          ++v19[4];
          v20 = 7;
          goto LABEL_89;
        }
      }
    }
    v60 = *a1[2];
    if ((v60 & 0xFFFE000000000002) != 0)
      goto LABEL_90;
    v61 = *(unsigned int *)(16 * (*(_DWORD *)v60 & 0xFFFFFFFE) + 0x4C);
    v62 = *(_DWORD *)(16 * (*(_DWORD *)v60 & 0xFFFFFFFE) + 0x4C) != 0;
    v63 = (char **)(16 * v61);
    if ((_DWORD)v61)
      v64 = v63 == &WebCore::JSBlob::s_info;
    else
      v64 = 1;
    v65 = *(_DWORD *)(16 * (*(_DWORD *)v60 & 0xFFFFFFFE) + 0x4C) != 0;
    if (!v64)
    {
      v66 = 16 * v61;
      do
      {
        v66 = *(_QWORD *)(v66 + 16);
        v65 = v66 != 0;
      }
      while ((char **)v66 != &WebCore::JSBlob::s_info && v66 != 0);
    }
    if (v65)
    {
      v19 = *(_DWORD **)(v60 + 24);
      if (v19)
      {
        ++v19[4];
        v20 = 8;
        goto LABEL_89;
      }
    }
    if ((_DWORD)v61 && v63 != &WebCore::JSImageData::s_info)
    {
      do
      {
        v63 = (char **)v63[2];
        v62 = v63 != 0;
      }
      while (v63 != &WebCore::JSImageData::s_info && v63 != 0);
    }
    if (v62)
    {
      v19 = *(_DWORD **)(v60 + 24);
      if (v19)
      {
        ++*v19;
        v20 = 9;
        goto LABEL_89;
      }
    }
  }
LABEL_90:
  result = *(__n128 *)a1;
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = a1[2];
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1I_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEEEEDcS1K_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1I_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEEEEDcS1K_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1I_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEEEEDcS1K_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1I_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEEEEDcS1K_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1I_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEEEEDcS1K_DpT0_(uint64_t a1, bmalloc::api **a2)
{
  bmalloc::api *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  uint64_t result;
  uint64_t v12;

  v2 = *a2;
  *a2 = 0;
  if (!v2)
    return result;
  if (*((_DWORD *)v2 + 2) != 1)
  {
    --*((_DWORD *)v2 + 2);
    return result;
  }
  v3 = *((_QWORD *)v2 + 2);
  *((_QWORD *)v2 + 2) = 0;
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 8);
    if (__ldaxr((unsigned __int8 *)v4))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v4))
    {
      goto LABEL_10;
    }
    MEMORY[0x19AEA534C](v4);
LABEL_10:
    v6 = *(_QWORD *)(v4 + 8);
    v7 = v6 - 1;
    *(_QWORD *)(v4 + 8) = v6 - 1;
    if (v6 == 1)
    {
      v12 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      *(_QWORD *)(v4 + 24) = 0;
      v9 = v12 != 0;
    }
    else
    {
      v8 = 0;
      v9 = 1;
    }
    v10 = __ldxr((unsigned __int8 *)v4);
    if (v10 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v4))
      {
LABEL_17:
        if (!v7)
        {
          if (v8)
            (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
          if (!v9)
            WTF::fastFree((WTF *)v4, a2);
        }
        goto LABEL_22;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v4);
    goto LABEL_17;
  }
LABEL_22:
  if (*(_QWORD *)v2)
  {
    *(_QWORD *)(*(_QWORD *)v2 + 8) = 3;
    *(_QWORD *)v2 = 0;
  }
  return bmalloc::api::isoDeallocate(v2, a2);
}

WebCore::OffscreenCanvas *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm5EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1I_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEEEEDcS1K_DpT0_(uint64_t a1, WebCore::OffscreenCanvas **a2)
{
  WebCore::OffscreenCanvas *result;
  bmalloc::api *v3;
  void *v4;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::OffscreenCanvas::~OffscreenCanvas(result);
      return (WebCore::OffscreenCanvas *)bmalloc::api::isoDeallocate(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm6EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1I_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEEEEDcS1K_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm7EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1I_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEEEEDcS1K_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm8EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1I_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEEEEDcS1K_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm9EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1I_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEEEEDcS1K_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *v2;
  _DWORD *v3;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (*v3 == 1)
          JSC::ArrayBufferView::operator delete();
        else
          --*v3;
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS1H_LNS0_6_TraitE1EEEEEvRS1I_OT_EUlRS1O_OT0_E_JRNS0_6__baseILS1L_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEOS1W_EEEDcS1O_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS1H_LNS0_6_TraitE1EEEEEvRS1I_OT_EUlRS1O_OT0_E_JRNS0_6__baseILS1L_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEOS1W_EEEDcS1O_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS1H_LNS0_6_TraitE1EEEEEvRS1I_OT_EUlRS1O_OT0_E_JRNS0_6__baseILS1L_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEOS1W_EEEDcS1O_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS1H_LNS0_6_TraitE1EEEEEvRS1I_OT_EUlRS1O_OT0_E_JRNS0_6__baseILS1L_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEOS1W_EEEDcS1O_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4ELm4EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS1H_LNS0_6_TraitE1EEEEEvRS1I_OT_EUlRS1O_OT0_E_JRNS0_6__baseILS1L_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEOS1W_EEEDcS1O_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm5ELm5EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS1H_LNS0_6_TraitE1EEEEEvRS1I_OT_EUlRS1O_OT0_E_JRNS0_6__baseILS1L_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEOS1W_EEEDcS1O_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm6ELm6EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS1H_LNS0_6_TraitE1EEEEEvRS1I_OT_EUlRS1O_OT0_E_JRNS0_6__baseILS1L_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEOS1W_EEEDcS1O_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm7ELm7EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS1H_LNS0_6_TraitE1EEEEEvRS1I_OT_EUlRS1O_OT0_E_JRNS0_6__baseILS1L_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEOS1W_EEEDcS1O_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm8ELm8EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS1H_LNS0_6_TraitE1EEEEEvRS1I_OT_EUlRS1O_OT0_E_JRNS0_6__baseILS1L_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEOS1W_EEEDcS1O_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm9ELm9EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_16HTMLVideoElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_15SVGImageElementENSC_ISP_EENSE_ISP_EEEENS9_INSA_11ImageBitmapENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_18CSSStyleImageValueENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEENS9_INSA_4BlobENSC_IS19_EENSE_IS19_EEEENS9_INSA_9ImageDataENSC_IS1D_EENSE_IS1D_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS1H_LNS0_6_TraitE1EEEEEvRS1I_OT_EUlRS1O_OT0_E_JRNS0_6__baseILS1L_1EJSG_SK_SO_SS_SW_S10_S14_S18_S1C_S1G_EEEOS1W_EEEDcS1O_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t WebCore::JSToWrappedOverloader<WebCore::Blob,void>::toWrapped(uint64_t a1)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((a1 & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSBlob::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSBlob::s_info && v3 != 0);
  }
  if (v2)
    return *(_QWORD *)(a1 + 24);
  else
    return 0;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENSA_INSB_16HTMLVideoElementENSD_ISI_EENSF_ISI_EEEENSA_INSB_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSA_INSB_15SVGImageElementENSD_ISQ_EENSF_ISQ_EEEENSA_INSB_11ImageBitmapENSD_ISU_EENSF_ISU_EEEENSA_INSB_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSA_INSB_18CSSStyleImageValueENSD_IS12_EENSF_IS12_EEEENSA_INSB_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEENSA_INSB_4BlobENSD_IS1A_EENSF_IS1A_EEEENSA_INSB_9ImageDataENSD_IS1E_EENSF_IS1E_EEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1L_1EJS1I_S1J_EEEEEEDcS1N_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E322E508[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore13BarcodeFormatELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *result;

  result = *a2;
  if (*a2)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createBuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::JSDOMGlobalObject *v12;
  JSC::VM *v13;
  double v14;
  float v15;
  JSC::JSGlobalObject *v16;
  WebCore::AudioBuffer *v17;
  WebCore::JSDOMGlobalObject *v18;
  unint64_t v19;
  void *v20;
  JSValue v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  JSValue v26;
  double v27;
  WebCore *v28;
  JSC::JSGlobalObject *v29;
  JSC::CallFrame *v30;
  JSC::VM *v31;
  WebCore::JSDOMGlobalObject *v32;
  WTF::StringImpl *v33;
  int v34;
  _DWORD v35[2];
  _DWORD v36[2];
  unint64_t v37;
  WTF::StringImpl *v38;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "BaseAudioContext", "createBuffer");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSBaseAudioContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSBaseAudioContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "BaseAudioContext", "createBuffer");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v23);
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v36);
  if (v36[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v35);
  if (v35[1])
    return 0;
  v12 = (WebCore::JSDOMGlobalObject *)*((_QWORD *)a2 + 8);
  v32 = v12;
  v13 = (JSC::VM *)*((_QWORD *)this + 7);
  v37 = (unint64_t)v13;
  if ((unint64_t)v12 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v12;
  }
  else if ((unint64_t)v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v32, this);
    v14 = v27;
  }
  else
  {
    *(_QWORD *)&v14 = (char *)v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v13 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v14 < -3.40282347e38 || v14 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = v14;
  v16 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v37 = __PAIR64__(v35[0], v36[0]);
  *(float *)&v38 = v15;
  WebCore::AudioBuffer::create((float *)&v37, (uint64_t)&v32);
  if (!v34)
  {
    v18 = v32;
    v32 = 0;
    v19 = WebCore::toJS(this, v16, v18, v17);
    WTF::RefCounted<WebCore::AudioBuffer>::deref((WTF **)v18, v20);
LABEL_24:
    if (v34 != -1)
      ((void (*)(unint64_t *, WebCore::JSDOMGlobalObject **))off_1E322EA00[v34])(&v37, &v32);
    return (_BYTE *)v19;
  }
  if (v34 == 1)
  {
    v24 = (WTF::StringImpl *)v32;
    LOBYTE(v37) = (_BYTE)v32;
    v25 = v33;
    v33 = 0;
    v38 = v25;
    if (!*((_QWORD *)v4 + 2))
    {
      v26.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v32, (JSC::JSGlobalObject *)&v38);
      JSC::VM::throwException(v4, this, v26);
      v25 = v38;
    }
    v38 = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v24);
      else
        *(_DWORD *)v25 -= 2;
    }
    v19 = 0;
    goto LABEL_24;
  }
  v28 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_decodeAudioData(v28, v29, v30);
}

unint64_t WebCore::jsBaseAudioContextPrototypeFunction_decodeAudioData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  WebCore::JSAudioBufferCallback *v11;
  int v12;
  JSC::VM *v13;
  unint64_t v14;
  WebCore::DOMGuardedObject *v15;
  WebCore::DOMGuardedObject *v16;
  JSC::JSGlobalObject *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char **v22;
  BOOL v23;
  JSC::VM *v25;
  WebCore::JSAudioBufferCallback *v26;
  uint64_t v27;
  WebCore::DOMGuardedObject *v28;
  uint64_t v29;
  WebCore::DOMGuardedObject *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  WebCore::JSDOMGlobalObject *v36;
  unsigned int v37;
  WebCore::JSAudioBufferCallback *v38;
  int v39;
  int v40;
  unint64_t v41;
  WebCore::JSDOMGlobalObject *v42;
  unsigned int v43;
  WebCore::JSAudioBufferCallback *v44;
  int v45;
  int v46;
  uint64_t v47;
  WebCore::JSAudioBufferCallback *v48;
  _DWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  objc_class *v54;
  WebCore::DOMGuardedObject *v55;
  JSValue v56;
  WebCore::JSAudioBufferCallback *v57;
  WebCore::DOMGuardedObject *v58;
  WebCore::JSAudioBufferCallback *v59;
  int v60;
  WebCore::JSAudioBufferCallback *v61;
  int v62;
  WebCore::DOMGuardedObject *v63;
  int v64;
  WebCore::DOMGuardedObject *v65;
  int v66;
  WebCore::JSAudioBufferCallback *v67;
  uint64_t v68[2];

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948BCEA0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = (WebCore::JSAudioBufferCallback *)0xFFFE000000000002;
  v12 = *((_DWORD *)this + 291);
  if (v12)
    v13 = (JSC::VM *)(16 * (v12 & 0xFFFFFFFE));
  else
    v13 = 0;
  v14 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v13, a3);
  v15 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v16 = WebCore::DOMGuardedObject::DOMGuardedObject(v15, (unint64_t)this, v14);
  *(_QWORD *)v16 = &off_1E3226868;
  *((_DWORD *)v16 + 10) = 0;
  *((_BYTE *)v16 + 44) = 0;
  v58 = v16;
  v19 = *((_QWORD *)a2 + 5);
  if ((v19 & 0xFFFE000000000002) != 0)
    goto LABEL_64;
  v20 = *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C);
  v21 = *(_DWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C) != 0;
  v22 = (char **)(16 * v20);
  if ((_DWORD)v20)
    v23 = v22 == &WebCore::JSBaseAudioContext::s_info;
  else
    v23 = 1;
  if (!v23)
  {
    do
    {
      v22 = (char **)v22[2];
      v21 = v22 != 0;
    }
    while (v22 != &WebCore::JSBaseAudioContext::s_info && v22 != 0);
  }
  if (!v21)
  {
LABEL_64:
    WebCore::rejectPromiseWithThisTypeError(v15, (WebCore::DeferredPromise *)"BaseAudioContext", "decodeAudioData", v18);
  }
  else
  {
    v25 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v26 = *(WebCore::JSAudioBufferCallback **)(v19 + 24);
      v27 = *((_QWORD *)a2 + 6);
      v65 = (WebCore::DOMGuardedObject *)*((_QWORD *)this + 7);
      v28 = (WebCore::DOMGuardedObject *)JSC::JSArrayBuffer::toWrapped((uint64_t)v25, v27);
      if (!v28)
      {
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v65, 0, "audioData", 10, "BaseAudioContext", 17, v29, "decodeAudioData", 16, "ArrayBuffer", 12);
        v51 = 1;
        v64 = 1;
LABEL_55:
        ((void (*)(WebCore::DOMGuardedObject **, WebCore::DOMGuardedObject **))off_1E322EA30[v51])(&v65, &v63);
        v15 = v58;
        v58 = 0;
        if (!v15)
          goto LABEL_58;
        goto LABEL_56;
      }
      v30 = v28;
      *(_DWORD *)v28 += 2;
      v61 = 0;
      v63 = v28;
      WTF::Ref<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>::~Ref((uint64_t *)&v61);
      v64 = 0;
      v32 = *((int *)a2 + 8);
      v57 = v26;
      v33 = v14;
      if ((unint64_t)(v32 - 3) >= 0xFFFFFFFFFFFFFFFELL)
      {
        v35 = v10;
      }
      else
      {
        v34 = *((_QWORD *)a2 + 7);
        v35 = v10;
        if ((v34 & 0xFFFFFFFFFFFFFFF7) != 2)
        {
          v36 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x28);
          v59 = (WebCore::JSAudioBufferCallback *)*((_QWORD *)this + 7);
          if ((v34 & 0xFFFE000000000002) == 0
            && (v37 = *(unsigned __int8 *)(v34 + 5), v37 >= 0x17)
            && ((v37 & 0xFE) == 0x1A
             || (*(_BYTE *)(v34 + 6) & 4) != 0
             && ((*(void (**)(WebCore::DOMGuardedObject **__return_ptr, unint64_t))(16 * *(unsigned int *)(16 * (*(_DWORD *)v34 & 0xFFFFFFFE) + 0x4C) + 0x38))(&v65, v34), (_BYTE)v65)))
          {
            v26 = (WebCore::JSAudioBufferCallback *)WTF::fastMalloc((WTF *)0x20);
            v38 = WebCore::JSAudioBufferCallback::JSAudioBufferCallback(v26, v34, v36);
            v39 = 0;
            v66 = 0;
            v65 = 0;
            v40 = 1;
            v61 = v38;
          }
          else
          {
            v39 = 1;
            WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)&v59, 1, "successCallback", 16, "BaseAudioContext", 17, v31, "decodeAudioData", 16);
            v40 = 0;
            v66 = 1;
          }
          v62 = v39;
          ((void (*)(WebCore::JSAudioBufferCallback **, WebCore::DOMGuardedObject **))off_1E322EA10[v39])(&v59, &v65);
          if (!v40)
          {
            v50 = 1;
            v10 = v35;
            v14 = v33;
            goto LABEL_54;
          }
          v32 = *((int *)a2 + 8);
          v11 = (WebCore::JSAudioBufferCallback *)0xFFFE000000000002;
LABEL_37:
          if ((unint64_t)(v32 - 4) >= 0xFFFFFFFFFFFFFFFDLL
            || (v41 = *((_QWORD *)a2 + 8), (v41 & 0xFFFFFFFFFFFFFFF7) == 2))
          {
            v10 = v35;
            v11 = 0;
            v60 = 0;
            v14 = v33;
          }
          else
          {
            v42 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x28);
            v68[0] = *((_QWORD *)this + 7);
            v10 = v35;
            if ((v41 & 0xFFFE000000000002) == 0
              && (v43 = *(unsigned __int8 *)(v41 + 5), v43 >= 0x17)
              && ((v43 & 0xFE) == 0x1A
               || (*(_BYTE *)(v41 + 6) & 4) != 0
               && ((*(void (**)(WebCore::DOMGuardedObject **__return_ptr, unint64_t))(16 * *(unsigned int *)(16 * (*(_DWORD *)v41 & 0xFFFFFFFE) + 0x4C) + 0x38))(&v65, v41), (_BYTE)v65)))
            {
              v11 = (WebCore::JSAudioBufferCallback *)WTF::fastMalloc((WTF *)0x20);
              v44 = WebCore::JSAudioBufferCallback::JSAudioBufferCallback(v11, v41, v42);
              v45 = 0;
              v66 = 0;
              v65 = 0;
              v46 = 1;
              v59 = v44;
            }
            else
            {
              WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)v68, 2, "errorCallback", 14, "BaseAudioContext", 17, v31, "decodeAudioData", 16);
              v46 = 0;
              v45 = 1;
              v66 = 1;
            }
            v14 = v33;
            v60 = v45;
            ((void (*)(uint64_t *, WebCore::DOMGuardedObject **))off_1E322EA10[v45])(v68, &v65);
            if (!v46)
            {
              v47 = 1;
LABEL_53:
              ((void (*)(WebCore::DOMGuardedObject **, WebCore::JSAudioBufferCallback **))off_1E322EA20[v47])(&v65, &v59);
              v50 = 0;
LABEL_54:
              ((void (*)(WebCore::DOMGuardedObject **, WebCore::JSAudioBufferCallback **))off_1E322EA20[v50])(&v65, &v61);
              v51 = 0;
              goto LABEL_55;
            }
          }
          v63 = 0;
          v65 = v30;
          v61 = 0;
          v67 = v11;
          v68[0] = (uint64_t)v26;
          v59 = 0;
          WebCore::BaseAudioContext::decodeAudioData((unsigned int *)v57 - 8, (uint64_t *)&v65, v68, (uint64_t *)&v67, (uint64_t *)&v58);
          v48 = v67;
          v67 = 0;
          if (v48)
          {
            if (*((_DWORD *)v48 + 4) == 1)
              (*(void (**)(WebCore::JSAudioBufferCallback *))(*(_QWORD *)v48 + 16))(v48);
            else
              --*((_DWORD *)v48 + 4);
          }
          v49 = (_DWORD *)v68[0];
          v68[0] = 0;
          if (v49)
          {
            if (v49[4] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v49 + 16))(v49);
            else
              --v49[4];
          }
          WTF::Ref<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>::~Ref((uint64_t *)&v65);
          v47 = 0;
          goto LABEL_53;
        }
      }
      v26 = 0;
      v61 = 0;
      v62 = 0;
      goto LABEL_37;
    }
    v56.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v17);
    JSC::VM::throwException(v25, this, v56);
  }
  v58 = 0;
LABEL_56:
  if (*((_DWORD *)v15 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v15 + 16))(v15);
  else
    --*((_DWORD *)v15 + 4);
LABEL_58:
  v52 = *(_QWORD *)(v10 + 16);
  if (v52)
  {
    if (*(_QWORD *)(v10 + 24) != v52)
    {
      v54 = *(objc_class **)(v52 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v14, 0, &v65);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v65, v54, 0);
      v55 = v65;
      v65 = 0;
      if (v55)
      {
        if (*((_DWORD *)v55 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v55 + 16))(v55);
        else
          --*((_DWORD *)v55 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v14;
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createBufferSource(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSC::VM *v12;
  WebCore::BaseAudioContext *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  WTF **v18;
  WebCore::AudioNode *v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  JSValue v24;
  WebCore *v25;
  JSC::JSGlobalObject *v26;
  JSC::CallFrame *v27;
  JSC::VM *v28;
  WebCore::AudioNode *v29;
  WTF::StringImpl *v30;
  int v31;
  WTF *v32;
  WTF::StringImpl *v33;
  const char *v34;
  uint64_t v35;
  int v36;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v28 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "BaseAudioContext", "createBufferSource");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBaseAudioContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBaseAudioContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "BaseAudioContext", "createBufferSource");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v14 = *(_QWORD *)(v11 - 32);
  v13 = (WebCore::BaseAudioContext *)(v11 - 32);
  v15 = (*(uint64_t (**)(WebCore::BaseAudioContext *))(v14 + 112))(v13);
  v16 = (*(uint64_t (**)(WebCore::BaseAudioContext *))(*(_QWORD *)v13 + 120))(v13);
  v32 = (WTF *)"BaseAudioContext";
  v33 = (WTF::StringImpl *)17;
  v34 = "createBufferSource";
  v35 = v16;
  if (*(_BYTE *)(v15 + 12))
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier>((uint64_t)&WebCore::LogMedia, 0, (WTF::Logger::LogSiteIdentifier *)&v32);
  v32 = 0;
  LODWORD(v33) = 0;
  BYTE4(v33) = 0;
  v34 = 0;
  v35 = 0;
  v36 = 1065353216;
  WebCore::AudioBufferSourceNode::create(v13, (uint64_t)&v32, (uint64_t)&v29);
  v18 = (WTF **)v32;
  v32 = 0;
  if (v18)
    WTF::RefCounted<WebCore::AudioBuffer>::deref(v18, v17);
  if (!v31)
  {
    v19 = v29;
    v29 = 0;
    v20 = WebCore::wrap<WebCore::AudioBufferSourceNode>((int)this, v12, v19);
    WebCore::AudioNode::deref(v19);
LABEL_18:
    if (v31 != -1)
      ((void (*)(WTF **, WebCore::AudioNode **))off_1E322EA40[v31])(&v32, &v29);
    return (_BYTE *)v20;
  }
  if (v31 == 1)
  {
    v22 = (WTF::StringImpl *)v29;
    LOBYTE(v32) = (_BYTE)v29;
    v23 = v30;
    v30 = 0;
    v33 = v23;
    if (!*((_QWORD *)v5 + 2))
    {
      v24.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v29, (JSC::JSGlobalObject *)&v33);
      JSC::VM::throwException(v5, this, v24);
      v23 = v33;
    }
    v33 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v22);
      else
        *(_DWORD *)v23 -= 2;
    }
    v20 = 0;
    goto LABEL_18;
  }
  v25 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createGain(v25, v26, v27);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createGain(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSC::VM *v12;
  WebCore::BaseAudioContext *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WebCore::AudioNode *v18;
  uint64_t v19;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  JSValue v23;
  WebCore *v24;
  JSC::JSGlobalObject *v25;
  JSC::CallFrame *v26;
  JSC::VM *v27;
  WebCore::AudioNode *v28;
  WTF::StringImpl *v29;
  unsigned int v30;
  const char *v31;
  WTF::StringImpl *v32;
  const char *v33;
  uint64_t v34;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "BaseAudioContext", "createGain");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBaseAudioContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBaseAudioContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "BaseAudioContext", "createGain");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v14 = *(_QWORD *)(v11 - 32);
  v13 = (WebCore::BaseAudioContext *)(v11 - 32);
  v15 = (*(uint64_t (**)(WebCore::BaseAudioContext *))(v14 + 112))(v13);
  v16 = (*(uint64_t (**)(WebCore::BaseAudioContext *))(*(_QWORD *)v13 + 120))(v13);
  v31 = "BaseAudioContext";
  v32 = (WTF::StringImpl *)17;
  v33 = "createGain";
  v34 = v16;
  if (*(_BYTE *)(v15 + 12))
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier>((uint64_t)&WebCore::LogMedia, 0, (WTF::Logger::LogSiteIdentifier *)&v31);
  LOBYTE(v31) = 0;
  BYTE4(v31) = 0;
  LOBYTE(v32) = 0;
  BYTE4(v32) = 0;
  LOBYTE(v33) = 0;
  BYTE4(v33) = 0;
  LODWORD(v34) = 1065353216;
  WebCore::GainNode::create(v13, (uint64_t)&v31, (uint64_t)&v28);
  v17 = v30;
  if (!v30)
  {
    v18 = v28;
    v28 = 0;
    v19 = WebCore::wrap<WebCore::GainNode>((int)this, v12, v18);
    WebCore::AudioNode::deref(v18);
LABEL_16:
    ((void (*)(const char **, WebCore::AudioNode **))off_1E322EA50[v17])(&v31, &v28);
    return (_BYTE *)v19;
  }
  if (v30 == 1)
  {
    v21 = (WTF::StringImpl *)v28;
    LOBYTE(v31) = (_BYTE)v28;
    v22 = v29;
    v29 = 0;
    v32 = v22;
    if (!*((_QWORD *)v5 + 2))
    {
      v23.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v28, (JSC::JSGlobalObject *)&v32);
      JSC::VM::throwException(v5, this, v23);
      v22 = v32;
    }
    v32 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v21);
      else
        *(_DWORD *)v22 -= 2;
    }
    v19 = 0;
    goto LABEL_16;
  }
  v24 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createDelay(v24, v25, v26);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createDelay(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  WebCore::AudioNode *v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  JSValue v25;
  double v26;
  WebCore *v27;
  JSC::JSGlobalObject *v28;
  JSC::CallFrame *v29;
  uint64_t v30;
  WebCore::AudioNode *v31;
  WTF::StringImpl *v32;
  int v33;
  const char *v34;
  WTF::StringImpl *v35;
  const char *v36;
  double v37;
  uint64_t v38;

  v4 = *((_QWORD *)this + 7);
  v30 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v30, "BaseAudioContext", "createDelay");
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSBaseAudioContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSBaseAudioContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v30, "BaseAudioContext", "createDelay");
  v12 = *(_QWORD *)(v5 + 24);
  v13 = 1.0;
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v14 = *((_QWORD *)a2 + 6);
    if (v14 != 10)
    {
      v34 = (const char *)*((_QWORD *)a2 + 6);
      v31 = (WebCore::AudioNode *)v4;
      if (v14 >= 0xFFFE000000000000)
      {
        v13 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v34, this);
        v13 = v26;
      }
      else
      {
        *(_QWORD *)&v13 = v14 - 0x2000000000000;
      }
      if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
        return 0;
      if ((*(_QWORD *)&v13 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
      {
        JSC::throwTypeError();
        return 0;
      }
      v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
    }
  }
  v15 = *(JSC::VM **)(v6 + 40);
  v17 = *(_QWORD *)(v12 - 32);
  v16 = (unsigned int *)(v12 - 32);
  v18 = (*(uint64_t (**)(unsigned int *))(v17 + 112))(v16);
  v19 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v16 + 120))(v16);
  v34 = "BaseAudioContext";
  v35 = (WTF::StringImpl *)17;
  v36 = "createDelay";
  v37 = *(double *)&v19;
  if (*(_BYTE *)(v18 + 12))
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier>((uint64_t)&WebCore::LogMedia, 0, (WTF::Logger::LogSiteIdentifier *)&v34);
  LOBYTE(v34) = 0;
  BYTE4(v34) = 0;
  LOBYTE(v35) = 0;
  BYTE4(v35) = 0;
  LOBYTE(v36) = 0;
  BYTE4(v36) = 0;
  v38 = 0;
  v37 = v13;
  WebCore::DelayNode::create(v16, (uint64_t)&v34, (uint64_t)&v31);
  if (!v33)
  {
    v20 = v31;
    v31 = 0;
    v21 = WebCore::wrap<WebCore::DelayNode>((int)this, v15, v20);
    WebCore::AudioNode::deref(v20);
LABEL_24:
    if (v33 != -1)
      ((void (*)(const char **, WebCore::AudioNode **))off_1E322EA60[v33])(&v34, &v31);
    return (_BYTE *)v21;
  }
  if (v33 == 1)
  {
    v23 = (WTF::StringImpl *)v31;
    LOBYTE(v34) = (_BYTE)v31;
    v24 = v32;
    v32 = 0;
    v35 = v24;
    if (!*(_QWORD *)(v4 + 16))
    {
      v25.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v31, (JSC::JSGlobalObject *)&v35);
      JSC::VM::throwException((JSC::VM *)v4, this, v25);
      v24 = v35;
    }
    v35 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v23);
      else
        *(_DWORD *)v24 -= 2;
    }
    v21 = 0;
    goto LABEL_24;
  }
  v27 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createBiquadFilter(v27, v28, v29);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createBiquadFilter(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSC::VM *v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  WebCore::AudioNode *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  WebCore::JSDOMGlobalObject *v21;
  WebCore::AudioNode *v22;
  uint64_t v24;
  unsigned int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  WebCore::AudioNode *v30;
  int v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  JSValue v34;
  WebCore *v35;
  JSC::JSGlobalObject *v36;
  JSC::CallFrame *v37;
  JSC::VM *v38;
  WebCore::AudioNode *v39;
  WTF::StringImpl *v40;
  int v41;
  WebCore::AudioNode *v42;
  WTF::StringImpl *v43;
  const char *v44;
  _QWORD v45[3];

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v38 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v38, "BaseAudioContext", "createBiquadFilter");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBaseAudioContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBaseAudioContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v38, "BaseAudioContext", "createBiquadFilter");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v14 = *(_QWORD *)(v11 - 32);
  v13 = (unsigned int *)(v11 - 32);
  v15 = (*(uint64_t (**)(unsigned int *))(v14 + 112))(v13);
  v16 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v13 + 120))(v13);
  v42 = (WebCore::AudioNode *)"BaseAudioContext";
  v43 = (WTF::StringImpl *)17;
  v44 = "createBiquadFilter";
  v45[0] = v16;
  if (*(_BYTE *)(v15 + 12))
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier>((uint64_t)&WebCore::LogMedia, 0, (WTF::Logger::LogSiteIdentifier *)&v42);
  LOBYTE(v42) = 0;
  BYTE4(v42) = 0;
  LOBYTE(v43) = 0;
  BYTE4(v43) = 0;
  LOBYTE(v44) = 0;
  BYTE4(v44) = 0;
  LODWORD(v45[0]) = 0;
  *(_OWORD *)((char *)v45 + 4) = xmmword_1968BCE40;
  WebCore::BiquadFilterNode::create(v13, (uint64_t)&v42, (uint64_t)&v39);
  if (!v41)
  {
    v17 = v39;
    v39 = 0;
    v18 = *((_QWORD *)v12 + 415);
    if (*(_DWORD *)(v18 + 48))
    {
      v24 = *(_QWORD *)(v18 + 32);
      if (!v24)
        goto LABEL_19;
      v25 = *(_DWORD *)(v24 - 8);
      v26 = ((unint64_t)v17 + ~((_QWORD)v17 << 32)) ^ (((unint64_t)v17 + ~((_QWORD)v17 << 32)) >> 22);
      v27 = 9 * ((v26 + ~(v26 << 13)) ^ ((v26 + ~(v26 << 13)) >> 8));
      v28 = (v27 ^ (v27 >> 15)) + ~((v27 ^ (v27 >> 15)) << 27);
      v29 = v25 & ((v28 >> 31) ^ v28);
      v30 = *(WebCore::AudioNode **)(v24 + 16 * v29);
      if (v30 != v17)
      {
        v31 = 1;
        while (v30)
        {
          v29 = ((_DWORD)v29 + v31) & v25;
          v30 = *(WebCore::AudioNode **)(v24 + 16 * v29);
          ++v31;
          if (v30 == v17)
            goto LABEL_31;
        }
        goto LABEL_19;
      }
LABEL_31:
      v19 = *(_QWORD *)(v24 + 16 * v29 + 8);
      if (!v19)
      {
LABEL_19:
        WebCore::AudioNode::ref(v17);
        v42 = v17;
        if (*(uint64_t (***)(WebCore::AudioNode *__hidden))v17 != off_1E3369900)
        {
          __break(0xC471u);
          JUMPOUT(0x1948BDADCLL);
        }
        v20 = WebCore::createWrapper<WebCore::BiquadFilterNode,WebCore::BiquadFilterNode>(v12, (uint64_t *)&v42, v21);
        v22 = v42;
        v42 = 0;
        if (v22)
          WebCore::AudioNode::deref(v22);
        goto LABEL_22;
      }
    }
    else
    {
      v19 = *((_QWORD *)v17 + 1);
      if (!v19)
        goto LABEL_19;
    }
    if ((*(_BYTE *)(v19 + 8) & 3) == 0)
    {
      v20 = *(_QWORD *)v19;
      if (*(_QWORD *)v19)
      {
LABEL_22:
        WebCore::AudioNode::deref(v17);
LABEL_23:
        if (v41 != -1)
          ((void (*)(WebCore::AudioNode **, WebCore::AudioNode **))off_1E322EC50[v41])(&v42, &v39);
        return (_BYTE *)v20;
      }
    }
    goto LABEL_19;
  }
  if (v41 == 1)
  {
    v32 = (WTF::StringImpl *)v39;
    LOBYTE(v42) = (_BYTE)v39;
    v33 = v40;
    v40 = 0;
    v43 = v33;
    if (!*((_QWORD *)v5 + 2))
    {
      v34.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v39, (JSC::JSGlobalObject *)&v43);
      JSC::VM::throwException(v5, this, v34);
      v33 = v43;
    }
    v43 = 0;
    if (v33)
    {
      if (*(_DWORD *)v33 == 2)
        WTF::StringImpl::destroy(v33, v32);
      else
        *(_DWORD *)v33 -= 2;
    }
    v20 = 0;
    goto LABEL_23;
  }
  v35 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createWaveShaper(v35, v36, v37);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createWaveShaper(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  JSC::VM *v11;
  WebCore::AudioNode *v12;
  uint64_t v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WebCore *v18;
  JSC::JSGlobalObject *v19;
  JSC::CallFrame *v20;
  JSC::VM *v21;
  WebCore::AudioNode *v22;
  WTF::StringImpl *v23;
  int v24;
  _BYTE v25[8];
  WTF::StringImpl *v26;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "BaseAudioContext", "createWaveShaper");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBaseAudioContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBaseAudioContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "BaseAudioContext", "createWaveShaper");
  v11 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::BaseAudioContext::createWaveShaper((WebCore::BaseAudioContext *)(*(_QWORD *)(v4 + 24) - 32), (uint64_t)&v22);
  if (!v24)
  {
    v12 = v22;
    v22 = 0;
    v13 = WebCore::wrap<WebCore::WaveShaperNode>((int)this, v11, v12);
    WebCore::AudioNode::deref(v12);
LABEL_14:
    if (v24 != -1)
      ((void (*)(_BYTE *, WebCore::AudioNode **))off_1E322EA70[v24])(v25, &v22);
    return (_BYTE *)v13;
  }
  if (v24 == 1)
  {
    v15 = (WTF::StringImpl *)v22;
    v25[0] = (_BYTE)v22;
    v16 = v23;
    v23 = 0;
    v26 = v16;
    if (!*((_QWORD *)v5 + 2))
    {
      v17.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v22, (JSC::JSGlobalObject *)&v26);
      JSC::VM::throwException(v5, this, v17);
      v16 = v26;
    }
    v26 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v15);
      else
        *(_DWORD *)v16 -= 2;
    }
    v13 = 0;
    goto LABEL_14;
  }
  v18 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createPanner(v18, v19, v20);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createPanner(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSC::VM *v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  WebCore::AudioNode *v17;
  uint64_t v18;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WebCore *v23;
  JSC::JSGlobalObject *v24;
  JSC::CallFrame *v25;
  JSC::VM *v26;
  WebCore::AudioNode *v27;
  WTF::StringImpl *v28;
  int v29;
  const char *v30;
  WTF::StringImpl *v31;
  const char *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "BaseAudioContext", "createPanner");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBaseAudioContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBaseAudioContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "BaseAudioContext", "createPanner");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v14 = *(_QWORD *)(v11 - 32);
  v13 = (unsigned int *)(v11 - 32);
  v15 = (*(uint64_t (**)(unsigned int *))(v14 + 112))(v13);
  v16 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v13 + 120))(v13);
  v30 = "BaseAudioContext";
  v31 = (WTF::StringImpl *)17;
  v32 = "createPanner";
  v33 = v16;
  if (*(_BYTE *)(v15 + 12))
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier>((uint64_t)&WebCore::LogMedia, 0, (WTF::Logger::LogSiteIdentifier *)&v30);
  LOBYTE(v30) = 0;
  BYTE4(v30) = 0;
  LOBYTE(v31) = 0;
  BYTE4(v31) = 0;
  LOBYTE(v32) = 0;
  BYTE4(v32) = 0;
  v33 = 0x100000000;
  v34 = xmmword_1968BCE50;
  v35 = 0;
  v36 = xmmword_1968BCE60;
  v37 = xmmword_1968BCE70;
  v38 = xmmword_1968BCE80;
  WebCore::PannerNode::create(v13, (uint64_t)&v30, (uint64_t)&v27);
  if (!v29)
  {
    v17 = v27;
    v27 = 0;
    v18 = WebCore::wrap<WebCore::PannerNode>((int)this, v12, v17);
    WebCore::AudioNode::deref(v17);
LABEL_16:
    if (v29 != -1)
      ((void (*)(const char **, WebCore::AudioNode **))off_1E322EA80[v29])(&v30, &v27);
    return (_BYTE *)v18;
  }
  if (v29 == 1)
  {
    v20 = (WTF::StringImpl *)v27;
    LOBYTE(v30) = (_BYTE)v27;
    v21 = v28;
    v28 = 0;
    v31 = v21;
    if (!*((_QWORD *)v5 + 2))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v27, (JSC::JSGlobalObject *)&v31);
      JSC::VM::throwException(v5, this, v22);
      v21 = v31;
    }
    v31 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v20);
      else
        *(_DWORD *)v21 -= 2;
    }
    v18 = 0;
    goto LABEL_16;
  }
  v23 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createConvolver(v23, v24, v25);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createConvolver(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSC::VM *v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  WTF **v18;
  uint64_t v19;
  WebCore::AudioNode *v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  JSValue v25;
  WebCore *v26;
  JSC::JSGlobalObject *v27;
  JSC::CallFrame *v28;
  JSC::VM *v29;
  WebCore::AudioNode *v30;
  WTF::StringImpl *v31;
  unsigned int v32;
  const char *v33;
  WTF::StringImpl *v34;
  const char *v35;
  WTF *v36;
  char v37;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "BaseAudioContext", "createConvolver");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBaseAudioContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBaseAudioContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "BaseAudioContext", "createConvolver");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v14 = *(_QWORD *)(v11 - 32);
  v13 = (unsigned int *)(v11 - 32);
  v15 = (*(uint64_t (**)(unsigned int *))(v14 + 112))(v13);
  v16 = (WTF *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)v13 + 120))(v13);
  v33 = "BaseAudioContext";
  v34 = (WTF::StringImpl *)17;
  v35 = "createConvolver";
  v36 = v16;
  if (*(_BYTE *)(v15 + 12))
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier>((uint64_t)&WebCore::LogMedia, 0, (WTF::Logger::LogSiteIdentifier *)&v33);
  LOBYTE(v33) = 0;
  BYTE4(v33) = 0;
  LOBYTE(v34) = 0;
  BYTE4(v34) = 0;
  LOBYTE(v35) = 0;
  BYTE4(v35) = 0;
  v36 = 0;
  v37 = 0;
  WebCore::ConvolverNode::create(v13, (uint64_t)&v33, (uint64_t)&v30);
  v18 = (WTF **)v36;
  v36 = 0;
  if (v18)
    WTF::RefCounted<WebCore::AudioBuffer>::deref(v18, v17);
  v19 = v32;
  if (!v32)
  {
    v20 = v30;
    v30 = 0;
    v21 = WebCore::wrap<WebCore::ConvolverNode>((int)this, v12, v20);
    WebCore::AudioNode::deref(v20);
LABEL_18:
    ((void (*)(const char **, WebCore::AudioNode **))off_1E322EA90[v19])(&v33, &v30);
    return (_BYTE *)v21;
  }
  if (v32 == 1)
  {
    v23 = (WTF::StringImpl *)v30;
    LOBYTE(v33) = (_BYTE)v30;
    v24 = v31;
    v31 = 0;
    v34 = v24;
    if (!*((_QWORD *)v5 + 2))
    {
      v25.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v30, (JSC::JSGlobalObject *)&v34);
      JSC::VM::throwException(v5, this, v25);
      v24 = v34;
    }
    v34 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v23);
      else
        *(_DWORD *)v24 -= 2;
    }
    v21 = 0;
    goto LABEL_18;
  }
  v26 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createDynamicsCompressor(v26, v27, v28);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createDynamicsCompressor(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  JSC::VM *v11;
  WebCore::AudioNode *v12;
  uint64_t v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WebCore *v18;
  JSC::JSGlobalObject *v19;
  JSC::CallFrame *v20;
  JSC::VM *v21;
  WebCore::AudioNode *v22;
  WTF::StringImpl *v23;
  int v24;
  _BYTE v25[8];
  WTF::StringImpl *v26;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "BaseAudioContext", "createDynamicsCompressor");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBaseAudioContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBaseAudioContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "BaseAudioContext", "createDynamicsCompressor");
  v11 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::BaseAudioContext::createDynamicsCompressor((WebCore::BaseAudioContext *)(*(_QWORD *)(v4 + 24) - 32), (uint64_t)&v22);
  if (!v24)
  {
    v12 = v22;
    v22 = 0;
    v13 = WebCore::wrap<WebCore::DynamicsCompressorNode>((int)this, v11, v12);
    WebCore::AudioNode::deref(v12);
LABEL_14:
    if (v24 != -1)
      ((void (*)(_BYTE *, WebCore::AudioNode **))off_1E322EAA0[v24])(v25, &v22);
    return (_BYTE *)v13;
  }
  if (v24 == 1)
  {
    v15 = (WTF::StringImpl *)v22;
    v25[0] = (_BYTE)v22;
    v16 = v23;
    v23 = 0;
    v26 = v16;
    if (!*((_QWORD *)v5 + 2))
    {
      v17.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v22, (JSC::JSGlobalObject *)&v26);
      JSC::VM::throwException(v5, this, v17);
      v16 = v26;
    }
    v26 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v15);
      else
        *(_DWORD *)v16 -= 2;
    }
    v13 = 0;
    goto LABEL_14;
  }
  v18 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createAnalyser(v18, v19, v20);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createAnalyser(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSC::VM *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  WebCore::AudioNode *v17;
  uint64_t v18;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WebCore *v23;
  JSC::JSGlobalObject *v24;
  JSC::CallFrame *v25;
  JSC::VM *v26;
  WebCore::AudioNode *v27;
  WTF::StringImpl *v28;
  int v29;
  const char *v30;
  WTF::StringImpl *v31;
  const char *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "BaseAudioContext", "createAnalyser");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBaseAudioContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBaseAudioContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "BaseAudioContext", "createAnalyser");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v14 = *(_QWORD *)(v11 - 32);
  v13 = v11 - 32;
  v15 = (*(uint64_t (**)(uint64_t))(v14 + 112))(v13);
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 120))(v13);
  v30 = "BaseAudioContext";
  v31 = (WTF::StringImpl *)17;
  v32 = "createAnalyser";
  v33 = v16;
  if (*(_BYTE *)(v15 + 12))
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier>((uint64_t)&WebCore::LogMedia, 0, (WTF::Logger::LogSiteIdentifier *)&v30);
  LOBYTE(v30) = 0;
  BYTE4(v30) = 0;
  LOBYTE(v31) = 0;
  BYTE4(v31) = 0;
  LOBYTE(v32) = 0;
  BYTE4(v32) = 0;
  LODWORD(v33) = 2048;
  v34 = xmmword_1968BCE90;
  v35 = 0x3FE999999999999ALL;
  WebCore::AnalyserNode::create(v13, (uint64_t)&v30, (uint64_t)&v27);
  if (!v29)
  {
    v17 = v27;
    v27 = 0;
    v18 = WebCore::wrap<WebCore::AnalyserNode>((int)this, v12, v17);
    WebCore::AudioNode::deref(v17);
LABEL_16:
    if (v29 != -1)
      ((void (*)(const char **, WebCore::AudioNode **))off_1E322EAB0[v29])(&v30, &v27);
    return (_BYTE *)v18;
  }
  if (v29 == 1)
  {
    v20 = (WTF::StringImpl *)v27;
    LOBYTE(v30) = (_BYTE)v27;
    v21 = v28;
    v28 = 0;
    v31 = v21;
    if (!*((_QWORD *)v5 + 2))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v27, (JSC::JSGlobalObject *)&v31);
      JSC::VM::throwException(v5, this, v22);
      v21 = v31;
    }
    v31 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v20);
      else
        *(_DWORD *)v21 -= 2;
    }
    v18 = 0;
    goto LABEL_16;
  }
  v23 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createScriptProcessor(v23, v24, v25);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createScriptProcessor(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  JSC::VM *v16;
  WebCore::AudioNode *v17;
  uint64_t v18;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WebCore *v23;
  JSC::JSGlobalObject *v24;
  JSC::CallFrame *v25;
  JSC::VM *v26;
  WebCore::AudioNode *v27;
  WTF::StringImpl *v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _BYTE v33[8];
  WTF::StringImpl *v34;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "BaseAudioContext", "createScriptProcessor");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSBaseAudioContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSBaseAudioContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "BaseAudioContext", "createScriptProcessor");
  if (*((_DWORD *)a2 + 8) == 1)
    v12 = 10;
  else
    v12 = *((_QWORD *)a2 + 6);
  v13 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v12, &v32);
  if (HIDWORD(v32))
    return 0;
  v14 = *((int *)a2 + 8);
  if ((unint64_t)(v14 - 3) < 0xFFFFFFFFFFFFFFFELL && *((_QWORD *)a2 + 7) != 10)
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), &v31);
    if (!HIDWORD(v31))
    {
      v14 = *((int *)a2 + 8);
      goto LABEL_21;
    }
    return 0;
  }
  v31 = 2;
LABEL_21:
  if ((unint64_t)(v14 - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v15 = *((_QWORD *)a2 + 8), v15 == 10))
  {
    LODWORD(v30) = 2;
    v16 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    goto LABEL_27;
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v15, &v30);
  if (HIDWORD(v30))
    return 0;
  if (HIDWORD(v31))
    goto LABEL_44;
  v16 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
LABEL_27:
  WebCore::BaseAudioContext::createScriptProcessor((WebCore::BaseAudioContext *)(v13 - 32), v32, v31, v30, (uint64_t)&v27);
  if (!v29)
  {
    v17 = v27;
    v27 = 0;
    v18 = WebCore::wrap<WebCore::ScriptProcessorNode>((int)this, v16, (uint64_t)v17);
    WebCore::AudioNode::deref(v17);
LABEL_29:
    if (v29 != -1)
      ((void (*)(_BYTE *, WebCore::AudioNode **))off_1E322EAC0[v29])(v33, &v27);
    return (_BYTE *)v18;
  }
  if (v29 == 1)
  {
    v20 = (WTF::StringImpl *)v27;
    v33[0] = (_BYTE)v27;
    v21 = v28;
    v28 = 0;
    v34 = v21;
    if (!*((_QWORD *)v4 + 2))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v27, (JSC::JSGlobalObject *)&v34);
      JSC::VM::throwException(v4, this, v22);
      v21 = v34;
    }
    v34 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v20);
      else
        *(_DWORD *)v21 -= 2;
    }
    v18 = 0;
    goto LABEL_29;
  }
LABEL_44:
  v23 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createOscillator(v23, v24, v25);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createOscillator(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  JSC::VM *v11;
  WebCore::AudioNode *v12;
  uint64_t v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WebCore *v18;
  JSC::JSGlobalObject *v19;
  JSC::CallFrame *v20;
  JSC::VM *v21;
  WebCore::AudioNode *v22;
  WTF::StringImpl *v23;
  int v24;
  _BYTE v25[8];
  WTF::StringImpl *v26;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "BaseAudioContext", "createOscillator");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBaseAudioContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBaseAudioContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "BaseAudioContext", "createOscillator");
  v11 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::BaseAudioContext::createOscillator((WebCore::BaseAudioContext *)(*(_QWORD *)(v4 + 24) - 32), (uint64_t)&v22);
  if (!v24)
  {
    v12 = v22;
    v22 = 0;
    v13 = WebCore::wrap<WebCore::OscillatorNode>((int)this, v11, v12);
    WebCore::AudioNode::deref(v12);
LABEL_14:
    if (v24 != -1)
      ((void (*)(_BYTE *, WebCore::AudioNode **))off_1E322EAD0[v24])(v25, &v22);
    return (_BYTE *)v13;
  }
  if (v24 == 1)
  {
    v15 = (WTF::StringImpl *)v22;
    v25[0] = (_BYTE)v22;
    v16 = v23;
    v23 = 0;
    v26 = v16;
    if (!*((_QWORD *)v5 + 2))
    {
      v17.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v22, (JSC::JSGlobalObject *)&v26);
      JSC::VM::throwException(v5, this, v17);
      v16 = v26;
    }
    v26 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v15);
      else
        *(_DWORD *)v16 -= 2;
    }
    v13 = 0;
    goto LABEL_14;
  }
  v18 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createPeriodicWave(v18, v19, v20);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createPeriodicWave(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;
  WTF *v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  uint64_t v29;
  WTF ***v30;
  uint64_t v31;
  WTF **v32;
  void *v33;
  WTF *v34;
  JSValue v36;
  WTF::StringImpl *v37;
  JSValue v38;
  WebCore *v39;
  JSC::JSGlobalObject *v40;
  JSC::CallFrame *v41;
  JSC::VM *v42;
  _BYTE v43[8];
  WTF *v44;
  uint64_t v45;
  char v46;
  WTF *v47;
  uint64_t v48;
  char v49;
  WTF *v50[2];
  WTF *v51[2];
  int v52[2];
  WTF::StringImpl *v53;
  int v54;
  _BYTE v55[8];
  WTF *v56;
  uint64_t v57;
  unsigned __int8 v58;
  WTF *v59;
  uint64_t v60;
  unsigned __int8 v61;
  int v62;
  WTF *v63;
  WTF *v64;
  int v65;
  WTF *v66;
  WTF *v67;
  int v68;
  _BYTE v69[8];
  WTF::StringImpl *v70;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v42 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "BaseAudioContext", "createPeriodicWave");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSBaseAudioContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSBaseAudioContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "BaseAudioContext", "createPeriodicWave");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v36);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLFloat>>::convert(*((_QWORD *)a2 + 6), this, (uint64_t)&v66);
  v13 = v68;
  if (v68)
  {
    v27 = 0;
LABEL_46:
    if (v13 != -1)
      ((void (*)(_BYTE *, WTF **))off_1E322EB00[v13])(v55, &v66);
    return (_BYTE *)v27;
  }
  WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLFloat>>::convert(*((_QWORD *)a2 + 7), this, (uint64_t)&v63);
  v14 = v65;
  if (v65)
  {
    v27 = 0;
LABEL_43:
    if (v14 != -1)
      ((void (*)(_BYTE *, WTF **))off_1E322EB00[v14])(v55, &v63);
    v13 = v68;
    goto LABEL_46;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 4) > 0xFFFFFFFFFFFFFFFCLL)
    v15 = 10;
  else
    v15 = *((_QWORD *)a2 + 8);
  WebCore::convertDictionary<WebCore::PeriodicWaveOptions>((JSC::JSCell *)v15, this, (uint64_t)v55);
  v16 = v62;
  if (v62)
  {
    v27 = 0;
LABEL_40:
    if (v16 != -1)
      ((void (*)(_BYTE *, _BYTE *))off_1E322EAF0[v16])(v43, v55);
    v14 = v65;
    goto LABEL_43;
  }
  if (!v68)
  {
    v17 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v51[0] = v66;
    v18 = v67;
    v66 = 0;
    v67 = 0;
    v51[1] = v18;
    if (!v65)
    {
      v19 = v12 - 32;
      v50[0] = v63;
      v20 = v64;
      v63 = 0;
      v64 = 0;
      v50[1] = v20;
      v43[0] = v55[0];
      LOBYTE(v44) = 0;
      v46 = 0;
      v21 = v58;
      if (v58)
      {
        v44 = v56;
        v22 = v57;
        v56 = 0;
        v57 = 0;
        v45 = v22;
        v46 = 1;
      }
      LOBYTE(v47) = 0;
      v49 = 0;
      v23 = v61;
      if (v61)
      {
        v47 = v59;
        v24 = v60;
        v59 = 0;
        v60 = 0;
        v48 = v24;
        v49 = 1;
      }
      WebCore::BaseAudioContext::createPeriodicWave(v19, (uint64_t)v51, (uint64_t)v50, v43, (uint64_t)v52);
      if (!v54)
      {
        v25 = *(_QWORD *)v52;
        *(_QWORD *)v52 = 0;
        v27 = WebCore::wrap<WebCore::PeriodicWave>((uint64_t)this, v17, (WTF *)v25);
        if (*(_DWORD *)v25 == 1)
        {
          v29 = *(unsigned int *)(v25 + 36);
          if ((_DWORD)v29)
          {
            v30 = *(WTF ****)(v25 + 24);
            v31 = 8 * v29;
            do
            {
              v32 = *v30;
              *v30 = 0;
              if (v32)
              {
                WTF::fastAlignedFree(*v32, v26);
                WTF::fastFree((WTF *)v32, v33);
              }
              ++v30;
              v31 -= 8;
            }
            while (v31);
          }
          v34 = *(WTF **)(v25 + 24);
          if (v34)
          {
            *(_QWORD *)(v25 + 24) = 0;
            *(_DWORD *)(v25 + 32) = 0;
            WTF::fastFree(v34, v26);
          }
          WTF::fastFree((WTF *)v25, v26);
        }
        else
        {
          --*(_DWORD *)v25;
        }
        goto LABEL_28;
      }
      if (v54 == 1)
      {
        v26 = (void *)LOBYTE(v52[0]);
        v69[0] = v52[0];
        v37 = v53;
        v53 = 0;
        v70 = v37;
        if (!*((_QWORD *)v4 + 2))
        {
          v38.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v52[0]), (JSC::JSGlobalObject *)&v70);
          JSC::VM::throwException(v4, this, v38);
          v37 = v70;
        }
        v70 = 0;
        if (v37)
        {
          if (*(_DWORD *)v37 == 2)
            WTF::StringImpl::destroy(v37, (WTF::StringImpl *)v26);
          else
            *(_DWORD *)v37 -= 2;
        }
        v27 = 0;
LABEL_28:
        if (v54 != -1)
          ((void (*)(_BYTE *, int *))off_1E322EAE0[v54])(v69, v52);
        v54 = -1;
        if (v23 && v47)
        {
          WTF::fastFree(v47, v26);
          if (v21)
          {
LABEL_33:
            if (v44)
              WTF::fastFree(v44, v26);
          }
        }
        else if (v21)
        {
          goto LABEL_33;
        }
        if (v50[0])
          WTF::fastFree(v50[0], v26);
        if (v51[0])
          WTF::fastFree(v51[0], v26);
        v16 = v62;
        goto LABEL_40;
      }
    }
  }
  v39 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createConstantSource(v39, v40, v41);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createConstantSource(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  WebCore::BaseAudioContext *v11;
  uint64_t v12;
  JSC::VM *v13;
  uint64_t v14;
  uint64_t v15;
  WebCore::ConstantSourceNode *v16;
  WebCore::ConstantSourceNode *v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD v21[4];

  v3 = (int)this;
  v4 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "BaseAudioContext", "createConstantSource");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSBaseAudioContext::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSBaseAudioContext::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "BaseAudioContext", "createConstantSource");
  v10 = *(_QWORD *)(v4 + 24);
  v12 = *(_QWORD *)(v10 - 32);
  v11 = (WebCore::BaseAudioContext *)(v10 - 32);
  v13 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v14 = (*(uint64_t (**)(WebCore::BaseAudioContext *))(v12 + 112))(v11);
  v15 = (*(uint64_t (**)(WebCore::BaseAudioContext *))(*(_QWORD *)v11 + 120))(v11);
  v21[0] = "BaseAudioContext";
  v21[1] = 17;
  v21[2] = "createConstantSource";
  v21[3] = v15;
  if (*(_BYTE *)(v14 + 12))
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier>((uint64_t)&WebCore::LogMedia, 0, (WTF::Logger::LogSiteIdentifier *)v21);
  v16 = (WebCore::ConstantSourceNode *)bmalloc::api::isoAllocate();
  v17 = WebCore::ConstantSourceNode::ConstantSourceNode(v16, v11, 1.0);
  WebCore::ActiveDOMObject::suspendIfNeeded((_QWORD *)v17 + 19);
  v18 = WebCore::wrap<WebCore::ConstantSourceNode>(v3, v13, v16);
  WebCore::AudioNode::deref(v16);
  return (_BYTE *)v18;
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createStereoPanner(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  JSC::VM *v11;
  WebCore::AudioNode *v12;
  uint64_t v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WebCore *v18;
  JSC::JSGlobalObject *v19;
  JSC::CallFrame *v20;
  JSC::VM *v21;
  WebCore::AudioNode *v22;
  WTF::StringImpl *v23;
  int v24;
  _BYTE v25[8];
  WTF::StringImpl *v26;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "BaseAudioContext", "createStereoPanner");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBaseAudioContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBaseAudioContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "BaseAudioContext", "createStereoPanner");
  v11 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::BaseAudioContext::createStereoPanner((WebCore::BaseAudioContext *)(*(_QWORD *)(v4 + 24) - 32), (uint64_t)&v22);
  if (!v24)
  {
    v12 = v22;
    v22 = 0;
    v13 = WebCore::wrap<WebCore::StereoPannerNode>((int)this, v11, v12);
    WebCore::AudioNode::deref(v12);
LABEL_14:
    if (v24 != -1)
      ((void (*)(_BYTE *, WebCore::AudioNode **))off_1E322EB10[v24])(v25, &v22);
    return (_BYTE *)v13;
  }
  if (v24 == 1)
  {
    v15 = (WTF::StringImpl *)v22;
    v25[0] = (_BYTE)v22;
    v16 = v23;
    v23 = 0;
    v26 = v16;
    if (!*((_QWORD *)v5 + 2))
    {
      v17.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v22, (JSC::JSGlobalObject *)&v26);
      JSC::VM::throwException(v5, this, v17);
      v16 = v26;
    }
    v26 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v15);
      else
        *(_DWORD *)v16 -= 2;
    }
    v13 = 0;
    goto LABEL_14;
  }
  v18 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createIIRFilter(v18, v19, v20);
}

uint64_t WebCore::jsBaseAudioContextPrototypeFunction_createIIRFilter(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  JSC::VM *v17;
  WTF *v18;
  WTF *v19;
  WTF *v20;
  WTF *v21;
  WebCore::AudioNode *v22;
  uint64_t v23;
  unint64_t v24;
  JSValue v27;
  WTF::StringImpl *v28;
  JSValue v29;
  WebCore *v30;
  JSC::JSGlobalObject *v31;
  JSC::CallFrame *v32;
  JSC::VM *v33;
  WTF *v34[2];
  WTF *v35[2];
  WebCore::AudioNode *v36;
  WTF::StringImpl *v37;
  int v38;
  WTF *v39;
  WTF *v40;
  int v41;
  WTF *v42;
  WTF *v43;
  int v44;
  _BYTE v45[8];
  WTF::StringImpl *v46;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v33 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v33, "BaseAudioContext", "createIIRFilter");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSBaseAudioContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSBaseAudioContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v33, "BaseAudioContext", "createIIRFilter");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v27);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v13)
    return 10;
  v14 = v13;
  WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDouble>>::convert(*((_QWORD *)a2 + 6), this, (uint64_t)&v42);
  v15 = v44;
  if (v44)
  {
    v23 = 0;
LABEL_29:
    if (v15 != -1)
      ((void (*)(WTF **, WTF **))off_1E322EB30[v15])(&v39, &v42);
    return v23;
  }
  WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDouble>>::convert(*((_QWORD *)a2 + 7), this, (uint64_t)&v39);
  v16 = v41;
  if (v41)
  {
    v23 = 0;
LABEL_26:
    if (v16 != -1)
      ((void (*)(WebCore::AudioNode **, WTF **))off_1E322EB30[v16])(&v36, &v39);
    v15 = v44;
    goto LABEL_29;
  }
  if (!v44)
  {
    v17 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v18 = v42;
    v42 = 0;
    v35[0] = v18;
    v19 = v43;
    v43 = 0;
    v35[1] = v19;
    v20 = v39;
    v39 = 0;
    v34[0] = v20;
    v21 = v40;
    v40 = 0;
    v34[1] = v21;
    WebCore::BaseAudioContext::createIIRFilter((unsigned int *)(v12 - 32), v14, (uint64_t)v35, (uint64_t)v34, (uint64_t)&v36);
    if (!v38)
    {
      v22 = v36;
      v36 = 0;
      v23 = WebCore::wrap<WebCore::IIRFilterNode>((int)this, v17, v22);
      WebCore::AudioNode::deref(v22);
LABEL_19:
      if (v38 != -1)
        ((void (*)(_BYTE *, WebCore::AudioNode **))off_1E322EB20[v38])(v45, &v36);
      v38 = -1;
      if (v34[0])
        WTF::fastFree(v34[0], (void *)v24);
      if (v35[0])
        WTF::fastFree(v35[0], (void *)v24);
      v16 = v41;
      goto LABEL_26;
    }
    if (v38 == 1)
    {
      v24 = v36;
      v45[0] = (_BYTE)v36;
      v28 = v37;
      v37 = 0;
      v46 = v28;
      if (!*((_QWORD *)v4 + 2))
      {
        v29.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v36, (JSC::JSGlobalObject *)&v46);
        JSC::VM::throwException(v4, this, v29);
        v28 = v46;
      }
      v46 = 0;
      if (v28)
      {
        if (*(_DWORD *)v28 == 2)
          WTF::StringImpl::destroy(v28, (WTF::StringImpl *)v24);
        else
          *(_DWORD *)v28 -= 2;
      }
      v23 = 0;
      goto LABEL_19;
    }
  }
  v30 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsBaseAudioContextPrototypeFunction_createChannelSplitter(v30, v31, v32);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createChannelSplitter(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  JSC::VM *v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  WebCore::AudioNode *v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  JSValue v24;
  WebCore *v25;
  JSC::JSGlobalObject *v26;
  JSC::CallFrame *v27;
  JSC::VM *v28;
  WebCore::AudioNode *v29;
  WTF::StringImpl *v30;
  int v31;
  _DWORD v32[2];
  const char *v33;
  WTF::StringImpl *v34;
  const char *v35;
  uint64_t v36;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v28 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "BaseAudioContext", "createChannelSplitter");
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSBaseAudioContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSBaseAudioContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "BaseAudioContext", "createChannelSplitter");
  v12 = *(_QWORD *)(v5 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13 = 6;
    goto LABEL_18;
  }
  if (*((_QWORD *)a2 + 6) == 10)
  {
    v13 = 6;
    goto LABEL_18;
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v32);
  if (v32[1])
    return 0;
  v13 = v32[0];
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
LABEL_18:
  v14 = *(JSC::VM **)(v6 + 40);
  v16 = *(_QWORD *)(v12 - 32);
  v15 = (unsigned int *)(v12 - 32);
  v17 = (*(uint64_t (**)(unsigned int *))(v16 + 112))(v15);
  v18 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v15 + 120))(v15);
  v33 = "BaseAudioContext";
  v34 = (WTF::StringImpl *)17;
  v35 = "createChannelSplitter";
  v36 = v18;
  if (*(_BYTE *)(v17 + 12))
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier>((uint64_t)&WebCore::LogMedia, 0, (WTF::Logger::LogSiteIdentifier *)&v33);
  LOBYTE(v33) = 0;
  BYTE4(v33) = 0;
  LOBYTE(v34) = 0;
  BYTE4(v34) = 0;
  LOBYTE(v35) = 0;
  BYTE4(v35) = 0;
  LODWORD(v36) = v13;
  WebCore::ChannelSplitterNode::create(v15, (unsigned int *)&v33, (uint64_t)&v29);
  if (!v31)
  {
    v19 = v29;
    v29 = 0;
    v20 = WebCore::wrap<WebCore::ChannelSplitterNode>((int)this, v14, v19);
    WebCore::AudioNode::deref(v19);
LABEL_22:
    if (v31 != -1)
      ((void (*)(const char **, WebCore::AudioNode **))off_1E322EB40[v31])(&v33, &v29);
    return (_BYTE *)v20;
  }
  if (v31 == 1)
  {
    v22 = (WTF::StringImpl *)v29;
    LOBYTE(v33) = (_BYTE)v29;
    v23 = v30;
    v30 = 0;
    v34 = v23;
    if (!*((_QWORD *)v4 + 2))
    {
      v24.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v29, (JSC::JSGlobalObject *)&v34);
      JSC::VM::throwException(v4, this, v24);
      v23 = v34;
    }
    v34 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v22);
      else
        *(_DWORD *)v23 -= 2;
    }
    v20 = 0;
    goto LABEL_22;
  }
  v25 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsBaseAudioContextPrototypeFunction_createChannelMerger(v25, v26, v27);
}

_BYTE *WebCore::jsBaseAudioContextPrototypeFunction_createChannelMerger(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  JSC::VM *v14;
  WebCore::BaseAudioContext *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  WebCore::AudioNode *v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  JSValue v24;
  uint64_t v25;
  _DWORD **v26;
  JSC::VM *v27;
  WebCore::AudioNode *v28;
  WTF::StringImpl *v29;
  int v30;
  _DWORD v31[2];
  const char *v32;
  WTF::StringImpl *v33;
  const char *v34;
  uint64_t v35;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "BaseAudioContext", "createChannelMerger");
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSBaseAudioContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSBaseAudioContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "BaseAudioContext", "createChannelMerger");
  v12 = *(_QWORD *)(v5 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13 = 6;
    goto LABEL_18;
  }
  if (*((_QWORD *)a2 + 6) == 10)
  {
    v13 = 6;
    goto LABEL_18;
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v31);
  if (v31[1])
    return 0;
  v13 = v31[0];
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
LABEL_18:
  v14 = *(JSC::VM **)(v6 + 40);
  v16 = *(_QWORD *)(v12 - 32);
  v15 = (WebCore::BaseAudioContext *)(v12 - 32);
  v17 = (*(uint64_t (**)(WebCore::BaseAudioContext *))(v16 + 112))(v15);
  v18 = (*(uint64_t (**)(WebCore::BaseAudioContext *))(*(_QWORD *)v15 + 120))(v15);
  v32 = "BaseAudioContext";
  v33 = (WTF::StringImpl *)17;
  v34 = "createChannelMerger";
  v35 = v18;
  if (*(_BYTE *)(v17 + 12))
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier>((uint64_t)&WebCore::LogMedia, 0, (WTF::Logger::LogSiteIdentifier *)&v32);
  LOBYTE(v32) = 0;
  BYTE4(v32) = 0;
  LOBYTE(v33) = 0;
  BYTE4(v33) = 0;
  LOBYTE(v34) = 0;
  BYTE4(v34) = 0;
  LODWORD(v35) = v13;
  WebCore::ChannelMergerNode::create(v15, (unsigned int *)&v32, (uint64_t)&v28);
  if (!v30)
  {
    v19 = v28;
    v28 = 0;
    v20 = WebCore::wrap<WebCore::ChannelMergerNode>((int)this, v14, v19);
    WebCore::AudioNode::deref(v19);
LABEL_22:
    if (v30 != -1)
      ((void (*)(const char **, WebCore::AudioNode **))off_1E322EB50[v30])(&v32, &v28);
    return (_BYTE *)v20;
  }
  if (v30 == 1)
  {
    v22 = (WTF::StringImpl *)v28;
    LOBYTE(v32) = (_BYTE)v28;
    v23 = v29;
    v29 = 0;
    v33 = v23;
    if (!*((_QWORD *)v4 + 2))
    {
      v24.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v28, (JSC::JSGlobalObject *)&v33);
      JSC::VM::throwException(v4, this, v24);
      v23 = v33;
    }
    v33 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v22);
      else
        *(_DWORD *)v23 -= 2;
    }
    v20 = 0;
    goto LABEL_22;
  }
  v25 = std::__throw_bad_variant_access[abi:sn180100]();
  return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore21JSAudioBufferCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(v25, v26);
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore21JSAudioBufferCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21JSAudioBufferCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN3JSC11ArrayBufferENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSK_1EJSG_SI_EEEEEEDcSM_DpT0_(uint64_t a1, uint64_t *a2)
{
  return WTF::Ref<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>::~Ref(a2);
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8GainNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8GainNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9DelayNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9DelayNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14WaveShaperNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14WaveShaperNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore10PannerNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore10PannerNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore13ConvolverNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore13ConvolverNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore22DynamicsCompressorNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore22DynamicsCompressorNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19ScriptProcessorNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19ScriptProcessorNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14OscillatorNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14OscillatorNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12PeriodicWaveENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  WTF ***v4;
  uint64_t v5;
  WTF **v6;
  void *v7;
  WTF *v8;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = *(unsigned int *)(v2 + 36);
      if ((_DWORD)v3)
      {
        v4 = *(WTF ****)(v2 + 24);
        v5 = 8 * v3;
        do
        {
          v6 = *v4;
          *v4 = 0;
          if (v6)
          {
            WTF::fastAlignedFree(*v6, a2);
            WTF::fastFree((WTF *)v6, v7);
          }
          ++v4;
          v5 -= 8;
        }
        while (v5);
      }
      v8 = *(WTF **)(v2 + 24);
      if (v8)
      {
        *(_QWORD *)(v2 + 24) = 0;
        *(_DWORD *)(v2 + 32) = 0;
        WTF::fastFree(v8, a2);
      }
      WTF::fastFree((WTF *)v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12PeriodicWaveENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore19PeriodicWaveOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  WTF *v3;
  WTF *v4;

  if (*(_BYTE *)(a2 + 48))
  {
    v3 = *(WTF **)(a2 + 32);
    if (v3)
    {
      *(_QWORD *)(a2 + 32) = 0;
      *(_DWORD *)(a2 + 40) = 0;
      WTF::fastFree(v3, (void *)a2);
    }
  }
  if (*(_BYTE *)(a2 + 24))
  {
    v4 = *(WTF **)(a2 + 8);
    if (v4)
    {
      *(_QWORD *)(a2 + 8) = 0;
      *(_DWORD *)(a2 + 16) = 0;
      WTF::fastFree(v4, (void *)a2);
    }
  }
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore16StereoPannerNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore16StereoPannerNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDouble>>::convert@<X0>(uint64_t this@<X1>, JSC::JSGlobalObject *a2@<X0>, uint64_t a3@<X8>)
{
  JSC::VM *v5;
  unsigned int v7;
  char v8;
  uint64_t v9;
  void *v10;
  WTF::StringImpl *v11;
  uint64_t result;
  JSC::VM *v13;
  int v14;
  int v15;
  int v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF::StringImpl **v19;

  v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((this & 0xFFFE000000000002) != 0 || (v7 = *(unsigned __int8 *)(this + 5), v7 <= 0x16))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    result = (uint64_t)v17;
    v17 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = WTF::StringImpl::destroy((WTF::StringImpl *)result, v11);
      else
        *(_DWORD *)result -= 2;
    }
    *(_DWORD *)(a3 + 16) = 1;
  }
  else
  {
    if (v7 == 36)
    {
      if ((JSC::JSArray::isIteratorProtocolFastAndNonObservable((JSC::JSArray *)this) & 1) != 0)
      {
        v8 = *(_BYTE *)(this + 4);
        if ((v8 & 0xE) != 0)
        {
          v9 = *(unsigned int *)(*(_QWORD *)(this + 8) - 8);
          v17 = 0;
          v18 = 0;
          if ((_DWORD)v9)
          {
            if (v9 >> 29 || (WTF::tryFastMalloc((WTF *)(8 * v9)), !v19))
            {
              JSC::throwTypeError();
              goto LABEL_28;
            }
            LODWORD(v18) = v9;
            v17 = (WTF::StringImpl *)v19;
            v8 = *(_BYTE *)(this + 4);
          }
        }
        else
        {
          LODWORD(v9) = 0;
          v17 = 0;
          v18 = 0;
        }
        if ((v8 & 0xC) == 4)
        {
          WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDouble>>::convertArray(this, v9, v8 & 0xE, (uint64_t)&v17, a3);
          goto LABEL_24;
        }
        v13 = (JSC::VM *)*((_QWORD *)a2 + 7);
        v19 = &v17;
        JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDouble>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(a2, this, (uint64_t *)&v19);
        if (!*((_DWORD *)v13 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) == 0)
        {
          v14 = 0;
          *(_QWORD *)a3 = v17;
          v15 = v18;
          v16 = HIDWORD(v18);
          v17 = 0;
          v18 = 0;
          *(_DWORD *)(a3 + 8) = v15;
          *(_DWORD *)(a3 + 12) = v16;
LABEL_23:
          *(_DWORD *)(a3 + 16) = v14;
LABEL_24:
          result = (uint64_t)v17;
          if (!v17)
            return result;
          goto LABEL_25;
        }
LABEL_28:
        v14 = 1;
        goto LABEL_23;
      }
      v17 = 0;
      v18 = 0;
      v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
    }
    else
    {
      v17 = 0;
      v18 = 0;
    }
    v19 = &v17;
    result = JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDouble>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(a2, this, (uint64_t *)&v19);
    if (!*((_DWORD *)v5 + 20) || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v5), (result & 1) == 0))
    {
      *(_QWORD *)a3 = v17;
      *(_QWORD *)(a3 + 8) = v18;
      *(_DWORD *)(a3 + 16) = 0;
      return result;
    }
    result = (uint64_t)v17;
    *(_DWORD *)(a3 + 16) = 1;
    if (result)
    {
LABEL_25:
      v17 = 0;
      LODWORD(v18) = 0;
      return WTF::fastFree((WTF *)result, v10);
    }
  }
  return result;
}

uint64_t WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDouble>>::convertArray@<X0>(uint64_t a1@<X2>, unsigned int a2@<W3>, int a3@<W4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (a3 == 4)
  {
    if (!a2)
    {
LABEL_3:
      v8 = 0;
      *(_QWORD *)a5 = *(_QWORD *)a4;
      v9 = *(_QWORD *)(a4 + 8);
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_QWORD *)(a5 + 8) = v9;
      goto LABEL_4;
    }
    v10 = 0;
    v11 = 8 * a2;
    while (1)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + v10);
      if (v12)
      {
        LODWORD(v20) = *(_QWORD *)(*(_QWORD *)(a1 + 8) + v10);
        v13 = *(unsigned int *)(a4 + 12);
        if ((_DWORD)v13 != *(_DWORD *)(a4 + 8))
        {
          *(double *)(*(_QWORD *)a4 + 8 * v13) = (double)(int)v12;
          *(_DWORD *)(a4 + 12) = v13 + 1;
          goto LABEL_9;
        }
      }
      else
      {
        LODWORD(v20) = 0;
        v19 = *(unsigned int *)(a4 + 12);
        if ((_DWORD)v19 != *(_DWORD *)(a4 + 8))
        {
          *(_QWORD *)(*(_QWORD *)a4 + 8 * v19) = 0;
          *(_DWORD *)(a4 + 12) = v19 + 1;
          goto LABEL_9;
        }
      }
      result = WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,int>(a4, (int *)&v20);
LABEL_9:
      v10 += 8;
      if (v11 == v10)
        goto LABEL_3;
    }
  }
  if (!a2)
    goto LABEL_3;
  v15 = 0;
  v16 = 8 * a2;
  while (1)
  {
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + v15);
    if ((v17 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
      break;
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + v15);
    v18 = *(unsigned int *)(a4 + 12);
    if ((_DWORD)v18 == *(_DWORD *)(a4 + 8))
    {
      result = WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,double>(a4, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)a4 + 8 * v18) = v17;
      *(_DWORD *)(a4 + 12) = v18 + 1;
    }
    v15 += 8;
    if (v16 == v15)
      goto LABEL_3;
  }
  result = JSC::throwTypeError();
  v8 = 1;
LABEL_4:
  *(_DWORD *)(a5 + 16) = v8;
  return result;
}

uint64_t JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDouble>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t result;
  JSValue v8;
  int i;
  unsigned int v10;
  unint64_t IndexQuickly;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v6 = *((_QWORD *)a1 + 7);
  result = JSC::getIterationMode();
  if ((_DWORD)result == 2)
  {
    for (i = 1; ; ++i)
    {
      v10 = (*(_BYTE *)(a2 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(a2 + 8) - 8) : 0;
      if (i - 1 >= v10)
        break;
      IndexQuickly = JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)a2, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = JSC::JSObject::get((JSC::JSObject *)a2, a1, (i - 1));
      if (*(_DWORD *)(v6 + 80))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
        if ((result & 1) != 0)
          break;
      }
      v16 = v6;
      result = WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDouble>::convert((int)&v16, a1, IndexQuickly, *a3);
      if (*(_QWORD *)(v6 + 16))
      {
        v14 = JSC::JSArrayIterator::create();
        v15 = i | 0xFFFE000000000000;
        if (i < 0)
          v15 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v14 + 16) = v15;
        return JSC::iteratorClose();
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(a1, (JSC::JSGlobalObject *)a2, v8);
    if (!*(_DWORD *)(v6 + 80) || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6), (result & 1) == 0))
    {
      while (1)
      {
        result = JSC::iteratorStep();
        if (*(_QWORD *)(v6 + 16) || result == 6)
          break;
        v13 = JSC::iteratorValue();
        if (*(_DWORD *)(v6 + 80))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
          if ((result & 1) != 0)
            break;
        }
        v16 = v6;
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDouble>::convert((int)&v16, a1, v13, *a3);
        if (*(_QWORD *)(v6 + 16))
          return JSC::iteratorClose();
      }
    }
  }
  return result;
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDouble>::convert(int a1, JSC::JSGlobalObject *a2, unint64_t a3, uint64_t a4)
{
  uint64_t result;
  double v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  double v10;

  result = *((_QWORD *)a2 + 7);
  v10 = *(double *)&a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v6 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v9 = result;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v10, a2);
    result = v9;
    v6 = v8;
  }
  else
  {
    *(_QWORD *)&v6 = a3 - 0x2000000000000;
  }
  if (!*(_DWORD *)(result + 80)
    || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result), (result & 1) == 0))
  {
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      return JSC::throwTypeError();
    }
    else
    {
      v10 = v6;
      v7 = *(unsigned int *)(a4 + 12);
      if ((_DWORD)v7 == *(_DWORD *)(a4 + 8))
      {
        result = WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a4, v7 + 1, (unint64_t)&v10);
        v7 = *(unsigned int *)(a4 + 12);
        *(_QWORD *)(*(_QWORD *)a4 + 8 * v7) = *(_QWORD *)result;
      }
      else
      {
        *(double *)(*(_QWORD *)a4 + 8 * v7) = v6;
      }
      *(_DWORD *)(a4 + 12) = v7 + 1;
    }
  }
  return result;
}

uint64_t WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,int>(uint64_t result, int *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v3 = result;
  v4 = *(unsigned int *)(result + 8);
  v5 = *(unsigned int *)(result + 12);
  v6 = v4 + (v4 >> 2);
  if (v6 >= 0x10)
    v7 = v6 + 1;
  else
    v7 = 16;
  if (v7 <= v5 + 1)
    v8 = v5 + 1;
  else
    v8 = v7;
  if (v8 <= v4)
  {
LABEL_13:
    v12 = *(unsigned int *)(v3 + 12);
    *(double *)(*(_QWORD *)v3 + 8 * v12) = (double)*a2;
    *(_DWORD *)(v3 + 12) = v12 + 1;
    return 1;
  }
  if (!(v8 >> 29))
  {
    v9 = *(void **)result;
    v10 = (void *)WTF::fastMalloc((WTF *)(8 * v8));
    *(_DWORD *)(v3 + 8) = v8;
    *(_QWORD *)v3 = v10;
    memcpy(v10, v9, 8 * v5);
    if (v9)
    {
      if (*(void **)v3 == v9)
      {
        *(_QWORD *)v3 = 0;
        *(_DWORD *)(v3 + 8) = 0;
      }
      WTF::fastFree((WTF *)v9, v11);
    }
    goto LABEL_13;
  }
  __break(0xC471u);
  return result;
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore13IIRFilterNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore13IIRFilterNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIdLm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJSC_SE_EEEEEEDcSI_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *result;

  result = *a2;
  if (*a2)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19ChannelSplitterNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19ChannelSplitterNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore17ChannelMergerNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore17ChannelMergerNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsBasicCredentialConstructorFunction_isConditionalMediationAvailable(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  int v10;
  JSC::VM *v11;
  unint64_t v12;
  WebCore::DOMGuardedObject *v13;
  WebCore::DOMGuardedObject *v14;
  uint64_t v15;
  WebCore::DOMGuardedObject *v16;
  uint64_t v17;
  void (*v19)(void);
  objc_class *v20;
  WebCore::DOMGuardedObject *v21;
  WebCore::DOMGuardedObject *v22;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  if (!v5)
  {
    __break(0xC471u);
    JUMPOUT(0x1948C056CLL);
  }
  v9 = *((_QWORD *)this + 7);
  v10 = *((_DWORD *)this + 291);
  if (v10)
    v11 = (JSC::VM *)(16 * (v10 & 0xFFFFFFFE));
  else
    v11 = 0;
  v12 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v11, a3);
  v13 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v14 = WebCore::DOMGuardedObject::DOMGuardedObject(v13, (unint64_t)this, v12);
  *(_QWORD *)v14 = &off_1E3226868;
  *((_DWORD *)v14 + 10) = 0;
  *((_BYTE *)v14 + 44) = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v15)
  {
    if (*((_DWORD *)v13 + 4) != 1)
    {
      --*((_DWORD *)v13 + 4);
      goto LABEL_19;
    }
    v19 = *(void (**)(void))(*(_QWORD *)v13 + 16);
    goto LABEL_23;
  }
  if (*(_BYTE *)(v15 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x1948C05A0);
  }
  v22 = v13;
  WebCore::BasicCredential::isConditionalMediationAvailable(v15 - 192, (uint64_t *)&v22);
  v16 = v22;
  v22 = 0;
  if (v16)
  {
    if (*((_DWORD *)v16 + 4) != 1)
    {
      --*((_DWORD *)v16 + 4);
      goto LABEL_19;
    }
    v19 = *(void (**)(void))(*(_QWORD *)v16 + 16);
LABEL_23:
    v19();
  }
LABEL_19:
  v17 = *(_QWORD *)(v9 + 16);
  if (v17)
  {
    if (*(_QWORD *)(v9 + 24) != v17)
    {
      v20 = *(objc_class **)(v17 + 8);
      JSC::VM::clearException((JSC::VM *)v9);
      WebCore::DeferredPromise::create((unint64_t)this, v12, 0, &v22);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v22, v20, 0);
      v21 = v22;
      v22 = 0;
      if (v21)
      {
        if (*((_DWORD *)v21 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v21 + 16))(v21);
        else
          --*((_DWORD *)v21 + 4);
      }
    }
  }
  if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
    return 10;
  return v12;
}

WebCore::AudioNode *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore16BiquadFilterNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::AudioNode **a2)
{
  WebCore::AudioNode *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WebCore::AudioNode::deref(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore16BiquadFilterNodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsBiquadFilterNodePrototypeFunction_getFrequencyResponse(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  JSC::VM *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  _DWORD *v42;
  _DWORD *v43;
  JSC::VM *v44;
  JSValue v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  JSValue v49;
  WTF::StringImpl *v50;
  JSC::VM *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  JSC::VM *v58;
  WTF::StringImpl *v59;
  uint64_t v60;
  WTF::StringImpl *v61;
  char v62;
  _DWORD *v63;
  _DWORD *v64;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v51 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v51, "BiquadFilterNode", "getFrequencyResponse");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSBiquadFilterNode::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSBiquadFilterNode::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v51, "BiquadFilterNode", "getFrequencyResponse");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v46.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v46);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  v58 = v9;
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_29;
  if (*(_BYTE *)(v18 + 5) != 46)
    goto LABEL_29;
  JSC::JSGenericTypedArrayView<JSC::Float32Adaptor>::possiblySharedTypedImpl(v18, &v60);
  v19 = (JSC::VM *)v60;
  if (!v60)
    goto LABEL_29;
  v20 = *(_QWORD *)(v60 + 32);
  v21 = MEMORY[0x1E0CC10F8];
  if (v20)
  {
    v22 = *(_QWORD *)(v20 + 16);
    if (v22)
    {
      if ((v23 = *(_QWORD *)(MEMORY[0x1E0CC10F8] + 56)) == 0
        || !*(_BYTE *)(MEMORY[0x1E0CC10F8] + 34) && *MEMORY[0x1E0CC10F0]
        || (v22 & 0x3FFFFFFFFLL) + v23)
      {
        if (*(_QWORD *)(v20 + 32)
           ? WTF::RefPtr<JSC::SharedArrayBufferContents,WTF::RawPtrTraits<JSC::SharedArrayBufferContents>,WTF::DefaultRefDerefTraits<JSC::SharedArrayBufferContents>>::unspecifiedBoolTypeInstance
           : 0)
        {
          v60 = 0;
          goto LABEL_27;
        }
      }
    }
  }
  if ((*(_BYTE *)(v60 + 6) & 3) == 0)
  {
    v56 = v60;
    v57 = 0;
    v28 = *((_QWORD *)a2 + 7);
    v58 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((v28 & 0xFFFE000000000002) != 0)
      goto LABEL_49;
    if (*(_BYTE *)(v28 + 5) != 46)
      goto LABEL_49;
    JSC::JSGenericTypedArrayView<JSC::Float32Adaptor>::possiblySharedTypedImpl(v28, &v60);
    v29 = (_DWORD *)v60;
    if (!v60)
      goto LABEL_49;
    v30 = *(_QWORD *)(v60 + 32);
    if (v30)
    {
      v31 = *(_QWORD *)(v30 + 16);
      if (v31)
      {
        if ((v32 = *(_QWORD *)(v21 + 56)) == 0
          || !*(_BYTE *)(v21 + 34) && *MEMORY[0x1E0CC10F0]
          || (v31 & 0x3FFFFFFFFLL) + v32)
        {
          if (*(_QWORD *)(v30 + 32)
             ? WTF::RefPtr<JSC::SharedArrayBufferContents,WTF::RawPtrTraits<JSC::SharedArrayBufferContents>,WTF::DefaultRefDerefTraits<JSC::SharedArrayBufferContents>>::unspecifiedBoolTypeInstance
             : 0)
          {
            v60 = 0;
            goto LABEL_47;
          }
        }
      }
    }
    if ((*(_BYTE *)(v60 + 6) & 3) != 0)
    {
LABEL_47:
      if (*v29 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*v29;
LABEL_49:
      v34 = 1;
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v58, 1, "magResponse", 12, "BiquadFilterNode", 17, a8, "getFrequencyResponse", 21, "Float32Array", 13);
      v25 = 0;
      v55 = 1;
LABEL_50:
      ((void (*)(uint64_t *, uint64_t *))off_1E322ED78[v34])(&v60, &v54);
      v26 = 0;
      goto LABEL_30;
    }
    v54 = v60;
    v55 = 0;
    v35 = *((_QWORD *)a2 + 8);
    v58 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((v35 & 0xFFFE000000000002) != 0)
      goto LABEL_68;
    if (*(_BYTE *)(v35 + 5) != 46)
      goto LABEL_68;
    JSC::JSGenericTypedArrayView<JSC::Float32Adaptor>::possiblySharedTypedImpl(v35, &v60);
    v36 = (_DWORD *)v60;
    if (!v60)
      goto LABEL_68;
    v37 = *(_QWORD *)(v60 + 32);
    if (v37)
    {
      v38 = *(_QWORD *)(v37 + 16);
      if (v38)
      {
        if ((v39 = *(_QWORD *)(v21 + 56)) == 0
          || !*(_BYTE *)(v21 + 34) && *MEMORY[0x1E0CC10F0]
          || (v38 & 0x3FFFFFFFFLL) + v39)
        {
          if (*(_QWORD *)(v37 + 32)
             ? WTF::RefPtr<JSC::SharedArrayBufferContents,WTF::RawPtrTraits<JSC::SharedArrayBufferContents>,WTF::DefaultRefDerefTraits<JSC::SharedArrayBufferContents>>::unspecifiedBoolTypeInstance
             : 0)
          {
            v60 = 0;
            goto LABEL_66;
          }
        }
      }
    }
    if ((*(_BYTE *)(v60 + 6) & 3) != 0)
    {
LABEL_66:
      if (*v36 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*v36;
LABEL_68:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v58, 2, "phaseResponse", 14, "BiquadFilterNode", 17, a8, "getFrequencyResponse", 21, "Float32Array", 13);
      v25 = 0;
      v41 = 1;
      v53 = 1;
LABEL_69:
      ((void (*)(uint64_t *, uint64_t *))off_1E322ED78[v41])(&v60, &v52);
      v34 = 0;
      goto LABEL_50;
    }
    v53 = 0;
    v56 = 0;
    v58 = v19;
    v54 = 0;
    v63 = (_DWORD *)v60;
    v64 = v29;
    v52 = 0;
    WebCore::BiquadFilterNode::getFrequencyResponse(v17, (uint64_t *)&v58, (uint64_t *)&v64, (uint64_t *)&v63, (uint64_t)&v60);
    v42 = v63;
    v63 = 0;
    if (v42)
    {
      if (*v42 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*v42;
    }
    v43 = v64;
    v64 = 0;
    if (v43)
    {
      if (*v43 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*v43;
    }
    v44 = v58;
    v58 = 0;
    if (v44)
    {
      if (*(_DWORD *)v44 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*(_DWORD *)v44;
    }
    if (!v62)
    {
      v25 = 10;
LABEL_81:
      v41 = 0;
      goto LABEL_69;
    }
    v47 = (WTF::StringImpl *)v60;
    LOBYTE(v58) = v60;
    v48 = v61;
    v61 = 0;
    v59 = v48;
    if (!*((_QWORD *)v9 + 2))
    {
      v49.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v60, (JSC::JSGlobalObject *)&v59);
      JSC::VM::throwException(v9, this, v49);
      v48 = v59;
    }
    v59 = 0;
    if (v48)
    {
      if (*(_DWORD *)v48 == 2)
        WTF::StringImpl::destroy(v48, v47);
      else
        *(_DWORD *)v48 -= 2;
    }
    if (v62)
    {
      v50 = v61;
      v61 = 0;
      if (v50)
      {
        if (*(_DWORD *)v50 != 2)
        {
          v25 = 0;
          *(_DWORD *)v50 -= 2;
          goto LABEL_81;
        }
        WTF::StringImpl::destroy(v50, v47);
      }
    }
    v25 = 0;
    goto LABEL_81;
  }
LABEL_27:
  if (*(_DWORD *)v19 == 1)
    JSC::ArrayBufferView::operator delete();
  else
    --*(_DWORD *)v19;
LABEL_29:
  WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v58, 0, "frequencyHz", 12, "BiquadFilterNode", 17, a8, "getFrequencyResponse", 21, "Float32Array", 13);
  v25 = 0;
  v26 = 1;
  v57 = 1;
LABEL_30:
  ((void (*)(uint64_t *, uint64_t *))off_1E322ED78[v26])(&v60, &v56);
  return (_BYTE *)v25;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore15BlobPropertyBagENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS_7variantIJNS8_6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEENSB_INSC_11ArrayBufferENSE_ISJ_EENSG_ISJ_EEEENSB_IN7WebCore4BlobENSE_ISO_EENSG_ISO_EEEENS8_6StringEEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSN_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSZ_1EJSW_SX_EEEEEEDcS11_DpT0_(uint64_t a1, void *a2)
{
  return WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)a2, a2);
}

_BYTE *WebCore::jsBlobPrototypeFunction_slice(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  _DWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  JSC::VM *v17;
  double v18;
  double v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSC::VM *v22;
  WTF::StringImpl *v23;
  WebCore::JSBlob **v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  WebCore::Blob *v32;
  WebCore::Blob *v33;
  uint64_t v34;
  uint64_t v35;
  WebCore::ScriptExecutionContext *v36;
  WebCore::JSDOMGlobalObject *v37;
  unint64_t v38;
  WTF::StringImpl *v39;
  unint64_t v40;
  _DWORD *v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  WTF::StringImpl *v45;
  int hasExceptionsAfterHandlingTraps;
  double v47;
  JSC::VM *v48;
  uint64_t v49;
  int v50;
  WTF::StringImpl *v51;
  _DWORD *v52;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v48 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSBlob *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v48, "Blob", "slice");
  v7 = (_DWORD *)v6;
  v8 = *(_QWORD **)(v6 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v49 = 10;
LABEL_6:
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v49, this);
    v12 = v11;
    goto LABEL_9;
  }
  v9 = *((_QWORD *)a2 + 6);
  v49 = v9;
  if (v9 >= 0xFFFE000000000000)
  {
    v10 = (int)v9;
    goto LABEL_15;
  }
  if (v9 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    goto LABEL_6;
  *(_QWORD *)&v12 = v9 - 0x2000000000000;
LABEL_9:
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  if (fabs(v12) == INFINITY)
  {
    v10 = 0;
  }
  else
  {
    v13 = fmod(trunc(v12), 1.84467441e19);
    if (v13 < 0.0)
      v10 = -(uint64_t)(unint64_t)-v13;
    else
      v10 = (unint64_t)v13;
  }
LABEL_15:
  v14 = *((int *)a2 + 8);
  if ((unint64_t)(v14 - 3) > 0xFFFFFFFFFFFFFFFDLL)
  {
    v16 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    v15 = *((_QWORD *)a2 + 7);
    if (v15 == 10)
    {
      v16 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else
    {
      v49 = *((_QWORD *)a2 + 7);
      if (v15 < 0xFFFE000000000000)
      {
        v17 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v49, this);
          v18 = v47;
        }
        else
        {
          *(_QWORD *)&v18 = v15 - 0x2000000000000;
        }
        if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
          return 0;
        if (fabs(v18) == INFINITY)
        {
          v16 = 0;
        }
        else
        {
          v19 = fmod(trunc(v18), 1.84467441e19);
          if (v19 >= 0.0)
            v16 = (unint64_t)v19;
          else
            v16 = -(uint64_t)(unint64_t)-v19;
        }
      }
      else
      {
        v16 = (int)v15;
      }
      v14 = *((int *)a2 + 8);
    }
  }
  if ((unint64_t)(v14 - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v20 = *((_QWORD *)a2 + 8), v20 == 10))
  {
    v21 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v21 += 2;
    v50 = 0;
    goto LABEL_44;
  }
  v52 = (_DWORD *)v20;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v20 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v20 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v52, this);
    goto LABEL_41;
  }
  v23 = *(WTF::StringImpl **)(v20 + 8);
  if ((v23 & 1) != 0)
  {
    v23 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v20, this);
    if (!v23)
      goto LABEL_40;
    goto LABEL_39;
  }
  if (v23)
LABEL_39:
    *(_DWORD *)v23 += 2;
LABEL_40:
  v51 = v23;
LABEL_41:
  if (*((_DWORD *)v22 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v22);
    v21 = v51;
    if (hasExceptionsAfterHandlingTraps)
    {
      v50 = 1;
      v51 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, v45);
        else
          *(_DWORD *)v21 -= 2;
      }
      v40 = 0;
      v43 = 1;
      goto LABEL_75;
    }
  }
  else
  {
    v21 = v51;
  }
  v50 = 0;
LABEL_44:
  v24 = *(WebCore::JSBlob ***)(16 * (*v7 & 0xFFFFFFFE) + 0x28);
  v49 = 0;
  v51 = v21;
  v25 = v8[9];
  if (v25)
  {
    v26 = v25 + v10;
    if (v25 < -v10)
      v26 = 0;
    if (v25 >= v10)
      v27 = v10;
    else
      v27 = v8[9];
    if (v10 >= 1)
      v26 = v27;
    v28 = v25 + v16;
    if (v25 < -v16)
      v28 = 0;
    if (v25 >= v16)
      v25 = v16;
    if (v16 < 1)
      v25 = v28;
    v29 = v25 >= v26;
    v30 = v25 - v26;
    if (v29)
      v31 = v30;
    else
      v31 = 0;
  }
  else
  {
    v31 = 0;
  }
  v32 = (WebCore::Blob *)bmalloc::api::isoAllocate();
  v33 = v32;
  v34 = v8[4];
  if (v34)
  {
    v35 = *(_QWORD *)(v34 + 8);
    if (v35)
      v36 = (WebCore::ScriptExecutionContext *)(v35 - 96);
    else
      v36 = 0;
  }
  else
  {
    v36 = 0;
  }
  WebCore::Blob::Blob(v32, v36, (const WTF::URL *)(v8 + 10), (const WTF::URL *)v10, v16, v31, (const WTF::String *)&v51);
  v52 = v33;
  WebCore::ActiveDOMObject::suspendIfNeeded((_QWORD *)v33 + 3);
  if ((*(unsigned int (**)(WebCore::Blob *))(*(_QWORD *)v33 + 24))(v33))
    v38 = WebCore::createWrapper<WebCore::File,WebCore::Blob>((uint64_t)v24, (uint64_t *)&v52);
  else
    v38 = WebCore::createWrapper<WebCore::Blob,WebCore::Blob>(v24, (uint64_t *)&v52, v37);
  v40 = v38;
  v41 = v52;
  v52 = 0;
  if (v41)
  {
    if (v41[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v41 + 8))(v41);
    else
      --v41[4];
  }
  v42 = v51;
  v51 = 0;
  if (v42)
  {
    if (*(_DWORD *)v42 == 2)
      WTF::StringImpl::destroy(v42, v39);
    else
      *(_DWORD *)v42 -= 2;
  }
  v43 = 0;
LABEL_75:
  ((void (*)(_DWORD **, uint64_t *))off_1E322E100[v43])(&v52, &v49);
  return (_BYTE *)v40;
}

_BYTE *WebCore::jsBlobPrototypeFunction_stream(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  JSC::VM *v5;
  unint64_t v6;
  int v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  unint64_t v10;
  JSC::VM *v12;
  unsigned __int8 v13[16];
  int v14;
  JSC::VM *v15;
  char v16;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v12 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSBlob *>(v4);
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v12, "Blob", "stream");
  v7 = *(_DWORD *)v6;
  v8 = *(WTF::StringImpl **)(v6 + 24);
  v15 = v5;
  v9 = *(_QWORD *)(16 * (v7 & 0xFFFFFFFE) + 0x28);
  WebCore::Blob::stream(v8, (uint64_t)v13);
  v10 = WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::ReadableStream>,WebCore::ExceptionOr<WTF::Ref<WebCore::ReadableStream,WTF::RawPtrTraits<WebCore::ReadableStream>,WTF::DefaultRefDerefTraits<WebCore::ReadableStream>>>>(this, v9, &v15, v13);
  if (v14 != -1)
    ((void (*)(char *, unsigned __int8 *))off_1E322EEE8[v14])(&v16, v13);
  return (_BYTE *)v10;
}

unint64_t WebCore::jsBlobPrototypeFunction_text(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  unint64_t v16;
  const char *v17;
  uint64_t v18;
  WebCore::DOMGuardedObject *v19;
  void (*v20)(void);
  uint64_t v21;
  objc_class *v23;
  WebCore::DOMGuardedObject *v24;
  WebCore::DOMGuardedObject *v25;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948C1358);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v16 = JSC::jsDynamicCast<WebCore::JSBlob *>(*((_QWORD *)a2 + 5));
  if (!v16)
  {
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Blob", "text", v17);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_18;
    }
    v20 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_17;
  }
  v18 = *(_QWORD *)(v16 + 24);
  v19 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x10);
  *(_QWORD *)v19 = &off_1E33AEC80;
  *((_QWORD *)v19 + 1) = v14;
  v25 = v19;
  WebCore::Blob::loadBlob(v18, 3, (uint64_t *)&v25);
  if (v25)
  {
    v20 = *(void (**)(void))(*(_QWORD *)v25 + 8);
LABEL_17:
    v20();
  }
LABEL_18:
  v21 = *(_QWORD *)(v10 + 16);
  if (v21)
  {
    if (*(_QWORD *)(v10 + 24) != v21)
    {
      v23 = *(objc_class **)(v21 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v25);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v25, v23, 0);
      v24 = v25;
      v25 = 0;
      if (v24)
      {
        if (*((_DWORD *)v24 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v24 + 16))(v24);
        else
          --*((_DWORD *)v24 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsBlobPrototypeFunction_arrayBuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  unint64_t v16;
  const char *v17;
  uint64_t v18;
  WebCore::DOMGuardedObject *v19;
  void (*v20)(void);
  uint64_t v21;
  objc_class *v23;
  WebCore::DOMGuardedObject *v24;
  WebCore::DOMGuardedObject *v25;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948C1568);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v16 = JSC::jsDynamicCast<WebCore::JSBlob *>(*((_QWORD *)a2 + 5));
  if (!v16)
  {
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Blob", "arrayBuffer", v17);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_18;
    }
    v20 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_17;
  }
  v18 = *(_QWORD *)(v16 + 24);
  v19 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x10);
  *(_QWORD *)v19 = &off_1E33AECA8;
  *((_QWORD *)v19 + 1) = v14;
  v25 = v19;
  WebCore::Blob::loadBlob(v18, 0, (uint64_t *)&v25);
  if (v25)
  {
    v20 = *(void (**)(void))(*(_QWORD *)v25 + 8);
LABEL_17:
    v20();
  }
LABEL_18:
  v21 = *(_QWORD *)(v10 + 16);
  if (v21)
  {
    if (*(_QWORD *)(v10 + 24) != v21)
    {
      v23 = *(objc_class **)(v21 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v25);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v25, v23, 0);
      v24 = v25;
      v25 = 0;
      if (v24)
      {
        if (*((_DWORD *)v24 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v24 + 16))(v24);
        else
          --*((_DWORD *)v24 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsBlobPrototypeFunction_bytes(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  unint64_t v16;
  const char *v17;
  uint64_t v18;
  WebCore::DOMGuardedObject *v19;
  void (*v20)(void);
  uint64_t v21;
  objc_class *v23;
  WebCore::DOMGuardedObject *v24;
  WebCore::DOMGuardedObject *v25;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x1948C1778);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v16 = JSC::jsDynamicCast<WebCore::JSBlob *>(*((_QWORD *)a2 + 5));
  if (!v16)
  {
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Blob", "bytes", v17);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_18;
    }
    v20 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_17;
  }
  v18 = *(_QWORD *)(v16 + 24);
  v19 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x10);
  *(_QWORD *)v19 = &off_1E33AECE0;
  *((_QWORD *)v19 + 1) = v14;
  v25 = v19;
  WebCore::Blob::loadBlob(v18, 0, (uint64_t *)&v25);
  if (v25)
  {
    v20 = *(void (**)(void))(*(_QWORD *)v25 + 8);
LABEL_17:
    v20();
  }
LABEL_18:
  v21 = *(_QWORD *)(v10 + 16);
  if (v21)
  {
    if (*(_QWORD *)(v10 + 24) != v21)
    {
      v23 = *(objc_class **)(v21 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v25);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v25, v23, 0);
      v24 = v25;
      v25 = 0;
      if (v24)
      {
        if (*((_DWORD *)v24 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v24 + 16))(v24);
        else
          --*((_DWORD *)v24 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::ReadableStream>,WebCore::ExceptionOr<WTF::Ref<WebCore::ReadableStream,WTF::RawPtrTraits<WebCore::ReadableStream>,WTF::DefaultRefDerefTraits<WebCore::ReadableStream>>>>(JSC *this, uint64_t a2, JSC::VM **a3, unsigned __int8 *a4)
{
  int v4;
  WTF *v5;
  void *v6;
  unint64_t v7;
  WTF *v8;
  _DWORD *v10;
  JSC::JSGlobalObject *v13;
  WTF::StringImpl *v14;
  JSValue v15;
  uint64_t v16;
  WTF *v17;
  WTF::StringImpl *v18;

  v4 = *((_DWORD *)a4 + 4);
  if (!v4)
  {
    v5 = *(WTF **)a4;
    *(_QWORD *)a4 = 0;
    v17 = v5;
    v7 = WebCore::createWrapper<WebCore::ReadableStream,WebCore::ReadableStream>(a2, (JSC::VM *)&v17);
    v8 = v17;
    v17 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 1)
      {
        v10 = (_DWORD *)*((_QWORD *)v8 + 1);
        *((_QWORD *)v8 + 1) = 0;
        if (v10)
        {
          if (v10[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v10 + 16))(v10);
          else
            --v10[4];
        }
        WTF::fastFree(v8, v6);
      }
      else
      {
        --*(_DWORD *)v8;
      }
    }
    return v7;
  }
  if (v4 == 1)
  {
    v13 = (JSC::JSGlobalObject *)*a4;
    LOBYTE(v17) = *a4;
    v14 = (WTF::StringImpl *)*((_QWORD *)a4 + 1);
    *((_QWORD *)a4 + 1) = 0;
    v18 = v14;
    if (!*((_QWORD *)*a3 + 2))
    {
      v15.super.isa = (Class)WebCore::createDOMException(this, v13, (JSC::JSGlobalObject *)&v18);
      JSC::VM::throwException(*a3, this, v15);
      v14 = v18;
    }
    v18 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v13);
      else
        *(_DWORD *)v14 -= 2;
    }
    return 0;
  }
  v16 = std::__throw_bad_variant_access[abi:sn180100]();
  return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14ReadableStreamENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(v16);
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14ReadableStreamENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *v2;
  _DWORD *v3;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v3)
      {
        if (v3[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 16))(v3);
        else
          --v3[4];
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14ReadableStreamENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore9BlobEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, uint64_t a2)
{
  _DWORD *result;

  result = *(_DWORD **)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::jsBroadcastChannelPrototypeFunction_postMessage(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t result;
  JSValue v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  JSValue v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  char v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  char v22;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v17 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "BroadcastChannel", "postMessage");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSBroadcastChannel::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSBroadcastChannel::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "BroadcastChannel", "postMessage");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v12.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v12);
  }
  WebCore::BroadcastChannel::postMessage(*(_QWORD *)(v5 + 24), this, *((_QWORD *)a2 + 6), &v20);
  if (!v22)
    return 10;
  v13 = (WTF::StringImpl *)v20;
  v18 = v20;
  v14 = v21;
  v21 = 0;
  v19 = v14;
  if (!*((_QWORD *)v4 + 2))
  {
    v15.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v20, (JSC::JSGlobalObject *)&v19);
    JSC::VM::throwException(v4, this, v15);
    v14 = v19;
  }
  v19 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v13);
    else
      *(_DWORD *)v14 -= 2;
  }
  if (v22)
  {
    v16 = v21;
    v21 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 != 2)
      {
        result = 0;
        *(_DWORD *)v16 -= 2;
        return result;
      }
      WTF::StringImpl::destroy(v16, v13);
    }
  }
  return 0;
}

uint64_t WebCore::jsBroadcastChannelPrototypeFunction_close(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "BroadcastChannel", "close");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSBroadcastChannel::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSBroadcastChannel::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "BroadcastChannel", "close");
  WebCore::BroadcastChannel::close(*(_QWORD *)(v3 + 24));
  return 10;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore19BufferedChangeEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF *v5;
  WTF *v6;

  v3 = a2[2];
  a2[2] = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 1)
    {
      v5 = *(WTF **)(v3 + 8);
      if (v5)
      {
        *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 16) = 0;
        WTF::fastFree(v5, a2);
      }
      WTF::fastFree((WTF *)v3, a2);
    }
    else
    {
      --*(_DWORD *)v3;
    }
  }
  v4 = a2[1];
  a2[1] = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 1)
    {
      v6 = *(WTF **)(v4 + 8);
      if (v6)
      {
        *(_QWORD *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 16) = 0;
        WTF::fastFree(v6, a2);
      }
      WTF::fastFree((WTF *)v4, a2);
    }
    else
    {
      --*(_DWORD *)v4;
    }
  }
}

_BYTE *WebCore::jsCOEPInheritenceViolationReportBodyPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  unsigned __int8 *v34;
  unsigned int v35;
  unsigned __int8 *v36;
  unsigned int v37;
  unsigned __int8 *v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t SlowCase;
  uint64_t v45;
  WTF::StringImpl *v46;
  unint64_t v47;
  int v48;
  int v49;
  uint64_t v50;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v45 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v45, "COEPInheritenceViolationReportBody", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCOEPInheritenceViolationReportBody::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCOEPInheritenceViolationReportBody::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v45, "COEPInheritenceViolationReportBody", "toJSON");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (v12)
  {
    v13 = *(unsigned int *)(v12 + 60);
    v14 = *(_QWORD *)(v12 + 24);
    if (v14 < *(_QWORD *)(v12 + 32))
    {
LABEL_14:
      *(_QWORD *)(v12 + 24) = v14 + v13;
      goto LABEL_15;
    }
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v43 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v43);
      *(_QWORD *)(v12 + 40) = v14 + (int)v43;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
  }
  else
  {
    SlowCase = JSC::CompleteSubspace::allocateSlow();
  }
  v14 = SlowCase;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = *((_QWORD *)this + 7);
  if (!v46)
  {
    v18 = *(_QWORD *)(v16 + 41968);
    goto LABEL_25;
  }
  v17 = *((_DWORD *)v46 + 1);
  if (v17)
  {
    if (v17 != 1)
    {
LABEL_20:
      v18 = *(_QWORD *)(v16 + 64760);
      if (!v18 || v46 != *(WTF::StringImpl **)(v18 + 8))
        v18 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_23;
    }
    v34 = (unsigned __int8 *)*((_QWORD *)v46 + 1);
    if ((*((_BYTE *)v46 + 16) & 4) != 0)
    {
      v35 = *v34;
    }
    else
    {
      v40 = *(unsigned __int16 *)v34;
      if (v40 > 0xFF)
        goto LABEL_20;
      v35 = v40;
    }
    v18 = *(_QWORD *)(v16 + 8 * v35 + 42216);
  }
  else
  {
    v18 = *(_QWORD *)(v16 + 41968);
  }
LABEL_23:
  if (*(_DWORD *)v46 == 2)
    WTF::StringImpl::destroy(v46, v15);
  else
    *(_DWORD *)v46 -= 2;
LABEL_25:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v46;
  v46 = 0;
  v47 = v14;
  v48 = -1;
  v49 = 0x1000000;
  v50 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v46);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = *((_QWORD *)this + 7);
  v22 = *(_QWORD *)(v11 + 56);
  if (!v22 || (v23 = *(_DWORD *)(v22 + 4)) == 0)
  {
    v24 = *(_QWORD *)(v21 + 41968);
    goto LABEL_35;
  }
  if (v23 == 1)
  {
    v36 = *(unsigned __int8 **)(v22 + 8);
    if ((*(_BYTE *)(v22 + 16) & 4) != 0)
    {
      v37 = *v36;
    }
    else
    {
      v41 = *(unsigned __int16 *)v36;
      if (v41 > 0xFF)
        goto LABEL_32;
      v37 = v41;
    }
    v24 = *(_QWORD *)(v21 + 8 * v37 + 42216);
    goto LABEL_35;
  }
LABEL_32:
  v24 = *(_QWORD *)(v21 + 64760);
  if (!v24 || v22 != *(_QWORD *)(v24 + 8))
    v24 = JSC::jsStringWithCacheSlowCase();
LABEL_35:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v25 = v46;
  v46 = 0;
  v47 = v14;
  v48 = -1;
  v49 = 0x1000000;
  v50 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v25, v24, 0, (uint64_t)&v46);
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v26);
    else
      *(_DWORD *)v25 -= 2;
  }
  v27 = *((_QWORD *)this + 7);
  v28 = *(_QWORD *)(v11 + 16);
  if (v28 && (v29 = *(_DWORD *)(v28 + 4)) != 0)
  {
    if (v29 != 1)
    {
LABEL_42:
      v30 = *(_QWORD *)(v27 + 64760);
      if (!v30 || v28 != *(_QWORD *)(v30 + 8))
        v30 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_45;
    }
    v38 = *(unsigned __int8 **)(v28 + 8);
    if ((*(_BYTE *)(v28 + 16) & 4) != 0)
    {
      v39 = *v38;
    }
    else
    {
      v42 = *(unsigned __int16 *)v38;
      if (v42 > 0xFF)
        goto LABEL_42;
      v39 = v42;
    }
    v30 = *(_QWORD *)(v27 + 8 * v39 + 42216);
  }
  else
  {
    v30 = *(_QWORD *)(v27 + 41968);
  }
LABEL_45:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v31 = v46;
  v46 = 0;
  v47 = v14;
  v48 = -1;
  v49 = 0x1000000;
  v50 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v31, v30, 0, (uint64_t)&v46);
  if (v31)
  {
    if (*(_DWORD *)v31 == 2)
      WTF::StringImpl::destroy(v31, v32);
    else
      *(_DWORD *)v31 -= 2;
  }
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsCORPViolationReportBodyPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  int *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  uint64_t *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  int v37;
  uint64_t v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  unsigned __int8 *v42;
  unsigned int v43;
  unsigned __int8 *v44;
  unsigned int v45;
  unsigned __int8 *v46;
  unsigned int v47;
  unsigned __int8 *v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unint64_t v52;
  uint64_t SlowCase;
  uint64_t v54;
  WTF::StringImpl *v55;
  unint64_t v56;
  int v57;
  int v58;
  uint64_t v59;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v54 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v54, "CORPViolationReportBody", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCORPViolationReportBody::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCORPViolationReportBody::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v54, "CORPViolationReportBody", "toJSON");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (v12)
  {
    v13 = *(unsigned int *)(v12 + 60);
    v14 = *(_QWORD *)(v12 + 24);
    if (v14 < *(_QWORD *)(v12 + 32))
    {
LABEL_14:
      *(_QWORD *)(v12 + 24) = v14 + v13;
      goto LABEL_15;
    }
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v52 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v52);
      *(_QWORD *)(v12 + 40) = v14 + (int)v52;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
  }
  else
  {
    SlowCase = JSC::CompleteSubspace::allocateSlow();
  }
  v14 = SlowCase;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = *((_QWORD *)this + 7);
  if (!v55)
  {
    v18 = *(_QWORD *)(v16 + 41968);
    goto LABEL_25;
  }
  v17 = *((_DWORD *)v55 + 1);
  if (v17)
  {
    if (v17 != 1)
    {
LABEL_20:
      v18 = *(_QWORD *)(v16 + 64760);
      if (!v18 || v55 != *(WTF::StringImpl **)(v18 + 8))
        v18 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_23;
    }
    v42 = (unsigned __int8 *)*((_QWORD *)v55 + 1);
    if ((*((_BYTE *)v55 + 16) & 4) != 0)
    {
      v43 = *v42;
    }
    else
    {
      v50 = *(unsigned __int16 *)v42;
      if (v50 > 0xFF)
        goto LABEL_20;
      v43 = v50;
    }
    v18 = *(_QWORD *)(v16 + 8 * v43 + 42216);
  }
  else
  {
    v18 = *(_QWORD *)(v16 + 41968);
  }
LABEL_23:
  if (*(_DWORD *)v55 == 2)
    WTF::StringImpl::destroy(v55, v15);
  else
    *(_DWORD *)v55 -= 2;
LABEL_25:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v55;
  v55 = 0;
  v56 = v14;
  v57 = -1;
  v58 = 0x1000000;
  v59 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v55);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  {
    v21 = (int *)WebCore::CORPViolationReportBody::type(void)const::corpType;
    v22 = *((_QWORD *)this + 7);
    if (!WebCore::CORPViolationReportBody::type(void)const::corpType)
    {
LABEL_69:
      v24 = *(_QWORD *)(v22 + 41968);
      goto LABEL_36;
    }
  }
  else
  {
    v21 = &WebCore::CORPViolationReportBody::type(void)::$_0::operator() const(void)::impl;
    WebCore::CORPViolationReportBody::type(void)::$_0::operator() const(void)::impl += 2;
    WebCore::CORPViolationReportBody::type(void)const::corpType = (uint64_t)&WebCore::CORPViolationReportBody::type(void)::$_0::operator() const(void)::impl;
    v22 = *((_QWORD *)this + 7);
  }
  v23 = v21[1];
  if (!v23)
    goto LABEL_69;
  if (v23 == 1)
  {
    v44 = (unsigned __int8 *)*((_QWORD *)v21 + 1);
    if ((v21[4] & 4) != 0)
    {
      v45 = *v44;
    }
    else
    {
      v45 = *(unsigned __int16 *)v44;
      if (v45 > 0xFF)
        goto LABEL_33;
      v45 = v45;
    }
    v24 = *(_QWORD *)(v22 + 8 * v45 + 42216);
    goto LABEL_36;
  }
LABEL_33:
  v24 = *(_QWORD *)(v22 + 64760);
  if (!v24 || v21 != *(int **)(v24 + 8))
    v24 = JSC::jsStringWithCacheSlowCase();
LABEL_36:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v25 = v55;
  v55 = 0;
  v56 = v14;
  v57 = -1;
  v58 = 0x1000000;
  v59 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v25, v24, 0, (uint64_t)&v55);
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v26);
    else
      *(_DWORD *)v25 -= 2;
  }
  v27 = *((_QWORD *)this + 7);
  v28 = *(_QWORD *)(v11 + 16);
  if (!v28 || (v29 = *(_DWORD *)(v28 + 4)) == 0)
  {
    v30 = *(_QWORD *)(v27 + 41968);
    goto LABEL_46;
  }
  if (v29 == 1)
  {
    v46 = *(unsigned __int8 **)(v28 + 8);
    if ((*(_BYTE *)(v28 + 16) & 4) != 0)
    {
      v47 = *v46;
    }
    else
    {
      v51 = *(unsigned __int16 *)v46;
      if (v51 > 0xFF)
        goto LABEL_43;
      v47 = v51;
    }
    v30 = *(_QWORD *)(v27 + 8 * v47 + 42216);
    goto LABEL_46;
  }
LABEL_43:
  v30 = *(_QWORD *)(v27 + 64760);
  if (!v30 || v28 != *(_QWORD *)(v30 + 8))
    v30 = JSC::jsStringWithCacheSlowCase();
LABEL_46:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v31 = v55;
  v55 = 0;
  v56 = v14;
  v57 = -1;
  v58 = 0x1000000;
  v59 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v31, v30, 0, (uint64_t)&v55);
  if (v31)
  {
    if (*(_DWORD *)v31 == 2)
      WTF::StringImpl::destroy(v31, v32);
    else
      *(_DWORD *)v31 -= 2;
  }
  v33 = *((_QWORD *)this + 7);
  v34 = (uint64_t *)(v33 + 41968);
  WebCore::convertEnumerationToString(*(unsigned __int8 *)(v11 + 56), &v55);
  v36 = v55;
  if (v55)
  {
    v37 = *((_DWORD *)v55 + 1);
    if (v37)
    {
      if (v37 != 1)
      {
LABEL_53:
        v38 = *(_QWORD *)(v33 + 64760);
        if (!v38 || v55 != *(WTF::StringImpl **)(v38 + 8))
          v38 = JSC::jsStringWithCacheSlowCase();
        goto LABEL_56;
      }
      v48 = (unsigned __int8 *)*((_QWORD *)v55 + 1);
      if ((*((_BYTE *)v55 + 16) & 4) != 0)
      {
        v49 = *v48;
      }
      else
      {
        v49 = *(unsigned __int16 *)v48;
        if (v49 > 0xFF)
          goto LABEL_53;
        v49 = v49;
      }
      v38 = *(_QWORD *)(v33 + 8 * v49 + 42216);
    }
    else
    {
      v38 = *v34;
    }
LABEL_56:
    if (*(_DWORD *)v36 == 2)
      WTF::StringImpl::destroy(v36, v35);
    else
      *(_DWORD *)v36 -= 2;
    goto LABEL_58;
  }
  v38 = *v34;
LABEL_58:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v39 = v55;
  v55 = 0;
  v56 = v14;
  v57 = -1;
  v58 = 0x1000000;
  v59 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v39, v38, 0, (uint64_t)&v55);
  if (v39)
  {
    if (*(_DWORD *)v39 == 2)
      WTF::StringImpl::destroy(v39, v40);
    else
      *(_DWORD *)v39 -= 2;
  }
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsCSPViolationReportBodyPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  uint64_t v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  uint64_t v60;
  unint64_t v61;
  WTF::StringImpl *v62;
  WTF::StringImpl *v63;
  uint64_t v64;
  uint64_t v65;
  WTF::StringImpl *v66;
  WTF::StringImpl *v67;
  uint64_t v68;
  uint64_t v69;
  WTF::StringImpl *v70;
  WTF::StringImpl *v71;
  unsigned __int8 *v73;
  unsigned int v74;
  unsigned __int8 *v75;
  unsigned int v76;
  unsigned __int8 *v77;
  unsigned int v78;
  unsigned __int8 *v79;
  unsigned int v80;
  unsigned __int8 *v81;
  unsigned int v82;
  unsigned __int8 *v83;
  unsigned int v84;
  unsigned __int8 *v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unint64_t v94;
  uint64_t SlowCase;
  uint64_t v96;
  WTF::StringImpl *v97;
  unint64_t v98;
  int v99;
  int v100;
  uint64_t v101;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v96 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v96, "CSPViolationReportBody", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSPViolationReportBody::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSPViolationReportBody::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v96, "CSPViolationReportBody", "toJSON");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (v12)
  {
    v13 = *(unsigned int *)(v12 + 60);
    v14 = *(_QWORD *)(v12 + 24);
    if (v14 < *(_QWORD *)(v12 + 32))
    {
LABEL_14:
      *(_QWORD *)(v12 + 24) = v14 + v13;
      goto LABEL_15;
    }
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v94 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v94);
      *(_QWORD *)(v12 + 40) = v14 + (int)v94;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
  }
  else
  {
    SlowCase = JSC::CompleteSubspace::allocateSlow();
  }
  v14 = SlowCase;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v15 = *((_QWORD *)this + 7);
  v16 = *(_QWORD *)(v11 + 16);
  if (!v16 || (v17 = *(_DWORD *)(v16 + 4)) == 0)
  {
    v18 = *(_QWORD *)(v15 + 41968);
    goto LABEL_23;
  }
  if (v17 == 1)
  {
    v73 = *(unsigned __int8 **)(v16 + 8);
    if ((*(_BYTE *)(v16 + 16) & 4) != 0)
    {
      v74 = *v73;
    }
    else
    {
      v87 = *(unsigned __int16 *)v73;
      if (v87 > 0xFF)
        goto LABEL_20;
      v74 = v87;
    }
    v18 = *(_QWORD *)(v15 + 8 * v74 + 42216);
    goto LABEL_23;
  }
LABEL_20:
  v18 = *(_QWORD *)(v15 + 64760);
  if (!v18 || v16 != *(_QWORD *)(v18 + 8))
    v18 = JSC::jsStringWithCacheSlowCase();
LABEL_23:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v97;
  v97 = 0;
  v98 = v14;
  v99 = -1;
  v100 = 0x1000000;
  v101 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v97);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = *(_QWORD *)(v11 + 24);
  if (!v21)
  {
    v22 = 2;
    goto LABEL_34;
  }
  v23 = *((_QWORD *)this + 7);
  v24 = *(_DWORD *)(v21 + 4);
  if (!v24)
  {
    v22 = *(_QWORD *)(v23 + 41968);
    goto LABEL_34;
  }
  if (v24 == 1)
  {
    v81 = *(unsigned __int8 **)(v21 + 8);
    if ((*(_BYTE *)(v21 + 16) & 4) != 0)
    {
      v82 = *v81;
    }
    else
    {
      v91 = *(unsigned __int16 *)v81;
      if (v91 > 0xFF)
        goto LABEL_31;
      v82 = v91;
    }
    v22 = *(_QWORD *)(v23 + 8 * v82 + 42216);
    goto LABEL_34;
  }
LABEL_31:
  v22 = *(_QWORD *)(v23 + 64760);
  if (!v22 || v21 != *(_QWORD *)(v22 + 8))
    v22 = JSC::jsStringWithCacheSlowCase();
LABEL_34:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v25 = v97;
  v97 = 0;
  v98 = v14;
  v99 = -1;
  v100 = 0x1000000;
  v101 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v25, v22, 0, (uint64_t)&v97);
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v26);
    else
      *(_DWORD *)v25 -= 2;
  }
  v27 = *(_QWORD *)(v11 + 32);
  if (!v27)
  {
    v28 = 2;
    goto LABEL_45;
  }
  v29 = *((_QWORD *)this + 7);
  v30 = *(_DWORD *)(v27 + 4);
  if (!v30)
  {
    v28 = *(_QWORD *)(v29 + 41968);
    goto LABEL_45;
  }
  if (v30 == 1)
  {
    v83 = *(unsigned __int8 **)(v27 + 8);
    if ((*(_BYTE *)(v27 + 16) & 4) != 0)
    {
      v84 = *v83;
    }
    else
    {
      v92 = *(unsigned __int16 *)v83;
      if (v92 > 0xFF)
        goto LABEL_42;
      v84 = v92;
    }
    v28 = *(_QWORD *)(v29 + 8 * v84 + 42216);
    goto LABEL_45;
  }
LABEL_42:
  v28 = *(_QWORD *)(v29 + 64760);
  if (!v28 || v27 != *(_QWORD *)(v28 + 8))
    v28 = JSC::jsStringWithCacheSlowCase();
LABEL_45:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v31 = v97;
  v97 = 0;
  v98 = v14;
  v99 = -1;
  v100 = 0x1000000;
  v101 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v31, v28, 0, (uint64_t)&v97);
  if (v31)
  {
    if (*(_DWORD *)v31 == 2)
      WTF::StringImpl::destroy(v31, v32);
    else
      *(_DWORD *)v31 -= 2;
  }
  v33 = *((_QWORD *)this + 7);
  v34 = *(_QWORD *)(v11 + 40);
  if (!v34 || (v35 = *(_DWORD *)(v34 + 4)) == 0)
  {
    v36 = *(_QWORD *)(v33 + 41968);
    goto LABEL_55;
  }
  if (v35 == 1)
  {
    v75 = *(unsigned __int8 **)(v34 + 8);
    if ((*(_BYTE *)(v34 + 16) & 4) != 0)
    {
      v76 = *v75;
    }
    else
    {
      v88 = *(unsigned __int16 *)v75;
      if (v88 > 0xFF)
        goto LABEL_52;
      v76 = v88;
    }
    v36 = *(_QWORD *)(v33 + 8 * v76 + 42216);
    goto LABEL_55;
  }
LABEL_52:
  v36 = *(_QWORD *)(v33 + 64760);
  if (!v36 || v34 != *(_QWORD *)(v36 + 8))
    v36 = JSC::jsStringWithCacheSlowCase();
LABEL_55:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v37 = v97;
  v97 = 0;
  v98 = v14;
  v99 = -1;
  v100 = 0x1000000;
  v101 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v37, v36, 0, (uint64_t)&v97);
  if (v37)
  {
    if (*(_DWORD *)v37 == 2)
      WTF::StringImpl::destroy(v37, v38);
    else
      *(_DWORD *)v37 -= 2;
  }
  v39 = *((_QWORD *)this + 7);
  v40 = *(_QWORD *)(v11 + 48);
  if (!v40 || (v41 = *(_DWORD *)(v40 + 4)) == 0)
  {
    v42 = *(_QWORD *)(v39 + 41968);
    goto LABEL_65;
  }
  if (v41 == 1)
  {
    v77 = *(unsigned __int8 **)(v40 + 8);
    if ((*(_BYTE *)(v40 + 16) & 4) != 0)
    {
      v78 = *v77;
    }
    else
    {
      v89 = *(unsigned __int16 *)v77;
      if (v89 > 0xFF)
        goto LABEL_62;
      v78 = v89;
    }
    v42 = *(_QWORD *)(v39 + 8 * v78 + 42216);
    goto LABEL_65;
  }
LABEL_62:
  v42 = *(_QWORD *)(v39 + 64760);
  if (!v42 || v40 != *(_QWORD *)(v42 + 8))
    v42 = JSC::jsStringWithCacheSlowCase();
LABEL_65:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v43 = v97;
  v97 = 0;
  v98 = v14;
  v99 = -1;
  v100 = 0x1000000;
  v101 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v43, v42, 0, (uint64_t)&v97);
  if (v43)
  {
    if (*(_DWORD *)v43 == 2)
      WTF::StringImpl::destroy(v43, v44);
    else
      *(_DWORD *)v43 -= 2;
  }
  v45 = *(_QWORD *)(v11 + 56);
  if (!v45)
  {
    v46 = 2;
    goto LABEL_76;
  }
  v47 = *((_QWORD *)this + 7);
  v48 = *(_DWORD *)(v45 + 4);
  if (!v48)
  {
    v46 = *(_QWORD *)(v47 + 41968);
    goto LABEL_76;
  }
  if (v48 == 1)
  {
    v85 = *(unsigned __int8 **)(v45 + 8);
    if ((*(_BYTE *)(v45 + 16) & 4) != 0)
    {
      v86 = *v85;
    }
    else
    {
      v93 = *(unsigned __int16 *)v85;
      if (v93 > 0xFF)
        goto LABEL_73;
      v86 = v93;
    }
    v46 = *(_QWORD *)(v47 + 8 * v86 + 42216);
    goto LABEL_76;
  }
LABEL_73:
  v46 = *(_QWORD *)(v47 + 64760);
  if (!v46 || v45 != *(_QWORD *)(v46 + 8))
    v46 = JSC::jsStringWithCacheSlowCase();
LABEL_76:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v49 = v97;
  v97 = 0;
  v98 = v14;
  v99 = -1;
  v100 = 0x1000000;
  v101 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v49, v46, 0, (uint64_t)&v97);
  if (v49)
  {
    if (*(_DWORD *)v49 == 2)
      WTF::StringImpl::destroy(v49, v50);
    else
      *(_DWORD *)v49 -= 2;
  }
  v51 = *(_QWORD *)(v11 + 64);
  if (v51)
  {
    v52 = *((_QWORD *)this + 7);
    v53 = *(_DWORD *)(v51 + 4);
    if (v53)
    {
      if (v53 != 1)
      {
LABEL_83:
        v54 = *(_QWORD *)(v52 + 64760);
        if (!v54 || v51 != *(_QWORD *)(v54 + 8))
          v54 = JSC::jsStringWithCacheSlowCase();
        goto LABEL_87;
      }
      v79 = *(unsigned __int8 **)(v51 + 8);
      if ((*(_BYTE *)(v51 + 16) & 4) != 0)
      {
        v80 = *v79;
      }
      else
      {
        v90 = *(unsigned __int16 *)v79;
        if (v90 > 0xFF)
          goto LABEL_83;
        v80 = v90;
      }
      v54 = *(_QWORD *)(v52 + 8 * v80 + 42216);
    }
    else
    {
      v54 = *(_QWORD *)(v52 + 41968);
    }
  }
  else
  {
    v54 = 2;
  }
LABEL_87:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v55 = v97;
  v97 = 0;
  v98 = v14;
  v99 = -1;
  v100 = 0x1000000;
  v101 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v55, v54, 0, (uint64_t)&v97);
  if (v55)
  {
    if (*(_DWORD *)v55 == 2)
      WTF::StringImpl::destroy(v55, v56);
    else
      *(_DWORD *)v55 -= 2;
  }
  v57 = WebCore::convertEnumerationToJS<WebCore::SecurityPolicyViolationEventDisposition>(*((_QWORD *)this + 7), (WTF::StringImpl *)*(unsigned __int8 *)(v11 + 72));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v58 = v97;
  v97 = 0;
  v98 = v14;
  v99 = -1;
  v100 = 0x1000000;
  v101 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v58, v57, 0, (uint64_t)&v97);
  if (v58)
  {
    if (*(_DWORD *)v58 == 2)
      WTF::StringImpl::destroy(v58, v59);
    else
      *(_DWORD *)v58 -= 2;
  }
  v60 = *(unsigned __int16 *)(v11 + 74);
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  v61 = v60 | 0xFFFE000000000000;
  WTF::AtomStringImpl::addLiteral();
  v62 = v97;
  v97 = 0;
  v98 = v14;
  v99 = -1;
  v100 = 0x1000000;
  v101 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v62, v61, 0, (uint64_t)&v97);
  if (v62)
  {
    if (*(_DWORD *)v62 == 2)
      WTF::StringImpl::destroy(v62, v63);
    else
      *(_DWORD *)v62 -= 2;
  }
  v64 = *(_QWORD *)(v11 + 80);
  v65 = (v64 & 0x80000000) != 0
      ? COERCE__INT64((double)v64) + 0x2000000000000
      : *(_QWORD *)(v11 + 80) | 0xFFFE000000000000;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v66 = v97;
  v97 = 0;
  v98 = v14;
  v99 = -1;
  v100 = 0x1000000;
  v101 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v66, v65, 0, (uint64_t)&v97);
  if (v66)
  {
    if (*(_DWORD *)v66 == 2)
      WTF::StringImpl::destroy(v66, v67);
    else
      *(_DWORD *)v66 -= 2;
  }
  v68 = *(_QWORD *)(v11 + 88);
  v69 = (v68 & 0x80000000) != 0
      ? COERCE__INT64((double)v68) + 0x2000000000000
      : *(_QWORD *)(v11 + 88) | 0xFFFE000000000000;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v70 = v97;
  v97 = 0;
  v98 = v14;
  v99 = -1;
  v100 = 0x1000000;
  v101 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v70, v69, 0, (uint64_t)&v97);
  if (v70)
  {
    if (*(_DWORD *)v70 == 2)
      WTF::StringImpl::destroy(v70, v71);
    else
      *(_DWORD *)v70 -= 2;
  }
  return (_BYTE *)v14;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore17CSSAnimationEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore15CSSKeywordValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJS9_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore15CSSKeywordValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJS9_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore15CSSKeywordValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJS9_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore15CSSKeywordValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJS9_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSI_1EJdSG_EEEEEEDcSK_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

double _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISH_LNS0_6_TraitE1EEEEEvRSI_OT_EUlRSO_OT0_E_JRNS0_6__baseILSL_1EJdSG_EEEOSW_EEEDcSO_DpT0_(uint64_t a1, _QWORD *a2, double *a3)
{
  double result;

  result = *a3;
  *a2 = *(_QWORD *)a3;
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISH_LNS0_6_TraitE1EEEEEvRSI_OT_EUlRSO_OT0_E_JRNS0_6__baseILSL_1EJdSG_EEEOSW_EEEDcSO_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSL_1EJSI_SJ_EEEEEEDcSN_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E322F628[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS_7variantIJdNS8_6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEENS8_6StringENSB_INSC_15CSSKeywordValueENSE_ISK_EENSG_ISK_EEEEEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSU_1EJSR_SS_EEEEEEDcSW_DpT0_(uint64_t a1, unsigned int **a2)
{
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;

  v3 = *((unsigned int *)a2 + 3);
  v4 = *a2;
  if ((_DWORD)v3)
  {
    v5 = 16 * v3;
    do
    {
      v6 = v4[2];
      if ((_DWORD)v6 != -1)
        result = ((uint64_t (*)(char *, unsigned int *))off_1E322FC50[v6])(&v8, v4);
      v4[2] = -1;
      v4 += 4;
      v5 -= 16;
    }
    while (v5);
    v4 = *a2;
  }
  if (v4)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return WTF::fastFree((WTF *)v4, a2);
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6StringENS9_6RefPtrIN7WebCore15CSSKeywordValueENS9_12RawPtrTraitsISD_EENS9_21DefaultRefDerefTraitsISD_EEEEEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSJ_SK_EEEEEEDcSO_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E322F608[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

uint64_t WebCore::jsCSSColorValueConstructorFunction_parse(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl *v4;
  int v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  JSC::VM *v9;
  JSValue v10;
  WTF::StringImpl *v11;
  int v12;
  char v13;

  if (*((_DWORD *)a2 + 8) == 1)
  {
    v9 = (JSC::VM *)*((_QWORD *)this + 7);
    v10.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v10);
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v11);
  v5 = v12;
  if (v12)
  {
    v7 = 0;
LABEL_10:
    if (v5 == -1)
      return v7;
    goto LABEL_7;
  }
  v6 = v11;
  v11 = 0;
  if (!v6)
  {
    v5 = 0;
    goto LABEL_6;
  }
  if (*(_DWORD *)v6 == 2)
  {
    WTF::StringImpl::destroy(v6, v4);
    v7 = 2;
    v5 = v12;
    goto LABEL_10;
  }
  v5 = 0;
  *(_DWORD *)v6 -= 2;
LABEL_6:
  v7 = 2;
LABEL_7:
  ((void (*)(char *, WTF::StringImpl **))off_1E322E100[v5])(&v13, &v11);
  return v7;
}

_BYTE *WebCore::jsCSSColorValuePrototypeFunction_to(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  int v12;
  uint64_t v13;
  uint64_t v14;
  JSValue v17;
  JSC::VM *v18;
  _BYTE v19[8];
  int v20;
  char v21;
  _BYTE v22[8];
  uint64_t v23;
  unsigned int v24;
  int v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v18 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "CSSColorValue", "to");
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 76);
  v8 = *(_DWORD *)(v6 + 76) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSColorValue::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSColorValue::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "CSSColorValue", "to");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v17);
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert((uint64_t)v22, this, *((_QWORD *)a2 + 6));
  v12 = v25;
  if (v25)
  {
    v14 = 0;
  }
  else
  {
    v19[0] = 0;
    v20 = -1;
    v13 = v24;
    if (v24 == -1)
    {
      v12 = 0;
    }
    else
    {
      ((void (*)(char *, _BYTE *, uint64_t *))off_1E322F618[v24])(&v21, v19, &v23);
      v20 = v13;
      ((void (*)(char *, _BYTE *))off_1E322F608[v13])(&v21, v19);
      v12 = v25;
    }
    v20 = -1;
    v14 = 2;
  }
  if (v12 != -1)
    ((void (*)(char *, uint64_t *))off_1E322F668[v12])(&v21, &v23);
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsCSSGroupingRulePrototypeFunction_insertRule(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CSSGroupingRule *v12;
  int v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  int v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  JSValue v23;
  WTF::StringImpl *v24;
  JSValue v25;
  WebCore *v26;
  JSC::JSGlobalObject *v27;
  JSC::CallFrame *v28;
  JSC::VM *v29;
  WTF::StringImpl *v30;
  int v31;
  WTF::StringImpl *v32;
  int v33;
  unsigned int v34[2];
  WTF::StringImpl *v35;
  int v36;
  _BYTE v37[8];
  WTF::StringImpl *v38;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "CSSGroupingRule", "insertRule");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSGroupingRule::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSGroupingRule::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "CSSGroupingRule", "insertRule");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v23);
  }
  v12 = *(WebCore::CSSGroupingRule **)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v35);
  v13 = v36;
  if (v36)
  {
    v19 = 0;
LABEL_27:
    if (v13 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E322E100[v13])(&v31, &v35);
    return (_BYTE *)v19;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v14 = 10;
  else
    v14 = *((_QWORD *)a2 + 7);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v14, v34);
  if (v34[1])
  {
    v19 = 0;
LABEL_26:
    v13 = v36;
    goto LABEL_27;
  }
  if (!v36)
  {
    v15 = v35;
    v35 = 0;
    v30 = v15;
    WebCore::CSSGroupingRule::insertRule(v12, (const WTF::String *)&v30, v34[0], (uint64_t)&v31);
    if (!v33)
    {
      v16 = 0;
      if (v31 < 0)
        v17 = COERCE__INT64((double)v31) + 0x2000000000000;
      else
        v17 = v31 | 0xFFFE000000000000;
LABEL_22:
      ((void (*)(_BYTE *, int *))off_1E322FC40[v16])(v37, &v31);
      v19 = v17;
LABEL_23:
      v33 = -1;
      v20 = v30;
      v30 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 == 2)
          WTF::StringImpl::destroy(v20, v18);
        else
          *(_DWORD *)v20 -= 2;
      }
      goto LABEL_26;
    }
    if (v33 == 1)
    {
      v18 = (WTF::StringImpl *)v31;
      v37[0] = v31;
      v24 = v32;
      v32 = 0;
      v38 = v24;
      if (!*((_QWORD *)v4 + 2))
      {
        v25.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v31, (JSC::JSGlobalObject *)&v38);
        JSC::VM::throwException(v4, this, v25);
        v24 = v38;
      }
      v38 = 0;
      if (v24)
      {
        if (*(_DWORD *)v24 == 2)
          WTF::StringImpl::destroy(v24, v18);
        else
          *(_DWORD *)v24 -= 2;
      }
      v17 = 0;
      v19 = 0;
      v16 = v33;
      if (v33 == -1)
        goto LABEL_23;
      goto LABEL_22;
    }
  }
  v26 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSGroupingRulePrototypeFunction_deleteRule(v26, v27, v28);
}

uint64_t WebCore::jsCSSGroupingRulePrototypeFunction_deleteRule(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::CSSGroupingRule *v11;
  JSValue v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  JSValue v16;
  JSC::VM *v17;
  unsigned int v18[2];
  char v19;
  WTF::StringImpl *v20;
  int v21;
  WTF::StringImpl *v22;
  char v23;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v17 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "CSSGroupingRule", "deleteRule");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSGroupingRule::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSGroupingRule::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "CSSGroupingRule", "deleteRule");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v11 = *(WebCore::CSSGroupingRule **)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v18);
    if (!v18[1])
    {
      WebCore::CSSGroupingRule::deleteRule(v11, v18[0], (uint64_t)&v21);
      if (!v23)
        return 10;
      v14 = (WTF::StringImpl *)v21;
      v19 = v21;
      v15 = v22;
      v20 = v22;
      if (!*((_QWORD *)v4 + 2))
      {
        v16.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v21, (JSC::JSGlobalObject *)&v20);
        JSC::VM::throwException(v4, this, v16);
        v15 = v20;
      }
      v20 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v14);
        else
          *(_DWORD *)v15 -= 2;
      }
    }
    return 0;
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJjN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSB_1EJjS9_EEEEEEDcSD_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJdSG_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJdSG_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJdSG_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

double _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJdSG_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, double *a3)
{
  double result;

  result = *a3;
  *a2 = *(_QWORD *)a3;
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJdSG_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJdSG_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJdSG_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6CSSHSLENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6CSSHSLENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENS9_6StringENSA_INSB_15CSSKeywordValueENSD_ISJ_EENSF_ISJ_EEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSN_SO_EEEEEEDcSS_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E322FC50[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6CSSHWBENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6CSSHWBENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsCSSKeyframesRulePrototypeFunction_appendRule(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::CSSKeyframesRule *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  JSValue v21;
  WTF::StringImpl *v22;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v24;
  uint64_t v25;
  int v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CSSKeyframesRule", "appendRule");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSKeyframesRule::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSKeyframesRule::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CSSKeyframesRule", "appendRule");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v21);
  }
  v11 = *(WebCore::CSSKeyframesRule **)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v28 = (WTF::StringImpl *)v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v27 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v28, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v27;
    if (hasExceptionsAfterHandlingTraps)
    {
      v26 = 1;
      v27 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v22);
        else
          *(_DWORD *)v14 -= 2;
      }
      v18 = 0;
      v17 = 1;
      goto LABEL_25;
    }
  }
  else
  {
    v14 = v27;
  }
  v26 = 0;
  v25 = 0;
  v28 = v14;
  WebCore::CSSKeyframesRule::appendRule(v11, (const WTF::String *)&v28);
  v16 = v28;
  v28 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v15);
    else
      *(_DWORD *)v16 -= 2;
  }
  v17 = 0;
  v18 = 10;
LABEL_25:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v17])(&v28, &v25);
  return (_BYTE *)v18;
}

_BYTE *WebCore::jsCSSKeyframesRulePrototypeFunction_deleteRule(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::CSSKeyframesRule *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  JSValue v21;
  WTF::StringImpl *v22;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v24;
  uint64_t v25;
  int v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CSSKeyframesRule", "deleteRule");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSKeyframesRule::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSKeyframesRule::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CSSKeyframesRule", "deleteRule");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v21);
  }
  v11 = *(WebCore::CSSKeyframesRule **)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v28 = (WTF::StringImpl *)v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v27 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v28, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v27;
    if (hasExceptionsAfterHandlingTraps)
    {
      v26 = 1;
      v27 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v22);
        else
          *(_DWORD *)v14 -= 2;
      }
      v18 = 0;
      v17 = 1;
      goto LABEL_25;
    }
  }
  else
  {
    v14 = v27;
  }
  v26 = 0;
  v25 = 0;
  v28 = v14;
  WebCore::CSSKeyframesRule::deleteRule(v11, (unsigned int **)&v28);
  v16 = v28;
  v28 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v15);
    else
      *(_DWORD *)v16 -= 2;
  }
  v17 = 0;
  v18 = 10;
LABEL_25:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v17])(&v28, &v25);
  return (_BYTE *)v18;
}

_BYTE *WebCore::jsCSSKeyframesRulePrototypeFunction_findRule(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::CSSKeyframesRule *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  _DWORD *Rule;
  WTF::StringImpl *v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  JSValue v23;
  WTF::StringImpl *v24;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v26;
  uint64_t v27;
  int v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "CSSKeyframesRule", "findRule");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSKeyframesRule::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSKeyframesRule::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "CSSKeyframesRule", "findRule");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v23);
  }
  v11 = *(WebCore::CSSKeyframesRule **)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v30 = (WTF::StringImpl *)v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v29 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v30, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v29;
    if (hasExceptionsAfterHandlingTraps)
    {
      v28 = 1;
      v29 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v24);
        else
          *(_DWORD *)v14 -= 2;
      }
      v18 = 0;
      v20 = 1;
      goto LABEL_28;
    }
  }
  else
  {
    v14 = v29;
  }
  v28 = 0;
  v15 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v27 = 0;
  v30 = v14;
  Rule = (_DWORD *)WebCore::CSSKeyframesRule::findRule(v11, (unsigned int **)&v30);
  if (Rule)
    v18 = WebCore::wrap<WebCore::CSSRule>((uint64_t)this, v15, Rule);
  else
    v18 = 2;
  v19 = v30;
  v30 = 0;
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v17);
    else
      *(_DWORD *)v19 -= 2;
  }
  v20 = 0;
LABEL_28:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E322E100[v20])(&v30, &v27);
  return (_BYTE *)v18;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15CSSKeywordValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15CSSKeywordValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6CSSLCHENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6CSSLCHENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6CSSLabENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6CSSLabENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12CSSMathClampENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12CSSMathClampENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore10CSSMathMaxENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore10CSSMathMaxENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore10CSSMathMinENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore10CSSMathMinENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14CSSMathProductENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14CSSMathProductENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore10CSSMathSumENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore10CSSMathSumENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *WTF::VectorDestructor<true,WebCore::ImageResource>::destruct(WTF::StringImpl *result, WTF::StringImpl *a2)
{
  WTF::StringImpl **v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;

  if (result != a2)
  {
    v3 = (WTF::StringImpl **)result;
    do
    {
      v4 = v3[3];
      v3[3] = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      v5 = v3[2];
      v3[2] = 0;
      if (v5)
      {
        if (*(_DWORD *)v5 == 2)
          WTF::StringImpl::destroy(v5, a2);
        else
          *(_DWORD *)v5 -= 2;
      }
      v6 = v3[1];
      v3[1] = 0;
      if (v6)
      {
        if (*(_DWORD *)v6 == 2)
          WTF::StringImpl::destroy(v6, a2);
        else
          *(_DWORD *)v6 -= 2;
      }
      result = *v3;
      *v3 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
        else
          *(_DWORD *)result -= 2;
      }
      v3 += 4;
    }
    while (v3 != (WTF::StringImpl **)a2);
  }
  return result;
}

uint64_t WebCore::JSBackgroundFetchManager::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t *std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](uint64_t *a1)
{
  uint64_t v2;
  WTF *v3;
  void *v4;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v3, v4);
  }
  return a1;
}

WTF *std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  WTF *result;
  uint64_t v18;
  WTF *v19;

  v12 = WTF::fastMalloc((WTF *)0xF8);
  WTF::CString::CString((WTF::CString *)&v19, a1);
  v13 = *a4;
  v14 = *a5;
  v18 = 0;
  MEMORY[0x19AEA3204](v12, &v19, a2, a3, v13, v14, &v18);
  *a6 = v12;
  v16 = v18;
  v18 = 0;
  if (v16)
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  result = v19;
  v19 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
      return (WTF *)WTF::fastFree(result, v15);
    else
      --*(_DWORD *)result;
  }
  return result;
}

WTF::StringImpl *WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::ImageResource>>>::convert(uint64_t a1, JSC::JSGlobalObject *a2, uint64_t a3)
{
  uint64_t v5;
  JSValue v7;
  int i;
  unsigned int v9;
  JSC::JSCell *IndexQuickly;
  WTF::StringImpl *v11;
  WTF::StringImpl *result;
  uint64_t v13;
  JSC::JSCell *v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  char hasExceptionsAfterHandlingTraps;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;

  v5 = *((_QWORD *)a2 + 7);
  if ((a3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a3 + 5) <= 0x16u)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    result = v21;
    v21 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v11);
      else
        *(_DWORD *)result -= 2;
    }
    *(_DWORD *)(a1 + 16) = 1;
  }
  else
  {
    v21 = 0;
    v22 = 0;
    if (JSC::getIterationMode() == 2)
    {
      for (i = 1; ; ++i)
      {
        v9 = (*(_BYTE *)(a3 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(a3 + 8) - 8) : 0;
        if (i - 1 >= v9)
          break;
        IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)a3, i - 1, 0);
        if (!IndexQuickly)
          IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)a3, a2, (i - 1));
        if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
          break;
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::ImageResource>>::convert((JSC::VM **)a2, IndexQuickly, (uint64_t)&v21);
        if (*(_QWORD *)(v5 + 16))
        {
          v16 = JSC::JSArrayIterator::create();
          v17 = i | 0xFFFE000000000000;
          if (i < 0)
            v17 = COERCE__INT64((double)i) + 0x2000000000000;
          *(_QWORD *)(v16 + 16) = v17;
          goto LABEL_34;
        }
      }
    }
    else
    {
      JSC::iteratorForIterable(a2, (JSC::JSGlobalObject *)a3, v7);
      if (!*(_DWORD *)(v5 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) == 0)
      {
        while (1)
        {
          v13 = JSC::iteratorStep();
          if (*(_QWORD *)(v5 + 16) || v13 == 6)
            break;
          v15 = (JSC::JSCell *)JSC::iteratorValue();
          if (*(_DWORD *)(v5 + 80))
          {
            if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
              break;
          }
          WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::ImageResource>>::convert((JSC::VM **)a2, v15, (uint64_t)&v21);
          if (*(_QWORD *)(v5 + 16))
          {
LABEL_34:
            JSC::iteratorClose();
            break;
          }
        }
      }
    }
    if (!*(_DWORD *)(v5 + 80))
    {
      result = v21;
LABEL_37:
      *(_QWORD *)a1 = result;
      *(_QWORD *)(a1 + 8) = v22;
      *(_DWORD *)(a1 + 16) = 0;
      return result;
    }
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5);
    result = v21;
    if ((hasExceptionsAfterHandlingTraps & 1) == 0)
      goto LABEL_37;
    v20 = HIDWORD(v22);
    *(_DWORD *)(a1 + 16) = 1;
    if ((_DWORD)v20)
    {
      WTF::VectorDestructor<true,WebCore::ImageResource>::destruct(result, (WTF::StringImpl *)((char *)result + 32 * v20));
      result = v21;
    }
    if (result)
    {
      v21 = 0;
      LODWORD(v22) = 0;
      return (WTF::StringImpl *)WTF::fastFree(result, v18);
    }
  }
  return result;
}

WTF::StringImpl *WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::ImageResource>>::convert(JSC::VM **a1, JSC::JSCell *a2, uint64_t a3)
{
  WTF::StringImpl *result;
  WTF::StringImpl *v5;
  int v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  int v26;

  result = (WTF::StringImpl *)WebCore::convertDictionary<WebCore::ImageResource>(a2, a1, (uint64_t)&v24);
  v6 = v26;
  if (!v26)
  {
    v7 = v24;
    v22 = v24;
    v8 = v25;
    v24 = 0u;
    v25 = 0u;
    v23 = v8;
    v9 = *(unsigned int *)(a3 + 12);
    if ((_DWORD)v9 == *(_DWORD *)(a3 + 8))
    {
      v10 = WTF::Vector<WebCore::ImageResource,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v9 + 1, (unint64_t)&v22);
      v11 = *(unsigned int *)(a3 + 12);
      v12 = (_QWORD *)(*(_QWORD *)a3 + 32 * v11);
      v13 = *(_QWORD *)v10;
      *(_QWORD *)v10 = 0;
      *v12 = v13;
      v14 = *((_QWORD *)v10 + 1);
      *((_QWORD *)v10 + 1) = 0;
      v12[1] = v14;
      v15 = *((_QWORD *)v10 + 2);
      *((_QWORD *)v10 + 2) = 0;
      v12[2] = v15;
      v16 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v10 + 3) = 0;
      v12[3] = v16;
      v17 = (WTF::StringImpl *)*((_QWORD *)&v23 + 1);
      *(_DWORD *)(a3 + 12) = v11 + 1;
      *((_QWORD *)&v23 + 1) = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v5);
        else
          *(_DWORD *)v17 -= 2;
      }
    }
    else
    {
      v18 = *(_QWORD *)a3;
      *(_QWORD *)&v22 = 0;
      v19 = v18 + 32 * v9;
      *(_QWORD *)v19 = v7;
      *((_QWORD *)&v22 + 1) = 0;
      *(_QWORD *)(v19 + 8) = *((_QWORD *)&v7 + 1);
      *(_QWORD *)&v23 = 0;
      *(_OWORD *)(v19 + 16) = v8;
      *(_DWORD *)(a3 + 12) = v9 + 1;
      *((_QWORD *)&v23 + 1) = 0;
    }
    v20 = (WTF::StringImpl *)v23;
    *(_QWORD *)&v23 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v5);
      else
        *(_DWORD *)v20 -= 2;
    }
    v21 = (WTF::StringImpl *)*((_QWORD *)&v22 + 1);
    *((_QWORD *)&v22 + 1) = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v5);
      else
        *(_DWORD *)v21 -= 2;
    }
    result = (WTF::StringImpl *)v22;
    *(_QWORD *)&v22 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v5);
      else
        *(_DWORD *)result -= 2;
    }
    v6 = v26;
  }
  if (v6 != -1)
    return (WTF::StringImpl *)((uint64_t (*)(__int128 *, __int128 *))off_1E32307B8[v6])(&v22, &v24);
  return result;
}

char *WTF::Vector<WebCore::ImageResource,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  WTF::StringImpl **v11;
  void *v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl **v19;
  void *v20;

  v3 = a3;
  v5 = *(WTF::StringImpl **)a1;
  if (*(_QWORD *)a1 > a3
    || (v6 = (WTF::StringImpl *)((char *)v5 + 32 * *(unsigned int *)(a1 + 12)), (unint64_t)v6 <= a3))
  {
    v14 = *(unsigned int *)(a1 + 8);
    v15 = v14 + (v14 >> 2);
    if (v15 >= 0x10)
      v16 = v15 + 1;
    else
      v16 = 16;
    if (v16 <= a2)
      v17 = a2;
    else
      v17 = v16;
    if (v17 > v14)
    {
      if (v17 >> 27)
      {
        __break(0xC471u);
        JUMPOUT(0x1948C503CLL);
      }
      v18 = (WTF::StringImpl *)((char *)v5 + 32 * *(unsigned int *)(a1 + 12));
      v19 = (WTF::StringImpl **)WTF::fastMalloc((WTF *)(32 * v17));
      *(_DWORD *)(a1 + 8) = v17;
      *(_QWORD *)a1 = v19;
      WTF::VectorMover<false,WebCore::ImageResource>::move(v5, v18, v19);
      if (v5)
      {
        if (*(WTF::StringImpl **)a1 == v5)
        {
          *(_QWORD *)a1 = 0;
          *(_DWORD *)(a1 + 8) = 0;
        }
        WTF::fastFree(v5, v20);
      }
    }
  }
  else
  {
    v7 = *(unsigned int *)(a1 + 8);
    v8 = v7 + (v7 >> 2);
    if (v8 >= 0x10)
      v9 = v8 + 1;
    else
      v9 = 16;
    if (v9 <= a2)
      v10 = a2;
    else
      v10 = v9;
    if (v10 <= v7)
    {
      v13 = *(WTF::StringImpl **)a1;
    }
    else
    {
      if (v10 >> 27)
      {
        __break(0xC471u);
        JUMPOUT(0x1948C5044);
      }
      v11 = (WTF::StringImpl **)WTF::fastMalloc((WTF *)(32 * v10));
      *(_DWORD *)(a1 + 8) = v10;
      *(_QWORD *)a1 = v11;
      WTF::VectorMover<false,WebCore::ImageResource>::move(v5, v6, v11);
      v13 = *(WTF::StringImpl **)a1;
      if (v5)
      {
        if (v13 == v5)
        {
          *(_QWORD *)a1 = 0;
          *(_DWORD *)(a1 + 8) = 0;
        }
        WTF::fastFree(v5, v12);
        v13 = *(WTF::StringImpl **)a1;
      }
    }
    return (char *)v13 + 32 * ((uint64_t)(v3 - (_QWORD)v5) >> 5);
  }
  return (char *)v3;
}

WTF::StringImpl *WTF::VectorMover<false,WebCore::ImageResource>::move(WTF::StringImpl *result, WTF::StringImpl *a2, WTF::StringImpl **a3)
{
  WTF::StringImpl **v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;

  if (result != a2)
  {
    v5 = (WTF::StringImpl **)result;
    do
    {
      v6 = *v5;
      *v5 = 0;
      *a3 = v6;
      v7 = v5[1];
      v5[1] = 0;
      a3[1] = v7;
      v8 = v5[2];
      v5[2] = 0;
      a3[2] = v8;
      v9 = v5[3];
      v5[3] = 0;
      a3[3] = v9;
      v10 = v5[3];
      v5[3] = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, a2);
        else
          *(_DWORD *)v10 -= 2;
      }
      v11 = v5[2];
      v5[2] = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, a2);
        else
          *(_DWORD *)v11 -= 2;
      }
      v12 = v5[1];
      v5[1] = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, a2);
        else
          *(_DWORD *)v12 -= 2;
      }
      result = *v5;
      *v5 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
        else
          *(_DWORD *)result -= 2;
      }
      v5 += 4;
      a3 += 4;
    }
    while (v5 != (WTF::StringImpl **)a2);
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore13ImageResourceENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (WTF::StringImpl *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, a2);
    else
      *(_DWORD *)v4 -= 2;
  }
  v5 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, a2);
    else
      *(_DWORD *)v5 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSBackgroundFetchRecord::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t _ZN3WTF6Detail15CallableWrapperIZN7WebCore15DOMPromiseProxyINS2_12IDLInterfaceINS2_13FetchResponseEEEE7promiseERN3JSC14JSGlobalObjectERNS2_17JSDOMGlobalObjectEEUlRT_E_vJRNS2_15DeferredPromiseEEE4callESH_(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v4;

  v2 = *(_QWORD *)(a1 + 8);
  if (!*(_BYTE *)(v2 + 24))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(_DWORD *)(v2 + 16))
  {
LABEL_6:
    a2 = std::__throw_bad_variant_access[abi:sn180100]();
    return WebCore::DeferredPromise::resolve<WebCore::IDLInterface<WebCore::FetchResponse>>(a2, v4);
  }
  v4 = *(_DWORD **)v2;
  return WebCore::DeferredPromise::resolve<WebCore::IDLInterface<WebCore::FetchResponse>>(a2, v4);
}

uint64_t WebCore::DeferredPromise::resolve<WebCore::IDLInterface<WebCore::FetchResponse>>(uint64_t result, _DWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  WebCore::JSDOMGlobalObject *v6;
  uint64_t v7;
  objc_class *v8;
  uint64_t v9;
  _BYTE v10[8];

  v2 = *(_QWORD *)(result + 24);
  if (v2 && *(_QWORD *)v2 && (*(_BYTE *)(v2 + 8) & 3) == 0)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + 32);
    if (!v5 || (*(_BYTE *)(v5 + 8) & 3) != 0)
      v6 = 0;
    else
      v6 = *(WebCore::JSDOMGlobalObject **)v5;
    v7 = *((_QWORD *)v6 + 7);
    MEMORY[0x19AEA3294](v10, v7);
    v9 = v7;
    v8 = (objc_class *)WebCore::wrap<WebCore::FetchResponse>((uint64_t)v6, **(_QWORD **)(v4 + 32), a2);
    if (*(_QWORD *)(v7 + 16)
      || (WebCore::DeferredPromise::callFunction(v4, (uint64_t *)v6, 0, v8), *(_QWORD *)(v7 + 16)))
    {
      WebCore::DeferredPromise::handleUncaughtException(v4, &v9, v6);
    }
    return MEMORY[0x19AEA32A0](v10);
  }
  return result;
}

uint64_t WebCore::JSBackgroundFetchRegistration::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

_DWORD **WTF::Ref<WebCore::BarProp,WTF::RawPtrTraits<WebCore::BarProp>,WTF::DefaultRefDerefTraits<WebCore::BarProp>>::~Ref(_DWORD **a1, void *a2)
{
  _DWORD *v3;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  WTF *v9;
  _DWORD *v10;
  WTF *v11;

  v3 = *a1;
  *a1 = 0;
  if (v3)
  {
    if (v3[2] == 1)
    {
      v5 = (unsigned int *)*((_QWORD *)v3 + 2);
      *((_QWORD *)v3 + 2) = 0;
      if (v5)
      {
        do
        {
          v6 = __ldaxr(v5);
          v7 = v6 - 1;
        }
        while (__stlxr(v7, v5));
        if (!v7)
        {
          v10 = v3;
          v11 = (WTF *)v5;
          atomic_store(1u, v5);
          v8 = v5[7];
          if ((_DWORD)v8)
            WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*((WTF::StringImpl **)v11 + 2), (WTF::StringImpl *)(*((_QWORD *)v11 + 2) + 32 * v8));
          v9 = (WTF *)*((_QWORD *)v11 + 2);
          if (v9)
          {
            *((_QWORD *)v11 + 2) = 0;
            *((_DWORD *)v11 + 6) = 0;
            WTF::fastFree(v9, a2);
          }
          WTF::fastFree(v11, a2);
          v3 = v10;
        }
      }
      if (*(_QWORD *)v3)
      {
        *(_QWORD *)(*(_QWORD *)v3 + 8) = 3;
        *(_QWORD *)v3 = 0;
      }
      bmalloc::api::isoDeallocate((bmalloc::api *)v3, a2);
    }
    else
    {
      --v3[2];
    }
  }
  return a1;
}

uint64_t WebCore::JSBarProp::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSBarcodeDetector::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSBaseAudioContext::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSBasicCredential::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSBeforeUnloadEvent::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 3400);
  *(_QWORD *)(a1 + 3400) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::JSBiquadFilterNode::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSBiquadFilterNode::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSBiquadFilterNode *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSBiquadFilterNode *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSBiquadFilterNode::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector(uint64_t a1, void *a2)
{
  uint64_t v3;
  unsigned int *v4;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(unsigned int *)(a1 + 12);
  v4 = *(unsigned int **)a1;
  if ((_DWORD)v3)
  {
    v6 = 16 * v3;
    do
    {
      v7 = v4[2];
      if ((_DWORD)v7 != -1)
        ((void (*)(char *, unsigned int *))off_1E32307F0[v7])(&v8, v4);
      v4[2] = -1;
      v4 += 4;
      v6 -= 16;
    }
    while (v6);
    v4 = *(unsigned int **)a1;
  }
  if (v4)
  {
    *(_QWORD *)a1 = 0;
    *(_DWORD *)(a1 + 8) = 0;
    WTF::fastFree((WTF *)v4, a2);
  }
  return a1;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSS_1EJSG_SK_SP_SQ_EEEEEEDcSU_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 1)
      return (_DWORD *)JSC::ArrayBufferView::operator delete();
    else
      --*result;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSS_1EJSG_SK_SP_SQ_EEEEEEDcSU_DpT0_(uint64_t a1, _QWORD **a2)
{
  _QWORD *v2;
  BOOL v3;
  uint64_t v4;
  void *v5;
  WTF **v6;
  WTF *v7;
  WTF *v8;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    v3 = *(_DWORD *)v2 == 2;
    *(_DWORD *)v2 -= 2;
    if (v3)
    {
      v4 = v2[10];
      if (v4)
      {
        *(_QWORD *)(v4 + 8) = 3;
        v2[10] = 0;
      }
      if ((v2[9] & 1) == 0)
        JSC::InlineWatchpointSet::freeFat((JSC::InlineWatchpointSet *)(v2 + 9));
      JSC::ArrayBufferContents::~ArrayBufferContents((JSC::ArrayBufferContents *)(v2 + 2));
      v6 = (WTF **)v2[1];
      if ((v6 & 1) == 0 && v6)
      {
        v8 = (WTF *)v2[1];
        v7 = *v6;
        if (*v6)
        {
          *(_QWORD *)v8 = 0;
          *((_DWORD *)v8 + 2) = 0;
          WTF::fastFree(v7, v5);
        }
        WTF::fastFree(v8, v5);
      }
      WTF::fastFree((WTF *)v2, v5);
    }
  }
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSS_1EJSG_SK_SP_SQ_EEEEEEDcSU_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSS_1EJSG_SK_SP_SQ_EEEEEEDcSU_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>>::convert@<X0>(JSC::JSGlobalObject *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  if ((a2 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(a2 + 5) > 0x16u)
    return WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>>::convert(a1, a2, a3);
  result = WebCore::throwSequenceTypeError();
  *(_DWORD *)(a3 + 16) = 1;
  return result;
}

uint64_t WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>>::convert@<X0>(JSC::JSGlobalObject *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  _QWORD v5[2];

  v5[0] = 0;
  v5[1] = 0;
  WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>>::convert(a1, a2, v5, a3);
  return WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)v5, v3);
}

void WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>>::convert(JSC::JSGlobalObject *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  JSC::VM *v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v9 = a3;
  JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(a1, a2, (uint64_t *)&v9);
  if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
  {
    v7 = 1;
  }
  else
  {
    v7 = 0;
    *(_QWORD *)a4 = *a3;
    v8 = a3[1];
    *a3 = 0;
    a3[1] = 0;
    *(_QWORD *)(a4 + 8) = v8;
  }
  *(_DWORD *)(a4 + 16) = v7;
}

void JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  JSValue v7;
  unint64_t i;
  unint64_t v9;
  JSC::JSArrayBufferView *Index;
  uint64_t v11;
  JSC::JSArrayBufferView *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v6 = *((_QWORD *)a1 + 7);
  if (JSC::getIterationMode() == 2)
  {
    for (i = 0; ; ++i)
    {
      v9 = (*(_BYTE *)(a2 + 4) & 0xE) != 0 ? *(unsigned int *)(*(_QWORD *)(a2 + 8) - 8) : 0;
      if (i >= v9)
        break;
      Index = (JSC::JSArrayBufferView *)JSC::JSObject::getIndex((JSC::JSObject *)a2, a1, i);
      if (*(_DWORD *)(v6 + 80))
      {
        if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
          break;
      }
      v16 = v6;
      WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>::convert((uint64_t)&v16, a1, Index, *a3);
      if (*(_QWORD *)(v6 + 16))
      {
        v14 = JSC::JSArrayIterator::create();
        if ((int)i + 1 < 0)
          v15 = COERCE__INT64((double)(i + 1)) + 0x2000000000000;
        else
          v15 = (i + 1) | 0xFFFE000000000000;
        *(_QWORD *)(v14 + 16) = v15;
        goto LABEL_23;
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(a1, (JSC::JSGlobalObject *)a2, v7);
    if (!*(_DWORD *)(v6 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) == 0)
    {
      while (1)
      {
        v11 = JSC::iteratorStep();
        if (*(_QWORD *)(v6 + 16) || v11 == 6)
          break;
        v13 = (JSC::JSArrayBufferView *)JSC::iteratorValue();
        if (*(_DWORD *)(v6 + 80))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
            break;
        }
        v16 = v6;
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>::convert((uint64_t)&v16, a1, v13, *a3);
        if (*(_QWORD *)(v6 + 16))
        {
LABEL_23:
          JSC::iteratorClose();
          return;
        }
      }
    }
  }
}

void WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>::convert(uint64_t a1, JSC::JSGlobalObject *a2, JSC::JSArrayBufferView *a3, uint64_t a4)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  char v11;
  _BYTE v12[8];
  uint64_t v13;
  int v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>::convert(a2, a3, (uint64_t)v12);
  v5 = v14;
  if (!v14)
  {
    WebCore::Detail::ConversionResultStorage<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>>::releaseReturnValue((uint64_t)v12, (uint64_t)&v9);
    v6 = *(unsigned int *)(a4 + 12);
    if ((_DWORD)v6 == *(_DWORD *)(a4 + 8))
    {
      WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>>(a4, (unint64_t)&v9);
    }
    else
    {
      v7 = *(_QWORD *)a4 + 16 * v6;
      *(_BYTE *)v7 = 0;
      *(_DWORD *)(v7 + 8) = -1;
      v8 = v10;
      if (v10 != -1)
      {
        ((void (*)(char *, uint64_t, uint64_t *))off_1E3230830[v10])(&v11, v7, &v9);
        *(_DWORD *)(v7 + 8) = v8;
      }
      ++*(_DWORD *)(a4 + 12);
    }
    if (v10 != -1)
      ((void (*)(char *, uint64_t *))off_1E32307F0[v10])(&v11, &v9);
    v5 = v14;
  }
  if (v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_1E3230850[v5])(&v9, &v13);
}

void WebCore::Converter<WebCore::IDLUnion<WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLUSVString>>::convert(JSC::JSGlobalObject *a1@<X0>, JSC::JSArrayBufferView *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  int v9;
  int v10;
  _BYTE v11[8];
  int v12;
  unsigned __int8 v13;
  JSC::JSArrayBufferView *v14;
  uint64_t *v15;
  JSC::JSGlobalObject *v16;
  JSC::JSArrayBufferView **v17;

  v5 = *((_QWORD *)a1 + 7);
  v11[0] = 0;
  v13 = 0;
  v14 = a2;
  v15 = (uint64_t *)v11;
  v16 = a1;
  v17 = &v14;
  _ZZN7WebCore9ConverterINS_8IDLUnionIJNS_18IDLArrayBufferViewENS_14IDLArrayBufferENS_12IDLInterfaceINS_4BlobEEENS_12IDLUSVStringEEEEE7convertERN3JSC14JSGlobalObjectENSA_7JSValueEENKUlTyvE_clIS6_EEDav(&v15);
  if (v13)
  {
    *(_BYTE *)(a3 + 8) = 0;
    *(_DWORD *)(a3 + 16) = -1;
    v9 = v12;
    if (v12 != -1)
    {
      ((void (*)(uint64_t **))off_1E3230830[v12])(&v15);
      *(_DWORD *)(a3 + 16) = v9;
      v10 = v13;
      *(_DWORD *)(a3 + 24) = 0;
      if (v10)
      {
        if (v12 != -1)
          ((void (*)(uint64_t **, _BYTE *))off_1E32307F0[v12])(&v15, v11);
      }
      return;
    }
LABEL_14:
    *(_DWORD *)(a3 + 24) = 0;
    return;
  }
  v6 = (_DWORD *)JSC::JSArrayBuffer::toWrapped(v5, (uint64_t)v14);
  if (v6)
  {
    *v6 += 2;
    LODWORD(v16) = 1;
    v15 = 0;
    *(_QWORD *)(a3 + 8) = v6;
    *(_DWORD *)(a3 + 16) = 1;
    *(_DWORD *)(a3 + 24) = 0;
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSS_1EJSG_SK_SP_SQ_EEEEEEDcSU_DpT0_((uint64_t)v11, &v15);
    return;
  }
  JSC::JSArrayBufferView::toWrapped(v14, (JSC::ArrayBufferView **)&v15);
  if (v15)
  {
    *(_QWORD *)(a3 + 8) = v15;
    *(_DWORD *)(a3 + 16) = 0;
    goto LABEL_14;
  }
  WebCore::valueToUSVString(a1, (uint64_t)v14, (uint64_t)&v15);
  v7 = v16;
  if ((_DWORD)v16)
  {
    *(_DWORD *)(a3 + 24) = 1;
    if ((_DWORD)v7 == -1)
      return;
  }
  else
  {
    v8 = v15;
    v15 = 0;
    *(_QWORD *)(a3 + 8) = v8;
    *(_DWORD *)(a3 + 16) = 3;
    *(_DWORD *)(a3 + 24) = 0;
  }
  ((void (*)(_BYTE *, uint64_t **))off_1E322E100[v7])(v11, &v15);
}

uint64_t **_ZZN7WebCore9ConverterINS_8IDLUnionIJNS_18IDLArrayBufferViewENS_14IDLArrayBufferENS_12IDLInterfaceINS_4BlobEEENS_12IDLUSVStringEEEEE7convertERN3JSC14JSGlobalObjectENSA_7JSValueEENKUlTyvE_clIS6_EEDav(uint64_t **result)
{
  uint64_t v1;
  uint64_t **v2;
  int v3;
  char v4;

  v1 = (uint64_t)*result;
  if (!*((_BYTE *)*result + 16))
  {
    result = (uint64_t **)WebCore::JSToWrappedOverloader<WebCore::Blob,void>::toWrapped(*result[2]);
    if (result)
    {
      ++*((_DWORD *)result + 4);
      v2 = result;
      v3 = 2;
      result = (uint64_t **)std::optional<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,void>(v1, (uint64_t)&v2);
      if (v3 != -1)
        return (uint64_t **)((uint64_t (*)(char *, uint64_t ***))off_1E32307F0[v3])(&v4, &v2);
    }
  }
  return result;
}

uint64_t std::optional<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,void>(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;

  if (*(_BYTE *)(a1 + 16))
  {
    v3 = *(unsigned int *)(a1 + 8);
    v4 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v3 == -1)
    {
      if ((_DWORD)v4 == -1)
        return a1;
    }
    else if ((_DWORD)v4 == -1)
    {
      ((void (*)(char *, uint64_t, uint64_t))off_1E32307F0[v3])(&v8, a1, a2);
      *(_DWORD *)(a1 + 8) = -1;
      return a1;
    }
    v7 = a1;
    ((void (*)(uint64_t *, uint64_t, uint64_t))off_1E3230810[v4])(&v7, a1, a2);
    return a1;
  }
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 8) = -1;
  v5 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v5 != -1)
  {
    ((void (*)(char *, uint64_t, uint64_t))off_1E3230830[v5])(&v9, a1, a2);
    *(_DWORD *)(a1 + 8) = v5;
  }
  *(_BYTE *)(a1 + 16) = 1;
  return a1;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISR_LNS0_6_TraitE1EEEEEvOT_EUlRSX_OT0_E_JRNS0_6__baseILSV_1EJSG_SK_SP_SQ_EEEOS15_EEEDcSX_DpT0_(uint64_t result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5)
  {
    result = ((uint64_t (*)(char *, uint64_t))off_1E32307F0[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 0;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (*(_DWORD *)result == 1)
      return JSC::ArrayBufferView::operator delete();
    else
      --*(_DWORD *)result;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISR_LNS0_6_TraitE1EEEEEvOT_EUlRSX_OT0_E_JRNS0_6__baseILSV_1EJSG_SK_SP_SQ_EEEOS15_EEEDcSX_DpT0_(uint64_t *a1, _QWORD **a2, _QWORD *a3)
{
  return std::__variant_detail::__assignment<std::__variant_detail::__traits<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>>::__assign_alt[abi:sn180100]<1ul,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>>(*a1, a2, a3);
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISR_LNS0_6_TraitE1EEEEEvOT_EUlRSX_OT0_E_JRNS0_6__baseILSV_1EJSG_SK_SP_SQ_EEEOS15_EEEDcSX_DpT0_(_DWORD *result, _DWORD **a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 2)
  {
    result = (_DWORD *)((uint64_t (*)(char *, uint64_t))off_1E32307F0[v5])(&v8, v4);
LABEL_7:
    v7 = (_DWORD *)*a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 2;
    return result;
  }
  v6 = (_DWORD *)*a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISR_LNS0_6_TraitE1EEEEEvOT_EUlRSX_OT0_E_JRNS0_6__baseILSV_1EJSG_SK_SP_SQ_EEEOS15_EEEDcSX_DpT0_(WTF::StringImpl *result, WTF::StringImpl *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 3)
  {
    result = (WTF::StringImpl *)((uint64_t (*)(char *, uint64_t))off_1E32307F0[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 3;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = v6;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t std::__variant_detail::__assignment<std::__variant_detail::__traits<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>>::__assign_alt[abi:sn180100]<1ul,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>>(uint64_t result, _QWORD **a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  WTF *v11;
  WTF *v12;
  _QWORD *v13;
  char v14;

  v4 = result;
  v5 = *(unsigned int *)(result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_17;
  if ((_DWORD)v5 != 1)
  {
    result = ((uint64_t (*)(char *, uint64_t))off_1E32307F0[v5])(&v14, result);
LABEL_17:
    v13 = (_QWORD *)*a3;
    *a3 = 0;
    *(_QWORD *)v4 = v13;
    *(_DWORD *)(v4 + 8) = 1;
    return result;
  }
  v6 = (_QWORD *)*a3;
  *a3 = 0;
  v7 = *a2;
  *a2 = v6;
  if (v7)
  {
    v8 = *(_DWORD *)v7 == 2;
    *(_DWORD *)v7 -= 2;
    if (v8)
    {
      v9 = v7[10];
      if (v9)
      {
        *(_QWORD *)(v9 + 8) = 3;
        v7[10] = 0;
      }
      if ((v7[9] & 1) == 0)
        JSC::InlineWatchpointSet::freeFat((JSC::InlineWatchpointSet *)(v7 + 9));
      JSC::ArrayBufferContents::~ArrayBufferContents((JSC::ArrayBufferContents *)(v7 + 2));
      v11 = (WTF *)v7[1];
      if ((v11 & 1) == 0 && v11)
      {
        v12 = *(WTF **)v11;
        if (*(_QWORD *)v11)
        {
          *(_QWORD *)v11 = 0;
          *((_DWORD *)v11 + 2) = 0;
          WTF::fastFree(v12, v10);
        }
        WTF::fastFree(v11, v10);
      }
      return WTF::fastFree((WTF *)v7, v10);
    }
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISR_LNS0_6_TraitE1EEEEEvRSS_OT_EUlRSY_OT0_E_JRNS0_6__baseILSV_1EJSG_SK_SP_SQ_EEEOS16_EEEDcSY_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISR_LNS0_6_TraitE1EEEEEvRSS_OT_EUlRSY_OT0_E_JRNS0_6__baseILSV_1EJSG_SK_SP_SQ_EEEOS16_EEEDcSY_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISR_LNS0_6_TraitE1EEEEEvRSS_OT_EUlRSY_OT0_E_JRNS0_6__baseILSV_1EJSG_SK_SP_SQ_EEEOS16_EEEDcSY_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEENS9_IN7WebCore4BlobENSC_ISM_EENSE_ISM_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISR_LNS0_6_TraitE1EEEEEvRSS_OT_EUlRSY_OT0_E_JRNS0_6__baseILSV_1EJSG_SK_SP_SQ_EEEOS16_EEEDcSY_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>>(uint64_t a1, unint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v3 = WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a1, *(unsigned int *)(a1 + 12) + 1, a2);
  v4 = *(_QWORD *)a1 + 16 * *(unsigned int *)(a1 + 12);
  *(_BYTE *)v4 = 0;
  *(_DWORD *)(v4 + 8) = -1;
  v5 = *(unsigned int *)(v3 + 8);
  if ((_DWORD)v5 != -1)
  {
    ((void (*)(char *, uint64_t, unint64_t))off_1E3230830[v5])(&v7, v4, v3);
    *(_DWORD *)(v4 + 8) = v5;
  }
  ++*(_DWORD *)(a1 + 12);
  return 1;
}

unint64_t WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 <= a3 && v5 + 16 * (unint64_t)*(unsigned int *)(a1 + 12) > a3)
  {
    v9 = a3 - v5;
    v10 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v10 >= 0x10)
      v11 = v10 + 1;
    else
      v11 = 16;
    if (v11 > a2)
      a2 = v11;
    WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v9;
  }
  else
  {
    v6 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v6 >= 0x10)
      v7 = v6 + 1;
    else
      v7 = 16;
    if (v7 > a2)
      a2 = v7;
    WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  return v3;
}

uint64_t WTF::Vector<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2)
{
  int v2;
  WTF *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  if (*(unsigned int *)(a1 + 8) < a2)
  {
    v2 = a2;
    if (a2 >> 28)
    {
      __break(0xC471u);
      JUMPOUT(0x1948C69FCLL);
    }
    v4 = *(WTF **)a1;
    v5 = *(_QWORD *)a1 + 16 * *(unsigned int *)(a1 + 12);
    v6 = WTF::fastMalloc((WTF *)(16 * a2));
    *(_DWORD *)(a1 + 8) = v2;
    *(_QWORD *)a1 = v6;
    WTF::VectorMover<false,std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>>::move((uint64_t)v4, v5, v6);
    if (v4)
    {
      if (*(WTF **)a1 == v4)
      {
        *(_QWORD *)a1 = 0;
        *(_DWORD *)(a1 + 8) = 0;
      }
      WTF::fastFree(v4, v7);
    }
  }
  return 1;
}

uint64_t WTF::VectorMover<false,std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>>::move(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  if (result != a2)
  {
    v12 = v3;
    v13 = v4;
    v7 = result;
    do
    {
      *(_BYTE *)a3 = 0;
      *(_DWORD *)(a3 + 8) = -1;
      v8 = *(unsigned int *)(v7 + 8);
      if ((_DWORD)v8 != -1)
      {
        result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1E3230830[v8])(&v10, a3, v7);
        *(_DWORD *)(a3 + 8) = v8;
        v9 = *(unsigned int *)(v7 + 8);
        if ((_DWORD)v9 != -1)
          result = ((uint64_t (*)(char *, uint64_t))off_1E32307F0[v9])(&v11, v7);
      }
      *(_DWORD *)(v7 + 8) = -1;
      a3 += 16;
      v7 += 16;
    }
    while (v7 != a2);
  }
  return result;
}

uint64_t WebCore::Detail::ConversionResultStorage<std::variant<WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::String>>::releaseReturnValue@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (*(_DWORD *)(result + 24))
  {
    v4 = std::__throw_bad_variant_access[abi:sn180100]();
    return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENSA_INSB_11ArrayBufferENSD_ISI_EENSF_ISI_EEEENSA_IN7WebCore4BlobENSD_ISN_EENSF_ISN_EEEENS9_6StringEEEENSM_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSV_1EJSS_ST_EEEEEEDcSX_DpT0_(v4, v5);
  }
  else
  {
    *(_BYTE *)a2 = 0;
    *(_DWORD *)(a2 + 8) = -1;
    v3 = *(unsigned int *)(result + 16);
    if ((_DWORD)v3 != -1)
    {
      result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1E3230830[v3])(&v6, a2, result + 8);
      *(_DWORD *)(a2 + 8) = v3;
    }
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENSA_INSB_11ArrayBufferENSD_ISI_EENSF_ISI_EEEENSA_IN7WebCore4BlobENSD_ISN_EENSF_ISN_EEEENS9_6StringEEEENSM_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSV_1EJSS_ST_EEEEEEDcSX_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E32307F0[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSBlob>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t *JSC::weakRemove<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,WebCore::JSBlob *>(uint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;

  v2 = *result;
  if (*result)
  {
    v3 = *(_DWORD *)(v2 - 8);
    v4 = (~(a2 << 32) + a2) ^ ((unint64_t)(~(a2 << 32) + a2) >> 22);
    v5 = 9 * ((v4 + ~(v4 << 13)) ^ ((v4 + ~(v4 << 13)) >> 8));
    v6 = (v5 ^ (v5 >> 15)) + ~((v5 ^ (v5 >> 15)) << 27);
    v7 = v3 & ((v6 >> 31) ^ v6);
    v8 = *(_QWORD *)(v2 + 16 * v7);
    if (v8 != a2)
    {
      v9 = 1;
      while (v8)
      {
        v7 = ((_DWORD)v7 + v9) & v3;
        v8 = *(_QWORD *)(v2 + 16 * v7);
        ++v9;
        if (v8 == a2)
          goto LABEL_6;
      }
      v7 = *(unsigned int *)(v2 - 4);
    }
LABEL_6:
    if (v7 != *(_DWORD *)(v2 - 4))
    {
      v10 = (_QWORD *)(v2 + 16 * v7);
      *v10 = -1;
      v13 = v10[1];
      v12 = v10 + 1;
      v11 = v13;
      if (v13)
      {
        *(_QWORD *)(v11 + 8) = 3;
        *v12 = 0;
      }
      ++*(_DWORD *)(*result - 16);
      v14 = *result;
      if (*result)
        v15 = *(_DWORD *)(v14 - 12) - 1;
      else
        v15 = -1;
      *(_DWORD *)(v14 - 12) = v15;
      v16 = *result;
      if (*result)
      {
        v17 = 6 * *(_DWORD *)(v16 - 12);
        v18 = *(_DWORD *)(v16 - 4);
        if (v17 < v18 && v18 >= 9)
          return WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(result, v18 >> 1, 0);
      }
    }
  }
  return result;
}

uint64_t WebCore::JSBroadcastChannel::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSByteLengthQueuingStrategy::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMBuiltinConstructor<WebCore::JSByteLengthQueuingStrategy>::create(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  JSC::Heap *v7;
  unint64_t SlowCase;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  uint64_t v23;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v25;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  WTF::StringImpl *v32;
  unint64_t v33;
  int v34;
  int v35;
  uint64_t v36;

  v5 = (_QWORD *)(a1 + 41456);
  v6 = *(_QWORD **)(a1 + 41456);
  v7 = (JSC::Heap *)(a1 + 192);
  SlowCase = v6[2835];
  if (SlowCase >= v6[2836])
  {
    SlowCase = v6[2837];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_3;
    }
    v31 = *(_QWORD *)(SlowCase + 8) ^ v6[2838];
    v6[2836] = SlowCase + HIDWORD(v31);
    v6[2837] = SlowCase + (int)v31;
  }
  v6[2835] = SlowCase + 64;
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  JSC::InternalFunction::InternalFunction();
  *(_QWORD *)(SlowCase + 48) = 0;
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::ByteLengthQueuingStrategyBuiltinsWrapper::byteLengthQueuingStrategyInitializeByteLengthQueuingStrategyCodeExecutable((WebCore::ByteLengthQueuingStrategyBuiltinsWrapper *)(*v5 + 352));
  JSC::UnlinkedFunctionExecutable::link();
  *(_QWORD *)(SlowCase + 48) = JSC::JSFunction::create();
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(SlowCase + 7))
    JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)SlowCase);
  v9 = *(_QWORD *)(v5[62] + 1768);
  v32 = 0;
  v33 = SlowCase;
  v34 = -1;
  v35 = 0x1000000;
  v36 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)a1, v9, 0xFFFE000000000001, 6, (uint64_t)&v32);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create(a1, &v32);
  v12 = v32;
  v32 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  *(_QWORD *)(SlowCase + 32) = v11;
  if (v11 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(SlowCase + 7))
    JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)SlowCase);
  v13 = *(_QWORD *)(v5[62] + 1968);
  v32 = 0;
  v33 = SlowCase;
  v34 = -1;
  v35 = 0x1000000;
  v36 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)a1, v13, v11, 6, (uint64_t)&v32);
  v14 = *(_QWORD *)(v5[62] + 2160);
  v15 = *(_QWORD *)(a3 + 3296);
  if (!v15)
    goto LABEL_15;
  v16 = *(_DWORD *)(v15 - 8);
  v17 = ((unint64_t)&WebCore::JSByteLengthQueuingStrategy::s_info
       + ~((_QWORD)&WebCore::JSByteLengthQueuingStrategy::s_info << 32)) ^ (((unint64_t)&WebCore::JSByteLengthQueuingStrategy::s_info
                                                                           + ~((_QWORD)&WebCore::JSByteLengthQueuingStrategy::s_info << 32)) >> 22);
  v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
  v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
  v20 = v16 & ((v19 >> 31) ^ v19);
  v21 = *(char ***)(v15 + 16 * v20);
  if (v21 != &WebCore::JSByteLengthQueuingStrategy::s_info)
  {
    v22 = 1;
    while (v21)
    {
      v20 = ((_DWORD)v20 + v22) & v16;
      v21 = *(char ***)(v15 + 16 * v20);
      ++v22;
      if (v21 == &WebCore::JSByteLengthQueuingStrategy::s_info)
        goto LABEL_14;
    }
    goto LABEL_15;
  }
LABEL_14:
  v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
  if (!v23)
  {
LABEL_15:
    Structure = WebCore::JSByteLengthQueuingStrategyPrototype::createStructure((uint64_t *)a1, a3, *(JSC::JSCell **)(a3 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v27 = (JSC::JSCell *)WebCore::JSByteLengthQueuingStrategyPrototype::create((WebCore::JSByteLengthQueuingStrategyPrototype *)a1, Structure, v25, v26);
    v28 = WebCore::JSByteLengthQueuingStrategy::createStructure((uint64_t *)a1, a3, v27);
    v23 = WebCore::cacheDOMStructure((JSCell *)a3, v28, (uint64_t)&WebCore::JSByteLengthQueuingStrategy::s_info);
  }
  v29 = *(_QWORD *)(v23 + 48);
  v32 = 0;
  v33 = SlowCase;
  v34 = -1;
  v35 = 0x1000000;
  v36 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, (JSC::VM *)a1, v14, v29, 14, (uint64_t)&v32);
  return SlowCase;
}

uint64_t WebCore::JSDOMBuiltinConstructor<WebCore::JSByteLengthQueuingStrategy>::createStructure(uint64_t *a1, int a2, JSC::JSCell *this)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)this & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(this);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

unint64_t WebCore::JSDOMBuiltinConstructor<WebCore::JSByteLengthQueuingStrategy>::construct(JSC *this, uint64_t a2, JSC::JSObject *a3)
{
  uint64_t *v5;
  JSC::JSGlobalObject *v6;
  JSC::VM *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char **v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  WebCore::JSDOMGlobalObject *v19;
  JSC::Structure *v20;
  JSC::JSCell *v21;
  uint64_t v22;
  uint64_t SubclassStructure;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  WTF *v37;
  void *v38;
  int v39;
  unint64_t SlowCase;
  JSC::Structure *v42;
  uint64_t FunctionRealm;
  uint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char **v50;
  int v51;
  JSC::JSObject *v52;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v54;
  JSC::Structure *v55;
  JSC::JSCell *v56;
  uint64_t v57;
  unint64_t v58;
  WTF *v59;
  int v60;
  uint64_t v61;

  v5 = *(uint64_t **)(a2 + 24);
  v6 = *(JSC::JSGlobalObject **)(a2 + 40);
  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v6 != (JSC::JSGlobalObject *)v5)
  {
    FunctionRealm = JSC::getFunctionRealm(this, *(JSC::JSGlobalObject **)(a2 + 40), a3);
    if (*((_DWORD *)v7 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v7) & 1) != 0)
      return 0;
    v44 = *(_QWORD *)(FunctionRealm + 3296);
    if (v44)
    {
      v45 = *(_DWORD *)(v44 - 8);
      v46 = ((unint64_t)&WebCore::JSByteLengthQueuingStrategy::s_info
           + ~((_QWORD)&WebCore::JSByteLengthQueuingStrategy::s_info << 32)) ^ (((unint64_t)&WebCore::JSByteLengthQueuingStrategy::s_info
                                                                               + ~((_QWORD)&WebCore::JSByteLengthQueuingStrategy::s_info << 32)) >> 22);
      v47 = 9 * ((v46 + ~(v46 << 13)) ^ ((v46 + ~(v46 << 13)) >> 8));
      v48 = (v47 ^ (v47 >> 15)) + ~((v47 ^ (v47 >> 15)) << 27);
      v49 = v45 & ((v48 >> 31) ^ v48);
      v50 = *(char ***)(v44 + 16 * v49);
      if (v50 == &WebCore::JSByteLengthQueuingStrategy::s_info)
      {
LABEL_44:
        v52 = *(JSC::JSObject **)(v44 + 16 * v49 + 8);
        if (v52)
        {
LABEL_46:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v6, v52, v42);
          goto LABEL_9;
        }
      }
      else
      {
        v51 = 1;
        while (v50)
        {
          v49 = ((_DWORD)v49 + v51) & v45;
          v50 = *(char ***)(v44 + 16 * v49);
          ++v51;
          if (v50 == &WebCore::JSByteLengthQueuingStrategy::s_info)
            goto LABEL_44;
        }
      }
    }
    Structure = WebCore::JSByteLengthQueuingStrategyPrototype::createStructure((uint64_t *)v7, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v56 = (JSC::JSCell *)WebCore::JSByteLengthQueuingStrategyPrototype::create(v7, Structure, v54, v55);
    v57 = WebCore::JSByteLengthQueuingStrategy::createStructure((uint64_t *)v7, FunctionRealm, v56);
    v52 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v57, (uint64_t)&WebCore::JSByteLengthQueuingStrategy::s_info);
    goto LABEL_46;
  }
  v8 = v5[5];
  v9 = *(_QWORD *)(v8 + 3296);
  if (v9)
  {
    v10 = *(_DWORD *)(v9 - 8);
    v11 = ((unint64_t)&WebCore::JSByteLengthQueuingStrategy::s_info
         + ~((_QWORD)&WebCore::JSByteLengthQueuingStrategy::s_info << 32)) ^ (((unint64_t)&WebCore::JSByteLengthQueuingStrategy::s_info
                                                                             + ~((_QWORD)&WebCore::JSByteLengthQueuingStrategy::s_info << 32)) >> 22);
    v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
    v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
    v14 = v10 & ((v13 >> 31) ^ v13);
    v15 = *(char ***)(v9 + 16 * v14);
    if (v15 == &WebCore::JSByteLengthQueuingStrategy::s_info)
    {
LABEL_7:
      v17 = *(_QWORD *)(v9 + 16 * v14 + 8);
      if (v17)
        goto LABEL_11;
    }
    else
    {
      v16 = 1;
      while (v15)
      {
        v14 = ((_DWORD)v14 + v16) & v10;
        v15 = *(char ***)(v9 + 16 * v14);
        ++v16;
        if (v15 == &WebCore::JSByteLengthQueuingStrategy::s_info)
          goto LABEL_7;
      }
    }
  }
  v18 = WebCore::JSByteLengthQueuingStrategyPrototype::createStructure(*((uint64_t **)this + 7), v5[5], *(JSC::JSCell **)(v8 + 656));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  v21 = (JSC::JSCell *)WebCore::JSByteLengthQueuingStrategyPrototype::create(v7, v18, v19, v20);
  v22 = WebCore::JSByteLengthQueuingStrategy::createStructure((uint64_t *)v7, v8, v21);
  SubclassStructure = WebCore::cacheDOMStructure((JSCell *)v8, v22, (uint64_t)&WebCore::JSByteLengthQueuingStrategy::s_info);
LABEL_9:
  v17 = SubclassStructure;
  if (!SubclassStructure)
    return 0;
  v8 = v5[5];
LABEL_11:
  v24 = *(_QWORD *)(v8 + 56);
  v25 = *(_QWORD *)(v24 + 41456);
  v26 = *(_QWORD *)(v25 + 23536);
  v27 = *(_QWORD **)(v26 + 1728);
  if (v27)
    goto LABEL_31;
  v28 = *(_QWORD *)(v25 + 22648);
  if (__ldaxr((unsigned __int8 *)v28))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v28))
  {
    goto LABEL_16;
  }
  MEMORY[0x19AEA534C](v28);
LABEL_16:
  v30 = *(_QWORD *)(v28 + 2824);
  if (!*(_QWORD *)(v30 + 1728))
  {
    v31 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v59, "IsoSpace T");
    v61 = 0;
    MEMORY[0x19AEA3204](v31, &v59, v24 + 192, v24 + 1872, 24, 8, &v61);
    v33 = v61;
    v61 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v59;
    v59 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 1)
        WTF::fastFree(v34, v32);
      else
        --*(_DWORD *)v34;
    }
    v35 = *(_QWORD *)(v30 + 1728);
    *(_QWORD *)(v30 + 1728) = v31;
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
  }
  v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v36 = *(_QWORD *)(v26 + 1728);
  *(_QWORD *)(v26 + 1728) = v27;
  if (v36)
  {
    v37 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v37, v38);
  }
  v39 = __ldxr((unsigned __int8 *)v28);
  if (v39 != 1)
  {
    __clrex();
    goto LABEL_30;
  }
  if (__stlxr(0, (unsigned __int8 *)v28))
LABEL_30:
    WTF::Lock::unlockSlow((WTF::Lock *)v28);
LABEL_31:
  SlowCase = v27[3];
  if (SlowCase >= v27[4])
  {
    SlowCase = v27[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_33;
    }
    v58 = *(_QWORD *)(SlowCase + 8) ^ v27[6];
    v27[4] = SlowCase + HIDWORD(v58);
    v27[5] = SlowCase + (int)v58;
  }
  v27[3] = SlowCase + 32;
LABEL_33:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v17);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v59 = (WTF *)(a2 + 48);
  v60 = *(_DWORD *)(a2 + 32) - 1;
  JSC::call();
  return SlowCase;
}

uint64_t WebCore::JSCDATASection::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCDATASection::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCDATASection *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCDATASection *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCDATASection::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSAnimation::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(uint64_t result, JSC::JSGlobalObject *a2, unint64_t this)
{
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  JSC::VM *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v17;
  int v18;
  WTF::StringImpl *v19;
  unint64_t v20;

  v3 = result;
  if ((this & 0xFFFE000000000002) != 0)
  {
    v20 = this;
    v10 = (JSC::VM *)*((_QWORD *)a2 + 7);
  }
  else
  {
    v4 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
    v5 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
    v6 = (char **)(16 * v4);
    if ((_DWORD)v4)
      v7 = v6 == &WebCore::JSCSSKeywordValue::s_info;
    else
      v7 = 1;
    if (!v7)
    {
      do
      {
        v6 = (char **)v6[2];
        v5 = v6 != 0;
      }
      while (v6 != &WebCore::JSCSSKeywordValue::s_info && v6 != 0);
    }
    if (v5)
    {
      v9 = *(_QWORD *)(this + 24);
      if (v9)
      {
        ++*(_DWORD *)(v9 + 8);
        *(_QWORD *)(result + 8) = v9;
        *(_DWORD *)(result + 16) = 1;
        *(_DWORD *)(result + 24) = 0;
        return result;
      }
    }
    v20 = this;
    v10 = (JSC::VM *)*((_QWORD *)a2 + 7);
    if (*(_BYTE *)(this + 5) == 2)
    {
      v11 = *(WTF::StringImpl **)(this + 8);
      if ((v11 & 1) != 0)
      {
        v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a2);
        if (!v11)
          goto LABEL_18;
      }
      else if (!v11)
      {
LABEL_18:
        v19 = v11;
        goto LABEL_19;
      }
      *(_DWORD *)v11 += 2;
      goto LABEL_18;
    }
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v20, a2);
LABEL_19:
  if (*((_DWORD *)v10 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v10);
    v12 = v19;
    if (hasExceptionsAfterHandlingTraps)
    {
      v18 = 1;
      v19 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v15);
        else
          *(_DWORD *)v12 -= 2;
      }
      v13 = 1;
      v14 = 1;
      goto LABEL_22;
    }
  }
  else
  {
    v12 = v19;
  }
  v13 = 0;
  v14 = 0;
  v18 = 0;
  v17 = 0;
  *(_QWORD *)(v3 + 8) = v12;
  *(_DWORD *)(v3 + 16) = 0;
LABEL_22:
  *(_DWORD *)(v3 + 24) = v13;
  return ((uint64_t (*)(unint64_t *, uint64_t *))off_1E322E100[v14])(&v20, &v17);
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(JSC::JSGlobalObject *a1, unint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11[8];
  unsigned int v12;
  char v13;
  char v14[8];
  uint64_t v15;
  unsigned int v16;
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  result = (uint64_t)WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, a2, (uint64_t)v14);
  v5 = v17;
  if (v17)
    goto LABEL_14;
  v11[0] = 0;
  v12 = -1;
  v6 = v16;
  if (v16 != -1)
  {
    result = ((uint64_t (*)(char *, char *, uint64_t *))off_1E322FC70[v16])(&v13, v11, &v15);
    v12 = v6;
  }
  v7 = *(unsigned int *)(a3 + 12);
  if ((_DWORD)v7 == *(_DWORD *)(a3 + 8))
  {
    result = WTF::Vector<std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>,WTF::String,WTF::RefPtr<WebCore::CSSKeywordValue,WTF::RawPtrTraits<WebCore::CSSKeywordValue>,WTF::DefaultRefDerefTraits<WebCore::CSSKeywordValue>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v7 + 1, (unint64_t)v11);
    v8 = *(_QWORD *)a3 + 16 * *(unsigned int *)(a3 + 12);
    *(_BYTE *)v8 = 0;
    *(_DWORD *)(v8 + 8) = -1;
    v9 = *(unsigned int *)(result + 8);
    if ((_DWORD)v9 == -1)
      goto LABEL_10;
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1E322FC70[v9])(&v13, v8, result);
LABEL_9:
    *(_DWORD *)(v8 + 8) = v9;
LABEL_10:
    v10 = v12;
    ++*(_DWORD *)(a3 + 12);
    if ((_DWORD)v10 != -1)
      result = ((uint64_t (*)(char *, char *))off_1E322FC50[v10])(&v13, v11);
    goto LABEL_13;
  }
  v8 = *(_QWORD *)a3 + 16 * v7;
  *(_BYTE *)v8 = 0;
  *(_DWORD *)(v8 + 8) = -1;
  LODWORD(v9) = v12;
  if (v12 != -1)
  {
    result = ((uint64_t (*)(char *, uint64_t, char *))off_1E322FC70[v12])(&v13, v8, v11);
    goto LABEL_9;
  }
  ++*(_DWORD *)(a3 + 12);
LABEL_13:
  v5 = v17;
LABEL_14:
  if (v5 != -1)
    return ((uint64_t (*)(char *, uint64_t *))off_1E322FCA0[v5])(v11, &v15);
  return result;
}

unint64_t WTF::Vector<std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>,WTF::String,WTF::RefPtr<WebCore::CSSKeywordValue,WTF::RawPtrTraits<WebCore::CSSKeywordValue>,WTF::DefaultRefDerefTraits<WebCore::CSSKeywordValue>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 16 * (unint64_t)*(unsigned int *)(a1 + 12) <= a3)
  {
    v9 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v9 >= 0x10)
      v10 = v9 + 1;
    else
      v10 = 16;
    if (v10 > a2)
      a2 = v10;
    WTF::Vector<std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>,WTF::String,WTF::RefPtr<WebCore::CSSKeywordValue,WTF::RawPtrTraits<WebCore::CSSKeywordValue>,WTF::DefaultRefDerefTraits<WebCore::CSSKeywordValue>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    v7 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v7 >= 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    if (v8 > a2)
      a2 = v8;
    WTF::Vector<std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>,WTF::String,WTF::RefPtr<WebCore::CSSKeywordValue,WTF::RawPtrTraits<WebCore::CSSKeywordValue>,WTF::DefaultRefDerefTraits<WebCore::CSSKeywordValue>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

uint64_t WTF::Vector<std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>,WTF::String,WTF::RefPtr<WebCore::CSSKeywordValue,WTF::RawPtrTraits<WebCore::CSSKeywordValue>,WTF::DefaultRefDerefTraits<WebCore::CSSKeywordValue>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(uint64_t result, unint64_t a2)
{
  int v2;
  uint64_t v3;
  WTF *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  WTF *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  if (*(unsigned int *)(result + 8) < a2)
  {
    v2 = a2;
    if (a2 >> 28)
    {
      __break(0xC471u);
    }
    else
    {
      v3 = result;
      v4 = *(WTF **)result;
      v5 = *(unsigned int *)(result + 12);
      result = WTF::fastMalloc((WTF *)(16 * a2));
      *(_DWORD *)(v3 + 8) = v2;
      *(_QWORD *)v3 = result;
      if ((_DWORD)v5)
      {
        v7 = result;
        v8 = 16 * v5;
        v9 = v4;
        do
        {
          *(_BYTE *)v7 = 0;
          *(_DWORD *)(v7 + 8) = -1;
          v10 = *((unsigned int *)v9 + 2);
          if ((_DWORD)v10 != -1)
          {
            result = ((uint64_t (*)(char *, uint64_t, WTF *))off_1E322FC70[v10])(&v12, v7, v9);
            *(_DWORD *)(v7 + 8) = v10;
            v11 = *((unsigned int *)v9 + 2);
            if ((_DWORD)v11 != -1)
              result = ((uint64_t (*)(char *, WTF *))off_1E322FC50[v11])(&v13, v9);
          }
          *((_DWORD *)v9 + 2) = -1;
          v7 += 16;
          v9 = (WTF *)((char *)v9 + 16);
          v8 -= 16;
        }
        while (v8);
      }
      if (v4)
      {
        if (*(WTF **)v3 == v4)
        {
          *(_QWORD *)v3 = 0;
          *(_DWORD *)(v3 + 8) = 0;
        }
        return WTF::fastFree(v4, v6);
      }
    }
  }
  return result;
}

uint64_t WebCore::JSCSSColor::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

double _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENSS_IlLl1EEEEEET_SV_@<D0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  double v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t *v12;
  __int128 v13;
  __int128 v14;
  uint64_t *v15;
  _QWORD *v16;
  double *v17;

  v4 = **a1;
  if (!v4)
  {
    v5 = a1[4];
    if (*((_DWORD *)v5 + 2))
      goto LABEL_21;
    v6 = *(double *)v5;
    if ((*v5 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v7 = (int)v6, v6 == (double)(int)v7)
      && ((_DWORD)v7 || (*(_QWORD *)&v6 & 0x8000000000000000) == 0))
    {
      v8 = v7 | 0xFFFE000000000000;
    }
    else
    {
      v8 = *(_QWORD *)&v6 + 0x2000000000000;
    }
    v9 = a1[1];
    if (!*((_BYTE *)v9 + 8))
      *((_BYTE *)v9 + 8) = 1;
    *v9 = v8;
    v4 = **a1;
  }
  if (v4 == 1)
  {
    v10 = a1[4];
    if (*((_DWORD *)v10 + 2) == 1)
    {
      if (*v10)
        v11 = WebCore::wrap<WebCore::CSSStyleValue>((uint64_t)a1[2], (uint64_t)a1[3], *v10);
      else
        v11 = 2;
      v12 = a1[1];
      if (!*((_BYTE *)v12 + 8))
        *((_BYTE *)v12 + 8) = 1;
      *v12 = v11;
      goto LABEL_20;
    }
LABEL_21:
    v15 = (uint64_t *)std::__throw_bad_variant_access[abi:sn180100]();
    *(double *)&v13 = _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISH_LNS0_6_TraitE1EEEEEvOT_EUlRSN_OT0_E_JRNS0_6__baseILSL_1EJdSG_EEEOSV_EEEDcSN_DpT0_(v15, v16, v17);
    return *(double *)&v13;
  }
LABEL_20:
  v13 = *(_OWORD *)a1;
  v14 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 32) = a1[4];
  return *(double *)&v13;
}

double _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISH_LNS0_6_TraitE1EEEEEvOT_EUlRSN_OT0_E_JRNS0_6__baseILSL_1EJdSG_EEEOSV_EEEDcSN_DpT0_(uint64_t *a1, _QWORD *a2, double *a3)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  char v7;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 8);
  if ((_DWORD)v5 != -1)
  {
    if (!(_DWORD)v5)
    {
      result = *a3;
      *a2 = *(_QWORD *)a3;
      return result;
    }
    ((void (*)(char *, uint64_t))off_1E322F628[v5])(&v7, v4);
  }
  result = *a3;
  *(double *)v4 = *a3;
  *(_DWORD *)(v4 + 8) = 0;
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISH_LNS0_6_TraitE1EEEEEvOT_EUlRSN_OT0_E_JRNS0_6__baseILSL_1EJdSG_EEEOSV_EEEDcSN_DpT0_(_DWORD *result, _DWORD **a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 1)
  {
    result = (_DWORD *)((uint64_t (*)(char *, uint64_t))off_1E322F628[v5])(&v8, v4);
LABEL_7:
    v7 = (_DWORD *)*a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 1;
    return result;
  }
  v6 = (_DWORD *)*a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSCSSColorValue::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSConditionRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSContainerRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSCounterStyleRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSFontFaceRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSFontFaceRule::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSFontFaceRule *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSFontFaceRule *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSFontFaceRule::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSFontFeatureValuesRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSFontPaletteValuesRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSGroupingRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

_DWORD *WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert@<X0>(JSC::JSGlobalObject *a1@<X0>, unint64_t this@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v11;
  int v12;
  uint64_t v14;
  _DWORD *result;
  int v16;
  int v17;
  JSC::VM *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  int v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v25;
  int v26;
  unsigned __int8 v27;
  WTF::StringImpl *v28;
  unint64_t v29;

  if ((this & 0xFFFE000000000002) != 0)
  {
    if (this >> 49)
      goto LABEL_29;
    v29 = this;
    v18 = (JSC::VM *)*((_QWORD *)a1 + 7);
    goto LABEL_47;
  }
  v4 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSNumericValue::s_info;
  else
    v7 = 1;
  v8 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  if (!v7)
  {
    v9 = 16 * v4;
    do
    {
      v9 = *(_QWORD *)(v9 + 16);
      v8 = v9 != 0;
    }
    while ((char **)v9 != &WebCore::JSCSSNumericValue::s_info && v9 != 0);
  }
  if (v8)
  {
    v11 = *(_QWORD *)(this + 24);
    if (v11)
    {
      v12 = 1;
      goto LABEL_25;
    }
  }
  if ((_DWORD)v4 && v6 != &WebCore::JSCSSKeywordValue::s_info)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSKeywordValue::s_info && v6 != 0);
  }
  if (v5)
  {
    v11 = *(_QWORD *)(this + 24);
    if (v11)
    {
      v12 = 3;
LABEL_25:
      ++*(_DWORD *)(v11 + 8);
      v25 = v11;
      v26 = v12;
      v27 = 1;
      *(_BYTE *)(a3 + 8) = 0;
      v14 = a3 + 8;
      *(_DWORD *)(v14 + 8) = -1;
      result = (_DWORD *)((uint64_t (*)(unint64_t *, uint64_t, uint64_t *))off_1E322FC70[v12])(&v29, v14, &v25);
      *(_DWORD *)(v14 + 8) = v12;
      v16 = v27;
      *(_DWORD *)(v14 + 16) = 0;
      if (v16)
      {
        if (v26 != -1)
          return (_DWORD *)((uint64_t (*)(unint64_t *, uint64_t *))off_1E322FC50[v26])(&v29, &v25);
      }
      return result;
    }
  }
  if (!(this >> 49))
  {
    v29 = this;
    v18 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (*(_BYTE *)(this + 5) == 2)
    {
      v19 = *(WTF::StringImpl **)(this + 8);
      if ((v19 & 1) != 0)
      {
        v19 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
        if (!v19)
          goto LABEL_35;
      }
      else if (!v19)
      {
LABEL_35:
        v28 = v19;
        goto LABEL_36;
      }
      *(_DWORD *)v19 += 2;
      goto LABEL_35;
    }
LABEL_47:
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v29, a1);
LABEL_36:
    if (*((_DWORD *)v18 + 20))
    {
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v18);
      v20 = v28;
      if (hasExceptionsAfterHandlingTraps)
      {
        v26 = 1;
        v28 = 0;
        if (v20)
        {
          if (*(_DWORD *)v20 == 2)
            WTF::StringImpl::destroy(v20, v23);
          else
            *(_DWORD *)v20 -= 2;
        }
        v21 = 1;
        v22 = 1;
        goto LABEL_39;
      }
    }
    else
    {
      v20 = v28;
    }
    v21 = 0;
    v22 = 0;
    v26 = 0;
    v25 = 0;
    *(_QWORD *)(a3 + 8) = v20;
    *(_DWORD *)(a3 + 16) = 2;
LABEL_39:
    *(_DWORD *)(a3 + 24) = v21;
    return (_DWORD *)((uint64_t (*)(unint64_t *, uint64_t *))off_1E322E100[v22])(&v29, &v25);
  }
LABEL_29:
  result = WebCore::Converter<WebCore::IDLDouble>::convert(a1, this, (uint64_t)&v25);
  v17 = v26;
  if (v26)
  {
    v17 = 1;
  }
  else
  {
    *(_QWORD *)(a3 + 8) = v25;
    *(_DWORD *)(a3 + 16) = 0;
  }
  *(_DWORD *)(a3 + 24) = v17;
  return result;
}

uint64_t WebCore::JSCSSHSL::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t *v23;
  uint64_t v24;
  JSC::JSCell *v25;

  v2 = result;
  v4 = **(_QWORD **)result;
  if (!v4)
  {
    v5 = *(_QWORD *)(result + 32);
    if (*(_DWORD *)(v5 + 8))
      goto LABEL_46;
    v6 = *(double *)v5;
    if ((*(_QWORD *)v5 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v7 = (int)v6, v6 == (double)(int)v7)
      && ((_DWORD)v7 || (*(_QWORD *)&v6 & 0x8000000000000000) == 0))
    {
      v8 = v7 | 0xFFFE000000000000;
    }
    else
    {
      v8 = *(_QWORD *)&v6 + 0x2000000000000;
    }
    v9 = *(_QWORD *)(result + 8);
    if (!*(_BYTE *)(v9 + 8))
      *(_BYTE *)(v9 + 8) = 1;
    *(_QWORD *)v9 = v8;
    v4 = **(_QWORD **)result;
  }
  if (v4 == 1)
  {
    v10 = *(_QWORD *)(result + 32);
    if (*(_DWORD *)(v10 + 8) != 1)
      goto LABEL_46;
    if (*(_QWORD *)v10)
      result = WebCore::wrap<WebCore::CSSStyleValue>(*(_QWORD *)(result + 16), *(_QWORD *)(result + 24), *(_QWORD *)v10);
    else
      result = 2;
    v11 = *(_QWORD *)(v2 + 8);
    if (!*(_BYTE *)(v11 + 8))
      *(_BYTE *)(v11 + 8) = 1;
    *(_QWORD *)v11 = result;
    v4 = **(_QWORD **)v2;
  }
  if (v4 == 2)
  {
    v12 = *(uint64_t **)(v2 + 32);
    if (*((_DWORD *)v12 + 2) != 2)
      goto LABEL_46;
    result = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 56);
    v13 = *v12;
    if (*v12 && (v14 = *(_DWORD *)(v13 + 4)) != 0)
    {
      if (v14 != 1)
      {
LABEL_25:
        v15 = *(_QWORD *)(result + 64760);
        if (!v15 || v13 != *(_QWORD *)(v15 + 8))
        {
          result = JSC::jsStringWithCacheSlowCase();
          v15 = result;
        }
        goto LABEL_28;
      }
      v20 = *(unsigned __int8 **)(v13 + 8);
      if ((*(_BYTE *)(v13 + 16) & 4) != 0)
      {
        v21 = *v20;
      }
      else
      {
        v22 = *(unsigned __int16 *)v20;
        if (v22 > 0xFF)
          goto LABEL_25;
        v21 = v22;
      }
      v15 = *(_QWORD *)(result + 8 * v21 + 42216);
    }
    else
    {
      v15 = *(_QWORD *)(result + 41968);
    }
LABEL_28:
    v16 = *(_QWORD *)(v2 + 8);
    if (!*(_BYTE *)(v16 + 8))
      *(_BYTE *)(v16 + 8) = 1;
    *(_QWORD *)v16 = v15;
    v4 = **(_QWORD **)v2;
  }
  if (v4 != 3)
  {
LABEL_39:
    v19 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v2;
    *(_OWORD *)(a2 + 16) = v19;
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(v2 + 32);
    return result;
  }
  v17 = *(_QWORD *)(v2 + 32);
  if (*(_DWORD *)(v17 + 8) == 3)
  {
    if (*(_QWORD *)v17)
      result = WebCore::wrap<WebCore::CSSKeywordValue>(*(_QWORD *)(v2 + 16), *(JSC::VM **)(v2 + 24), *(_QWORD *)v17);
    else
      result = 2;
    v18 = *(_QWORD *)(v2 + 8);
    if (!*(_BYTE *)(v18 + 8))
      *(_BYTE *)(v18 + 8) = 1;
    *(_QWORD *)v18 = result;
    goto LABEL_39;
  }
LABEL_46:
  v23 = (uint64_t *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSCSSHWB::createStructure(v23, v24, v25);
}

uint64_t WebCore::JSCSSHWB::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSImportRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSKeyframeRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSKeyframesRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSKeywordValue::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSKeywordValue::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSKeywordValue *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSKeywordValue *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSKeywordValue::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

_QWORD *WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *Allocator;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  _QWORD *v18;
  uint64_t v19;

  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner = (uint64_t)&off_1E324B170;
  }
  v3 = (_QWORD *)(a2 + 16);
  if (!a2)
    v3 = 0;
  if (*(_DWORD *)(a1 + 48))
  {
    v6 = (uint64_t *)(a1 + 32);
    v19 = a2;
    if (a3)
    {
      v13 = (uint64_t *)(a1 + 32);
      if ((a3 & 8) != 0)
        v10 = (a3 - 112) | 1;
      else
        v10 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v10 & 1) != 0)
        v11 = v10 + 47;
      else
        v11 = *(_QWORD *)v10 + 32;
      Allocator = *(_QWORD **)(v11 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v11 + 16) = *Allocator;
      *Allocator = a3;
      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      Allocator[2] = a1;
      v6 = v13;
    }
    else
    {
      Allocator = 0;
    }
    v18 = Allocator;
    result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v6, &v19, (uint64_t *)&v18);
    if (v18)
      v18[1] = 3;
  }
  else
  {
    if (a3)
    {
      v12 = v3;
      if ((a3 & 8) != 0)
        v8 = (a3 - 112) | 1;
      else
        v8 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v8 & 1) != 0)
        v9 = v8 + 47;
      else
        v9 = *(_QWORD *)v8 + 32;
      result = *(_QWORD **)(v9 + 16);
      if (!result)
        result = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v9 + 16) = *result;
      *result = a3;
      result[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      result[2] = a1;
      v3 = v12;
    }
    else
    {
      result = 0;
    }
    v5 = *v3;
    *v3 = result;
    if (v5)
      *(_QWORD *)(v5 + 8) = 3;
  }
  return result;
}

uint64_t WebCore::JSCSSLCH::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSLab::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSLayerBlockRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSLayerStatementRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLUSVString>>::convert<WTF::String,0ul>(JSC *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v6;
  unsigned int v7;
  uint64_t *v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  int v12;
  objc_class *v13;
  int v14;
  unsigned __int8 *v15;
  unsigned int v16;
  unsigned int v17;
  JSValue v18;
  void *v19;
  JSC::VM *v20;
  JSC::JSObject *v21;
  JSC::JSGlobalObject *v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v26;
  WTF *v27;
  int v28;
  BOOL v29;
  uint64_t v30;
  WTF *v31;
  _OWORD v32[4];
  uint64_t v33;
  JSC::VM *v34;

  v6 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v34 = v6;
  v29 = 0;
  v30 = 0x800000000;
  v31 = (WTF *)((char *)v32 + 8);
  memset(v32, 0, sizeof(v32));
  v33 = 0;
  v7 = *(_DWORD *)(a3 + 12);
  if (v7 >= 9)
  {
    v29 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v30) == 1;
    v7 = *(_DWORD *)(a3 + 12);
    if (v7)
      goto LABEL_3;
  }
  else if (v7)
  {
LABEL_3:
    v8 = *(uint64_t **)a3;
    for (i = 8 * v7; i; i -= 8)
    {
      v10 = *((_QWORD *)a1 + 7);
      v11 = *v8;
      if (*v8 && (v12 = *(_DWORD *)(v11 + 4)) != 0)
      {
        if (v12 != 1)
          goto LABEL_7;
        v15 = *(unsigned __int8 **)(v11 + 8);
        if ((*(_BYTE *)(v11 + 16) & 4) != 0)
        {
          v16 = *v15;
        }
        else
        {
          v17 = *(unsigned __int16 *)v15;
          if (v17 > 0xFF)
          {
LABEL_7:
            v13 = *(objc_class **)(v10 + 64760);
            if (!v13 || v11 != *((_QWORD *)v13 + 1))
              v13 = (objc_class *)JSC::jsStringWithCacheSlowCase();
            goto LABEL_10;
          }
          v16 = v17;
        }
        v13 = *(objc_class **)(v10 + 8 * v16 + 42216);
      }
      else
      {
        v13 = *(objc_class **)(v10 + 41968);
      }
LABEL_10:
      if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
        goto LABEL_43;
      v14 = v30;
      if ((_DWORD)v30 == HIDWORD(v30) || v31 != (WTF *)((char *)v32 + 8) && v31)
      {
        v18.super.isa = v13;
        if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v30, v18) == 1)
          v29 = 1;
      }
      else
      {
        *((_QWORD *)v31 + v30) = v13;
        LODWORD(v30) = v14 + 1;
      }
      ++v8;
    }
  }
  if (v29)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v27 = v31;
    v28 = v30;
    v20 = *(JSC::VM **)(a2 + 56);
    if (*((_DWORD *)v20 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0)
      v22 = 0;
    else
      v22 = (JSC::JSGlobalObject *)JSC::constructArray();
    if (!*((_DWORD *)v6 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) == 0)
    {
      v23 = JSC::objectConstructorFreeze(a1, v22, v21);
      goto LABEL_33;
    }
  }
LABEL_43:
  v23 = 0;
LABEL_33:
  v24 = *(uint64_t **)&v32[0];
  if (*(_QWORD *)&v32[0])
  {
    v27 = (WTF *)&v30;
    v26 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v32[0], (uint64_t *)&v27);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v24, v26);
  }
  if (v31 != (WTF *)((char *)v32 + 8) && v31)
    WTF::fastFree(v31, v19);
  return v23;
}

uint64_t WebCore::JSCSSMathClamp::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathClamp::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSMathClamp *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSMathClamp *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSMathClamp::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathInvert::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathInvert::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSMathInvert *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSMathInvert *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSMathInvert::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

_DWORD *WTF::TrailingArray<WTF::EmbeddedFixedVector<std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>>>,std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>>>::TrailingArray<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>::Item> WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t v5;
  _DWORD *i;
  JSC::VM *v7;
  int v8;
  int v9;
  int v10;
  char v12[8];
  int v13;
  unsigned __int8 v14;
  char v15[8];
  int v16;
  char v17;
  char v18;

  *a1 = a2;
  if (a2)
  {
    v5 = 0;
    for (i = a1 + 2; ; i += 4)
    {
      WebCore::VariadicConverter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>::convert(*(JSC::JSGlobalObject **)a3, *(_QWORD *)(*(_QWORD *)(a3 + 8)+ ((uint64_t)(((unint64_t)(v5 + **(_DWORD **)(a3 + 16)) << 32) + 0x600000000) >> 29)), (uint64_t)v15);
      v7 = **(JSC::VM ***)(a3 + 24);
      if (*((_DWORD *)v7 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v7))
      {
        v9 = 0;
        v12[0] = 0;
      }
      else
      {
        v12[0] = 0;
        v14 = 0;
        if (!v17)
          break;
        v13 = -1;
        v8 = v16;
        if (v16 != -1)
        {
          ((void (*)(char *, char *, char *))off_1E322F638[v16])(&v18, v12, v15);
          v13 = v8;
        }
        v9 = 1;
      }
      v14 = v9;
      if (v17 && v16 != -1)
      {
        ((void (*)(char *, char *))off_1E322F628[v16])(&v18, v15);
        v9 = v14;
      }
      if (!v9)
        break;
      *(_BYTE *)i = 0;
      i[2] = -1;
      v10 = v13;
      if (v13 != -1)
      {
        ((void (*)(char *, _DWORD *, char *))off_1E322F638[v13])(v15, i, v12);
        i[2] = v10;
        if (v14)
        {
          if (v13 != -1)
            ((void (*)(char *, char *))off_1E322F628[v13])(v15, v12);
        }
      }
      if (++v5 >= (unint64_t)*a1)
        return a1;
    }
    *a1 = v5;
  }
  return a1;
}

uint64_t WebCore::VariadicConverter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>::convert@<X0>(JSC::JSGlobalObject *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t (*v12)();
  uint64_t result;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    goto LABEL_14;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSNumericValue::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSNumericValue::s_info && v6 != 0);
  }
  if (v5 && (v9 = *(_QWORD *)(a2 + 24)) != 0)
  {
    ++*(_DWORD *)(v9 + 8);
    v19 = v9;
    v10 = 1;
    v20 = 1;
    v21 = 0;
  }
  else
  {
LABEL_14:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, a2, (uint64_t)&v16);
    v11 = v17;
    if (v17)
    {
      v11 = 1;
    }
    else
    {
      v19 = v16;
      v20 = 0;
    }
    v21 = v11;
    if (v11)
    {
      *(_BYTE *)a3 = 0;
      *(_BYTE *)(a3 + 16) = 0;
      v15 = 1;
      return ((uint64_t (*)(uint64_t *, uint64_t *))off_1E322F648[v15])(&v16, &v19);
    }
    v10 = 0;
  }
  LOBYTE(v16) = 0;
  v17 = -1;
  v12 = off_1E322F638[v10];
  ((void (*)(char *, uint64_t *, uint64_t *))v12)(&v18, &v16, &v19);
  v17 = v10;
  *(_BYTE *)a3 = 0;
  *(_DWORD *)(a3 + 8) = -1;
  result = ((uint64_t (*)(char *, uint64_t, uint64_t *))v12)(&v18, a3, &v16);
  *(_DWORD *)(a3 + 8) = v10;
  v14 = v17;
  *(_BYTE *)(a3 + 16) = 1;
  if ((_DWORD)v14 != -1)
    result = ((uint64_t (*)(char *, uint64_t *))off_1E322F628[v14])(&v18, &v16);
  v15 = v21;
  if (v21 != -1)
    return ((uint64_t (*)(uint64_t *, uint64_t *))off_1E322F648[v15])(&v16, &v19);
  return result;
}

uint64_t WebCore::JSCSSMathMax::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathMax::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSMathMax *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSMathMax *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSMathMax::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathMin::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathMin::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSMathMin *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSMathMin *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSMathMin::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathNegate::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathNegate::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSMathNegate *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSMathNegate *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSMathNegate::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathProduct::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathProduct::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSMathProduct *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSMathProduct *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSMathProduct::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathSum::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathSum::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSMathSum *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSMathSum *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSMathSum::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMathValue::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMatrixComponent::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMatrixComponent::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSMatrixComponent *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSMatrixComponent *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSMatrixComponent::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSMediaRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSNamespaceRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::NotificationPayload::fromDictionary@<X0>(WebCore::NotificationPayload *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  unsigned __int8 v10;
  unint64_t v11;
  uint64_t v12;
  WebCore::NotificationOptionsPayload *v13;
  char isKindOfClass;
  char v15;
  WTF::StringImpl *v16;
  void *v17;
  int v18;
  __int128 v19;
  __int128 v20;
  WTF::StringImpl *v21;
  __int16 v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  WTF::StringImpl *v31;
  __int128 v32;
  char v33;
  __int128 v34;
  __int128 v35;
  WTF::StringImpl *v36;
  __int16 v37;
  char v38;
  char v39;

  result = -[WebCore::NotificationPayload objectForKeyedSubscript:](this, "objectForKeyedSubscript:", CFSTR("WebNotificationDefaultActionKey"));
  if (!result)
    goto LABEL_19;
  v6 = result;
  result = -[WebCore::NotificationPayload objectForKeyedSubscript:](this, "objectForKeyedSubscript:", CFSTR("WebNotificationTitleKey"));
  if (!result)
    goto LABEL_19;
  v7 = result;
  result = -[WebCore::NotificationPayload objectForKeyedSubscript:](this, "objectForKeyedSubscript:", CFSTR("WebNotificationAppBadgeKey"));
  if (!result)
    goto LABEL_19;
  v8 = (void *)result;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
  }
  else
  {
    objc_opt_class();
    result = objc_opt_isKindOfClass();
    if ((result & 1) == 0)
      goto LABEL_19;
    v12 = objc_msgSend(v8, "unsignedLongLongValue");
    v10 = v12;
    v11 = v12 & 0xFFFFFFFFFFFFFF00;
    v9 = 1;
  }
  result = -[WebCore::NotificationPayload objectForKeyedSubscript:](this, "objectForKeyedSubscript:", CFSTR("WebNotificationOptionsKey"));
  if (!result)
    goto LABEL_19;
  v13 = (WebCore::NotificationOptionsPayload *)result;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  if ((isKindOfClass & 1) != 0)
  {
    v15 = 0;
    goto LABEL_13;
  }
  result = WebCore::NotificationOptionsPayload::fromDictionary(v13, (uint64_t)&v28);
  if (!BYTE8(v32))
  {
LABEL_19:
    *(_BYTE *)a2 = 0;
    *(_BYTE *)(a2 + 136) = 0;
    return result;
  }
  v15 = v28;
  v26 = (WTF::StringImpl *)*((_QWORD *)&v29 + 1);
  v27 = (WTF::StringImpl *)v29;
  v24 = (WTF::StringImpl *)*((_QWORD *)&v30 + 1);
  v25 = (WTF::StringImpl *)v30;
  v23 = v31;
  v22 = v32;
LABEL_13:
  result = -[WebCore::NotificationPayload objectForKeyedSubscript:](this, "objectForKeyedSubscript:", CFSTR("WebNotificationMutableKey"));
  v17 = (void *)result;
  if (result)
  {
    MEMORY[0x19AEA52E0](&v28, v6);
    MEMORY[0x19AEA5508](&v31, v7);
    *(_QWORD *)&v32 = v11 | v10;
    BYTE8(v32) = v9;
    v33 = 0;
    v38 = 0;
    if ((isKindOfClass & 1) == 0)
    {
      v33 = v15;
      *(_QWORD *)&v34 = v27;
      *((_QWORD *)&v34 + 1) = v26;
      *(_QWORD *)&v35 = v25;
      *((_QWORD *)&v35 + 1) = v24;
      v36 = v23;
      v37 = v22;
      v38 = 1;
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 0;
    }
    result = objc_msgSend(v17, "BOOLValue");
    v39 = result;
    *(_QWORD *)a2 = v28;
    v18 = v29;
    *(_OWORD *)(a2 + 8) = v29;
    *(_OWORD *)(a2 + 24) = v30;
    LODWORD(v29) = v18 & 0xFFFFFFFE;
    *(_QWORD *)(a2 + 40) = v31;
    *(_OWORD *)(a2 + 48) = v32;
    *(_BYTE *)(a2 + 64) = 0;
    *(_BYTE *)(a2 + 120) = 0;
    if (v38)
    {
      *(_BYTE *)(a2 + 64) = v33;
      v19 = v34;
      v34 = 0u;
      *(_OWORD *)(a2 + 72) = v19;
      v20 = v35;
      v35 = 0u;
      *(_OWORD *)(a2 + 88) = v20;
      v21 = v36;
      v36 = 0;
      *(_QWORD *)(a2 + 104) = v21;
      *(_WORD *)(a2 + 112) = v37;
      *(_BYTE *)(a2 + 120) = 1;
    }
    *(_BYTE *)(a2 + 128) = result;
    *(_BYTE *)(a2 + 136) = 1;
  }
  else
  {
    *(_BYTE *)a2 = 0;
    *(_BYTE *)(a2 + 136) = 0;
  }
  if ((isKindOfClass & 1) == 0)
  {
    result = (uint64_t)v23;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
      {
        result = WTF::StringImpl::destroy(v23, v16);
        if (!v24)
          goto LABEL_29;
        goto LABEL_27;
      }
      *(_DWORD *)v23 -= 2;
    }
    if (!v24)
      goto LABEL_29;
LABEL_27:
    if (*(_DWORD *)v24 == 2)
      result = WTF::StringImpl::destroy(v24, v16);
    else
      *(_DWORD *)v24 -= 2;
LABEL_29:
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
      {
        result = WTF::StringImpl::destroy(v25, v16);
        if (!v26)
          goto LABEL_35;
        goto LABEL_33;
      }
      *(_DWORD *)v25 -= 2;
    }
    if (!v26)
      goto LABEL_35;
LABEL_33:
    if (*(_DWORD *)v26 == 2)
      result = WTF::StringImpl::destroy(v26, v16);
    else
      *(_DWORD *)v26 -= 2;
LABEL_35:
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        return WTF::StringImpl::destroy(v27, v16);
      else
        *(_DWORD *)v27 -= 2;
    }
  }
  return result;
}

void sub_1948CB930(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10, WTF::StringImpl *a11, WTF::StringImpl *a12, WTF::StringImpl *a13, WTF::StringImpl *a14, WTF::StringImpl *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, WTF::StringImpl *a20,uint64_t a21,uint64_t a22,uint64_t a23,WTF::StringImpl *a24,WTF::StringImpl *a25,WTF::StringImpl *a26,WTF::StringImpl *a27,WTF::StringImpl *a28,uint64_t a29,char a30)
{
  char v30;

  if (a30)
  {
    if (a28)
    {
      if (*(_DWORD *)a28 == 2)
        WTF::StringImpl::destroy(a28, a2);
      else
        *(_DWORD *)a28 -= 2;
    }
    if (a27)
    {
      if (*(_DWORD *)a27 == 2)
        WTF::StringImpl::destroy(a27, a2);
      else
        *(_DWORD *)a27 -= 2;
    }
    if (a26)
    {
      if (*(_DWORD *)a26 == 2)
        WTF::StringImpl::destroy(a26, a2);
      else
        *(_DWORD *)a26 -= 2;
    }
    if (a25)
    {
      if (*(_DWORD *)a25 == 2)
        WTF::StringImpl::destroy(a25, a2);
      else
        *(_DWORD *)a25 -= 2;
    }
    if (a24)
    {
      if (*(_DWORD *)a24 == 2)
        WTF::StringImpl::destroy(a24, a2);
      else
        *(_DWORD *)a24 -= 2;
    }
  }
  if (a20)
  {
    if (*(_DWORD *)a20 == 2)
      WTF::StringImpl::destroy(a20, a2);
    else
      *(_DWORD *)a20 -= 2;
  }
  if (a15)
  {
    if (*(_DWORD *)a15 == 2)
      WTF::StringImpl::destroy(a15, a2);
    else
      *(_DWORD *)a15 -= 2;
  }
  if ((v30 & 1) == 0)
  {
    if (a10)
    {
      if (*(_DWORD *)a10 == 2)
        WTF::StringImpl::destroy(a10, a2);
      else
        *(_DWORD *)a10 -= 2;
    }
    if (a11)
    {
      if (*(_DWORD *)a11 == 2)
        WTF::StringImpl::destroy(a11, a2);
      else
        *(_DWORD *)a11 -= 2;
    }
    if (a12)
    {
      if (*(_DWORD *)a12 == 2)
        WTF::StringImpl::destroy(a12, a2);
      else
        *(_DWORD *)a12 -= 2;
    }
    if (a13)
    {
      if (*(_DWORD *)a13 == 2)
        WTF::StringImpl::destroy(a13, a2);
      else
        *(_DWORD *)a13 -= 2;
    }
    if (a14)
    {
      if (*(_DWORD *)a14 == 2)
        WTF::StringImpl::destroy(a14, a2);
      else
        *(_DWORD *)a14 -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::NotificationPayload::dictionaryRepresentation(WebCore::NotificationPayload *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const __CFString *v6;
  _QWORD v8[5];
  _QWORD v9[6];

  v9[5] = *MEMORY[0x1E0C80C00];
  if (*((_BYTE *)this + 56))
    v2 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", *((_QWORD *)this + 6));
  else
    v2 = objc_msgSend(MEMORY[0x1E0C99E38], "null");
  v3 = v2;
  if (*((_BYTE *)this + 120))
    v4 = WebCore::NotificationOptionsPayload::dictionaryRepresentation((WebCore::NotificationPayload *)((char *)this + 64));
  else
    v4 = objc_msgSend(MEMORY[0x1E0C99E38], "null");
  v5 = v4;
  v8[0] = CFSTR("WebNotificationDefaultActionKey");
  v9[0] = WTF::URL::operator NSURL *();
  v8[1] = CFSTR("WebNotificationTitleKey");
  if (*((_QWORD *)this + 5))
    v6 = (const __CFString *)WTF::StringImpl::operator NSString *();
  else
    v6 = &stru_1E3487BC0;
  v9[1] = v6;
  v9[2] = v3;
  v8[2] = CFSTR("WebNotificationAppBadgeKey");
  v8[3] = CFSTR("WebNotificationOptionsKey");
  v9[3] = v5;
  v8[4] = CFSTR("WebNotificationMutableKey");
  v9[4] = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", *((unsigned __int8 *)this + 128));
  return objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v9, v8, 5);
}

void WebCore::SpeechRecognizer::dataCaptured(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  const void *v8;
  uint64_t v9;
  __int128 v10;
  int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  CMTime *v17;
  CMTime v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  const void *v25;
  CMTime v26;
  __int128 v27;
  uint64_t v28;

  v23 = *(_OWORD *)(a1 + 48);
  v24 = *(_QWORD *)(a1 + 64);
  WebCore::createAudioSampleBuffer(a3, a4, &v23, (const opaqueCMFormatDescription *)a5, &v25);
  v8 = v25;
  objc_msgSend(*(id *)(a1 + 40), "audioSamplesAvailable:", v25);
  v10 = *(_OWORD *)(a1 + 48);
  v9 = a1 + 48;
  v19 = v10;
  v20 = *(_QWORD *)(v9 + 16);
  v12 = (*(double (**)(uint64_t))(*(_QWORD *)a4 + 32))(a4);
  if (a5 >= 0)
    v13 = 4;
  else
    v13 = 8;
  if (v12 <= 1)
    v14 = 1;
  else
    v14 = v12;
  if (v12)
    v15 = a5;
  else
    v15 = a5 >> 63;
  if (v12)
    v16 = 0;
  else
    v16 = v13;
  PAL::softLinkCoreMediaCMTimeMake((PAL *)v15, v14, v11);
  v18.flags |= v16 | 1;
  v27 = v19;
  v28 = v20;
  v26 = v18;
  PAL::softLinkCoreMediaCMTimeAdd[0]((PAL *)&v27, &v26, v17);
  *(_OWORD *)v9 = v21;
  *(_QWORD *)(v9 + 16) = v22;
  if (v8)
    CFRelease(v8);
}

void sub_1948CBDA0(_Unwind_Exception *exception_object)
{
  const void *v1;

  if (v1)
    CFRelease(v1);
  _Unwind_Resume(exception_object);
}

BOOL WebCore::SpeechRecognizer::startRecognition(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v13;
  const __CFString *v14;
  uint64_t v15;
  void *v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  char v22;
  void *v23;
  uint64_t v24;
  const void *v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int v31;
  _QWORD v33[4];
  WTF *v34;

  v13 = objc_alloc((Class)objc_opt_class());
  if (*a4)
    v14 = (const __CFString *)WTF::StringImpl::operator NSString *();
  else
    v14 = &stru_1E3487BC0;
  v33[0] = MEMORY[0x1E0C809B0];
  v33[1] = 3321888768;
  v33[2] = ___ZN7WebCore16SpeechRecognizer16startRecognitionEbN3WTF23ObjectIdentifierGenericINS_47SpeechRecognitionConnectionClientIdentifierTypeENS1_38ObjectIdentifierMainThreadAccessTraitsIyEEyEERKNS1_6StringEbby_block_invoke;
  v33[3] = &__block_descriptor_40_e8_32c210_ZTSKZN7WebCore16SpeechRecognizer16startRecognitionEbN3WTF23ObjectIdentifierGenericINS_47SpeechRecognitionConnectionClientIdentifierTypeENS1_38ObjectIdentifierMainThreadAccessTraitsIyEEyEERKNS1_6StringEbbyE3__0_e10_v16__0r_v8l;
  v15 = *a1;
  if (*a1)
    goto LABEL_27;
  v15 = WTF::fastCompactMalloc((WTF *)0x10);
  *(_DWORD *)v15 = 1;
  *(_QWORD *)(v15 + 8) = a1;
  v17 = (unsigned int *)*a1;
  *a1 = v15;
  if (!v17)
    goto LABEL_27;
  do
  {
    v18 = __ldaxr(v17);
    v19 = v18 - 1;
  }
  while (__stlxr(v19, v17));
  if (!v19)
  {
    atomic_store(1u, v17);
    WTF::fastFree((WTF *)v17, v16);
  }
  v15 = *a1;
  if (*a1)
  {
LABEL_27:
    do
      v20 = __ldaxr((unsigned int *)v15);
    while (__stlxr(v20 + 1, (unsigned int *)v15));
    do
      v21 = __ldaxr((unsigned int *)v15);
    while (__stlxr(v21 + 1, (unsigned int *)v15));
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  v34 = (WTF *)v15;
  v24 = objc_msgSend(v13, "initWithIdentifier:locale:doMultipleRecognitions:reportInterimResults:maxAlternatives:delegateCallback:", a3, v14, a5, a6, a7, v33);
  v25 = (const void *)a1[5];
  a1[5] = v24;
  if (v25)
    CFRelease(v25);
  if ((v22 & 1) == 0)
  {
    do
    {
      v26 = __ldaxr((unsigned int *)v15);
      v27 = v26 - 1;
    }
    while (__stlxr(v27, (unsigned int *)v15));
    if (!v27)
    {
      atomic_store(1u, (unsigned int *)v15);
      WTF::fastFree((WTF *)v15, v23);
    }
  }
  v28 = a1[5];
  v29 = (unsigned int *)v34;
  v34 = 0;
  if (v29)
  {
    do
    {
      v30 = __ldaxr(v29);
      v31 = v30 - 1;
    }
    while (__stlxr(v31, v29));
    if (!v31)
    {
      atomic_store(1u, v29);
      WTF::fastFree((WTF *)v29, v23);
    }
  }
  return v28 != 0;
}

void sub_1948CBFA8(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, WTF *a14)
{
  unsigned int *v14;
  char v15;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;

  if (!a14)
    goto LABEL_4;
  do
  {
    v17 = __ldaxr((unsigned int *)a14);
    v18 = v17 - 1;
  }
  while (__stlxr(v18, (unsigned int *)a14));
  if (!v18)
  {
    atomic_store(1u, (unsigned int *)a14);
    WTF::fastFree(a14, a2);
    if ((v15 & 1) != 0)
      goto LABEL_8;
  }
  else
  {
LABEL_4:
    if ((v15 & 1) != 0)
      goto LABEL_8;
  }
  do
  {
    v19 = __ldaxr(v14);
    v20 = v19 - 1;
  }
  while (__stlxr(v20, v14));
  if (!v20)
  {
    atomic_store(1u, v14);
    WTF::fastFree((WTF *)v14, a2);
  }
LABEL_8:
  _Unwind_Resume(exception_object);
}

uint64_t ___ZN7WebCore16SpeechRecognizer16startRecognitionEbN3WTF23ObjectIdentifierGenericINS_47SpeechRecognitionConnectionClientIdentifierTypeENS1_38ObjectIdentifierMainThreadAccessTraitsIyEEyEERKNS1_6StringEbby_block_invoke(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 32);
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + 8);
    if (v2)
      return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 8) + 16))(*(_QWORD *)(v2 + 8));
  }
  return result;
}

uint64_t __copy_helper_block_e8_32c210_ZTSKZN7WebCore16SpeechRecognizer16startRecognitionEbN3WTF23ObjectIdentifierGenericINS_47SpeechRecognitionConnectionClientIdentifierTypeENS1_38ObjectIdentifierMainThreadAccessTraitsIyEEyEERKNS1_6StringEbbyE3__0(uint64_t result, uint64_t a2)
{
  unsigned int *v2;
  unsigned int v3;

  v2 = *(unsigned int **)(a2 + 32);
  if (v2)
  {
    do
      v3 = __ldaxr(v2);
    while (__stlxr(v3 + 1, v2));
  }
  *(_QWORD *)(result + 32) = v2;
  return result;
}

unsigned int *__destroy_helper_block_e8_32c210_ZTSKZN7WebCore16SpeechRecognizer16startRecognitionEbN3WTF23ObjectIdentifierGenericINS_47SpeechRecognitionConnectionClientIdentifierTypeENS1_38ObjectIdentifierMainThreadAccessTraitsIyEEyEERKNS1_6StringEbbyE3__0(uint64_t a1, void *a2)
{
  unsigned int *result;
  unsigned int v4;
  unsigned int v5;

  result = *(unsigned int **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = 0;
  if (result)
  {
    do
    {
      v4 = __ldaxr(result);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, result));
    if (!v5)
    {
      atomic_store(1u, result);
      return (unsigned int *)WTF::fastFree((WTF *)result, a2);
    }
  }
  return result;
}

void sub_1948CC25C(_Unwind_Exception *a1)
{
  const void *v1;

  _Block_release(v1);
  _Unwind_Resume(a1);
}

void sub_1948CC6CC(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, WTF *a12, int a13, int a14, WTF::StringImpl *a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,WTF *a36,int a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,WTF *a43,int a44,int a45)
{
  unsigned int v45;
  uint64_t v47;
  WTF::StringImpl *v48;

  if (v45)
  {
    v47 = 0;
    do
    {
      v48 = *(WTF::StringImpl **)((char *)a36 + v47);
      *(_QWORD *)((char *)a36 + v47) = 0;
      if (v48)
      {
        if (*(_DWORD *)v48 == 2)
          WTF::StringImpl::destroy(v48, a2);
        else
          *(_DWORD *)v48 -= 2;
      }
      v47 += 16;
    }
    while (16 * v45 != v47);
  }
  if (a36)
    WTF::fastFree(a36, a2);
  _Unwind_Resume(exception_object);
}

void sub_1948CCA68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;
  uint64_t v14;

  if (a13 != -1)
    ((void (*)(uint64_t, uint64_t))off_1E3232F58[a13])(v14 - 17, v13);
  _Unwind_Resume(exception_object);
}

void sub_1948CCB20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;
  uint64_t v14;

  if (a13 != -1)
    ((void (*)(uint64_t, uint64_t))off_1E3232F58[a13])(v14 - 17, v13);
  _Unwind_Resume(exception_object);
}

void sub_1948CCBD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;
  uint64_t v14;

  if (a13 != -1)
    ((void (*)(uint64_t, uint64_t))off_1E3232F58[a13])(v14 - 17, v13);
  _Unwind_Resume(exception_object);
}

void sub_1948CCD1C(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, WTF::StringImpl *a15)
{
  uint64_t v15;
  WTF::StringImpl *v17;

  if (a13 != -1)
    ((void (*)(uint64_t, uint64_t *))off_1E3232F58[a13])(v15 - 17, &a11);
  v17 = a15;
  a15 = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, a2);
    else
      *(_DWORD *)v17 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_1948CCF8C(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, WTF::StringImpl *a15)
{
  uint64_t v15;
  WTF::StringImpl *v17;

  if (a13 != -1)
    ((void (*)(uint64_t, uint64_t *))off_1E3232F58[a13])(v15 - 33, &a11);
  v17 = a15;
  a15 = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, a2);
    else
      *(_DWORD *)v17 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_1948CD1F8(_Unwind_Exception *a1)
{
  const void *v1;

  _Block_release(v1);
  _Unwind_Resume(a1);
}

void sub_1948CD51C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF *a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, char a19)
{
  uint64_t v19;

  if (a17 != -1)
    ((void (*)(char *, uint64_t))off_1E3232F58[a17])(&a19, v19);
  _Unwind_Resume(exception_object);
}

void sub_1948CD7D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;
  uint64_t v14;

  if (a13 != -1)
    ((void (*)(uint64_t, uint64_t))off_1E3232F58[a13])(v14 - 33, v13);
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::ARKitBadgeSystemImage::imageIdentifier(WebCore::ARKitBadgeSystemImage *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  uint64_t v13;
  char v14;
  char **v15;
  char *v16;

  v3 = *((_QWORD *)this + 2);
  if (!v3)
    return *((_QWORD *)this + 3);
  v4 = atomic_load(&WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::onceFlag);
  if (v4 != -1)
  {
    v16 = &v14;
    v15 = &v16;
    std::__call_once(&WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::onceFlag, &v15, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::DestinationColorSpace const& WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::{lambda(void)#1} &&>>);
  }
  (*(void (**)(char **__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v3 + 288))(&v16, v3, &WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::colorSpace);
  v6 = v16;
  if (!v16[40])
  {
    __break(1u);
    goto LABEL_24;
  }
  v3 = *((_QWORD *)v16 + 4);
  v16 = 0;
  v1 = *((_QWORD *)v6 + 1);
  if (__ldaxr((unsigned __int8 *)v1))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v1))
  {
    goto LABEL_10;
  }
  MEMORY[0x19AEA534C](v1);
LABEL_10:
  v8 = *(_QWORD *)(v1 + 8);
  v2 = v8 - 1;
  *(_QWORD *)(v1 + 8) = v8 - 1;
  if (v8 != 1)
  {
    v9 = 0;
    v10 = 1;
    goto LABEL_12;
  }
LABEL_24:
  v13 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = 0;
  v10 = v13 != 0;
LABEL_12:
  v11 = __ldxr((unsigned __int8 *)v1);
  if (v11 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v1))
    {
      if (v2)
        return v3;
      goto LABEL_18;
    }
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v1);
  if (v2)
    return v3;
LABEL_18:
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  if (!v10)
    WTF::fastFree((WTF *)v1, v5);
  return v3;
}

void WebCore::ARKitBadgeSystemImage::draw(WebCore::ARKitBadgeSystemImage *this, WebCore::GraphicsContext *a2, const WebCore::FloatRect *a3)
{
  CGPDFPage *v6;
  float v7;
  float v8;
  _BOOL4 v9;
  int v10;
  uint64_t v11;
  float v12;
  uint64_t v14;
  float v15;
  float v16;
  unint64_t v17;
  void *v18;
  PAL *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  int v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  PAL *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  int v41;
  const CGPath *v42;
  CGContext *v43;
  CGContext *v44;
  void *v45;
  unint64_t v46;
  __int128 v47;
  __int128 v48;
  void *v49;
  double v50;
  double v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  PAL *v66;
  CGImage *Image;
  WebCore::IOSurface *v68;
  const void *v69;
  void *v70;
  const void *v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int *v74;
  unsigned int v75;
  unsigned int v76;
  CGColor *v77;
  CFTypeRef v78;
  const CGPath *cf;
  void *v80;
  WebCore::IOSurface *v81;
  CGAffineTransform v82;
  CGAffineTransform v83;
  CGAffineTransform v84;
  CGAffineTransform v85;
  char v86;
  PAL **v87;
  CGAffineTransform *v88;
  _OWORD components[2];
  uint64_t v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect BoxRect;

  v90 = *MEMORY[0x1E0C80C00];
  if ((_MergedGlobals_33 & 1) == 0)
  {
    qword_1ECE813F0 = 0;
    _MergedGlobals_33 = 1;
  }
  if (qword_1ECE813F8 != -1)
    dispatch_once(&qword_1ECE813F8, &__block_literal_global_34);
  v6 = (CGPDFPage *)qword_1ECE813F0;
  if (qword_1ECE813F0)
  {
    CFRetain((CFTypeRef)qword_1ECE813F0);
    v8 = *((float *)a3 + 2);
    v7 = *((float *)a3 + 3);
    v9 = v8 < 240.0;
    if (v7 < 240.0)
      v9 = 1;
    if (v9)
      v10 = 8;
    else
      v10 = 20;
    if (v9)
      v11 = 35;
    else
      v11 = 70;
    v12 = (float)(v11 + 2 * v10);
    if (v8 < v12 || v7 < v12)
      goto LABEL_93;
    v14 = *((_QWORD *)this + 2);
    if (!v14)
      goto LABEL_93;
    v16 = *(float *)a3;
    v15 = *((float *)a3 + 1);
    v17 = atomic_load(&WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::onceFlag);
    if (v17 != -1)
    {
      *(_QWORD *)&v85.a = &v87;
      *(_QWORD *)&components[0] = &v85;
      std::__call_once(&WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::onceFlag, components, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::DestinationColorSpace const& WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::{lambda(void)#1} &&>>);
    }
    (*(void (**)(CGAffineTransform **__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v14 + 288))(&v88, v14, &WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::colorSpace);
    v19 = (PAL *)v88;
    v88 = 0;
    if (!v19)
      goto LABEL_93;
    v20 = *((_QWORD *)v19 + 1);
    if (__ldaxr((unsigned __int8 *)v20))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v20))
    {
      goto LABEL_26;
    }
    MEMORY[0x19AEA534C](v20);
LABEL_26:
    v22 = *(_QWORD *)(v20 + 8);
    v23 = v22 - 1;
    *(_QWORD *)(v20 + 8) = v22 - 1;
    if (v22 == 1)
    {
      v72 = *(_QWORD *)(v20 + 16);
      v24 = *(_QWORD *)(v20 + 24);
      *(_QWORD *)(v20 + 24) = 0;
      v25 = v72 != 0;
    }
    else
    {
      v24 = 0;
      v25 = 1;
    }
    v26 = __ldxr((unsigned __int8 *)v20);
    if (v26 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v20))
      {
        if (v23)
          goto LABEL_38;
LABEL_34:
        if (v24)
          (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
        if (!v25)
          WTF::fastFree((WTF *)v20, v18);
LABEL_38:
        v27 = (void *)MEMORY[0x1E0C9DDC8];
        v28 = *((_QWORD *)this + 2);
        v29 = atomic_load(&WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::onceFlag);
        if (v29 != -1)
        {
          *(_QWORD *)&v85.a = &v87;
          *(_QWORD *)&components[0] = &v85;
          std::__call_once(&WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::onceFlag, components, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::DestinationColorSpace const& WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::{lambda(void)#1} &&>>);
        }
        (*(void (**)(CGAffineTransform **__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v28 + 288))(&v88, v28, &WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::colorSpace);
        v80 = (void *)objc_msgSend(v27, "imageWithCGImage:", *(_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)&v88[1].a + 16))(*(_QWORD *)&v88[1].a));
        v31 = (float)((float)((float)(v8 + v16) - (float)(int)v11) - (float)v10);
        v32 = (float)(v15 + (float)v10);
        v33 = (double)(int)v11;
        v34 = (PAL *)v88;
        v88 = 0;
        if (!v34)
          goto LABEL_57;
        v35 = *((_QWORD *)v34 + 1);
        if (__ldaxr((unsigned __int8 *)v35))
        {
          __clrex();
        }
        else if (!__stxr(1u, (unsigned __int8 *)v35))
        {
          goto LABEL_45;
        }
        MEMORY[0x19AEA534C](v35);
LABEL_45:
        v37 = *(_QWORD *)(v35 + 8);
        v38 = v37 - 1;
        *(_QWORD *)(v35 + 8) = v37 - 1;
        if (v37 == 1)
        {
          v73 = *(_QWORD *)(v35 + 16);
          v39 = *(_QWORD *)(v35 + 24);
          *(_QWORD *)(v35 + 24) = 0;
          v40 = v73 != 0;
        }
        else
        {
          v39 = 0;
          v40 = 1;
        }
        v41 = __ldxr((unsigned __int8 *)v35);
        if (v41 == 1)
        {
          if (!__stlxr(0, (unsigned __int8 *)v35))
          {
            if (!v38)
              goto LABEL_53;
            goto LABEL_57;
          }
        }
        else
        {
          __clrex();
        }
        WTF::Lock::unlockSlow((WTF::Lock *)v35);
        if (!v38)
        {
LABEL_53:
          if (v39)
            (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
          if (!v40)
            WTF::fastFree((WTF *)v35, v30);
        }
LABEL_57:
        v91.origin.x = v31;
        v91.origin.y = v32;
        v91.size.width = (double)(int)v11;
        v91.size.height = (double)(int)v11;
        v42 = CGPathCreateWithRoundedRect(v91, (double)(v11 >> 1), (double)(v11 >> 1), 0);
        if (((*(uint64_t (**)(WebCore::GraphicsContext *))(*(_QWORD *)a2 + 40))(a2) & 1) == 0)
        {
          (*(void (**)(WebCore::GraphicsContext *, uint64_t))(*(_QWORD *)a2 + 96))(a2, 1);
          v43 = (CGContext *)(*(uint64_t (**)(WebCore::GraphicsContext *))(*(_QWORD *)a2 + 24))(a2);
          v44 = v43;
          if (v43)
          {
            CGContextSaveGState(v43);
            v85.a = 0.0;
            LODWORD(v85.b) = 1098907648;
            v85.c = 1.05531781e-226;
            v85.d = 0.0078125;
            LOBYTE(v85.tx) = 1;
            WebCore::GraphicsContextState::setDropShadow((uint64_t)a2 + 8, (uint64_t)&v85);
            if (LOBYTE(v85.tx))
            {
              if ((*(_QWORD *)&v85.c & 0x8000000000000) != 0)
              {
                v74 = (unsigned int *)(*(_QWORD *)&v85.c & 0xFFFFFFFFFFFFLL);
                do
                {
                  v75 = __ldaxr(v74);
                  v76 = v75 - 1;
                }
                while (__stlxr(v76, v74));
                if (!v76)
                {
                  atomic_store(1u, v74);
                  WTF::fastFree((WTF *)v74, v45);
                }
              }
            }
            (*(void (**)(WebCore::GraphicsContext *, char *))(*(_QWORD *)a2 + 88))(a2, (char *)a2 + 8);
            components[0] = xmmword_1968BCEC0;
            components[1] = unk_1968BCED0;
            {
              WebCore::namedColorSpace<kCGColorSpaceSRGB>(void)::colorSpace = 0;
            }
            v46 = atomic_load(&WebCore::namedColorSpace<kCGColorSpaceSRGB>(void)::onceFlag);
            if (v46 != -1)
            {
              *(_QWORD *)&v85.a = &v87;
              v88 = &v85;
              std::__call_once(&WebCore::namedColorSpace<kCGColorSpaceSRGB>(void)::onceFlag, &v88, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<CGColorSpace * WebCore::namedColorSpace<kCGColorSpaceSRGB>(void)::{lambda(void)#1} &&>>);
            }
            v77 = CGColorCreate((CGColorSpaceRef)WebCore::namedColorSpace<kCGColorSpaceSRGB>(void)::colorSpace, (const CGFloat *)components);
            CGContextSetFillColorWithColor(v44, v77);
            CGContextBeginPath(v44);
            v92.origin.x = *(float *)a3;
            v92.origin.y = *((float *)a3 + 1);
            v92.size.width = *((float *)a3 + 2);
            v92.size.height = *((float *)a3 + 3);
            CGContextAddRect(v44, v92);
            CGContextAddPath(v44, v42);
            CGContextClosePath(v44);
            CGContextEOClip(v44);
            CGContextBeginPath(v44);
            v93.origin.x = v31 + 0.5;
            v93.origin.y = v32 + 0.5;
            v93.size.width = (double)((int)v11 - 1);
            v93.size.height = v93.size.width;
            cf = CGPathCreateWithRoundedRect(v93, v93.size.width * 0.5, v93.size.width * 0.5, 0);
            CGContextAddPath(v44, cf);
            CGContextClosePath(v44);
            CGContextFillPath(v44);
            CGContextRestoreGState(v44);
            v47 = *MEMORY[0x1E0C9BAA8];
            v48 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
            *(_OWORD *)&v85.c = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
            *(_OWORD *)&v85.tx = v48;
            *(_OWORD *)&v84.a = v47;
            *(_OWORD *)&v84.c = *(_OWORD *)&v85.c;
            *(_OWORD *)&v84.tx = v48;
            *(_OWORD *)&v85.a = v47;
            CGAffineTransformScale(&v85, &v84, (float)(*((float *)a3 + 2) / *((float *)this + 8)), (float)(*((float *)a3 + 3) / *((float *)this + 9)));
            v83 = v85;
            v49 = (void *)objc_msgSend(v80, "imageByApplyingTransform:", &v83);
            v50 = (float)((float)(v8 - (float)(int)v11) - (float)v10);
            v51 = *((float *)a3 + 3) - (double)v10 - v33;
            v52 = objc_msgSend((id)objc_msgSend(v49, "imageByClampingToRect:", v50, v51, (double)(int)v11, (double)(int)v11), "imageByApplyingGaussianBlurWithSigma:", 10.0);
            v53 = (void *)objc_msgSend(MEMORY[0x1E0C9DDB8], "filterWithName:", CFSTR("CIColorControls"));
            v54 = *MEMORY[0x1E0C9E1F8];
            objc_msgSend(v53, "setValue:forKey:", v52, *MEMORY[0x1E0C9E1F8]);
            objc_msgSend(v53, "setValue:forKey:", &unk_1E349D8B0, *MEMORY[0x1E0C9E260]);
            v55 = (void *)objc_msgSend(MEMORY[0x1E0C9DDB8], "filterWithName:", CFSTR("CIConstantColorGenerator"));
            v56 = objc_msgSend(MEMORY[0x1E0C9DD80], "colorWithRed:green:blue:alpha:", 1.0, 1.0, 1.0, 0.18);
            objc_msgSend(v55, "setValue:forKey:", v56, *MEMORY[0x1E0C9E1C0]);
            v57 = (void *)objc_msgSend(MEMORY[0x1E0C9DDB8], "filterWithName:", CFSTR("CISourceOverCompositing"));
            objc_msgSend(v57, "setValue:forKey:", objc_msgSend(v55, "outputImage"), v54);
            v58 = objc_msgSend(v53, "outputImage");
            objc_msgSend(v57, "setValue:forKey:", v58, *MEMORY[0x1E0C9E190]);
            v59 = (void *)objc_msgSend(MEMORY[0x1E0C9DD90], "context");
            v60 = v59;
            if (v59)
              CFRetain(v59);
            v61 = (void *)objc_msgSend((id)objc_msgSend(v57, "outputImage", v77), "imageByCroppingToRect:", v50, v51, (double)(int)v11, (double)(int)v11);
            CGAffineTransformMakeTranslation(&v82, -v50, -v51);
            v62 = objc_msgSend(v61, "imageByApplyingTransform:", &v82);
            std::call_once[abi:sn180100]<WebCore::IOSurfacePool::sharedPool(void)::$_0>((uint64_t)&v88);
            v63 = atomic_load(&WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::onceFlag);
            if (v63 != -1)
            {
              v87 = (PAL **)&v88;
              v88 = (CGAffineTransform *)&v86;
              std::__call_once(&WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::onceFlag, &v87, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::DestinationColorSpace const& WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::{lambda(void)#1} &&>>);
            }
            WebCore::IOSurface::create((uint64_t)&WebCore::IOSurfacePool::sharedPool(void)::pool, v11 | (v11 << 32), (const void **)&WebCore::knownColorSpace<&WebCore::sRGBColorSpaceRef>(void)::colorSpace, 0, 1u, (uint64_t *)&v81);
            v64 = *((_QWORD *)v81 + 6);
            {
              WebCore::namedColorSpace<kCGColorSpaceSRGB>(void)::colorSpace = 0;
            }
            v65 = atomic_load(&WebCore::namedColorSpace<kCGColorSpaceSRGB>(void)::onceFlag);
            if (v65 != -1)
            {
              v88 = (CGAffineTransform *)&v86;
              v87 = (PAL **)&v88;
              std::__call_once(&WebCore::namedColorSpace<kCGColorSpaceSRGB>(void)::onceFlag, &v87, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<CGColorSpace * WebCore::namedColorSpace<kCGColorSpaceSRGB>(void)::{lambda(void)#1} &&>>);
            }
            objc_msgSend(v60, "render:toIOSurface:bounds:colorSpace:", v62, v64, WebCore::namedColorSpace<kCGColorSpaceSRGB>(void)::colorSpace, 0.0, 0.0, (double)(int)v11, (double)(int)v11);
            WebCore::IOSurface::createPlatformContext((IOSurfaceRef *)v81, (PAL **)&v88);
            v66 = (PAL *)v88;
            Image = (CGImage *)CGIOSurfaceContextCreateImage();
            CGContextSaveGState(v44);
            CGContextBeginPath(v44);
            CGContextAddPath(v44, v42);
            CGContextClosePath(v44);
            CGContextClip(v44);
            CGContextTranslateCTM(v44, v31, v32);
            CGContextTranslateCTM(v44, 0.0, (double)(int)v11);
            CGContextScaleCTM(v44, 1.0, -1.0);
            v94.origin.x = 0.0;
            v94.origin.y = 0.0;
            v94.size.width = (double)(int)v11;
            v94.size.height = (double)(int)v11;
            CGContextDrawImage(v44, v94, Image);
            BoxRect = CGPDFPageGetBoxRect(v6, kCGPDFMediaBox);
            CGContextScaleCTM(v44, v33 / BoxRect.size.width, v33 / BoxRect.size.height);
            CGContextDrawPDFPage(v44, v6);
            CGContextFlush(v44);
            CGContextRestoreGState(v44);
            if (v66)
              CFRelease(v66);
            v68 = v81;
            v81 = 0;
            if (v68)
            {
              v69 = (const void *)*((_QWORD *)v68 + 6);
              *((_QWORD *)v68 + 6) = 0;
              if (v69)
                CFRelease(v69);
              WTF::MachSendRight::~MachSendRight((WebCore::IOSurface *)((char *)v68 + 40));
              if (*((_BYTE *)v68 + 16))
              {
                v71 = (const void *)*((_QWORD *)v68 + 1);
                *((_QWORD *)v68 + 1) = 0;
                if (v71)
                  CFRelease(v71);
              }
              WTF::fastFree(v68, v70);
            }
            if (Image)
              CFRelease(Image);
            if (v60)
              CFRelease(v60);
            if (cf)
              CFRelease(cf);
            if (v78)
              CFRelease(v78);
          }
          (*(void (**)(WebCore::GraphicsContext *, uint64_t))(*(_QWORD *)a2 + 104))(a2, 1);
        }
        if (v42)
          CFRelease(v42);
LABEL_93:
        CFRelease(v6);
        return;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v20);
    if (v23)
      goto LABEL_38;
    goto LABEL_34;
  }
}

void sub_1948CE3A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, CFTypeRef a9, CFTypeRef cf, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  const void *v35;
  uint64_t v36;
  const void *v37;
  const void *v38;
  const void *v39;
  const void *v40;
  const void *v42;
  void *v43;
  const void *v44;

  if (v40)
    CFRelease(v40);
  if (a12)
  {
    v42 = *(const void **)(a12 + 48);
    *(_QWORD *)(a12 + 48) = 0;
    if (v42)
      CFRelease(v42);
    WTF::MachSendRight::~MachSendRight((WTF::MachSendRight *)(a12 + 40));
    if (*(_BYTE *)(a12 + 16))
    {
      v44 = *(const void **)(a12 + 8);
      *(_QWORD *)(a12 + 8) = 0;
      if (v44)
        CFRelease(v44);
    }
    WTF::fastFree((WTF *)a12, v43);
  }
  if (v39)
    CFRelease(v39);
  if (v38)
    CFRelease(v38);
  if (cf)
    CFRelease(cf);
  if (a9)
    CFRelease(a9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v36 + 104))(v36, 1);
  if (v37)
    CFRelease(v37);
  CFRelease(v35);
  _Unwind_Resume(a1);
}

void WebCore::DatabaseManager::platformInitialize(WebCore::DatabaseManager *this, const WTF::String *a2)
{
  const WTF::String *v3;
  const char *v4;
  void *v5;
  WTF::StringImpl *v6;
  WTF *v7;

  if (*(_QWORD *)a2 && *(_DWORD *)(*(_QWORD *)a2 + 4))
  {
    if ((WTF::FileSystemImpl::fileExists(a2, a2) & 1) == 0)
      WTF::FileSystemImpl::makeAllDirectories(a2, v3);
    WTF::FileSystemImpl::realPath(a2, v3);
    WTF::String::utf8();
    if (v7)
      v4 = (char *)v7 + 16;
    else
      v4 = 0;
    setenv("SQLITE_EXEMPT_PATH_FROM_VNODE_GUARDS", v4, 0);
    if (v7)
    {
      if (*(_DWORD *)v7 == 1)
        WTF::fastFree(v7, v5);
      else
        --*(_DWORD *)v7;
    }
    if (v6)
    {
      if (*(_DWORD *)v6 == 2)
        WTF::StringImpl::destroy(v6, (WTF::StringImpl *)v5);
      else
        *(_DWORD *)v6 -= 2;
    }
  }
}

void sub_1948CE6BC(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF::StringImpl *a9, WTF *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 1)
      WTF::fastFree(a10, a2);
    else
      --*(_DWORD *)a10;
  }
  if (a9)
  {
    if (*(_DWORD *)a9 == 2)
      WTF::StringImpl::destroy(a9, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)a9 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void WebCore::ARKitBadgeSystemImage::~ARKitBadgeSystemImage(WebCore::ARKitBadgeSystemImage *this)
{
  _DWORD *v2;

  v2 = (_DWORD *)*((_QWORD *)this + 2);
  *((_QWORD *)this + 2) = 0;
  if (v2)
  {
    if (v2[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v2 + 8))(v2);
    else
      --v2[2];
  }
}

void WebCore::ARKitBadgeSystemImage::~ARKitBadgeSystemImage(WebCore::ARKitBadgeSystemImage *this, void *a2)
{
  _DWORD *v3;

  v3 = (_DWORD *)*((_QWORD *)this + 2);
  *((_QWORD *)this + 2) = 0;
  if (v3)
  {
    if (v3[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
    else
      --v3[2];
  }
  WTF::fastFree(this, a2);
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore22SpeechRecognitionErrorEN3WTF6VectorINS9_27SpeechRecognitionResultDataELm0ENSB_15CrashOnOverflowELm16ENSB_10FastMallocEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSI_1EJS8_SA_SG_EEEEEEDcSK_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore22SpeechRecognitionErrorEN3WTF6VectorINS9_27SpeechRecognitionResultDataELm0ENSB_15CrashOnOverflowELm16ENSB_10FastMallocEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSI_1EJS8_SA_SG_EEEEEEDcSK_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  unsigned int v3;
  WTF *v4;
  WTF *v5;
  uint64_t v6;
  WTF::StringImpl **v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF *v10;

  v3 = *((_DWORD *)a2 + 3);
  v4 = *(WTF **)a2;
  if (v3)
  {
    v5 = (WTF *)((char *)v4 + 24 * v3);
    do
    {
      v6 = *((unsigned int *)v4 + 3);
      if ((_DWORD)v6)
      {
        v7 = *(WTF::StringImpl ***)v4;
        v8 = 16 * v6;
        do
        {
          v9 = *v7;
          *v7 = 0;
          if (v9)
          {
            if (*(_DWORD *)v9 == 2)
              WTF::StringImpl::destroy(v9, a2);
            else
              *(_DWORD *)v9 -= 2;
          }
          v7 += 2;
          v8 -= 16;
        }
        while (v8);
      }
      v10 = *(WTF **)v4;
      if (*(_QWORD *)v4)
      {
        *(_QWORD *)v4 = 0;
        *((_DWORD *)v4 + 2) = 0;
        WTF::fastFree(v10, a2);
      }
      v4 = (WTF *)((char *)v4 + 24);
    }
    while (v4 != v5);
    v4 = *(WTF **)a2;
  }
  if (v4)
  {
    *(_QWORD *)a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    WTF::fastFree(v4, a2);
  }
}

void ___ZN7WebCoreL17systemPreviewLogoEv_block_invoke()
{
  const __CFURL *v0;
  CGPDFDocument *v1;
  CGPDFDocument *v2;
  CGPDFPageRef Page;
  uint64_t v4;
  const void *v5;

  if (qword_1ECE81408 != -1)
    dispatch_once(&qword_1ECE81408, &__block_literal_global_136_0);
  v0 = (const __CFURL *)objc_msgSend((id)qword_1ECE81400, "URLForResource:withExtension:", CFSTR("ARKitBadge"), CFSTR("pdf"));
  if (v0 && (v1 = CGPDFDocumentCreateWithURL(v0)) != 0)
  {
    v2 = v1;
    if (CGPDFDocumentGetNumberOfPages(v1))
    {
      Page = CGPDFDocumentGetPage(v2, 1uLL);
      v4 = (uint64_t)Page;
      if (Page)
        CFRetain(Page);
    }
    else
    {
      v4 = 0;
    }
    CFRelease(v2);
  }
  else
  {
    v4 = 0;
  }
  v5 = (const void *)qword_1ECE813F0;
  qword_1ECE813F0 = v4;
  if (v5)
    CFRelease(v5);
}

void sub_1948CE968(_Unwind_Exception *a1)
{
  const void *v1;

  CFRelease(v1);
  _Unwind_Resume(a1);
}

uint64_t ___ZN7WebCoreL11arKitBundleEv_block_invoke()
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithURL:", objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", CFSTR("/System/Library/PrivateFrameworks/AssetViewer.framework")));
  qword_1ECE81400 = result;
  return result;
}

unint64_t WTF::Vector<WebCore::SpeechRecognitionAlternativeData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(unsigned int *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 16 * (unint64_t)a1[3] <= a3)
  {
    WTF::Vector<WebCore::SpeechRecognitionAlternativeData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    WTF::Vector<WebCore::SpeechRecognitionAlternativeData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

unsigned int *WTF::Vector<WebCore::SpeechRecognitionAlternativeData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(unsigned int *result, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unsigned int *v6;
  WTF *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unsigned int *v10;
  unsigned int **v11;
  unsigned int **v12;
  unsigned int *v13;

  v2 = result[2];
  v3 = v2 + (v2 >> 2);
  if (v3 >= 0x10)
    v4 = v3 + 1;
  else
    v4 = 16;
  if (v4 <= a2)
    v5 = a2;
  else
    v5 = v4;
  if (v5 > v2)
  {
    if (v5 >> 28)
    {
      __break(0xC471u);
    }
    else
    {
      v6 = result;
      v7 = *(WTF **)result;
      v8 = result[3];
      result = (unsigned int *)WTF::fastMalloc((WTF *)(16 * v5));
      v6[2] = v5;
      *(_QWORD *)v6 = result;
      if ((_DWORD)v8)
      {
        v10 = result;
        v11 = (unsigned int **)((char *)v7 + 16 * v8);
        v12 = (unsigned int **)v7;
        do
        {
          v13 = *v12;
          *v12 = 0;
          *(_QWORD *)v10 = v13;
          *((_QWORD *)v10 + 1) = v12[1];
          result = *v12;
          *v12 = 0;
          if (result)
          {
            if (*result == 2)
              result = (unsigned int *)WTF::StringImpl::destroy((WTF::StringImpl *)result, v9);
            else
              *result -= 2;
          }
          v12 += 2;
          v10 += 4;
        }
        while (v12 != v11);
      }
      if (v7)
      {
        if (*(WTF **)v6 == v7)
        {
          *(_QWORD *)v6 = 0;
          v6[2] = 0;
        }
        return (unsigned int *)WTF::fastFree(v7, v9);
      }
    }
  }
  return result;
}

uint64_t *WTF::Vector<WebCore::SpeechRecognitionResultData,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::Vector(uint64_t *a1, uint64_t *a2, unint64_t a3)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;

  *a1 = 0;
  a1[1] = 0;
  if (a3)
  {
    if (a3 >= 0xAAAAAAB)
    {
LABEL_13:
      __break(0xC471u);
      JUMPOUT(0x1948CEC54);
    }
    v6 = 24 * a3;
    v7 = WTF::fastMalloc((WTF *)(24 * a3));
    *((_DWORD *)a1 + 2) = v6 / 0x18;
    *a1 = v7;
    v8 = &a2[3 * a3];
    v9 = *((_DWORD *)a1 + 3);
    do
    {
      v10 = *a1;
      v11 = *((unsigned int *)a2 + 3);
      v12 = *a1 + 24 * v9;
      *(_QWORD *)v12 = 0;
      *(_QWORD *)(v12 + 8) = 0;
      *(_DWORD *)(v12 + 12) = v11;
      if ((_DWORD)v11)
      {
        if (v11 >> 28)
          goto LABEL_13;
        v13 = (_QWORD *)WTF::fastMalloc((WTF *)(16 * v11));
        *(_DWORD *)(v12 + 8) = v11;
        *(_QWORD *)v12 = v13;
        v14 = *((unsigned int *)a2 + 3);
        if ((_DWORD)v14)
        {
          v15 = *a2;
          v16 = *a2 + 16 * v14;
          do
          {
            v17 = *(_DWORD **)v15;
            if (*(_QWORD *)v15)
              *v17 += 2;
            *v13 = v17;
            v13[1] = *(_QWORD *)(v15 + 8);
            v15 += 16;
            v13 += 2;
          }
          while (v15 != v16);
        }
      }
      *(_BYTE *)(v10 + 24 * v9 + 16) = *((_BYTE *)a2 + 16);
      v9 = *((_DWORD *)a1 + 3) + 1;
      *((_DWORD *)a1 + 3) = v9;
      a2 += 3;
    }
    while (a2 != v8);
  }
  return a1;
}

void sub_1948CEC60(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;
  WTF *v4;

  v4 = *(WTF **)v2;
  if (*(_QWORD *)v2)
  {
    *(_QWORD *)v2 = 0;
    *(_DWORD *)(v2 + 8) = 0;
    WTF::fastFree(v4, a2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::JSCSSNumericArray::destroy(uint64_t this, JSC::JSCell *a2)
{
  uint64_t v2;
  uint64_t v3;
  _DWORD **v4;
  uint64_t v5;
  _DWORD *v6;
  WTF *v7;

  v2 = *(_QWORD *)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = *(unsigned int *)(v2 + 20);
      if ((_DWORD)v3)
      {
        v4 = *(_DWORD ***)(v2 + 8);
        v5 = 8 * v3;
        do
        {
          v6 = *v4;
          *v4 = 0;
          if (v6)
          {
            if (v6[2] == 1)
              (*(void (**)(_DWORD *, JSC::JSCell *))(*(_QWORD *)v6 + 16))(v6, a2);
            else
              --v6[2];
          }
          ++v4;
          v5 -= 8;
        }
        while (v5);
      }
      v7 = *(WTF **)(v2 + 8);
      if (v7)
      {
        *(_QWORD *)(v2 + 8) = 0;
        *(_DWORD *)(v2 + 16) = 0;
        WTF::fastFree(v7, a2);
      }
      return bmalloc::api::isoDeallocate((bmalloc::api *)v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSCSSNumericArray::put(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  JSC::VM *v21;
  _BYTE *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t result;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned int v32;
  int OwnProperty;
  int v34;
  int v35;
  char hasExceptionsAfterHandlingTraps;
  _BYTE v37[16];
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = (WebCore::JSDOMGlobalObject *)a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (v15)
  {
    v16 = v15;
    if (!*(_BYTE *)(v15 + 274))
    {
      v17 = *(_BYTE **)(v15 + 496);
      if (!v17)
        v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
      if (*(_QWORD *)v17)
      {
        v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
        if (v18)
        {
          v19 = *(_QWORD *)(v18 + 680);
          if (*(_BYTE *)(v19 + 243))
          {
            if (!*(_BYTE *)(v19 + 242))
              goto LABEL_23;
          }
          else if ((*(_QWORD *)(v19 + 688) & 0x80000) == 0)
          {
            goto LABEL_23;
          }
          if (v17[65])
            return JSC::JSObject::put();
        }
      }
    }
  }
LABEL_23:
  if (!a3)
    return JSC::JSObject::put();
  v20 = *(_DWORD *)(a3 + 16);
  if ((v20 & 0x20) != 0)
    return JSC::JSObject::put();
  v21 = *(JSC::VM **)(a2 + 56);
  v22 = *(_BYTE **)(a3 + 8);
  v23 = *(unsigned int *)(a3 + 4);
  if ((v20 & 4) != 0)
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *v22 - 48;
    if (v24 > 9 || v23 >= 2 && *v22 == 48)
      return JSC::JSObject::put();
    v30 = v23 - 1;
    v31 = v22 + 1;
    while (v30)
    {
      if (v24 <= 0x19999999)
      {
        v32 = *v31 - 48;
        if (v32 <= 9)
        {
          v29 = __CFADD__(v32, 10 * v24);
          v24 = v32 + 10 * v24;
          --v30;
          ++v31;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  else
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *(unsigned __int16 *)v22 - 48;
    if (v24 > 9 || v23 >= 2 && *(_WORD *)v22 == 48)
      return JSC::JSObject::put();
    v26 = (unsigned __int16 *)(v22 + 2);
    v27 = v23 - 1;
    while (v27)
    {
      if (v24 <= 0x19999999)
      {
        v28 = *v26 - 48;
        if (v28 <= 9)
        {
          v29 = __CFADD__(v28, 10 * v24);
          v24 = v28 + 10 * v24;
          ++v26;
          --v27;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  if (v24 == -1)
    return JSC::JSObject::put();
  v48 = 0;
  v49 = 0;
  v50 = 0;
  v51 = 14;
  v38 = 0xFFFFFFFF00000000;
  v40 = 0;
  v41 = 0;
  v39 = v8;
  v42 = 0x20000;
  v43 = 0;
  LOBYTE(v44) = 0;
  v45 = 0;
  v46 = 0;
  v47 = 0;
  OwnProperty = WebCore::JSCSSNumericArray::legacyPlatformObjectGetOwnProperty(a1, a2, a3, (uint64_t)v37);
  if (*((_DWORD *)v21 + 20)
    && (v35 = OwnProperty,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v21),
        OwnProperty = v35,
        (hasExceptionsAfterHandlingTraps & 1) != 0)
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v21 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v45)
  {
    v34 = *(_DWORD *)(v44 + 4);
    if (!v34)
    {
      __break(0xC471u);
      JUMPOUT(0x1948CF048);
    }
    *(_DWORD *)(v44 + 4) = v34 - 1;
  }
  return result;
}

uint64_t WebCore::JSCSSNumericArray::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSCSSNumericArray::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (!*(_BYTE *)(v15 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v13[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (!a3)
    return JSC::JSObject::deleteProperty();
  v16 = *(_DWORD *)(a3 + 16);
  if ((v16 & 0x20) != 0)
    return JSC::JSObject::deleteProperty();
  v17 = *(_WORD **)(a3 + 8);
  v18 = *(unsigned int *)(a3 + 4);
  if ((v16 & 4) == 0)
  {
    if ((_DWORD)v18 && (v19 = (unsigned __int16)*v17 - 48, v19 <= 9) && (v18 < 2 || *v17 != 48))
    {
      v25 = v17 + 1;
      v26 = v18 - 1;
      while (v26)
      {
        if (v19 <= 0x19999999)
        {
          v27 = *v25 - 48;
          if (v27 <= 9)
          {
            v28 = __CFADD__(v27, 10 * v19);
            v19 = v27 + 10 * v19;
            ++v25;
            --v26;
            if (!v28)
              continue;
          }
        }
        goto LABEL_29;
      }
      v7 = v19 == -1;
      v22 = v19 & 0xFFFFFF00;
      v21 = v19;
      v20 = 0x100000000;
      if (v7)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
      }
    }
    else
    {
LABEL_29:
      v20 = 0;
      v21 = 0;
      v22 = 0;
    }
    v23 = v22 | v21;
    if ((v20 & 0x100000000) != 0)
      return *(_DWORD *)(v9 + 20) <= v23;
    return JSC::JSObject::deleteProperty();
  }
  if (!(_DWORD)v18)
  {
    v30 = 0;
    goto LABEL_47;
  }
  v29 = *(unsigned __int8 *)v17 - 48;
  if (v29 > 9 || v18 >= 2 && *(_BYTE *)v17 == 48)
  {
LABEL_46:
    v30 = 0;
    LODWORD(v18) = 0;
LABEL_47:
    v31 = 0;
    goto LABEL_48;
  }
  v32 = v18 - 1;
  v33 = (unsigned __int8 *)v17 + 1;
  while (v32)
  {
    if (v29 > 0x19999999)
      goto LABEL_46;
    v34 = *v33 - 48;
    if (v34 > 9)
      goto LABEL_46;
    v30 = 0;
    LODWORD(v18) = 0;
    v31 = 0;
    v28 = __CFADD__(v34, 10 * v29);
    v29 = v34 + 10 * v29;
    --v32;
    ++v33;
    if (v28)
      goto LABEL_48;
  }
  if (v29 == -1)
    v30 = 0;
  else
    v30 = v29 & 0xFFFFFF00;
  if (v29 == -1)
    LODWORD(v18) = 0;
  else
    LODWORD(v18) = v29;
  if (v29 == -1)
    v31 = 0;
  else
    v31 = 0x100000000;
LABEL_48:
  v23 = v18 | v30;
  if ((v31 & 0x100000000) != 0)
    return *(_DWORD *)(v9 + 20) <= v23;
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSCSSNumericArray::deletePropertyByIndex(WebCore::JSCSSNumericArray *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return *(_DWORD *)(v11 + 20) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return *(_DWORD *)(v11 + 20) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return *(_DWORD *)(v11 + 20) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return *(_DWORD *)(v11 + 20) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return *(_DWORD *)(v11 + 20) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return *(_DWORD *)(v11 + 20) <= a3;
  }
  if (!v15[65])
    return *(_DWORD *)(v11 + 20) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSCSSNumericArray::getOwnPropertySlotByIndex(WebCore::JSCSSNumericArray *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  uint64_t v7;
  JSC::VM *v8;
  _DWORD *v9;
  unint64_t v10;
  uint64_t v11;

  if ((_DWORD)a3 == -1)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v7 = *((_QWORD *)this + 3);
  if (*(_DWORD *)(v7 + 20) <= a3)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v9 = *(_DWORD **)(*(_QWORD *)(v7 + 8) + 8 * a3);
  ++v9[2];
  v10 = WebCore::wrap<WebCore::CSSStyleValue>((uint64_t)a2, *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), (uint64_t)v9);
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
  {
    v11 = 0;
  }
  else
  {
    *(_QWORD *)a4 = v10;
    *(_DWORD *)(a4 + 16) = 2;
    *(_QWORD *)(a4 + 32) = this;
    v11 = 1;
    *(_BYTE *)(a4 + 49) = 1;
  }
  if (v9[2] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v9 + 16))(v9);
  else
    --v9[2];
  return v11;
}

uint64_t WebCore::JSCSSNumericArray::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v4;
  int v5;
  uint64_t *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl **v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44[2];
  char v45;
  WTF::StringImpl *v46;

  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 24) + 20);
  if (v4)
  {
    v5 = 0;
    v6 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v8 = v43;
      v46 = v43;
      v9 = *((_DWORD *)v43 + 4);
      if ((v9 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v43 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v10 = *a3;
      v11 = *(unsigned int *)(*a3 + 20);
      if (v11 <= 0x13)
      {
        if ((_DWORD)v11)
        {
          v12 = *(WTF::StringImpl ***)(v10 + 8);
          while (*v12 != v43)
          {
            ++v12;
            if (!--v11)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v9 & 0x20) != 0)
        {
          v33 = *(_DWORD *)v8 + 2;
        }
        else
        {
          if ((v9 & 0x10) != 0)
          {
            *(_DWORD *)v8 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v8 = v44[0];
          }
          v33 = *(_DWORD *)v8;
          *(_DWORD *)v8 += 2;
          if (!v33)
          {
            WTF::StringImpl::destroy(v8, v7);
LABEL_54:
            v34 = (uint64_t *)(v10 + 8);
            v44[0] = v8;
            v35 = *(unsigned int *)(v10 + 20);
            if ((_DWORD)v35 == *(_DWORD *)(v10 + 16))
            {
              v36 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v34, v35 + 1, (unint64_t)v44);
              v35 = *(unsigned int *)(v10 + 20);
              v37 = *(_QWORD *)(v10 + 8);
              v38 = *v36;
              *v36 = 0;
              *(_QWORD *)(v37 + 8 * v35) = v38;
            }
            else
            {
              v39 = *v34;
              v44[0] = 0;
              *(_QWORD *)(v39 + 8 * v35) = v8;
            }
            *(_DWORD *)(v10 + 20) = v35 + 1;
            v40 = v44[0];
            v44[0] = 0;
            if (v40)
            {
              if (*(_DWORD *)v40 == 2)
                WTF::StringImpl::destroy(v40, v7);
              else
                *(_DWORD *)v40 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v8 = v33;
        goto LABEL_54;
      }
      if (!*v6 || !*(_DWORD *)(*v6 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v46, (uint64_t)v44);
      if (v45)
      {
        v8 = v46;
        v10 = *a3;
        v9 = *((_DWORD *)v46 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v41 = v43;
      v43 = 0;
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v7);
        else
          *(_DWORD *)v41 -= 2;
      }
      if (++v5 == v4)
        return JSC::JSObject::getOwnPropertyNames();
    }
    v13 = *(uint64_t **)(v10 + 8);
    v14 = &v13[v11];
    while (1)
    {
      v15 = *v13;
      v16 = *v6;
      if (*v6
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v16 = *v6) != 0))
      {
        v17 = *(_DWORD *)(v16 - 8);
      }
      else
      {
        v17 = 0;
      }
      v18 = (~(v15 << 32) + v15) ^ ((unint64_t)(~(v15 << 32) + v15) >> 22);
      v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
      v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
      v21 = v17 & ((v20 >> 31) ^ v20);
      v22 = (uint64_t *)(v16 + 8 * v21);
      v23 = *v22;
      if (*v22)
      {
        v24 = 0;
        v25 = 1;
        while (v23 != v15)
        {
          if (v23 == -1)
            v24 = v22;
          v21 = (v21 + v25) & v17;
          v22 = (uint64_t *)(v16 + 8 * v21);
          v23 = *v22;
          ++v25;
          if (!*v22)
          {
            if (v24)
            {
              *v24 = 0;
              --*(_DWORD *)(*v6 - 16);
              v22 = v24;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v22 = v15;
      v26 = *v6;
      v27 = *v6 ? *(_DWORD *)(v26 - 12) + 1 : 1;
      *(_DWORD *)(v26 - 12) = v27;
      v28 = *v6;
      v29 = *v6 ? *(_DWORD *)(v28 - 12) : 0;
      v30 = (*(_DWORD *)(v28 - 16) + v29);
      v31 = *(unsigned int *)(v28 - 4);
      if (v31 > 0x400)
        break;
      if (3 * v31 <= 4 * v30)
      {
        if ((_DWORD)v31)
          goto LABEL_43;
        v32 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v13 == v14)
        goto LABEL_17;
    }
    if (v31 > 2 * v30)
      goto LABEL_47;
LABEL_43:
    v32 = (_DWORD)v31 << (6 * *(_DWORD *)(v28 - 12) >= (2 * v31));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v32, v22);
    goto LABEL_47;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSCSSNumericArray::defineOwnProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;

  if (!a3)
    return JSC::JSObject::defineOwnProperty();
  v5 = *(_DWORD *)(a3 + 16);
  if ((v5 & 0x20) != 0)
    return JSC::JSObject::defineOwnProperty();
  v6 = *(_BYTE **)(a3 + 8);
  v7 = *(unsigned int *)(a3 + 4);
  if ((v5 & 4) != 0)
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *v6 - 48;
    if (v8 > 9 || v7 >= 2 && *v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v14 = v7 - 1;
    v15 = v6 + 1;
    while (v14)
    {
      if (v8 <= 0x19999999)
      {
        v16 = *v15 - 48;
        if (v16 <= 9)
        {
          v13 = __CFADD__(v16, 10 * v8);
          v8 = v16 + 10 * v8;
          --v14;
          ++v15;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  else
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *(unsigned __int16 *)v6 - 48;
    if (v8 > 9 || v7 >= 2 && *(_WORD *)v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v10 = (unsigned __int16 *)(v6 + 2);
    v11 = v7 - 1;
    while (v11)
    {
      if (v8 <= 0x19999999)
      {
        v12 = *v10 - 48;
        if (v12 <= 9)
        {
          v13 = __CFADD__(v12, 10 * v8);
          v8 = v12 + 10 * v8;
          ++v10;
          --v11;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  if (v8 == -1)
    return JSC::JSObject::defineOwnProperty();
  if (a5)
    JSC::throwTypeError();
  return 0;
}

uint64_t WebCore::JSCSSNumericArray::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSNumericArrayPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSNumericArrayPrototype::create(WebCore::JSCSSNumericArrayPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t Direct;
  WTF::StringImpl *v13;
  JSC::JSObject *v14;
  unint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  JSC::Structure *v19;
  int v20;
  unint64_t v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  uint64_t v25;
  int *v26;
  JSC::Structure **v27;
  int *v28;
  int v29;
  int v30;
  JSC::Structure *v31;
  int v32;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v22 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v22);
    *((_QWORD *)this + 4865) = SlowCase + (int)v22;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSNumericArray::s_info, (uint64_t)&WebCore::JSCSSNumericArrayPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2712);
  v10 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) + 672);
  v11 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v10, this, (unint64_t)v11);
  v23 = 0;
  v24 = SlowCase;
  v25 = 0x1000000FFFFFFFFLL;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v9, Direct, 4, (uint64_t)&v23);
  if (*v11 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v13);
  else
    *v11 -= 2;
  WebCore::addValueIterableMethods(*(WebCore **)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28), (JSC::JSGlobalObject *)SlowCase, v14);
  v15 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v17 = JSC::JSString::create((uint64_t)this, &v23);
  v18 = v23;
  v23 = 0;
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v16);
    else
      *(_DWORD *)v18 -= 2;
  }
  v19 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v32 = *(_DWORD *)SlowCase;
  v31 = v19;
  v20 = JSC::Structure::outOfLineCapacity(v19);
  v29 = 0;
  v30 = v20;
  v23 = (WTF::StringImpl *)&v30;
  v24 = SlowCase;
  v25 = (uint64_t)this;
  v26 = &v32;
  v27 = &v31;
  v28 = &v29;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v19, this, v15, 6, (uint64_t)&v23);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v29, v17);
  *((_DWORD *)v19 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericArray>,(WebCore::DOMConstructorID)400>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3200);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericArray>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCSSNumericArray::s_info + ~((_QWORD)&WebCore::JSCSSNumericArray::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSNumericArray::s_info + ~((_QWORD)&WebCore::JSCSSNumericArray::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCSSNumericArray::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCSSNumericArray::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCSSNumericArrayPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCSSNumericArrayPrototype::create((WebCore::JSCSSNumericArrayPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSCSSNumericArray::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCSSNumericArray::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3200) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

uint64_t WebCore::JSCSSNumericArray::legacyPlatformObjectGetOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  JSC::VM *v6;
  int v8;
  _WORD *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  _DWORD *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned int v21;
  BOOL v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  _BYTE *v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  unsigned __int16 *v45;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  unint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 *v67;
  unsigned int v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned int v71;

  v6 = *(JSC::VM **)(a2 + 56);
  if (!a3)
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
      return JSC::JSObject::getOwnStaticPropertySlot();
    return 0;
  }
  v8 = *(_DWORD *)(a3 + 16);
  if ((v8 & 0x20) == 0)
  {
    v9 = *(_WORD **)(a3 + 8);
    v10 = *(unsigned int *)(a3 + 4);
    if ((v8 & 4) == 0)
    {
      if ((_DWORD)v10 && (v11 = (unsigned __int16)*v9 - 48, v11 <= 9))
      {
        if (v10 < 2 || *v9 != 48)
        {
          v19 = v9 + 1;
          v20 = v10 - 1;
          while (v20)
          {
            if (v11 <= 0x19999999)
            {
              v21 = *v19 - 48;
              if (v21 <= 9)
              {
                v22 = __CFADD__(v21, 10 * v11);
                v11 = v21 + 10 * v11;
                ++v19;
                --v20;
                if (!v22)
                  continue;
              }
            }
            goto LABEL_6;
          }
          v23 = v11 == -1;
          v13 = v11 & 0xFFFFFF00;
          v12 = 0x100000000;
          if (v11 == -1)
          {
            v12 = 0;
            LOBYTE(v11) = 0;
          }
          if (v23)
            v13 = 0;
LABEL_8:
          v11 = v11;
          if ((v12 & 0x100000000) == 0)
            goto LABEL_37;
          goto LABEL_9;
        }
        v12 = 0;
      }
      else
      {
LABEL_6:
        v12 = 0;
        LOBYTE(v11) = 0;
      }
      v13 = 0;
      goto LABEL_8;
    }
    if ((_DWORD)v10)
    {
      v24 = *(unsigned __int8 *)v9 - 48;
      if (v24 <= 9 && (v10 < 2 || *(_BYTE *)v9 != 48))
      {
        v66 = v10 - 1;
        v67 = (unsigned __int8 *)v9 + 1;
        while (v66)
        {
          if (v24 > 0x19999999)
            goto LABEL_34;
          v68 = *v67 - 48;
          if (v68 > 9)
            goto LABEL_34;
          v11 = 0;
          LOBYTE(v10) = 0;
          v25 = 0;
          v22 = __CFADD__(v68, 10 * v24);
          v24 = v68 + 10 * v24;
          --v66;
          ++v67;
          if (v22)
            goto LABEL_36;
        }
        if (v24 == -1)
          v11 = 0;
        else
          v11 = v24 & 0xFFFFFF00;
        if (v24 == -1)
          LOBYTE(v10) = 0;
        else
          LOBYTE(v10) = v24;
        if (v24 == -1)
          v25 = 0;
        else
          v25 = 0x100000000;
LABEL_36:
        v13 = v10;
        if ((v25 & 0x100000000) == 0)
          goto LABEL_37;
LABEL_9:
        v14 = v13 | v11;
        v15 = *(_QWORD *)(a1 + 24);
        if (*(_DWORD *)(v15 + 20) > v14)
        {
          v16 = *(_DWORD **)(*(_QWORD *)(v15 + 8) + 8 * v14);
          ++v16[2];
          v17 = WebCore::wrap<WebCore::CSSStyleValue>(a2, *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), (uint64_t)v16);
          if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
          {
            v18 = 0;
          }
          else
          {
            *(_QWORD *)a4 = v17;
            *(_DWORD *)(a4 + 16) = 2;
            *(_QWORD *)(a4 + 32) = a1;
            v18 = 1;
            *(_BYTE *)(a4 + 49) = 1;
          }
          if (v16[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v16 + 16))(v16);
          else
            --v16[2];
          return v18;
        }
        goto LABEL_37;
      }
LABEL_34:
      v11 = 0;
      LOBYTE(v10) = 0;
    }
    else
    {
      v11 = 0;
    }
    v25 = 0;
    goto LABEL_36;
  }
LABEL_37:
  if (!(a3 >> 4))
    goto LABEL_50;
  v26 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
  if (((a3 >> 4) & ~*(_DWORD *)(v26 + 0x20)) != 0)
    goto LABEL_50;
  v27 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x58);
  if (!v27)
  {
    v38 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x40);
    if (!v38 || *(_BYTE *)(v38 + 5) != 1 && *(_DWORD *)(v38 + 80) < 2u)
      goto LABEL_50;
    v27 = JSC::Structure::materializePropertyTable((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), *(JSC::VM **)(a2 + 56));
    if (!v27)
      goto LABEL_50;
  }
  if (!*(_DWORD *)(v27 + 24))
    goto LABEL_50;
  v28 = *(_QWORD *)(v27 + 16);
  v29 = v28 & 0xFFFFFFFFFFFFFFFELL;
  v30 = *(unsigned int *)(v27 + 8);
  v31 = *(_DWORD *)(a3 + 16);
  if ((v28 & 1) != 0)
  {
    if ((v31 & 0x20) != 0)
      v31 = *(_DWORD *)(a3 + 32);
    v32 = *(_DWORD *)(v27 + 12);
    v33 = (v31 >> 8) & *(_QWORD *)&v32;
    v34 = *(unsigned __int8 *)(v29 + v33);
    if (!*(_BYTE *)(v29 + v33))
      goto LABEL_50;
    v35 = v29 + v30;
    v36 = 1;
    while (1)
    {
      v37 = *(_QWORD *)(v35 + 8 * (v34 - 1));
      if (a3 == (v37 & 0xFFFFFFFFFFFFLL))
        break;
      v33 = ((_DWORD)v33 + v36) & v32;
      v34 = *(unsigned __int8 *)(v29 + v33);
      ++v36;
      if (!*(_BYTE *)(v29 + v33))
        goto LABEL_50;
    }
    v48 = (v37 >> 16) & 0xFF00000000 | HIBYTE(v37);
  }
  else
  {
    if ((v31 & 0x20) != 0)
      v31 = *(_DWORD *)(a3 + 32);
    v53 = *(_DWORD *)(v27 + 12);
    v54 = v53 & (v31 >> 8);
    v55 = *(_DWORD *)(v29 + 4 * v54);
    if (!v55)
      goto LABEL_50;
    v56 = v29 + 4 * v30;
    v57 = 1;
    while (1)
    {
      v58 = (v55 - 1);
      if (*(_QWORD *)(v56 + 16 * v58) == a3)
        break;
      v54 = (v54 + v57) & v53;
      v55 = *(_DWORD *)(v29 + 4 * v54);
      ++v57;
      if (!v55)
        goto LABEL_50;
    }
    v48 = *(unsigned int *)(v56 + 16 * v58 + 8) | ((unint64_t)*(unsigned __int8 *)(v56 + 16 * v58 + 12) << 32);
  }
  if ((_DWORD)v48 != -1)
  {
    if ((int)v48 > 63)
    {
      v49 = *(_QWORD *)(a1 + 8) - 8;
      v50 = 0x3F00000000 - (v48 << 32);
    }
    else
    {
      v49 = a1 + 16;
      v50 = v48 << 32;
    }
    v51 = *(_QWORD *)(v49 + (v50 >> 29));
    if ((v51 & 0xFFFE000000000002) != 0)
      goto LABEL_75;
    v52 = *(unsigned __int8 *)(v51 + 5);
    if (v52 == 6)
    {
      v59 = *(_DWORD *)(v26 + 16) & 3;
      v61 = *(_QWORD *)(v51 + 8);
      v60 = *(_QWORD *)(v51 + 16);
      if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v51 & 0xFFFFFFFE) + 0x4C))
      {
        v63 = *(_QWORD *)(v51 + 24);
        v62 = *(_QWORD *)(v51 + 32);
        *(_QWORD *)a4 = v61;
        *(_QWORD *)(a4 + 8) = v60;
        *(_DWORD *)(a4 + 16) = HIDWORD(v48);
        *(_QWORD *)(a4 + 32) = a1;
        *(_BYTE *)(a4 + 49) = 3;
        v18 = 1;
        if (v59 != 2)
          *(_BYTE *)(a4 + 48) = 1;
        *(_BYTE *)(a4 + 51) = 1;
        *(_QWORD *)(a4 + 72) = v63;
        *(_QWORD *)(a4 + 80) = v62;
      }
      else
      {
        *(_QWORD *)a4 = v61;
        *(_QWORD *)(a4 + 8) = v60;
        *(_DWORD *)(a4 + 16) = HIDWORD(v48);
        *(_QWORD *)(a4 + 32) = a1;
        v18 = 1;
        *(_BYTE *)(a4 + 49) = 3;
        if (v59 != 2)
          *(_BYTE *)(a4 + 48) = 1;
      }
      return v18;
    }
    if (v52 != 5)
    {
LABEL_75:
      *(_QWORD *)a4 = v51;
      *(_QWORD *)(a4 + 32) = a1;
      *(_DWORD *)(a4 + 16) = HIDWORD(v48);
      *(_DWORD *)(a4 + 20) = v48;
      v18 = 1;
      *(_WORD *)(a4 + 48) = 257;
      return v18;
    }
    JSC::JSObject::fillGetterPropertySlot();
    return 1;
  }
LABEL_50:
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
    return 1;
  v39 = *(_DWORD *)(a3 + 16);
  if ((v39 & 0x20) != 0)
    return 0;
  v40 = *(_BYTE **)(a3 + 8);
  v41 = *(unsigned int *)(a3 + 4);
  if ((v39 & 4) != 0)
  {
    if (!(_DWORD)v41 || (v64 = *v40 - 48, v64 > 9) || v41 >= 2 && *v40 == 48)
    {
LABEL_106:
      v65 = 0;
    }
    else
    {
      v69 = v41 - 1;
      v70 = v40 + 1;
      while (v69)
      {
        if (v64 > 0x19999999)
          goto LABEL_106;
        v71 = *v70 - 48;
        if (v71 > 9)
          goto LABEL_106;
        v65 = 0;
        v22 = __CFADD__(v71, 10 * v64);
        v64 = v71 + 10 * v64;
        --v69;
        ++v70;
        if (v22)
          goto LABEL_107;
      }
      v65 = 0x100000000;
      if (v64 == -1)
        v65 = 0;
    }
LABEL_107:
    if ((v65 & 0x100000000) == 0)
      return 0;
  }
  else
  {
    if ((_DWORD)v41
      && (v42 = *(unsigned __int16 *)v40 - 48, v42 <= 9)
      && (v41 < 2 || *(_WORD *)v40 != 48))
    {
      v45 = (unsigned __int16 *)(v40 + 2);
      v46 = v41 - 1;
      while (v46)
      {
        if (v42 <= 0x19999999)
        {
          v47 = *v45 - 48;
          if (v47 <= 9)
          {
            v22 = __CFADD__(v47, 10 * v42);
            v42 = v47 + 10 * v42;
            ++v45;
            --v46;
            if (!v22)
              continue;
          }
        }
        goto LABEL_57;
      }
      v23 = v42 == -1;
      v43 = 0x100000000;
      if (v23)
        v43 = 0;
    }
    else
    {
LABEL_57:
      v43 = 0;
    }
    if ((v43 & 0x100000000) == 0)
      return 0;
  }
  return JSC::JSObject::getOwnPropertySlotByIndex();
}

unint64_t WebCore::jsCSSNumericArrayConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSNumericArrayPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericArray>,(WebCore::DOMConstructorID)400>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSNumericArray_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 20);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::JSCSSNumericArrayOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSCSSNumericArrayOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v24;
  _DWORD **v25;
  uint64_t v26;
  _DWORD *v27;
  WTF *v28;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = (~(v3 << 32) + v3) ^ ((unint64_t)(~(v3 << 32) + v3) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_QWORD *)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_QWORD *)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = *(unsigned int *)(v3 + 20);
    if ((_DWORD)v24)
    {
      v25 = *(_DWORD ***)(v3 + 8);
      v26 = 8 * v24;
      do
      {
        v27 = *v25;
        *v25 = 0;
        if (v27)
        {
          if (v27[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v27 + 16))(v27);
          else
            --v27[2];
        }
        ++v25;
        v26 -= 8;
      }
      while (v26);
    }
    v28 = *(WTF **)(v3 + 8);
    if (v28)
    {
      *(_QWORD *)(v3 + 8) = 0;
      *(_DWORD *)(v3 + 16) = 0;
      WTF::fastFree(v28, a2);
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::wrap<WebCore::CSSNumericArray>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t SlowCase;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  WTF *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *Allocator;
  unint64_t v52;
  _QWORD *v53;
  WTF *v54;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return SlowCase;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSCSSNumericArray::s_info + ~((_QWORD)&WebCore::JSCSSNumericArray::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSNumericArray::s_info + ~((_QWORD)&WebCore::JSCSSNumericArray::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSCSSNumericArray::s_info)
    {
LABEL_14:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_16;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSCSSNumericArray::s_info)
          goto LABEL_14;
      }
    }
  }
  v24 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSCSSNumericArrayPrototype::createStructure(v24, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCSSNumericArrayPrototype::create((WebCore::JSCSSNumericArrayPrototype *)v24, Structure, v26, v27);
  v29 = WebCore::JSCSSNumericArray::createStructure(v24, a2, v28);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCSSNumericArray::s_info);
LABEL_16:
  v30 = *(_QWORD *)(a2 + 56);
  v31 = *(_QWORD *)(v30 + 41456);
  v32 = *(_QWORD *)(v31 + 23536);
  v33 = *(_QWORD **)(v32 + 3264);
  if (v33)
    goto LABEL_36;
  v34 = *(_QWORD *)(v31 + 22648);
  if (__ldaxr((unsigned __int8 *)v34))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v34))
  {
    goto LABEL_21;
  }
  MEMORY[0x19AEA534C](v34);
LABEL_21:
  v36 = *(_QWORD *)(v34 + 2824);
  if (!*(_QWORD *)(v36 + 3264))
  {
    v37 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v54, "IsoSpace T");
    v53 = 0;
    MEMORY[0x19AEA3204](v37, &v54, v30 + 192, v30 + 1872, 32, 8, &v53);
    v39 = (uint64_t)v53;
    v53 = 0;
    if (v39)
      (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
    v40 = v54;
    v54 = 0;
    if (v40)
    {
      if (*(_DWORD *)v40 == 1)
        WTF::fastFree(v40, v38);
      else
        --*(_DWORD *)v40;
    }
    v41 = *(_QWORD *)(v36 + 3264);
    *(_QWORD *)(v36 + 3264) = v37;
    if (v41)
      (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
  }
  v33 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v43 = *(_QWORD *)(v32 + 3264);
  *(_QWORD *)(v32 + 3264) = v33;
  if (v43)
  {
    v44 = (WTF *)MEMORY[0x19AEA3528](v43, v42);
    WTF::fastFree(v44, v45);
  }
  v46 = __ldxr((unsigned __int8 *)v34);
  if (v46 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v34))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v34);
LABEL_36:
  SlowCase = v33[3];
  if (SlowCase >= v33[4])
  {
    SlowCase = v33[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_38;
    }
    v52 = *(_QWORD *)(SlowCase + 8) ^ v33[6];
    v33[4] = SlowCase + HIDWORD(v52);
    v33[5] = SlowCase + (int)v52;
  }
  v33[3] = SlowCase + 32;
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v30 + 755))
    __dmb(0xAu);
  v47 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE334E18 & 1) == 0)
  {
    qword_1EE334E10 = (uint64_t)&off_1E3238568;
    byte_1EE334E18 = 1;
  }
  v54 = a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  Allocator = *(_QWORD **)(v49 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334E10;
  Allocator[2] = v47;
  v53 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v47 + 32), (uint64_t *)&v54, (uint64_t *)&v53);
  if (v53)
    v53[1] = 3;
  return SlowCase;
}

JSC::JSValue *JSC::JSValue::toWTFString@<X0>(JSC::JSValue *this@<X0>, JSC::JSGlobalObject *a2@<X1>, JSC::JSRopeString **a3@<X8>)
{
  JSC::JSRopeString *v4;
  JSC::JSRopeString *v5;

  v4 = *(JSC::JSRopeString **)this;
  if ((*(_QWORD *)this & 0xFFFE000000000002) != 0 || *((_BYTE *)v4 + 5) != 2)
    return (JSC::JSValue *)JSC::JSValue::toWTFStringSlowCase(this, a2);
  v5 = (JSC::JSRopeString *)*((_QWORD *)v4 + 1);
  if ((v5 & 1) != 0)
  {
    this = (JSC::JSValue *)JSC::JSRopeString::resolveRope(*(JSC::JSRopeString **)this, a2);
    v5 = *(JSC::JSRopeString **)this;
  }
  if (v5)
    *(_DWORD *)v5 += 2;
  *a3 = v5;
  return this;
}

_DWORD *WebCore::JSCSSStyleValue::destroy(WebCore::JSCSSStyleValue *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSCSSNumericValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSNumericValue::createPrototype(WebCore::JSCSSNumericValue *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSStyleValue::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSStyleValue::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSStyleValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSStyleValuePrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSStyleValue::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSStyleValue::s_info);
  }
  v18 = WebCore::JSCSSNumericValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSNumericValuePrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSNumericValuePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSStyleValue::prototype(WebCore::JSCSSStyleValue *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSStyleValue::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSStyleValue::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSStyleValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSStyleValuePrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSStyleValue::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSStyleValue::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

unint64_t WebCore::JSCSSNumericValuePrototype::create(WebCore::JSCSSNumericValuePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<11u>(this, (uint64_t)&WebCore::JSCSSNumericValue::s_info, (uint64_t)&WebCore::JSCSSNumericValuePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericValue>,(WebCore::DOMConstructorID)375>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  BOOL v33;
  char **v34;
  BOOL v35;
  WTF::StringImpl *v37;
  int v38;
  WTF::StringImpl *v39;
  unint64_t v41;
  unint64_t v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  int v45;
  int v46;
  uint64_t v47;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3000);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(a1, a2);
  v7 = v6;
  LODWORD(v43) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v41 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v41);
    v5[2] = SlowCase + (int)v41;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v43, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericValue>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v42 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v42);
    v10[2848] = v2 + (int)v42;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v43 = 0;
  v44 = v2;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v43);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v43);
  v14 = v43;
  v43 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v43 = 0;
  v44 = v2;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v43);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (!v18)
    goto LABEL_21;
  v19 = *(_DWORD *)(v18 - 8);
  v20 = ((unint64_t)&WebCore::JSCSSNumericValue::s_info + ~((_QWORD)&WebCore::JSCSSNumericValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSNumericValue::s_info + ~((_QWORD)&WebCore::JSCSSNumericValue::s_info << 32)) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(char ***)(v18 + 16 * v23);
  if (v24 != &WebCore::JSCSSNumericValue::s_info)
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(char ***)(v18 + 16 * v23);
      ++v25;
      if (v24 == &WebCore::JSCSSNumericValue::s_info)
        goto LABEL_20;
    }
    goto LABEL_21;
  }
LABEL_20:
  v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
  if (!v26)
  {
LABEL_21:
    Prototype = (JSC::JSCell *)WebCore::JSCSSNumericValue::createPrototype((WebCore::JSCSSNumericValue *)a1, (JSC::VM *)a2, v16);
    Structure = WebCore::JSCSSNumericValue::createStructure((uint64_t *)a1, a2, Prototype);
    v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSNumericValue::s_info);
  }
  v29 = *(_QWORD *)(v26 + 48);
  v43 = 0;
  v44 = v2;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v43);
  if ((*(_BYTE *)((16 * *(unsigned int *)v2) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v2, (JSC::VM *)a1);
  WTF::AtomStringImpl::addLiteral();
  v30 = v43;
  JSC::reifyStaticProperty((JSC::VM *)a1, (uint64_t)&WebCore::JSCSSNumericValue::s_info, (unint64_t *)&v43, (uint64_t)&WebCore::JSCSSNumericValueConstructorTableValues, (unsigned __int8 *)v2);
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v31);
    else
      *(_DWORD *)v30 -= 2;
  }
  v32 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v33 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v34 = (char **)(16 * v32);
  if ((_DWORD)v32)
    v35 = v34 == &WebCore::JSDOMWindowBase::s_info;
  else
    v35 = 1;
  if (!v35)
  {
    do
    {
      v34 = (char **)v34[2];
      v33 = v34 != 0;
    }
    while (v34 != &WebCore::JSDOMWindowBase::s_info && v34 != 0);
  }
  if (!v33)
  {
    WTF::AtomStringImpl::addLiteral();
    v37 = v43;
    v38 = *(_DWORD *)(a1 + 93124);
    *(_DWORD *)(a1 + 93124) = 1;
    LODWORD(v43) = -1;
    WORD2(v43) = 1;
    JSC::JSObject::deleteProperty();
    *(_DWORD *)(a1 + 93124) = v38;
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, v39);
      else
        *(_DWORD *)v37 -= 2;
    }
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3000) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSNumericValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSNumericValuePrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericValue>,(WebCore::DOMConstructorID)375>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCSSStyleValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSCSSOKLCH>::construct(JSC::VM **a1, uint64_t a2)
{
  uint64_t v2;
  JSC::JSGlobalObject *v3;
  JSC::VM *v4;
  uint64_t v6;
  int v7;
  int v8;
  WTF *v9;
  int v10;
  unint64_t SlowCase;
  int v12;
  WebCore::JSDOMGlobalObject *v13;
  JSC::VM *v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  WebCore::JSCSSColorValue *v24;
  JSC::JSCell *v25;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v27;
  JSC::Structure *v28;
  JSC::JSCell *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  WTF *v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  _BYTE *v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  JSC::VM *v52;
  JSC::JSCell *v53;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v55;
  JSC::JSGlobalObject *v56;
  JSC::VM *v57;
  JSC::JSObject *v58;
  JSC::Structure *v59;
  JSC::VM *FunctionRealm;
  uint64_t v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  JSC::JSGlobalObject *v67;
  int v68;
  JSC::JSCell *v69;
  unint64_t v70;
  WebCore::JSDOMGlobalObject *v71;
  JSC::Structure *v72;
  JSC::JSCell *v73;
  uint64_t v74;
  unint64_t SubclassStructure;
  unint64_t v77;
  uint64_t v78;
  _QWORD *Allocator;
  JSValue v80;
  WTF::StringImpl *v81;
  WTF::StringImpl *v82;
  JSValue v83;
  unint64_t v84;
  JSC::VM *v85;
  JSC::InternalFunction *v86;
  char v87[8];
  int v88;
  char v89[8];
  int v90;
  _QWORD *v91;
  int v92;
  int v93[2];
  WTF::StringImpl *v94;
  int v95;
  char v96;
  WTF *v97;
  WTF::StringImpl *v98;
  char v99[8];
  uint64_t v100;
  unsigned int v101;
  int v102;
  char v103[8];
  uint64_t v104;
  unsigned int v105;
  int v106;
  char v107[8];
  uint64_t v108;
  unsigned int v109;
  int v110;
  char v111[8];
  uint64_t v112;
  unsigned int v113;
  int v114;
  uint64_t v115;

  v3 = (JSC::JSGlobalObject *)a1;
  v115 = *MEMORY[0x1E0C80C00];
  v4 = a1[7];
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 2)
  {
    v80.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)a1, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException(v4, v3, v80);
  }
  v6 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert((JSC::JSGlobalObject *)a1, *(_QWORD *)(a2 + 48), (uint64_t)v111);
  v7 = v114;
  if (!v114)
  {
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, *(_QWORD *)(a2 + 56), (uint64_t)v107);
    v8 = v110;
    if (v110)
    {
      SlowCase = 0;
LABEL_98:
      if (v8 != -1)
        ((void (*)(char *, uint64_t *))off_1E3238938[v8])(v103, &v108);
      v7 = v114;
      goto LABEL_101;
    }
    v9 = *(WTF **)(a2 + 64);
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, (unint64_t)v9, (uint64_t)v103);
    v10 = v106;
    if (v106)
    {
      SlowCase = 0;
LABEL_95:
      if (v10 != -1)
        ((void (*)(char *, uint64_t *))off_1E3238938[v10])(v99, &v104);
      v8 = v110;
      goto LABEL_98;
    }
    v86 = v3;
    if ((unint64_t)(*(int *)(a2 + 32) - 5) >= 0xFFFFFFFFFFFFFFFCLL
      || (SlowCase = *(_QWORD *)(a2 + 72), SlowCase == 10))
    {
      v100 = 0x3FF0000000000000;
      v101 = 0;
      v102 = 0;
      SlowCase = 10;
    }
    else
    {
      WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, *(_QWORD *)(a2 + 72), (uint64_t)v99);
      v12 = v102;
      if (v102)
      {
        SlowCase = 0;
LABEL_92:
        if (v12 != -1)
          ((void (*)(int *, uint64_t *))off_1E3238938[v12])(v93, &v100);
        v10 = v106;
        goto LABEL_95;
      }
    }
    if (!v114)
    {
      LOBYTE(v97) = 0;
      LODWORD(v98) = -1;
      v2 = v113;
      v3 = (JSC::JSGlobalObject *)off_1E3238908;
      if (v113 != -1)
      {
        ((void (*)(int *, WTF **, uint64_t *))off_1E3238908[v113])(v93, &v97, &v112);
        LODWORD(v98) = v2;
      }
      if (!v110)
      {
        LOBYTE(v91) = 0;
        v92 = -1;
        v2 = v109;
        if (v109 != -1)
        {
          ((void (*)(int *, _QWORD **, uint64_t *))off_1E3238908[v109])(v93, &v91, &v108);
          v92 = v2;
        }
        if (!v106)
        {
          v89[0] = 0;
          v90 = -1;
          v2 = v105;
          if (v105 != -1)
          {
            ((void (*)(int *, char *, uint64_t *))off_1E3238908[v105])(v93, v89, &v104);
            v90 = v2;
          }
          if (!v102)
          {
            v87[0] = 0;
            v88 = -1;
            v2 = v101;
            if (v101 != -1)
            {
              ((void (*)(int *, char *, uint64_t *))off_1E3238908[v101])(v93, v87, &v100);
              v88 = v2;
            }
            WebCore::CSSOKLCH::create((uint64_t)&v97, (uint64_t)&v91, (uint64_t)v89, (uint64_t)v87, (uint64_t)v93);
            if (v88 != -1)
              ((void (*)(char *, char *))off_1E32388E8[v88])(&v96, v87);
            if (v90 != -1)
              ((void (*)(char *, char *))off_1E32388E8[v90])(v87, v89);
            if (v92 != -1)
              ((void (*)(char *, _QWORD **))off_1E32388E8[v92])(v89, &v91);
            if ((_DWORD)v98 != -1)
              ((void (*)(_QWORD **, WTF **))off_1E32388E8[v98])(&v91, &v97);
            if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
              goto LABEL_134;
            v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSOKLCH::s_info;
            if (!v95)
            {
              v85 = v4;
              v14 = *(JSC::VM **)(v6 + 40);
              v9 = *(WTF **)v93;
              *(_QWORD *)v93 = 0;
              if (*(uint64_t (***)())v9 != &off_1E339F7D0)
              {
                __break(0xC471u);
                JUMPOUT(0x1948D28BCLL);
              }
              v15 = *((_QWORD *)v14 + 412);
              if (v15)
              {
                v16 = *(_DWORD *)(v15 - 8);
                v17 = ((unint64_t)&WebCore::JSCSSOKLCH::s_info + ~((_QWORD)&WebCore::JSCSSOKLCH::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSOKLCH::s_info + ~((_QWORD)&WebCore::JSCSSOKLCH::s_info << 32)) >> 22);
                v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
                v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
                v20 = v16 & ((v19 >> 31) ^ v19);
                v21 = *(char ***)(v15 + 16 * v20);
                if (v21 == &WebCore::JSCSSOKLCH::s_info)
                {
LABEL_37:
                  v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
                  if (v23)
                    goto LABEL_39;
                }
                else
                {
                  v22 = 1;
                  while (v21)
                  {
                    v20 = ((_DWORD)v20 + v22) & v16;
                    v21 = *(char ***)(v15 + 16 * v20);
                    ++v22;
                    if (v21 == &WebCore::JSCSSOKLCH::s_info)
                      goto LABEL_37;
                  }
                }
              }
              v24 = (WebCore::JSCSSColorValue *)*((_QWORD *)v14 + 7);
              v25 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v24, v14, v13);
              Structure = WebCore::JSCSSOKLCHPrototype::createStructure((uint64_t *)v24, (uint64_t)v14, v25);
              *(_DWORD *)(Structure + 16) |= 0x80000u;
              v29 = (JSC::JSCell *)WebCore::JSCSSOKLCHPrototype::create(v24, Structure, v27, v28);
              v30 = WebCore::JSCSSOKLCH::createStructure((uint64_t *)v24, (uint64_t)v14, v29);
              v23 = WebCore::cacheDOMStructure((JSCell *)v14, v30, (uint64_t)&WebCore::JSCSSOKLCH::s_info);
LABEL_39:
              v31 = *((_QWORD *)v14 + 7);
              v32 = *(_QWORD *)(v31 + 41456);
              v33 = *(_QWORD *)(v32 + 23536);
              v34 = *(_QWORD **)(v33 + 3176);
              if (v34)
                goto LABEL_59;
              v35 = *(_QWORD *)(v32 + 22648);
              if (__ldaxr((unsigned __int8 *)v35))
              {
                __clrex();
              }
              else if (!__stxr(1u, (unsigned __int8 *)v35))
              {
                goto LABEL_44;
              }
              MEMORY[0x19AEA534C](v35);
LABEL_44:
              v37 = *(_QWORD *)(v35 + 2824);
              if (!*(_QWORD *)(v37 + 3176))
              {
                v38 = WTF::fastMalloc((WTF *)0xF8);
                WTF::CString::CString((WTF::CString *)&v97, "IsoSpace T");
                v91 = 0;
                MEMORY[0x19AEA3204](v38, &v97, v31 + 192, v31 + 1872, 32, 8, &v91);
                v40 = (uint64_t)v91;
                v91 = 0;
                if (v40)
                  (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
                v41 = v97;
                v97 = 0;
                if (v41)
                {
                  if (*(_DWORD *)v41 == 1)
                    WTF::fastFree(v41, v39);
                  else
                    --*(_DWORD *)v41;
                }
                v42 = *(_QWORD *)(v37 + 3176);
                *(_QWORD *)(v37 + 3176) = v38;
                if (v42)
                  (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
              }
              v34 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
              JSC::GCClient::IsoSubspace::IsoSubspace();
              v43 = *(_QWORD *)(v33 + 3176);
              *(_QWORD *)(v33 + 3176) = v34;
              if (v43)
              {
                v44 = (WTF *)MEMORY[0x19AEA3528]();
                WTF::fastFree(v44, v45);
              }
              v46 = __ldxr((unsigned __int8 *)v35);
              if (v46 == 1)
              {
                if (!__stlxr(0, (unsigned __int8 *)v35))
                {
LABEL_59:
                  SlowCase = v34[3];
                  if (SlowCase >= v34[4])
                  {
                    SlowCase = v34[5];
                    if ((SlowCase & 1) != 0)
                    {
                      JSC::sanitizeStackForVM();
                      SlowCase = JSC::LocalAllocator::allocateSlowCase();
                    }
                    else
                    {
                      v84 = *(_QWORD *)(SlowCase + 8) ^ v34[6];
                      v34[4] = SlowCase + HIDWORD(v84);
                      v34[5] = SlowCase + (int)v84;
                      v34[3] = SlowCase + 32;
                    }
                  }
                  else
                  {
                    v34[3] = SlowCase + 32;
                  }
                  *(_DWORD *)SlowCase = 0;
                  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
                  *(_QWORD *)(SlowCase + 24) = v9;
                  v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSOKLCH::s_info;
                  if (*(_BYTE *)(v31 + 755))
                    __dmb(0xAu);
                  v2 = *((_QWORD *)v14 + 415);
                  v47 = &unk_1EE2DD000;
                    goto LABEL_64;
                  goto LABEL_144;
                }
              }
              else
              {
                __clrex();
              }
              WTF::Lock::unlockSlow((WTF::Lock *)v35);
              goto LABEL_59;
            }
            if (v95 == 1)
            {
              v81 = (WTF::StringImpl *)LOBYTE(v93[0]);
              LOBYTE(v97) = v93[0];
              v82 = v94;
              v94 = 0;
              v98 = v82;
              if (!*((_QWORD *)v4 + 2))
              {
                v83.super.isa = (Class)WebCore::createDOMException(v86, (JSC::JSGlobalObject *)LOBYTE(v93[0]), (JSC::JSGlobalObject *)&v98);
                JSC::VM::throwException(v4, v86, v83);
                v82 = v98;
              }
              v98 = 0;
              if (v82)
              {
                if (*(_DWORD *)v82 == 2)
                  WTF::StringImpl::destroy(v82, v81);
                else
                  *(_DWORD *)v82 -= 2;
              }
              SlowCase = 0;
LABEL_74:
              if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
              {
LABEL_134:
                SlowCase = 0;
LABEL_89:
                if (v95 != -1)
                  ((void (*)(WTF **, int *))off_1E3238928[v95])(&v97, v93);
                v12 = v102;
                goto LABEL_92;
              }
              v52 = v4;
              v53 = *(JSC::JSCell **)(a2 + 40);
              if (((unint64_t)v53 & 0xFFFE000000000002) != 0
                || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v53)) == 0
                || (v56 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
                || (v57 = (JSC::VM *)*((_QWORD *)v86 + 7),
                    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(v86, Object, v55),
                    *((_DWORD *)v57 + 20))
                && (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) != 0)
              {
LABEL_88:
                if (!*((_DWORD *)v52 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v52) & 1) == 0)
                  goto LABEL_89;
                goto LABEL_134;
              }
              v61 = *((_QWORD *)FunctionRealm + 412);
              if (v61)
              {
                v62 = *(_DWORD *)(v61 - 8);
                v63 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
                v64 = 9 * ((v63 + ~(v63 << 13)) ^ ((v63 + ~(v63 << 13)) >> 8));
                v65 = (v64 ^ (v64 >> 15)) + ~((v64 ^ (v64 >> 15)) << 27);
                v66 = v62 & ((v65 >> 31) ^ v65);
                v67 = *(JSC::JSGlobalObject **)(v61 + 16 * v66);
                if (v67 == v3)
                {
LABEL_84:
                  v58 = *(JSC::JSObject **)(v61 + 16 * v66 + 8);
                  if (v58)
                  {
LABEL_86:
                    SubclassStructure = JSC::InternalFunction::createSubclassStructure(v86, v56, v58, v59);
                    if (!*((_DWORD *)v57 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) == 0)
                      JSC::JSObject::setStructure((JSCell *)SlowCase, v57, SubclassStructure);
                    goto LABEL_88;
                  }
                }
                else
                {
                  v68 = 1;
                  while (v67)
                  {
                    v66 = ((_DWORD)v66 + v68) & v62;
                    v67 = *(JSC::JSGlobalObject **)(v61 + 16 * v66);
                    ++v68;
                    if (v67 == v3)
                      goto LABEL_84;
                  }
                }
              }
              v69 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v57, FunctionRealm, v58);
              v70 = WebCore::JSCSSOKLCHPrototype::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v69);
              *(_DWORD *)(v70 + 16) |= 0x80000u;
              v73 = (JSC::JSCell *)WebCore::JSCSSOKLCHPrototype::create(v57, v70, v71, v72);
              v74 = WebCore::JSCSSOKLCH::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v73);
              v58 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v74, (uint64_t)&WebCore::JSCSSOKLCH::s_info);
              goto LABEL_86;
            }
          }
        }
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_144:
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner = (uint64_t)&off_1E324B170;
    v47[3656] = 1;
LABEL_64:
    v4 = v85;
    if (*(_DWORD *)(v2 + 48))
    {
      v97 = v9;
      if ((SlowCase & 8) != 0)
        v77 = (SlowCase - 112) | 1;
      else
        v77 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v77 & 1) != 0)
        v78 = v77 + 47;
      else
        v78 = *(_QWORD *)v77 + 32;
      Allocator = *(_QWORD **)(v78 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v78 + 16) = *Allocator;
      *Allocator = SlowCase;
      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      Allocator[2] = v2;
      v91 = Allocator;
      JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v2 + 32), (uint64_t *)&v97, (uint64_t *)&v91);
      if (v91)
        v91[1] = 3;
      v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSOKLCH::s_info;
    }
    else
    {
      if ((SlowCase & 8) != 0)
        v48 = (SlowCase - 112) | 1;
      else
        v48 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v48 & 1) != 0)
        v49 = v48 + 47;
      else
        v49 = *(_QWORD *)v48 + 32;
      v50 = *(_QWORD **)(v49 + 16);
      if (!v50)
        v50 = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v49 + 16) = *v50;
      *v50 = SlowCase;
      v50[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      v50[2] = v2;
      v51 = *((_QWORD *)v9 + 2);
      *((_QWORD *)v9 + 2) = v50;
      if (v51)
        *(_QWORD *)(v51 + 8) = 3;
    }
    goto LABEL_74;
  }
  SlowCase = 0;
LABEL_101:
  if (v7 != -1)
    ((void (*)(char *, uint64_t *))off_1E3238938[v7])(v107, &v112);
  return SlowCase;
}

uint64_t WebCore::JSCSSOKLCH::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSOKLCHPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSOKLCHPrototype::create(WebCore::JSCSSOKLCHPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCSSOKLCH::s_info, &WebCore::JSCSSOKLCHPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLCH>,(WebCore::DOMConstructorID)389>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3112);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSCSSOKLCH>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000003, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSOKLCH::s_info + ~((_QWORD)&WebCore::JSCSSOKLCH::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSOKLCH::s_info + ~((_QWORD)&WebCore::JSCSSOKLCH::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSOKLCH::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSOKLCH::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype((WebCore::JSCSSColorValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSOKLCHPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSCSSOKLCHPrototype::create((WebCore::JSCSSOKLCHPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSCSSOKLCH::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSCSSOKLCH::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3112) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSOKLCHConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSOKLCHPrototype::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLCH>,(WebCore::DOMConstructorID)389>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSOKLCH_l(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 48);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSOKLCH_l(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 40);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSOKLCH_l(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSOKLCH::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSOKLCH::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E3238908[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setL(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E32388E8[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E3238938[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSOKLCH_c(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 64);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSOKLCH_c(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 56);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSOKLCH_c(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSOKLCH::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSOKLCH::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E3238908[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setC(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E32388E8[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E3238938[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSOKLCH_h(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 80);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSOKLCH_h(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue15toCSSColorAngleERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_15toCSSColorAngleESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 72);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSOKLCH_h(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSOKLCH::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSOKLCH::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E3238908[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setH(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E32388E8[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E3238938[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSOKLCH_alpha(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 96);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSOKLCH_alpha(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 88);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSOKLCH_alpha(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSOKLCH::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSOKLCH::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E3238908[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setAlpha(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E32388E8[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E3238938[v11])(&v18, &v25);
  return v12;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSCSSOKLab>::construct(JSC::VM **a1, uint64_t a2)
{
  uint64_t v2;
  JSC::JSGlobalObject *v3;
  JSC::VM *v4;
  uint64_t v6;
  int v7;
  int v8;
  WTF *v9;
  int v10;
  unint64_t SlowCase;
  int v12;
  WebCore::JSDOMGlobalObject *v13;
  JSC::VM *v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  WebCore::JSCSSColorValue *v24;
  JSC::JSCell *v25;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v27;
  JSC::Structure *v28;
  JSC::JSCell *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  WTF *v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  _BYTE *v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  JSC::VM *v52;
  JSC::JSCell *v53;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v55;
  JSC::JSGlobalObject *v56;
  JSC::VM *v57;
  JSC::JSObject *v58;
  JSC::Structure *v59;
  JSC::VM *FunctionRealm;
  uint64_t v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  JSC::JSGlobalObject *v67;
  int v68;
  JSC::JSCell *v69;
  unint64_t v70;
  WebCore::JSDOMGlobalObject *v71;
  JSC::Structure *v72;
  JSC::JSCell *v73;
  uint64_t v74;
  unint64_t SubclassStructure;
  unint64_t v77;
  uint64_t v78;
  _QWORD *Allocator;
  JSValue v80;
  WTF::StringImpl *v81;
  WTF::StringImpl *v82;
  JSValue v83;
  unint64_t v84;
  JSC::VM *v85;
  JSC::InternalFunction *v86;
  char v87[8];
  int v88;
  char v89[8];
  int v90;
  _QWORD *v91;
  int v92;
  int v93[2];
  WTF::StringImpl *v94;
  int v95;
  char v96;
  WTF *v97;
  WTF::StringImpl *v98;
  char v99[8];
  uint64_t v100;
  unsigned int v101;
  int v102;
  char v103[8];
  uint64_t v104;
  unsigned int v105;
  int v106;
  char v107[8];
  uint64_t v108;
  unsigned int v109;
  int v110;
  char v111[8];
  uint64_t v112;
  unsigned int v113;
  int v114;
  uint64_t v115;

  v3 = (JSC::JSGlobalObject *)a1;
  v115 = *MEMORY[0x1E0C80C00];
  v4 = a1[7];
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 2)
  {
    v80.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)a1, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException(v4, v3, v80);
  }
  v6 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert((JSC::JSGlobalObject *)a1, *(_QWORD *)(a2 + 48), (uint64_t)v111);
  v7 = v114;
  if (!v114)
  {
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, *(_QWORD *)(a2 + 56), (uint64_t)v107);
    v8 = v110;
    if (v110)
    {
      SlowCase = 0;
LABEL_98:
      if (v8 != -1)
        ((void (*)(char *, uint64_t *))off_1E3238938[v8])(v103, &v108);
      v7 = v114;
      goto LABEL_101;
    }
    v9 = *(WTF **)(a2 + 64);
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, (unint64_t)v9, (uint64_t)v103);
    v10 = v106;
    if (v106)
    {
      SlowCase = 0;
LABEL_95:
      if (v10 != -1)
        ((void (*)(char *, uint64_t *))off_1E3238938[v10])(v99, &v104);
      v8 = v110;
      goto LABEL_98;
    }
    v86 = v3;
    if ((unint64_t)(*(int *)(a2 + 32) - 5) >= 0xFFFFFFFFFFFFFFFCLL
      || (SlowCase = *(_QWORD *)(a2 + 72), SlowCase == 10))
    {
      v100 = 0x3FF0000000000000;
      v101 = 0;
      v102 = 0;
      SlowCase = 10;
    }
    else
    {
      WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(v3, *(_QWORD *)(a2 + 72), (uint64_t)v99);
      v12 = v102;
      if (v102)
      {
        SlowCase = 0;
LABEL_92:
        if (v12 != -1)
          ((void (*)(int *, uint64_t *))off_1E3238938[v12])(v93, &v100);
        v10 = v106;
        goto LABEL_95;
      }
    }
    if (!v114)
    {
      LOBYTE(v97) = 0;
      LODWORD(v98) = -1;
      v2 = v113;
      v3 = (JSC::JSGlobalObject *)off_1E3238908;
      if (v113 != -1)
      {
        ((void (*)(int *, WTF **, uint64_t *))off_1E3238908[v113])(v93, &v97, &v112);
        LODWORD(v98) = v2;
      }
      if (!v110)
      {
        LOBYTE(v91) = 0;
        v92 = -1;
        v2 = v109;
        if (v109 != -1)
        {
          ((void (*)(int *, _QWORD **, uint64_t *))off_1E3238908[v109])(v93, &v91, &v108);
          v92 = v2;
        }
        if (!v106)
        {
          v89[0] = 0;
          v90 = -1;
          v2 = v105;
          if (v105 != -1)
          {
            ((void (*)(int *, char *, uint64_t *))off_1E3238908[v105])(v93, v89, &v104);
            v90 = v2;
          }
          if (!v102)
          {
            v87[0] = 0;
            v88 = -1;
            v2 = v101;
            if (v101 != -1)
            {
              ((void (*)(int *, char *, uint64_t *))off_1E3238908[v101])(v93, v87, &v100);
              v88 = v2;
            }
            WebCore::CSSOKLab::create((uint64_t)&v97, (uint64_t)&v91, (uint64_t)v89, (uint64_t)v87, (uint64_t)v93);
            if (v88 != -1)
              ((void (*)(char *, char *))off_1E32388E8[v88])(&v96, v87);
            if (v90 != -1)
              ((void (*)(char *, char *))off_1E32388E8[v90])(v87, v89);
            if (v92 != -1)
              ((void (*)(char *, _QWORD **))off_1E32388E8[v92])(v89, &v91);
            if ((_DWORD)v98 != -1)
              ((void (*)(_QWORD **, WTF **))off_1E32388E8[v98])(&v91, &v97);
            if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
              goto LABEL_134;
            v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSOKLab::s_info;
            if (!v95)
            {
              v85 = v4;
              v14 = *(JSC::VM **)(v6 + 40);
              v9 = *(WTF **)v93;
              *(_QWORD *)v93 = 0;
              if (*(uint64_t (***)())v9 != &off_1E339F810)
              {
                __break(0xC471u);
                JUMPOUT(0x1948D47CCLL);
              }
              v15 = *((_QWORD *)v14 + 412);
              if (v15)
              {
                v16 = *(_DWORD *)(v15 - 8);
                v17 = ((unint64_t)&WebCore::JSCSSOKLab::s_info + ~((_QWORD)&WebCore::JSCSSOKLab::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSOKLab::s_info + ~((_QWORD)&WebCore::JSCSSOKLab::s_info << 32)) >> 22);
                v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
                v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
                v20 = v16 & ((v19 >> 31) ^ v19);
                v21 = *(char ***)(v15 + 16 * v20);
                if (v21 == &WebCore::JSCSSOKLab::s_info)
                {
LABEL_37:
                  v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
                  if (v23)
                    goto LABEL_39;
                }
                else
                {
                  v22 = 1;
                  while (v21)
                  {
                    v20 = ((_DWORD)v20 + v22) & v16;
                    v21 = *(char ***)(v15 + 16 * v20);
                    ++v22;
                    if (v21 == &WebCore::JSCSSOKLab::s_info)
                      goto LABEL_37;
                  }
                }
              }
              v24 = (WebCore::JSCSSColorValue *)*((_QWORD *)v14 + 7);
              v25 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v24, v14, v13);
              Structure = WebCore::JSCSSOKLabPrototype::createStructure((uint64_t *)v24, (uint64_t)v14, v25);
              *(_DWORD *)(Structure + 16) |= 0x80000u;
              v29 = (JSC::JSCell *)WebCore::JSCSSOKLabPrototype::create(v24, Structure, v27, v28);
              v30 = WebCore::JSCSSOKLab::createStructure((uint64_t *)v24, (uint64_t)v14, v29);
              v23 = WebCore::cacheDOMStructure((JSCell *)v14, v30, (uint64_t)&WebCore::JSCSSOKLab::s_info);
LABEL_39:
              v31 = *((_QWORD *)v14 + 7);
              v32 = *(_QWORD *)(v31 + 41456);
              v33 = *(_QWORD *)(v32 + 23536);
              v34 = *(_QWORD **)(v33 + 3184);
              if (v34)
                goto LABEL_59;
              v35 = *(_QWORD *)(v32 + 22648);
              if (__ldaxr((unsigned __int8 *)v35))
              {
                __clrex();
              }
              else if (!__stxr(1u, (unsigned __int8 *)v35))
              {
                goto LABEL_44;
              }
              MEMORY[0x19AEA534C](v35);
LABEL_44:
              v37 = *(_QWORD *)(v35 + 2824);
              if (!*(_QWORD *)(v37 + 3184))
              {
                v38 = WTF::fastMalloc((WTF *)0xF8);
                WTF::CString::CString((WTF::CString *)&v97, "IsoSpace T");
                v91 = 0;
                MEMORY[0x19AEA3204](v38, &v97, v31 + 192, v31 + 1872, 32, 8, &v91);
                v40 = (uint64_t)v91;
                v91 = 0;
                if (v40)
                  (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
                v41 = v97;
                v97 = 0;
                if (v41)
                {
                  if (*(_DWORD *)v41 == 1)
                    WTF::fastFree(v41, v39);
                  else
                    --*(_DWORD *)v41;
                }
                v42 = *(_QWORD *)(v37 + 3184);
                *(_QWORD *)(v37 + 3184) = v38;
                if (v42)
                  (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
              }
              v34 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
              JSC::GCClient::IsoSubspace::IsoSubspace();
              v43 = *(_QWORD *)(v33 + 3184);
              *(_QWORD *)(v33 + 3184) = v34;
              if (v43)
              {
                v44 = (WTF *)MEMORY[0x19AEA3528]();
                WTF::fastFree(v44, v45);
              }
              v46 = __ldxr((unsigned __int8 *)v35);
              if (v46 == 1)
              {
                if (!__stlxr(0, (unsigned __int8 *)v35))
                {
LABEL_59:
                  SlowCase = v34[3];
                  if (SlowCase >= v34[4])
                  {
                    SlowCase = v34[5];
                    if ((SlowCase & 1) != 0)
                    {
                      JSC::sanitizeStackForVM();
                      SlowCase = JSC::LocalAllocator::allocateSlowCase();
                    }
                    else
                    {
                      v84 = *(_QWORD *)(SlowCase + 8) ^ v34[6];
                      v34[4] = SlowCase + HIDWORD(v84);
                      v34[5] = SlowCase + (int)v84;
                      v34[3] = SlowCase + 32;
                    }
                  }
                  else
                  {
                    v34[3] = SlowCase + 32;
                  }
                  *(_DWORD *)SlowCase = 0;
                  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
                  *(_QWORD *)(SlowCase + 24) = v9;
                  v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSOKLab::s_info;
                  if (*(_BYTE *)(v31 + 755))
                    __dmb(0xAu);
                  v2 = *((_QWORD *)v14 + 415);
                  v47 = &unk_1EE2DD000;
                    goto LABEL_64;
                  goto LABEL_144;
                }
              }
              else
              {
                __clrex();
              }
              WTF::Lock::unlockSlow((WTF::Lock *)v35);
              goto LABEL_59;
            }
            if (v95 == 1)
            {
              v81 = (WTF::StringImpl *)LOBYTE(v93[0]);
              LOBYTE(v97) = v93[0];
              v82 = v94;
              v94 = 0;
              v98 = v82;
              if (!*((_QWORD *)v4 + 2))
              {
                v83.super.isa = (Class)WebCore::createDOMException(v86, (JSC::JSGlobalObject *)LOBYTE(v93[0]), (JSC::JSGlobalObject *)&v98);
                JSC::VM::throwException(v4, v86, v83);
                v82 = v98;
              }
              v98 = 0;
              if (v82)
              {
                if (*(_DWORD *)v82 == 2)
                  WTF::StringImpl::destroy(v82, v81);
                else
                  *(_DWORD *)v82 -= 2;
              }
              SlowCase = 0;
LABEL_74:
              if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
              {
LABEL_134:
                SlowCase = 0;
LABEL_89:
                if (v95 != -1)
                  ((void (*)(WTF **, int *))off_1E3238A10[v95])(&v97, v93);
                v12 = v102;
                goto LABEL_92;
              }
              v52 = v4;
              v53 = *(JSC::JSCell **)(a2 + 40);
              if (((unint64_t)v53 & 0xFFFE000000000002) != 0
                || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v53)) == 0
                || (v56 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
                || (v57 = (JSC::VM *)*((_QWORD *)v86 + 7),
                    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(v86, Object, v55),
                    *((_DWORD *)v57 + 20))
                && (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) != 0)
              {
LABEL_88:
                if (!*((_DWORD *)v52 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v52) & 1) == 0)
                  goto LABEL_89;
                goto LABEL_134;
              }
              v61 = *((_QWORD *)FunctionRealm + 412);
              if (v61)
              {
                v62 = *(_DWORD *)(v61 - 8);
                v63 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
                v64 = 9 * ((v63 + ~(v63 << 13)) ^ ((v63 + ~(v63 << 13)) >> 8));
                v65 = (v64 ^ (v64 >> 15)) + ~((v64 ^ (v64 >> 15)) << 27);
                v66 = v62 & ((v65 >> 31) ^ v65);
                v67 = *(JSC::JSGlobalObject **)(v61 + 16 * v66);
                if (v67 == v3)
                {
LABEL_84:
                  v58 = *(JSC::JSObject **)(v61 + 16 * v66 + 8);
                  if (v58)
                  {
LABEL_86:
                    SubclassStructure = JSC::InternalFunction::createSubclassStructure(v86, v56, v58, v59);
                    if (!*((_DWORD *)v57 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) == 0)
                      JSC::JSObject::setStructure((JSCell *)SlowCase, v57, SubclassStructure);
                    goto LABEL_88;
                  }
                }
                else
                {
                  v68 = 1;
                  while (v67)
                  {
                    v66 = ((_DWORD)v66 + v68) & v62;
                    v67 = *(JSC::JSGlobalObject **)(v61 + 16 * v66);
                    ++v68;
                    if (v67 == v3)
                      goto LABEL_84;
                  }
                }
              }
              v69 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v57, FunctionRealm, v58);
              v70 = WebCore::JSCSSOKLabPrototype::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v69);
              *(_DWORD *)(v70 + 16) |= 0x80000u;
              v73 = (JSC::JSCell *)WebCore::JSCSSOKLabPrototype::create(v57, v70, v71, v72);
              v74 = WebCore::JSCSSOKLab::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v73);
              v58 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v74, (uint64_t)&WebCore::JSCSSOKLab::s_info);
              goto LABEL_86;
            }
          }
        }
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_144:
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner = (uint64_t)&off_1E324B170;
    v47[3656] = 1;
LABEL_64:
    v4 = v85;
    if (*(_DWORD *)(v2 + 48))
    {
      v97 = v9;
      if ((SlowCase & 8) != 0)
        v77 = (SlowCase - 112) | 1;
      else
        v77 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v77 & 1) != 0)
        v78 = v77 + 47;
      else
        v78 = *(_QWORD *)v77 + 32;
      Allocator = *(_QWORD **)(v78 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v78 + 16) = *Allocator;
      *Allocator = SlowCase;
      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      Allocator[2] = v2;
      v91 = Allocator;
      JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v2 + 32), (uint64_t *)&v97, (uint64_t *)&v91);
      if (v91)
        v91[1] = 3;
      v3 = (JSC::JSGlobalObject *)&WebCore::JSCSSOKLab::s_info;
    }
    else
    {
      if ((SlowCase & 8) != 0)
        v48 = (SlowCase - 112) | 1;
      else
        v48 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v48 & 1) != 0)
        v49 = v48 + 47;
      else
        v49 = *(_QWORD *)v48 + 32;
      v50 = *(_QWORD **)(v49 + 16);
      if (!v50)
        v50 = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v49 + 16) = *v50;
      *v50 = SlowCase;
      v50[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      v50[2] = v2;
      v51 = *((_QWORD *)v9 + 2);
      *((_QWORD *)v9 + 2) = v50;
      if (v51)
        *(_QWORD *)(v51 + 8) = 3;
    }
    goto LABEL_74;
  }
  SlowCase = 0;
LABEL_101:
  if (v7 != -1)
    ((void (*)(char *, uint64_t *))off_1E3238938[v7])(v107, &v112);
  return SlowCase;
}

uint64_t WebCore::JSCSSOKLab::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSOKLabPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSOKLabPrototype::create(WebCore::JSCSSOKLabPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCSSOKLab::s_info, &WebCore::JSCSSOKLabPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLab>,(WebCore::DOMConstructorID)390>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3120);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSCSSOKLab>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000003, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSOKLab::s_info + ~((_QWORD)&WebCore::JSCSSOKLab::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSOKLab::s_info + ~((_QWORD)&WebCore::JSCSSOKLab::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSOKLab::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSOKLab::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype((WebCore::JSCSSColorValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSOKLabPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSCSSOKLabPrototype::create((WebCore::JSCSSOKLabPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSCSSOKLab::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSCSSOKLab::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3120) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSOKLabConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSOKLabPrototype::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLab>,(WebCore::DOMConstructorID)390>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSOKLab_l(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 48);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSOKLab_l(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 40);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSOKLab_l(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSOKLab::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSOKLab::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E3238908[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setL(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E32388E8[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E3238938[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSOKLab_a(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 64);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSOKLab_a(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue16toCSSColorNumberERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_16toCSSColorNumberESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 56);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSOKLab_a(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSOKLab::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSOKLab::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E3238908[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLab::setA(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E32388E8[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E3238938[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSOKLab_b(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 80);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSOKLab_b(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue16toCSSColorNumberERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_16toCSSColorNumberESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 72);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSOKLab_b(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSOKLab::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSOKLab::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E3238908[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLab::setB(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E32388E8[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E3238938[v11])(&v18, &v25);
  return v12;
}

uint64_t WebCore::jsCSSOKLab_alpha(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 96);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSOKLab_alpha(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 88);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSOKLab_alpha(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSOKLab::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSOKLab::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E3238908[v26])(&v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setAlpha(v10, (uint64_t)v21, (uint64_t)&v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, _BYTE *))off_1E32388E8[v22])(&v23, v21);
    if (v20)
    {
      v15 = (WTF::StringImpl *)v18;
      v21[0] = v18;
      v16 = v19;
      v22 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v22);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E3238938[v11])(&v18, &v25);
  return v12;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSOMVariableReferenceValue>::construct(JSC *this, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  JSCell *v14;
  _DWORD *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  bmalloc::api *v20;
  WTF::StringImpl *v21;
  bmalloc::api *v22;
  JSC::JSCell *v23;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v25;
  JSC::JSGlobalObject *v26;
  JSC::VM *v27;
  JSC::Structure *v28;
  uint64_t FunctionRealm;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char **v36;
  int v37;
  JSC::JSObject *v38;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v40;
  JSC::Structure *v41;
  JSC::JSCell *v42;
  uint64_t v43;
  unint64_t SubclassStructure;
  _DWORD *v46;
  WTF::StringImpl *v47;
  JSValue v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  JSValue v51;
  uint64_t v52;
  JSC::JSCell *v53;
  int v54[2];
  WTF::StringImpl *v55;
  int v56;
  WTF::StringImpl *v57;
  int v58;
  bmalloc::api *v59;
  WTF::StringImpl *v60;

  v3 = *((_QWORD *)this + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v48.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v3, this, v48);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(this, *(_QWORD *)(a2 + 48), (uint64_t)&v57);
  v7 = v58;
  if (v58)
  {
    v14 = 0;
LABEL_51:
    if (v7 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E3238AF8[v7])(v54, &v57);
    return v14;
  }
  if ((unint64_t)(*(int *)(a2 + 32) - 3) > 0xFFFFFFFFFFFFFFFDLL
    || (v8 = *(_QWORD *)(a2 + 56), (v8 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    v15 = 0;
    v16 = v57;
    v57 = 0;
    if (!v16)
      goto LABEL_22;
  }
  else
  {
    *(_QWORD *)v54 = *((_QWORD *)this + 7);
    if ((v8 & 0xFFFE000000000002) != 0)
      goto LABEL_16;
    v9 = *(unsigned int *)(16 * (*(_DWORD *)v8 & 0xFFFFFFFE) + 0x4C);
    v10 = *(_DWORD *)(16 * (*(_DWORD *)v8 & 0xFFFFFFFE) + 0x4C) != 0;
    v11 = (char **)(16 * v9);
    if ((_DWORD)v9)
      v12 = v11 == &WebCore::JSCSSUnparsedValue::s_info;
    else
      v12 = 1;
    if (!v12)
    {
      do
      {
        v11 = (char **)v11[2];
        v10 = v11 != 0;
      }
      while (v11 != &WebCore::JSCSSUnparsedValue::s_info && v11 != 0);
    }
    if (!v10 || (v15 = *(_DWORD **)(v8 + 24)) == 0)
    {
LABEL_16:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v54, 1, "fallback", 9, "CSSVariableReferenceValue", 26, v6, 0, 0, "CSSUnparsedValue", 17);
      v14 = 0;
LABEL_50:
      v7 = v58;
      goto LABEL_51;
    }
    v16 = v57;
    v57 = 0;
    ++v15[2];
    if (!v16)
      goto LABEL_22;
  }
  if (WTF::StringImpl::startsWith())
  {
    v17 = bmalloc::api::isoAllocate();
    *(_DWORD *)v17 = 1;
    *(_QWORD *)(v17 + 8) = v16;
    *(_QWORD *)(v17 + 16) = v15;
    *(_QWORD *)v54 = v17;
    v56 = 0;
    goto LABEL_28;
  }
LABEL_22:
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  LOBYTE(v54[0]) = 33;
  v56 = 1;
  if (!v15)
    goto LABEL_25;
  if (v15[2] != 1)
  {
    --v15[2];
LABEL_25:
    if (!v16)
      goto LABEL_28;
    goto LABEL_26;
  }
  (*(void (**)(_DWORD *))(*(_QWORD *)v15 + 16))(v15);
  if (!v16)
    goto LABEL_28;
LABEL_26:
  if (*(_DWORD *)v16 == 2)
    WTF::StringImpl::destroy(v16, v18);
  else
    *(_DWORD *)v16 -= 2;
LABEL_28:
  if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
    goto LABEL_80;
  if (!v56)
  {
    v19 = *(_QWORD *)(v5 + 40);
    v20 = *(bmalloc::api **)v54;
    *(_QWORD *)v54 = 0;
    v59 = v20;
    v14 = (JSCell *)WebCore::createWrapper<WebCore::CSSOMVariableReferenceValue,WebCore::CSSOMVariableReferenceValue>(v19, &v59);
    v22 = v59;
    if (v59)
    {
      if (*(_DWORD *)v59 == 1)
      {
        v46 = (_DWORD *)*((_QWORD *)v59 + 2);
        *((_QWORD *)v59 + 2) = 0;
        if (v46)
        {
          if (v46[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v46 + 16))(v46);
          else
            --v46[2];
        }
        v47 = (WTF::StringImpl *)*((_QWORD *)v22 + 1);
        *((_QWORD *)v22 + 1) = 0;
        if (v47)
        {
          if (*(_DWORD *)v47 == 2)
            WTF::StringImpl::destroy(v47, v21);
          else
            *(_DWORD *)v47 -= 2;
        }
        bmalloc::api::isoDeallocate(v22, v21);
      }
      else
      {
        --*(_DWORD *)v59;
      }
    }
    goto LABEL_33;
  }
  if (v56 == 1)
  {
    v49 = (WTF::StringImpl *)LOBYTE(v54[0]);
    LOBYTE(v59) = v54[0];
    v50 = v55;
    v55 = 0;
    v60 = v50;
    if (!*(_QWORD *)(v3 + 16))
    {
      v51.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v54[0]), (JSC::JSGlobalObject *)&v60);
      JSC::VM::throwException((JSC::VM *)v3, this, v51);
      v50 = v60;
    }
    v60 = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 2)
        WTF::StringImpl::destroy(v50, v49);
      else
        *(_DWORD *)v50 -= 2;
    }
    v14 = 0;
LABEL_33:
    if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
      goto LABEL_80;
    v23 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v23 & 0xFFFE000000000002) != 0
      || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v23)) == 0
      || (v26 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v27 = (JSC::VM *)*((_QWORD *)this + 7),
          FunctionRealm = JSC::getFunctionRealm(this, Object, v25),
          *((_DWORD *)v27 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) != 0)
    {
LABEL_47:
      if (!*(_DWORD *)(v3 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) == 0)
      {
LABEL_48:
        if (v56 != -1)
          ((void (*)(bmalloc::api **, int *))off_1E3238AE8[v56])(&v59, v54);
        goto LABEL_50;
      }
LABEL_80:
      v14 = 0;
      goto LABEL_48;
    }
    v30 = *(_QWORD *)(FunctionRealm + 3296);
    if (v30)
    {
      v31 = *(_DWORD *)(v30 - 8);
      v32 = ((unint64_t)&WebCore::JSCSSOMVariableReferenceValue::s_info
           + ~((_QWORD)&WebCore::JSCSSOMVariableReferenceValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSOMVariableReferenceValue::s_info
                                                                                 + ~((_QWORD)&WebCore::JSCSSOMVariableReferenceValue::s_info << 32)) >> 22);
      v33 = 9 * ((v32 + ~(v32 << 13)) ^ ((v32 + ~(v32 << 13)) >> 8));
      v34 = (v33 ^ (v33 >> 15)) + ~((v33 ^ (v33 >> 15)) << 27);
      v35 = v31 & ((v34 >> 31) ^ v34);
      v36 = *(char ***)(v30 + 16 * v35);
      if (v36 == &WebCore::JSCSSOMVariableReferenceValue::s_info)
      {
LABEL_43:
        v38 = *(JSC::JSObject **)(v30 + 16 * v35 + 8);
        if (v38)
        {
LABEL_45:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v26, v38, v28);
          if (!*((_DWORD *)v27 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) == 0)
            JSC::JSObject::setStructure(v14, v27, SubclassStructure);
          goto LABEL_47;
        }
      }
      else
      {
        v37 = 1;
        while (v36)
        {
          v35 = ((_DWORD)v35 + v37) & v31;
          v36 = *(char ***)(v30 + 16 * v35);
          ++v37;
          if (v36 == &WebCore::JSCSSOMVariableReferenceValue::s_info)
            goto LABEL_43;
        }
      }
    }
    Structure = WebCore::JSCSSOMVariableReferenceValuePrototype::createStructure((uint64_t *)v27, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v42 = (JSC::JSCell *)WebCore::JSCSSOMVariableReferenceValuePrototype::create(v27, Structure, v40, v41);
    v43 = WebCore::JSCSSOMVariableReferenceValue::createStructure((uint64_t *)v27, FunctionRealm, v42);
    v38 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v43, (uint64_t)&WebCore::JSCSSOMVariableReferenceValue::s_info);
    goto LABEL_45;
  }
  v52 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSCSSOMVariableReferenceValue::destroy(v52, v53);
}

uint64_t WebCore::JSCSSOMVariableReferenceValue::destroy(uint64_t this, JSC::JSCell *a2)
{
  bmalloc::api *v2;
  _DWORD *v3;
  WTF::StringImpl *v4;

  v2 = *(bmalloc::api **)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (v3[2] == 1)
          (*(void (**)(_DWORD *, JSC::JSCell *))(*(_QWORD *)v3 + 16))(v3, a2);
        else
          --v3[2];
      }
      v4 = (WTF::StringImpl *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      return bmalloc::api::isoDeallocate(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSCSSOMVariableReferenceValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSOMVariableReferenceValuePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSOMVariableReferenceValuePrototype::create(WebCore::JSCSSOMVariableReferenceValuePrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCSSOMVariableReferenceValue::s_info, &WebCore::JSCSSOMVariableReferenceValuePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOMVariableReferenceValue>,(WebCore::DOMConstructorID)376>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3008);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructor<WebCore::JSCSSOMVariableReferenceValue>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000001, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCSSOMVariableReferenceValue::s_info
         + ~((_QWORD)&WebCore::JSCSSOMVariableReferenceValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSOMVariableReferenceValue::s_info
                                                                               + ~((_QWORD)&WebCore::JSCSSOMVariableReferenceValue::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCSSOMVariableReferenceValue::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCSSOMVariableReferenceValue::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCSSOMVariableReferenceValuePrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCSSOMVariableReferenceValuePrototype::create((WebCore::JSCSSOMVariableReferenceValuePrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSCSSOMVariableReferenceValue::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCSSOMVariableReferenceValue::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3008) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSOMVariableReferenceValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSOMVariableReferenceValuePrototype::s_info != (char **)(16
                                                                           * *(unsigned int *)(16
                                                                                             * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                             + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOMVariableReferenceValue>,(WebCore::DOMConstructorID)376>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSOMVariableReferenceValue_variable(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

BOOL WebCore::setJSCSSOMVariableReferenceValue_variable(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WTF::StringImpl *v20;
  int v21;
  char v22;
  WTF::StringImpl *v23;
  int v24;
  WTF::StringImpl *v25;
  char v26;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSOMVariableReferenceValue::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSOMVariableReferenceValue::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v20);
  v11 = v21;
  v12 = v21 == 0;
  if (!v21)
  {
    v13 = v20;
    v20 = 0;
    if (v13)
    {
      if (WTF::StringImpl::startsWith())
      {
        v15 = *(WTF::StringImpl **)(v10 + 8);
        *(_QWORD *)(v10 + 8) = v13;
        if (!v15)
          goto LABEL_28;
LABEL_26:
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v14);
        else
          *(_DWORD *)v15 -= 2;
        goto LABEL_28;
      }
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      LOBYTE(v24) = 33;
      v26 = 1;
      if (*(_DWORD *)v13 == 2)
      {
        WTF::StringImpl::destroy(v13, v16);
        if (!v26)
        {
LABEL_28:
          v11 = v21;
          goto LABEL_29;
        }
      }
      else
      {
        *(_DWORD *)v13 -= 2;
      }
    }
    else
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      LOBYTE(v24) = 33;
      v26 = 1;
    }
    v14 = (WTF::StringImpl *)v24;
    v22 = v24;
    v17 = v25;
    v25 = 0;
    v23 = v17;
    if (!*((_QWORD *)v4 + 2))
    {
      v18.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v24, (JSC::JSGlobalObject *)&v23);
      JSC::VM::throwException(v4, a1, v18);
      v17 = v23;
    }
    v23 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v14);
      else
        *(_DWORD *)v17 -= 2;
    }
    if (!v26)
      goto LABEL_28;
    v15 = v25;
    v25 = 0;
    if (!v15)
      goto LABEL_28;
    goto LABEL_26;
  }
LABEL_29:
  if (v11 != -1)
    ((void (*)(int *, WTF::StringImpl **))off_1E3238AF8[v11])(&v24, &v20);
  return v12;
}

uint64_t WebCore::jsCSSOMVariableReferenceValue_fallback(uint64_t a1, uint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _DWORD *v18;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
  if (!v3)
    return 2;
  v4 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *((_QWORD *)v4 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v10 = *(_QWORD *)(v5 + 32);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 - 8);
      v12 = (~(v3 << 32) + v3) ^ ((unint64_t)(~(v3 << 32) + v3) >> 22);
      v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
      v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
      v15 = v11 & ((v14 >> 31) ^ v14);
      v16 = *(_QWORD *)(v10 + 16 * v15);
      if (v16 == v3)
      {
LABEL_17:
        v6 = *(_QWORD *)(v10 + 16 * v15 + 8);
        if (v6)
          goto LABEL_4;
      }
      else
      {
        v17 = 1;
        while (v16)
        {
          v15 = ((_DWORD)v15 + v17) & v11;
          v16 = *(_QWORD *)(v10 + 16 * v15);
          ++v17;
          if (v16 == v3)
            goto LABEL_17;
        }
      }
    }
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 16);
    if (v6)
    {
LABEL_4:
      if ((*(_BYTE *)(v6 + 8) & 3) == 0)
      {
        v7 = *(_QWORD *)v6;
        if (*(_QWORD *)v6)
          return v7;
      }
    }
  }
  ++*(_DWORD *)(v3 + 8);
  v18 = (_DWORD *)v3;
  v7 = WebCore::toJSNewlyCreated(v4, (uint64_t *)&v18, a3);
  v8 = v18;
  v18 = 0;
  if (v8)
  {
    if (v8[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v8 + 16))(v8);
    else
      --v8[2];
  }
  return v7;
}

uint64_t WebCore::JSCSSOMVariableReferenceValueOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSCSSOMVariableReferenceValueOwner::finalize(uint64_t a1, WTF::StringImpl *a2, uint64_t a3)
{
  bmalloc::api *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  bmalloc::api *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _DWORD *v24;
  WTF::StringImpl *v25;

  v3 = *(bmalloc::api **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(bmalloc::api **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(bmalloc::api **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = (_DWORD *)*((_QWORD *)v3 + 2);
    *((_QWORD *)v3 + 2) = 0;
    if (v24)
    {
      if (v24[2] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v24 + 16))(v24);
      else
        --v24[2];
    }
    v25 = (WTF::StringImpl *)*((_QWORD *)v3 + 1);
    *((_QWORD *)v3 + 1) = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, a2);
      else
        *(_DWORD *)v25 -= 2;
    }
    bmalloc::api::isoDeallocate(v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::createWrapper<WebCore::CSSOMVariableReferenceValue,WebCore::CSSOMVariableReferenceValue>(uint64_t a1, WTF **a2)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v16;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  WTF *v30;
  uint64_t v31;
  uint64_t v32;
  WTF *v33;
  void *v34;
  int v35;
  unint64_t SlowCase;
  WTF *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *Allocator;
  unint64_t v43;
  _QWORD *v44;
  WTF *v45;

  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 3296);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSCSSOMVariableReferenceValue::s_info
        + ~((_QWORD)&WebCore::JSCSSOMVariableReferenceValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSOMVariableReferenceValue::s_info
                                                                              + ~((_QWORD)&WebCore::JSCSSOMVariableReferenceValue::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSCSSOMVariableReferenceValue::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSCSSOMVariableReferenceValue::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSCSSOMVariableReferenceValuePrototype::createStructure(v14, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v18 = (JSC::JSCell *)WebCore::JSCSSOMVariableReferenceValuePrototype::create((WebCore::JSCSSOMVariableReferenceValuePrototype *)v14, Structure, v16, v17);
  v19 = WebCore::JSCSSOMVariableReferenceValue::createStructure(v14, a1, v18);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSCSSOMVariableReferenceValue::s_info);
LABEL_8:
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(v20 + 41456);
  v22 = *(_QWORD *)(v21 + 23536);
  v23 = *(_QWORD **)(v22 + 3056);
  if (v23)
    goto LABEL_28;
  v24 = *(_QWORD *)(v21 + 22648);
  if (__ldaxr((unsigned __int8 *)v24))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v24))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v24);
LABEL_13:
  v26 = *(_QWORD *)(v24 + 2824);
  if (!*(_QWORD *)(v26 + 3056))
  {
    v27 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v45, "IsoSpace T");
    v44 = 0;
    MEMORY[0x19AEA3204](v27, &v45, v20 + 192, v20 + 1872, 32, 8, &v44);
    v29 = (uint64_t)v44;
    v44 = 0;
    if (v29)
      (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
    v30 = v45;
    v45 = 0;
    if (v30)
    {
      if (*(_DWORD *)v30 == 1)
        WTF::fastFree(v30, v28);
      else
        --*(_DWORD *)v30;
    }
    v31 = *(_QWORD *)(v26 + 3056);
    *(_QWORD *)(v26 + 3056) = v27;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  }
  v23 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v32 = *(_QWORD *)(v22 + 3056);
  *(_QWORD *)(v22 + 3056) = v23;
  if (v32)
  {
    v33 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v33, v34);
  }
  v35 = __ldxr((unsigned __int8 *)v24);
  if (v35 != 1)
  {
    __clrex();
    goto LABEL_27;
  }
  if (__stlxr(0, (unsigned __int8 *)v24))
LABEL_27:
    WTF::Lock::unlockSlow((WTF::Lock *)v24);
LABEL_28:
  SlowCase = v23[3];
  if (SlowCase < v23[4])
  {
LABEL_29:
    v23[3] = SlowCase + 32;
    goto LABEL_30;
  }
  SlowCase = v23[5];
  if ((SlowCase & 1) == 0)
  {
    v43 = *(_QWORD *)(SlowCase + 8) ^ v23[6];
    v23[4] = SlowCase + HIDWORD(v43);
    v23[5] = SlowCase + (int)v43;
    goto LABEL_29;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_30:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  v37 = *a2;
  *a2 = 0;
  *(_QWORD *)(SlowCase + 24) = v37;
  if (*(_BYTE *)(v20 + 755))
    __dmb(0xAu);
  v38 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE334E28 & 1) == 0)
  {
    qword_1EE334E20 = (uint64_t)&off_1E3238598;
    byte_1EE334E28 = 1;
  }
  v45 = v4;
  if ((SlowCase & 8) != 0)
    v39 = (SlowCase - 112) | 1;
  else
    v39 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v39 & 1) != 0)
    v40 = v39 + 47;
  else
    v40 = *(_QWORD *)v39 + 32;
  Allocator = *(_QWORD **)(v40 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v40 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334E20;
  Allocator[2] = v38;
  v44 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v38 + 32), (uint64_t *)&v45, (uint64_t *)&v44);
  if (v44)
    v44[1] = 3;
  return SlowCase;
}

_DWORD *WebCore::JSCSSRule::destroy(WebCore::JSCSSRule *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSCSSPageRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSRule::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  return WebCore::JSCSSRule::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
}

uint64_t WebCore::JSCSSRule::visitChildren(WebCore::JSCSSRule *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = WebCore::JSCSSRule::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSCSSRule::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSCSSRule::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSPageRule::createPrototype(WebCore::JSCSSPageRule *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSRule::s_info + ~((_QWORD)&WebCore::JSCSSRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSRule::s_info + ~((_QWORD)&WebCore::JSCSSRule::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSRule::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSRule::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSRulePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSRulePrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSRule::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSRule::s_info);
  }
  v18 = WebCore::JSCSSPageRulePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSPageRulePrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSPageRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSRule::prototype(WebCore::JSCSSRule *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSRule::s_info + ~((_QWORD)&WebCore::JSCSSRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSRule::s_info + ~((_QWORD)&WebCore::JSCSSRule::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSRule::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSRule::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSRulePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSRulePrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSRule::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSRule::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

unint64_t WebCore::JSCSSPageRulePrototype::create(WebCore::JSCSSPageRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCSSPageRule::s_info, &WebCore::JSCSSPageRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSPageRule>,(WebCore::DOMConstructorID)345>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2760);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSPageRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSPageRule::s_info + ~((_QWORD)&WebCore::JSCSSPageRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSPageRule::s_info + ~((_QWORD)&WebCore::JSCSSPageRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSPageRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSPageRule::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSPageRule::createPrototype((WebCore::JSCSSPageRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSPageRule::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSPageRule::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2760) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSPageRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSPageRulePrototype::s_info != (char **)(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSPageRule>,(WebCore::DOMConstructorID)345>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSPageRule_selectorText(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  WebCore::CSSPageRule::selectorText(*(WebCore::CSSPageRule **)(a2 + 24), &v12);
  v3 = v12;
  if (!v12)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = *((_DWORD *)v12 + 1);
  if (!v6)
    goto LABEL_14;
  if (v6 == 1)
  {
    v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
    if ((*((_BYTE *)v12 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v5 = (uint64_t *)(v4 + 8 * v9 + 42216);
LABEL_14:
    v7 = *v5;
    goto LABEL_15;
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v3 = v12;
    v12 = 0;
    if (!v3)
      return v7;
    goto LABEL_16;
  }
LABEL_15:
  v12 = 0;
LABEL_16:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v7;
}

BOOL WebCore::setJSCSSPageRule_selectorText(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::CSSPageRule *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v15;
  int v16;
  WTF::StringImpl *v17;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSCSSPageRule::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSCSSPageRule::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::CSSPageRule **)(a2 + 24);
  WebCore::Converter<WebCore::IDLNullable<WebCore::IDLDOMString>>::convert(a1, (unint64_t)this, (uint64_t)&v15);
  v9 = v16;
  v10 = v16 == 0;
  if (!v16)
  {
    v11 = v15;
    v15 = 0;
    v17 = v11;
    WebCore::CSSPageRule::setSelectorText(v8, (unsigned int **)&v17);
    v13 = v17;
    v17 = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v9 = v16;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3238AF8[v9])(&v17, &v15);
  return v10;
}

unint64_t WebCore::jsCSSPageRule_style(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WTF *v3;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v3 = (WTF *)WebCore::CSSPageRule::style(*(WebCore::CSSPageRule **)(a2 + 24));
  return WebCore::toJS<WebCore::IDLInterface<WebCore::CSSStyleDeclaration>,WebCore::CSSStyleDeclaration&>(v2, v3);
}

BOOL WebCore::setJSCSSPageRule_style(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSPageRule::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSPageRule::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

uint64_t WebCore::JSCSSPageRule::subspaceForImpl(WebCore::JSCSSPageRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2800);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 2800);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 2800);
    *(_QWORD *)(v8 + 2800) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2800);
  *(_QWORD *)(v3 + 2800) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

WebCore::JSCSSPaintCallback *WebCore::JSCSSPaintCallback::JSCSSPaintCallback(WebCore::JSCSSPaintCallback *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::ScriptExecutionContext *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *Allocator;
  _QWORD *v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  *((_DWORD *)this + 4) = 1;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)this = &off_1E33A18C0;
  *((_QWORD *)this + 1) = 0;
  WebCore::ContextDestructionObserver::observeContext(this, v6);
  *(_QWORD *)this = &off_1E3233FC0;
  v7 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
  v8 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  Allocator = 0;
  if (a3)
  {
    v16 = v8;
    if ((a3 & 8) != 0)
      v12 = ((unint64_t)a3 - 112) | 1;
    else
      v12 = (unint64_t)a3 & 0xFFFFFFFFFFFFC000;
    if ((v12 & 1) != 0)
      v13 = v12 + 47;
    else
      v13 = *(_QWORD *)v12 + 32;
    Allocator = *(_QWORD **)(v13 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v13 + 16) = *Allocator;
    *Allocator = a3;
    Allocator[1] = 0;
    Allocator[2] = 0;
    v8 = v16;
  }
  *v7 = Allocator;
  v7[1] = &off_1E32268A0;
  if (a2)
  {
    v17 = v8;
    if ((a2 & 8) != 0)
      v14 = (a2 - 112) | 1;
    else
      v14 = a2 & 0xFFFFFFFFFFFFC000;
    if ((v14 & 1) != 0)
      v15 = v14 + 47;
    else
      v15 = *(_QWORD *)v14 + 32;
    v10 = *(_QWORD **)(v15 + 16);
    if (!v10)
      v10 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v15 + 16) = *v10;
    *v10 = a2;
    v10[1] = v7 + 1;
    v10[2] = v17;
  }
  else
  {
    v10 = 0;
  }
  v7[2] = v10;
  *((_QWORD *)this + 4) = v7;
  return this;
}

void WebCore::JSCSSPaintCallback::~JSCSSPaintCallback(WebCore::JSCSSPaintCallback *this, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  WTF *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  _QWORD *v17;
  char v18;

  v3 = *((_QWORD *)this + 1);
  if (v3
    && (v4 = *(_QWORD *)(v3 + 8)) != 0
    && (v5 = v4 - 96, !(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v4 - 96) + 88))(v4 - 96)))
  {
    v9 = *((_QWORD *)this + 4);
    v10 = (_QWORD *)WTF::fastMalloc((WTF *)0x10);
    *v10 = &off_1E3226900;
    v10[1] = v9;
    v17 = v10;
    v18 = 1;
    (*(void (**)(uint64_t, _QWORD **))(*(_QWORD *)v5 + 336))(v5, &v17);
    v11 = v17;
    v17 = 0;
    if (v11)
      (*(void (**)(_QWORD *))(*v11 + 8))(v11);
  }
  else
  {
    v6 = (WTF *)*((_QWORD *)this + 4);
    if (v6)
    {
      v7 = *((_QWORD *)v6 + 2);
      if (v7)
      {
        *(_QWORD *)(v7 + 8) = 3;
        *((_QWORD *)v6 + 2) = 0;
      }
      JSC::WeakHandleOwner::~WeakHandleOwner((WTF *)((char *)v6 + 8));
      if (*(_QWORD *)v6)
      {
        *(_QWORD *)(*(_QWORD *)v6 + 8) = 3;
        *(_QWORD *)v6 = 0;
      }
      WTF::fastFree(v6, v8);
    }
  }
  WebCore::ContextDestructionObserver::~ContextDestructionObserver(this, a2);
  v13 = *((_QWORD *)this + 3);
  if (v13)
  {
    *(_QWORD *)(v13 + 8) = 0;
    v14 = (unsigned int *)*((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = 0;
    if (v14)
    {
      do
      {
        v15 = __ldaxr(v14);
        v16 = v15 - 1;
      }
      while (__stlxr(v16, v14));
      if (!v16)
      {
        atomic_store(1u, v14);
        WTF::fastFree((WTF *)v14, v12);
      }
    }
  }
  else
  {
    *((_QWORD *)this + 3) = 0;
  }
}

{
  WTF *v2;
  void *v3;

  WebCore::JSCSSPaintCallback::~JSCSSPaintCallback(this, a2);
  WTF::fastFree(v2, v3);
}

uint64_t WebCore::JSCSSPaintCallback::handleEvent(uint64_t a1, void *a2, uint64_t a3, _DWORD *a4, WTF *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t SlowCase;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  unint64_t v26;
  uint64_t *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  WTF *v43;
  uint64_t v44;
  uint64_t v45;
  WTF *v46;
  void *v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *Allocator;
  int v53;
  objc_class *v54;
  JSValue v55;
  int v56;
  objc_class *v57;
  JSValue v58;
  int v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  JSC::Structure *v63;
  uint64_t *v64;
  JSValue v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72[8];
  uint64_t v73;
  WTF *v74;
  _OWORD v75[4];
  uint64_t v76;
  _BYTE v77[8];
  _QWORD *v78;
  uint64_t v79[2];

  v10 = (uint64_t)a2;
  if (!WebCore::ActiveDOMCallback::canInvokeCallback((WebCore::ActiveDOMCallback *)a1, a2))
    return 2;
  ++*(_DWORD *)(a1 + 16);
  v12 = **(_QWORD **)(a1 + 32);
  if (!v12 || (*(_BYTE *)(v12 + 8) & 3) != 0)
    v13 = 0;
  else
    v13 = *(_QWORD *)v12;
  MEMORY[0x19AEA3294](v77, *(_QWORD *)(v13 + 56));
  v72[0] = 0;
  v74 = (WTF *)((char *)v75 + 8);
  memset(v75, 0, sizeof(v75));
  v76 = 0;
  *((_QWORD *)&v75[0] + 1) = WebCore::wrap<WebCore::PaintRenderingContext2D>(v13, v13, a3);
  v73 = 0x800000001;
  v14 = (uint64_t *)(*(_QWORD *)(v13 + 3320) + 32);
  v79[0] = (uint64_t)a4;
  v15 = WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::get(v14, v79);
  if (!v15)
  {
    ++*a4;
    v18 = *(_QWORD *)(v13 + 3296);
    if (v18)
    {
      v19 = *(_DWORD *)(v18 - 8);
      v20 = ((unint64_t)&WebCore::JSCSSPaintSize::s_info + ~((_QWORD)&WebCore::JSCSSPaintSize::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSPaintSize::s_info + ~((_QWORD)&WebCore::JSCSSPaintSize::s_info << 32)) >> 22);
      v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
      v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
      v23 = v19 & ((v22 >> 31) ^ v22);
      v24 = *(char ***)(v18 + 16 * v23);
      if (v24 == &WebCore::JSCSSPaintSize::s_info)
      {
LABEL_13:
        v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
        if (v26)
          goto LABEL_15;
      }
      else
      {
        v25 = 1;
        while (v24)
        {
          v23 = ((_DWORD)v23 + v25) & v19;
          v24 = *(char ***)(v18 + 16 * v23);
          ++v25;
          if (v24 == &WebCore::JSCSSPaintSize::s_info)
            goto LABEL_13;
        }
      }
    }
    v27 = *(uint64_t **)(v13 + 56);
    Structure = WebCore::JSCSSPaintSizePrototype::createStructure(v27, v13, *(JSC::JSCell **)(v13 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v31 = (JSC::JSCell *)WebCore::JSCSSPaintSizePrototype::create((WebCore::JSCSSPaintSizePrototype *)v27, Structure, v29, v30);
    v32 = WebCore::JSCSSPaintSize::createStructure(v27, v13, v31);
    v26 = WebCore::cacheDOMStructure((JSCell *)v13, v32, (uint64_t)&WebCore::JSCSSPaintSize::s_info);
LABEL_15:
    v70 = a6;
    v71 = v10;
    v33 = *(_QWORD *)(v13 + 56);
    v34 = *(_QWORD *)(v33 + 41456);
    v35 = *(_QWORD *)(v34 + 23536);
    v36 = *(_QWORD **)(v35 + 2808);
    if (v36)
      goto LABEL_35;
    v37 = *(_QWORD *)(v34 + 22648);
    v38 = __ldaxr((unsigned __int8 *)v37);
    v69 = *(_QWORD *)(v13 + 56);
    if (v38)
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v37))
    {
      goto LABEL_20;
    }
    MEMORY[0x19AEA534C](v37);
LABEL_20:
    v39 = *(_QWORD *)(v37 + 2824);
    if (!*(_QWORD *)(v39 + 2808))
    {
      v40 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)v79, "IsoSpace T");
      v78 = 0;
      MEMORY[0x19AEA3204](v40, v79, v69 + 192, v69 + 1872, 32, 8, &v78);
      v42 = (uint64_t)v78;
      v78 = 0;
      if (v42)
        (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
      v43 = (WTF *)v79[0];
      v79[0] = 0;
      if (v43)
      {
        if (*(_DWORD *)v43 == 1)
          WTF::fastFree(v43, v41);
        else
          --*(_DWORD *)v43;
      }
      v44 = *(_QWORD *)(v39 + 2808);
      *(_QWORD *)(v39 + 2808) = v40;
      if (v44)
        (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
    }
    v36 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v45 = *(_QWORD *)(v35 + 2808);
    *(_QWORD *)(v35 + 2808) = v36;
    if (v45)
    {
      v46 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v46, v47);
    }
    v48 = __ldxr((unsigned __int8 *)v37);
    if (v48 == 1)
    {
      v33 = v69;
      if (!__stlxr(0, (unsigned __int8 *)v37))
      {
LABEL_35:
        SlowCase = v36[3];
        if (SlowCase >= v36[4])
        {
          SlowCase = v36[5];
          if ((SlowCase & 1) != 0)
          {
            JSC::sanitizeStackForVM();
            SlowCase = JSC::LocalAllocator::allocateSlowCase();
            goto LABEL_37;
          }
          v67 = *(_QWORD *)(SlowCase + 8) ^ v36[6];
          v36[4] = SlowCase + HIDWORD(v67);
          v36[5] = SlowCase + (int)v67;
        }
        v36[3] = SlowCase + 32;
LABEL_37:
        *(_DWORD *)SlowCase = 0;
        WebCore::JSDOMObject::JSDOMObject(SlowCase, v26);
        *(_QWORD *)(SlowCase + 24) = a4;
        if (*(_BYTE *)(v33 + 755))
          __dmb(0xAu);
        v49 = *(_QWORD *)(v13 + 3320);
        if ((byte_1EE334E38 & 1) == 0)
        {
          qword_1EE334E30 = (uint64_t)&off_1E32385C8;
          byte_1EE334E38 = 1;
        }
        v79[0] = (uint64_t)a4;
        if ((SlowCase & 8) != 0)
          v50 = (SlowCase - 112) | 1;
        else
          v50 = SlowCase & 0xFFFFFFFFFFFFC000;
        if ((v50 & 1) != 0)
          v51 = v50 + 47;
        else
          v51 = *(_QWORD *)v50 + 32;
        Allocator = *(_QWORD **)(v51 + 16);
        if (!Allocator)
          Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
        *(_QWORD *)(v51 + 16) = *Allocator;
        *Allocator = SlowCase;
        Allocator[1] = &qword_1EE334E30;
        Allocator[2] = v49;
        v78 = Allocator;
        JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v49 + 32), v79, (uint64_t *)&v78);
        if (v78)
          v78[1] = 3;
        v10 = v71;
        a6 = v70;
        goto LABEL_51;
      }
    }
    else
    {
      __clrex();
      v33 = v69;
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v37);
    goto LABEL_35;
  }
  SlowCase = v15;
LABEL_51:
  v53 = v73;
  if ((_DWORD)v73 == HIDWORD(v73) || v74 != (WTF *)((char *)v75 + 8) && v74)
  {
    v66.super.isa = (Class)SlowCase;
    if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v73, v66) == 1)
      v72[0] = 1;
  }
  else
  {
    *((_QWORD *)v74 + v73) = SlowCase;
    LODWORD(v73) = v53 + 1;
  }
  v54 = (objc_class *)WebCore::wrap<WebCore::StylePropertyMapReadOnly>(v13, v13, a5);
  v55.super.isa = v54;
  v56 = v73;
  if ((_DWORD)v73 == HIDWORD(v73) || v74 != (WTF *)((char *)v75 + 8) && v74)
  {
    if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v73, v55) == 1)
      v72[0] = 1;
  }
  else
  {
    *((_QWORD *)v74 + v73) = v54;
    LODWORD(v73) = v56 + 1;
  }
  v57 = (objc_class *)WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLUSVString>>::convert<WTF::String,0ul>(v13, v13, a6);
  v58.super.isa = v57;
  v59 = v73;
  if ((_DWORD)v73 == HIDWORD(v73) || v74 != (WTF *)((char *)v75 + 8) && v74)
  {
    if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v73, v58) == 1)
      v72[0] = 1;
  }
  else
  {
    *((_QWORD *)v74 + v73) = v57;
    LODWORD(v73) = v59 + 1;
  }
  v79[0] = 0;
  v60 = *(uint64_t **)(a1 + 32);
  v61 = *v60;
  if (*v60
    && (*(_BYTE *)(v61 + 8) & 3) == 0
    && *(_QWORD *)v61
    && ((v62 = v60[2]) == 0 || (*(_BYTE *)(v62 + 8) & 3) != 0 ? (v63 = 0) : (v63 = *(JSC::Structure **)v62),
        WebCore::JSCallbackData::invokeCallback(*(JSC::JSGlobalObject **)v61, v63, v10, (uint64_t)v72, 0, 0, v79),
        (v58.super.isa = (Class)v79[0]) != 0))
  {
    WebCore::reportException(*(JSC::JSGlobalObject **)(16 * (***(_DWORD ***)(*(_QWORD *)(a1 + 32) + 16) & 0xFFFFFFFE) + 0x28), v79[0], 0, 0, 0);
    v17 = 1;
  }
  else
  {
    v17 = 0;
  }
  v64 = *(uint64_t **)&v75[0];
  if (*(_QWORD *)&v75[0])
  {
    v79[0] = (uint64_t)&v73;
    v68 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v75[0], v79);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v64, v68);
  }
  if (v74 != (WTF *)((char *)v75 + 8) && v74)
    WTF::fastFree(v74, v58.super.isa);
  MEMORY[0x19AEA32A0](v77);
  if (*(_DWORD *)(a1 + 16) == 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  else
    --*(_DWORD *)(a1 + 16);
  return v17;
}

WTF *WebCore::JSCSSPaintSize::destroy(WebCore::JSCSSPaintSize *this, JSC::JSCell *a2)
{
  WTF *result;

  result = (WTF *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
      return (WTF *)WTF::fastFree(result, a2);
    else
      --*(_DWORD *)result;
  }
  return result;
}

uint64_t WebCore::JSCSSPaintSize::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSPaintSizePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSPaintSizePrototype::create(WebCore::JSCSSPaintSizePrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCSSPaintSize::s_info, &WebCore::JSCSSPaintSizePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSPaintSize>,(WebCore::DOMConstructorID)346>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2768);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSPaintSize>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCSSPaintSize::s_info + ~((_QWORD)&WebCore::JSCSSPaintSize::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSPaintSize::s_info + ~((_QWORD)&WebCore::JSCSSPaintSize::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCSSPaintSize::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCSSPaintSize::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCSSPaintSizePrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCSSPaintSizePrototype::create((WebCore::JSCSSPaintSizePrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSCSSPaintSize::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCSSPaintSize::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2768) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSPaintSizeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSPaintSizePrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSPaintSize>,(WebCore::DOMConstructorID)346>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSPaintSize_width(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 8);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsCSSPaintSize_height(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 16);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

uint64_t WebCore::JSCSSPaintSizeOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

_QWORD *WebCore::JSCSSPaintSizeOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
    return (_QWORD *)WTF::fastFree(v3, a2);
  --*(_DWORD *)v3;
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSPerspective>::construct(JSC *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  int v6;
  int v7;
  WTF::StringImpl *v8;
  WebCore::JSDOMGlobalObject *v9;
  JSC::VM *v10;
  uint64_t (***v11)(WebCore::CSSPerspective *__hidden, WTF::StringBuilder *);
  JSCell *v12;
  uint64_t (***v13)(WebCore::CSSPerspective *__hidden, WTF::StringBuilder *);
  JSC::JSCell *v14;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v16;
  JSC::JSGlobalObject *v17;
  JSC::VM *v18;
  JSC::JSObject *v19;
  JSC::Structure *v20;
  JSC::VM *FunctionRealm;
  uint64_t v22;
  unsigned int v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char **v28;
  int v29;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t SubclassStructure;
  JSValue v34;
  WTF::StringImpl *v35;
  WebCore::JSCSSTransformComponent *v36;
  JSCell *v37;
  char v38[8];
  int v39;
  uint64_t (***v40)(WebCore::CSSPerspective *__hidden, WTF::StringBuilder *);
  WTF::StringImpl *v41;
  int v42;
  JSC::VM *v43;
  uint64_t (***v44)(WebCore::CSSPerspective *__hidden, WTF::StringBuilder *);
  WTF::StringImpl *v45;
  char v46[8];
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v3 = *((_QWORD *)a1 + 7);
  v43 = (JSC::VM *)v3;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v3, a1, v34);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert((uint64_t)v46, a1, *(_QWORD *)(a2 + 48));
  v6 = v49;
  if (v49)
  {
    v12 = 0;
LABEL_31:
    if (v6 != -1)
      ((void (*)(uint64_t (****)(WebCore::CSSPerspective *__hidden, WTF::StringBuilder *), uint64_t *))off_1E3238CB0[v6])(&v40, &v47);
    return v12;
  }
  v38[0] = 0;
  v39 = -1;
  v7 = v48;
  if (v48 != -1)
  {
    ((void (*)(uint64_t (****)(WebCore::CSSPerspective *__hidden, WTF::StringBuilder *), char *, uint64_t *))off_1E3238C88[v48])(&v40, v38, &v47);
    v39 = v7;
  }
  WebCore::CSSPerspective::create((uint64_t)v38, (uint64_t)&v40);
  if (v39 != -1)
    ((void (*)(uint64_t (****)(WebCore::CSSPerspective *__hidden, WTF::StringBuilder *), char *))off_1E3238C70[v39])(&v44, v38);
  v39 = -1;
  if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
    goto LABEL_50;
  if (!v42)
  {
    v10 = *(JSC::VM **)(v5 + 40);
    v11 = v40;
    v40 = 0;
    v44 = v11;
    if (*v11 != &off_1E339FCB0)
    {
      __break(0xC471u);
      JUMPOUT(0x1948DA124);
    }
    v12 = (JSCell *)WebCore::createWrapper<WebCore::CSSPerspective,WebCore::CSSPerspective>(v10, (uint64_t *)&v44, v9);
    v13 = v44;
    v44 = 0;
    if (v13)
    {
      if (*((_DWORD *)v13 + 2) == 1)
        ((void (*)(uint64_t (***)(WebCore::CSSPerspective *__hidden, WTF::StringBuilder *)))(*v13)[4])(v13);
      else
        --*((_DWORD *)v13 + 2);
    }
    goto LABEL_13;
  }
  if (v42 == 1)
  {
    LOBYTE(v44) = (_BYTE)v40;
    v35 = v41;
    v41 = 0;
    v45 = v35;
    if (!*(_QWORD *)(v3 + 16))
    {
      WebCore::propagateExceptionSlowPath(a1, &v43, (unsigned __int8 *)&v44);
      v35 = v45;
    }
    v45 = 0;
    if (v35)
    {
      if (*(_DWORD *)v35 == 2)
        WTF::StringImpl::destroy(v35, v8);
      else
        *(_DWORD *)v35 -= 2;
    }
    v12 = 0;
LABEL_13:
    if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
    {
LABEL_50:
      v12 = 0;
LABEL_28:
      if (v42 != -1)
        ((void (*)(uint64_t (****)(WebCore::CSSPerspective *__hidden, WTF::StringBuilder *), uint64_t (****)(WebCore::CSSPerspective *__hidden, WTF::StringBuilder *)))off_1E3238CA0[v42])(&v44, &v40);
      v6 = v49;
      goto LABEL_31;
    }
    v14 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v14 & 0xFFFE000000000002) != 0
      || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v14)) == 0
      || (v17 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v18 = (JSC::VM *)*((_QWORD *)a1 + 7),
          FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v16),
          *((_DWORD *)v18 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
    {
LABEL_27:
      if (!*(_DWORD *)(v3 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) == 0)
        goto LABEL_28;
      goto LABEL_50;
    }
    v22 = *((_QWORD *)FunctionRealm + 412);
    if (v22)
    {
      v23 = *(_DWORD *)(v22 - 8);
      v24 = ((unint64_t)&WebCore::JSCSSPerspective::s_info + ~((_QWORD)&WebCore::JSCSSPerspective::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSPerspective::s_info + ~((_QWORD)&WebCore::JSCSSPerspective::s_info << 32)) >> 22);
      v25 = 9 * ((v24 + ~(v24 << 13)) ^ ((v24 + ~(v24 << 13)) >> 8));
      v26 = (v25 ^ (v25 >> 15)) + ~((v25 ^ (v25 >> 15)) << 27);
      v27 = v23 & ((v26 >> 31) ^ v26);
      v28 = *(char ***)(v22 + 16 * v27);
      if (v28 == &WebCore::JSCSSPerspective::s_info)
      {
LABEL_23:
        v19 = *(JSC::JSObject **)(v22 + 16 * v27 + 8);
        if (v19)
        {
LABEL_25:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v17, v19, v20);
          if (!*((_DWORD *)v18 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) == 0)
            JSC::JSObject::setStructure(v12, v18, SubclassStructure);
          goto LABEL_27;
        }
      }
      else
      {
        v29 = 1;
        while (v28)
        {
          v27 = ((_DWORD)v27 + v29) & v23;
          v28 = *(char ***)(v22 + 16 * v27);
          ++v29;
          if (v28 == &WebCore::JSCSSPerspective::s_info)
            goto LABEL_23;
        }
      }
    }
    Prototype = (JSC::JSCell *)WebCore::JSCSSPerspective::createPrototype(v18, FunctionRealm, v19);
    Structure = WebCore::JSCSSPerspective::createStructure((uint64_t *)v18, (uint64_t)FunctionRealm, Prototype);
    v19 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, Structure, (uint64_t)&WebCore::JSCSSPerspective::s_info);
    goto LABEL_25;
  }
  v36 = (WebCore::JSCSSTransformComponent *)std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSCSSTransformComponent::destroy(v36, v37);
}

_DWORD *WebCore::JSCSSTransformComponent::destroy(WebCore::JSCSSTransformComponent *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 32))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSCSSPerspective::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSPerspective::createPrototype(WebCore::JSCSSPerspective *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSTransformComponent::s_info
      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformComponent::s_info
                                                                      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSTransformComponent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSTransformComponent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSTransformComponentPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSTransformComponentPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSTransformComponent::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSTransformComponent::s_info);
  }
  v18 = WebCore::JSCSSPerspectivePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSPerspectivePrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSPerspectivePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSTransformComponent::prototype(WebCore::JSCSSTransformComponent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSTransformComponent::s_info
      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformComponent::s_info
                                                                      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSTransformComponent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSTransformComponent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSTransformComponentPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSTransformComponentPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSTransformComponent::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSTransformComponent::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

unint64_t WebCore::JSCSSPerspectivePrototype::create(WebCore::JSCSSPerspectivePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSPerspective::s_info, (uint64_t)&WebCore::JSCSSPerspectivePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSPerspective>,(WebCore::DOMConstructorID)402>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3216);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSCSSPerspective>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSPerspective::s_info + ~((_QWORD)&WebCore::JSCSSPerspective::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSPerspective::s_info + ~((_QWORD)&WebCore::JSCSSPerspective::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSPerspective::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSPerspective::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSPerspective::createPrototype((WebCore::JSCSSPerspective *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSPerspective::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSPerspective::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3216) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSPerspectiveConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSPerspectivePrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSPerspective>,(WebCore::DOMConstructorID)402>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSPerspective_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  JSC::VM *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  int v15;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = *(_DWORD *)(v2 + 24);
  if (v4 == -1)
    v5 = -1;
  else
    v5 = *(unsigned int *)(v2 + 24);
  switch(v5)
  {
    case 2:
      if (v4 == 2)
      {
        v8 = *(_QWORD *)(v2 + 16);
        if (v8)
          return WebCore::wrap<WebCore::CSSKeywordValue>(a1, v3, v8);
        return 2;
      }
      goto LABEL_28;
    case 1:
      if (v4 != 1)
      {
LABEL_28:
        std::__throw_bad_variant_access[abi:sn180100]();
        break;
      }
      v9 = *(_QWORD *)(a1 + 56);
      v10 = *(_QWORD *)(v2 + 16);
      if (!v10)
        return *(_QWORD *)(v9 + 41968);
      v11 = *(_DWORD *)(v10 + 4);
      if (!v11)
        return *(_QWORD *)(v9 + 41968);
      if (v11 != 1)
      {
LABEL_17:
        v12 = *(_QWORD *)(v9 + 64760);
        if (!v12 || v10 != *(_QWORD *)(v12 + 8))
          return JSC::jsStringWithCacheSlowCase();
        return v12;
      }
      v13 = *(unsigned __int8 **)(v10 + 8);
      if ((*(_BYTE *)(v10 + 16) & 4) != 0)
      {
        v14 = *v13;
      }
      else
      {
        v14 = *(unsigned __int16 *)v13;
        if (v14 > 0xFF)
          goto LABEL_17;
        v14 = v14;
      }
      return *(_QWORD *)(v9 + 8 * v14 + 42216);
    case 0:
      if (!v4)
      {
        v6 = *(_QWORD *)(v2 + 16);
        if (v6)
          return WebCore::wrap<WebCore::CSSStyleValue>(a1, (uint64_t)v3, v6);
        return 2;
      }
      goto LABEL_28;
  }
  v15 = std::__throw_bad_optional_access[abi:sn180100]();
  return WebCore::setJSCSSPerspective_length(v15);
}

BOOL WebCore::setJSCSSPerspective_length(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSC::VM *v18;
  unsigned __int8 v19[8];
  WTF::StringImpl *v20;
  char v21;
  unsigned __int8 v22[8];
  WTF::StringImpl *v23;
  char v24;
  _BYTE v25[8];
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSPerspective::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSPerspective::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v18 = (JSC::VM *)*((_QWORD *)a1 + 7);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert((uint64_t)v25, a1, a3);
  v11 = v28;
  v12 = v28 == 0;
  if (!v28)
  {
    v22[0] = 0;
    LODWORD(v23) = -1;
    v13 = v27;
    if (v27 != -1)
    {
      ((void (*)(unsigned __int8 *, unsigned __int8 *, uint64_t *))off_1E3238C88[v27])(v19, v22, &v26);
      LODWORD(v23) = v13;
    }
    WebCore::CSSPerspective::setLength(v10, (uint64_t)v22, (uint64_t)v19);
    if ((_DWORD)v23 != -1)
      ((void (*)(char *, unsigned __int8 *))off_1E3238C70[v23])(&v24, v22);
    if (v21)
    {
      v22[0] = v19[0];
      v16 = v20;
      v20 = 0;
      v23 = v16;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v18, v22);
        v16 = v23;
      }
      v23 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v14);
        else
          *(_DWORD *)v16 -= 2;
      }
      if (v21)
      {
        v17 = v20;
        v20 = 0;
        if (v17)
        {
          if (*(_DWORD *)v17 == 2)
            WTF::StringImpl::destroy(v17, v14);
          else
            *(_DWORD *)v17 -= 2;
        }
      }
    }
    v11 = v28;
  }
  if (v11 != -1)
    ((void (*)(unsigned __int8 *, uint64_t *))off_1E3238CB0[v11])(v19, &v26);
  return v12;
}

uint64_t WebCore::JSCSSPerspective::subspaceForImpl(WebCore::JSCSSPerspective *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3288);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3288))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3288);
    *(_QWORD *)(v8 + 3288) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3288);
  *(_QWORD *)(v3 + 3288) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSTransformComponent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::createWrapper<WebCore::CSSPerspective,WebCore::CSSPerspective>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSPerspective *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *Allocator;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSCSSPerspective::s_info + ~((_QWORD)&WebCore::JSCSSPerspective::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSPerspective::s_info + ~((_QWORD)&WebCore::JSCSSPerspective::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSCSSPerspective::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSCSSPerspective::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSCSSPerspective *)*((_QWORD *)a1 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSCSSPerspective::createPrototype(v15, a1, a3);
  Structure = WebCore::JSCSSPerspective::createStructure((uint64_t *)v15, (uint64_t)a1, Prototype);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSCSSPerspective::s_info);
LABEL_8:
  v18 = WebCore::JSCSSPerspective::create(v14, a1, a2);
  v19 = v18;
  v20 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner = (uint64_t)&off_1E324B1D0;
  }
  v21 = (uint64_t *)(v20 + 32);
  v28 = v5;
  if (v18)
  {
    v24 = v20;
    if ((v18 & 8) != 0)
      v25 = (v18 - 112) | 1;
    else
      v25 = v18 & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = v19;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner;
    Allocator[2] = v24;
  }
  else
  {
    Allocator = 0;
  }
  v27 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v21, &v28, (uint64_t *)&v27);
  if (v27)
    v27[1] = 3;
  return v19;
}

uint64_t WebCore::JSCSSPropertyRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSPropertyRule::createPrototype(WebCore::JSCSSPropertyRule *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSRule::s_info + ~((_QWORD)&WebCore::JSCSSRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSRule::s_info + ~((_QWORD)&WebCore::JSCSSRule::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSRule::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSRule::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSRulePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSRulePrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSRule::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSRule::s_info);
  }
  v18 = WebCore::JSCSSPropertyRulePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSPropertyRulePrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSPropertyRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSPropertyRulePrototype::create(WebCore::JSCSSPropertyRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCSSPropertyRule::s_info, &WebCore::JSCSSPropertyRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSPropertyRule>,(WebCore::DOMConstructorID)347>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2776);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSPropertyRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSPropertyRule::s_info + ~((_QWORD)&WebCore::JSCSSPropertyRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSPropertyRule::s_info + ~((_QWORD)&WebCore::JSCSSPropertyRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSPropertyRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSPropertyRule::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSPropertyRule::createPrototype((WebCore::JSCSSPropertyRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSPropertyRule::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSPropertyRule::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2776) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSPropertyRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSPropertyRulePrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSPropertyRule>,(WebCore::DOMConstructorID)347>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSPropertyRule_name(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 3) + 24) + 8);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsCSSPropertyRule_syntax(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 3) + 24) + 16);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsCSSPropertyRule_inherits(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24);
  if (!*(_BYTE *)(v2 + 25))
    return 6;
  if (*(_BYTE *)(v2 + 24))
    return 7;
  return 6;
}

uint64_t WebCore::jsCSSPropertyRule_initialValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  char *v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  WTF::StringImpl *v15;
  char *v16[2];

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 24) + 32);
  if (v3)
  {
    v4 = *(char **)(v3 + 16);
    v5 = &v4[24 * *(unsigned int *)(v3 + 28)];
    v16[0] = v4;
    v16[1] = v5;
    WebCore::CSSParserTokenRange::serialize(v16, 1, &v15);
    v6 = v15;
    if (!v15)
      return 2;
  }
  else
  {
    v6 = (WTF::StringImpl *)*MEMORY[0x1E0CBF6F0];
    if (*MEMORY[0x1E0CBF6F0])
      *(_DWORD *)v6 += 2;
    v15 = v6;
    if (!v6)
      return 2;
  }
  v8 = *(_QWORD *)(a1 + 56);
  v9 = (uint64_t *)(v8 + 41968);
  v10 = *((_DWORD *)v6 + 1);
  if (!v10)
    goto LABEL_18;
  if (v10 == 1)
  {
    v11 = (unsigned __int8 *)*((_QWORD *)v6 + 1);
    if ((*((_BYTE *)v6 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_9;
      v12 = v13;
    }
    v9 = (uint64_t *)(v8 + 8 * v12 + 42216);
LABEL_18:
    v7 = *v9;
    goto LABEL_19;
  }
LABEL_9:
  v7 = *(_QWORD *)(v8 + 64760);
  if (!v7 || v6 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v6 = v15;
    v15 = 0;
    if (!v6)
      return v7;
    goto LABEL_20;
  }
LABEL_19:
  v15 = 0;
LABEL_20:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v6);
  else
    *(_DWORD *)v6 -= 2;
  return v7;
}

uint64_t WebCore::JSCSSPropertyRule::subspaceForImpl(WebCore::JSCSSPropertyRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2816);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 2816);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 2816);
    *(_QWORD *)(v8 + 2816) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2816);
  *(_QWORD *)(v3 + 2816) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSCSSRGB>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t SlowCase;
  uint64_t v6;
  WTF *v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  WTF::StringImpl *v13;
  WebCore::JSDOMGlobalObject *v14;
  JSC::VM *v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  unint64_t v24;
  WebCore::JSCSSColorValue *v25;
  JSC::JSCell *v26;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v28;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  WTF *v42;
  uint64_t v43;
  uint64_t v44;
  WTF *v45;
  void *v46;
  int v47;
  _BYTE *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  JSC::VM *v53;
  JSC::JSCell *v54;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v56;
  JSC::JSGlobalObject *v57;
  JSC::VM *v58;
  JSC::JSObject *v59;
  JSC::Structure *v60;
  JSC::VM *FunctionRealm;
  uint64_t v62;
  unsigned int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  JSC::JSCell *v70;
  unint64_t v71;
  WebCore::JSDOMGlobalObject *v72;
  JSC::Structure *v73;
  JSC::JSCell *v74;
  uint64_t v75;
  unint64_t SubclassStructure;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *Allocator;
  JSValue v82;
  WTF::StringImpl *v83;
  unint64_t v84;
  char v85[8];
  int v86;
  char v87[8];
  int v88;
  _QWORD *v89;
  int v90;
  WTF *v91;
  WTF::StringImpl *v92;
  int v93;
  JSC::VM *v94;
  char v95;
  WTF *v96;
  WTF::StringImpl *v97;
  char v98[8];
  uint64_t v99;
  unsigned int v100;
  int v101;
  char v102[8];
  uint64_t v103;
  unsigned int v104;
  int v105;
  char v106[8];
  uint64_t v107;
  unsigned int v108;
  int v109;
  char v110[8];
  uint64_t v111;
  unsigned int v112;
  int v113;
  uint64_t v114;

  v114 = *MEMORY[0x1E0C80C00];
  SlowCase = *((_QWORD *)a1 + 7);
  v94 = (JSC::VM *)SlowCase;
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 2)
  {
    v82.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException((JSC::VM *)SlowCase, a1, v82);
  }
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(WTF **)(a2 + 48);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)v7, (uint64_t)v110);
  v8 = v113;
  if (!v113)
  {
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, *(_QWORD *)(a2 + 56), (uint64_t)v106);
    v9 = v109;
    if (v109)
    {
      SlowCase = 0;
LABEL_98:
      if (v9 != -1)
        ((void (*)(char *, uint64_t *))off_1E3238938[v9])(v102, &v107);
      v8 = v113;
      goto LABEL_101;
    }
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, *(_QWORD *)(a2 + 64), (uint64_t)v102);
    v10 = v105;
    if (v105)
    {
      SlowCase = 0;
LABEL_95:
      if (v10 != -1)
        ((void (*)(char *, uint64_t *))off_1E3238938[v10])(v98, &v103);
      v9 = v109;
      goto LABEL_98;
    }
    if ((unint64_t)(*(int *)(a2 + 32) - 5) >= 0xFFFFFFFFFFFFFFFCLL || (v11 = *(_QWORD *)(a2 + 72), v11 == 10))
    {
      v99 = 0x3FF0000000000000;
      v100 = 0;
      v101 = 0;
      v11 = 10;
    }
    else
    {
      WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, *(_QWORD *)(a2 + 72), (uint64_t)v98);
      v12 = v101;
      if (v101)
      {
        SlowCase = 0;
LABEL_92:
        if (v12 != -1)
          ((void (*)(WTF **, uint64_t *))off_1E3238938[v12])(&v91, &v99);
        v10 = v105;
        goto LABEL_95;
      }
    }
    if (!v113)
    {
      LOBYTE(v96) = 0;
      LODWORD(v97) = -1;
      v2 = v112;
      v11 = (uint64_t)off_1E3238908;
      if (v112 != -1)
      {
        ((void (*)(WTF **, WTF **, uint64_t *))off_1E3238908[v112])(&v91, &v96, &v111);
        LODWORD(v97) = v2;
      }
      if (!v109)
      {
        LOBYTE(v89) = 0;
        v90 = -1;
        v2 = v108;
        if (v108 != -1)
        {
          ((void (*)(WTF **, _QWORD **, uint64_t *))off_1E3238908[v108])(&v91, &v89, &v107);
          v90 = v2;
        }
        if (!v105)
        {
          v87[0] = 0;
          v88 = -1;
          v2 = v104;
          if (v104 != -1)
          {
            ((void (*)(WTF **, char *, uint64_t *))off_1E3238908[v104])(&v91, v87, &v103);
            v88 = v2;
          }
          if (!v101)
          {
            v85[0] = 0;
            v86 = -1;
            v2 = v100;
            if (v100 != -1)
            {
              ((void (*)(WTF **, char *, uint64_t *))off_1E3238908[v100])(&v91, v85, &v99);
              v86 = v2;
            }
            WebCore::CSSRGB::create((uint64_t)&v96, (uint64_t)&v89, (uint64_t)v87, (uint64_t)v85, (uint64_t)&v91);
            if (v86 != -1)
              ((void (*)(char *, char *))off_1E32388E8[v86])(&v95, v85);
            if (v88 != -1)
              ((void (*)(char *, char *))off_1E32388E8[v88])(v85, v87);
            if (v90 != -1)
              ((void (*)(char *, _QWORD **))off_1E32388E8[v90])(v87, &v89);
            if ((_DWORD)v97 != -1)
              ((void (*)(_QWORD **, WTF **))off_1E32388E8[v97])(&v89, &v96);
            if (*(_DWORD *)(SlowCase + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)SlowCase) & 1) != 0)
            {
              SlowCase = 0;
LABEL_89:
              if (v93 != -1)
                ((void (*)(WTF **, WTF **))off_1E3238DD8[v93])(&v96, &v91);
              v12 = v101;
              goto LABEL_92;
            }
            v11 = (uint64_t)&WebCore::JSCSSRGB::s_info;
            if (!v93)
            {
              v15 = *(JSC::VM **)(v6 + 40);
              v7 = v91;
              v91 = 0;
              if (*(uint64_t (***)())v7 != &off_1E339F850)
              {
                __break(0xC471u);
                JUMPOUT(0x1948DCBF4);
              }
              v16 = *((_QWORD *)v15 + 412);
              if (v16)
              {
                v17 = *(_DWORD *)(v16 - 8);
                v18 = ((unint64_t)&WebCore::JSCSSRGB::s_info + ~((_QWORD)&WebCore::JSCSSRGB::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSRGB::s_info + ~((_QWORD)&WebCore::JSCSSRGB::s_info << 32)) >> 22);
                v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
                v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
                v21 = v17 & ((v20 >> 31) ^ v20);
                v22 = *(char ***)(v16 + 16 * v21);
                if (v22 == &WebCore::JSCSSRGB::s_info)
                {
LABEL_37:
                  v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
                  if (v24)
                    goto LABEL_39;
                }
                else
                {
                  v23 = 1;
                  while (v22)
                  {
                    v21 = ((_DWORD)v21 + v23) & v17;
                    v22 = *(char ***)(v16 + 16 * v21);
                    ++v23;
                    if (v22 == &WebCore::JSCSSRGB::s_info)
                      goto LABEL_37;
                  }
                }
              }
              v25 = (WebCore::JSCSSColorValue *)*((_QWORD *)v15 + 7);
              v26 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v25, v15, v14);
              Structure = WebCore::JSCSSRGBPrototype::createStructure((uint64_t *)v25, (uint64_t)v15, v26);
              *(_DWORD *)(Structure + 16) |= 0x80000u;
              v30 = (JSC::JSCell *)WebCore::JSCSSRGBPrototype::create(v25, Structure, v28, v29);
              v31 = WebCore::JSCSSRGB::createStructure((uint64_t *)v25, (uint64_t)v15, v30);
              v24 = WebCore::cacheDOMStructure((JSCell *)v15, v31, (uint64_t)&WebCore::JSCSSRGB::s_info);
LABEL_39:
              v32 = *((_QWORD *)v15 + 7);
              v33 = *(_QWORD *)(v32 + 41456);
              v34 = *(_QWORD *)(v33 + 23536);
              v35 = *(_QWORD **)(v34 + 3192);
              if (v35)
                goto LABEL_59;
              v36 = *(_QWORD *)(v33 + 22648);
              if (__ldaxr((unsigned __int8 *)v36))
              {
                __clrex();
              }
              else if (!__stxr(1u, (unsigned __int8 *)v36))
              {
                goto LABEL_44;
              }
              MEMORY[0x19AEA534C](v36);
LABEL_44:
              v38 = *(_QWORD *)(v36 + 2824);
              if (!*(_QWORD *)(v38 + 3192))
              {
                v39 = WTF::fastMalloc((WTF *)0xF8);
                WTF::CString::CString((WTF::CString *)&v96, "IsoSpace T");
                v89 = 0;
                MEMORY[0x19AEA3204](v39, &v96, v32 + 192, v32 + 1872, 32, 8, &v89);
                v41 = (uint64_t)v89;
                v89 = 0;
                if (v41)
                  (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
                v42 = v96;
                v96 = 0;
                if (v42)
                {
                  if (*(_DWORD *)v42 == 1)
                    WTF::fastFree(v42, v40);
                  else
                    --*(_DWORD *)v42;
                }
                v43 = *(_QWORD *)(v38 + 3192);
                *(_QWORD *)(v38 + 3192) = v39;
                if (v43)
                  (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
              }
              v35 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
              JSC::GCClient::IsoSubspace::IsoSubspace();
              v44 = *(_QWORD *)(v34 + 3192);
              *(_QWORD *)(v34 + 3192) = v35;
              if (v44)
              {
                v45 = (WTF *)MEMORY[0x19AEA3528]();
                WTF::fastFree(v45, v46);
              }
              v47 = __ldxr((unsigned __int8 *)v36);
              v11 = (uint64_t)&WebCore::JSCSSRGB::s_info;
              if (v47 == 1)
              {
                if (!__stlxr(0, (unsigned __int8 *)v36))
                {
LABEL_59:
                  SlowCase = v35[3];
                  if (SlowCase >= v35[4])
                  {
                    SlowCase = v35[5];
                    if ((SlowCase & 1) != 0)
                    {
                      JSC::sanitizeStackForVM();
                      SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_61:
                      *(_DWORD *)SlowCase = 0;
                      WebCore::JSDOMObject::JSDOMObject(SlowCase, v24);
                      *(_QWORD *)(SlowCase + 24) = v7;
                      if (*(_BYTE *)(v32 + 755))
                        __dmb(0xAu);
                      v2 = *((_QWORD *)v15 + 415);
                      v48 = &unk_1EE2DD000;
                        goto LABEL_64;
                      goto LABEL_144;
                    }
                    v84 = *(_QWORD *)(SlowCase + 8) ^ v35[6];
                    v35[4] = SlowCase + HIDWORD(v84);
                    v35[5] = SlowCase + (int)v84;
                  }
                  v35[3] = SlowCase + 32;
                  goto LABEL_61;
                }
              }
              else
              {
                __clrex();
              }
              WTF::Lock::unlockSlow((WTF::Lock *)v36);
              goto LABEL_59;
            }
            if (v93 == 1)
            {
              LOBYTE(v96) = (_BYTE)v91;
              v83 = v92;
              v92 = 0;
              v97 = v83;
              if (!*(_QWORD *)(SlowCase + 16))
              {
                WebCore::propagateExceptionSlowPath(a1, &v94, (unsigned __int8 *)&v96);
                v83 = v97;
              }
              v97 = 0;
              if (v83)
              {
                if (*(_DWORD *)v83 == 2)
                  WTF::StringImpl::destroy(v83, v13);
                else
                  *(_DWORD *)v83 -= 2;
              }
              SlowCase = 0;
LABEL_74:
              v53 = v94;
              if (*((_DWORD *)v94 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v94) & 1) != 0)
              {
                SlowCase = 0;
                goto LABEL_89;
              }
              v54 = *(JSC::JSCell **)(a2 + 40);
              if (((unint64_t)v54 & 0xFFFE000000000002) != 0
                || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v54)) == 0
                || (v57 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
                || (v58 = (JSC::VM *)*((_QWORD *)a1 + 7),
                    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v56),
                    *((_DWORD *)v58 + 20))
                && (JSC::VM::hasExceptionsAfterHandlingTraps(v58) & 1) != 0)
              {
LABEL_88:
                if (*((_DWORD *)v53 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v53) & 1) != 0)
                  SlowCase = 0;
                goto LABEL_89;
              }
              v62 = *((_QWORD *)FunctionRealm + 412);
              if (v62)
              {
                v63 = *(_DWORD *)(v62 - 8);
                v64 = (~(v11 << 32) + v11) ^ ((unint64_t)(~(v11 << 32) + v11) >> 22);
                v65 = 9 * ((v64 + ~(v64 << 13)) ^ ((v64 + ~(v64 << 13)) >> 8));
                v66 = (v65 ^ (v65 >> 15)) + ~((v65 ^ (v65 >> 15)) << 27);
                v67 = v63 & ((v66 >> 31) ^ v66);
                v68 = *(_QWORD *)(v62 + 16 * v67);
                if (v68 == v11)
                {
LABEL_84:
                  v59 = *(JSC::JSObject **)(v62 + 16 * v67 + 8);
                  if (v59)
                  {
LABEL_86:
                    SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v57, v59, v60);
                    if (!*((_DWORD *)v58 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v58) & 1) == 0)
                      JSC::JSObject::setStructure((JSCell *)SlowCase, v58, SubclassStructure);
                    goto LABEL_88;
                  }
                }
                else
                {
                  v69 = 1;
                  while (v68)
                  {
                    v67 = ((_DWORD)v67 + v69) & v63;
                    v68 = *(_QWORD *)(v62 + 16 * v67);
                    ++v69;
                    if (v68 == v11)
                      goto LABEL_84;
                  }
                }
              }
              v70 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype(v58, FunctionRealm, v59);
              v71 = WebCore::JSCSSRGBPrototype::createStructure((uint64_t *)v58, (uint64_t)FunctionRealm, v70);
              *(_DWORD *)(v71 + 16) |= 0x80000u;
              v74 = (JSC::JSCell *)WebCore::JSCSSRGBPrototype::create(v58, v71, v72, v73);
              v75 = WebCore::JSCSSRGB::createStructure((uint64_t *)v58, (uint64_t)FunctionRealm, v74);
              v59 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v75, (uint64_t)&WebCore::JSCSSRGB::s_info);
              goto LABEL_86;
            }
          }
        }
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_144:
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner = (uint64_t)&off_1E324B170;
    v48[3656] = 1;
LABEL_64:
    if (*(_DWORD *)(v2 + 48))
    {
      v78 = v11;
      v96 = v7;
      if ((SlowCase & 8) != 0)
        v79 = (SlowCase - 112) | 1;
      else
        v79 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v79 & 1) != 0)
        v80 = v79 + 47;
      else
        v80 = *(_QWORD *)v79 + 32;
      Allocator = *(_QWORD **)(v80 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v80 + 16) = *Allocator;
      *Allocator = SlowCase;
      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      Allocator[2] = v2;
      v89 = Allocator;
      JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v2 + 32), (uint64_t *)&v96, (uint64_t *)&v89);
      if (v89)
        v89[1] = 3;
      v11 = v78;
    }
    else
    {
      if ((SlowCase & 8) != 0)
        v49 = (SlowCase - 112) | 1;
      else
        v49 = SlowCase & 0xFFFFFFFFFFFFC000;
      if ((v49 & 1) != 0)
        v50 = v49 + 47;
      else
        v50 = *(_QWORD *)v49 + 32;
      v51 = *(_QWORD **)(v50 + 16);
      if (!v51)
        v51 = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v50 + 16) = *v51;
      *v51 = SlowCase;
      v51[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSStyleValue *)::owner;
      v51[2] = v2;
      v52 = *((_QWORD *)v7 + 2);
      *((_QWORD *)v7 + 2) = v51;
      if (v52)
        *(_QWORD *)(v52 + 8) = 3;
    }
    goto LABEL_74;
  }
  SlowCase = 0;
LABEL_101:
  if (v8 != -1)
    ((void (*)(char *, uint64_t *))off_1E3238938[v8])(v106, &v111);
  return SlowCase;
}

uint64_t WebCore::JSCSSRGB::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSColorValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSRGBPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSRGBPrototype::create(WebCore::JSCSSRGBPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCSSRGB::s_info, &WebCore::JSCSSRGBPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRGB>,(WebCore::DOMConstructorID)391>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3128);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSCSSRGB>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000003, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSRGB::s_info + ~((_QWORD)&WebCore::JSCSSRGB::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSRGB::s_info + ~((_QWORD)&WebCore::JSCSSRGB::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSRGB::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSRGB::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSColorValue::prototype((WebCore::JSCSSColorValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSRGBPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSCSSRGBPrototype::create((WebCore::JSCSSRGBPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSCSSRGB::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSCSSRGB::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3128) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSRGBConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSRGBPrototype::s_info != (char **)(16
                                                      * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRGB>,(WebCore::DOMConstructorID)391>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSRGB_r(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 48);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSRGB_r(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCoreL17toCSSColorRGBCompERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISB_EENS6_21DefaultRefDerefTraitsISB_EEEENSA_INS8_15CSSKeywordValueENSC_ISH_EENSE_ISH_EEEEEEEE3__0JZNS8_L17toCSSColorRGBCompESN_E3__1EEEEEJRKNS0_6__implIJSG_SK_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 40);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSRGB_r(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSC::VM *v18;
  unsigned __int8 v19[8];
  WTF::StringImpl *v20;
  char v21;
  unsigned __int8 v22[8];
  WTF::StringImpl *v23;
  char v24;
  _BYTE v25[8];
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSRGB::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSRGB::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v18 = (JSC::VM *)*((_QWORD *)a1 + 7);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v25);
  v11 = v28;
  v12 = v28 == 0;
  if (!v28)
  {
    v22[0] = 0;
    LODWORD(v23) = -1;
    v13 = v27;
    if (v27 != -1)
    {
      ((void (*)(unsigned __int8 *, unsigned __int8 *, uint64_t *))off_1E3238908[v27])(v19, v22, &v26);
      LODWORD(v23) = v13;
    }
    WebCore::CSSRGB::setR(v10, (uint64_t)v22, (uint64_t)v19);
    if ((_DWORD)v23 != -1)
      ((void (*)(char *, unsigned __int8 *))off_1E32388E8[v23])(&v24, v22);
    if (v21)
    {
      v22[0] = v19[0];
      v16 = v20;
      v20 = 0;
      v23 = v16;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v18, v22);
        v16 = v23;
      }
      v23 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v14);
        else
          *(_DWORD *)v16 -= 2;
      }
      if (v21)
      {
        v17 = v20;
        v20 = 0;
        if (v17)
        {
          if (*(_DWORD *)v17 == 2)
            WTF::StringImpl::destroy(v17, v14);
          else
            *(_DWORD *)v17 -= 2;
        }
      }
    }
    v11 = v28;
  }
  if (v11 != -1)
    ((void (*)(unsigned __int8 *, uint64_t *))off_1E3238938[v11])(v19, &v26);
  return v12;
}

uint64_t WebCore::jsCSSRGB_g(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 64);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSRGB_g(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCoreL17toCSSColorRGBCompERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISB_EENS6_21DefaultRefDerefTraitsISB_EEEENSA_INS8_15CSSKeywordValueENSC_ISH_EENSE_ISH_EEEEEEEE3__0JZNS8_L17toCSSColorRGBCompESN_E3__1EEEEEJRKNS0_6__implIJSG_SK_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 56);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSRGB_g(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSC::VM *v18;
  unsigned __int8 v19[8];
  WTF::StringImpl *v20;
  char v21;
  unsigned __int8 v22[8];
  WTF::StringImpl *v23;
  char v24;
  _BYTE v25[8];
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSRGB::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSRGB::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v18 = (JSC::VM *)*((_QWORD *)a1 + 7);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v25);
  v11 = v28;
  v12 = v28 == 0;
  if (!v28)
  {
    v22[0] = 0;
    LODWORD(v23) = -1;
    v13 = v27;
    if (v27 != -1)
    {
      ((void (*)(unsigned __int8 *, unsigned __int8 *, uint64_t *))off_1E3238908[v27])(v19, v22, &v26);
      LODWORD(v23) = v13;
    }
    WebCore::CSSRGB::setG(v10, (uint64_t)v22, (uint64_t)v19);
    if ((_DWORD)v23 != -1)
      ((void (*)(char *, unsigned __int8 *))off_1E32388E8[v23])(&v24, v22);
    if (v21)
    {
      v22[0] = v19[0];
      v16 = v20;
      v20 = 0;
      v23 = v16;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v18, v22);
        v16 = v23;
      }
      v23 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v14);
        else
          *(_DWORD *)v16 -= 2;
      }
      if (v21)
      {
        v17 = v20;
        v20 = 0;
        if (v17)
        {
          if (*(_DWORD *)v17 == 2)
            WTF::StringImpl::destroy(v17, v14);
          else
            *(_DWORD *)v17 -= 2;
        }
      }
    }
    v11 = v28;
  }
  if (v11 != -1)
    ((void (*)(unsigned __int8 *, uint64_t *))off_1E3238938[v11])(v19, &v26);
  return v12;
}

uint64_t WebCore::jsCSSRGB_b(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 80);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSRGB_b(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCoreL17toCSSColorRGBCompERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISB_EENS6_21DefaultRefDerefTraitsISB_EEEENSA_INS8_15CSSKeywordValueENSC_ISH_EENSE_ISH_EEEEEEEE3__0JZNS8_L17toCSSColorRGBCompESN_E3__1EEEEEJRKNS0_6__implIJSG_SK_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 72);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSRGB_b(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSC::VM *v18;
  unsigned __int8 v19[8];
  WTF::StringImpl *v20;
  char v21;
  unsigned __int8 v22[8];
  WTF::StringImpl *v23;
  char v24;
  _BYTE v25[8];
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSRGB::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSRGB::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v18 = (JSC::VM *)*((_QWORD *)a1 + 7);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v25);
  v11 = v28;
  v12 = v28 == 0;
  if (!v28)
  {
    v22[0] = 0;
    LODWORD(v23) = -1;
    v13 = v27;
    if (v27 != -1)
    {
      ((void (*)(unsigned __int8 *, unsigned __int8 *, uint64_t *))off_1E3238908[v27])(v19, v22, &v26);
      LODWORD(v23) = v13;
    }
    WebCore::CSSRGB::setB(v10, (uint64_t)v22, (uint64_t)v19);
    if ((_DWORD)v23 != -1)
      ((void (*)(char *, unsigned __int8 *))off_1E32388E8[v23])(&v24, v22);
    if (v21)
    {
      v22[0] = v19[0];
      v16 = v20;
      v20 = 0;
      v23 = v16;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v18, v22);
        v16 = v23;
      }
      v23 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v14);
        else
          *(_DWORD *)v16 -= 2;
      }
      if (v21)
      {
        v17 = v20;
        v20 = 0;
        if (v17)
        {
          if (*(_DWORD *)v17 == 2)
            WTF::StringImpl::destroy(v17, v14);
          else
            *(_DWORD *)v17 -= 2;
        }
      }
    }
    v11 = v28;
  }
  if (v11 != -1)
    ((void (*)(unsigned __int8 *, uint64_t *))off_1E3238938[v11])(v19, &v26);
  return v12;
}

uint64_t WebCore::jsCSSRGB_alpha(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSGlobalObject *v9;
  int v10;
  JSC::JSRopeString *v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 96);
  if ((_DWORD)v3 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_9:
    v9 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSRGB_alpha(v9, v10, v11);
  }
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v18[0] = v14;
  ((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore13CSSColorValue17toCSSColorPercentERKNS_7variantIJNS6_6RefPtrINS8_15CSSNumericValueENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15CSSKeywordValueENSD_ISI_EENSF_ISI_EEEEEEEE3__0JZNS9_17toCSSColorPercentESO_E3__1EEEEEJRKNS0_6__implIJSH_SL_EEEEEEDcOT_DpOT0____fmatrix[v3])(&v12, v18, v2 + 88);
  v6 = v13;
  if (v13 == -1)
    v6 = -1;
  v17 = v6;
  LOBYTE(v15) = 0;
  v16 = 0;
  v18[0] = &v17;
  v18[1] = &v15;
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = &v12;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEENS_12IDLDOMStringENS5_INS_15CSSKeywordValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSK_12RawPtrTraitsIS6_EENSK_21DefaultRefDerefTraitsIS6_EEEENSK_6StringENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENSZ_IlLl1EEENSZ_IlLl2EEENSZ_IlLl3EEEEEET_S14_((uint64_t)v18, (uint64_t)v14);
  if (!v16)
    goto LABEL_9;
  v7 = v15;
  if (v13 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32388E8[v13])(v18, &v12);
  return v7;
}

BOOL WebCore::setJSCSSRGB_alpha(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  unsigned __int8 v18[8];
  WTF::StringImpl *v19;
  char v20;
  unsigned __int8 v21[8];
  WTF::StringImpl *v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSRGB::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSRGB::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v17 = (JSC::VM *)*((_QWORD *)a1 + 7);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(a1, (unint64_t)this, (uint64_t)v24);
  v11 = v27;
  v12 = v27 == 0;
  if (!v27)
  {
    v21[0] = 0;
    LODWORD(v22) = -1;
    v13 = v26;
    if (v26 != -1)
    {
      ((void (*)(unsigned __int8 *, unsigned __int8 *, uint64_t *))off_1E3238908[v26])(v18, v21, &v25);
      LODWORD(v22) = v13;
    }
    WebCore::CSSLCH::setAlpha(v10, (uint64_t)v21, (uint64_t)v18);
    if ((_DWORD)v22 != -1)
      ((void (*)(char *, unsigned __int8 *))off_1E32388E8[v22])(&v23, v21);
    if (v20)
    {
      v21[0] = v18[0];
      v16 = v19;
      v22 = v19;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v17, v21);
        v16 = v22;
      }
      v22 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v14);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v11 = v27;
  }
  if (v11 != -1)
    ((void (*)(unsigned __int8 *, uint64_t *))off_1E3238938[v11])(v18, &v25);
  return v12;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSRotate>::construct(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  char **v16;
  BOOL v17;
  JSCell *v19;
  JSValue v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL4 v25;
  char **v26;
  BOOL v27;
  uint64_t v29;
  int v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL4 v35;
  char **v36;
  BOOL v37;
  _DWORD *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _BOOL4 v43;
  char **v44;
  BOOL v45;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _BOOL4 v51;
  char **v52;
  BOOL v53;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  _DWORD *v59;
  int v60;
  int v61;
  int v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _DWORD *v67;
  char v68[8];
  int v69;
  char v70[8];
  int v71;
  unsigned int v72;
  int v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  char v78;
  _DWORD *v79;
  uint64_t v80;
  int v81;
  int v82;
  uint64_t v83;
  _DWORD *v84;
  int v85;
  int v86;
  JSC::VM *v87;
  uint64_t v88;
  int v89;
  int v90;
  uint64_t v91;

  v91 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v10 = *(int *)(a2 + 32) - 1;
  if (v10 >= 4)
    v10 = 4;
  if (!v10)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v9, a1, v20);
  }
  if (v10 != 4)
  {
    if (v10 == 1)
    {
      v83 = *((_QWORD *)a1 + 7);
      v12 = *(_QWORD *)(a2 + 24);
      v13 = *(_QWORD *)(a2 + 48);
      v87 = v9;
      if ((v13 & 0xFFFE000000000002) != 0)
        goto LABEL_17;
      v14 = *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C);
      v15 = *(_DWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) != 0;
      v16 = (char **)(16 * v14);
      if ((_DWORD)v14)
        v17 = v16 == &WebCore::JSCSSNumericValue::s_info;
      else
        v17 = 1;
      if (!v17)
      {
        do
        {
          v16 = (char **)v16[2];
          v15 = v16 != 0;
        }
        while (v16 != &WebCore::JSCSSNumericValue::s_info && v16 != 0);
      }
      if (v15 && (v31 = *(_DWORD **)(v13 + 24)) != 0)
      {
        ++v31[2];
        v79 = v31;
        WebCore::CSSRotate::create((uint64_t)&v79, (uint64_t)&v87);
        v32 = v79;
        v79 = 0;
        if (v32)
        {
          if (v32[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v32 + 16))(v32);
          else
            --v32[2];
        }
        if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0
          || (v19 = (JSCell *)WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::CSSRotate>,WebCore::ExceptionOr<WTF::Ref<WebCore::CSSRotate,WTF::RawPtrTraits<WebCore::CSSRotate>,WTF::DefaultRefDerefTraits<WebCore::CSSRotate>>>>(a1, *(JSC::VM **)(v12 + 40), (WebCore::JSDOMGlobalObject *)&v83, (uint64_t)&v87), *((_DWORD *)v9 + 20))&& (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0|| (WebCore::setSubclassStructureIfNeeded<WebCore::CSSRotate>(a1, a2, v19), *((_DWORD *)v9 + 20))&& (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
        {
          v19 = 0;
        }
        if (v89 != -1)
          ((void (*)(uint64_t *, JSC::VM **))off_1E3238EB0[v89])(&v74, &v87);
      }
      else
      {
LABEL_17:
        WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)&v87, 0, "angle", 6, "CSSRotate", 10, a8, 0, 0, "CSSNumericValue", 16);
        return 0;
      }
      return v19;
    }
    return (JSCell *)JSC::throwTypeError();
  }
  v77 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(a2 + 24);
  v23 = *(_QWORD *)(a2 + 48);
  if ((v23 & 0xFFFE000000000002) != 0)
    goto LABEL_34;
  v24 = *(unsigned int *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x4C);
  v25 = *(_DWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x4C) != 0;
  v26 = (char **)(16 * v24);
  if ((_DWORD)v24)
    v27 = v26 == &WebCore::JSCSSNumericValue::s_info;
  else
    v27 = 1;
  if (!v27)
  {
    do
    {
      v26 = (char **)v26[2];
      v25 = v26 != 0;
    }
    while (v26 != &WebCore::JSCSSNumericValue::s_info && v26 != 0);
  }
  if (v25 && (v29 = *(_QWORD *)(v23 + 24)) != 0)
  {
    ++*(_DWORD *)(v29 + 8);
    v88 = v29;
    v89 = 1;
    v90 = 0;
  }
  else
  {
LABEL_34:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v83);
    v30 = (int)v84;
    if ((_DWORD)v84)
    {
      v30 = 1;
    }
    else
    {
      v88 = v83;
      v89 = 0;
    }
    v90 = v30;
    if (v30)
    {
      v19 = 0;
      v62 = 1;
      goto LABEL_123;
    }
  }
  v33 = *(_QWORD *)(a2 + 56);
  if ((v33 & 0xFFFE000000000002) != 0)
    goto LABEL_61;
  v34 = *(unsigned int *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x4C);
  v35 = *(_DWORD *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x4C) != 0;
  v36 = (char **)(16 * v34);
  if ((_DWORD)v34)
    v37 = v36 == &WebCore::JSCSSNumericValue::s_info;
  else
    v37 = 1;
  if (!v37)
  {
    do
    {
      v36 = (char **)v36[2];
      v35 = v36 != 0;
    }
    while (v36 != &WebCore::JSCSSNumericValue::s_info && v36 != 0);
  }
  if (v35 && (v39 = *(_DWORD **)(v33 + 24)) != 0)
  {
    ++v39[2];
    v84 = v39;
    v85 = 1;
    v86 = 0;
  }
  else
  {
LABEL_61:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 56), (uint64_t)&v79);
    v40 = v80;
    if ((_DWORD)v80)
    {
      v40 = 1;
    }
    else
    {
      v84 = v79;
      v85 = 0;
    }
    v86 = v40;
    if (v40)
    {
      v19 = 0;
      v61 = 1;
LABEL_121:
      ((void (*)(_DWORD **, _DWORD **))off_1E3239548[v61])(&v79, &v84);
LABEL_122:
      v62 = v90;
      if (v90 == -1)
        return v19;
LABEL_123:
      ((void (*)(uint64_t *, uint64_t *))off_1E3239548[v62])(&v83, &v88);
      return v19;
    }
  }
  v41 = *(_QWORD *)(a2 + 64);
  if ((v41 & 0xFFFE000000000002) != 0)
    goto LABEL_78;
  v42 = *(unsigned int *)(16 * (*(_DWORD *)v41 & 0xFFFFFFFE) + 0x4C);
  v43 = *(_DWORD *)(16 * (*(_DWORD *)v41 & 0xFFFFFFFE) + 0x4C) != 0;
  v44 = (char **)(16 * v42);
  if ((_DWORD)v42)
    v45 = v44 == &WebCore::JSCSSNumericValue::s_info;
  else
    v45 = 1;
  if (!v45)
  {
    do
    {
      v44 = (char **)v44[2];
      v43 = v44 != 0;
    }
    while (v44 != &WebCore::JSCSSNumericValue::s_info && v44 != 0);
  }
  if (v43 && (v47 = *(_QWORD *)(v41 + 24)) != 0)
  {
    ++*(_DWORD *)(v47 + 8);
    v80 = v47;
    v81 = 1;
    v82 = 0;
  }
  else
  {
LABEL_78:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 64), (uint64_t)&v74);
    v48 = v75;
    if (v75)
    {
      v48 = 1;
    }
    else
    {
      v80 = v74;
      v81 = 0;
    }
    v82 = v48;
    if (v48)
    {
      v19 = 0;
      v60 = 1;
LABEL_119:
      ((void (*)(uint64_t *, uint64_t *))off_1E3239548[v60])(&v74, &v80);
LABEL_120:
      v61 = v86;
      if (v86 == -1)
        goto LABEL_122;
      goto LABEL_121;
    }
  }
  v49 = *(_QWORD *)(a2 + 72);
  v74 = *((_QWORD *)a1 + 7);
  if ((v49 & 0xFFFE000000000002) != 0)
    goto LABEL_93;
  v50 = *(unsigned int *)(16 * (*(_DWORD *)v49 & 0xFFFFFFFE) + 0x4C);
  v51 = *(_DWORD *)(16 * (*(_DWORD *)v49 & 0xFFFFFFFE) + 0x4C) != 0;
  v52 = (char **)(16 * v50);
  if ((_DWORD)v50)
    v53 = v52 == &WebCore::JSCSSNumericValue::s_info;
  else
    v53 = 1;
  if (!v53)
  {
    do
    {
      v52 = (char **)v52[2];
      v51 = v52 != 0;
    }
    while (v52 != &WebCore::JSCSSNumericValue::s_info && v52 != 0);
  }
  if (!v51 || (v55 = *(_QWORD *)(v49 + 24)) == 0)
  {
LABEL_93:
    WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)&v74, 3, "angle", 6, "CSSRotate", 10, a8, 0, 0, "CSSNumericValue", 16);
    v19 = 0;
    goto LABEL_118;
  }
  v66 = v22;
  if (!v90)
  {
    LOBYTE(v72) = 0;
    v73 = -1;
    v56 = v89;
    if (v89 != -1)
    {
      ((void (*)(uint64_t *, unsigned int *, uint64_t *))off_1E32388C8[v89])(&v74, &v72, &v88);
      v73 = v56;
    }
    if (!v86)
    {
      v70[0] = 0;
      v71 = -1;
      v57 = v85;
      if (v85 != -1)
      {
        ((void (*)(uint64_t *, char *, _DWORD **))off_1E32388C8[v85])(&v74, v70, &v84);
        v71 = v57;
      }
      if (!v82)
      {
        v68[0] = 0;
        v69 = -1;
        v58 = v81;
        if (v81 != -1)
        {
          ((void (*)(uint64_t *, char *, uint64_t *))off_1E32388C8[v81])(&v74, v68, &v80);
          v69 = v58;
        }
        ++*(_DWORD *)(v55 + 8);
        v67 = (_DWORD *)v55;
        WebCore::CSSRotate::create(&v72, (uint64_t)v70, (uint64_t)v68, (uint64_t *)&v67, (uint64_t)&v74);
        v59 = v67;
        v67 = 0;
        if (v59)
        {
          if (v59[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v59 + 16))(v59);
          else
            --v59[2];
        }
        if (v69 != -1)
          ((void (*)(char *, char *))off_1E32388B8[v69])(&v78, v68);
        v69 = -1;
        if (v71 != -1)
          ((void (*)(char *, char *))off_1E32388B8[v71])(&v78, v70);
        v71 = -1;
        if (v73 != -1)
          ((void (*)(char *, unsigned int *))off_1E32388B8[v73])(&v78, &v72);
        v73 = -1;
        if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
        {
          v19 = 0;
        }
        else
        {
          v19 = (JSCell *)WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::CSSRotate>,WebCore::ExceptionOr<WTF::Ref<WebCore::CSSRotate,WTF::RawPtrTraits<WebCore::CSSRotate>,WTF::DefaultRefDerefTraits<WebCore::CSSRotate>>>>(a1, *(JSC::VM **)(v66 + 40), (WebCore::JSDOMGlobalObject *)&v77, (uint64_t)&v74);
          if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0
            || (WebCore::setSubclassStructureIfNeeded<WebCore::CSSRotate>(a1, a2, v19), *((_DWORD *)v9 + 20))
            && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
          {
            v19 = 0;
          }
        }
        if (v76 != -1)
          ((void (*)(char *, uint64_t *))off_1E3238EB0[v76])(&v78, &v74);
LABEL_118:
        v60 = v82;
        if (v82 == -1)
          goto LABEL_120;
        goto LABEL_119;
      }
    }
  }
  v64 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSCSSRotate::analyzeHeap(v64, v65);
}

uint64_t WebCore::JSCSSRotate::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSRotate::createPrototype(WebCore::JSCSSRotate *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSTransformComponent::s_info
      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformComponent::s_info
                                                                      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSTransformComponent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSTransformComponent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSTransformComponentPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSTransformComponentPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSTransformComponent::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSTransformComponent::s_info);
  }
  v18 = WebCore::JSCSSRotatePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSRotatePrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSRotatePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSRotatePrototype::create(WebCore::JSCSSRotatePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCSSRotate::s_info, &WebCore::JSCSSRotatePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRotate>,(WebCore::DOMConstructorID)403>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3224);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSCSSRotate>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSRotate::s_info + ~((_QWORD)&WebCore::JSCSSRotate::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSRotate::s_info + ~((_QWORD)&WebCore::JSCSSRotate::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSRotate::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSRotate::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSRotate::createPrototype((WebCore::JSCSSRotate *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSRotate::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSRotate::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3224) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSRotateConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSRotatePrototype::s_info != (char **)(16
                                                         * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRotate>,(WebCore::DOMConstructorID)403>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSRotate_x(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  double v4;
  uint64_t v5;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  int v9;
  _BYTE v10[40];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14[5];

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
  v3 = *(uint64_t **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (v2)
    ++*(_DWORD *)(v2 + 8);
  v8 = v2;
  v9 = 1;
  v13 = 1;
  LOBYTE(v11) = 0;
  v12 = 0;
  v14[0] = &v13;
  v14[1] = &v11;
  v14[2] = a1;
  v14[3] = v3;
  v14[4] = &v8;
  v4 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENSS_IlLl1EEEEEET_SV_(v14, (uint64_t)v10);
  if (v12)
  {
    v5 = v11;
    if (v9 != -1)
      ((void (*)(uint64_t **, uint64_t *, double))off_1E32388B8[v9])(v14, &v8, v4);
    return v5;
  }
  else
  {
    v7 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSRotate_x(v7);
  }
}

BOOL WebCore::setJSCSSRotate_x(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  int v17;
  int v18;
  WTF::StringImpl *v19;
  int v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  char v27;
  unsigned __int8 v28[8];
  WTF::StringImpl *v29;
  char v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSRotate::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSRotate::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v24 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_25;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v16 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v16 + 8);
    v31 = v16;
    v17 = 1;
    v32 = 1;
    v33 = 0;
  }
  else
  {
LABEL_25:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, a3, (uint64_t)&v25);
    v18 = (int)v26;
    if ((_DWORD)v26)
    {
      v18 = 1;
    }
    else
    {
      v31 = v25;
      v32 = 0;
    }
    v33 = v18;
    v17 = 0;
    if (v18)
    {
      v21 = 0;
      v20 = 1;
LABEL_33:
      ((void (*)(uint64_t *, uint64_t *))off_1E3239548[v20])(&v25, &v31);
      return v21;
    }
  }
  v28[0] = 0;
  LODWORD(v29) = -1;
  ((void (*)(uint64_t *, unsigned __int8 *, uint64_t *))off_1E32388C8[v17])(&v25, v28, &v31);
  LODWORD(v29) = v17;
  WebCore::CSSRotate::setX(v10, (uint64_t)v28, &v25);
  if ((_DWORD)v29 != -1)
    ((void (*)(char *, unsigned __int8 *))off_1E32388B8[v29])(&v30, v28);
  if (v27)
  {
    v28[0] = v25;
    v23 = v26;
    v29 = v26;
    if (!*(_QWORD *)(v4 + 16))
    {
      WebCore::propagateExceptionSlowPath(a1, &v24, v28);
      v23 = v29;
    }
    v29 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v19);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  v20 = v33;
  v21 = 1;
  if (v33 != -1)
    goto LABEL_33;
  return v21;
}

uint64_t WebCore::jsCSSRotate_y(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  double v4;
  uint64_t v5;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  int v9;
  _BYTE v10[40];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14[5];

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24);
  v3 = *(uint64_t **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (v2)
    ++*(_DWORD *)(v2 + 8);
  v8 = v2;
  v9 = 1;
  v13 = 1;
  LOBYTE(v11) = 0;
  v12 = 0;
  v14[0] = &v13;
  v14[1] = &v11;
  v14[2] = a1;
  v14[3] = v3;
  v14[4] = &v8;
  v4 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENSS_IlLl1EEEEEET_SV_(v14, (uint64_t)v10);
  if (v12)
  {
    v5 = v11;
    if (v9 != -1)
      ((void (*)(uint64_t **, uint64_t *, double))off_1E32388B8[v9])(v14, &v8, v4);
    return v5;
  }
  else
  {
    v7 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSRotate_y(v7);
  }
}

BOOL WebCore::setJSCSSRotate_y(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  int v17;
  int v18;
  WTF::StringImpl *v19;
  int v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  char v27;
  unsigned __int8 v28[8];
  WTF::StringImpl *v29;
  char v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSRotate::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSRotate::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v24 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_25;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v16 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v16 + 8);
    v31 = v16;
    v17 = 1;
    v32 = 1;
    v33 = 0;
  }
  else
  {
LABEL_25:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, a3, (uint64_t)&v25);
    v18 = (int)v26;
    if ((_DWORD)v26)
    {
      v18 = 1;
    }
    else
    {
      v31 = v25;
      v32 = 0;
    }
    v33 = v18;
    v17 = 0;
    if (v18)
    {
      v21 = 0;
      v20 = 1;
LABEL_33:
      ((void (*)(uint64_t *, uint64_t *))off_1E3239548[v20])(&v25, &v31);
      return v21;
    }
  }
  v28[0] = 0;
  LODWORD(v29) = -1;
  ((void (*)(uint64_t *, unsigned __int8 *, uint64_t *))off_1E32388C8[v17])(&v25, v28, &v31);
  LODWORD(v29) = v17;
  WebCore::CSSRotate::setY(v10, (uint64_t)v28, &v25);
  if ((_DWORD)v29 != -1)
    ((void (*)(char *, unsigned __int8 *))off_1E32388B8[v29])(&v30, v28);
  if (v27)
  {
    v28[0] = v25;
    v23 = v26;
    v29 = v26;
    if (!*(_QWORD *)(v4 + 16))
    {
      WebCore::propagateExceptionSlowPath(a1, &v24, v28);
      v23 = v29;
    }
    v29 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v19);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  v20 = v33;
  v21 = 1;
  if (v33 != -1)
    goto LABEL_33;
  return v21;
}

uint64_t WebCore::jsCSSRotate_z(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  double v4;
  uint64_t v5;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  int v9;
  _BYTE v10[40];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14[5];

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  v3 = *(uint64_t **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (v2)
    ++*(_DWORD *)(v2 + 8);
  v8 = v2;
  v9 = 1;
  v13 = 1;
  LOBYTE(v11) = 0;
  v12 = 0;
  v14[0] = &v13;
  v14[1] = &v11;
  v14[2] = a1;
  v14[3] = v3;
  v14[4] = &v8;
  v4 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENSS_IlLl1EEEEEET_SV_(v14, (uint64_t)v10);
  if (v12)
  {
    v5 = v11;
    if (v9 != -1)
      ((void (*)(uint64_t **, uint64_t *, double))off_1E32388B8[v9])(v14, &v8, v4);
    return v5;
  }
  else
  {
    v7 = (JSC::JSGlobalObject *)std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSRotate_z(v7);
  }
}

BOOL WebCore::setJSCSSRotate_z(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  int v17;
  int v18;
  WTF::StringImpl *v19;
  int v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  char v27;
  unsigned __int8 v28[8];
  WTF::StringImpl *v29;
  char v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSRotate::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSRotate::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v24 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_25;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v16 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v16 + 8);
    v31 = v16;
    v17 = 1;
    v32 = 1;
    v33 = 0;
  }
  else
  {
LABEL_25:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, a3, (uint64_t)&v25);
    v18 = (int)v26;
    if ((_DWORD)v26)
    {
      v18 = 1;
    }
    else
    {
      v31 = v25;
      v32 = 0;
    }
    v33 = v18;
    v17 = 0;
    if (v18)
    {
      v21 = 0;
      v20 = 1;
LABEL_33:
      ((void (*)(uint64_t *, uint64_t *))off_1E3239548[v20])(&v25, &v31);
      return v21;
    }
  }
  v28[0] = 0;
  LODWORD(v29) = -1;
  ((void (*)(uint64_t *, unsigned __int8 *, uint64_t *))off_1E32388C8[v17])(&v25, v28, &v31);
  LODWORD(v29) = v17;
  WebCore::CSSRotate::setZ(v10, (uint64_t)v28, &v25);
  if ((_DWORD)v29 != -1)
    ((void (*)(char *, unsigned __int8 *))off_1E32388B8[v29])(&v30, v28);
  if (v27)
  {
    v28[0] = v25;
    v23 = v26;
    v29 = v26;
    if (!*(_QWORD *)(v4 + 16))
    {
      WebCore::propagateExceptionSlowPath(a1, &v24, v28);
      v23 = v29;
    }
    v29 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v19);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  v20 = v33;
  v21 = 1;
  if (v33 != -1)
    goto LABEL_33;
  return v21;
}

unint64_t WebCore::jsCSSRotate_angle(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 40));
}

BOOL WebCore::setJSCSSRotate_angle(JSC *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  _DWORD *v25;
  JSC::VM *v26;
  uint64_t v27;
  WTF::StringImpl *v28;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSRotate::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSRotate::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v26 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v27 = v4;
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_23;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v17 = *(_QWORD *)(a3 + 24)) != 0)
  {
    v18 = *(_DWORD *)(v17 + 8);
    *(_DWORD *)(v17 + 8) = v18 + 1;
    if (*(unsigned __int8 *)(v17 + 68) != 255)
      goto LABEL_35;
    v19 = (*(_DWORD *)(v17 + 60) & 0x7FFFFFFF) != 0;
    v20 = (uint8x8_t)vcnt_s8((int8x8_t)(vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_1968BCEF0, (int8x16_t)vceqzq_s32((int32x4_t)(*(_OWORD *)(v17 + 44) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))))) & 0xF));
    v20.i16[0] = vaddlv_u8(v20);
    v21 = v20.u32[0];
    if ((*(_DWORD *)(v17 + 40) & 0x7FFFFFFF) != 0)
      v21 = v20.u32[0] + 1;
    if ((*(_DWORD *)(v17 + 64) & 0x7FFFFFFF) != 0)
      ++v19;
    if (v21 + v19 != 1 || (*(_OWORD *)(v17 + 44) | 0x80000000) == 0x80000000)
    {
LABEL_35:
      if (v18)
        *(_DWORD *)(v17 + 8) = v18;
      else
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
      LOBYTE(v27) = 33;
      v28 = 0;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v26, (unsigned __int8 *)&v27);
        v24 = v28;
        v28 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v23);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
    }
    else
    {
      v25 = *(_DWORD **)(v10 + 40);
      *(_QWORD *)(v10 + 40) = v17;
      if (v25)
      {
        if (v25[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v25 + 16))(v25);
        else
          --v25[2];
      }
    }
    return 1;
  }
  else
  {
LABEL_23:
    WebCore::throwAttributeTypeError((int)a1, (int)&v27, "CSSRotate", 10, "angle", 6, "CSSNumericValue", 16);
    return 0;
  }
}

uint64_t WebCore::JSCSSRotate::subspaceForImpl(WebCore::JSCSSRotate *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3296);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3296))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3296);
    *(_QWORD *)(v8 + 3296) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3296);
  *(_QWORD *)(v3 + 3296) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::CSSRotate,WebCore::CSSRotate>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSRotate *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *Allocator;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSCSSRotate::s_info + ~((_QWORD)&WebCore::JSCSSRotate::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSRotate::s_info + ~((_QWORD)&WebCore::JSCSSRotate::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSCSSRotate::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSCSSRotate::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSCSSRotate *)*((_QWORD *)a1 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSCSSRotate::createPrototype(v15, a1, a3);
  Structure = WebCore::JSCSSRotate::createStructure((uint64_t *)v15, (uint64_t)a1, Prototype);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSCSSRotate::s_info);
LABEL_8:
  v18 = WebCore::JSCSSRotate::create(v14, a1, a2);
  v19 = v18;
  v20 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner = (uint64_t)&off_1E324B1D0;
  }
  v21 = (uint64_t *)(v20 + 32);
  v28 = v5;
  if (v18)
  {
    v24 = v20;
    if ((v18 & 8) != 0)
      v25 = (v18 - 112) | 1;
    else
      v25 = v18 & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = v19;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner;
    Allocator[2] = v24;
  }
  else
  {
    Allocator = 0;
  }
  v27 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v21, &v28, (uint64_t *)&v27);
  if (v27)
    v27[1] = 3;
  return v19;
}

JSC::VM *JSC::reifyStaticProperties<19u>(JSC::VM *result, uint64_t a2, uint64_t a3, JSC::JSObject *this)
{
  JSC::VM *v7;
  uint64_t i;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;

  v7 = result;
  if ((*(_BYTE *)((16 * *(unsigned int *)this) | 0x10) & 3) == 0)
    result = (JSC::VM *)JSC::JSObject::convertToDictionary(this, result);
  for (i = 0; i != 760; i += 40)
  {
    v9 = *(_QWORD *)(a3 + i + 8);
    if (v9)
    {
      if (v9 == 2)
        JSC::SmallStrings::singleCharacterStringRep((JSC::VM *)((char *)v7 + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v10 = v12;
      result = (JSC::VM *)JSC::reifyStaticProperty(v7, a2, (unint64_t *)&v12, a3 + i, (unsigned __int8 *)this);
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          result = (JSC::VM *)WTF::StringImpl::destroy(v10, v11);
        else
          *(_DWORD *)v10 -= 2;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSCSSRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSRulePrototype::create(WebCore::JSCSSRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  JSC::Structure *v18;
  int v19;
  unint64_t v21;
  WTF::StringImpl *v22[6];
  int v23;
  int v24;
  JSC::Structure *v25;
  int v26;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v21 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v21);
    *((_QWORD *)this + 4865) = SlowCase + (int)v21;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<19u>(this, (uint64_t)&WebCore::JSCSSRule::s_info, (uint64_t)&WebCore::JSCSSRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x1948E0870);
  }
  v10 = v9 - 192;
  if (!v9)
    v10 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v10 + 680) + 672) & 0x200) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v11 = v22[0];
    v12 = *((_DWORD *)this + 23281);
    *((_DWORD *)this + 23281) = 1;
    LODWORD(v22[0]) = -1;
    WORD2(v22[0]) = 1;
    JSC::JSObject::deleteProperty();
    *((_DWORD *)this + 23281) = v12;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v13);
      else
        *(_DWORD *)v11 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v14 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = JSC::JSString::create((uint64_t)this, v22);
  v17 = v22[0];
  v22[0] = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v15);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v26 = *(_DWORD *)SlowCase;
  v25 = v18;
  v19 = JSC::Structure::outOfLineCapacity(v18);
  v23 = 0;
  v24 = v19;
  v22[0] = (WTF::StringImpl *)&v24;
  v22[1] = (WTF::StringImpl *)SlowCase;
  v22[2] = this;
  v22[3] = (WTF::StringImpl *)&v26;
  v22[4] = (WTF::StringImpl *)&v25;
  v22[5] = (WTF::StringImpl *)&v23;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v18, this, v14, 6, (uint64_t)v22);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v23, v16);
  *((_DWORD *)v18 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34;
  unint64_t v36;
  unint64_t v37;
  WTF::StringImpl *v38;
  unint64_t v39;
  int v40;
  int v41;
  uint64_t v42;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2784);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v38) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v36 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v36);
    v5[2] = SlowCase + (int)v36;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v38, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v37 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v37);
    v9[2848] = v2 + (int)v37;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v38 = 0;
  v39 = v2;
  v40 = -1;
  v41 = 0x1000000;
  v42 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v38);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v38);
  v13 = v38;
  v38 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v38 = 0;
  v39 = v2;
  v40 = -1;
  v41 = 0x1000000;
  v42 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v38);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCSSRule::s_info + ~((_QWORD)&WebCore::JSCSSRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSRule::s_info + ~((_QWORD)&WebCore::JSCSSRule::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCSSRule::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCSSRule::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCSSRulePrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSCSSRulePrototype::create((WebCore::JSCSSRulePrototype *)a1, (JSC::VM *)a2, Structure, v26);
  v28 = WebCore::JSCSSRule::createStructure((uint64_t *)a1, a2, v27);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSCSSRule::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v24 + 48);
  v38 = 0;
  v39 = v2;
  v40 = -1;
  v41 = 0x1000000;
  v42 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v29, 14, (uint64_t)&v38);
  JSC::reifyStaticProperties<14u>((JSC::VM *)a1, (uint64_t)&WebCore::JSCSSRule::s_info, (uint64_t)&WebCore::JSCSSRuleConstructorTableValues, (JSC::JSObject *)v2);
  v30 = WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)a2);
  if (v30 && *(_BYTE *)(v30 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x1948E0D34);
  }
  v31 = v30 - 192;
  if (!v30)
    v31 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v31 + 680) + 672) & 0x200) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v32 = v38;
    v33 = *(_DWORD *)(a1 + 93124);
    *(_DWORD *)(a1 + 93124) = 1;
    LODWORD(v38) = -1;
    WORD2(v38) = 1;
    JSC::JSObject::deleteProperty();
    *(_DWORD *)(a1 + 93124) = v33;
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, v34);
      else
        *(_DWORD *)v32 -= 2;
    }
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2784) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSRulePrototype::s_info != (char **)(16
                                                       * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSRule_cssText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  (*(void (**)(WTF::StringImpl **__return_ptr))(**(_QWORD **)(a2 + 24) + 32))(&v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSCSSRule_cssText(JSC::JSGlobalObject *a1, WTF::StringImpl *a2, unint64_t this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  uint64_t v12;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v15;
  int v16;
  WTF::StringImpl *v17;
  unint64_t v18;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v18 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v9 = *(WTF::StringImpl **)(this + 8);
    if ((v9 & 1) != 0)
    {
      v9 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
      if (!v9)
        goto LABEL_17;
    }
    else if (!v9)
    {
LABEL_17:
      v17 = v9;
      goto LABEL_18;
    }
    *(_DWORD *)v9 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v18, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v10 = v17;
    if (hasExceptionsAfterHandlingTraps)
    {
      v16 = 1;
      v17 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, a2);
        else
          *(_DWORD *)v10 -= 2;
      }
      v12 = 0;
      v11 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v10 = v17;
  }
  v16 = 0;
  v15 = 0;
  if (!v10)
    goto LABEL_29;
  if (*(_DWORD *)v10 == 2)
  {
    WTF::StringImpl::destroy(v10, a2);
LABEL_29:
    v11 = 0;
    goto LABEL_23;
  }
  v11 = 0;
  *(_DWORD *)v10 -= 2;
LABEL_23:
  v12 = 1;
LABEL_24:
  ((void (*)(unint64_t *, uint64_t *))off_1E3238AF8[v11])(&v18, &v15);
  return v12;
}

unint64_t WebCore::jsCSSRule_parentRule(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v3;

  v2 = *(_QWORD *)(a2 + 24);
  if ((*(_BYTE *)(v2 + 12) & 2) != 0 && (v3 = *(_DWORD **)(v2 + 16)) != 0)
    return WebCore::wrap<WebCore::CSSRule>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v3);
  else
    return 2;
}

uint64_t WebCore::jsCSSRule_parentStyleSheet(int a1, uint64_t a2)
{
  uint64_t v2;
  JSC::VM *v3;
  char v4;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  while (1)
  {
    v4 = *(_BYTE *)(v2 + 12);
    v2 = *(_QWORD *)(v2 + 16);
    if ((v4 & 2) == 0)
      break;
    if (!v2)
      return 2;
  }
  if (v2)
    return WebCore::wrap<WebCore::CSSStyleSheet>(a1, v3, v2);
  return 2;
}

unint64_t WebCore::jsCSSRule_type(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 24);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2) <= 0xF)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2) | 0xFFFE000000000000;
  else
    return 0xFFFE000000000000;
}

uint64_t WebCore::JSCSSRule::subspaceForImpl(WebCore::JSCSSRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2824);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 2824);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 2824);
    *(_QWORD *)(v8 + 2824) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2824);
  *(_QWORD *)(v3 + 2824) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSRuleOwner::isReachableFromOpaqueRoots(uint64_t a1, WebCore::CSSRule *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  WTF::ConcurrentPtrHashSet *v8;
  _DWORD *v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v6 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsCSSRule";
    a5[1] = 25;
  }
  v7 = WebCore::root(v6, a2);
  v8 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v9 = (_DWORD *)*((_QWORD *)v8 + 6);
  if ((_DWORD *)((char *)v8 + 56) == v9)
  {
    v18 = v7;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v8, (void *)v7);
    v7 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a4 + 152))(a4, v7);
      return 1;
    }
  }
  else
  {
    v10 = v9[1];
    v11 = (v7 + ~(v7 << 32)) ^ ((unint64_t)(v7 + ~(v7 << 32)) >> 22);
    v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
    v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
    v14 = v10 & ((v13 >> 31) ^ v13);
    v15 = v14;
    while (1)
    {
      v16 = *(_QWORD *)&v9[2 * v15 + 4];
      if (!v16)
        return 0;
      if (v16 == v7)
        goto LABEL_12;
      v15 = (v15 + 1) & v10;
      if (v15 == v14)
      {
        __break(0xC471u);
        JUMPOUT(0x1948E13B4);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSCSSRuleOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

uint64_t WebCore::JSCSSRule::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSCSSRule::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSCSSRule::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRuleList>::initializeProperties(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSCSSRuleList>((WebCore::JSCSSRuleList *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

WTF::StringImpl *WebCore::JSCSSRuleListPrototype::finishCreation(WebCore::JSCSSRuleListPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t Direct;
  WTF::StringImpl *v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *result;
  WTF::StringImpl *v13;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(a2, (uint64_t)&WebCore::JSCSSRuleList::s_info, &WebCore::JSCSSRuleListPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2712);
  v5 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28) + 672);
  v6 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v5, a2, (unint64_t)v6);
  JSC::JSObject::putDirect((unsigned __int8 *)this, a2, v4, Direct, 4);
  if (*v6 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v8);
  else
    *v6 -= 2;
  v9 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v10 = JSC::jsNontrivialString((uint64_t)a2, &v13);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v9, v10, 6);
  result = v13;
  v13 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v11);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSCSSRuleList::destroy(WebCore::JSCSSRuleList *this, JSCell *a2)
{
  uint64_t result;

  result = *((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

uint64_t WebCore::JSCSSRuleList::put(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  JSC::VM *v21;
  _BYTE *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t result;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned int v32;
  int OwnProperty;
  int v34;
  int v35;
  char hasExceptionsAfterHandlingTraps;
  _BYTE v37[16];
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = (WebCore::JSDOMGlobalObject *)a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (v15)
  {
    v16 = v15;
    if (!*(_BYTE *)(v15 + 274))
    {
      v17 = *(_BYTE **)(v15 + 496);
      if (!v17)
        v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
      if (*(_QWORD *)v17)
      {
        v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
        if (v18)
        {
          v19 = *(_QWORD *)(v18 + 680);
          if (*(_BYTE *)(v19 + 243))
          {
            if (!*(_BYTE *)(v19 + 242))
              goto LABEL_23;
          }
          else if ((*(_QWORD *)(v19 + 688) & 0x80000) == 0)
          {
            goto LABEL_23;
          }
          if (v17[65])
            return JSC::JSObject::put();
        }
      }
    }
  }
LABEL_23:
  if (!a3)
    return JSC::JSObject::put();
  v20 = *(_DWORD *)(a3 + 16);
  if ((v20 & 0x20) != 0)
    return JSC::JSObject::put();
  v21 = *(JSC::VM **)(a2 + 56);
  v22 = *(_BYTE **)(a3 + 8);
  v23 = *(unsigned int *)(a3 + 4);
  if ((v20 & 4) != 0)
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *v22 - 48;
    if (v24 > 9 || v23 >= 2 && *v22 == 48)
      return JSC::JSObject::put();
    v30 = v23 - 1;
    v31 = v22 + 1;
    while (v30)
    {
      if (v24 <= 0x19999999)
      {
        v32 = *v31 - 48;
        if (v32 <= 9)
        {
          v29 = __CFADD__(v32, 10 * v24);
          v24 = v32 + 10 * v24;
          --v30;
          ++v31;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  else
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *(unsigned __int16 *)v22 - 48;
    if (v24 > 9 || v23 >= 2 && *(_WORD *)v22 == 48)
      return JSC::JSObject::put();
    v26 = (unsigned __int16 *)(v22 + 2);
    v27 = v23 - 1;
    while (v27)
    {
      if (v24 <= 0x19999999)
      {
        v28 = *v26 - 48;
        if (v28 <= 9)
        {
          v29 = __CFADD__(v28, 10 * v24);
          v24 = v28 + 10 * v24;
          ++v26;
          --v27;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  if (v24 == -1)
    return JSC::JSObject::put();
  v48 = 0;
  v49 = 0;
  v50 = 0;
  v51 = 14;
  v38 = 0xFFFFFFFF00000000;
  v40 = 0;
  v41 = 0;
  v39 = v8;
  v42 = 0x20000;
  v43 = 0;
  LOBYTE(v44) = 0;
  v45 = 0;
  v46 = 0;
  v47 = 0;
  OwnProperty = WebCore::JSCSSRuleList::legacyPlatformObjectGetOwnProperty(a1, a2, a3, (uint64_t)v37);
  if (*((_DWORD *)v21 + 20)
    && (v35 = OwnProperty,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v21),
        OwnProperty = v35,
        (hasExceptionsAfterHandlingTraps & 1) != 0)
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v21 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v45)
  {
    v34 = *(_DWORD *)(v44 + 4);
    if (!v34)
    {
      __break(0xC471u);
      JUMPOUT(0x1948E1B78);
    }
    *(_DWORD *)(v44 + 4) = v34 - 1;
  }
  return result;
}

uint64_t WebCore::JSCSSRuleList::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSCSSRuleList::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (!*(_BYTE *)(v15 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v13[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (!a3)
    return JSC::JSObject::deleteProperty();
  v16 = *(_DWORD *)(a3 + 16);
  if ((v16 & 0x20) != 0)
    return JSC::JSObject::deleteProperty();
  v17 = *(_WORD **)(a3 + 8);
  v18 = *(unsigned int *)(a3 + 4);
  if ((v16 & 4) == 0)
  {
    if ((_DWORD)v18 && (v19 = (unsigned __int16)*v17 - 48, v19 <= 9) && (v18 < 2 || *v17 != 48))
    {
      v25 = v17 + 1;
      v26 = v18 - 1;
      while (v26)
      {
        if (v19 <= 0x19999999)
        {
          v27 = *v25 - 48;
          if (v27 <= 9)
          {
            v28 = __CFADD__(v27, 10 * v19);
            v19 = v27 + 10 * v19;
            ++v25;
            --v26;
            if (!v28)
              continue;
          }
        }
        goto LABEL_29;
      }
      v7 = v19 == -1;
      v22 = v19 & 0xFFFFFF00;
      v21 = v19;
      v20 = 0x100000000;
      if (v7)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
      }
    }
    else
    {
LABEL_29:
      v20 = 0;
      v21 = 0;
      v22 = 0;
    }
    v23 = v22 | v21;
    if ((v20 & 0x100000000) != 0)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 40))(v9, v23) == 0;
    return JSC::JSObject::deleteProperty();
  }
  if (!(_DWORD)v18)
  {
    v30 = 0;
    goto LABEL_47;
  }
  v29 = *(unsigned __int8 *)v17 - 48;
  if (v29 > 9 || v18 >= 2 && *(_BYTE *)v17 == 48)
  {
LABEL_46:
    v30 = 0;
    LODWORD(v18) = 0;
LABEL_47:
    v31 = 0;
    goto LABEL_48;
  }
  v32 = v18 - 1;
  v33 = (unsigned __int8 *)v17 + 1;
  while (v32)
  {
    if (v29 > 0x19999999)
      goto LABEL_46;
    v34 = *v33 - 48;
    if (v34 > 9)
      goto LABEL_46;
    v30 = 0;
    LODWORD(v18) = 0;
    v31 = 0;
    v28 = __CFADD__(v34, 10 * v29);
    v29 = v34 + 10 * v29;
    --v32;
    ++v33;
    if (v28)
      goto LABEL_48;
  }
  if (v29 == -1)
    v30 = 0;
  else
    v30 = v29 & 0xFFFFFF00;
  if (v29 == -1)
    LODWORD(v18) = 0;
  else
    LODWORD(v18) = v29;
  if (v29 == -1)
    v31 = 0;
  else
    v31 = 0x100000000;
LABEL_48:
  v23 = v18 | v30;
  if ((v31 & 0x100000000) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 40))(v9, v23) == 0;
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSCSSRuleList::deletePropertyByIndex(WebCore::JSCSSRuleList *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return (*(uint64_t (**)(uint64_t, JSC::JSGlobalObject *))(*(_QWORD *)v11 + 40))(v11, a3) == 0;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return (*(uint64_t (**)(uint64_t, JSC::JSGlobalObject *))(*(_QWORD *)v11 + 40))(v11, a3) == 0;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return (*(uint64_t (**)(uint64_t, JSC::JSGlobalObject *))(*(_QWORD *)v11 + 40))(v11, a3) == 0;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return (*(uint64_t (**)(uint64_t, JSC::JSGlobalObject *))(*(_QWORD *)v11 + 40))(v11, a3) == 0;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return (*(uint64_t (**)(uint64_t, JSC::JSGlobalObject *))(*(_QWORD *)v11 + 40))(v11, a3) == 0;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return (*(uint64_t (**)(uint64_t, JSC::JSGlobalObject *))(*(_QWORD *)v11 + 40))(v11, a3) == 0;
  }
  if (!v15[65])
    return (*(uint64_t (**)(uint64_t, JSC::JSGlobalObject *))(*(_QWORD *)v11 + 40))(v11, a3) == 0;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSCSSRuleList::getOwnPropertySlotByIndex(WebCore::JSCSSRuleList *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  JSC::VM *v8;
  _DWORD *v9;
  unint64_t v10;
  uint64_t result;

  if ((_DWORD)a3 == -1)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v9 = (_DWORD *)(*(uint64_t (**)(_QWORD, JSC::JSGlobalObject *, JSC::JSGlobalObject *, uint64_t, JSC::PropertySlot *))(**((_QWORD **)this + 3) + 40))(*((_QWORD *)this + 3), a3, a3, a4, a5);
  if (!v9)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v10 = WebCore::wrap<WebCore::CSSRule>((uint64_t)a2, *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v9);
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
    return 0;
  *(_QWORD *)a4 = v10;
  *(_DWORD *)(a4 + 16) = 2;
  *(_QWORD *)(a4 + 32) = this;
  result = 1;
  *(_BYTE *)(a4 + 49) = 1;
  return result;
}

uint64_t WebCore::JSCSSRuleList::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v4;
  int v5;
  int v6;
  uint64_t *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl **v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  unsigned int v33;
  int v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45[2];
  char v46;
  WTF::StringImpl *v47;

  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 24) + 32))(*(_QWORD *)(a1 + 24));
  if (v4)
  {
    v5 = v4;
    v6 = 0;
    v7 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v9 = v44;
      v47 = v44;
      v10 = *((_DWORD *)v44 + 4);
      if ((v10 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v44 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v11 = *a3;
      v12 = *(unsigned int *)(*a3 + 20);
      if (v12 <= 0x13)
      {
        if ((_DWORD)v12)
        {
          v13 = *(WTF::StringImpl ***)(v11 + 8);
          while (*v13 != v44)
          {
            ++v13;
            if (!--v12)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v10 & 0x20) != 0)
        {
          v34 = *(_DWORD *)v9 + 2;
        }
        else
        {
          if ((v10 & 0x10) != 0)
          {
            *(_DWORD *)v9 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v9 = v45[0];
          }
          v34 = *(_DWORD *)v9;
          *(_DWORD *)v9 += 2;
          if (!v34)
          {
            WTF::StringImpl::destroy(v9, v8);
LABEL_54:
            v35 = (uint64_t *)(v11 + 8);
            v45[0] = v9;
            v36 = *(unsigned int *)(v11 + 20);
            if ((_DWORD)v36 == *(_DWORD *)(v11 + 16))
            {
              v37 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v35, v36 + 1, (unint64_t)v45);
              v36 = *(unsigned int *)(v11 + 20);
              v38 = *(_QWORD *)(v11 + 8);
              v39 = *v37;
              *v37 = 0;
              *(_QWORD *)(v38 + 8 * v36) = v39;
            }
            else
            {
              v40 = *v35;
              v45[0] = 0;
              *(_QWORD *)(v40 + 8 * v36) = v9;
            }
            *(_DWORD *)(v11 + 20) = v36 + 1;
            v41 = v45[0];
            v45[0] = 0;
            if (v41)
            {
              if (*(_DWORD *)v41 == 2)
                WTF::StringImpl::destroy(v41, v8);
              else
                *(_DWORD *)v41 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v9 = v34;
        goto LABEL_54;
      }
      if (!*v7 || !*(_DWORD *)(*v7 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v47, (uint64_t)v45);
      if (v46)
      {
        v9 = v47;
        v11 = *a3;
        v10 = *((_DWORD *)v47 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v42 = v44;
      v44 = 0;
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v8);
        else
          *(_DWORD *)v42 -= 2;
      }
      if (++v6 == v5)
        return JSC::JSObject::getOwnPropertyNames();
    }
    v14 = *(uint64_t **)(v11 + 8);
    v15 = &v14[v12];
    while (1)
    {
      v16 = *v14;
      v17 = *v7;
      if (*v7
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v17 = *v7) != 0))
      {
        v18 = *(_DWORD *)(v17 - 8);
      }
      else
      {
        v18 = 0;
      }
      v19 = (~(v16 << 32) + v16) ^ ((unint64_t)(~(v16 << 32) + v16) >> 22);
      v20 = 9 * ((v19 + ~(v19 << 13)) ^ ((v19 + ~(v19 << 13)) >> 8));
      v21 = (v20 ^ (v20 >> 15)) + ~((v20 ^ (v20 >> 15)) << 27);
      v22 = v18 & ((v21 >> 31) ^ v21);
      v23 = (uint64_t *)(v17 + 8 * v22);
      v24 = *v23;
      if (*v23)
      {
        v25 = 0;
        v26 = 1;
        while (v24 != v16)
        {
          if (v24 == -1)
            v25 = v23;
          v22 = (v22 + v26) & v18;
          v23 = (uint64_t *)(v17 + 8 * v22);
          v24 = *v23;
          ++v26;
          if (!*v23)
          {
            if (v25)
            {
              *v25 = 0;
              --*(_DWORD *)(*v7 - 16);
              v23 = v25;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v23 = v16;
      v27 = *v7;
      v28 = *v7 ? *(_DWORD *)(v27 - 12) + 1 : 1;
      *(_DWORD *)(v27 - 12) = v28;
      v29 = *v7;
      v30 = *v7 ? *(_DWORD *)(v29 - 12) : 0;
      v31 = (*(_DWORD *)(v29 - 16) + v30);
      v32 = *(unsigned int *)(v29 - 4);
      if (v32 > 0x400)
        break;
      if (3 * v32 <= 4 * v31)
      {
        if ((_DWORD)v32)
          goto LABEL_43;
        v33 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v14 == v15)
        goto LABEL_17;
    }
    if (v32 > 2 * v31)
      goto LABEL_47;
LABEL_43:
    v33 = (_DWORD)v32 << (6 * *(_DWORD *)(v29 - 12) >= (2 * v32));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v33, v23);
    goto LABEL_47;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSCSSRuleList::defineOwnProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;

  if (!a3)
    return JSC::JSObject::defineOwnProperty();
  v5 = *(_DWORD *)(a3 + 16);
  if ((v5 & 0x20) != 0)
    return JSC::JSObject::defineOwnProperty();
  v6 = *(_BYTE **)(a3 + 8);
  v7 = *(unsigned int *)(a3 + 4);
  if ((v5 & 4) != 0)
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *v6 - 48;
    if (v8 > 9 || v7 >= 2 && *v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v14 = v7 - 1;
    v15 = v6 + 1;
    while (v14)
    {
      if (v8 <= 0x19999999)
      {
        v16 = *v15 - 48;
        if (v16 <= 9)
        {
          v13 = __CFADD__(v16, 10 * v8);
          v8 = v16 + 10 * v8;
          --v14;
          ++v15;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  else
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *(unsigned __int16 *)v6 - 48;
    if (v8 > 9 || v7 >= 2 && *(_WORD *)v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v10 = (unsigned __int16 *)(v6 + 2);
    v11 = v7 - 1;
    while (v11)
    {
      if (v8 <= 0x19999999)
      {
        v12 = *v10 - 48;
        if (v12 <= 9)
        {
          v13 = __CFADD__(v12, 10 * v8);
          v8 = v12 + 10 * v8;
          ++v10;
          --v11;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  if (v8 == -1)
    return JSC::JSObject::defineOwnProperty();
  if (a5)
    JSC::throwTypeError();
  return 0;
}

uint64_t WebCore::JSCSSRuleList::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSRuleList::createPrototype(WebCore::JSCSSRuleList *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSCSSRuleListPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSCSSRuleListPrototype::create(WebCore::JSCSSRuleListPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSCSSRuleListPrototype::finishCreation((WebCore::JSCSSRuleListPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRuleList>,(WebCore::DOMConstructorID)349>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2792);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRuleList>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRuleList>::create(a1, Structure, (JSC::JSCell **)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2792) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSCSSRuleList::legacyPlatformObjectGetOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  JSC::VM *v6;
  int v9;
  _WORD *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  _DWORD *v15;
  unint64_t v16;
  uint64_t result;
  unsigned __int16 *v18;
  uint64_t v19;
  unsigned int v20;
  BOOL v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unsigned __int16 *v35;
  uint64_t v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 *v48;
  unsigned int v49;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned int v52;
  unint64_t v53;

  v6 = *(JSC::VM **)(a2 + 56);
  if (!a3)
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
      return JSC::JSObject::getOwnStaticPropertySlot();
    return 0;
  }
  v9 = *(_DWORD *)(a3 + 16);
  if ((v9 & 0x20) != 0)
    goto LABEL_28;
  v10 = *(_WORD **)(a3 + 8);
  v11 = *(unsigned int *)(a3 + 4);
  if ((v9 & 4) == 0)
  {
    if ((_DWORD)v11 && (v12 = (unsigned __int16)*v10 - 48, v12 <= 9))
    {
      if (v11 < 2 || *v10 != 48)
      {
        v18 = v10 + 1;
        v19 = v11 - 1;
        while (v19)
        {
          if (v12 <= 0x19999999)
          {
            v20 = *v18 - 48;
            if (v20 <= 9)
            {
              v21 = __CFADD__(v20, 10 * v12);
              v12 = v20 + 10 * v12;
              ++v18;
              --v19;
              if (!v21)
                continue;
            }
          }
          goto LABEL_6;
        }
        v22 = v12 == -1;
        v14 = v12 & 0xFFFFFF00;
        v13 = 0x100000000;
        if (v12 == -1)
        {
          v13 = 0;
          LOBYTE(v12) = 0;
        }
        if (v22)
          v14 = 0;
LABEL_8:
        v12 = v12;
        if ((v13 & 0x100000000) == 0)
          goto LABEL_28;
        goto LABEL_9;
      }
      v13 = 0;
    }
    else
    {
LABEL_6:
      v13 = 0;
      LOBYTE(v12) = 0;
    }
    v14 = 0;
    goto LABEL_8;
  }
  if (!(_DWORD)v11)
  {
    v12 = 0;
    goto LABEL_75;
  }
  v43 = *(unsigned __int8 *)v10 - 48;
  if (v43 > 9 || v11 >= 2 && *(_BYTE *)v10 == 48)
  {
LABEL_74:
    v12 = 0;
    LOBYTE(v11) = 0;
LABEL_75:
    v44 = 0;
    goto LABEL_76;
  }
  v47 = v11 - 1;
  v48 = (unsigned __int8 *)v10 + 1;
  while (v47)
  {
    if (v43 > 0x19999999)
      goto LABEL_74;
    v49 = *v48 - 48;
    if (v49 > 9)
      goto LABEL_74;
    v12 = 0;
    LOBYTE(v11) = 0;
    v44 = 0;
    v21 = __CFADD__(v49, 10 * v43);
    v43 = v49 + 10 * v43;
    --v47;
    ++v48;
    if (v21)
      goto LABEL_76;
  }
  if (v43 == -1)
    v12 = 0;
  else
    v12 = v43 & 0xFFFFFF00;
  if (v43 == -1)
    LOBYTE(v11) = 0;
  else
    LOBYTE(v11) = v43;
  if (v43 == -1)
    v44 = 0;
  else
    v44 = 0x100000000;
LABEL_76:
  v14 = v11;
  if ((v44 & 0x100000000) == 0)
    goto LABEL_28;
LABEL_9:
  v15 = (_DWORD *)(*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 24) + 40))(*(_QWORD *)(a1 + 24), v14 | v12);
  if (v15)
  {
    v16 = WebCore::wrap<WebCore::CSSRule>(a2, *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v15);
    if (!*((_DWORD *)v6 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) == 0)
    {
      *(_QWORD *)a4 = v16;
      *(_DWORD *)(a4 + 16) = 2;
      *(_QWORD *)(a4 + 32) = a1;
      result = 1;
      *(_BYTE *)(a4 + 49) = 1;
      return result;
    }
    return 0;
  }
  v6 = *(JSC::VM **)(a2 + 56);
LABEL_28:
  if (!(a3 >> 4)
    || (v23 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v23 + 0x20)) != 0)
    || (v24 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v6)) == 0
    || (v53 = a3, v25 = JSC::PropertyTable::get(v24, (uint64_t *)&v53), (_DWORD)v25 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      return 1;
    v26 = *(_DWORD *)(a3 + 16);
    if ((v26 & 0x20) == 0)
    {
      v27 = *(_BYTE **)(a3 + 8);
      v28 = *(unsigned int *)(a3 + 4);
      if ((v26 & 4) != 0)
      {
        if (!(_DWORD)v28 || (v45 = *v27 - 48, v45 > 9) || v28 >= 2 && *v27 == 48)
        {
LABEL_82:
          v46 = 0;
        }
        else
        {
          v50 = v28 - 1;
          v51 = v27 + 1;
          while (v50)
          {
            if (v45 > 0x19999999)
              goto LABEL_82;
            v52 = *v51 - 48;
            if (v52 > 9)
              goto LABEL_82;
            v46 = 0;
            v21 = __CFADD__(v52, 10 * v45);
            v45 = v52 + 10 * v45;
            --v50;
            ++v51;
            if (v21)
              goto LABEL_83;
          }
          v46 = 0x100000000;
          if (v45 == -1)
            v46 = 0;
        }
LABEL_83:
        if ((v46 & 0x100000000) == 0)
          return 0;
      }
      else
      {
        if ((_DWORD)v28
          && (v29 = *(unsigned __int16 *)v27 - 48, v29 <= 9)
          && (v28 < 2 || *(_WORD *)v27 != 48))
        {
          v35 = (unsigned __int16 *)(v27 + 2);
          v36 = v28 - 1;
          while (v36)
          {
            if (v29 <= 0x19999999)
            {
              v37 = *v35 - 48;
              if (v37 <= 9)
              {
                v21 = __CFADD__(v37, 10 * v29);
                v29 = v37 + 10 * v29;
                ++v35;
                --v36;
                if (!v21)
                  continue;
              }
            }
            goto LABEL_39;
          }
          v22 = v29 == -1;
          v30 = 0x100000000;
          if (v22)
            v30 = 0;
        }
        else
        {
LABEL_39:
          v30 = 0;
        }
        if ((v30 & 0x100000000) == 0)
          return 0;
      }
      return JSC::JSObject::getOwnPropertySlotByIndex();
    }
    return 0;
  }
  if ((int)v25 > 63)
  {
    v31 = *(_QWORD *)(a1 + 8) - 8;
    v32 = 0x3F00000000 - (v25 << 32);
  }
  else
  {
    v31 = a1 + 16;
    v32 = v25 << 32;
  }
  v33 = *(_QWORD *)(v31 + (v32 >> 29));
  if ((v33 & 0xFFFE000000000002) != 0)
  {
LABEL_48:
    *(_QWORD *)a4 = v33;
    *(_QWORD *)(a4 + 32) = a1;
    *(_DWORD *)(a4 + 16) = HIDWORD(v25);
    *(_DWORD *)(a4 + 20) = v25;
    result = 1;
    *(_WORD *)(a4 + 48) = 257;
    return result;
  }
  v34 = *(unsigned __int8 *)(v33 + 5);
  if (v34 != 6)
  {
    if (v34 == 5)
    {
      JSC::JSObject::fillGetterPropertySlot();
      return 1;
    }
    goto LABEL_48;
  }
  v38 = *(_DWORD *)(v23 + 16) & 3;
  v40 = *(_QWORD *)(v33 + 8);
  v39 = *(_QWORD *)(v33 + 16);
  if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x4C))
  {
    v42 = *(_QWORD *)(v33 + 24);
    v41 = *(_QWORD *)(v33 + 32);
    *(_QWORD *)a4 = v40;
    *(_QWORD *)(a4 + 8) = v39;
    *(_DWORD *)(a4 + 16) = HIDWORD(v25);
    *(_QWORD *)(a4 + 32) = a1;
    *(_BYTE *)(a4 + 49) = 3;
    result = 1;
    if (v38 != 2)
      *(_BYTE *)(a4 + 48) = 1;
    *(_BYTE *)(a4 + 51) = 1;
    *(_QWORD *)(a4 + 72) = v42;
    *(_QWORD *)(a4 + 80) = v41;
  }
  else
  {
    *(_QWORD *)a4 = v40;
    *(_QWORD *)(a4 + 8) = v39;
    *(_DWORD *)(a4 + 16) = HIDWORD(v25);
    *(_QWORD *)(a4 + 32) = a1;
    result = 1;
    *(_BYTE *)(a4 + 49) = 3;
    if (v38 != 2)
      *(_BYTE *)(a4 + 48) = 1;
  }
  return result;
}

unint64_t WebCore::jsCSSRuleListConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSRuleListPrototype::s_info != (char **)(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRuleList>,(WebCore::DOMConstructorID)349>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSRuleList_length(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 32))(*(_QWORD *)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::JSCSSRuleListOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  v7 = *(_QWORD *)(a3 + 32);
  v6 = (uint64_t *)(a3 + 32);
  v5 = v7;
  if (v7)
  {
    v8 = *(_DWORD *)(v5 - 8);
    v9 = (~(v4 << 32) + v4) ^ ((unint64_t)(~(v4 << 32) + v4) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = *(_QWORD *)(v5 + 16 * v12);
    if (v13 != v4)
    {
      v14 = 1;
      while (v13)
      {
        v12 = ((_DWORD)v12 + v14) & v8;
        v13 = *(_QWORD *)(v5 + 16 * v12);
        ++v14;
        if (v13 == v4)
          goto LABEL_6;
      }
      v12 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v12 != *(_DWORD *)(v5 - 4))
    {
      v15 = (_QWORD *)(v5 + 16 * v12);
      *v15 = -1;
      v18 = v15[1];
      v17 = v15 + 1;
      v16 = v18;
      if (v18)
      {
        *(_QWORD *)(v16 + 8) = 3;
        *v17 = 0;
      }
      ++*(_DWORD *)(*v6 - 16);
      v19 = *v6;
      if (*v6)
        v20 = *(_DWORD *)(v19 - 12) - 1;
      else
        v20 = -1;
      *(_DWORD *)(v19 - 12) = v20;
      v21 = *v6;
      if (*v6)
      {
        v22 = 6 * *(_DWORD *)(v21 - 12);
        v23 = *(_DWORD *)(v21 - 4);
        if (v22 < v23 && v23 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v23 >> 1, 0);
      }
    }
  }
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
}

unint64_t WebCore::toJSNewlyCreated(uint64_t a1, uint64_t a2, WTF **a3)
{
  WTF *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  WTF *v20;
  void *v21;
  int v22;
  unint64_t SlowCase;
  WTF *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *Allocator;
  unint64_t v30;
  _QWORD *v31;
  WTF *v32;

  v5 = *a3;
  v6 = WebCore::getDOMStructure<WebCore::JSCSSRuleList>(*(WebCore::JSCSSRuleList **)(a2 + 56), (JSC::JSCell **)a2);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(v7 + 41456);
  v9 = *(_QWORD *)(v8 + 23536);
  v10 = *(_QWORD **)(v9 + 2832);
  if (!v10)
  {
    v11 = *(_QWORD *)(v8 + 22648);
    if (__ldaxr((unsigned __int8 *)v11))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v11))
    {
      goto LABEL_6;
    }
    MEMORY[0x19AEA534C](v11);
LABEL_6:
    v13 = *(_QWORD *)(v11 + 2824);
    if (!*(_QWORD *)(v13 + 2832))
    {
      v14 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v32, "IsoSpace T");
      v31 = 0;
      MEMORY[0x19AEA3204](v14, &v32, v7 + 192, v7 + 1872, 32, 8, &v31);
      v16 = (uint64_t)v31;
      v31 = 0;
      if (v16)
        (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
      v17 = v32;
      v32 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 1)
          WTF::fastFree(v17, v15);
        else
          --*(_DWORD *)v17;
      }
      v18 = *(_QWORD *)(v13 + 2832);
      *(_QWORD *)(v13 + 2832) = v14;
      if (v18)
        (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    }
    v10 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v19 = *(_QWORD *)(v9 + 2832);
    *(_QWORD *)(v9 + 2832) = v10;
    if (v19)
    {
      v20 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v20, v21);
    }
    v22 = __ldxr((unsigned __int8 *)v11);
    if (v22 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v11))
        goto LABEL_21;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v11);
  }
LABEL_21:
  SlowCase = v10[3];
  if (SlowCase < v10[4])
  {
LABEL_22:
    v10[3] = SlowCase + 32;
    goto LABEL_23;
  }
  SlowCase = v10[5];
  if ((SlowCase & 1) == 0)
  {
    v30 = *(_QWORD *)(SlowCase + 8) ^ v10[6];
    v10[4] = SlowCase + HIDWORD(v30);
    v10[5] = SlowCase + (int)v30;
    goto LABEL_22;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_23:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v6);
  v24 = *a3;
  *a3 = 0;
  *(_QWORD *)(SlowCase + 24) = v24;
  if (*(_BYTE *)(v7 + 755))
    __dmb(0xAu);
  v25 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE334E48 & 1) == 0)
  {
    qword_1EE334E40 = (uint64_t)&off_1E3392C78;
    byte_1EE334E48 = 1;
  }
  v32 = v5;
  if ((SlowCase & 8) != 0)
    v26 = (SlowCase - 112) | 1;
  else
    v26 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v26 & 1) != 0)
    v27 = v26 + 47;
  else
    v27 = *(_QWORD *)v26 + 32;
  Allocator = *(_QWORD **)(v27 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v27 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334E40;
  Allocator[2] = v25;
  v31 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v25 + 32), (uint64_t *)&v32, (uint64_t *)&v31);
  if (v31)
    v31[1] = 3;
  return SlowCase;
}

{
  WTF *v3;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  WTF *v34;
  void *v35;
  int v36;
  unint64_t SlowCase;
  WTF *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *Allocator;
  unint64_t v44;
  _QWORD *v45;
  WTF *v46;

  v3 = *a3;
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))*a3 != &off_1E3203E70)
  {
    __break(0xC471u);
    JUMPOUT(0x194D12D04);
  }
  v6 = *(_QWORD *)(a2 + 3296);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSMediaKeySystemAccess::s_info
        + ~((_QWORD)&WebCore::JSMediaKeySystemAccess::s_info << 32)) ^ (((unint64_t)&WebCore::JSMediaKeySystemAccess::s_info
                                                                       + ~((_QWORD)&WebCore::JSMediaKeySystemAccess::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSMediaKeySystemAccess::s_info)
    {
LABEL_7:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_9;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSMediaKeySystemAccess::s_info)
          goto LABEL_7;
      }
    }
  }
  v15 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSMediaKeySystemAccessPrototype::createStructure(v15, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSMediaKeySystemAccessPrototype::create((WebCore::JSMediaKeySystemAccessPrototype *)v15, Structure, v17, v18);
  v20 = WebCore::JSMediaKeySystemAccess::createStructure(v15, a2, v19);
  v14 = WebCore::cacheDOMStructure((JSCell *)a2, v20, (uint64_t)&WebCore::JSMediaKeySystemAccess::s_info);
LABEL_9:
  v21 = *(_QWORD *)(a2 + 56);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 632);
  if (v24)
    goto LABEL_29;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_14;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_14:
  v27 = *(_QWORD *)(v25 + 2824);
  if (!*(_QWORD *)(v27 + 632))
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v46, "IsoSpace T");
    v45 = 0;
    MEMORY[0x19AEA3204](v28, &v46, v21 + 192, v21 + 1872, 32, 8, &v45);
    v30 = (uint64_t)v45;
    v45 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v46;
    v46 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v32 = *(_QWORD *)(v27 + 632);
    *(_QWORD *)(v27 + 632) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v33 = *(_QWORD *)(v23 + 632);
  *(_QWORD *)(v23 + 632) = v24;
  if (v33)
  {
    v34 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v34, v35);
  }
  v36 = __ldxr((unsigned __int8 *)v25);
  if (v36 != 1)
  {
    __clrex();
    goto LABEL_28;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_28:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_29:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_30:
    v24[3] = SlowCase + 32;
    goto LABEL_31;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v44 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v44);
    v24[5] = SlowCase + (int)v44;
    goto LABEL_30;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_31:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  v38 = *a3;
  *a3 = 0;
  *(_QWORD *)(SlowCase + 24) = v38;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v39 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE335FB0 & 1) == 0)
  {
    qword_1EE335FA8 = (uint64_t)&off_1E32B3500;
    byte_1EE335FB0 = 1;
  }
  v46 = v3;
  if ((SlowCase & 8) != 0)
    v40 = (SlowCase - 112) | 1;
  else
    v40 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v40 & 1) != 0)
    v41 = v40 + 47;
  else
    v41 = *(_QWORD *)v40 + 32;
  Allocator = *(_QWORD **)(v41 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v41 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE335FA8;
  Allocator[2] = v39;
  v45 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v46, (uint64_t *)&v45);
  if (v45)
    v45[1] = 3;
  return SlowCase;
}

{
  unint64_t result;

  if (*(void (***)(WebCore::MediaKeys *__hidden))*a3 == off_1E3203928)
    return WebCore::createWrapper<WebCore::MediaKeys,WebCore::MediaKeys>(a2, a3);
  result = 285;
  __break(0xC471u);
  return result;
}

{
  unint64_t result;

  if (*(void (***)(WebCore::SVGAngle *__hidden))*a3 == off_1E32EE0A0)
    return WebCore::createWrapper<WebCore::SVGAngle,WebCore::SVGAngle>(a2, a3);
  result = 421;
  __break(0xC471u);
  return result;
}

unint64_t WebCore::toJS(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  WTF *v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  v15 = (*(uint64_t (**)(WTF *))(*(_QWORD *)a3 + 16))(a3);
  v17 = a3;
  v14 = WebCore::toJSNewlyCreated(v15, a2, &v17);
  if (v17)
    (*(void (**)(WTF *))(*(_QWORD *)v17 + 24))(v17);
  return v14;
}

{
  uint64_t *v5;
  unint64_t v6;
  void *v7;
  WTF *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  WTF *v13;
  char v14;

  v5 = (uint64_t *)(*(_QWORD *)(a2 + 3320) + 32);
  v13 = a3;
  v6 = WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::get(v5, &v13);
  if (!v6)
  {
    ++*(_DWORD *)a3;
    v13 = a3;
    v6 = WebCore::createWrapper<WebCore::CanvasPattern,WebCore::CanvasPattern>(a2, &v13);
    v8 = v13;
    v13 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 1)
      {
        v10 = *((_QWORD *)v8 + 1);
        *((_QWORD *)v8 + 1) = 0;
        if (v10)
        {
          if (*(_DWORD *)v10 == 1)
          {
            if (*(_BYTE *)(v10 + 40))
            {
              v11 = *(unsigned int *)(v10 + 32);
              if ((_DWORD)v11 != -1)
                ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v11])(&v14, v10 + 24);
              *(_DWORD *)(v10 + 32) = -1;
            }
            v12 = *(unsigned int *)(v10 + 16);
            if ((_DWORD)v12 != -1)
              ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v12])(&v14, v10 + 8);
            *(_DWORD *)(v10 + 16) = -1;
            WTF::fastFree((WTF *)v10, v7);
          }
          else
          {
            --*(_DWORD *)v10;
          }
        }
        WTF::fastFree(v8, v7);
      }
      else
      {
        --*(_DWORD *)v8;
      }
    }
  }
  return v6;
}

{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  WTF *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  WTF *v14;
  WTF *v16;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 - 8);
    v5 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(WTF **)(v3 + 16 * v8);
    if (v9 == a3)
    {
LABEL_6:
      v11 = *(_QWORD *)(v3 + 16 * v8 + 8);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 8) & 3) == 0)
        {
          v12 = *(_QWORD *)v11;
          if (*(_QWORD *)v11)
            return v12;
        }
      }
    }
    else
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(WTF **)(v3 + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v16 = a3;
  v12 = WebCore::createWrapper<WebCore::GPUInternalError,WebCore::GPUInternalError>(a2, &v16);
  v14 = v16;
  v16 = 0;
  if (v14)
    WTF::RefCounted<WebCore::GPUInternalError>::deref(v14, v13);
  return v12;
}

{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  WTF *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  WTF *v14;
  WTF *v16;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 - 8);
    v5 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(WTF **)(v3 + 16 * v8);
    if (v9 == a3)
    {
LABEL_6:
      v11 = *(_QWORD *)(v3 + 16 * v8 + 8);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 8) & 3) == 0)
        {
          v12 = *(_QWORD *)v11;
          if (*(_QWORD *)v11)
            return v12;
        }
      }
    }
    else
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(WTF **)(v3 + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v16 = a3;
  v12 = WebCore::createWrapper<WebCore::GPUSupportedFeatures,WebCore::GPUSupportedFeatures>(a2, &v16);
  v14 = v16;
  v16 = 0;
  if (v14)
    WTF::RefCounted<WebCore::GPUSupportedFeatures>::deref(v14, v13);
  return v12;
}

{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  WTF *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  WTF *v14;
  WTF *v16;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 - 8);
    v5 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(WTF **)(v3 + 16 * v8);
    if (v9 == a3)
    {
LABEL_6:
      v11 = *(_QWORD *)(v3 + 16 * v8 + 8);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 8) & 3) == 0)
        {
          v12 = *(_QWORD *)v11;
          if (*(_QWORD *)v11)
            return v12;
        }
      }
    }
    else
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(WTF **)(v3 + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v16 = a3;
  v12 = WebCore::createWrapper<WebCore::GPUValidationError,WebCore::GPUValidationError>(a2, &v16);
  v14 = v16;
  v16 = 0;
  if (v14)
    WTF::RefCounted<WebCore::GPUInternalError>::deref(v14, v13);
  return v12;
}

{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  WTF *v15;
  WTF *v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  (*(void (**)(WTF *))(*(_QWORD *)a3 + 88))(a3);
  v17 = a3;
  v14 = WebCore::createWrapper<WebCore::ValidityState,WebCore::ValidityState>(a2, &v17);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(WTF *))(*(_QWORD *)v15 + 96))(v15);
  return v14;
}

uint64_t WebCore::JSCSSRuleList::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSCSSRuleList::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSCSSRuleList::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSScale>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  char **v17;
  BOOL v18;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL4 v24;
  char **v25;
  BOOL v26;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  WTF::StringImpl *v34;
  WebCore::JSDOMGlobalObject *v35;
  JSC::VM *v36;
  uint64_t (***v37)(WebCore::CSSScale *__hidden, WTF::StringBuilder *);
  JSCell *v38;
  uint64_t (***v39)(WebCore::CSSScale *__hidden, WTF::StringBuilder *);
  JSC::JSCell *v40;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v42;
  JSC::JSGlobalObject *v43;
  JSC::VM *v44;
  JSC::JSObject *v45;
  JSC::Structure *v46;
  JSC::VM *FunctionRealm;
  uint64_t v48;
  unsigned int v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char **v54;
  int v55;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t SubclassStructure;
  int v59;
  int v60;
  JSValue v62;
  WTF::StringImpl *v63;
  uint64_t (***v64)(WebCore::CSSScale *__hidden, WTF::StringBuilder *);
  WTF::StringImpl *v65;
  char v66;
  char v67[8];
  int v68;
  char v69[8];
  int v70;
  JSC::VM *v71;
  char v72;
  uint64_t v73;
  int v74;
  int v75;
  char v76;
  int v77;
  uint64_t v78;
  int v79;
  int v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t (***v84)(WebCore::CSSScale *__hidden, WTF::StringBuilder *);
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;

  v88 = *MEMORY[0x1E0C80C00];
  v3 = *((_QWORD *)a1 + 7);
  v71 = (JSC::VM *)v3;
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v62.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v3, a1, v62);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  if ((v6 & 0xFFFE000000000002) != 0)
    goto LABEL_15;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSNumericValue::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSNumericValue::s_info && v9 != 0);
  }
  if (v8 && (v12 = *(_QWORD *)(v6 + 24)) != 0)
  {
    ++*(_DWORD *)(v12 + 8);
    v81 = v12;
    v82 = 1;
    v83 = 0;
  }
  else
  {
LABEL_15:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v73);
    v13 = v74;
    if (v74)
    {
      v13 = 1;
    }
    else
    {
      v81 = v73;
      v82 = 0;
    }
    v83 = v13;
    if (v13)
    {
      v38 = 0;
      v60 = 1;
      goto LABEL_106;
    }
  }
  v14 = *(_QWORD *)(a2 + 56);
  if ((v14 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v15 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
  v16 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
  v17 = (char **)(16 * v15);
  if ((_DWORD)v15)
    v18 = v17 == &WebCore::JSCSSNumericValue::s_info;
  else
    v18 = 1;
  if (!v18)
  {
    do
    {
      v17 = (char **)v17[2];
      v16 = v17 != 0;
    }
    while (v17 != &WebCore::JSCSSNumericValue::s_info && v17 != 0);
  }
  if (v16 && (v20 = *(_QWORD *)(v14 + 24)) != 0)
  {
    ++*(_DWORD *)(v20 + 8);
    v78 = v20;
    v79 = 1;
    v80 = 0;
  }
  else
  {
LABEL_32:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 56), (uint64_t)&v73);
    v21 = v74;
    if (v74)
    {
      v21 = 1;
    }
    else
    {
      v78 = v73;
      v79 = 0;
    }
    v80 = v21;
    if (v21)
    {
      v38 = 0;
      v59 = 1;
LABEL_104:
      ((void (*)(uint64_t *, uint64_t *))off_1E3239548[v59])(&v73, &v78);
      goto LABEL_105;
    }
  }
  if ((unint64_t)(*(int *)(a2 + 32) - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v22 = *(_QWORD *)(a2 + 64), v22 == 10))
  {
    LOBYTE(v74) = 0;
    v76 = 0;
    v77 = 0;
  }
  else
  {
    if ((v22 & 0xFFFE000000000002) != 0)
      goto LABEL_52;
    v23 = *(unsigned int *)(16 * (*(_DWORD *)v22 & 0xFFFFFFFE) + 0x4C);
    v24 = *(_DWORD *)(16 * (*(_DWORD *)v22 & 0xFFFFFFFE) + 0x4C) != 0;
    v25 = (char **)(16 * v23);
    if ((_DWORD)v23)
      v26 = v25 == &WebCore::JSCSSNumericValue::s_info;
    else
      v26 = 1;
    if (!v26)
    {
      do
      {
        v25 = (char **)v25[2];
        v24 = v25 != 0;
      }
      while (v25 != &WebCore::JSCSSNumericValue::s_info && v25 != 0);
    }
    if (v24 && (v28 = *(_QWORD *)(v22 + 24)) != 0)
    {
      ++*(_DWORD *)(v28 + 8);
      v85 = v28;
      v86 = 1;
      v87 = 0;
    }
    else
    {
LABEL_52:
      WebCore::Converter<WebCore::IDLDouble>::convert(a1, *(_QWORD *)(a2 + 64), (uint64_t)&v64);
      v29 = (int)v65;
      if ((_DWORD)v65)
      {
        v29 = 1;
      }
      else
      {
        v85 = (uint64_t)v64;
        v86 = 0;
      }
      v87 = v29;
    }
    WebCore::Detail::ConversionResultStorage<std::optional<std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>>>>::ConversionResultStorage<std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>>>((uint64_t)&v73, (uint64_t)&v84);
    if (v87 != -1)
      ((void (*)(uint64_t (****)(WebCore::CSSScale *__hidden, WTF::StringBuilder *), uint64_t *))off_1E3239548[v87])(&v64, &v85);
    v30 = v77;
    if (v77)
    {
      v38 = 0;
      goto LABEL_101;
    }
  }
  if (v83)
    goto LABEL_132;
  v69[0] = 0;
  v70 = -1;
  v31 = v82;
  if (v82 != -1)
  {
    ((void (*)(uint64_t (****)(WebCore::CSSScale *__hidden, WTF::StringBuilder *), char *, uint64_t *))off_1E32388C8[v82])(&v84, v69, &v81);
    v70 = v31;
  }
  if (v80)
    goto LABEL_132;
  v67[0] = 0;
  v68 = -1;
  v32 = v79;
  if (v79 != -1)
  {
    ((void (*)(uint64_t (****)(WebCore::CSSScale *__hidden, WTF::StringBuilder *), char *, uint64_t *))off_1E32388C8[v79])(&v84, v67, &v78);
    v68 = v32;
  }
  if (v77)
    goto LABEL_132;
  LOBYTE(v64) = 0;
  v66 = 0;
  if (v76)
  {
    LODWORD(v65) = -1;
    v33 = v75;
    if (v75 != -1)
    {
      ((void (*)(uint64_t (****)(WebCore::CSSScale *__hidden, WTF::StringBuilder *), uint64_t (****)(WebCore::CSSScale *__hidden, WTF::StringBuilder *), int *))off_1E32388C8[v75])(&v84, &v64, &v74);
      LODWORD(v65) = v33;
    }
    v66 = 1;
  }
  WebCore::CSSScale::create((uint64_t)v69, (uint64_t)v67, (uint64_t)&v64, (uint64_t)&v84);
  if (v66 && (_DWORD)v65 != -1)
    ((void (*)(char *, uint64_t (****)(WebCore::CSSScale *__hidden, WTF::StringBuilder *)))off_1E32388B8[v65])(&v72, &v64);
  if (v68 != -1)
    ((void (*)(uint64_t (****)(WebCore::CSSScale *__hidden, WTF::StringBuilder *), char *))off_1E32388B8[v68])(&v64, v67);
  v68 = -1;
  if (v70 != -1)
    ((void (*)(uint64_t (****)(WebCore::CSSScale *__hidden, WTF::StringBuilder *), char *))off_1E32388B8[v70])(&v64, v69);
  v70 = -1;
  if (!*(_DWORD *)(v3 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) == 0)
  {
    if (!v86)
    {
      v36 = *(JSC::VM **)(v5 + 40);
      v37 = v84;
      v84 = 0;
      v64 = v37;
      if (*v37 != &off_1E339FF48)
      {
        __break(0xC471u);
        JUMPOUT(0x1948E3C04);
      }
      v38 = (JSCell *)WebCore::createWrapper<WebCore::CSSScale,WebCore::CSSScale>(v36, (uint64_t *)&v64, v35);
      v39 = v64;
      v64 = 0;
      if (v39)
      {
        if (*((_DWORD *)v39 + 2) == 1)
          ((void (*)(uint64_t (***)(WebCore::CSSScale *__hidden, WTF::StringBuilder *)))(*v39)[4])(v39);
        else
          --*((_DWORD *)v39 + 2);
      }
      goto LABEL_83;
    }
    if (v86 == 1)
    {
      LOBYTE(v64) = (_BYTE)v84;
      v63 = (WTF::StringImpl *)v85;
      v85 = 0;
      v65 = v63;
      if (!*(_QWORD *)(v3 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v71, (unsigned __int8 *)&v64);
        v63 = v65;
      }
      v65 = 0;
      if (v63)
      {
        if (*(_DWORD *)v63 == 2)
          WTF::StringImpl::destroy(v63, v34);
        else
          *(_DWORD *)v63 -= 2;
      }
      v38 = 0;
LABEL_83:
      if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
      {
LABEL_126:
        v38 = 0;
        goto LABEL_98;
      }
      v40 = *(JSC::JSCell **)(a2 + 40);
      if (((unint64_t)v40 & 0xFFFE000000000002) != 0
        || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v40)) == 0
        || (v43 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
        || (v44 = (JSC::VM *)*((_QWORD *)a1 + 7),
            FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v42),
            *((_DWORD *)v44 + 20))
        && (JSC::VM::hasExceptionsAfterHandlingTraps(v44) & 1) != 0)
      {
LABEL_97:
        if (!*(_DWORD *)(v3 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) == 0)
          goto LABEL_98;
        goto LABEL_126;
      }
      v48 = *((_QWORD *)FunctionRealm + 412);
      if (v48)
      {
        v49 = *(_DWORD *)(v48 - 8);
        v50 = ((unint64_t)&WebCore::JSCSSScale::s_info + ~((_QWORD)&WebCore::JSCSSScale::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSScale::s_info + ~((_QWORD)&WebCore::JSCSSScale::s_info << 32)) >> 22);
        v51 = 9 * ((v50 + ~(v50 << 13)) ^ ((v50 + ~(v50 << 13)) >> 8));
        v52 = (v51 ^ (v51 >> 15)) + ~((v51 ^ (v51 >> 15)) << 27);
        v53 = v49 & ((v52 >> 31) ^ v52);
        v54 = *(char ***)(v48 + 16 * v53);
        if (v54 == &WebCore::JSCSSScale::s_info)
        {
LABEL_93:
          v45 = *(JSC::JSObject **)(v48 + 16 * v53 + 8);
          if (v45)
          {
LABEL_95:
            SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v43, v45, v46);
            if (!*((_DWORD *)v44 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v44) & 1) == 0)
              JSC::JSObject::setStructure(v38, v44, SubclassStructure);
            goto LABEL_97;
          }
        }
        else
        {
          v55 = 1;
          while (v54)
          {
            v53 = ((_DWORD)v53 + v55) & v49;
            v54 = *(char ***)(v48 + 16 * v53);
            ++v55;
            if (v54 == &WebCore::JSCSSScale::s_info)
              goto LABEL_93;
          }
        }
      }
      Prototype = (JSC::JSCell *)WebCore::JSCSSScale::createPrototype(v44, FunctionRealm, v45);
      Structure = WebCore::JSCSSScale::createStructure((uint64_t *)v44, (uint64_t)FunctionRealm, Prototype);
      v45 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, Structure, (uint64_t)&WebCore::JSCSSScale::s_info);
      goto LABEL_95;
    }
LABEL_132:
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  v38 = 0;
LABEL_98:
  if (v86 != -1)
    ((void (*)(uint64_t (****)(WebCore::CSSScale *__hidden, WTF::StringBuilder *), uint64_t (****)(WebCore::CSSScale *__hidden, WTF::StringBuilder *)))off_1E3239528[v86])(&v64, &v84);
  v30 = v77;
LABEL_101:
  if (v30 != -1)
    ((void (*)(uint64_t (****)(WebCore::CSSScale *__hidden, WTF::StringBuilder *), int *))off_1E3239538[v30])(&v84, &v74);
  v59 = v80;
  if (v80 != -1)
    goto LABEL_104;
LABEL_105:
  v60 = v83;
  if (v83 != -1)
LABEL_106:
    ((void (*)(uint64_t *, uint64_t *))off_1E3239548[v60])(&v73, &v81);
  return v38;
}

uint64_t WebCore::JSCSSScale::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSScale::createPrototype(WebCore::JSCSSScale *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSTransformComponent::s_info
      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformComponent::s_info
                                                                      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSTransformComponent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSTransformComponent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSTransformComponentPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSTransformComponentPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSTransformComponent::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSTransformComponent::s_info);
  }
  v18 = WebCore::JSCSSScalePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSScalePrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSScalePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSScalePrototype::create(WebCore::JSCSSScalePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSCSSScale::s_info, &WebCore::JSCSSScalePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSScale>,(WebCore::DOMConstructorID)404>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3232);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSCSSScale>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSScale::s_info + ~((_QWORD)&WebCore::JSCSSScale::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSScale::s_info + ~((_QWORD)&WebCore::JSCSSScale::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSScale::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSScale::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSScale::createPrototype((WebCore::JSCSSScale *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSScale::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSScale::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3232) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSScaleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSScalePrototype::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSScale>,(WebCore::DOMConstructorID)404>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSScale_x(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  double v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _BYTE v10[40];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14[5];

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
  v3 = *(uint64_t **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (v2)
    ++*(_DWORD *)(v2 + 8);
  v8 = v2;
  v9 = 1;
  v13 = 1;
  LOBYTE(v11) = 0;
  v12 = 0;
  v14[0] = &v13;
  v14[1] = &v11;
  v14[2] = a1;
  v14[3] = v3;
  v14[4] = &v8;
  v4 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENSS_IlLl1EEEEEET_SV_(v14, (uint64_t)v10);
  if (v12)
  {
    v5 = v11;
    if (v9 != -1)
      ((void (*)(uint64_t **, uint64_t *, double))off_1E32388B8[v9])(v14, &v8, v4);
    return v5;
  }
  else
  {
    v7 = std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSScale_x(v7);
  }
}

BOOL WebCore::setJSCSSScale_x(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  uint64_t v14;
  int v15;
  int v16;
  _DWORD *v17;
  _DWORD *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v23;
  int v24;
  _DWORD *v25;
  char v26;
  char *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSCSSScale::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSCSSScale::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_25;
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSCSSNumericValue::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSCSSNumericValue::s_info && v11 != 0);
  }
  if (v10 && (v14 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v14 + 8);
    v28 = v14;
    v15 = 1;
    v29 = 1;
    v30 = 0;
  }
  else
  {
LABEL_25:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, a3, (uint64_t)&v23);
    v16 = v24;
    if (v24)
    {
      v16 = 1;
    }
    else
    {
      v28 = v23;
      v29 = 0;
    }
    v30 = v16;
    v15 = 0;
    if (v16)
    {
      v21 = 0;
      v20 = 1;
LABEL_35:
      ((void (*)(uint64_t *, uint64_t *))off_1E3239548[v20])(&v23, &v28);
      return v21;
    }
  }
  LOBYTE(v23) = 0;
  v24 = -1;
  ((void (*)(char **, uint64_t *, uint64_t *))off_1E32388C8[v15])(&v27, &v23, &v28);
  v24 = v15;
  v27 = &v26;
  __const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore15CSSNumericValue16rectifyNumberishEONS_7variantIJdNS6_6RefPtrIS9_NS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEEEEEE3__0JZNS9_16rectifyNumberishESI_E3__1EEEEEJRNS0_6__implIJdSG_EEEEEEDcOT_DpOT0____fmatrix[v15]((uint64_t *)&v25, (__int128 *)&v27, (uint64_t)&v23);
  v17 = v25;
  v25 = 0;
  v18 = *(_DWORD **)(v8 + 16);
  *(_QWORD *)(v8 + 16) = v17;
  if (v18)
  {
    v19 = v18[2] - 1;
    if (v18[2] != 1)
    {
LABEL_31:
      v18[2] = v19;
      goto LABEL_32;
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)v18 + 16))(v18);
    v18 = v25;
    v25 = 0;
    if (v18)
    {
      v19 = v18[2] - 1;
      if (v18[2] != 1)
        goto LABEL_31;
      (*(void (**)(_DWORD *))(*(_QWORD *)v18 + 16))(v18);
    }
  }
LABEL_32:
  if (v24 != -1)
    ((void (*)(char **, uint64_t *))off_1E32388B8[v24])(&v27, &v23);
  v20 = v30;
  v21 = 1;
  if (v30 != -1)
    goto LABEL_35;
  return v21;
}

uint64_t WebCore::jsCSSScale_y(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  double v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _BYTE v10[40];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14[5];

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24);
  v3 = *(uint64_t **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (v2)
    ++*(_DWORD *)(v2 + 8);
  v8 = v2;
  v9 = 1;
  v13 = 1;
  LOBYTE(v11) = 0;
  v12 = 0;
  v14[0] = &v13;
  v14[1] = &v11;
  v14[2] = a1;
  v14[3] = v3;
  v14[4] = &v8;
  v4 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENSS_IlLl1EEEEEET_SV_(v14, (uint64_t)v10);
  if (v12)
  {
    v5 = v11;
    if (v9 != -1)
      ((void (*)(uint64_t **, uint64_t *, double))off_1E32388B8[v9])(v14, &v8, v4);
    return v5;
  }
  else
  {
    v7 = std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSScale_y(v7);
  }
}

BOOL WebCore::setJSCSSScale_y(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  uint64_t v14;
  int v15;
  int v16;
  _DWORD *v17;
  _DWORD *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v23;
  int v24;
  _DWORD *v25;
  char v26;
  char *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSCSSScale::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSCSSScale::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_25;
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSCSSNumericValue::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSCSSNumericValue::s_info && v11 != 0);
  }
  if (v10 && (v14 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v14 + 8);
    v28 = v14;
    v15 = 1;
    v29 = 1;
    v30 = 0;
  }
  else
  {
LABEL_25:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, a3, (uint64_t)&v23);
    v16 = v24;
    if (v24)
    {
      v16 = 1;
    }
    else
    {
      v28 = v23;
      v29 = 0;
    }
    v30 = v16;
    v15 = 0;
    if (v16)
    {
      v21 = 0;
      v20 = 1;
LABEL_35:
      ((void (*)(uint64_t *, uint64_t *))off_1E3239548[v20])(&v23, &v28);
      return v21;
    }
  }
  LOBYTE(v23) = 0;
  v24 = -1;
  ((void (*)(char **, uint64_t *, uint64_t *))off_1E32388C8[v15])(&v27, &v23, &v28);
  v24 = v15;
  v27 = &v26;
  __const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore15CSSNumericValue16rectifyNumberishEONS_7variantIJdNS6_6RefPtrIS9_NS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEEEEEE3__0JZNS9_16rectifyNumberishESI_E3__1EEEEEJRNS0_6__implIJdSG_EEEEEEDcOT_DpOT0____fmatrix[v15]((uint64_t *)&v25, (__int128 *)&v27, (uint64_t)&v23);
  v17 = v25;
  v25 = 0;
  v18 = *(_DWORD **)(v8 + 24);
  *(_QWORD *)(v8 + 24) = v17;
  if (v18)
  {
    v19 = v18[2] - 1;
    if (v18[2] != 1)
    {
LABEL_31:
      v18[2] = v19;
      goto LABEL_32;
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)v18 + 16))(v18);
    v18 = v25;
    v25 = 0;
    if (v18)
    {
      v19 = v18[2] - 1;
      if (v18[2] != 1)
        goto LABEL_31;
      (*(void (**)(_DWORD *))(*(_QWORD *)v18 + 16))(v18);
    }
  }
LABEL_32:
  if (v24 != -1)
    ((void (*)(char **, uint64_t *))off_1E32388B8[v24])(&v27, &v23);
  v20 = v30;
  v21 = 1;
  if (v30 != -1)
    goto LABEL_35;
  return v21;
}

uint64_t WebCore::jsCSSScale_z(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  double v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _BYTE v10[40];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14[5];

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  v3 = *(uint64_t **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (v2)
    ++*(_DWORD *)(v2 + 8);
  v8 = v2;
  v9 = 1;
  v13 = 1;
  LOBYTE(v11) = 0;
  v12 = 0;
  v14[0] = &v13;
  v14[1] = &v11;
  v14[2] = a1;
  v14[3] = v3;
  v14[4] = &v8;
  v4 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_9IDLDoubleENS_12IDLInterfaceINS_15CSSNumericValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENSS_IlLl1EEEEEET_SV_(v14, (uint64_t)v10);
  if (v12)
  {
    v5 = v11;
    if (v9 != -1)
      ((void (*)(uint64_t **, uint64_t *, double))off_1E32388B8[v9])(v14, &v8, v4);
    return v5;
  }
  else
  {
    v7 = std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::setJSCSSScale_z(v7);
  }
}

BOOL WebCore::setJSCSSScale_z(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  uint64_t v14;
  int v15;
  int v16;
  _DWORD *v17;
  _DWORD *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v23;
  int v24;
  _DWORD *v25;
  char v26;
  char *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSCSSScale::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSCSSScale::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_25;
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSCSSNumericValue::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSCSSNumericValue::s_info && v11 != 0);
  }
  if (v10 && (v14 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v14 + 8);
    v28 = v14;
    v15 = 1;
    v29 = 1;
    v30 = 0;
  }
  else
  {
LABEL_25:
    WebCore::Converter<WebCore::IDLDouble>::convert(a1, a3, (uint64_t)&v23);
    v16 = v24;
    if (v24)
    {
      v16 = 1;
    }
    else
    {
      v28 = v23;
      v29 = 0;
    }
    v30 = v16;
    v15 = 0;
    if (v16)
    {
      v21 = 0;
      v20 = 1;
LABEL_35:
      ((void (*)(uint64_t *, uint64_t *))off_1E3239548[v20])(&v23, &v28);
      return v21;
    }
  }
  LOBYTE(v23) = 0;
  v24 = -1;
  ((void (*)(char **, uint64_t *, uint64_t *))off_1E32388C8[v15])(&v27, &v23, &v28);
  v24 = v15;
  v27 = &v26;
  __const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore15CSSNumericValue16rectifyNumberishEONS_7variantIJdNS6_6RefPtrIS9_NS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEEEEEE3__0JZNS9_16rectifyNumberishESI_E3__1EEEEEJRNS0_6__implIJdSG_EEEEEEDcOT_DpOT0____fmatrix[v15]((uint64_t *)&v25, (__int128 *)&v27, (uint64_t)&v23);
  v17 = v25;
  v25 = 0;
  v18 = *(_DWORD **)(v8 + 32);
  *(_QWORD *)(v8 + 32) = v17;
  if (v18)
  {
    v19 = v18[2] - 1;
    if (v18[2] != 1)
    {
LABEL_31:
      v18[2] = v19;
      goto LABEL_32;
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)v18 + 16))(v18);
    v18 = v25;
    v25 = 0;
    if (v18)
    {
      v19 = v18[2] - 1;
      if (v18[2] != 1)
        goto LABEL_31;
      (*(void (**)(_DWORD *))(*(_QWORD *)v18 + 16))(v18);
    }
  }
LABEL_32:
  if (v24 != -1)
    ((void (*)(char **, uint64_t *))off_1E32388B8[v24])(&v27, &v23);
  v20 = v30;
  v21 = 1;
  if (v30 != -1)
    goto LABEL_35;
  return v21;
}

uint64_t WebCore::JSCSSScale::subspaceForImpl(WebCore::JSCSSScale *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3304);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3304))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3304);
    *(_QWORD *)(v8 + 3304) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3304);
  *(_QWORD *)(v3 + 3304) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::CSSScale,WebCore::CSSScale>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSScale *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *Allocator;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSCSSScale::s_info + ~((_QWORD)&WebCore::JSCSSScale::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSScale::s_info + ~((_QWORD)&WebCore::JSCSSScale::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSCSSScale::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSCSSScale::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSCSSScale *)*((_QWORD *)a1 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSCSSScale::createPrototype(v15, a1, a3);
  Structure = WebCore::JSCSSScale::createStructure((uint64_t *)v15, (uint64_t)a1, Prototype);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSCSSScale::s_info);
LABEL_8:
  v18 = WebCore::JSCSSScale::create(v14, a1, a2);
  v19 = v18;
  v20 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner = (uint64_t)&off_1E324B1D0;
  }
  v21 = (uint64_t *)(v20 + 32);
  v28 = v5;
  if (v18)
  {
    v24 = v20;
    if ((v18 & 8) != 0)
      v25 = (v18 - 112) | 1;
    else
      v25 = v18 & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = v19;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner;
    Allocator[2] = v24;
  }
  else
  {
    Allocator = 0;
  }
  v27 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v21, &v28, (uint64_t *)&v27);
  if (v27)
    v27[1] = 3;
  return v19;
}

uint64_t WebCore::JSCSSScopeRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSScopeRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSScopeRulePrototype::create(WebCore::JSCSSScopeRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCSSScopeRule::s_info, &WebCore::JSCSSScopeRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSScopeRule>,(WebCore::DOMConstructorID)350>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2800);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSGroupingRule>,(WebCore::DOMConstructorID)337>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSScopeRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSScopeRule::s_info + ~((_QWORD)&WebCore::JSCSSScopeRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSScopeRule::s_info + ~((_QWORD)&WebCore::JSCSSScopeRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSScopeRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSScopeRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSGroupingRule::prototype((WebCore::JSCSSGroupingRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSScopeRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSScopeRulePrototype::create((WebCore::JSCSSScopeRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSScopeRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSScopeRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2800) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSScopeRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSScopeRulePrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSScopeRule>,(WebCore::DOMConstructorID)350>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSScopeRule_start(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WebCore::CSSSelectorList *v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  uint64_t v11;
  uint64_t result;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;
  WTF::StringImpl *v16;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_BYTE *)(v3 + 4) & 0x1F) == 0x17)
  {
    v5 = *(_QWORD *)(v3 + 40);
    v4 = (WebCore::CSSSelectorList *)(v3 + 40);
    if (!v5)
      return 2;
    WebCore::CSSSelectorList::selectorsText(v4, &v16);
    v7 = v16;
    if (!v16)
      return 2;
    v8 = *(_QWORD *)(a1 + 56);
    v9 = (uint64_t *)(v8 + 41968);
    v10 = *((_DWORD *)v16 + 1);
    if (v10)
    {
      if (v10 != 1)
      {
LABEL_6:
        v11 = *(_QWORD *)(v8 + 64760);
        if (!v11 || v16 != *(WTF::StringImpl **)(v11 + 8))
          v11 = JSC::jsStringWithCacheSlowCase();
        goto LABEL_9;
      }
      v13 = (unsigned __int8 *)*((_QWORD *)v16 + 1);
      if ((*((_BYTE *)v16 + 16) & 4) != 0)
      {
        v14 = *v13;
      }
      else
      {
        v15 = *(unsigned __int16 *)v13;
        if (v15 > 0xFF)
          goto LABEL_6;
        v14 = v15;
      }
      v9 = (uint64_t *)(v8 + 8 * v14 + 42216);
    }
    v11 = *v9;
LABEL_9:
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, v6);
    else
      *(_DWORD *)v7 -= 2;
    return v11;
  }
  result = 96;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::jsCSSScopeRule_end(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WebCore::CSSSelectorList *v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  uint64_t v11;
  uint64_t result;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;
  WTF::StringImpl *v16;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24);
  if ((*(_BYTE *)(v3 + 4) & 0x1F) == 0x17)
  {
    v5 = *(_QWORD *)(v3 + 48);
    v4 = (WebCore::CSSSelectorList *)(v3 + 48);
    if (!v5)
      return 2;
    WebCore::CSSSelectorList::selectorsText(v4, &v16);
    v7 = v16;
    if (!v16)
      return 2;
    v8 = *(_QWORD *)(a1 + 56);
    v9 = (uint64_t *)(v8 + 41968);
    v10 = *((_DWORD *)v16 + 1);
    if (v10)
    {
      if (v10 != 1)
      {
LABEL_6:
        v11 = *(_QWORD *)(v8 + 64760);
        if (!v11 || v16 != *(WTF::StringImpl **)(v11 + 8))
          v11 = JSC::jsStringWithCacheSlowCase();
        goto LABEL_9;
      }
      v13 = (unsigned __int8 *)*((_QWORD *)v16 + 1);
      if ((*((_BYTE *)v16 + 16) & 4) != 0)
      {
        v14 = *v13;
      }
      else
      {
        v15 = *(unsigned __int16 *)v13;
        if (v15 > 0xFF)
          goto LABEL_6;
        v14 = v15;
      }
      v9 = (uint64_t *)(v8 + 8 * v14 + 42216);
    }
    v11 = *v9;
LABEL_9:
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, v6);
    else
      *(_DWORD *)v7 -= 2;
    return v11;
  }
  result = 96;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSScopeRule::subspaceForImpl(WebCore::JSCSSScopeRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2840);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 2840);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 2840);
    *(_QWORD *)(v8 + 2840) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2840);
  *(_QWORD *)(v3 + 2840) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSSkew>::construct(JSC *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  char **v15;
  BOOL v16;
  JSCell *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL4 v22;
  char **v23;
  BOOL v24;
  uint64_t v26;
  WTF::StringImpl *v27;
  WebCore::JSDOMGlobalObject *v28;
  _DWORD *v29;
  _DWORD *v30;
  int v31;
  JSC::VM *v32;
  uint64_t (***v33)(WebCore::CSSSkew *__hidden, WTF::StringBuilder *);
  uint64_t (***v34)(WebCore::CSSSkew *__hidden, WTF::StringBuilder *);
  JSC::JSCell *v35;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v37;
  JSC::JSGlobalObject *v38;
  JSC::VM *v39;
  JSC::JSObject *v40;
  JSC::Structure *v41;
  JSC::VM *FunctionRealm;
  uint64_t v43;
  unsigned int v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char **v49;
  int v50;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t SubclassStructure;
  JSValue v55;
  WTF::StringImpl *v56;
  uint64_t v57;
  uint64_t v58;
  _DWORD *v59;
  _DWORD *v60;
  uint64_t (***v61)(WebCore::CSSSkew *__hidden, WTF::StringBuilder *);
  WTF::StringImpl *v62;
  int v63;
  JSC::VM *v64;
  uint64_t (***v65)(WebCore::CSSSkew *__hidden, WTF::StringBuilder *);
  WTF::StringImpl *v66;

  v9 = *((_QWORD *)this + 7);
  v64 = (JSC::VM *)v9;
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v55.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v9, this, v55);
  }
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 48);
  v61 = (uint64_t (***)(WebCore::CSSSkew *__hidden, WTF::StringBuilder *))v9;
  if ((v12 & 0xFFFE000000000002) != 0)
    goto LABEL_13;
  v13 = *(unsigned int *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C);
  v14 = *(_DWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C) != 0;
  v15 = (char **)(16 * v13);
  if ((_DWORD)v13)
    v16 = v15 == &WebCore::JSCSSNumericValue::s_info;
  else
    v16 = 1;
  if (!v16)
  {
    do
    {
      v15 = (char **)v15[2];
      v14 = v15 != 0;
    }
    while (v15 != &WebCore::JSCSSNumericValue::s_info && v15 != 0);
  }
  if (!v14 || (v19 = *(_DWORD **)(v12 + 24)) == 0)
  {
LABEL_13:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v61, 0, "ax", 3, "CSSSkew", 8, a8, 0, 0, "CSSNumericValue", 16);
    return 0;
  }
  v20 = *(_QWORD *)(a2 + 56);
  v61 = (uint64_t (***)(WebCore::CSSSkew *__hidden, WTF::StringBuilder *))v9;
  if ((v20 & 0xFFFE000000000002) != 0)
    goto LABEL_26;
  v21 = *(unsigned int *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x4C);
  v22 = *(_DWORD *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x4C) != 0;
  v23 = (char **)(16 * v21);
  if ((_DWORD)v21)
    v24 = v23 == &WebCore::JSCSSNumericValue::s_info;
  else
    v24 = 1;
  if (!v24)
  {
    do
    {
      v23 = (char **)v23[2];
      v22 = v23 != 0;
    }
    while (v23 != &WebCore::JSCSSNumericValue::s_info && v23 != 0);
  }
  if (!v22 || (v26 = *(_QWORD *)(v20 + 24)) == 0)
  {
LABEL_26:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v61, 1, "ay", 3, "CSSSkew", 8, a8, 0, 0, "CSSNumericValue", 16);
    return 0;
  }
  ++v19[2];
  v59 = (_DWORD *)v26;
  v60 = v19;
  ++*(_DWORD *)(v26 + 8);
  WebCore::CSSSkew::create((uint64_t)&v60, (uint64_t *)&v59, (uint64_t)&v61);
  v29 = v59;
  v59 = 0;
  if (v29)
  {
    if (v29[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v29 + 16))(v29);
    else
      --v29[2];
  }
  v30 = v60;
  v60 = 0;
  if (v30)
  {
    if (v30[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v30 + 16))(v30);
    else
      --v30[2];
  }
  if (*(_DWORD *)(v9 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9))
  {
    v18 = 0;
    v31 = v63;
    goto LABEL_55;
  }
  v31 = v63;
  if (!v63)
  {
    v32 = *(JSC::VM **)(v11 + 40);
    v33 = v61;
    v61 = 0;
    v65 = v33;
    if (*v33 != &off_1E339FF90)
    {
      __break(0xC471u);
      JUMPOUT(0x1948E64ACLL);
    }
    v18 = (JSCell *)WebCore::createWrapper<WebCore::CSSSkew,WebCore::CSSSkew>(v32, (uint64_t *)&v65, v28);
    v34 = v65;
    v65 = 0;
    if (v34)
    {
      if (*((_DWORD *)v34 + 2) == 1)
        ((void (*)(uint64_t (***)(WebCore::CSSSkew *__hidden, WTF::StringBuilder *)))(*v34)[4])(v34);
      else
        --*((_DWORD *)v34 + 2);
    }
    goto LABEL_40;
  }
  if (v63 == 1)
  {
    LOBYTE(v65) = (_BYTE)v61;
    v56 = v62;
    v62 = 0;
    v66 = v56;
    if (!*(_QWORD *)(v9 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v64, (unsigned __int8 *)&v65);
      v56 = v66;
    }
    v66 = 0;
    if (v56)
    {
      if (*(_DWORD *)v56 == 2)
        WTF::StringImpl::destroy(v56, v27);
      else
        *(_DWORD *)v56 -= 2;
    }
    v18 = 0;
LABEL_40:
    if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
    {
      v18 = 0;
      goto LABEL_56;
    }
    v35 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v35 & 0xFFFE000000000002) != 0)
      goto LABEL_54;
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v35);
    if (!Object)
      goto LABEL_54;
    v38 = Object;
    if (Object == *(JSC::JSGlobalObject **)(a2 + 24))
      goto LABEL_54;
    v39 = (JSC::VM *)*((_QWORD *)this + 7);
    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v37);
    if (*((_DWORD *)v39 + 20))
    {
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v39) & 1) != 0)
        goto LABEL_54;
    }
    v43 = *((_QWORD *)FunctionRealm + 412);
    if (v43)
    {
      v44 = *(_DWORD *)(v43 - 8);
      v45 = ((unint64_t)&WebCore::JSCSSSkew::s_info + ~((_QWORD)&WebCore::JSCSSSkew::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSSkew::s_info + ~((_QWORD)&WebCore::JSCSSSkew::s_info << 32)) >> 22);
      v46 = 9 * ((v45 + ~(v45 << 13)) ^ ((v45 + ~(v45 << 13)) >> 8));
      v47 = (v46 ^ (v46 >> 15)) + ~((v46 ^ (v46 >> 15)) << 27);
      v48 = v44 & ((v47 >> 31) ^ v47);
      v49 = *(char ***)(v43 + 16 * v48);
      if (v49 == &WebCore::JSCSSSkew::s_info)
      {
LABEL_50:
        v40 = *(JSC::JSObject **)(v43 + 16 * v48 + 8);
        if (v40)
        {
LABEL_52:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v38, v40, v41);
          if (!*((_DWORD *)v39 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v39) & 1) == 0)
            JSC::JSObject::setStructure(v18, v39, SubclassStructure);
LABEL_54:
          if (*(_DWORD *)(v9 + 80))
          {
            if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
              v18 = 0;
          }
LABEL_55:
          if (v31 != -1)
LABEL_56:
            ((void (*)(uint64_t (****)(WebCore::CSSSkew *__hidden, WTF::StringBuilder *), uint64_t (****)(WebCore::CSSSkew *__hidden, WTF::StringBuilder *)))off_1E3239670[v31])(&v65, &v61);
          return v18;
        }
      }
      else
      {
        v50 = 1;
        while (v49)
        {
          v48 = ((_DWORD)v48 + v50) & v44;
          v49 = *(char ***)(v43 + 16 * v48);
          ++v50;
          if (v49 == &WebCore::JSCSSSkew::s_info)
            goto LABEL_50;
        }
      }
    }
    Prototype = (JSC::JSCell *)WebCore::JSCSSSkew::createPrototype(v39, FunctionRealm, v40);
    Structure = WebCore::JSCSSSkew::createStructure((uint64_t *)v39, (uint64_t)FunctionRealm, Prototype);
    v40 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, Structure, (uint64_t)&WebCore::JSCSSSkew::s_info);
    goto LABEL_52;
  }
  v57 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSCSSSkew::analyzeHeap(v57, v58);
}

uint64_t WebCore::JSCSSSkew::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSSkew::createPrototype(WebCore::JSCSSSkew *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSTransformComponent::s_info
      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformComponent::s_info
                                                                      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSTransformComponent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSTransformComponent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSTransformComponentPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSTransformComponentPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSTransformComponent::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSTransformComponent::s_info);
  }
  v18 = WebCore::JSCSSSkewPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSSkewPrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSSkewPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSSkewPrototype::create(WebCore::JSCSSSkewPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCSSSkew::s_info, &WebCore::JSCSSSkewPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkew>,(WebCore::DOMConstructorID)405>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3240);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSCSSSkew>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSSkew::s_info + ~((_QWORD)&WebCore::JSCSSSkew::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSSkew::s_info + ~((_QWORD)&WebCore::JSCSSSkew::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSSkew::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSSkew::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSSkew::createPrototype((WebCore::JSCSSSkew *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSSkew::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSSkew::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3240) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSSkewConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSSkewPrototype::s_info != (char **)(16
                                                       * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkew>,(WebCore::DOMConstructorID)405>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSSkew_ax(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16));
}

BOOL WebCore::setJSCSSSkew_ax(JSC *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  _DWORD *v25;
  JSC::VM *v26;
  uint64_t v27;
  WTF::StringImpl *v28;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSSkew::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSSkew::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v26 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v27 = v4;
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_23;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v17 = *(_QWORD *)(a3 + 24)) != 0)
  {
    v18 = *(_DWORD *)(v17 + 8);
    *(_DWORD *)(v17 + 8) = v18 + 1;
    if (*(unsigned __int8 *)(v17 + 68) != 255)
      goto LABEL_35;
    v19 = (*(_DWORD *)(v17 + 60) & 0x7FFFFFFF) != 0;
    v20 = (uint8x8_t)vcnt_s8((int8x8_t)(vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_1968BCEF0, (int8x16_t)vceqzq_s32((int32x4_t)(*(_OWORD *)(v17 + 44) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))))) & 0xF));
    v20.i16[0] = vaddlv_u8(v20);
    v21 = v20.u32[0];
    if ((*(_DWORD *)(v17 + 40) & 0x7FFFFFFF) != 0)
      v21 = v20.u32[0] + 1;
    if ((*(_DWORD *)(v17 + 64) & 0x7FFFFFFF) != 0)
      ++v19;
    if (v21 + v19 != 1 || (*(_OWORD *)(v17 + 44) | 0x80000000) == 0x80000000)
    {
LABEL_35:
      if (v18)
        *(_DWORD *)(v17 + 8) = v18;
      else
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
      LOBYTE(v27) = 33;
      v28 = 0;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v26, (unsigned __int8 *)&v27);
        v24 = v28;
        v28 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v23);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
    }
    else
    {
      v25 = *(_DWORD **)(v10 + 16);
      *(_QWORD *)(v10 + 16) = v17;
      if (v25)
      {
        if (v25[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v25 + 16))(v25);
        else
          --v25[2];
      }
    }
    return 1;
  }
  else
  {
LABEL_23:
    WebCore::throwAttributeTypeError((int)a1, (int)&v27, "CSSSkew", 8, "ax", 3, "CSSNumericValue", 16);
    return 0;
  }
}

unint64_t WebCore::jsCSSSkew_ay(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24));
}

BOOL WebCore::setJSCSSSkew_ay(JSC *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  _DWORD *v25;
  JSC::VM *v26;
  uint64_t v27;
  WTF::StringImpl *v28;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSSkew::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSSkew::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v26 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v27 = v4;
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_23;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v17 = *(_QWORD *)(a3 + 24)) != 0)
  {
    v18 = *(_DWORD *)(v17 + 8);
    *(_DWORD *)(v17 + 8) = v18 + 1;
    if (*(unsigned __int8 *)(v17 + 68) != 255)
      goto LABEL_35;
    v19 = (*(_DWORD *)(v17 + 60) & 0x7FFFFFFF) != 0;
    v20 = (uint8x8_t)vcnt_s8((int8x8_t)(vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_1968BCEF0, (int8x16_t)vceqzq_s32((int32x4_t)(*(_OWORD *)(v17 + 44) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))))) & 0xF));
    v20.i16[0] = vaddlv_u8(v20);
    v21 = v20.u32[0];
    if ((*(_DWORD *)(v17 + 40) & 0x7FFFFFFF) != 0)
      v21 = v20.u32[0] + 1;
    if ((*(_DWORD *)(v17 + 64) & 0x7FFFFFFF) != 0)
      ++v19;
    if (v21 + v19 != 1 || (*(_OWORD *)(v17 + 44) | 0x80000000) == 0x80000000)
    {
LABEL_35:
      if (v18)
        *(_DWORD *)(v17 + 8) = v18;
      else
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
      LOBYTE(v27) = 33;
      v28 = 0;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v26, (unsigned __int8 *)&v27);
        v24 = v28;
        v28 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v23);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
    }
    else
    {
      v25 = *(_DWORD **)(v10 + 24);
      *(_QWORD *)(v10 + 24) = v17;
      if (v25)
      {
        if (v25[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v25 + 16))(v25);
        else
          --v25[2];
      }
    }
    return 1;
  }
  else
  {
LABEL_23:
    WebCore::throwAttributeTypeError((int)a1, (int)&v27, "CSSSkew", 8, "ay", 3, "CSSNumericValue", 16);
    return 0;
  }
}

uint64_t WebCore::JSCSSSkew::subspaceForImpl(WebCore::JSCSSSkew *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3312);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3312))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3312);
    *(_QWORD *)(v8 + 3312) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3312);
  *(_QWORD *)(v3 + 3312) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::CSSSkew,WebCore::CSSSkew>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSSkew *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *Allocator;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSCSSSkew::s_info + ~((_QWORD)&WebCore::JSCSSSkew::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSSkew::s_info + ~((_QWORD)&WebCore::JSCSSSkew::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSCSSSkew::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSCSSSkew::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSCSSSkew *)*((_QWORD *)a1 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSCSSSkew::createPrototype(v15, a1, a3);
  Structure = WebCore::JSCSSSkew::createStructure((uint64_t *)v15, (uint64_t)a1, Prototype);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSCSSSkew::s_info);
LABEL_8:
  v18 = WebCore::JSCSSSkew::create(v14, a1, a2);
  v19 = v18;
  v20 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner = (uint64_t)&off_1E324B1D0;
  }
  v21 = (uint64_t *)(v20 + 32);
  v28 = v5;
  if (v18)
  {
    v24 = v20;
    if ((v18 & 8) != 0)
      v25 = (v18 - 112) | 1;
    else
      v25 = v18 & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = v19;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner;
    Allocator[2] = v24;
  }
  else
  {
    Allocator = 0;
  }
  v27 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v21, &v28, (uint64_t *)&v27);
  if (v27)
    v27[1] = 3;
  return v19;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSSkewX>::construct(JSC *this, uint64_t a2, WebCore::JSDOMGlobalObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  char **v15;
  BOOL v16;
  JSCell *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint8x8_t v22;
  uint64_t v23;
  JSC::VM *v25;
  uint64_t (***v26)(WebCore::CSSSkewX *__hidden, WTF::StringBuilder *);
  uint64_t (***v27)(WebCore::CSSSkewX *__hidden, WTF::StringBuilder *);
  JSC::JSCell *v28;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v30;
  JSC::JSGlobalObject *v31;
  JSC::VM *v32;
  JSC::JSObject *v33;
  JSC::Structure *v34;
  JSC::VM *FunctionRealm;
  uint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char **v42;
  int v43;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t SubclassStructure;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  JSValue v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (***v57)(WebCore::CSSSkewX *__hidden, WTF::StringBuilder *);
  uint64_t v58;
  int v59;
  JSC::VM *v60;
  uint64_t (***v61)(WebCore::CSSSkewX *__hidden, WTF::StringBuilder *);
  WTF::StringImpl *v62;

  v9 = *((_QWORD *)this + 7);
  v60 = (JSC::VM *)v9;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v52.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v9, this, v52);
  }
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 48);
  v57 = (uint64_t (***)(WebCore::CSSSkewX *__hidden, WTF::StringBuilder *))v9;
  if ((v12 & 0xFFFE000000000002) != 0)
    goto LABEL_13;
  v13 = *(unsigned int *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C);
  v14 = *(_DWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C) != 0;
  v15 = (char **)(16 * v13);
  if ((_DWORD)v13)
    v16 = v15 == &WebCore::JSCSSNumericValue::s_info;
  else
    v16 = 1;
  if (!v16)
  {
    do
    {
      v15 = (char **)v15[2];
      v14 = v15 != 0;
    }
    while (v15 != &WebCore::JSCSSNumericValue::s_info && v15 != 0);
  }
  if (!v14 || (v19 = *(_QWORD *)(v12 + 24)) == 0)
  {
LABEL_13:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v57, 0, "ax", 3, "CSSSkewX", 9, a8, 0, 0, "CSSNumericValue", 16);
    return 0;
  }
  v20 = *(_DWORD *)(v19 + 8);
  *(_DWORD *)(v19 + 8) = v20 + 1;
  if (*(unsigned __int8 *)(v19 + 68) != 255)
    goto LABEL_25;
  v21 = (*(_DWORD *)(v19 + 60) & 0x7FFFFFFF) != 0;
  v22 = (uint8x8_t)vcnt_s8((int8x8_t)(vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_1968BCEF0, (int8x16_t)vceqzq_s32((int32x4_t)(*(_OWORD *)(v19 + 44) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))))) & 0xF));
  v22.i16[0] = vaddlv_u8(v22);
  v23 = v22.u32[0];
  if ((*(_DWORD *)(v19 + 40) & 0x7FFFFFFF) != 0)
    v23 = v22.u32[0] + 1;
  if ((*(_DWORD *)(v19 + 64) & 0x7FFFFFFF) != 0)
    ++v21;
  if (v23 + v21 != 1 || (*(_OWORD *)(v19 + 44) | 0x80000000) == 0x80000000)
  {
LABEL_25:
    LOBYTE(v57) = 33;
    v58 = 0;
    v59 = 1;
    if (v20)
    {
      v51 = 0;
      *(_DWORD *)(v19 + 8) = v20;
    }
    else
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
      v51 = 0;
    }
    v50 = 1;
    v49 = 33;
  }
  else
  {
    v48 = bmalloc::api::isoAllocate();
    v49 = v48;
    v50 = 0;
    v51 = 1;
    *(_DWORD *)(v48 + 8) = 1;
    *(_BYTE *)(v48 + 12) = 1;
    *(_QWORD *)v48 = &off_1E339FFD8;
    *(_QWORD *)(v48 + 16) = v19;
    v57 = (uint64_t (***)(WebCore::CSSSkewX *__hidden, WTF::StringBuilder *))v48;
    v59 = 0;
  }
  if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
    goto LABEL_67;
  if ((v51 & 1) != 0)
  {
    v25 = *(JSC::VM **)(v11 + 40);
    v26 = v57;
    v57 = 0;
    v61 = v26;
    if (*v26 != &off_1E339FFD8)
    {
      __break(0xC471u);
      JUMPOUT(0x1948E7B90);
    }
    v18 = (JSCell *)WebCore::createWrapper<WebCore::CSSSkewX,WebCore::CSSSkewX>(v25, (uint64_t *)&v61, a3);
    v27 = v61;
    v61 = 0;
    if (v27)
    {
      if (*((_DWORD *)v27 + 2) == 1)
        ((void (*)(uint64_t (***)(WebCore::CSSSkewX *__hidden, WTF::StringBuilder *)))(*v27)[4])(v27);
      else
        --*((_DWORD *)v27 + 2);
    }
    goto LABEL_34;
  }
  if ((v50 & 1) != 0)
  {
    LOBYTE(v61) = v49;
    v58 = 0;
    v62 = 0;
    if (!*(_QWORD *)(v9 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v60, (unsigned __int8 *)&v61);
      v54 = v62;
      v62 = 0;
      if (v54)
      {
        if (*(_DWORD *)v54 == 2)
          WTF::StringImpl::destroy(v54, v53);
        else
          *(_DWORD *)v54 -= 2;
      }
    }
    v18 = 0;
LABEL_34:
    if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
    {
LABEL_67:
      v18 = 0;
LABEL_49:
      if (v59 != -1)
        ((void (*)(uint64_t (****)(WebCore::CSSSkewX *__hidden, WTF::StringBuilder *), uint64_t (****)(WebCore::CSSSkewX *__hidden, WTF::StringBuilder *)))off_1E32396F8[v59])(&v61, &v57);
      return v18;
    }
    v28 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v28 & 0xFFFE000000000002) != 0
      || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v28)) == 0
      || (v31 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v32 = (JSC::VM *)*((_QWORD *)this + 7),
          FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v30),
          *((_DWORD *)v32 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v32) & 1) != 0)
    {
LABEL_48:
      if (!*(_DWORD *)(v9 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) == 0)
        goto LABEL_49;
      goto LABEL_67;
    }
    v36 = *((_QWORD *)FunctionRealm + 412);
    if (v36)
    {
      v37 = *(_DWORD *)(v36 - 8);
      v38 = ((unint64_t)&WebCore::JSCSSSkewX::s_info + ~((_QWORD)&WebCore::JSCSSSkewX::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSSkewX::s_info + ~((_QWORD)&WebCore::JSCSSSkewX::s_info << 32)) >> 22);
      v39 = 9 * ((v38 + ~(v38 << 13)) ^ ((v38 + ~(v38 << 13)) >> 8));
      v40 = (v39 ^ (v39 >> 15)) + ~((v39 ^ (v39 >> 15)) << 27);
      v41 = v37 & ((v40 >> 31) ^ v40);
      v42 = *(char ***)(v36 + 16 * v41);
      if (v42 == &WebCore::JSCSSSkewX::s_info)
      {
LABEL_44:
        v33 = *(JSC::JSObject **)(v36 + 16 * v41 + 8);
        if (v33)
        {
LABEL_46:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v31, v33, v34);
          if (!*((_DWORD *)v32 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v32) & 1) == 0)
            JSC::JSObject::setStructure(v18, v32, SubclassStructure);
          goto LABEL_48;
        }
      }
      else
      {
        v43 = 1;
        while (v42)
        {
          v41 = ((_DWORD)v41 + v43) & v37;
          v42 = *(char ***)(v36 + 16 * v41);
          ++v43;
          if (v42 == &WebCore::JSCSSSkewX::s_info)
            goto LABEL_44;
        }
      }
    }
    Prototype = (JSC::JSCell *)WebCore::JSCSSSkewX::createPrototype(v32, FunctionRealm, v33);
    Structure = WebCore::JSCSSSkewX::createStructure((uint64_t *)v32, (uint64_t)FunctionRealm, Prototype);
    v33 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, Structure, (uint64_t)&WebCore::JSCSSSkewX::s_info);
    goto LABEL_46;
  }
  v55 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSCSSSkewX::analyzeHeap(v55, v56);
}

uint64_t WebCore::JSCSSSkewX::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSSkewX::createPrototype(WebCore::JSCSSSkewX *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSTransformComponent::s_info
      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformComponent::s_info
                                                                      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSTransformComponent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSTransformComponent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSTransformComponentPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSTransformComponentPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSTransformComponent::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSTransformComponent::s_info);
  }
  v18 = WebCore::JSCSSSkewXPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSSkewXPrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSSkewXPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSSkewXPrototype::create(WebCore::JSCSSSkewXPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSSkewX::s_info, (uint64_t)&WebCore::JSCSSSkewXPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewX>,(WebCore::DOMConstructorID)406>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3248);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSCSSSkewX>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSSkewX::s_info + ~((_QWORD)&WebCore::JSCSSSkewX::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSSkewX::s_info + ~((_QWORD)&WebCore::JSCSSSkewX::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSSkewX::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSSkewX::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSSkewX::createPrototype((WebCore::JSCSSSkewX *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSSkewX::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSSkewX::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3248) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSSkewXConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSSkewXPrototype::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewX>,(WebCore::DOMConstructorID)406>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSSkewX_ax(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16));
}

BOOL WebCore::setJSCSSSkewX_ax(JSC *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  _DWORD *v25;
  JSC::VM *v26;
  uint64_t v27;
  WTF::StringImpl *v28;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSSkewX::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSSkewX::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v26 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v27 = v4;
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_23;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v17 = *(_QWORD *)(a3 + 24)) != 0)
  {
    v18 = *(_DWORD *)(v17 + 8);
    *(_DWORD *)(v17 + 8) = v18 + 1;
    if (*(unsigned __int8 *)(v17 + 68) != 255)
      goto LABEL_35;
    v19 = (*(_DWORD *)(v17 + 60) & 0x7FFFFFFF) != 0;
    v20 = (uint8x8_t)vcnt_s8((int8x8_t)(vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_1968BCEF0, (int8x16_t)vceqzq_s32((int32x4_t)(*(_OWORD *)(v17 + 44) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))))) & 0xF));
    v20.i16[0] = vaddlv_u8(v20);
    v21 = v20.u32[0];
    if ((*(_DWORD *)(v17 + 40) & 0x7FFFFFFF) != 0)
      v21 = v20.u32[0] + 1;
    if ((*(_DWORD *)(v17 + 64) & 0x7FFFFFFF) != 0)
      ++v19;
    if (v21 + v19 != 1 || (*(_OWORD *)(v17 + 44) | 0x80000000) == 0x80000000)
    {
LABEL_35:
      if (v18)
        *(_DWORD *)(v17 + 8) = v18;
      else
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
      LOBYTE(v27) = 33;
      v28 = 0;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v26, (unsigned __int8 *)&v27);
        v24 = v28;
        v28 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v23);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
    }
    else
    {
      v25 = *(_DWORD **)(v10 + 16);
      *(_QWORD *)(v10 + 16) = v17;
      if (v25)
      {
        if (v25[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v25 + 16))(v25);
        else
          --v25[2];
      }
    }
    return 1;
  }
  else
  {
LABEL_23:
    WebCore::throwAttributeTypeError((int)a1, (int)&v27, "CSSSkewX", 9, "ax", 3, "CSSNumericValue", 16);
    return 0;
  }
}

uint64_t WebCore::JSCSSSkewX::subspaceForImpl(WebCore::JSCSSSkewX *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3320);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3320))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3320);
    *(_QWORD *)(v8 + 3320) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3320);
  *(_QWORD *)(v3 + 3320) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::CSSSkewX,WebCore::CSSSkewX>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSSkewX *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *Allocator;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSCSSSkewX::s_info + ~((_QWORD)&WebCore::JSCSSSkewX::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSSkewX::s_info + ~((_QWORD)&WebCore::JSCSSSkewX::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSCSSSkewX::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSCSSSkewX::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSCSSSkewX *)*((_QWORD *)a1 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSCSSSkewX::createPrototype(v15, a1, a3);
  Structure = WebCore::JSCSSSkewX::createStructure((uint64_t *)v15, (uint64_t)a1, Prototype);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSCSSSkewX::s_info);
LABEL_8:
  v18 = WebCore::JSCSSSkewX::create(v14, a1, a2);
  v19 = v18;
  v20 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner = (uint64_t)&off_1E324B1D0;
  }
  v21 = (uint64_t *)(v20 + 32);
  v28 = v5;
  if (v18)
  {
    v24 = v20;
    if ((v18 & 8) != 0)
      v25 = (v18 - 112) | 1;
    else
      v25 = v18 & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = v19;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner;
    Allocator[2] = v24;
  }
  else
  {
    Allocator = 0;
  }
  v27 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v21, &v28, (uint64_t *)&v27);
  if (v27)
    v27[1] = 3;
  return v19;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSSkewY>::construct(JSC *this, uint64_t a2, WebCore::JSDOMGlobalObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  char **v15;
  BOOL v16;
  JSCell *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint8x8_t v22;
  uint64_t v23;
  JSC::VM *v25;
  uint64_t (***v26)(WebCore::CSSSkewY *__hidden, WTF::StringBuilder *);
  uint64_t (***v27)(WebCore::CSSSkewY *__hidden, WTF::StringBuilder *);
  JSC::JSCell *v28;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v30;
  JSC::JSGlobalObject *v31;
  JSC::VM *v32;
  JSC::JSObject *v33;
  JSC::Structure *v34;
  JSC::VM *FunctionRealm;
  uint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char **v42;
  int v43;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t SubclassStructure;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  JSValue v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (***v57)(WebCore::CSSSkewY *__hidden, WTF::StringBuilder *);
  uint64_t v58;
  int v59;
  JSC::VM *v60;
  uint64_t (***v61)(WebCore::CSSSkewY *__hidden, WTF::StringBuilder *);
  WTF::StringImpl *v62;

  v9 = *((_QWORD *)this + 7);
  v60 = (JSC::VM *)v9;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v52.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v9, this, v52);
  }
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 48);
  v57 = (uint64_t (***)(WebCore::CSSSkewY *__hidden, WTF::StringBuilder *))v9;
  if ((v12 & 0xFFFE000000000002) != 0)
    goto LABEL_13;
  v13 = *(unsigned int *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C);
  v14 = *(_DWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C) != 0;
  v15 = (char **)(16 * v13);
  if ((_DWORD)v13)
    v16 = v15 == &WebCore::JSCSSNumericValue::s_info;
  else
    v16 = 1;
  if (!v16)
  {
    do
    {
      v15 = (char **)v15[2];
      v14 = v15 != 0;
    }
    while (v15 != &WebCore::JSCSSNumericValue::s_info && v15 != 0);
  }
  if (!v14 || (v19 = *(_QWORD *)(v12 + 24)) == 0)
  {
LABEL_13:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v57, 0, "ay", 3, "CSSSkewY", 9, a8, 0, 0, "CSSNumericValue", 16);
    return 0;
  }
  v20 = *(_DWORD *)(v19 + 8);
  *(_DWORD *)(v19 + 8) = v20 + 1;
  if (*(unsigned __int8 *)(v19 + 68) != 255)
    goto LABEL_25;
  v21 = (*(_DWORD *)(v19 + 60) & 0x7FFFFFFF) != 0;
  v22 = (uint8x8_t)vcnt_s8((int8x8_t)(vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_1968BCEF0, (int8x16_t)vceqzq_s32((int32x4_t)(*(_OWORD *)(v19 + 44) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))))) & 0xF));
  v22.i16[0] = vaddlv_u8(v22);
  v23 = v22.u32[0];
  if ((*(_DWORD *)(v19 + 40) & 0x7FFFFFFF) != 0)
    v23 = v22.u32[0] + 1;
  if ((*(_DWORD *)(v19 + 64) & 0x7FFFFFFF) != 0)
    ++v21;
  if (v23 + v21 != 1 || (*(_OWORD *)(v19 + 44) | 0x80000000) == 0x80000000)
  {
LABEL_25:
    LOBYTE(v57) = 33;
    v58 = 0;
    v59 = 1;
    if (v20)
    {
      v51 = 0;
      *(_DWORD *)(v19 + 8) = v20;
    }
    else
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
      v51 = 0;
    }
    v50 = 1;
    v49 = 33;
  }
  else
  {
    v48 = bmalloc::api::isoAllocate();
    v49 = v48;
    v50 = 0;
    v51 = 1;
    *(_DWORD *)(v48 + 8) = 1;
    *(_BYTE *)(v48 + 12) = 1;
    *(_QWORD *)v48 = &off_1E33A0020;
    *(_QWORD *)(v48 + 16) = v19;
    v57 = (uint64_t (***)(WebCore::CSSSkewY *__hidden, WTF::StringBuilder *))v48;
    v59 = 0;
  }
  if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
    goto LABEL_67;
  if ((v51 & 1) != 0)
  {
    v25 = *(JSC::VM **)(v11 + 40);
    v26 = v57;
    v57 = 0;
    v61 = v26;
    if (*v26 != &off_1E33A0020)
    {
      __break(0xC471u);
      JUMPOUT(0x1948E8FF0);
    }
    v18 = (JSCell *)WebCore::createWrapper<WebCore::CSSSkewY,WebCore::CSSSkewY>(v25, (uint64_t *)&v61, a3);
    v27 = v61;
    v61 = 0;
    if (v27)
    {
      if (*((_DWORD *)v27 + 2) == 1)
        ((void (*)(uint64_t (***)(WebCore::CSSSkewY *__hidden, WTF::StringBuilder *)))(*v27)[4])(v27);
      else
        --*((_DWORD *)v27 + 2);
    }
    goto LABEL_34;
  }
  if ((v50 & 1) != 0)
  {
    LOBYTE(v61) = v49;
    v58 = 0;
    v62 = 0;
    if (!*(_QWORD *)(v9 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v60, (unsigned __int8 *)&v61);
      v54 = v62;
      v62 = 0;
      if (v54)
      {
        if (*(_DWORD *)v54 == 2)
          WTF::StringImpl::destroy(v54, v53);
        else
          *(_DWORD *)v54 -= 2;
      }
    }
    v18 = 0;
LABEL_34:
    if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
    {
LABEL_67:
      v18 = 0;
LABEL_49:
      if (v59 != -1)
        ((void (*)(uint64_t (****)(WebCore::CSSSkewY *__hidden, WTF::StringBuilder *), uint64_t (****)(WebCore::CSSSkewY *__hidden, WTF::StringBuilder *)))off_1E3239758[v59])(&v61, &v57);
      return v18;
    }
    v28 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v28 & 0xFFFE000000000002) != 0
      || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v28)) == 0
      || (v31 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v32 = (JSC::VM *)*((_QWORD *)this + 7),
          FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v30),
          *((_DWORD *)v32 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v32) & 1) != 0)
    {
LABEL_48:
      if (!*(_DWORD *)(v9 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) == 0)
        goto LABEL_49;
      goto LABEL_67;
    }
    v36 = *((_QWORD *)FunctionRealm + 412);
    if (v36)
    {
      v37 = *(_DWORD *)(v36 - 8);
      v38 = ((unint64_t)&WebCore::JSCSSSkewY::s_info + ~((_QWORD)&WebCore::JSCSSSkewY::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSSkewY::s_info + ~((_QWORD)&WebCore::JSCSSSkewY::s_info << 32)) >> 22);
      v39 = 9 * ((v38 + ~(v38 << 13)) ^ ((v38 + ~(v38 << 13)) >> 8));
      v40 = (v39 ^ (v39 >> 15)) + ~((v39 ^ (v39 >> 15)) << 27);
      v41 = v37 & ((v40 >> 31) ^ v40);
      v42 = *(char ***)(v36 + 16 * v41);
      if (v42 == &WebCore::JSCSSSkewY::s_info)
      {
LABEL_44:
        v33 = *(JSC::JSObject **)(v36 + 16 * v41 + 8);
        if (v33)
        {
LABEL_46:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v31, v33, v34);
          if (!*((_DWORD *)v32 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v32) & 1) == 0)
            JSC::JSObject::setStructure(v18, v32, SubclassStructure);
          goto LABEL_48;
        }
      }
      else
      {
        v43 = 1;
        while (v42)
        {
          v41 = ((_DWORD)v41 + v43) & v37;
          v42 = *(char ***)(v36 + 16 * v41);
          ++v43;
          if (v42 == &WebCore::JSCSSSkewY::s_info)
            goto LABEL_44;
        }
      }
    }
    Prototype = (JSC::JSCell *)WebCore::JSCSSSkewY::createPrototype(v32, FunctionRealm, v33);
    Structure = WebCore::JSCSSSkewY::createStructure((uint64_t *)v32, (uint64_t)FunctionRealm, Prototype);
    v33 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, Structure, (uint64_t)&WebCore::JSCSSSkewY::s_info);
    goto LABEL_46;
  }
  v55 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSCSSSkewY::analyzeHeap(v55, v56);
}

uint64_t WebCore::JSCSSSkewY::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSSkewY::createPrototype(WebCore::JSCSSSkewY *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSTransformComponent::s_info
      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformComponent::s_info
                                                                      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSTransformComponent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSTransformComponent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSTransformComponentPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSTransformComponentPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSTransformComponent::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSTransformComponent::s_info);
  }
  v18 = WebCore::JSCSSSkewYPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSSkewYPrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSSkewYPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSSkewYPrototype::create(WebCore::JSCSSSkewYPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSSkewY::s_info, (uint64_t)&WebCore::JSCSSSkewYPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewY>,(WebCore::DOMConstructorID)407>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3256);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSCSSSkewY>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSSkewY::s_info + ~((_QWORD)&WebCore::JSCSSSkewY::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSSkewY::s_info + ~((_QWORD)&WebCore::JSCSSSkewY::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSSkewY::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSSkewY::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSSkewY::createPrototype((WebCore::JSCSSSkewY *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSSkewY::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSSkewY::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3256) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSSkewYConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSSkewYPrototype::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewY>,(WebCore::DOMConstructorID)407>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSSkewY_ay(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16));
}

BOOL WebCore::setJSCSSSkewY_ay(JSC *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  _DWORD *v25;
  JSC::VM *v26;
  uint64_t v27;
  WTF::StringImpl *v28;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSSkewY::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSSkewY::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v26 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v27 = v4;
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_23;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v17 = *(_QWORD *)(a3 + 24)) != 0)
  {
    v18 = *(_DWORD *)(v17 + 8);
    *(_DWORD *)(v17 + 8) = v18 + 1;
    if (*(unsigned __int8 *)(v17 + 68) != 255)
      goto LABEL_35;
    v19 = (*(_DWORD *)(v17 + 60) & 0x7FFFFFFF) != 0;
    v20 = (uint8x8_t)vcnt_s8((int8x8_t)(vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_1968BCEF0, (int8x16_t)vceqzq_s32((int32x4_t)(*(_OWORD *)(v17 + 44) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))))) & 0xF));
    v20.i16[0] = vaddlv_u8(v20);
    v21 = v20.u32[0];
    if ((*(_DWORD *)(v17 + 40) & 0x7FFFFFFF) != 0)
      v21 = v20.u32[0] + 1;
    if ((*(_DWORD *)(v17 + 64) & 0x7FFFFFFF) != 0)
      ++v19;
    if (v21 + v19 != 1 || (*(_OWORD *)(v17 + 44) | 0x80000000) == 0x80000000)
    {
LABEL_35:
      if (v18)
        *(_DWORD *)(v17 + 8) = v18;
      else
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
      LOBYTE(v27) = 33;
      v28 = 0;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v26, (unsigned __int8 *)&v27);
        v24 = v28;
        v28 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v23);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
    }
    else
    {
      v25 = *(_DWORD **)(v10 + 16);
      *(_QWORD *)(v10 + 16) = v17;
      if (v25)
      {
        if (v25[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v25 + 16))(v25);
        else
          --v25[2];
      }
    }
    return 1;
  }
  else
  {
LABEL_23:
    WebCore::throwAttributeTypeError((int)a1, (int)&v27, "CSSSkewY", 9, "ay", 3, "CSSNumericValue", 16);
    return 0;
  }
}

uint64_t WebCore::JSCSSSkewY::subspaceForImpl(WebCore::JSCSSSkewY *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3328);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3328))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3328);
    *(_QWORD *)(v8 + 3328) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3328);
  *(_QWORD *)(v3 + 3328) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::CSSSkewY,WebCore::CSSSkewY>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSSkewY *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *Allocator;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSCSSSkewY::s_info + ~((_QWORD)&WebCore::JSCSSSkewY::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSSkewY::s_info + ~((_QWORD)&WebCore::JSCSSSkewY::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSCSSSkewY::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSCSSSkewY::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSCSSSkewY *)*((_QWORD *)a1 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSCSSSkewY::createPrototype(v15, a1, a3);
  Structure = WebCore::JSCSSSkewY::createStructure((uint64_t *)v15, (uint64_t)a1, Prototype);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSCSSSkewY::s_info);
LABEL_8:
  v18 = WebCore::JSCSSSkewY::create(v14, a1, a2);
  v19 = v18;
  v20 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner = (uint64_t)&off_1E324B1D0;
  }
  v21 = (uint64_t *)(v20 + 32);
  v28 = v5;
  if (v18)
  {
    v24 = v20;
    if ((v18 & 8) != 0)
      v25 = (v18 - 112) | 1;
    else
      v25 = v18 & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = v19;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner;
    Allocator[2] = v24;
  }
  else
  {
    Allocator = 0;
  }
  v27 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v21, &v28, (uint64_t *)&v27);
  if (v27)
    v27[1] = 3;
  return v19;
}

uint64_t WebCore::JSCSSStartingStyleRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSGroupingRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSStartingStyleRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSStartingStyleRulePrototype::create(WebCore::JSCSSStartingStyleRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSCSSStartingStyleRule::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSCSSStartingStyleRulePrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStartingStyleRule>,(WebCore::DOMConstructorID)351>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2808);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSGroupingRule>,(WebCore::DOMConstructorID)337>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStartingStyleRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSStartingStyleRule::s_info
         + ~((_QWORD)&WebCore::JSCSSStartingStyleRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSStartingStyleRule::s_info
                                                                        + ~((_QWORD)&WebCore::JSCSSStartingStyleRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSStartingStyleRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSStartingStyleRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSGroupingRule::prototype((WebCore::JSCSSGroupingRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSStartingStyleRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSStartingStyleRulePrototype::create((WebCore::JSCSSStartingStyleRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSStartingStyleRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSStartingStyleRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2808) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSStartingStyleRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSStartingStyleRulePrototype::s_info != (char **)(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                      + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStartingStyleRule>,(WebCore::DOMConstructorID)351>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCSSStartingStyleRule::subspaceForImpl(WebCore::JSCSSStartingStyleRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2848);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 2848);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 2848);
    *(_QWORD *)(v8 + 2848) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2848);
  *(_QWORD *)(v3 + 2848) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSStyleDeclaration::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSCSSStyleDeclaration::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleDeclaration>::initializeProperties(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSCSSStyleDeclaration>((uint64_t *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

uint64_t WebCore::JSCSSStyleDeclaration::prototype(WebCore::JSCSSStyleDeclaration *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  return *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSCSSStyleDeclaration>((uint64_t *)this, a2) + 48);
}

uint64_t WebCore::JSCSSStyleDeclaration::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSCSSStyleDeclaration::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (!*(_BYTE *)(v15 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v13[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (!a3)
    return JSC::JSObject::deleteProperty();
  v16 = *(_DWORD *)(a3 + 16);
  if ((v16 & 0x20) != 0)
    return JSC::JSObject::deleteProperty();
  v17 = *(_WORD **)(a3 + 8);
  v18 = *(unsigned int *)(a3 + 4);
  if ((v16 & 4) == 0)
  {
    if ((_DWORD)v18 && (v19 = (unsigned __int16)*v17 - 48, v19 <= 9) && (v18 < 2 || *v17 != 48))
    {
      v25 = v17 + 1;
      v26 = v18 - 1;
      while (v26)
      {
        if (v19 <= 0x19999999)
        {
          v27 = *v25 - 48;
          if (v27 <= 9)
          {
            v28 = __CFADD__(v27, 10 * v19);
            v19 = v27 + 10 * v19;
            ++v25;
            --v26;
            if (!v28)
              continue;
          }
        }
        goto LABEL_29;
      }
      v7 = v19 == -1;
      v22 = v19 & 0xFFFFFF00;
      v21 = v19;
      v20 = 0x100000000;
      if (v7)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
      }
    }
    else
    {
LABEL_29:
      v20 = 0;
      v21 = 0;
      v22 = 0;
    }
    v23 = v22 | v21;
    if ((v20 & 0x100000000) != 0)
      return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v9 + 72))(v9) <= v23;
    return JSC::JSObject::deleteProperty();
  }
  if (!(_DWORD)v18)
  {
    v30 = 0;
    goto LABEL_47;
  }
  v29 = *(unsigned __int8 *)v17 - 48;
  if (v29 > 9 || v18 >= 2 && *(_BYTE *)v17 == 48)
  {
LABEL_46:
    v30 = 0;
    LODWORD(v18) = 0;
LABEL_47:
    v31 = 0;
    goto LABEL_48;
  }
  v32 = v18 - 1;
  v33 = (unsigned __int8 *)v17 + 1;
  while (v32)
  {
    if (v29 > 0x19999999)
      goto LABEL_46;
    v34 = *v33 - 48;
    if (v34 > 9)
      goto LABEL_46;
    v30 = 0;
    LODWORD(v18) = 0;
    v31 = 0;
    v28 = __CFADD__(v34, 10 * v29);
    v29 = v34 + 10 * v29;
    --v32;
    ++v33;
    if (v28)
      goto LABEL_48;
  }
  if (v29 == -1)
    v30 = 0;
  else
    v30 = v29 & 0xFFFFFF00;
  if (v29 == -1)
    LODWORD(v18) = 0;
  else
    LODWORD(v18) = v29;
  if (v29 == -1)
    v31 = 0;
  else
    v31 = 0x100000000;
LABEL_48:
  v23 = v18 | v30;
  if ((v31 & 0x100000000) != 0)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v9 + 72))(v9) <= v23;
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSCSSStyleDeclaration::deletePropertyByIndex(WebCore::JSCSSStyleDeclaration *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 72))(v11) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 72))(v11) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 72))(v11) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 72))(v11) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 72))(v11) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 72))(v11) <= a3;
  }
  if (!v15[65])
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 72))(v11) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSCSSStyleDeclaration::getOwnPropertySlotByIndex(WebCore::JSCSSStyleDeclaration *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  JSC::VM *v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unsigned __int8 *v16;
  unsigned int v17;
  unsigned int v18;
  WTF::StringImpl *v19;

  if ((_DWORD)a3 == -1)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  (*(void (**)(WTF::StringImpl **__return_ptr, _QWORD, JSC::JSGlobalObject *, JSC::JSGlobalObject *, uint64_t, JSC::PropertySlot *))(**((_QWORD **)this + 3) + 80))(&v19, *((_QWORD *)this + 3), a3, a3, a4, a5);
  v9 = v19;
  if (!v19)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v10 = *((_QWORD *)a2 + 7);
  v11 = *((_DWORD *)v19 + 1);
  if (v11)
  {
    if (v11 != 1)
    {
LABEL_5:
      v12 = *(_QWORD *)(v10 + 64760);
      if (!v12 || v19 != *(WTF::StringImpl **)(v12 + 8))
        v12 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_8;
    }
    v16 = (unsigned __int8 *)*((_QWORD *)v19 + 1);
    if ((*((_BYTE *)v19 + 16) & 4) != 0)
    {
      v17 = *v16;
    }
    else
    {
      v18 = *(unsigned __int16 *)v16;
      if (v18 > 0xFF)
        goto LABEL_5;
      v17 = v18;
    }
    v12 = *(_QWORD *)(v10 + 8 * v17 + 42216);
  }
  else
  {
    v12 = *(_QWORD *)(v10 + 41968);
  }
LABEL_8:
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
  {
    v13 = 0;
  }
  else
  {
    *(_QWORD *)a4 = v12;
    *(_DWORD *)(a4 + 16) = 2;
    *(_QWORD *)(a4 + 32) = this;
    v13 = 1;
    *(_BYTE *)(a4 + 49) = 1;
  }
  v14 = v19;
  v19 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v9);
    else
      *(_DWORD *)v14 -= 2;
  }
  return v13;
}

uint64_t WebCore::JSCSSStyleDeclaration::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v4;
  int v5;
  int v6;
  uint64_t *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl **v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  unsigned int v33;
  int v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45[2];
  char v46;
  WTF::StringImpl *v47;

  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 24) + 72))(*(_QWORD *)(a1 + 24));
  if (v4)
  {
    v5 = v4;
    v6 = 0;
    v7 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v9 = v44;
      v47 = v44;
      v10 = *((_DWORD *)v44 + 4);
      if ((v10 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v44 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v11 = *a3;
      v12 = *(unsigned int *)(*a3 + 20);
      if (v12 <= 0x13)
      {
        if ((_DWORD)v12)
        {
          v13 = *(WTF::StringImpl ***)(v11 + 8);
          while (*v13 != v44)
          {
            ++v13;
            if (!--v12)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v10 & 0x20) != 0)
        {
          v34 = *(_DWORD *)v9 + 2;
        }
        else
        {
          if ((v10 & 0x10) != 0)
          {
            *(_DWORD *)v9 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v9 = v45[0];
          }
          v34 = *(_DWORD *)v9;
          *(_DWORD *)v9 += 2;
          if (!v34)
          {
            WTF::StringImpl::destroy(v9, v8);
LABEL_54:
            v35 = (uint64_t *)(v11 + 8);
            v45[0] = v9;
            v36 = *(unsigned int *)(v11 + 20);
            if ((_DWORD)v36 == *(_DWORD *)(v11 + 16))
            {
              v37 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v35, v36 + 1, (unint64_t)v45);
              v36 = *(unsigned int *)(v11 + 20);
              v38 = *(_QWORD *)(v11 + 8);
              v39 = *v37;
              *v37 = 0;
              *(_QWORD *)(v38 + 8 * v36) = v39;
            }
            else
            {
              v40 = *v35;
              v45[0] = 0;
              *(_QWORD *)(v40 + 8 * v36) = v9;
            }
            *(_DWORD *)(v11 + 20) = v36 + 1;
            v41 = v45[0];
            v45[0] = 0;
            if (v41)
            {
              if (*(_DWORD *)v41 == 2)
                WTF::StringImpl::destroy(v41, v8);
              else
                *(_DWORD *)v41 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v9 = v34;
        goto LABEL_54;
      }
      if (!*v7 || !*(_DWORD *)(*v7 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v47, (uint64_t)v45);
      if (v46)
      {
        v9 = v47;
        v11 = *a3;
        v10 = *((_DWORD *)v47 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v42 = v44;
      v44 = 0;
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v8);
        else
          *(_DWORD *)v42 -= 2;
      }
      if (++v6 == v5)
        return JSC::JSObject::getOwnPropertyNames();
    }
    v14 = *(uint64_t **)(v11 + 8);
    v15 = &v14[v12];
    while (1)
    {
      v16 = *v14;
      v17 = *v7;
      if (*v7
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v17 = *v7) != 0))
      {
        v18 = *(_DWORD *)(v17 - 8);
      }
      else
      {
        v18 = 0;
      }
      v19 = (~(v16 << 32) + v16) ^ ((unint64_t)(~(v16 << 32) + v16) >> 22);
      v20 = 9 * ((v19 + ~(v19 << 13)) ^ ((v19 + ~(v19 << 13)) >> 8));
      v21 = (v20 ^ (v20 >> 15)) + ~((v20 ^ (v20 >> 15)) << 27);
      v22 = v18 & ((v21 >> 31) ^ v21);
      v23 = (uint64_t *)(v17 + 8 * v22);
      v24 = *v23;
      if (*v23)
      {
        v25 = 0;
        v26 = 1;
        while (v24 != v16)
        {
          if (v24 == -1)
            v25 = v23;
          v22 = (v22 + v26) & v18;
          v23 = (uint64_t *)(v17 + 8 * v22);
          v24 = *v23;
          ++v26;
          if (!*v23)
          {
            if (v25)
            {
              *v25 = 0;
              --*(_DWORD *)(*v7 - 16);
              v23 = v25;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v23 = v16;
      v27 = *v7;
      v28 = *v7 ? *(_DWORD *)(v27 - 12) + 1 : 1;
      *(_DWORD *)(v27 - 12) = v28;
      v29 = *v7;
      v30 = *v7 ? *(_DWORD *)(v29 - 12) : 0;
      v31 = (*(_DWORD *)(v29 - 16) + v30);
      v32 = *(unsigned int *)(v29 - 4);
      if (v32 > 0x400)
        break;
      if (3 * v32 <= 4 * v31)
      {
        if ((_DWORD)v32)
          goto LABEL_43;
        v33 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v14 == v15)
        goto LABEL_17;
    }
    if (v32 > 2 * v31)
      goto LABEL_47;
LABEL_43:
    v33 = (_DWORD)v32 << (6 * *(_DWORD *)(v29 - 12) >= (2 * v32));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v33, v23);
    goto LABEL_47;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSCSSStyleDeclaration::defineOwnProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;

  if (!a3)
    return JSC::JSObject::defineOwnProperty();
  v5 = *(_DWORD *)(a3 + 16);
  if ((v5 & 0x20) != 0)
    return JSC::JSObject::defineOwnProperty();
  v6 = *(_BYTE **)(a3 + 8);
  v7 = *(unsigned int *)(a3 + 4);
  if ((v5 & 4) != 0)
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *v6 - 48;
    if (v8 > 9 || v7 >= 2 && *v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v14 = v7 - 1;
    v15 = v6 + 1;
    while (v14)
    {
      if (v8 <= 0x19999999)
      {
        v16 = *v15 - 48;
        if (v16 <= 9)
        {
          v13 = __CFADD__(v16, 10 * v8);
          v8 = v16 + 10 * v8;
          --v14;
          ++v15;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  else
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *(unsigned __int16 *)v6 - 48;
    if (v8 > 9 || v7 >= 2 && *(_WORD *)v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v10 = (unsigned __int16 *)(v6 + 2);
    v11 = v7 - 1;
    while (v11)
    {
      if (v8 <= 0x19999999)
      {
        v12 = *v10 - 48;
        if (v12 <= 9)
        {
          v13 = __CFADD__(v12, 10 * v8);
          v8 = v12 + 10 * v8;
          ++v10;
          --v11;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  if (v8 == -1)
    return JSC::JSObject::defineOwnProperty();
  if (a5)
    JSC::throwTypeError();
  return 0;
}

uint64_t WebCore::JSCSSStyleDeclaration::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSStyleDeclaration::visitChildren(WebCore::JSCSSStyleDeclaration *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = WebCore::JSCSSStyleDeclaration::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSCSSStyleDeclaration::JSCSSStyleDeclaration(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

{
  uint64_t result;
  uint64_t v6;

  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  v6 = *a4;
  *a4 = 0;
  *(_QWORD *)(result + 24) = v6;
  return result;
}

unint64_t WebCore::JSCSSStyleDeclaration::createPrototype(WebCore::JSCSSStyleDeclaration *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t Structure;
  JSC::Structure *v6;

  Structure = WebCore::JSCSSStyleDeclarationPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSCSSStyleDeclarationPrototype::create(this, (JSC::VM *)a2, Structure, v6);
}

uint64_t WebCore::JSCSSStyleDeclarationPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSStyleDeclarationPrototype::create(WebCore::JSCSSStyleDeclarationPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  JSC::VM *v4;
  unint64_t v5;
  int v6;
  unint64_t v8;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t SlowCase;
  unint64_t v12;

  v4 = this;
  v5 = *((_QWORD *)this + 4863);
  if (v5 >= *((_QWORD *)this + 4864))
  {
    v5 = *((_QWORD *)this + 4865);
    if ((v5 & 1) != 0)
    {
      v10 = (WebCore::JSDOMGlobalObject *)a3;
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      a3 = (unint64_t)v10;
      v4 = this;
      v5 = SlowCase;
      goto LABEL_3;
    }
    v8 = *(_QWORD *)(v5 + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = v5 + HIDWORD(v8);
    *((_QWORD *)this + 4865) = v5 + (int)v8;
  }
  *((_QWORD *)this + 4863) = v5 + 16;
LABEL_3:
  *(_DWORD *)v5 = 0;
  v6 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)v5 = a3 >> 4;
  *(_DWORD *)(v5 + 4) = v6;
  v12 = a3;
  *(_QWORD *)(v5 + 8) = 0;
  WebCore::JSCSSStyleDeclarationPrototype::finishCreation((uint64_t *)&v12, (WebCore::JSCSSStyleDeclarationPrototype *)v5, v4);
  return v5;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleDeclaration>,(WebCore::DOMConstructorID)352>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2816);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleDeclaration>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleDeclaration>::create(a1, Structure, (JSC::JSCell **)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2816) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::toJS<WebCore::IDLUSVString,WTF::String>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v3 = *(_QWORD *)(a1 + 56);
  v4 = *a3;
  if (!*a3)
    return *(_QWORD *)(v3 + 41968);
  v5 = *(_DWORD *)(v4 + 4);
  if (!v5)
    return *(_QWORD *)(v3 + 41968);
  if (v5 == 1)
  {
    v8 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    return *(_QWORD *)(v3 + 8 * v9 + 42216);
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v4 != *(_QWORD *)(v6 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v6;
}

unint64_t WebCore::jsCSSStyleDeclarationConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSStyleDeclarationPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleDeclaration>,(WebCore::DOMConstructorID)352>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSStyleDeclaration_propertyValueForWebKitCasedIDLAttribute(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;

  v4 = *(_QWORD *)(a2 + 24);
  if (a3)
    *(_DWORD *)a3 += 2;
  v15 = a3;
  v5 = WebCore::lookupCSSPropertyFromIDLAttribute<(WebCore::CSSPropertyLookupMode)0>(&v15);
  (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 144))(&v16, v4, v5);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v16;
  if (!v16 || (v8 = *((_DWORD *)v16 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_9:
    v16 = 0;
    if (!v7)
      goto LABEL_20;
    goto LABEL_18;
  }
  if (v8 != 1)
    goto LABEL_6;
  v10 = (unsigned __int8 *)*((_QWORD *)v16 + 1);
  if ((*((_BYTE *)v16 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_16:
    v9 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_17;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_16;
  }
LABEL_6:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v16 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v16;
    goto LABEL_9;
  }
LABEL_17:
  v16 = 0;
LABEL_18:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
LABEL_20:
  v13 = v15;
  v15 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v7);
    else
      *(_DWORD *)v13 -= 2;
  }
  return v9;
}

BOOL WebCore::setJSCSSStyleDeclaration_propertyValueForWebKitCasedIDLAttribute(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3, WTF::StringImpl *a4)
{
  JSC::VM *v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  WTF::StringImpl *v13;
  int v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  JSValue v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  int v31;
  WTF *v32;
  uint64_t v33;
  _BYTE v34[40];
  uint64_t v35;
  JSC::JSGlobalObject *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  char v41;
  WTF::StringImpl *v42;

  v6 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSStyleDeclaration::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSStyleDeclaration::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v12 = *(_QWORD *)(a2 + 24);
  v32 = (WTF *)v34;
  v33 = 4;
  v34[32] = 0;
  v35 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v36 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v32;
  if (a3 == 2)
  {
    v29 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v29 += 2;
    v30 = v29;
    v31 = 0;
    if (!a4)
      goto LABEL_19;
    goto LABEL_18;
  }
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v39);
  LOBYTE(v30) = 0;
  v31 = -1;
  v14 = (int)v40;
  if ((_DWORD)v40 != -1)
  {
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **, uint64_t *))off_1E3247F70[v40])(&v37, &v30, &v39);
    v31 = v14;
    if ((_DWORD)v40 != -1)
    {
      ((void (*)(WTF::StringImpl **, uint64_t *))off_1E3238AF8[v40])(&v37, &v39);
      v14 = v31;
    }
    if (v14)
    {
      v19 = 0;
LABEL_27:
      if (v14 != -1)
        ((void (*)(uint64_t *, WTF::StringImpl **))off_1E3238AF8[v14])(&v39, &v30);
      goto LABEL_30;
    }
    if (!a4)
    {
LABEL_19:
      v37 = a4;
      v15 = v30;
      v30 = 0;
      v42 = v15;
      v16 = WebCore::lookupCSSPropertyFromIDLAttribute<(WebCore::CSSPropertyLookupMode)0>(&v37);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, WTF::StringImpl **, _QWORD))(*(_QWORD *)v12
                                                                                                  + 152))(&v39, v12, v16, &v42, 0);
      v17 = v42;
      v42 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v13);
        else
          *(_DWORD *)v17 -= 2;
      }
      v18 = v37;
      v37 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v13);
        else
          *(_DWORD *)v18 -= 2;
      }
      if (v41)
      {
        v13 = (WTF::StringImpl *)v39;
        LOBYTE(v37) = v39;
        v26 = v40;
        v40 = 0;
        v38 = v26;
        if (!*((_QWORD *)v6 + 2))
        {
          v27.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v39, (JSC::JSGlobalObject *)&v38);
          JSC::VM::throwException(v6, a1, v27);
          v26 = v38;
        }
        v38 = 0;
        if (v26)
        {
          if (*(_DWORD *)v26 == 2)
            WTF::StringImpl::destroy(v26, v13);
          else
            *(_DWORD *)v26 -= 2;
        }
        if (v41)
        {
          v28 = v40;
          v40 = 0;
          if (v28)
          {
            if (*(_DWORD *)v28 == 2)
              WTF::StringImpl::destroy(v28, v13);
            else
              *(_DWORD *)v28 -= 2;
          }
        }
      }
      v19 = 1;
      v14 = v31;
      goto LABEL_27;
    }
LABEL_18:
    *(_DWORD *)a4 += 2;
    goto LABEL_19;
  }
  v19 = 0;
LABEL_30:
  if (HIDWORD(v33))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v32, v36);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v35;
    if (HIDWORD(v33))
    {
      v23 = v32;
      v24 = 8 * HIDWORD(v33);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v13);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v35;
  }
  v20 = v32;
  if (v34 != (_BYTE *)v32 && v32 != 0)
  {
    v32 = 0;
    LODWORD(v33) = 0;
    WTF::fastFree(v20, v13);
  }
  return v19;
}

uint64_t WebCore::jsCSSStyleDeclaration_propertyValueForDashedIDLAttribute(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;

  v4 = *(_QWORD *)(a2 + 24);
  if (a3)
    *(_DWORD *)a3 += 2;
  v15 = a3;
  v5 = WebCore::lookupCSSPropertyFromIDLAttribute<(WebCore::CSSPropertyLookupMode)2>(&v15);
  (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 144))(&v16, v4, v5);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v16;
  if (!v16 || (v8 = *((_DWORD *)v16 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_9:
    v16 = 0;
    if (!v7)
      goto LABEL_12;
    goto LABEL_10;
  }
  if (v8 != 1)
    goto LABEL_6;
  v12 = (unsigned __int8 *)*((_QWORD *)v16 + 1);
  if ((*((_BYTE *)v16 + 16) & 4) != 0)
  {
    v13 = *v12;
LABEL_21:
    v9 = *(_QWORD *)(v6 + 8 * v13 + 42216);
    goto LABEL_22;
  }
  v14 = *(unsigned __int16 *)v12;
  if (v14 <= 0xFF)
  {
    v13 = v14;
    goto LABEL_21;
  }
LABEL_6:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v16 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v16;
    goto LABEL_9;
  }
LABEL_22:
  v16 = 0;
LABEL_10:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
LABEL_12:
  v10 = v15;
  v15 = 0;
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
      WTF::StringImpl::destroy(v10, v7);
    else
      *(_DWORD *)v10 -= 2;
  }
  return v9;
}

BOOL WebCore::setJSCSSStyleDeclaration_propertyValueForDashedIDLAttribute(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3, WTF::StringImpl *a4)
{
  JSC::VM *v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  WTF::StringImpl *v13;
  int v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  JSValue v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  int v31;
  WTF *v32;
  uint64_t v33;
  _BYTE v34[40];
  uint64_t v35;
  JSC::JSGlobalObject *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  char v41;
  WTF::StringImpl *v42;

  v6 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSStyleDeclaration::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSStyleDeclaration::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v12 = *(_QWORD *)(a2 + 24);
  v32 = (WTF *)v34;
  v33 = 4;
  v34[32] = 0;
  v35 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v36 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v32;
  if (a3 == 2)
  {
    v29 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v29 += 2;
    v30 = v29;
    v31 = 0;
    if (!a4)
      goto LABEL_19;
    goto LABEL_18;
  }
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v39);
  LOBYTE(v30) = 0;
  v31 = -1;
  v14 = (int)v40;
  if ((_DWORD)v40 != -1)
  {
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **, uint64_t *))off_1E3247F70[v40])(&v37, &v30, &v39);
    v31 = v14;
    if ((_DWORD)v40 != -1)
    {
      ((void (*)(WTF::StringImpl **, uint64_t *))off_1E3238AF8[v40])(&v37, &v39);
      v14 = v31;
    }
    if (v14)
    {
      v19 = 0;
LABEL_27:
      if (v14 != -1)
        ((void (*)(uint64_t *, WTF::StringImpl **))off_1E3238AF8[v14])(&v39, &v30);
      goto LABEL_30;
    }
    if (!a4)
    {
LABEL_19:
      v37 = a4;
      v15 = v30;
      v30 = 0;
      v42 = v15;
      v16 = WebCore::lookupCSSPropertyFromIDLAttribute<(WebCore::CSSPropertyLookupMode)2>(&v37);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, WTF::StringImpl **, _QWORD))(*(_QWORD *)v12
                                                                                                  + 152))(&v39, v12, v16, &v42, 0);
      v17 = v42;
      v42 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v13);
        else
          *(_DWORD *)v17 -= 2;
      }
      v18 = v37;
      v37 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v13);
        else
          *(_DWORD *)v18 -= 2;
      }
      if (v41)
      {
        v13 = (WTF::StringImpl *)v39;
        LOBYTE(v37) = v39;
        v26 = v40;
        v40 = 0;
        v38 = v26;
        if (!*((_QWORD *)v6 + 2))
        {
          v27.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v39, (JSC::JSGlobalObject *)&v38);
          JSC::VM::throwException(v6, a1, v27);
          v26 = v38;
        }
        v38 = 0;
        if (v26)
        {
          if (*(_DWORD *)v26 == 2)
            WTF::StringImpl::destroy(v26, v13);
          else
            *(_DWORD *)v26 -= 2;
        }
        if (v41)
        {
          v28 = v40;
          v40 = 0;
          if (v28)
          {
            if (*(_DWORD *)v28 == 2)
              WTF::StringImpl::destroy(v28, v13);
            else
              *(_DWORD *)v28 -= 2;
          }
        }
      }
      v19 = 1;
      v14 = v31;
      goto LABEL_27;
    }
LABEL_18:
    *(_DWORD *)a4 += 2;
    goto LABEL_19;
  }
  v19 = 0;
LABEL_30:
  if (HIDWORD(v33))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v32, v36);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v35;
    if (HIDWORD(v33))
    {
      v23 = v32;
      v24 = 8 * HIDWORD(v33);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v13);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v35;
  }
  v20 = v32;
  if (v34 != (_BYTE *)v32 && v32 != 0)
  {
    v32 = 0;
    LODWORD(v33) = 0;
    WTF::fastFree(v20, v13);
  }
  return v19;
}

uint64_t WebCore::jsCSSStyleDeclaration_propertyValueForEpubCasedIDLAttribute(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;

  v4 = *(_QWORD *)(a2 + 24);
  if (a3)
    *(_DWORD *)a3 += 2;
  v15 = a3;
  v5 = WebCore::lookupCSSPropertyFromIDLAttribute<(WebCore::CSSPropertyLookupMode)0>(&v15);
  (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 144))(&v16, v4, v5);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v16;
  if (!v16 || (v8 = *((_DWORD *)v16 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_9:
    v16 = 0;
    if (!v7)
      goto LABEL_20;
    goto LABEL_18;
  }
  if (v8 != 1)
    goto LABEL_6;
  v10 = (unsigned __int8 *)*((_QWORD *)v16 + 1);
  if ((*((_BYTE *)v16 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_16:
    v9 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_17;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_16;
  }
LABEL_6:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v16 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v16;
    goto LABEL_9;
  }
LABEL_17:
  v16 = 0;
LABEL_18:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
LABEL_20:
  v13 = v15;
  v15 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v7);
    else
      *(_DWORD *)v13 -= 2;
  }
  return v9;
}

BOOL WebCore::setJSCSSStyleDeclaration_propertyValueForEpubCasedIDLAttribute(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3, WTF::StringImpl *a4)
{
  JSC::VM *v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  WTF::StringImpl *v13;
  int v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  JSValue v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  int v31;
  WTF *v32;
  uint64_t v33;
  _BYTE v34[40];
  uint64_t v35;
  JSC::JSGlobalObject *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  char v41;
  WTF::StringImpl *v42;

  v6 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSStyleDeclaration::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSStyleDeclaration::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v12 = *(_QWORD *)(a2 + 24);
  v32 = (WTF *)v34;
  v33 = 4;
  v34[32] = 0;
  v35 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v36 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v32;
  if (a3 == 2)
  {
    v29 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v29 += 2;
    v30 = v29;
    v31 = 0;
    if (!a4)
      goto LABEL_19;
    goto LABEL_18;
  }
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v39);
  LOBYTE(v30) = 0;
  v31 = -1;
  v14 = (int)v40;
  if ((_DWORD)v40 != -1)
  {
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **, uint64_t *))off_1E3247F70[v40])(&v37, &v30, &v39);
    v31 = v14;
    if ((_DWORD)v40 != -1)
    {
      ((void (*)(WTF::StringImpl **, uint64_t *))off_1E3238AF8[v40])(&v37, &v39);
      v14 = v31;
    }
    if (v14)
    {
      v19 = 0;
LABEL_27:
      if (v14 != -1)
        ((void (*)(uint64_t *, WTF::StringImpl **))off_1E3238AF8[v14])(&v39, &v30);
      goto LABEL_30;
    }
    if (!a4)
    {
LABEL_19:
      v37 = a4;
      v15 = v30;
      v30 = 0;
      v42 = v15;
      v16 = WebCore::lookupCSSPropertyFromIDLAttribute<(WebCore::CSSPropertyLookupMode)0>(&v37);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, WTF::StringImpl **, _QWORD))(*(_QWORD *)v12
                                                                                                  + 152))(&v39, v12, v16, &v42, 0);
      v17 = v42;
      v42 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v13);
        else
          *(_DWORD *)v17 -= 2;
      }
      v18 = v37;
      v37 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v13);
        else
          *(_DWORD *)v18 -= 2;
      }
      if (v41)
      {
        v13 = (WTF::StringImpl *)v39;
        LOBYTE(v37) = v39;
        v26 = v40;
        v40 = 0;
        v38 = v26;
        if (!*((_QWORD *)v6 + 2))
        {
          v27.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v39, (JSC::JSGlobalObject *)&v38);
          JSC::VM::throwException(v6, a1, v27);
          v26 = v38;
        }
        v38 = 0;
        if (v26)
        {
          if (*(_DWORD *)v26 == 2)
            WTF::StringImpl::destroy(v26, v13);
          else
            *(_DWORD *)v26 -= 2;
        }
        if (v41)
        {
          v28 = v40;
          v40 = 0;
          if (v28)
          {
            if (*(_DWORD *)v28 == 2)
              WTF::StringImpl::destroy(v28, v13);
            else
              *(_DWORD *)v28 -= 2;
          }
        }
      }
      v19 = 1;
      v14 = v31;
      goto LABEL_27;
    }
LABEL_18:
    *(_DWORD *)a4 += 2;
    goto LABEL_19;
  }
  v19 = 0;
LABEL_30:
  if (HIDWORD(v33))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v32, v36);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v35;
    if (HIDWORD(v33))
    {
      v23 = v32;
      v24 = 8 * HIDWORD(v33);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v13);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v35;
  }
  v20 = v32;
  if (v34 != (_BYTE *)v32 && v32 != 0)
  {
    v32 = 0;
    LODWORD(v33) = 0;
    WTF::fastFree(v20, v13);
  }
  return v19;
}

uint64_t WebCore::jsCSSStyleDeclaration_cssText(WebCore *a1, uint64_t a2, WebCore::JSCSSStyleDeclaration *a3)
{
  return WebCore::jsCSSStyleDeclaration_cssTextGetter(a1, *(JSC::JSGlobalObject **)(a2 + 24), a3);
}

BOOL WebCore::setJSCSSStyleDeclaration_cssText(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  int v11;
  _BOOL8 v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF *v15;
  WTF *v19;
  uint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  int v25;
  WTF *v26;
  uint64_t v27;
  _BYTE v28[40];
  uint64_t v29;
  JSC::JSGlobalObject *v30;
  JSC::VM *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  char v36;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSStyleDeclaration::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSStyleDeclaration::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v31 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v26 = (WTF *)v28;
  v27 = 4;
  v28[32] = 0;
  v29 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v30 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v26;
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v24);
  v11 = v25;
  v12 = v25 == 0;
  if (!v25)
  {
    v13 = v24;
    v24 = 0;
    v32 = v13;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, WTF::StringImpl **))(*(_QWORD *)v9 + 64))(&v34, v9, &v32);
    v14 = v32;
    v32 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v10);
      else
        *(_DWORD *)v14 -= 2;
    }
    if (v36)
    {
      LOBYTE(v32) = v34;
      v22 = v35;
      v35 = 0;
      v33 = v22;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v31, (unsigned __int8 *)&v32);
        v22 = v33;
      }
      v33 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 == 2)
          WTF::StringImpl::destroy(v22, v10);
        else
          *(_DWORD *)v22 -= 2;
      }
      if (v36)
      {
        v23 = v35;
        v35 = 0;
        if (v23)
        {
          if (*(_DWORD *)v23 == 2)
            WTF::StringImpl::destroy(v23, v10);
          else
            *(_DWORD *)v23 -= 2;
        }
      }
    }
    v11 = v25;
  }
  if (v11 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E3238AF8[v11])(&v34, &v24);
  if (HIDWORD(v27))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v26, v30);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
    if (HIDWORD(v27))
    {
      v19 = v26;
      v20 = 8 * HIDWORD(v27);
      do
      {
        v21 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)(v21 + 24) == 2)
          {
            if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v21, v10);
          }
          else
          {
            *(_DWORD *)(v21 + 24) -= 2;
          }
        }
        v19 = (WTF *)((char *)v19 + 8);
        v20 -= 8;
      }
      while (v20);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
  }
  v15 = v26;
  if (v28 != (_BYTE *)v26 && v26 != 0)
  {
    v26 = 0;
    LODWORD(v27) = 0;
    WTF::fastFree(v15, v10);
  }
  return v12;
}

unint64_t WebCore::jsCSSStyleDeclaration_cssRules(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _DWORD *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (_DWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 48))(*(_QWORD *)(a2 + 24));
  if (v4)
    return WebCore::wrap<WebCore::CSSRule>(a1, v3, v4);
  else
    return 2;
}

unint64_t WebCore::jsCSSStyleDeclaration_length(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 72))(*(_QWORD *)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

unint64_t WebCore::jsCSSStyleDeclaration_parentRule(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _DWORD *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (_DWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 40))(*(_QWORD *)(a2 + 24));
  if (v4)
    return WebCore::wrap<WebCore::CSSRule>(a1, v3, v4);
  else
    return 2;
}

BOOL WebCore::setJSCSSStyleDeclaration_cssFloat(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  _BOOL8 v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF *v16;
  WTF *v19;
  uint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  int v25;
  WTF *v26;
  uint64_t v27;
  _BYTE v28[40];
  uint64_t v29;
  JSC::JSGlobalObject *v30;
  JSC::VM *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  char v36;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSStyleDeclaration::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSStyleDeclaration::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v31 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v26 = (WTF *)v28;
  v27 = 4;
  v28[32] = 0;
  v29 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v30 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v26;
  WebCore::convert<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLUSVString>>((uint64_t)&v24, a1, a3);
  v12 = v25;
  v13 = v25 == 0;
  if (!v25)
  {
    v14 = v24;
    v24 = 0;
    v32 = v14;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, WTF::StringImpl **, _QWORD))(*(_QWORD *)v10 + 152))(&v34, v10, 123, &v32, 0);
    v15 = v32;
    v32 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v11);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (v36)
    {
      LOBYTE(v32) = v34;
      v22 = v35;
      v35 = 0;
      v33 = v22;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v31, (unsigned __int8 *)&v32);
        v22 = v33;
      }
      v33 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 == 2)
          WTF::StringImpl::destroy(v22, v11);
        else
          *(_DWORD *)v22 -= 2;
      }
      if (v36)
      {
        v23 = v35;
        v35 = 0;
        if (v23)
        {
          if (*(_DWORD *)v23 == 2)
            WTF::StringImpl::destroy(v23, v11);
          else
            *(_DWORD *)v23 -= 2;
        }
      }
    }
    v12 = v25;
  }
  if (v12 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E3238AF8[v12])(&v34, &v24);
  if (HIDWORD(v27))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v26, v30);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
    if (HIDWORD(v27))
    {
      v19 = v26;
      v20 = 8 * HIDWORD(v27);
      do
      {
        v21 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)(v21 + 24) == 2)
          {
            if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v21, v11);
          }
          else
          {
            *(_DWORD *)(v21 + 24) -= 2;
          }
        }
        v19 = (WTF *)((char *)v19 + 8);
        v20 -= 8;
      }
      while (v20);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
  }
  v16 = v26;
  if (v28 != (_BYTE *)v26 && v26 != 0)
  {
    v26 = 0;
    LODWORD(v27) = 0;
    WTF::fastFree(v16, v11);
  }
  return v13;
}

uint64_t WebCore::JSCSSStyleDeclarationOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  WebCore::CSSRule *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  WTF::ConcurrentPtrHashSet *v13;
  _DWORD *v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t result;

  v6 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsCSSStyleDeclaration";
    a5[1] = 37;
  }
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
  if (v7)
  {
    v6 = WebCore::root(v7, v8);
  }
  else
  {
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 168))(v6);
    if (v9)
    {
      v6 = WebCore::root(v9);
    }
    else
    {
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      if (v10)
      {
        if ((*(_BYTE *)(v10 + 22) & 8) == 0)
        {
          while (1)
          {
            v6 = v10;
            if ((*(_WORD *)(v10 + 28) & 0x80) != 0)
            {
              v12 = *(_QWORD *)(v10 + 200);
              if (!v12)
                goto LABEL_14;
              v11 = (uint64_t *)(v12 + 8);
            }
            else
            {
              v11 = (uint64_t *)(v10 + 32);
            }
            v10 = *v11;
            if (!*v11)
              goto LABEL_14;
          }
        }
        v6 = *(_QWORD *)(*(_QWORD *)(v10 + 40) + 8);
      }
    }
  }
LABEL_14:
  v13 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v14 = (_DWORD *)*((_QWORD *)v13 + 6);
  if ((_DWORD *)((char *)v13 + 56) == v14)
  {
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v13, (void *)v6);
    if ((_DWORD)result)
    {
LABEL_25:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v15 = v14[1];
    v16 = (~(v6 << 32) + v6) ^ ((unint64_t)(~(v6 << 32) + v6) >> 22);
    v17 = 9 * ((v16 + ~(v16 << 13)) ^ ((v16 + ~(v16 << 13)) >> 8));
    v18 = (v17 ^ (v17 >> 15)) + ~((v17 ^ (v17 >> 15)) << 27);
    v19 = v15 & ((v18 >> 31) ^ v18);
    v20 = v19;
    while (1)
    {
      v21 = *(_QWORD *)&v14[2 * v20 + 4];
      if (!v21)
        return 0;
      if (v6 == v21)
        goto LABEL_25;
      v20 = (v20 + 1) & v15;
      if (v20 == v19)
      {
        __break(0xC471u);
        JUMPOUT(0x1948ED2D8);
      }
    }
  }
  return result;
}

unint64_t WebCore::JSCSSStyleDeclaration::toWrapped(uint64_t a1, unint64_t a2)
{
  unint64_t result;

  result = JSC::jsDynamicCast<WebCore::JSCSSStyleDeclaration *>(a2);
  if (result)
    return *(_QWORD *)(result + 24);
  return result;
}

unint64_t JSC::jsDynamicCast<WebCore::JSCSSStyleDeclaration *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSCSSStyleDeclaration::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSCSSStyleDeclaration::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

uint64_t WebCore::JSCSSStyleImageValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSStyleImageValue::createPrototype(WebCore::JSCSSStyleImageValue *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSStyleValue::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSStyleValue::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSStyleValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSStyleValuePrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSStyleValue::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSStyleValue::s_info);
  }
  v18 = WebCore::JSCSSStyleImageValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSStyleImageValuePrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSStyleImageValuePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSStyleImageValuePrototype::create(WebCore::JSCSSStyleImageValuePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSCSSStyleImageValue::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSCSSStyleImageValuePrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleImageValue>,(WebCore::DOMConstructorID)377>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3016);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleImageValue>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSStyleImageValue::s_info
         + ~((_QWORD)&WebCore::JSCSSStyleImageValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSStyleImageValue::s_info
                                                                      + ~((_QWORD)&WebCore::JSCSSStyleImageValue::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSStyleImageValue::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSStyleImageValue::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSStyleImageValue::createPrototype((WebCore::JSCSSStyleImageValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSStyleImageValue::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSStyleImageValue::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3016) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSStyleImageValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSStyleImageValuePrototype::s_info != (char **)(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                    + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleImageValue>,(WebCore::DOMConstructorID)377>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCSSStyleImageValue::subspaceForImpl(WebCore::JSCSSStyleImageValue *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3064);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3064))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3064);
    *(_QWORD *)(v8 + 3064) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3064);
  *(_QWORD *)(v3 + 3064) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSStyleRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSStyleRule::createPrototype(WebCore::JSCSSStyleRule *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSRule::s_info + ~((_QWORD)&WebCore::JSCSSRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSRule::s_info + ~((_QWORD)&WebCore::JSCSSRule::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSRule::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSRule::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSRulePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSRulePrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSRule::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSRule::s_info);
  }
  v18 = WebCore::JSCSSStyleRulePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSStyleRulePrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSStyleRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSStyleRulePrototype::create(WebCore::JSCSSStyleRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  WTF::StringImpl *v14;
  int v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  int v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  JSC::Structure *v31;
  int v32;
  unint64_t v34;
  WTF::StringImpl *v35[6];
  int v36;
  int v37;
  JSC::Structure *v38;
  int v39;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v34);
    *((_QWORD *)this + 4865) = SlowCase + (int)v34;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(this, (uint64_t)&WebCore::JSCSSStyleRule::s_info, &WebCore::JSCSSStyleRulePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x1948EE7CCLL);
  }
  v10 = (int *)((char *)this + 93124);
  v11 = v9 - 192;
  if (!v9)
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 680) + 672);
  v13 = (v12 & 0x40000) == 0;
  if ((v12 & 0x40000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v14 = v35[0];
    v15 = *v10;
    *v10 = 1;
    LODWORD(v35[0]) = -1;
    WORD2(v35[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v15;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v16);
      else
        *(_DWORD *)v14 -= 2;
    }
  }
  v17 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v17 && *(_BYTE *)(v17 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x1948EE7ECLL);
  }
  v18 = v17 - 192;
  if (!v17)
    v18 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v18 + 680) + 672) & 0x40000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v19 = v35[0];
    v20 = *v10;
    v13 = 1;
    *v10 = 1;
    LODWORD(v35[0]) = -1;
    WORD2(v35[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v20;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v21);
      else
        *(_DWORD *)v19 -= 2;
    }
  }
  v22 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v22 && *(_BYTE *)(v22 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x1948EE80CLL);
  }
  v23 = v22 - 192;
  if (!v22)
    v23 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v23 + 680) + 672) & 0x40000) != 0)
  {
    if (!v13)
      goto LABEL_32;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v24 = v35[0];
    v25 = *v10;
    *v10 = 1;
    LODWORD(v35[0]) = -1;
    WORD2(v35[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v25;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v26);
      else
        *(_DWORD *)v24 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
LABEL_32:
  v27 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v29 = JSC::JSString::create((uint64_t)this, v35);
  v30 = v35[0];
  v35[0] = 0;
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v28);
    else
      *(_DWORD *)v30 -= 2;
  }
  v31 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v39 = *(_DWORD *)SlowCase;
  v38 = v31;
  v32 = JSC::Structure::outOfLineCapacity(v31);
  v36 = 0;
  v37 = v32;
  v35[0] = (WTF::StringImpl *)&v37;
  v35[1] = (WTF::StringImpl *)SlowCase;
  v35[2] = this;
  v35[3] = (WTF::StringImpl *)&v39;
  v35[4] = (WTF::StringImpl *)&v38;
  v35[5] = (WTF::StringImpl *)&v36;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v31, this, v27, 6, (uint64_t)v35);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v36, v29);
  *((_DWORD *)v31 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleRule>,(WebCore::DOMConstructorID)353>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2824);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRule>,(WebCore::DOMConstructorID)348>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSStyleRule::s_info + ~((_QWORD)&WebCore::JSCSSStyleRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSStyleRule::s_info + ~((_QWORD)&WebCore::JSCSSStyleRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSStyleRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSStyleRule::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSStyleRule::createPrototype((WebCore::JSCSSStyleRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSStyleRule::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSStyleRule::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2824) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSStyleRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSStyleRulePrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleRule>,(WebCore::DOMConstructorID)353>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSStyleRule_selectorText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::CSSStyleRule::selectorText(*(WTF::StringImpl **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSCSSStyleRule_selectorText(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CSSStyleRule *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSStyleRule::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSStyleRule::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::CSSStyleRule **)(a2 + 24);
  v22 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v21 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v21;
    if (hasExceptionsAfterHandlingTraps)
    {
      v20 = 1;
      v21 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_24;
    }
  }
  else
  {
    v11 = v21;
  }
  v20 = 0;
  v19 = 0;
  v22 = v11;
  WebCore::CSSStyleRule::setSelectorText(v9, (unsigned int **)&v22);
  v13 = v22;
  v22 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  v14 = 0;
  v15 = 1;
LABEL_24:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E3238AF8[v14])(&v22, &v19);
  return v15;
}

unint64_t WebCore::jsCSSStyleRule_style(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WTF *v3;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v3 = (WTF *)WebCore::CSSStyleRule::style(*(WebCore::CSSStyleRule **)(a2 + 24));
  return WebCore::toJS<WebCore::IDLInterface<WebCore::CSSStyleDeclaration>,WebCore::CSSStyleDeclaration&>(v2, v3);
}

BOOL WebCore::setJSCSSStyleRule_style(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSStyleRule::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSStyleRule::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

unint64_t WebCore::jsCSSStyleRule_styleMap(int a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::StylePropertyMap>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 40));
}

unint64_t WebCore::jsCSSStyleRule_cssRules(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  WTF *v4;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = *(WTF **)(v2 + 72);
  if (!v4)
  {
    v4 = (WTF *)WTF::fastMalloc((WTF *)0x10);
    *(_QWORD *)v4 = off_1E3398BE0;
    *((_QWORD *)v4 + 1) = v2;
    a1 = *(_QWORD *)(v2 + 72);
    *(_QWORD *)(v2 + 72) = v4;
    if (a1)
    {
      a1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
      v4 = *(WTF **)(v2 + 72);
    }
  }
  return WebCore::toJS(a1, v3, v4);
}

uint64_t WebCore::JSCSSStyleRule::subspaceForImpl(WebCore::JSCSSStyleRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2864);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 2864);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 2864);
    *(_QWORD *)(v8 + 2864) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2864);
  *(_QWORD *)(v3 + 2864) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSStyleSheet>::construct(JSC::VM **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl **v7;
  WTF::StringImpl **v8;
  JSC::JSCell *v9;
  JSC::VM *v10;
  WTF::StringImpl *v11;
  JSC::VM *v12;
  char v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18;
  int v19;
  int v20;
  int v21;
  WTF::StringImpl *v22;
  int v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  int v26;
  WTF::StringImpl *v27;
  WebCore::JSDOMGlobalObject *v28;
  WTF::StringImpl *v29;
  WebCore::JSCSSStyleSheet **v30;
  WTF::StringImpl *v31;
  JSCell *v32;
  WTF::StringImpl *v33;
  JSC::JSCell *v34;
  JSC::JSGlobalObject *v35;
  JSC::JSObject *v36;
  JSC::JSGlobalObject *v37;
  uint64_t Object;
  WTF::StringImpl *v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  BOOL v45;
  WebCore::JSCSSStyleSheet *v46;
  WebCore::JSDOMGlobalObject *v47;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v49;
  JSC::Structure *v50;
  unint64_t SubclassStructure;
  JSC::VM *v52;
  double v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  unint64_t v56;
  JSC::VM *v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  JSC::VM *v64;
  uint64_t v65;
  int hasExceptionsAfterHandlingTraps;
  int v67;
  BOOL v68;
  int v69;
  uint64_t v70;
  int *v71;
  int v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  char v75[8];
  int v76;
  BOOL v77;
  int v78;
  JSC::VM *v79;
  WTF::StringImpl *v80;
  int v81;
  uint64_t v82;
  int v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v85;
  int v86;
  BOOL v87;
  JSC::VM *v88;
  WTF::StringImpl **v89;
  WTF::StringImpl *v90;
  WTF::StringImpl *v91;
  int v92;
  int v93;
  uint64_t v94;

  v94 = *MEMORY[0x1E0C80C00];
  v79 = a1[7];
  v4 = *(_QWORD *)(a2 + 24);
  v5 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v4 + 40));
  if (!v5)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError((JSC *)a1, &v79, (uint64_t)"CSSStyleSheet", 14);
  v7 = (WTF::StringImpl **)v5;
  if (*(_BYTE *)(v5 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x1948EFAFCLL);
  }
  v8 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v88 = a1[7];
    goto LABEL_5;
  }
  v9 = *(JSC::JSCell **)(a2 + 48);
  v10 = a1[7];
  v88 = v10;
  if (((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
LABEL_5:
    v84 = 0;
    v11 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v11 += 2;
    v12 = 0;
    v85 = v11;
    v13 = 1;
    v86 = 1;
    v87 = 0;
    goto LABEL_8;
  }
  if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v9)) == 0)
  {
    JSC::throwTypeError();
    v32 = 0;
    v23 = 1;
    v78 = 1;
LABEL_52:
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3248130[v23])(&v84, &v74);
    return v32;
  }
  v12 = (JSC::VM *)Object;
  v84 = 0;
  v40 = *v8;
  if (*v8)
    *(_DWORD *)v40 += 2;
  v85 = v40;
  v86 = 1;
  v87 = 0;
  WTF::AtomStringImpl::addLiteral();
  v41 = JSC::JSObject::get(v12, (JSC::JSGlobalObject *)a1, (unint64_t)v90);
  if (v90)
  {
    if (*(_DWORD *)v90 == 2)
    {
      v73 = (WTF::StringImpl *)v41;
      WTF::StringImpl::destroy(v90, v6);
      v41 = (uint64_t)v73;
    }
    else
    {
      *(_DWORD *)v90 -= 2;
    }
  }
  if (*((_DWORD *)v10 + 20))
  {
    v64 = v10;
    v65 = v41;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v64);
    v41 = v65;
    if (hasExceptionsAfterHandlingTraps)
    {
      v78 = 1;
      v8 = (WTF::StringImpl **)off_1E32480E0;
      goto LABEL_27;
    }
  }
  if (v41 == 10)
  {
    v13 = 0;
LABEL_8:
    v14 = 0;
    goto LABEL_9;
  }
  v90 = (WTF::StringImpl *)v41;
  v57 = a1[7];
  if ((v41 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v41 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v90, (JSC::JSGlobalObject *)a1);
  }
  else
  {
    v58 = *(WTF::StringImpl **)(v41 + 8);
    if ((v58 & 1) != 0)
      v58 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v41, (JSC::JSGlobalObject *)a1);
    if (v58)
      *(_DWORD *)v58 += 2;
    v80 = v58;
  }
  if (*((_DWORD *)v57 + 20))
  {
    v67 = JSC::VM::hasExceptionsAfterHandlingTraps(v57);
    v14 = v80;
    if (v67)
    {
      v21 = 1;
      v83 = 1;
      v80 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v6);
        else
          *(_DWORD *)v14 -= 2;
      }
      v78 = 1;
      v8 = (WTF::StringImpl **)off_1E32480E0;
      goto LABEL_26;
    }
  }
  else
  {
    v14 = v80;
  }
  v13 = 0;
LABEL_9:
  v83 = 0;
  v82 = 0;
  v15 = v84;
  v84 = v14;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v6);
    else
      *(_DWORD *)v15 -= 2;
  }
  if ((v13 & 1) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v42 = v90;
    v44 = JSC::JSObject::get(v12, (JSC::JSGlobalObject *)a1, (unint64_t)v90);
    if (v42)
    {
      if (*(_DWORD *)v42 == 2)
      {
        v60 = v42;
        v61 = v44;
        WTF::StringImpl::destroy(v60, v43);
        v44 = v61;
      }
      else
      {
        *(_DWORD *)v42 -= 2;
      }
    }
    if (*((_DWORD *)v88 + 20))
    {
      v62 = v44;
      v63 = JSC::VM::hasExceptionsAfterHandlingTraps(v88);
      v44 = v62;
      if (v63)
        goto LABEL_130;
    }
    if (v44 == 10)
    {
      v45 = 0;
      goto LABEL_85;
    }
    v52 = a1[7];
    if (v44 >= 0xFFFE000000000000)
      goto LABEL_146;
    *(_QWORD *)&v53 = v44 - 0x2000000000000;
    if (v44 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v53 <= 0.0)
      {
        v45 = v53 < 0.0;
        goto LABEL_84;
      }
    }
    else
    {
      if ((v44 & 0xFFFE000000000002) != 0)
      {
        v45 = v44 == 7;
        goto LABEL_84;
      }
      v69 = *(unsigned __int8 *)(v44 + 5);
      if (v69 == 3)
      {
        v72 = *(_DWORD *)(v44 + 8);
LABEL_160:
        v68 = v72 == 0;
        goto LABEL_147;
      }
      if (v69 == 2)
      {
        v70 = *(_QWORD *)(v44 + 8);
        if ((v70 & 1) != 0)
          v71 = (int *)(v44 + 16);
        else
          v71 = (int *)(v70 + 4);
        v72 = *v71;
        goto LABEL_160;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v44 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v68 = *(_QWORD *)(16 * (*(_DWORD *)v44 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        goto LABEL_147;
      }
    }
    v45 = 1;
    goto LABEL_84;
  }
  v87 = 0;
LABEL_14:
  v16 = *v8;
  if (*v8)
    *(_DWORD *)v16 += 2;
  v91 = v16;
  v17 = 1;
  v92 = 1;
  v93 = 0;
  LOBYTE(v80) = 0;
  v81 = -1;
  v8 = (WTF::StringImpl **)off_1E32480E0;
LABEL_17:
  ((void (*)(WTF::StringImpl ***, WTF::StringImpl **, WTF::StringImpl **))off_1E32480F0[v17])(&v89, &v80, &v91);
  v81 = v17;
  v89 = &v85;
  ((void (*)(WTF::StringImpl ***, WTF::StringImpl **, WTF::StringImpl **))off_1E3248100[v17])(&v89, &v85, &v80);
LABEL_18:
  if (v81 != -1)
    ((void (*)(WTF::StringImpl ***, WTF::StringImpl **))off_1E32480E0[v81])(&v89, &v80);
  v18 = v84;
  v84 = 0;
  v74 = v18;
  v75[0] = 0;
  v76 = -1;
  v19 = v86;
  if (v86 != -1)
  {
    ((void (*)(WTF::StringImpl **, char *, WTF::StringImpl **))off_1E32480F0[v86])(&v80, v75, &v85);
    v76 = v19;
  }
  v77 = v87;
  v78 = 0;
  v20 = v93;
LABEL_23:
  if (v20 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3248110[v20])(&v80, &v91);
  while (1)
  {
    v21 = v83;
    if (v83 != -1)
LABEL_26:
      ((void (*)(WTF::StringImpl **, uint64_t *))off_1E3238AF8[v21])(&v90, &v82);
LABEL_27:
    if (v86 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32480E0[v86])(&v90, &v85);
    v86 = -1;
    v22 = v84;
    v84 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v6);
      else
        *(_DWORD *)v22 -= 2;
    }
    v23 = v78;
    if (v78)
    {
      v32 = 0;
      goto LABEL_51;
    }
    v24 = (uint64_t)(v7 - 24);
    v25 = v74;
    v74 = 0;
    v84 = v25;
    v7 = &v85;
    LOBYTE(v85) = 0;
    v86 = -1;
    v26 = v76;
    if (v76 != -1)
    {
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **, char *))off_1E32480F0[v76])(&v90, &v85, v75);
      v86 = v26;
    }
    v87 = v77;
    WebCore::CSSStyleSheet::create(v24, (uint64_t)&v84, (uint64_t)&v90);
    if (v86 != -1)
      ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32480E0[v86])(&v82, &v85);
    v86 = -1;
    v29 = v84;
    v84 = 0;
    if (v29)
    {
      if (*(_DWORD *)v29 == 2)
        WTF::StringImpl::destroy(v29, v27);
      else
        *(_DWORD *)v29 -= 2;
    }
    v12 = v79;
    if (*((_DWORD *)v79 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v79) & 1) != 0)
      goto LABEL_119;
    if (!v92)
    {
      v30 = *(WebCore::JSCSSStyleSheet ***)(v4 + 40);
      v31 = v90;
      v90 = 0;
      v84 = v31;
      v32 = (JSCell *)WebCore::toJSNewlyCreated(v30, (uint64_t *)&v84, v28);
      v33 = v84;
      v84 = 0;
      if (v33)
      {
        if (*((_DWORD *)v33 + 2) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v33 + 8))(v33);
        else
          --*((_DWORD *)v33 + 2);
      }
      goto LABEL_43;
    }
    if (v92 == 1)
      break;
    v52 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_146:
    v68 = (_DWORD)v44 == 0;
LABEL_147:
    v45 = !v68;
LABEL_84:
    if (!*((_DWORD *)v52 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v52))
    {
LABEL_85:
      v87 = v45;
      WTF::AtomStringImpl::addLiteral();
      v54 = v90;
      v56 = JSC::JSObject::get(v12, (JSC::JSGlobalObject *)a1, (unint64_t)v90);
      if (v54)
      {
        if (*(_DWORD *)v54 == 2)
          WTF::StringImpl::destroy(v54, v55);
        else
          *(_DWORD *)v54 -= 2;
      }
      if (!*((_DWORD *)v88 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v88))
      {
        if (v56 == 10)
          goto LABEL_14;
        WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::MediaList>,WebCore::IDLDOMString>>::convert((uint64_t)&v90, (JSC::JSGlobalObject *)a1, v56);
        v20 = v93;
        v8 = (WTF::StringImpl **)off_1E32480E0;
        if (v93)
        {
          v78 = 1;
          goto LABEL_23;
        }
        v17 = v92;
        LOBYTE(v80) = 0;
        v81 = -1;
        if (v92 != -1)
          goto LABEL_17;
        if (v86 != -1)
        {
          ((void (*)(WTF::StringImpl ***, WTF::StringImpl **))off_1E32480E0[v86])(&v89, &v85);
          v86 = -1;
        }
        goto LABEL_18;
      }
    }
LABEL_130:
    v78 = 1;
    v8 = (WTF::StringImpl **)off_1E32480E0;
  }
  LOBYTE(v84) = (_BYTE)v90;
  v59 = v91;
  v91 = 0;
  v85 = v59;
  if (!*((_QWORD *)v12 + 2))
  {
    WebCore::propagateExceptionSlowPath((JSC *)a1, &v79, (unsigned __int8 *)&v84);
    v59 = v85;
  }
  v85 = 0;
  if (v59)
  {
    if (*(_DWORD *)v59 == 2)
      WTF::StringImpl::destroy(v59, v27);
    else
      *(_DWORD *)v59 -= 2;
  }
  v32 = 0;
LABEL_43:
  if (*((_DWORD *)v12 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) != 0)
    goto LABEL_119;
  v34 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v34 & 0xFFFE000000000002) == 0)
  {
    v35 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v34);
    if (v35)
    {
      v37 = v35;
      if (v35 != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v46 = a1[7];
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm((JSC *)a1, v35, v36);
        if (!*((_DWORD *)v46 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v46) & 1) == 0)
        {
          v49 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSCSSStyleSheet>(v46, FunctionRealm, v47);
          SubclassStructure = JSC::InternalFunction::createSubclassStructure((JSC::InternalFunction *)a1, v37, v49, v50);
          if (!*((_DWORD *)v46 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v46) & 1) == 0)
            JSC::JSObject::setStructure(v32, v46, SubclassStructure);
        }
      }
    }
  }
  if (*((_DWORD *)v12 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) != 0)
LABEL_119:
    v32 = 0;
  if (v92 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3248120[v92])(&v84, &v90);
  v23 = v78;
LABEL_51:
  if (v23 != -1)
    goto LABEL_52;
  return v32;
}

BOOL WebCore::JSDOMConstructor<WebCore::JSCSSStyleSheet>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  WebCore::JSDOMGlobalObject *v11;
  uint64_t v12;
  WTF::StringImpl *v14;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v14);
  v9 = v14;
  v14 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v12 = WebCore::getDOMStructure<WebCore::JSCSSStyleSheet>((WebCore::JSCSSStyleSheet *)a2, a3, v11);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v12 + 48), 14);
}

WTF::StringImpl *WebCore::JSCSSStyleSheetPrototype::finishCreation(WebCore::JSCSSStyleSheetPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<10u>(a2, (uint64_t)&WebCore::JSCSSStyleSheet::s_info, (uint64_t)&WebCore::JSCSSStyleSheetPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSCSSStyleSheet::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSStyleSheet::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSStyleSheet::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSStyleSheet::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSStyleSheet::createPrototype(WebCore::JSCSSStyleSheet *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t v6;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSStyleSheet::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, (int)a2, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSCSSStyleSheetPrototype::create(this, a2, v6, v7);
}

unint64_t WebCore::JSCSSStyleSheetPrototype::create(WebCore::JSCSSStyleSheetPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)v6 = a3 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSCSSStyleSheetPrototype::finishCreation((WebCore::JSCSSStyleSheetPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::jsCSSStyleSheetConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSStyleSheetPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 2832);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSStyleSheet>,(WebCore::DOMConstructorID)372>(v2, v3);
    Structure = WebCore::JSDOMConstructor<WebCore::JSCSSStyleSheet>::createStructure((uint64_t *)v2, v3, v5);
    result = WebCore::JSDOMConstructor<WebCore::JSCSSStyleSheet>::create(v2, Structure, (JSC::VM *)v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 2832) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v7 = (JSC::Heap *)(v2 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)v3);
        return v8;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsCSSStyleSheet_ownerRule(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v2 && (v4 = *(_DWORD **)(v2 + 8)) != 0)
    return WebCore::wrap<WebCore::CSSRule>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v4);
  else
    return 2;
}

unint64_t WebCore::jsCSSStyleSheet_cssRules(JSC *a1, WTF::StringImpl *a2)
{
  WebCore::CSSStyleSheet *v3;
  JSC::VM *v4;
  uint64_t v5;
  WTF *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  JSValue v12;
  uint64_t v14;
  WTF::StringImpl *v15;
  int v16;
  char v17[8];
  WTF::StringImpl *v18;

  v3 = (WebCore::CSSStyleSheet *)*((_QWORD *)a2 + 3);
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (!WebCore::CSSStyleSheet::canAccessRules(v3, a2))
    goto LABEL_6;
  v6 = (WTF *)*((_QWORD *)v3 + 18);
  if (v6
    || (v6 = (WTF *)WTF::fastMalloc((WTF *)0x10),
        *(_QWORD *)v6 = off_1E3398C38,
        *((_QWORD *)v6 + 1) = v3,
        v7 = *((_QWORD *)v3 + 18),
        *((_QWORD *)v3 + 18) = v6,
        !v7)
    || ((*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7), (v6 = (WTF *)*((_QWORD *)v3 + 18)) != 0))
  {
    v8 = (*(uint64_t (**)(WTF *))(*(_QWORD *)v6 + 16))(v6);
    v16 = 0;
    v14 = 0;
    v9 = WebCore::toJS(v8, v5, v6);
    (*(void (**)(WTF *))(*(_QWORD *)v6 + 24))(v6);
  }
  else
  {
LABEL_6:
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    LOBYTE(v14) = 14;
    v16 = 1;
    v17[0] = 14;
    v11 = v15;
    v15 = 0;
    v18 = v11;
    if (!*((_QWORD *)v4 + 2))
    {
      v12.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)0xE, (JSC::JSGlobalObject *)&v18);
      JSC::VM::throwException(v4, a1, v12);
      v11 = v18;
    }
    v18 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
    v9 = 0;
  }
  if (v16 != -1)
    ((void (*)(char *, uint64_t *))off_1E3249758[v16])(v17, &v14);
  return v9;
}

unint64_t WebCore::jsCSSStyleSheet_rules(JSC *a1, WTF::StringImpl *a2)
{
  WebCore::CSSStyleSheet *v3;
  JSC::VM *v4;
  uint64_t v5;
  WTF *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  JSValue v12;
  uint64_t v14;
  WTF::StringImpl *v15;
  int v16;
  char v17[8];
  WTF::StringImpl *v18;

  v3 = (WebCore::CSSStyleSheet *)*((_QWORD *)a2 + 3);
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (!WebCore::CSSStyleSheet::canAccessRules(v3, a2))
    goto LABEL_6;
  v6 = (WTF *)*((_QWORD *)v3 + 18);
  if (v6
    || (v6 = (WTF *)WTF::fastMalloc((WTF *)0x10),
        *(_QWORD *)v6 = off_1E3398C38,
        *((_QWORD *)v6 + 1) = v3,
        v7 = *((_QWORD *)v3 + 18),
        *((_QWORD *)v3 + 18) = v6,
        !v7)
    || ((*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7), (v6 = (WTF *)*((_QWORD *)v3 + 18)) != 0))
  {
    v8 = (*(uint64_t (**)(WTF *))(*(_QWORD *)v6 + 16))(v6);
    v16 = 0;
    v14 = 0;
    v9 = WebCore::toJS(v8, v5, v6);
    (*(void (**)(WTF *))(*(_QWORD *)v6 + 24))(v6);
  }
  else
  {
LABEL_6:
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    LOBYTE(v14) = 14;
    v16 = 1;
    v17[0] = 14;
    v11 = v15;
    v15 = 0;
    v18 = v11;
    if (!*((_QWORD *)v4 + 2))
    {
      v12.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)0xE, (JSC::JSGlobalObject *)&v18);
      JSC::VM::throwException(v4, a1, v12);
      v11 = v18;
    }
    v18 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
    v9 = 0;
  }
  if (v16 != -1)
    ((void (*)(char *, uint64_t *))off_1E3249758[v16])(v17, &v14);
  return v9;
}

uint64_t WebCore::JSCSSStyleSheet::subspaceForImpl(WebCore::JSCSSStyleSheet *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  WTF *v11;
  void *v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2872);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v20 = *(_QWORD *)(v9 + 2872);
  if (!v20)
  {
    v14 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v14, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v16 = v21;
    v21 = 0;
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v22;
    v22 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 1)
        WTF::fastFree(v17, v15);
      else
        --*(_DWORD *)v17;
    }
    v20 = v14;
    v18 = *(_QWORD *)(v9 + 2872);
    *(_QWORD *)(v9 + 2872) = v14;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v19 == *(_DWORD *)(v7 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v7 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v19) = v14;
      *(_DWORD *)(v7 + 2844) = v19 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v10 = *(_QWORD *)(v3 + 2872);
  *(_QWORD *)(v3 + 2872) = v4;
  if (v10)
  {
    v11 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v11, v12);
  }
  v13 = __ldxr((unsigned __int8 *)v7);
  if (v13 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::toJSNewlyCreated(WebCore::JSCSSStyleSheet **a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  void (***v3)(WebCore::CSSStyleSheet *__hidden);
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore::JSCSSStyleSheet *v9;
  uint64_t *v10;
  _QWORD *Allocator;
  unint64_t v13;
  uint64_t v14;
  WebCore::JSCSSStyleSheet *v15;
  uint64_t *v16;
  _QWORD *v17;
  void (***v18)(WebCore::CSSStyleSheet *__hidden);

  v3 = (void (***)(WebCore::CSSStyleSheet *__hidden))*a2;
  if (*(void (***)(WebCore::CSSStyleSheet *__hidden))*a2 != off_1E3398D70)
  {
    __break(0xC471u);
    JUMPOUT(0x1948F0828);
  }
  v6 = WebCore::getDOMStructure<WebCore::JSCSSStyleSheet>(a1[7], (JSC::VM *)a1, a3);
  v7 = WebCore::JSCSSStyleSheet::create(v6, (JSC::VM *)a1, a2);
  v8 = v7;
  v9 = a1[415];
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::StyleSheet *)::owner = (uint64_t)&off_1E330D1B0;
  }
  v10 = (uint64_t *)((char *)v9 + 32);
  v18 = v3;
  if (v7)
  {
    v15 = v9;
    v16 = (uint64_t *)((char *)v9 + 32);
    if ((v7 & 8) != 0)
      v13 = (v7 - 112) | 1;
    else
      v13 = v7 & 0xFFFFFFFFFFFFC000;
    if ((v13 & 1) != 0)
      v14 = v13 + 47;
    else
      v14 = *(_QWORD *)v13 + 32;
    Allocator = *(_QWORD **)(v14 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v14 + 16) = *Allocator;
    *Allocator = v8;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::StyleSheet *)::owner;
    Allocator[2] = v15;
    v10 = v16;
  }
  else
  {
    Allocator = 0;
  }
  v17 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v10, (uint64_t *)&v18, (uint64_t *)&v17);
  if (v17)
    v17[1] = 3;
  return v8;
}

uint64_t WebCore::wrap<WebCore::CSSStyleSheet>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v15;

  v3 = *(_QWORD *)(*((_QWORD *)a2 + 415) + 32);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 - 8);
    v5 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(_QWORD *)(v3 + 16 * v8);
    if (v9 == a3)
    {
LABEL_6:
      v11 = *(_QWORD *)(v3 + 16 * v8 + 8);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 8) & 3) == 0)
        {
          v12 = *(_QWORD *)v11;
          if (*(_QWORD *)v11)
            return v12;
        }
      }
    }
    else
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(_QWORD *)(v3 + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)(a3 + 8);
  v15 = (_DWORD *)a3;
  v12 = WebCore::toJSNewlyCreated((WebCore::JSCSSStyleSheet **)a2, (uint64_t *)&v15, (WebCore::JSDOMGlobalObject *)a3);
  v13 = v15;
  v15 = 0;
  if (v13)
  {
    if (v13[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 8))(v13);
    else
      --v13[2];
  }
  return v12;
}

uint64_t WebCore::JSCSSStyleValuePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSStyleValuePrototype::create(WebCore::JSCSSStyleValuePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSStyleValue::s_info, (uint64_t)&WebCore::JSCSSStyleValuePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char **v33;
  BOOL v34;
  WTF::StringImpl *v36;
  int v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  BOOL v40;
  char **v41;
  BOOL v42;
  WTF::StringImpl *v44;
  int v45;
  WTF::StringImpl *v46;
  unint64_t v48;
  unint64_t v49;
  WTF::StringImpl *v50;
  unint64_t v51;
  int v52;
  int v53;
  uint64_t v54;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3024);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v50) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v48 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v48);
    v5[2] = SlowCase + (int)v48;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v50, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v49 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v49);
    v9[2848] = v2 + (int)v49;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v50 = 0;
  v51 = v2;
  v52 = -1;
  v53 = 0x1000000;
  v54 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v50);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v50);
  v13 = v50;
  v50 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v50 = 0;
  v51 = v2;
  v52 = -1;
  v53 = 0x1000000;
  v54 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v50);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (!v16)
    goto LABEL_21;
  v17 = *(_DWORD *)(v16 - 8);
  v18 = ((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) >> 22);
  v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
  v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
  v21 = v17 & ((v20 >> 31) ^ v20);
  v22 = *(char ***)(v16 + 16 * v21);
  if (v22 != &WebCore::JSCSSStyleValue::s_info)
  {
    v23 = 1;
    while (v22)
    {
      v21 = ((_DWORD)v21 + v23) & v17;
      v22 = *(char ***)(v16 + 16 * v21);
      ++v23;
      if (v22 == &WebCore::JSCSSStyleValue::s_info)
        goto LABEL_20;
    }
    goto LABEL_21;
  }
LABEL_20:
  v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
  if (!v24)
  {
LABEL_21:
    Structure = WebCore::JSCSSStyleValuePrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v27 = (JSC::JSCell *)WebCore::JSCSSStyleValuePrototype::create((WebCore::JSCSSStyleValuePrototype *)a1, (JSC::VM *)a2, Structure, v26);
    v28 = WebCore::JSCSSStyleValue::createStructure((uint64_t *)a1, a2, v27);
    v24 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSCSSStyleValue::s_info);
  }
  v29 = (int *)(a1 + 93124);
  v30 = *(_QWORD *)(v24 + 48);
  v50 = 0;
  v51 = v2;
  v52 = -1;
  v53 = 0x1000000;
  v54 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v50);
  JSC::reifyStaticProperties<2u>((JSC::VM *)a1, (uint64_t)&WebCore::JSCSSStyleValue::s_info, (uint64_t)&WebCore::JSCSSStyleValueConstructorTableValues, (JSC::JSObject *)v2);
  v31 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v32 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v33 = (char **)(16 * v31);
  if ((_DWORD)v31)
    v34 = v33 == &WebCore::JSDOMWindowBase::s_info;
  else
    v34 = 1;
  if (!v34)
  {
    do
    {
      v33 = (char **)v33[2];
      v32 = v33 != 0;
    }
    while (v33 != &WebCore::JSDOMWindowBase::s_info && v33 != 0);
  }
  if (!v32)
  {
    WTF::AtomStringImpl::addLiteral();
    v36 = v50;
    v37 = *v29;
    *v29 = 1;
    LODWORD(v50) = -1;
    WORD2(v50) = 1;
    JSC::JSObject::deleteProperty();
    *v29 = v37;
    if (v36)
    {
      if (*(_DWORD *)v36 == 2)
        WTF::StringImpl::destroy(v36, v38);
      else
        *(_DWORD *)v36 -= 2;
    }
  }
  v39 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v40 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v41 = (char **)(16 * v39);
  if ((_DWORD)v39)
    v42 = v41 == &WebCore::JSDOMWindowBase::s_info;
  else
    v42 = 1;
  if (!v42)
  {
    do
    {
      v41 = (char **)v41[2];
      v40 = v41 != 0;
    }
    while (v41 != &WebCore::JSDOMWindowBase::s_info && v41 != 0);
  }
  if (!v40)
  {
    WTF::AtomStringImpl::addLiteral();
    v44 = v50;
    v45 = *v29;
    *v29 = 1;
    LODWORD(v50) = -1;
    WORD2(v50) = 1;
    JSC::JSObject::deleteProperty();
    *v29 = v45;
    if (v44)
    {
      if (*(_DWORD *)v44 == 2)
        WTF::StringImpl::destroy(v44, v46);
      else
        *(_DWORD *)v44 -= 2;
    }
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3024) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSStyleValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSStyleValuePrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCSSStyleValue::subspaceForImpl(WebCore::JSCSSStyleValue *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3072);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3072))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3072);
    *(_QWORD *)(v8 + 3072) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3072);
  *(_QWORD *)(v3 + 3072) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSStyleValueOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

uint64_t WebCore::JSCSSStyleValueOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v26;

  result = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = *(_DWORD *)(result + 8);
  *(_DWORD *)(result + 8) = v4 + 1;
  v5 = result + 16;
  if (!result)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v8 = *(_QWORD *)(a3 + 32);
    v6 = (uint64_t *)(a3 + 32);
    v7 = v8;
    if (v8)
    {
      v9 = *(_DWORD *)(v7 - 8);
      v10 = (~(result << 32) + result) ^ ((unint64_t)(~(result << 32) + result) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(_QWORD *)(v7 + 16 * v13);
      if (v14 != result)
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(_QWORD *)(v7 + 16 * v13);
          ++v15;
          if (v14 == result)
            goto LABEL_14;
        }
        v13 = *(unsigned int *)(v7 - 4);
      }
LABEL_14:
      if (v13 != *(_DWORD *)(v7 - 4))
      {
        v16 = (_QWORD *)(v7 + 16 * v13);
        *v16 = -1;
        v19 = v16[1];
        v18 = v16 + 1;
        v17 = v19;
        if (v19)
        {
          *(_QWORD *)(v17 + 8) = 3;
          *v18 = 0;
        }
        ++*(_DWORD *)(*v6 - 16);
        v20 = *v6;
        if (*v6)
          v21 = *(_DWORD *)(v20 - 12) - 1;
        else
          v21 = -1;
        *(_DWORD *)(v20 - 12) = v21;
        v22 = *v6;
        if (*v6)
        {
          v23 = 6 * *(_DWORD *)(v22 - 12);
          v24 = *(_DWORD *)(v22 - 4);
          if (v23 < v24 && v24 >= 9)
          {
            v26 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v24 >> 1, 0);
            result = v26;
          }
        }
      }
    }
    v4 = *(_DWORD *)(result + 8) - 1;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (!v4)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  *(_DWORD *)(result + 8) = v4;
  return result;
}

uint64_t WebCore::JSCSSSupportsRule::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSConditionRule::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSConditionRule::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSConditionRule::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSSupportsRulePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSSupportsRulePrototype::create(WebCore::JSCSSSupportsRulePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSCSSSupportsRule::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSCSSSupportsRulePrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSSupportsRule>,(WebCore::DOMConstructorID)355>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2840);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSConditionRule>,(WebCore::DOMConstructorID)331>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSSupportsRule>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSSupportsRule::s_info + ~((_QWORD)&WebCore::JSCSSSupportsRule::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSSupportsRule::s_info + ~((_QWORD)&WebCore::JSCSSSupportsRule::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSSupportsRule::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSSupportsRule::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSCSSConditionRule::prototype((WebCore::JSCSSConditionRule *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSSupportsRulePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSSupportsRulePrototype::create((WebCore::JSCSSSupportsRulePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSSupportsRule::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSSupportsRule::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2840) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSSupportsRuleConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSSupportsRulePrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSSupportsRule>,(WebCore::DOMConstructorID)355>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCSSSupportsRule::subspaceForImpl(WebCore::JSCSSSupportsRule *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2880);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 2880);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 2880);
    *(_QWORD *)(v8 + 2880) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2880);
  *(_QWORD *)(v3 + 2880) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSTransformComponentPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSTransformComponentPrototype::create(WebCore::JSCSSTransformComponentPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSCSSTransformComponent::s_info, &WebCore::JSCSSTransformComponentPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3264);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v33) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v33, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v32);
    v9[2848] = v2 + (int)v32;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v33);
  v13 = v33;
  v33 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v33);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCSSTransformComponent::s_info
         + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformComponent::s_info
                                                                         + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCSSTransformComponent::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCSSTransformComponent::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCSSTransformComponentPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSCSSTransformComponentPrototype::create((WebCore::JSCSSTransformComponentPrototype *)a1, (JSC::VM *)a2, Structure, v26);
  v28 = WebCore::JSCSSTransformComponent::createStructure((uint64_t *)a1, a2, v27);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSCSSTransformComponent::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v24 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3264) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSTransformComponentConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSTransformComponentPrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSTransformComponent_is2D(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 12))
    return 7;
  else
    return 6;
}

uint64_t WebCore::setJSCSSTransformComponent_is2D(uint64_t a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  double v10;
  _BOOL8 v11;
  uint64_t v12;
  BOOL v14;
  int v15;
  uint64_t v16;
  int *v17;
  int v18;

  v4 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSTransformComponent::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSTransformComponent::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v14 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v10 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v11 = a3 == 7;
      goto LABEL_16;
    }
    v15 = *(unsigned __int8 *)(a3 + 5);
    if (v15 == 3)
    {
      v18 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v15 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v11 = 1;
          goto LABEL_16;
        }
        v14 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v16 = *(_QWORD *)(a3 + 8);
      if ((v16 & 1) != 0)
        v17 = (int *)(a3 + 16);
      else
        v17 = (int *)(v16 + 4);
      v18 = *v17;
    }
    v14 = v18 == 0;
LABEL_37:
    v11 = !v14;
    goto LABEL_16;
  }
  v11 = v10 > 0.0 || v10 < 0.0;
LABEL_16:
  v12 = *(_QWORD *)(a2 + 24);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  (*(void (**)(uint64_t, _BOOL8))(*(_QWORD *)v12 + 8))(v12, v11);
  return 1;
}

uint64_t WebCore::JSCSSTransformComponent::subspaceForImpl(WebCore::JSCSSTransformComponent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3336);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3336))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3336);
    *(_QWORD *)(v8 + 3336) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3336);
  *(_QWORD *)(v3 + 3336) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSTransformComponentOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

_QWORD *WebCore::JSCSSTransformComponentOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 32))(v3);
  --v3[2];
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSTransformValue>::construct(JSC *this, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  JSValue v8;
  int i;
  unsigned int v10;
  uint64_t IndexQuickly;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSCell *v14;
  int v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  WTF *v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  JSC::VM *v26;
  WTF *v27;
  uint64_t v28;
  unsigned int v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char **v34;
  int v35;
  unint64_t v36;
  WebCore::JSCSSTransformValue *v37;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  JSC::VM *v40;
  JSC::JSCell *v41;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v43;
  JSC::JSGlobalObject *v44;
  JSC::VM *v45;
  JSC::JSObject *v46;
  JSC::Structure *v47;
  JSC::VM *FunctionRealm;
  uint64_t v49;
  unsigned int v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char **v55;
  int v56;
  JSC::JSCell *v57;
  uint64_t v58;
  unint64_t SubclassStructure;
  JSValue v61;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v63;
  _DWORD *v64;
  char v65;
  WTF::StringImpl *v66;
  uint64_t v67;
  JSC *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  WTF *v72;
  WTF::StringImpl *v73;
  int v74;
  WTF::StringImpl *v75[2];
  int v76;
  JSC::VM *v77;
  JSC::VM *v78;
  WTF::StringImpl *v79;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v77 = v3;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v61.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, this, v61);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  v78 = v3;
  if ((v6 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v6 + 5) <= 0x16u)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    v13 = v75[0];
    v75[0] = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v14 = 0;
    v15 = 1;
    v76 = 1;
    goto LABEL_74;
  }
  v72 = 0;
  v73 = 0;
  if (JSC::getIterationMode() == 2)
  {
    for (i = 1; ; ++i)
    {
      v10 = (*(_BYTE *)(v6 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v6 + 8) - 8) : 0;
      if (i - 1 >= v10)
        break;
      IndexQuickly = JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v6, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = JSC::JSObject::get((JSC::JSObject *)v6, this, (i - 1));
      if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
        break;
      WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLInterface<WebCore::CSSTransformComponent>>::convert((uint64_t)this, IndexQuickly, (uint64_t)&v72);
      if (*((_QWORD *)v3 + 2))
      {
        v19 = JSC::JSArrayIterator::create();
        v20 = i | 0xFFFE000000000000;
        if (i < 0)
          v20 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v19 + 16) = v20;
        goto LABEL_35;
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(this, (JSC::JSGlobalObject *)v6, v8);
    if (!*((_DWORD *)v3 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) == 0)
    {
      while (1)
      {
        v16 = JSC::iteratorStep();
        if (*((_QWORD *)v3 + 2) || v16 == 6)
          break;
        v18 = JSC::iteratorValue();
        if (*((_DWORD *)v3 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
            break;
        }
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLInterface<WebCore::CSSTransformComponent>>::convert((uint64_t)this, v18, (uint64_t)&v72);
        if (*((_QWORD *)v3 + 2))
        {
LABEL_35:
          JSC::iteratorClose();
          break;
        }
      }
    }
  }
  if (!*((_DWORD *)v3 + 20))
  {
    v21 = v72;
    goto LABEL_38;
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  v21 = v72;
  if (hasExceptionsAfterHandlingTraps)
  {
    v76 = 1;
    if (HIDWORD(v73))
    {
      v63 = 8 * HIDWORD(v73);
      do
      {
        v64 = *(_DWORD **)v21;
        *(_QWORD *)v21 = 0;
        if (v64)
        {
          if (v64[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v64 + 32))(v64);
          else
            --v64[2];
        }
        v21 = (WTF *)((char *)v21 + 8);
        v63 -= 8;
      }
      while (v63);
      v21 = v72;
    }
    if (v21)
    {
      v72 = 0;
      LODWORD(v73) = 0;
      WTF::fastFree(v21, v7);
    }
    v14 = 0;
    v15 = 1;
LABEL_74:
    ((void (*)(WTF **, WTF::StringImpl **))off_1E3248498[v15])(&v72, v75);
    return v14;
  }
LABEL_38:
  v23 = (int)v73;
  v22 = HIDWORD(v73);
  v76 = 0;
  v75[0] = 0;
  v75[1] = 0;
  if (HIDWORD(v73))
  {
    v24 = bmalloc::api::isoAllocate();
    *(_DWORD *)(v24 + 8) = 1;
    *(_QWORD *)(v24 + 16) = 0;
    *(_QWORD *)(v24 + 24) = 0;
    *(_QWORD *)v24 = &off_1E33A0068;
    *(_QWORD *)(v24 + 32) = 0;
    *(_QWORD *)(v24 + 40) = v21;
    *(_DWORD *)(v24 + 48) = v23;
    *(_DWORD *)(v24 + 52) = v22;
    v72 = (WTF *)v24;
    v74 = 0;
  }
  else
  {
    LOBYTE(v72) = 33;
    v73 = 0;
    v74 = 1;
    if (v21)
      WTF::fastFree(v21, v7);
  }
  if (*((_DWORD *)v3 + 20))
  {
    v65 = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v25 = v74;
    if ((v65 & 1) != 0)
    {
LABEL_100:
      v14 = 0;
LABEL_71:
      if (v25 != -1)
        ((void (*)(JSC::VM **, WTF **))off_1E3248488[v25])(&v78, &v72);
      v15 = v76;
      if (v76 == -1)
        return v14;
      goto LABEL_74;
    }
  }
  else
  {
    v25 = v74;
  }
  if (!v25)
  {
    v26 = *(JSC::VM **)(v5 + 40);
    v27 = v72;
    v72 = 0;
    v78 = v27;
    if (*(uint64_t (***)())v27 != &off_1E33A0068)
    {
      __break(0xC471u);
      JUMPOUT(0x1948F3364);
    }
    v28 = *((_QWORD *)v26 + 412);
    if (v28)
    {
      v29 = *(_DWORD *)(v28 - 8);
      v30 = ((unint64_t)&WebCore::JSCSSTransformValue::s_info
           + ~((_QWORD)&WebCore::JSCSSTransformValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformValue::s_info
                                                                       + ~((_QWORD)&WebCore::JSCSSTransformValue::s_info << 32)) >> 22);
      v31 = 9 * ((v30 + ~(v30 << 13)) ^ ((v30 + ~(v30 << 13)) >> 8));
      v32 = (v31 ^ (v31 >> 15)) + ~((v31 ^ (v31 >> 15)) << 27);
      v33 = v29 & ((v32 >> 31) ^ v32);
      v34 = *(char ***)(v28 + 16 * v33);
      if (v34 == &WebCore::JSCSSTransformValue::s_info)
      {
LABEL_51:
        v36 = *(_QWORD *)(v28 + 16 * v33 + 8);
        if (v36)
          goto LABEL_53;
      }
      else
      {
        v35 = 1;
        while (v34)
        {
          v33 = ((_DWORD)v33 + v35) & v29;
          v34 = *(char ***)(v28 + 16 * v33);
          ++v35;
          if (v34 == &WebCore::JSCSSTransformValue::s_info)
            goto LABEL_51;
        }
      }
    }
    v37 = (WebCore::JSCSSTransformValue *)*((_QWORD *)v26 + 7);
    Prototype = (JSC::JSCell *)WebCore::JSCSSTransformValue::createPrototype(v37, v26, v8.super.isa);
    Structure = WebCore::JSCSSTransformValue::createStructure((uint64_t *)v37, (uint64_t)v26, Prototype);
    v36 = WebCore::cacheDOMStructure((JSCell *)v26, Structure, (uint64_t)&WebCore::JSCSSTransformValue::s_info);
LABEL_53:
    v14 = (JSCell *)WebCore::JSCSSTransformValue::create(v36, v26, (uint64_t *)&v78);
    WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(*((_QWORD *)v26 + 415), (uint64_t)v27, (uint64_t)v14);
    v40 = v78;
    v78 = 0;
    if (v40)
    {
      if (*((_DWORD *)v40 + 2) == 1)
        (*(void (**)(JSC::VM *))(*(_QWORD *)v40 + 16))(v40);
      else
        --*((_DWORD *)v40 + 2);
    }
    goto LABEL_56;
  }
  if (v25 == 1)
  {
    LOBYTE(v78) = (_BYTE)v72;
    v66 = v73;
    v73 = 0;
    v79 = v66;
    if (!*((_QWORD *)v3 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v77, (unsigned __int8 *)&v78);
      v66 = v79;
    }
    v79 = 0;
    if (v66)
    {
      if (*(_DWORD *)v66 == 2)
        WTF::StringImpl::destroy(v66, (WTF::StringImpl *)v7);
      else
        *(_DWORD *)v66 -= 2;
    }
    v14 = 0;
    v3 = v77;
LABEL_56:
    if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
      goto LABEL_100;
    v41 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v41 & 0xFFFE000000000002) != 0
      || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v41)) == 0
      || (v44 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v45 = (JSC::VM *)*((_QWORD *)this + 7),
          FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v43),
          *((_DWORD *)v45 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v45) & 1) != 0)
    {
LABEL_70:
      if (!*((_DWORD *)v77 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v77) & 1) == 0)
        goto LABEL_71;
      goto LABEL_100;
    }
    v49 = *((_QWORD *)FunctionRealm + 412);
    if (v49)
    {
      v50 = *(_DWORD *)(v49 - 8);
      v51 = ((unint64_t)&WebCore::JSCSSTransformValue::s_info
           + ~((_QWORD)&WebCore::JSCSSTransformValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformValue::s_info
                                                                       + ~((_QWORD)&WebCore::JSCSSTransformValue::s_info << 32)) >> 22);
      v52 = 9 * ((v51 + ~(v51 << 13)) ^ ((v51 + ~(v51 << 13)) >> 8));
      v53 = (v52 ^ (v52 >> 15)) + ~((v52 ^ (v52 >> 15)) << 27);
      v54 = v50 & ((v53 >> 31) ^ v53);
      v55 = *(char ***)(v49 + 16 * v54);
      if (v55 == &WebCore::JSCSSTransformValue::s_info)
      {
LABEL_66:
        v46 = *(JSC::JSObject **)(v49 + 16 * v54 + 8);
        if (v46)
        {
LABEL_68:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v44, v46, v47);
          if (!*((_DWORD *)v45 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v45) & 1) == 0)
            JSC::JSObject::setStructure(v14, v45, SubclassStructure);
          goto LABEL_70;
        }
      }
      else
      {
        v56 = 1;
        while (v55)
        {
          v54 = ((_DWORD)v54 + v56) & v50;
          v55 = *(char ***)(v49 + 16 * v54);
          ++v56;
          if (v55 == &WebCore::JSCSSTransformValue::s_info)
            goto LABEL_66;
        }
      }
    }
    v57 = (JSC::JSCell *)WebCore::JSCSSTransformValue::createPrototype(v45, FunctionRealm, v46);
    v58 = WebCore::JSCSSTransformValue::createStructure((uint64_t *)v45, (uint64_t)FunctionRealm, v57);
    v46 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v58, (uint64_t)&WebCore::JSCSSTransformValue::s_info);
    goto LABEL_68;
  }
  v67 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSCSSTransformValue::put(v67, v68, v69, v70, v71);
}

uint64_t WebCore::JSCSSTransformValue::put(uint64_t a1, JSC *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  JSC::VM *v6;
  int v7;
  _BYTE *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  _BOOL4 v16;
  char **v17;
  BOOL v18;
  uint64_t v20;
  char *v21;
  WTF::StringImpl *v22;
  _DWORD *v23;
  int v24;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  WTF::StringImpl *v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned int v36;
  JSC::VM *v37;
  _DWORD *v38;
  WTF::StringImpl *v39;
  JSC::VM *v40;
  WTF::StringImpl *v41;
  int v42;

  if (*(_QWORD *)(a5 + 8) != a1)
    return JSC::JSObject::put();
  v6 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v37 = v6;
  if (!a3)
    return JSC::JSObject::put();
  v7 = *(_DWORD *)(a3 + 16);
  if ((v7 & 0x20) != 0)
    return JSC::JSObject::put();
  v8 = *(_BYTE **)(a3 + 8);
  v9 = *(unsigned int *)(a3 + 4);
  if ((v7 & 4) != 0)
  {
    if (!(_DWORD)v9)
      goto LABEL_57;
    v31 = *v8 - 48;
    if (v31 <= 9 && (v9 < 2 || *v8 != 48))
    {
      v34 = v9 - 1;
      v35 = v8 + 1;
      while (1)
      {
        if (!v34)
        {
          if (v31 == -1)
            v32 = 0;
          else
            v32 = v31 & 0xFFFFFF00;
          if (v31 == -1)
            LODWORD(v9) = 0;
          else
            LODWORD(v9) = v31;
          if (v31 == -1)
            v33 = 0;
          else
            v33 = 0x100000000;
          goto LABEL_54;
        }
        if (v31 > 0x19999999)
          break;
        v36 = *v35 - 48;
        if (v36 > 9)
          break;
        v32 = 0;
        LODWORD(v9) = 0;
        v33 = 0;
        v29 = __CFADD__(v36, 10 * v31);
        v31 = v36 + 10 * v31;
        --v34;
        ++v35;
        if (v29)
          goto LABEL_54;
      }
    }
    v32 = 0;
    LODWORD(v9) = 0;
    goto LABEL_53;
  }
  if ((_DWORD)v9 && (v10 = *(unsigned __int16 *)v8 - 48, v10 <= 9) && (v9 < 2 || *(_WORD *)v8 != 48))
  {
    v26 = (unsigned __int16 *)(v8 + 2);
    v27 = v9 - 1;
    while (v27)
    {
      if (v10 <= 0x19999999)
      {
        v28 = *v26 - 48;
        if (v28 <= 9)
        {
          v29 = __CFADD__(v28, 10 * v10);
          v10 = v28 + 10 * v10;
          ++v26;
          --v27;
          if (!v29)
            continue;
        }
      }
      goto LABEL_9;
    }
    v18 = v10 == -1;
    v13 = v10 & 0xFFFFFF00;
    v12 = v10;
    v11 = 0x100000000;
    if (v18)
    {
      v11 = 0;
      v12 = 0;
      v13 = 0;
    }
  }
  else
  {
LABEL_9:
    v11 = 0;
    v12 = 0;
    v13 = 0;
  }
  v14 = v13 | v12;
  if ((v11 & 0x100000000) == 0)
    return JSC::JSObject::put();
  while (1)
  {
    v40 = v6;
    if ((a4 & 0xFFFE000000000002) != 0)
      goto LABEL_22;
    v15 = *(unsigned int *)(16 * (*(_DWORD *)a4 & 0xFFFFFFFE) + 0x4C);
    v16 = *(_DWORD *)(16 * (*(_DWORD *)a4 & 0xFFFFFFFE) + 0x4C) != 0;
    v17 = (char **)(16 * v15);
    if ((_DWORD)v15)
      v18 = v17 == &WebCore::JSCSSTransformComponent::s_info;
    else
      v18 = 1;
    if (!v18)
    {
      do
      {
        v17 = (char **)v17[2];
        v16 = v17 != 0;
      }
      while (v17 != &WebCore::JSCSSTransformComponent::s_info && v17 != 0);
    }
    if (!v16 || (v20 = *(_QWORD *)(a4 + 24)) == 0)
    {
LABEL_22:
      JSC::throwTypeError();
      return 1;
    }
    v21 = *(char **)(a1 + 24);
    ++*(_DWORD *)(v20 + 8);
    v38 = (_DWORD *)v20;
    WebCore::CSSTransformValue::setItem(v21, v14, (uint64_t *)&v38, (uint64_t)&v40);
    v23 = v38;
    v38 = 0;
    if (v23)
    {
      if (v23[2] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v23 + 32))(v23);
      else
        --v23[2];
    }
    v24 = v42;
    if (!v42)
      goto LABEL_28;
    if (v42 == 1)
      break;
    a1 = std::__throw_bad_variant_access[abi:sn180100]();
LABEL_57:
    v32 = 0;
LABEL_53:
    v33 = 0;
LABEL_54:
    v14 = v9 | v32;
    if ((v33 & 0x100000000) == 0)
      return JSC::JSObject::put();
  }
  LOBYTE(v38) = (_BYTE)v40;
  v30 = v41;
  v41 = 0;
  v39 = v30;
  if (!*((_QWORD *)v6 + 2))
  {
    WebCore::propagateExceptionSlowPath(a2, &v37, (unsigned __int8 *)&v38);
    v30 = v39;
  }
  v39 = 0;
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v22);
    else
      *(_DWORD *)v30 -= 2;
  }
  v24 = v42;
  if (v42 != -1)
LABEL_28:
    ((void (*)(_DWORD **, JSC::VM **))off_1E3249768[v24])(&v38, &v40);
  return 1;
}

uint64_t WebCore::JSCSSTransformValue::putByIndex(uint64_t a1, JSC *a2, unsigned int a3, uint64_t a4)
{
  JSC::VM *v5;
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  char *v12;
  WTF::StringImpl *v13;
  _DWORD *v14;
  int v15;
  uint64_t v16;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  JSC::VM *v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  int v27;

  v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v22 = v5;
  if (a3 == -1)
  {
    JSC::Identifier::from();
    v16 = JSC::ordinarySetSlow();
    v19 = v25;
    v25 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    return v16;
  }
  v25 = v5;
  if ((a4 & 0xFFFE000000000002) != 0)
    goto LABEL_13;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSTransformComponent::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSTransformComponent::s_info && v8 != 0);
  }
  if (!v7 || (v11 = *(_QWORD *)(a4 + 24)) == 0)
  {
LABEL_13:
    JSC::throwTypeError();
    return 1;
  }
  v12 = *(char **)(a1 + 24);
  ++*(_DWORD *)(v11 + 8);
  v23 = (_DWORD *)v11;
  WebCore::CSSTransformValue::setItem(v12, a3, (uint64_t *)&v23, (uint64_t)&v25);
  v14 = v23;
  v23 = 0;
  if (v14)
  {
    if (v14[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v14 + 32))(v14);
    else
      --v14[2];
  }
  v15 = v27;
  if (!v27)
  {
LABEL_19:
    ((void (*)(_DWORD **, WTF::StringImpl **))off_1E3249768[v15])(&v23, &v25);
    return 1;
  }
  if (v27 == 1)
  {
    LOBYTE(v23) = (_BYTE)v25;
    v20 = v26;
    v26 = 0;
    v24 = v20;
    if (!*((_QWORD *)v5 + 2))
    {
      WebCore::propagateExceptionSlowPath(a2, &v22, (unsigned __int8 *)&v23);
      v20 = v24;
    }
    v24 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v13);
      else
        *(_DWORD *)v20 -= 2;
    }
    v15 = v27;
    if (v27 == -1)
      return 1;
    goto LABEL_19;
  }
  v21 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSCSSTransformValue::deleteProperty(v21);
}

uint64_t WebCore::JSCSSTransformValue::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (!*(_BYTE *)(v15 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v13[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (!a3)
    return JSC::JSObject::deleteProperty();
  v16 = *(_DWORD *)(a3 + 16);
  if ((v16 & 0x20) != 0)
    return JSC::JSObject::deleteProperty();
  v17 = *(_WORD **)(a3 + 8);
  v18 = *(unsigned int *)(a3 + 4);
  if ((v16 & 4) == 0)
  {
    if ((_DWORD)v18 && (v19 = (unsigned __int16)*v17 - 48, v19 <= 9) && (v18 < 2 || *v17 != 48))
    {
      v25 = v17 + 1;
      v26 = v18 - 1;
      while (v26)
      {
        if (v19 <= 0x19999999)
        {
          v27 = *v25 - 48;
          if (v27 <= 9)
          {
            v28 = __CFADD__(v27, 10 * v19);
            v19 = v27 + 10 * v19;
            ++v25;
            --v26;
            if (!v28)
              continue;
          }
        }
        goto LABEL_29;
      }
      v7 = v19 == -1;
      v22 = v19 & 0xFFFFFF00;
      v21 = v19;
      v20 = 0x100000000;
      if (v7)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
      }
    }
    else
    {
LABEL_29:
      v20 = 0;
      v21 = 0;
      v22 = 0;
    }
    v23 = v22 | v21;
    if ((v20 & 0x100000000) != 0)
      return *(_DWORD *)(v9 + 52) <= v23;
    return JSC::JSObject::deleteProperty();
  }
  if (!(_DWORD)v18)
  {
    v30 = 0;
    goto LABEL_47;
  }
  v29 = *(unsigned __int8 *)v17 - 48;
  if (v29 > 9 || v18 >= 2 && *(_BYTE *)v17 == 48)
  {
LABEL_46:
    v30 = 0;
    LODWORD(v18) = 0;
LABEL_47:
    v31 = 0;
    goto LABEL_48;
  }
  v32 = v18 - 1;
  v33 = (unsigned __int8 *)v17 + 1;
  while (v32)
  {
    if (v29 > 0x19999999)
      goto LABEL_46;
    v34 = *v33 - 48;
    if (v34 > 9)
      goto LABEL_46;
    v30 = 0;
    LODWORD(v18) = 0;
    v31 = 0;
    v28 = __CFADD__(v34, 10 * v29);
    v29 = v34 + 10 * v29;
    --v32;
    ++v33;
    if (v28)
      goto LABEL_48;
  }
  if (v29 == -1)
    v30 = 0;
  else
    v30 = v29 & 0xFFFFFF00;
  if (v29 == -1)
    LODWORD(v18) = 0;
  else
    LODWORD(v18) = v29;
  if (v29 == -1)
    v31 = 0;
  else
    v31 = 0x100000000;
LABEL_48:
  v23 = v18 | v30;
  if ((v31 & 0x100000000) != 0)
    return *(_DWORD *)(v9 + 52) <= v23;
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSCSSTransformValue::deletePropertyByIndex(WebCore::JSCSSTransformValue *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return *(_DWORD *)(v11 + 52) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return *(_DWORD *)(v11 + 52) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return *(_DWORD *)(v11 + 52) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return *(_DWORD *)(v11 + 52) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return *(_DWORD *)(v11 + 52) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return *(_DWORD *)(v11 + 52) <= a3;
  }
  if (!v15[65])
    return *(_DWORD *)(v11 + 52) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSCSSTransformValue::getOwnPropertySlot(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  JSC::VM *v6;
  int v8;
  _WORD *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  _DWORD *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned int v21;
  BOOL v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  _BYTE *v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unsigned __int16 *v39;
  uint64_t v40;
  unsigned int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  unsigned int v51;
  uint64_t v52;
  unsigned __int8 *v53;
  unsigned int v54;
  unint64_t v55;

  v6 = *(JSC::VM **)(a2 + 56);
  if (a3)
  {
    v8 = *(_DWORD *)(a3 + 16);
    if ((v8 & 0x20) != 0)
      goto LABEL_38;
    v9 = *(_WORD **)(a3 + 8);
    v10 = *(unsigned int *)(a3 + 4);
    if ((v8 & 4) == 0)
    {
      if ((_DWORD)v10 && (v11 = (unsigned __int16)*v9 - 48, v11 <= 9))
      {
        if (v10 < 2 || *v9 != 48)
        {
          v19 = v9 + 1;
          v20 = v10 - 1;
          while (v20)
          {
            if (v11 <= 0x19999999)
            {
              v21 = *v19 - 48;
              if (v21 <= 9)
              {
                v22 = __CFADD__(v21, 10 * v11);
                v11 = v21 + 10 * v11;
                ++v19;
                --v20;
                if (!v22)
                  continue;
              }
            }
            goto LABEL_6;
          }
          v23 = v11 == -1;
          v13 = v11 & 0xFFFFFF00;
          v12 = 0x100000000;
          if (v11 == -1)
          {
            v12 = 0;
            LOBYTE(v11) = 0;
          }
          if (v23)
            v13 = 0;
LABEL_8:
          v11 = v11;
          if ((v12 & 0x100000000) == 0)
            goto LABEL_38;
          goto LABEL_9;
        }
        v12 = 0;
      }
      else
      {
LABEL_6:
        v12 = 0;
        LOBYTE(v11) = 0;
      }
      v13 = 0;
      goto LABEL_8;
    }
    if ((_DWORD)v10)
    {
      v24 = *(unsigned __int8 *)v9 - 48;
      if (v24 <= 9 && (v10 < 2 || *(_BYTE *)v9 != 48))
      {
        v49 = v10 - 1;
        v50 = (unsigned __int8 *)v9 + 1;
        while (v49)
        {
          if (v24 > 0x19999999)
            goto LABEL_35;
          v51 = *v50 - 48;
          if (v51 > 9)
            goto LABEL_35;
          v11 = 0;
          LOBYTE(v10) = 0;
          v25 = 0;
          v22 = __CFADD__(v51, 10 * v24);
          v24 = v51 + 10 * v24;
          --v49;
          ++v50;
          if (v22)
            goto LABEL_37;
        }
        if (v24 == -1)
          v11 = 0;
        else
          v11 = v24 & 0xFFFFFF00;
        if (v24 == -1)
          LOBYTE(v10) = 0;
        else
          LOBYTE(v10) = v24;
        if (v24 == -1)
          v25 = 0;
        else
          v25 = 0x100000000;
LABEL_37:
        v13 = v10;
        if ((v25 & 0x100000000) == 0)
          goto LABEL_38;
LABEL_9:
        v14 = v13 | v11;
        v15 = *(_QWORD *)(a1 + 24);
        if (*(_DWORD *)(v15 + 52) > v14)
        {
          v16 = *(_DWORD **)(*(_QWORD *)(v15 + 40) + 8 * v14);
          if (v16)
          {
            ++v16[2];
            v17 = WebCore::wrap<WebCore::CSSTransformComponent>(a2, *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v16);
            if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
            {
              v18 = 0;
            }
            else
            {
              *(_QWORD *)a4 = v17;
              *(_DWORD *)(a4 + 16) = 0;
              *(_QWORD *)(a4 + 32) = a1;
              v18 = 1;
              *(_BYTE *)(a4 + 49) = 1;
            }
            if (v16[2] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v16 + 32))(v16);
            else
              --v16[2];
            return v18;
          }
        }
LABEL_38:
        if ((a3 >> 4))
        {
          v26 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
          if (((a3 >> 4) & ~*(_DWORD *)(v26 + 0x20)) == 0)
          {
            v27 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), *(JSC::VM **)(a2 + 56));
            if (v27)
            {
              v55 = a3;
              v28 = JSC::PropertyTable::get(v27, (uint64_t *)&v55);
              if ((_DWORD)v28 != -1)
              {
                if ((int)v28 > 63)
                {
                  v35 = *(_QWORD *)(a1 + 8) - 8;
                  v36 = 0x3F00000000 - (v28 << 32);
                }
                else
                {
                  v35 = a1 + 16;
                  v36 = v28 << 32;
                }
                v37 = *(_QWORD *)(v35 + (v36 >> 29));
                if ((v37 & 0xFFFE000000000002) == 0)
                {
                  v38 = *(unsigned __int8 *)(v37 + 5);
                  if (v38 == 6)
                  {
                    v42 = *(_DWORD *)(v26 + 16) & 3;
                    v44 = *(_QWORD *)(v37 + 8);
                    v43 = *(_QWORD *)(v37 + 16);
                    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v37 & 0xFFFFFFFE) + 0x4C))
                    {
                      v46 = *(_QWORD *)(v37 + 24);
                      v45 = *(_QWORD *)(v37 + 32);
                      *(_QWORD *)a4 = v44;
                      *(_QWORD *)(a4 + 8) = v43;
                      *(_DWORD *)(a4 + 16) = HIDWORD(v28);
                      *(_QWORD *)(a4 + 32) = a1;
                      *(_BYTE *)(a4 + 49) = 3;
                      v18 = 1;
                      if (v42 != 2)
                        *(_BYTE *)(a4 + 48) = 1;
                      *(_BYTE *)(a4 + 51) = 1;
                      *(_QWORD *)(a4 + 72) = v46;
                      *(_QWORD *)(a4 + 80) = v45;
                    }
                    else
                    {
                      *(_QWORD *)a4 = v44;
                      *(_QWORD *)(a4 + 8) = v43;
                      *(_DWORD *)(a4 + 16) = HIDWORD(v28);
                      *(_QWORD *)(a4 + 32) = a1;
                      v18 = 1;
                      *(_BYTE *)(a4 + 49) = 3;
                      if (v42 != 2)
                        *(_BYTE *)(a4 + 48) = 1;
                    }
                    return v18;
                  }
                  if (v38 == 5)
                  {
                    JSC::JSObject::fillGetterPropertySlot();
                    return 1;
                  }
                }
                *(_QWORD *)a4 = v37;
                *(_QWORD *)(a4 + 32) = a1;
                *(_DWORD *)(a4 + 16) = HIDWORD(v28);
                *(_DWORD *)(a4 + 20) = v28;
                v18 = 1;
                *(_WORD *)(a4 + 48) = 257;
                return v18;
              }
            }
          }
        }
        if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
          return 1;
        v29 = *(_DWORD *)(a3 + 16);
        if ((v29 & 0x20) == 0)
        {
          v30 = *(_BYTE **)(a3 + 8);
          v31 = *(unsigned int *)(a3 + 4);
          if ((v29 & 4) != 0)
          {
            if (!(_DWORD)v31 || (v47 = *v30 - 48, v47 > 9) || v31 >= 2 && *v30 == 48)
            {
LABEL_84:
              v48 = 0;
            }
            else
            {
              v52 = v31 - 1;
              v53 = v30 + 1;
              while (v52)
              {
                if (v47 > 0x19999999)
                  goto LABEL_84;
                v54 = *v53 - 48;
                if (v54 > 9)
                  goto LABEL_84;
                v48 = 0;
                v22 = __CFADD__(v54, 10 * v47);
                v47 = v54 + 10 * v47;
                --v52;
                ++v53;
                if (v22)
                  goto LABEL_85;
              }
              v48 = 0x100000000;
              if (v47 == -1)
                v48 = 0;
            }
LABEL_85:
            if ((v48 & 0x100000000) == 0)
              return 0;
          }
          else
          {
            if ((_DWORD)v31
              && (v32 = *(unsigned __int16 *)v30 - 48, v32 <= 9)
              && (v31 < 2 || *(_WORD *)v30 != 48))
            {
              v39 = (unsigned __int16 *)(v30 + 2);
              v40 = v31 - 1;
              while (v40)
              {
                if (v32 <= 0x19999999)
                {
                  v41 = *v39 - 48;
                  if (v41 <= 9)
                  {
                    v22 = __CFADD__(v41, 10 * v32);
                    v32 = v41 + 10 * v32;
                    ++v39;
                    --v40;
                    if (!v22)
                      continue;
                  }
                }
                goto LABEL_49;
              }
              v23 = v32 == -1;
              v33 = 0x100000000;
              if (v23)
                v33 = 0;
            }
            else
            {
LABEL_49:
              v33 = 0;
            }
            if ((v33 & 0x100000000) == 0)
              return 0;
          }
          return JSC::JSObject::getOwnPropertySlotByIndex();
        }
        return 0;
      }
LABEL_35:
      v11 = 0;
      LOBYTE(v10) = 0;
    }
    else
    {
      v11 = 0;
    }
    v25 = 0;
    goto LABEL_37;
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) == 0)
    return 0;
  return JSC::JSObject::getOwnStaticPropertySlot();
}

uint64_t WebCore::JSCSSTransformValue::getOwnPropertySlotByIndex(WebCore::JSCSSTransformValue *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  uint64_t v7;
  _DWORD *v8;
  JSC::VM *v9;
  unint64_t v10;
  uint64_t v11;

  if ((_DWORD)a3 == -1)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v7 = *((_QWORD *)this + 3);
  if (*(_DWORD *)(v7 + 52) <= a3)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v8 = *(_DWORD **)(*(_QWORD *)(v7 + 40) + 8 * a3);
  if (!v8)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v9 = (JSC::VM *)*((_QWORD *)a2 + 7);
  ++v8[2];
  v10 = WebCore::wrap<WebCore::CSSTransformComponent>((uint64_t)a2, *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v8);
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
  {
    v11 = 0;
  }
  else
  {
    *(_QWORD *)a4 = v10;
    *(_DWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 32) = this;
    v11 = 1;
    *(_BYTE *)(a4 + 49) = 1;
  }
  if (v8[2] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v8 + 32))(v8);
  else
    --v8[2];
  return v11;
}

uint64_t WebCore::JSCSSTransformValue::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v4;
  int v5;
  uint64_t *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl **v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44[2];
  char v45;
  WTF::StringImpl *v46;

  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 24) + 52);
  if (v4)
  {
    v5 = 0;
    v6 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v8 = v43;
      v46 = v43;
      v9 = *((_DWORD *)v43 + 4);
      if ((v9 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v43 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v10 = *a3;
      v11 = *(unsigned int *)(*a3 + 20);
      if (v11 <= 0x13)
      {
        if ((_DWORD)v11)
        {
          v12 = *(WTF::StringImpl ***)(v10 + 8);
          while (*v12 != v43)
          {
            ++v12;
            if (!--v11)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v9 & 0x20) != 0)
        {
          v33 = *(_DWORD *)v8 + 2;
        }
        else
        {
          if ((v9 & 0x10) != 0)
          {
            *(_DWORD *)v8 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v8 = v44[0];
          }
          v33 = *(_DWORD *)v8;
          *(_DWORD *)v8 += 2;
          if (!v33)
          {
            WTF::StringImpl::destroy(v8, v7);
LABEL_54:
            v34 = (uint64_t *)(v10 + 8);
            v44[0] = v8;
            v35 = *(unsigned int *)(v10 + 20);
            if ((_DWORD)v35 == *(_DWORD *)(v10 + 16))
            {
              v36 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v34, v35 + 1, (unint64_t)v44);
              v35 = *(unsigned int *)(v10 + 20);
              v37 = *(_QWORD *)(v10 + 8);
              v38 = *v36;
              *v36 = 0;
              *(_QWORD *)(v37 + 8 * v35) = v38;
            }
            else
            {
              v39 = *v34;
              v44[0] = 0;
              *(_QWORD *)(v39 + 8 * v35) = v8;
            }
            *(_DWORD *)(v10 + 20) = v35 + 1;
            v40 = v44[0];
            v44[0] = 0;
            if (v40)
            {
              if (*(_DWORD *)v40 == 2)
                WTF::StringImpl::destroy(v40, v7);
              else
                *(_DWORD *)v40 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v8 = v33;
        goto LABEL_54;
      }
      if (!*v6 || !*(_DWORD *)(*v6 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v46, (uint64_t)v44);
      if (v45)
      {
        v8 = v46;
        v10 = *a3;
        v9 = *((_DWORD *)v46 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v41 = v43;
      v43 = 0;
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v7);
        else
          *(_DWORD *)v41 -= 2;
      }
      if (++v5 == v4)
        return JSC::JSObject::getOwnPropertyNames();
    }
    v13 = *(uint64_t **)(v10 + 8);
    v14 = &v13[v11];
    while (1)
    {
      v15 = *v13;
      v16 = *v6;
      if (*v6
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v16 = *v6) != 0))
      {
        v17 = *(_DWORD *)(v16 - 8);
      }
      else
      {
        v17 = 0;
      }
      v18 = (~(v15 << 32) + v15) ^ ((unint64_t)(~(v15 << 32) + v15) >> 22);
      v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
      v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
      v21 = v17 & ((v20 >> 31) ^ v20);
      v22 = (uint64_t *)(v16 + 8 * v21);
      v23 = *v22;
      if (*v22)
      {
        v24 = 0;
        v25 = 1;
        while (v23 != v15)
        {
          if (v23 == -1)
            v24 = v22;
          v21 = (v21 + v25) & v17;
          v22 = (uint64_t *)(v16 + 8 * v21);
          v23 = *v22;
          ++v25;
          if (!*v22)
          {
            if (v24)
            {
              *v24 = 0;
              --*(_DWORD *)(*v6 - 16);
              v22 = v24;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v22 = v15;
      v26 = *v6;
      v27 = *v6 ? *(_DWORD *)(v26 - 12) + 1 : 1;
      *(_DWORD *)(v26 - 12) = v27;
      v28 = *v6;
      v29 = *v6 ? *(_DWORD *)(v28 - 12) : 0;
      v30 = (*(_DWORD *)(v28 - 16) + v29);
      v31 = *(unsigned int *)(v28 - 4);
      if (v31 > 0x400)
        break;
      if (3 * v31 <= 4 * v30)
      {
        if ((_DWORD)v31)
          goto LABEL_43;
        v32 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v13 == v14)
        goto LABEL_17;
    }
    if (v31 > 2 * v30)
      goto LABEL_47;
LABEL_43:
    v32 = (_DWORD)v31 << (6 * *(_DWORD *)(v28 - 12) >= (2 * v31));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v32, v22);
    goto LABEL_47;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSCSSTransformValue::defineOwnProperty(uint64_t a1, JSC *a2, uint64_t a3, JSC::PropertyDescriptor *this, int a5)
{
  JSC::VM *v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  uint64_t v29;
  char *v30;
  WTF::StringImpl *v31;
  _DWORD *v32;
  int v33;
  WTF::StringImpl *v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unsigned int v41;
  __int128 v42;
  __int128 v43;
  JSC::VM *v44;
  _DWORD *v45;
  WTF::StringImpl *v46;

  v9 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v44 = v9;
  if (!a3)
    goto LABEL_58;
  v10 = *(_DWORD *)(a3 + 16);
  if ((v10 & 0x20) != 0)
    goto LABEL_58;
  v11 = *(_BYTE **)(a3 + 8);
  v12 = *(unsigned int *)(a3 + 4);
  if ((v10 & 4) != 0)
  {
    if (!(_DWORD)v12)
      goto LABEL_60;
    v35 = *v11 - 48;
    if (v35 <= 9 && (v12 < 2 || *v11 != 48))
    {
      v39 = v12 - 1;
      v40 = v11 + 1;
      while (1)
      {
        if (!v39)
        {
          if (v35 == -1)
            v36 = 0;
          else
            v36 = v35 & 0xFFFFFF00;
          if (v35 == -1)
            LODWORD(v12) = 0;
          else
            LODWORD(v12) = v35;
          if (v35 == -1)
            v37 = 0;
          else
            v37 = 0x100000000;
          goto LABEL_57;
        }
        if (v35 > 0x19999999)
          break;
        v41 = *v40 - 48;
        if (v41 > 9)
          break;
        v36 = 0;
        LODWORD(v12) = 0;
        v37 = 0;
        v28 = __CFADD__(v41, 10 * v35);
        v35 = v41 + 10 * v35;
        --v39;
        ++v40;
        if (v28)
          goto LABEL_57;
      }
    }
    v36 = 0;
    LODWORD(v12) = 0;
    goto LABEL_56;
  }
  if ((_DWORD)v12 && (v13 = *(unsigned __int16 *)v11 - 48, v13 <= 9) && (v12 < 2 || *(_WORD *)v11 != 48))
  {
    v25 = (unsigned __int16 *)(v11 + 2);
    v26 = v12 - 1;
    while (v26)
    {
      if (v13 <= 0x19999999)
      {
        v27 = *v25 - 48;
        if (v27 <= 9)
        {
          v28 = __CFADD__(v27, 10 * v13);
          v13 = v27 + 10 * v13;
          ++v25;
          --v26;
          if (!v28)
            continue;
        }
      }
      goto LABEL_8;
    }
    v22 = v13 == -1;
    v16 = v13 & 0xFFFFFF00;
    v15 = v13;
    v14 = 0x100000000;
    if (v22)
    {
      v14 = 0;
      v15 = 0;
      v16 = 0;
    }
  }
  else
  {
LABEL_8:
    v14 = 0;
    v15 = 0;
    v16 = 0;
  }
  v17 = v16 | v15;
  if ((v14 & 0x100000000) != 0)
  {
    while ((JSC::PropertyDescriptor::isDataDescriptor(this) & 1) != 0)
    {
      v18 = *(_QWORD *)this;
      *(_QWORD *)&v42 = *((_QWORD *)a2 + 7);
      if ((v18 & 0xFFFE000000000002) != 0)
        goto LABEL_22;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSCSSTransformComponent::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSCSSTransformComponent::s_info && v21 != 0);
      }
      if (!v20 || (v29 = *(_QWORD *)(v18 + 24)) == 0)
      {
LABEL_22:
        JSC::throwTypeError();
        return 1;
      }
      v30 = *(char **)(a1 + 24);
      ++*(_DWORD *)(v29 + 8);
      v45 = (_DWORD *)v29;
      WebCore::CSSTransformValue::setItem(v30, v17, (uint64_t *)&v45, (uint64_t)&v42);
      v32 = v45;
      v45 = 0;
      if (v32)
      {
        if (v32[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v32 + 32))(v32);
        else
          --v32[2];
      }
      v33 = v43;
      if (!(_DWORD)v43)
        goto LABEL_38;
      if ((_DWORD)v43 == 1)
      {
        LOBYTE(v45) = v42;
        v34 = (WTF::StringImpl *)*((_QWORD *)&v42 + 1);
        *((_QWORD *)&v42 + 1) = 0;
        v46 = v34;
        if (!*((_QWORD *)v9 + 2))
        {
          WebCore::propagateExceptionSlowPath(a2, &v44, (unsigned __int8 *)&v45);
          v34 = v46;
        }
        v46 = 0;
        if (v34)
        {
          if (*(_DWORD *)v34 == 2)
            WTF::StringImpl::destroy(v34, v31);
          else
            *(_DWORD *)v34 -= 2;
        }
        v33 = v43;
        if ((_DWORD)v43 != -1)
LABEL_38:
          ((void (*)(_DWORD **, __int128 *))off_1E3249768[v33])(&v45, &v42);
        return 1;
      }
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_60:
      v36 = 0;
LABEL_56:
      v37 = 0;
LABEL_57:
      v17 = v12 | v36;
      if ((v37 & 0x100000000) == 0)
        goto LABEL_58;
    }
    if (a5)
      JSC::throwTypeError();
    return 0;
  }
  else
  {
LABEL_58:
    v38 = *((_OWORD *)this + 1);
    v42 = *(_OWORD *)this;
    v43 = v38;
    return JSC::JSObject::defineOwnProperty();
  }
}

uint64_t WebCore::JSCSSTransformValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSTransformValue::createPrototype(WebCore::JSCSSTransformValue *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSStyleValue::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSStyleValue::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSStyleValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSStyleValuePrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSStyleValue::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSStyleValue::s_info);
  }
  v18 = WebCore::JSCSSTransformValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSTransformValuePrototype::create(this, a2, v18, v19);
}

