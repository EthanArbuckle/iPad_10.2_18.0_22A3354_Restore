unint64_t WebCore::jsHTMLIFrameElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLIFrameElementPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLIFrameElement>,(WebCore::DOMConstructorID)540>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLIFrameElement_src(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  char v23;
  char v24;
  char **v25;
  char *v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::srcAttr, a3, a4, a5);
  v9 = &v22;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v22);
  if ((v23 & 2) == 0)
  {
    v9 = &v22;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v22))
    {
      v21 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v21 != -1)
      {
        v26 = &v24;
        v25 = &v26;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (v11)
    *(_DWORD *)v11 += 2;
  v12 = v22;
  v22 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v13 = *(_QWORD *)(a1 + 56);
  v14 = (uint64_t *)(v13 + 41968);
  if (!v11)
    return *v14;
  v15 = *((_DWORD *)v11 + 1);
  if (v15)
  {
    if (v15 != 1)
    {
LABEL_12:
      v16 = *(_QWORD *)(v13 + 64760);
      if (!v16 || v11 != *(WTF::StringImpl **)(v16 + 8))
        v16 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_15;
    }
    v18 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
    if ((*((_BYTE *)v11 + 16) & 4) != 0)
    {
      v19 = *v18;
    }
    else
    {
      v20 = *(unsigned __int16 *)v18;
      if (v20 > 0xFF)
        goto LABEL_12;
      v19 = v20;
    }
    v16 = *(_QWORD *)(v13 + 8 * v19 + 42216);
  }
  else
  {
    v16 = *v14;
  }
LABEL_15:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(v11, v10);
  else
    *(_DWORD *)v11 -= 2;
  return v16;
}

BOOL WebCore::setJSHTMLIFrameElement_src(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v7;
  int v8;
  _BOOL8 v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v8 = v22;
  v9 = v22 == 0;
  if (!v22)
  {
    v10 = v21;
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v7 + 13);
    if (v11
      && ((v12 = *(_DWORD *)(v11 + 4), (v12 & 1) != 0)
        ? (v13 = *(uint64_t **)(v11 + 40), v14 = *(_DWORD *)(v11 + 52))
        : (v13 = (uint64_t *)(v11 + 32), v14 = v12 >> 5),
          v14))
    {
      v15 = 0;
      while (1)
      {
        v16 = *v13;
        if (*v13 == WebCore::HTMLNames::srcAttr
          || *(_QWORD *)(v16 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 24)
          && *(_QWORD *)(v16 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 32))
        {
          break;
        }
        ++v15;
        v13 += 2;
        if (v14 == v15)
          goto LABEL_17;
      }
    }
    else
    {
LABEL_17:
      v15 = 0xFFFFFFFFLL;
    }
    WebCore::Element::setAttributeInternal(v7, v15, (WebCore::TreeScope *)&WebCore::HTMLNames::srcAttr, &v23, 0);
    v18 = v23;
    v23 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    v8 = v22;
  }
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v8])(&v23, &v21);
  return v9;
}

uint64_t WebCore::jsHTMLIFrameElement_srcdoc(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;

  v2 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 104);
  if (!v2)
    goto LABEL_12;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) == 0)
  {
    v4 = v2 + 32;
    LODWORD(v5) = v3 >> 5;
    if ((_DWORD)v5)
      goto LABEL_4;
LABEL_12:
    v6 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v4 = *(_QWORD *)(v2 + 40);
  LODWORD(v5) = *(_DWORD *)(v2 + 52);
  if (!(_DWORD)v5)
    goto LABEL_12;
LABEL_4:
  v5 = v5;
  v6 = (uint64_t *)(v4 + 8);
  while (1)
  {
    v7 = *(v6 - 1);
    if (v7 == WebCore::HTMLNames::srcdocAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcdocAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcdocAttr + 32))
    {
      break;
    }
    v6 += 2;
    if (!--v5)
    {
      v6 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v8 = *v6;
  if (!*v6)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v9 = *(_DWORD *)v8;
  v10 = *(_DWORD *)(v8 + 4);
  *(_DWORD *)v8 += 2;
  v11 = *(_QWORD *)(a1 + 56);
  if (v10)
  {
    if (v10 != 1)
    {
LABEL_16:
      v12 = *(_QWORD *)(v11 + 64760);
      if (!v12 || v8 != *(_QWORD *)(v12 + 8))
      {
        v12 = JSC::jsStringWithCacheSlowCase();
        v9 = *(_DWORD *)v8 - 2;
      }
      goto LABEL_19;
    }
    v14 = *(unsigned __int8 **)(v8 + 8);
    if ((*(_BYTE *)(v8 + 16) & 4) != 0)
    {
      v15 = *v14;
    }
    else
    {
      v16 = *(unsigned __int16 *)v14;
      if (v16 > 0xFF)
        goto LABEL_16;
      v15 = v16;
    }
    v12 = *(_QWORD *)(v11 + 8 * v15 + 42216);
  }
  else
  {
    v12 = *(_QWORD *)(v11 + 41968);
  }
LABEL_19:
  if (v9)
    *(_DWORD *)v8 = v9;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v8, a2);
  return v12;
}

BOOL WebCore::setJSHTMLIFrameElement_srcdoc(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WTF::StringImpl *v10;
  int v11;
  _BOOL8 v12;
  int v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  char v21;
  _BYTE v22[8];
  WTF::StringImpl *v23;
  char v24;
  _BYTE v25[8];
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLIFrameElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedHTML>,WebCore::IDLDOMString>>::convert((JSC::VM **)a1, (unint64_t)this, (uint64_t)v25);
  v11 = v28;
  v12 = v28 == 0;
  if (!v28)
  {
    v22[0] = 0;
    LODWORD(v23) = -1;
    v13 = v27;
    if (v27 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E32A0F90[v27])(&v19, v22, &v26);
      LODWORD(v23) = v13;
    }
    WebCore::HTMLIFrameElement::setSrcdoc(v10, (uint64_t)v22, (uint64_t)&v19);
    if ((_DWORD)v23 != -1)
      ((void (*)(char *, _BYTE *))off_1E32A0F80[v23])(&v24, v22);
    if (v21)
    {
      v15 = (WTF::StringImpl *)v19;
      v22[0] = v19;
      v16 = v20;
      v20 = 0;
      v23 = v16;
      if (!*((_QWORD *)v4 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v19, (JSC::JSGlobalObject *)&v23);
        JSC::VM::throwException(v4, a1, v17);
        v16 = v23;
      }
      v23 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
      if (v21)
      {
        v18 = v20;
        v20 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v15);
          else
            *(_DWORD *)v18 -= 2;
        }
      }
    }
    v11 = v28;
  }
  if (v11 != -1)
    ((void (*)(int *, uint64_t *))off_1E32A0FA0[v11])(&v19, &v26);
  return v12;
}

uint64_t WebCore::jsHTMLIFrameElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLIFrameElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLIFrameElement_sandbox(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WTF *)WebCore::HTMLIFrameElement::sandbox(*(WebCore::HTMLIFrameElement **)(a2 + 24));
  return WebCore::wrap<WebCore::DOMTokenList>(a1, v3, v4);
}

BOOL WebCore::setJSHTMLIFrameElement_sandbox(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLIFrameElement::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

uint64_t WebCore::jsHTMLIFrameElement_allow(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::allowAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::allowAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::allowAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLIFrameElement_allow(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::allowAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::allowAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::allowAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::allowAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLIFrameElement_allowFullscreen(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::allowfullscreenAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::allowfullscreenAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::allowfullscreenAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLIFrameElement_allowFullscreen(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLIFrameElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::allowfullscreenAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLIFrameElement_width(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::widthAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLIFrameElement_width(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::widthAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::widthAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLIFrameElement_height(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::heightAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLIFrameElement_height(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::heightAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::heightAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLIFrameElement_referrerPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLIFrameElement::referrerPolicyForBindings(*(int **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLIFrameElement_referrerPolicy(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::referrerpolicyAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::referrerpolicyAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::referrerpolicyAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::referrerpolicyAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLIFrameElement_loading(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)WebCore::HTMLIFrameElement::loadingForBindings(*(WebCore::HTMLIFrameElement **)(a2 + 24));
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSHTMLIFrameElement_loading(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::loadingAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::loadingAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::loadingAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::loadingAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLIFrameElement_contentDocument(WebCore::DOMWrapperWorld **a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  JSC::JSGlobalObject *v8;
  WebCore::Document *v9;
  uint64_t v10;
  void *v11;
  WebCore::Node *v12;
  WebCore::Node *v13;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 112);
  if (!v2)
    return 2;
  v5 = *(_QWORD *)(v2 + 8);
  if (!v5)
    return 2;
  if (*(_BYTE *)(v5 + 144))
    return 2;
  v6 = *(_QWORD *)(v5 + 296);
  if (!v6)
    return 2;
  v8 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (!WebCore::canAccessDocument((uint64_t)a1, *(WTF::StringImpl **)(*(_QWORD *)(v6 + 40) + 8), 1))
    return 2;
  v10 = WebCore::cachedDocumentWrapper(a1, v8, (WebCore::JSDOMGlobalObject *)v6, v9);
  if (v10)
    return v10;
  *(_DWORD *)(v6 + 24) += 2;
  v13 = (WebCore::Node *)v6;
  v3 = WebCore::toJSNewlyCreated((uint64_t)a1, v8, &v13);
  v12 = v13;
  v13 = 0;
  if (v12)
  {
    if (*((_DWORD *)v12 + 6) == 2)
    {
      if ((*((_WORD *)v12 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v12, v11);
    }
    else
    {
      *((_DWORD *)v12 + 6) -= 2;
    }
  }
  return v3;
}

uint64_t WebCore::jsHTMLIFrameElement_contentWindow(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  WebCore::WindowProxy *v4;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 112);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(v2 + 8);
  if (!v3)
    return 2;
  v4 = *(WebCore::WindowProxy **)(v3 + 112);
  if (!v4)
    return 2;
  result = (uint64_t)WebCore::WindowProxy::jsWindowProxy(v4, *(WebCore::DOMWrapperWorld **)(a1 + 3320));
  if (!result)
    return 2;
  return result;
}

uint64_t WebCore::jsHTMLIFrameElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLIFrameElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLIFrameElement_scrolling(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::scrollingAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::scrollingAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::scrollingAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLIFrameElement_scrolling(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::scrollingAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::scrollingAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::scrollingAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::scrollingAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLIFrameElement_frameBorder(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::frameborderAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::frameborderAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::frameborderAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLIFrameElement_frameBorder(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::frameborderAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::frameborderAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::frameborderAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::frameborderAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLIFrameElement_longDesc(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  char v23;
  char v24;
  char **v25;
  char *v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::longdescAttr, a3, a4, a5);
  v9 = &v22;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v22);
  if ((v23 & 2) == 0)
  {
    v9 = &v22;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v22))
    {
      v21 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v21 != -1)
      {
        v26 = &v24;
        v25 = &v26;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (v11)
    *(_DWORD *)v11 += 2;
  v12 = v22;
  v22 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v13 = *(_QWORD *)(a1 + 56);
  v14 = (uint64_t *)(v13 + 41968);
  if (!v11)
    return *v14;
  v15 = *((_DWORD *)v11 + 1);
  if (v15)
  {
    if (v15 != 1)
    {
LABEL_12:
      v16 = *(_QWORD *)(v13 + 64760);
      if (!v16 || v11 != *(WTF::StringImpl **)(v16 + 8))
        v16 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_15;
    }
    v18 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
    if ((*((_BYTE *)v11 + 16) & 4) != 0)
    {
      v19 = *v18;
    }
    else
    {
      v20 = *(unsigned __int16 *)v18;
      if (v20 > 0xFF)
        goto LABEL_12;
      v19 = v20;
    }
    v16 = *(_QWORD *)(v13 + 8 * v19 + 42216);
  }
  else
  {
    v16 = *v14;
  }
LABEL_15:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(v11, v10);
  else
    *(_DWORD *)v11 -= 2;
  return v16;
}

BOOL WebCore::setJSHTMLIFrameElement_longDesc(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::longdescAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::longdescAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::longdescAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::longdescAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLIFrameElement_marginHeight(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::marginheightAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::marginheightAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::marginheightAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLIFrameElement_marginHeight(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::marginheightAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::marginheightAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::marginheightAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::marginheightAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLIFrameElement_marginWidth(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::marginwidthAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::marginwidthAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::marginwidthAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLIFrameElement_marginWidth(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLIFrameElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::marginwidthAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::marginwidthAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::marginwidthAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::marginwidthAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::JSHTMLImageElement::prototype(WebCore::JSHTMLImageElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  return *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLImageElement>(this, a2) + 48);
}

BOOL WebCore::JSDOMLegacyFactoryFunction<WebCore::JSHTMLImageElement>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSHTMLImageElement>((WebCore::JSHTMLElement *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

uint64_t WebCore::JSHTMLImageElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLImageElement::JSHTMLImageElement(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t WebCore::JSHTMLImageElement::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_DWORD *)(v2 + 24) += 2;
  *a2 = v2;
  return this;
}

unint64_t WebCore::JSHTMLImageElement::createPrototype(WebCore::JSHTMLImageElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  Structure = WebCore::JSHTMLImageElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSHTMLImageElementPrototype::create(this, Structure, v7, v8);
}

uint64_t WebCore::JSHTMLImageElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLImageElementPrototype::create(WebCore::JSHTMLImageElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  JSC::Structure *v23;
  int v24;
  WTF::StringImpl *v26;
  int v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  int v30;
  WTF::StringImpl *v31;
  unint64_t v32;
  WTF::StringImpl *v33[6];
  int v34;
  int v35;
  JSC::Structure *v36;
  int v37;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v32);
    *((_QWORD *)this + 4865) = SlowCase + (int)v32;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<29u>(this, (uint64_t)&WebCore::JSHTMLImageElement::s_info, (uint64_t)&WebCore::JSHTMLImageElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C26E30);
  }
  v10 = (int *)((char *)this + 93124);
  v11 = v9 - 192;
  if (!v9)
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 680) + 680);
  v13 = (v12 & 0x2000000000000) == 0;
  if ((v12 & 0x2000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v26 = v33[0];
    v27 = *v10;
    *v10 = 1;
    LODWORD(v33[0]) = -1;
    WORD2(v33[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v27;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v28);
      else
        *(_DWORD *)v26 -= 2;
    }
  }
  v14 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v14 && *(_BYTE *)(v14 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C26E50);
  }
  v15 = v14 - 192;
  if (!v14)
    v15 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v15 + 680) + 672) & 0x8000000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v29 = v33[0];
    v30 = *v10;
    v13 = 1;
    *v10 = 1;
    LODWORD(v33[0]) = -1;
    WORD2(v33[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v30;
    if (v29)
    {
      if (*(_DWORD *)v29 == 2)
        WTF::StringImpl::destroy(v29, v31);
      else
        *(_DWORD *)v29 -= 2;
    }
  }
  {
    if (byte_1ECE90A59)
    {
      if (!v13)
        goto LABEL_22;
      goto LABEL_20;
    }
  }
  else
  {
    WebCore::DeprecatedGlobalSettings::shared(void)::deprecatedGlobalSettings = 0u;
    *(_OWORD *)&byte_1ECE90A50 = 0u;
    qword_1ECE90A60 = 0;
    LOBYTE(WebCore::DeprecatedGlobalSettings::shared(void)::deprecatedGlobalSettings) = 1;
    *((_QWORD *)&WebCore::DeprecatedGlobalSettings::shared(void)::deprecatedGlobalSettings + 1) = 0;
    *(_QWORD *)((char *)&WebCore::DeprecatedGlobalSettings::shared(void)::deprecatedGlobalSettings + 14) = 0;
    byte_1ECE90A56 = 1;
    *(_DWORD *)&algn_1ECE90A57 = 0;
    unk_1ECE90A5B = 0;
    byte_1ECE90A5D = 1;
    byte_1ECE90A5F = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v16 = v33[0];
  v17 = *v10;
  *v10 = 1;
  LODWORD(v33[0]) = -1;
  WORD2(v33[0]) = 1;
  JSC::JSObject::deleteProperty();
  *v10 = v17;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v18);
    else
      *(_DWORD *)v16 -= 2;
  }
LABEL_20:
  if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
LABEL_22:
  v19 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v21 = JSC::JSString::create((uint64_t)this, v33);
  v22 = v33[0];
  v33[0] = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v20);
    else
      *(_DWORD *)v22 -= 2;
  }
  v23 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v37 = *(_DWORD *)SlowCase;
  v36 = v23;
  v24 = JSC::Structure::outOfLineCapacity(v23);
  v34 = 0;
  v35 = v24;
  v33[0] = (WTF::StringImpl *)&v35;
  v33[1] = (WTF::StringImpl *)SlowCase;
  v33[2] = this;
  v33[3] = (WTF::StringImpl *)&v37;
  v33[4] = (WTF::StringImpl *)&v36;
  v33[5] = (WTF::StringImpl *)&v34;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v23, this, v19, 6, (uint64_t)v33);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v34, v21);
  *((_DWORD *)v23 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLImageElement>,(WebCore::DOMConstructorID)541>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4328);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLImageElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLImageElement::s_info + ~((_QWORD)&WebCore::JSHTMLImageElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLImageElement::s_info + ~((_QWORD)&WebCore::JSHTMLImageElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLImageElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLImageElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLImageElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLImageElementPrototype::create((WebCore::JSHTMLImageElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLImageElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLImageElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4328) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMLegacyFactoryFunction<WebCore::JSHTMLImageElement>,(WebCore::DOMConstructorID)542>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t v5;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4336);
  if (!result)
  {
    v5 = JSC::Structure::create((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMLegacyFactoryFunction<WebCore::JSHTMLImageElement>::create(a1, v5, (JSC::VM *)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4336) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsHTMLImageElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLImageElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLImageElement>,(WebCore::DOMConstructorID)541>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLImageElement_alt(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::altAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::altAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::altAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLImageElement_alt(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v7;
  int v8;
  _BOOL8 v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v8 = v22;
  v9 = v22 == 0;
  if (!v22)
  {
    v10 = v21;
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v7 + 13);
    if (v11
      && ((v12 = *(_DWORD *)(v11 + 4), (v12 & 1) != 0)
        ? (v13 = *(uint64_t **)(v11 + 40), v14 = *(_DWORD *)(v11 + 52))
        : (v13 = (uint64_t *)(v11 + 32), v14 = v12 >> 5),
          v14))
    {
      v15 = 0;
      while (1)
      {
        v16 = *v13;
        if (*v13 == WebCore::HTMLNames::altAttr
          || *(_QWORD *)(v16 + 24) == *(_QWORD *)(WebCore::HTMLNames::altAttr + 24)
          && *(_QWORD *)(v16 + 32) == *(_QWORD *)(WebCore::HTMLNames::altAttr + 32))
        {
          break;
        }
        ++v15;
        v13 += 2;
        if (v14 == v15)
          goto LABEL_17;
      }
    }
    else
    {
LABEL_17:
      v15 = 0xFFFFFFFFLL;
    }
    WebCore::Element::setAttributeInternal(v7, v15, (WebCore::TreeScope *)&WebCore::HTMLNames::altAttr, &v23, 0);
    v18 = v23;
    v23 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    v8 = v22;
  }
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v8])(&v23, &v21);
  return v9;
}

BOOL WebCore::setJSHTMLImageElement_src(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v7;
  int v8;
  _BOOL8 v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v8 = v22;
  v9 = v22 == 0;
  if (!v22)
  {
    v10 = v21;
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v7 + 13);
    if (v11
      && ((v12 = *(_DWORD *)(v11 + 4), (v12 & 1) != 0)
        ? (v13 = *(uint64_t **)(v11 + 40), v14 = *(_DWORD *)(v11 + 52))
        : (v13 = (uint64_t *)(v11 + 32), v14 = v12 >> 5),
          v14))
    {
      v15 = 0;
      while (1)
      {
        v16 = *v13;
        if (*v13 == WebCore::HTMLNames::srcAttr
          || *(_QWORD *)(v16 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 24)
          && *(_QWORD *)(v16 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 32))
        {
          break;
        }
        ++v15;
        v13 += 2;
        if (v14 == v15)
          goto LABEL_17;
      }
    }
    else
    {
LABEL_17:
      v15 = 0xFFFFFFFFLL;
    }
    WebCore::Element::setAttributeInternal(v7, v15, (WebCore::TreeScope *)&WebCore::HTMLNames::srcAttr, &v23, 0);
    v18 = v23;
    v23 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    v8 = v22;
  }
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v8])(&v23, &v21);
  return v9;
}

uint64_t WebCore::jsHTMLImageElement_srcset(uint64_t a1, uint64_t a2, __n128 a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14;

  WebCore::Element::getAttributeForBindings(*(_QWORD *)(a2 + 24), (unsigned __int8 *)&WebCore::HTMLNames::srcsetAttr, 1, a5, &v14, a3);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v14;
  if (!v14 || (v8 = *((_DWORD *)v14 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_7:
    v14 = 0;
    if (!v7)
      return v9;
    goto LABEL_16;
  }
  if (v8 != 1)
    goto LABEL_4;
  v10 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
  if ((*((_BYTE *)v14 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_14:
    v9 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_15;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_14;
  }
LABEL_4:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v14 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v14;
    goto LABEL_7;
  }
LABEL_15:
  v14 = 0;
LABEL_16:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
  return v9;
}

BOOL WebCore::setJSHTMLImageElement_srcset(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::srcsetAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcsetAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcsetAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::srcsetAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLImageElement_sizes(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::sizesAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::sizesAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::sizesAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLImageElement_sizes(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::sizesAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::sizesAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::sizesAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::sizesAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLImageElement_crossOrigin(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  WebCore::HTMLImageElement::crossOrigin(*(_QWORD **)(a2 + 24), &v12);
  v3 = v12;
  if (!v12)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = *((_DWORD *)v12 + 1);
  if (!v6)
    goto LABEL_14;
  if (v6 == 1)
  {
    v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
    if ((*((_BYTE *)v12 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v5 = (uint64_t *)(v4 + 8 * v9 + 42216);
LABEL_14:
    v7 = *v5;
    goto LABEL_15;
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v3 = v12;
    v12 = 0;
    if (!v3)
      return v7;
    goto LABEL_16;
  }
LABEL_15:
  v12 = 0;
LABEL_16:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v7;
}

BOOL WebCore::setJSHTMLImageElement_crossOrigin(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if ((this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
    v22 = 0;
LABEL_18:
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_31;
LABEL_24:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::crossoriginAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::crossoriginAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::crossoriginAttr + 32))
          {
            goto LABEL_32;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_31;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_24;
    }
LABEL_31:
    v16 = 0xFFFFFFFFLL;
LABEL_32:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::crossoriginAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v9 = v22;
    goto LABEL_36;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v9 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v9;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v9 = v22;
  }
  if (!v9)
  {
    v10 = v21;
    goto LABEL_18;
  }
  v15 = 0;
LABEL_36:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLImageElement_useMap(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::usemapAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLImageElement_useMap(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::usemapAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::usemapAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLImageElement_isMap(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::ismapAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::ismapAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::ismapAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLImageElement_isMap(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLImageElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLImageElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::ismapAttr, v12, a4);
  return 1;
}

unint64_t WebCore::jsHTMLImageElement_width(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = WebCore::HTMLImageElement::width(*(WebCore::HTMLImageElement **)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLImageElement_width(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v7;
  _BOOL8 v8;
  __n128 v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  int v14;
  int v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  char v19;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v14);
  v8 = v15 == 0;
  if (!v15)
  {
    WTF::AtomString::number((WTF::AtomString *)(v14 & ~(v14 >> 31)));
    WebCore::Element::setAttribute(v7, (const WebCore::QualifiedName *)&WebCore::HTMLNames::widthAttr, &v16, 0, &v17, v9);
    if (v19 && v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v10);
      else
        *(_DWORD *)v18 -= 2;
    }
    v11 = v16;
    v16 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
  }
  return v8;
}

unint64_t WebCore::jsHTMLImageElement_height(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = WebCore::HTMLImageElement::height(*(WebCore::HTMLImageElement **)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLImageElement_height(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v7;
  _BOOL8 v8;
  __n128 v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  int v14;
  int v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  char v19;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v14);
  v8 = v15 == 0;
  if (!v15)
  {
    WTF::AtomString::number((WTF::AtomString *)(v14 & ~(v14 >> 31)));
    WebCore::Element::setAttribute(v7, (const WebCore::QualifiedName *)&WebCore::HTMLNames::heightAttr, &v16, 0, &v17, v9);
    if (v19 && v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v10);
      else
        *(_DWORD *)v18 -= 2;
    }
    v11 = v16;
    v16 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
  }
  return v8;
}

unint64_t WebCore::jsHTMLImageElement_naturalHeight(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = WebCore::HTMLImageElement::naturalHeight(*(WebCore::HTMLImageElement **)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

unint64_t WebCore::jsHTMLImageElement_naturalWidth(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = WebCore::HTMLImageElement::naturalWidth(*(WebCore::HTMLImageElement **)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::jsHTMLImageElement_complete(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 176) + 128) & 8) != 0)
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsHTMLImageElement_currentSrc(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(WTF::StringImpl **)(v3 + 240);
  if (v4)
    goto LABEL_2;
  v4 = *(WTF::StringImpl **)(v3 + 200);
  if (!v4 || !*((_DWORD *)v4 + 1))
  {
    v5 = *(_QWORD *)(a1 + 56);
    return *(_QWORD *)(v5 + 41968);
  }
  if ((*((_BYTE *)v4 + 16) & 0x10) != 0)
  {
    *(_DWORD *)v4 += 2;
    *(_QWORD *)(v3 + 240) = v4;
LABEL_2:
    v5 = *(_QWORD *)(a1 + 56);
    goto LABEL_3;
  }
  WTF::AtomStringImpl::addSlowCase(*(WTF::AtomStringImpl **)(v3 + 200), v4);
  v4 = v12;
  v11 = *(WTF::StringImpl **)(v3 + 240);
  *(_QWORD *)(v3 + 240) = v12;
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
    {
      WTF::StringImpl::destroy(v11, v12);
      v4 = *(WTF::StringImpl **)(v3 + 240);
    }
    else
    {
      *(_DWORD *)v11 -= 2;
    }
  }
  v5 = *(_QWORD *)(a1 + 56);
  if (!v4)
    return *(_QWORD *)(v5 + 41968);
LABEL_3:
  v6 = *((_DWORD *)v4 + 1);
  if (!v6)
    return *(_QWORD *)(v5 + 41968);
  if (v6 == 1)
  {
    v9 = (unsigned __int8 *)*((_QWORD *)v4 + 1);
    if ((*((_BYTE *)v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_5;
      v10 = v10;
    }
    return *(_QWORD *)(v5 + 8 * v10 + 42216);
  }
LABEL_5:
  v7 = *(_QWORD *)(v5 + 64760);
  if (!v7 || v4 != *(WTF::StringImpl **)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

uint64_t WebCore::jsHTMLImageElement_referrerPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLAnchorElement::referrerPolicyForBindings(*(WebCore::HTMLAnchorElement **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLImageElement_referrerPolicy(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::referrerpolicyAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::referrerpolicyAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::referrerpolicyAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::referrerpolicyAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLImageElement_decoding(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  v3 = WebCore::HTMLImageElement::decodingMode(*(WebCore::HTMLImageElement **)(a2 + 24));
  if (v3 == 1 || v3 == 2)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v4 = (uint64_t)v12;
  }
  else
  {
    v4 = WebCore::autoAtomData;
    if (WebCore::autoAtomData)
      *(_DWORD *)WebCore::autoAtomData += 2;
    v12 = (WTF::StringImpl *)v4;
  }
  v5 = *(_QWORD *)(a1 + 56);
  if (!v4 || (v6 = *(_DWORD *)(v4 + 4)) == 0)
  {
    v7 = *(_QWORD *)(v5 + 41968);
LABEL_13:
    if (!v4)
      return v7;
    goto LABEL_21;
  }
  if (v6 != 1)
    goto LABEL_10;
  v8 = *(unsigned __int8 **)(v4 + 8);
  if ((*(_BYTE *)(v4 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_20:
    v7 = *(_QWORD *)(v5 + 8 * v9 + 42216);
    goto LABEL_21;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_20;
  }
LABEL_10:
  v7 = *(_QWORD *)(v5 + 64760);
  if (!v7 || v4 != *(_QWORD *)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v4 = (uint64_t)v12;
    goto LABEL_13;
  }
LABEL_21:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, (WTF::StringImpl *)v4);
  else
    *(_DWORD *)v4 -= 2;
  return v7;
}

BOOL WebCore::setJSHTMLImageElement_decoding(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::decodingAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::decodingAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::decodingAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::decodingAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLImageElement_loading(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)WebCore::HTMLImageElement::loadingForBindings(*(WebCore::HTMLImageElement **)(a2 + 24));
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSHTMLImageElement_loading(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::loadingAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::loadingAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::loadingAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::loadingAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLImageElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLImageElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLImageElement_lowsrc(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  char v23;
  char v24;
  char **v25;
  char *v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::lowsrcAttr, a3, a4, a5);
  v9 = &v22;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v22);
  if ((v23 & 2) == 0)
  {
    v9 = &v22;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v22))
    {
      v21 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v21 != -1)
      {
        v26 = &v24;
        v25 = &v26;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (v11)
    *(_DWORD *)v11 += 2;
  v12 = v22;
  v22 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v13 = *(_QWORD *)(a1 + 56);
  v14 = (uint64_t *)(v13 + 41968);
  if (!v11)
    return *v14;
  v15 = *((_DWORD *)v11 + 1);
  if (v15)
  {
    if (v15 != 1)
    {
LABEL_12:
      v16 = *(_QWORD *)(v13 + 64760);
      if (!v16 || v11 != *(WTF::StringImpl **)(v16 + 8))
        v16 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_15;
    }
    v18 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
    if ((*((_BYTE *)v11 + 16) & 4) != 0)
    {
      v19 = *v18;
    }
    else
    {
      v20 = *(unsigned __int16 *)v18;
      if (v20 > 0xFF)
        goto LABEL_12;
      v19 = v20;
    }
    v16 = *(_QWORD *)(v13 + 8 * v19 + 42216);
  }
  else
  {
    v16 = *v14;
  }
LABEL_15:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(v11, v10);
  else
    *(_DWORD *)v11 -= 2;
  return v16;
}

BOOL WebCore::setJSHTMLImageElement_lowsrc(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::lowsrcAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::lowsrcAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::lowsrcAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::lowsrcAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLImageElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLImageElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLImageElement_hspace(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::hspaceAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    v8 = 0;
  else
    v8 = v10 & ~((int)v10 >> 31);
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLImageElement_hspace(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  __n128 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v14;
  int v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  char v19;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v14);
  v9 = v15 == 0;
  if (!v15)
  {
    WTF::AtomString::number((WTF::AtomString *)(v14 & ~(v14 >> 31)));
    WebCore::Element::setAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::hspaceAttr, &v16, 0, &v17, v10);
    if (v19 && v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v11);
      else
        *(_DWORD *)v18 -= 2;
    }
    v12 = v16;
    v16 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v11);
      else
        *(_DWORD *)v12 -= 2;
    }
  }
  return v9;
}

unint64_t WebCore::jsHTMLImageElement_vspace(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::vspaceAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    v8 = 0;
  else
    v8 = v10 & ~((int)v10 >> 31);
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLImageElement_vspace(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  __n128 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v14;
  int v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  char v19;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v14);
  v9 = v15 == 0;
  if (!v15)
  {
    WTF::AtomString::number((WTF::AtomString *)(v14 & ~(v14 >> 31)));
    WebCore::Element::setAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::vspaceAttr, &v16, 0, &v17, v10);
    if (v19 && v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v11);
      else
        *(_DWORD *)v18 -= 2;
    }
    v12 = v16;
    v16 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v11);
      else
        *(_DWORD *)v12 -= 2;
    }
  }
  return v9;
}

uint64_t WebCore::jsHTMLImageElement_longDesc(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  char v23;
  char v24;
  char **v25;
  char *v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::longdescAttr, a3, a4, a5);
  v9 = &v22;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v22);
  if ((v23 & 2) == 0)
  {
    v9 = &v22;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v22))
    {
      v21 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v21 != -1)
      {
        v26 = &v24;
        v25 = &v26;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (v11)
    *(_DWORD *)v11 += 2;
  v12 = v22;
  v22 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v13 = *(_QWORD *)(a1 + 56);
  v14 = (uint64_t *)(v13 + 41968);
  if (!v11)
    return *v14;
  v15 = *((_DWORD *)v11 + 1);
  if (v15)
  {
    if (v15 != 1)
    {
LABEL_12:
      v16 = *(_QWORD *)(v13 + 64760);
      if (!v16 || v11 != *(WTF::StringImpl **)(v16 + 8))
        v16 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_15;
    }
    v18 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
    if ((*((_BYTE *)v11 + 16) & 4) != 0)
    {
      v19 = *v18;
    }
    else
    {
      v20 = *(unsigned __int16 *)v18;
      if (v20 > 0xFF)
        goto LABEL_12;
      v19 = v20;
    }
    v16 = *(_QWORD *)(v13 + 8 * v19 + 42216);
  }
  else
  {
    v16 = *v14;
  }
LABEL_15:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(v11, v10);
  else
    *(_DWORD *)v11 -= 2;
  return v16;
}

BOOL WebCore::setJSHTMLImageElement_longDesc(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::longdescAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::longdescAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::longdescAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::longdescAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLImageElement_border(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::borderAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLImageElement_border(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::borderAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::borderAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLImageElement_fetchPriority(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLImageElement::fetchPriorityForBindings(*(_QWORD *)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLImageElement_fetchPriority(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLImageElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLImageElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::fetchpriorityAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::fetchpriorityAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::fetchpriorityAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::fetchpriorityAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLImageElement_attachmentIdentifier(uint64_t a1, uint64_t a2)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = WebCore::AttachmentAssociatedElement::attachmentIdentifier((WebCore::AttachmentAssociatedElement *)(*(_QWORD *)(a2 + 24) + 112));
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)v3;
  if (!*(_QWORD *)v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

unint64_t WebCore::jsHTMLImageElement_x(uint64_t a1, uint64_t a2)
{
  return WebCore::HTMLImageElement::x(*(WebCore::HTMLImageElement **)(a2 + 24)) | 0xFFFE000000000000;
}

unint64_t WebCore::jsHTMLImageElement_y(uint64_t a1, uint64_t a2)
{
  return WebCore::HTMLImageElement::y(*(WebCore::HTMLImageElement **)(a2 + 24)) | 0xFFFE000000000000;
}

uint64_t WebCore::JSHTMLImageElementOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v10 = v9[20];
  if (!v10)
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  v11 = *(_QWORD *)(v10 + 8);
  if (!v11 || *(_BYTE *)(v11 + 180) || !v9[21] && !(*(unsigned int (**)(_QWORD *))(v9[19] + 64))(v9 + 19))
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  if (a5)
  {
    *a5 = "ActiveDOMObject with pending activity";
    a5[1] = 38;
  }
  return 1;
}

unsigned int *WebCore::JSHTMLImageElementOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned int *result;
  int v4;
  unsigned int *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  int v25;
  unsigned int *v26;

  result = *(unsigned int **)(*(_QWORD *)a2 + 24);
  v4 = result[6];
  result[6] = v4 + 2;
  v5 = result + 2;
  if (!result)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v8 = *(_QWORD *)(a3 + 32);
    v6 = (uint64_t *)(a3 + 32);
    v7 = v8;
    if (v8)
    {
      v9 = *(_DWORD *)(v7 - 8);
      v10 = ((unint64_t)result + ~((_QWORD)result << 32)) ^ (((unint64_t)result + ~((_QWORD)result << 32)) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(unsigned int **)(v7 + 16 * v13);
      if (v14 != result)
      {
        v25 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v25) & v9;
          v14 = *(unsigned int **)(v7 + 16 * v13);
          ++v25;
          if (v14 == result)
            goto LABEL_13;
        }
        v13 = *(unsigned int *)(v7 - 4);
      }
LABEL_13:
      if (v13 != *(_DWORD *)(v7 - 4))
      {
        v15 = (_QWORD *)(v7 + 16 * v13);
        *v15 = -1;
        v18 = v15[1];
        v17 = v15 + 1;
        v16 = v18;
        if (v18)
        {
          *(_QWORD *)(v16 + 8) = 3;
          *v17 = 0;
        }
        ++*(_DWORD *)(*v6 - 16);
        v19 = *v6;
        if (*v6)
          v20 = *(_DWORD *)(v19 - 12) - 1;
        else
          v20 = -1;
        *(_DWORD *)(v19 - 12) = v20;
        v21 = *v6;
        if (*v6)
        {
          v22 = 6 * *(_DWORD *)(v21 - 12);
          v23 = *(_DWORD *)(v21 - 4);
          if (v22 < v23 && v23 >= 9)
          {
            v26 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v23 >> 1, 0);
            result = v26;
          }
        }
      }
    }
    v4 = result[6] - 2;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (v4)
  {
    result[6] = v4;
  }
  else if ((*((_WORD *)result + 15) & 0x400) == 0)
  {
    return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
  }
  return result;
}

unint64_t WebCore::toJSNewlyCreated(JSC::VM *a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t result;

  if (**(uint64_t (****)(WebCore::Node *__hidden))a2 == off_1E33BF560)
    return WebCore::createWrapper<WebCore::HTMLImageElement,WebCore::HTMLImageElement>(a1, a2, a3);
  result = 1196;
  __break(0xC471u);
  return result;
}

{
  unint64_t result;

  if (**(uint64_t (****)(WebCore::XMLHttpRequest *__hidden))a2 == &off_1E3483B78)
    return WebCore::createWrapper<WebCore::XMLHttpRequest,WebCore::XMLHttpRequest>(a1, a2, a3);
  result = 853;
  __break(0xC471u);
  return result;
}

unint64_t WebCore::createWrapper<WebCore::HTMLImageElement,WebCore::HTMLImageElement>(JSC::VM *a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  WebCore::JSHTMLImageElement *v21;
  _QWORD *v22;
  unint64_t SlowCase;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *Allocator;
  uint64_t v30;
  int v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;

  v5 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSHTMLImageElement::s_info + ~((_QWORD)&WebCore::JSHTMLImageElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLImageElement::s_info + ~((_QWORD)&WebCore::JSHTMLImageElement::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSHTMLImageElement::s_info)
    {
LABEL_3:
      v13 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v13)
        goto LABEL_5;
    }
    else
    {
      v32 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v32) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v32;
        if (v12 == &WebCore::JSHTMLImageElement::s_info)
          goto LABEL_3;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLImageElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLImageElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLImageElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLImageElement::s_info);
LABEL_5:
  v21 = (WebCore::JSHTMLImageElement *)*((_QWORD *)a1 + 7);
  v22 = (_QWORD *)WebCore::JSHTMLImageElement::subspaceForImpl(v21, a2);
  SlowCase = v22[3];
  if (SlowCase < v22[4])
  {
LABEL_6:
    v22[3] = SlowCase + 48;
    goto LABEL_7;
  }
  SlowCase = v22[5];
  if ((SlowCase & 1) == 0)
  {
    v36 = *(_QWORD *)(SlowCase + 8) ^ v22[6];
    v22[4] = SlowCase + HIDWORD(v36);
    v22[5] = SlowCase + (int)v36;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  v24 = *(_QWORD *)a2;
  *(_QWORD *)a2 = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v24;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v21 + 755))
    __dmb(0xAu);
  v25 = *((_QWORD *)a1 + 415);
  if ((byte_1ECE81480 & 1) == 0)
  {
    qword_1ECE81478 = (uint64_t)&off_1E32997C0;
    byte_1ECE81480 = 1;
  }
  if (v5)
    v26 = (uint64_t *)(v5 + 8);
  else
    v26 = 0;
  if (!*(_DWORD *)(v25 + 48))
  {
    if ((SlowCase & 8) != 0)
      v27 = (SlowCase - 112) | 1;
    else
      v27 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v27 & 1) != 0)
      v28 = v27 + 47;
    else
      v28 = *(_QWORD *)v27 + 32;
    Allocator = *(_QWORD **)(v28 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v28 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1ECE81478;
    Allocator[2] = v25;
    v30 = *v26;
    *v26 = (uint64_t)Allocator;
    if (!v30)
      return SlowCase;
LABEL_36:
    *(_QWORD *)(v30 + 8) = 3;
    return SlowCase;
  }
  v38 = v5;
  if ((SlowCase & 8) != 0)
    v33 = (SlowCase - 112) | 1;
  else
    v33 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v33 & 1) != 0)
    v34 = v33 + 47;
  else
    v34 = *(_QWORD *)v33 + 32;
  v35 = *(_QWORD **)(v34 + 16);
  if (!v35)
    v35 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v34 + 16) = *v35;
  *v35 = SlowCase;
  v35[1] = &qword_1ECE81478;
  v35[2] = v25;
  v37 = v35;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v25 + 32), &v38, (uint64_t *)&v37);
  v30 = (uint64_t)v37;
  if (v37)
    goto LABEL_36;
  return SlowCase;
}

unint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::HTMLImageElement *a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  WebCore::JSDOMGlobalObject *v15;
  int v16;
  WebCore::Node *v17;

  v4 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v4 + 48))
  {
    v9 = *(_QWORD *)(v4 + 32);
    if (v9)
    {
      v10 = *(_DWORD *)(v9 - 8);
      v11 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(WebCore::JSDOMGlobalObject **)(v9 + 16 * v14);
      if (v15 == a3)
      {
LABEL_14:
        v5 = *(_QWORD *)(v9 + 16 * v14 + 8);
        if (v5)
          goto LABEL_3;
      }
      else
      {
        v16 = 1;
        while (v15)
        {
          v14 = ((_DWORD)v14 + v16) & v10;
          v15 = *(WebCore::JSDOMGlobalObject **)(v9 + 16 * v14);
          ++v16;
          if (v15 == a3)
            goto LABEL_14;
        }
      }
    }
  }
  else
  {
    v5 = *((_QWORD *)a3 + 1);
    if (v5)
    {
LABEL_3:
      if ((*(_BYTE *)(v5 + 8) & 3) == 0)
      {
        v6 = *(_QWORD *)v5;
        if (*(_QWORD *)v5)
          return v6;
      }
    }
  }
  *((_DWORD *)a3 + 6) += 2;
  v17 = a3;
  v6 = WebCore::toJSNewlyCreated(a2, (JSC::VM *)&v17, a3);
  if (v17)
  {
    if (*((_DWORD *)v17 + 6) == 2)
    {
      if ((*((_WORD *)v17 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v17, v7);
    }
    else
    {
      *((_DWORD *)v17 + 6) -= 2;
    }
  }
  return v6;
}

uint64_t WebCore::JSHTMLImageElement::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSHTMLImageElement::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSHTMLImageElement::s_info && v4 != 0);
  }
  if (!v3)
    return 0;
  else
    return *(_QWORD *)(a2 + 24);
}

uint64_t WebCore::JSHTMLInputElement::prototype(WebCore::JSHTMLInputElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  return *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLInputElement>(this, a2, a3) + 48);
}

uint64_t WebCore::JSHTMLInputElementPrototype::finishCreation(WebCore::JSHTMLInputElementPrototype *this, JSC::VM *a2)
{
  int *v4;
  char *v5;
  uint64_t i;
  char *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  int v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  WTF::StringImpl *v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  JSC::Structure *v43;
  int v44;
  uint64_t result;
  WTF::StringImpl *v46;
  int v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  int v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  int v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  int v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  int v59;
  WTF::StringImpl *v60;
  WTF::StringImpl *v61;
  int v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64[6];
  int v65;
  int v66;
  JSC::Structure *v67;
  int v68;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  v4 = (int *)((char *)a2 + 93124);
  v5 = (char *)a2 + 41952;
  if ((*(_BYTE *)((16 * *(unsigned int *)this) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary(this, a2);
  for (i = 0; i != 320; i += 5)
  {
    v7 = (&WebCore::JSHTMLInputElementPrototypeTableValues)[i + 1];
    if (v7)
    {
      if (v7 == (char *)2)
        JSC::SmallStrings::singleCharacterStringRep((JSC::VM *)((char *)a2 + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v8 = v64[0];
      JSC::reifyStaticProperty(a2, (uint64_t)&WebCore::JSHTMLInputElement::s_info, (unint64_t *)v64, (uint64_t)&(&WebCore::JSHTMLInputElementPrototypeTableValues)[i], (unsigned __int8 *)this);
      if (v8)
      {
        if (*(_DWORD *)v8 == 2)
          WTF::StringImpl::destroy(v8, v9);
        else
          *(_DWORD *)v8 -= 2;
      }
    }
  }
  v10 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v10 && *(_BYTE *)(v10 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C2B920);
  }
  v11 = v10 - 192;
  if (!v10)
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 680) + 680);
  v13 = (v12 & 0x20000000) == 0;
  if ((v12 & 0x20000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v46 = v64[0];
    v47 = *v4;
    *v4 = 1;
    LODWORD(v64[0]) = -1;
    WORD2(v64[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v4 = v47;
    if (v46)
    {
      if (*(_DWORD *)v46 == 2)
        WTF::StringImpl::destroy(v46, v48);
      else
        *(_DWORD *)v46 -= 2;
    }
  }
  v14 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v14 && *(_BYTE *)(v14 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C2B940);
  }
  v15 = v14 - 192;
  if (!v14)
    v15 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v15 + 680) + 696) & 0x1000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v49 = v64[0];
    v50 = *v4;
    v13 = 1;
    *v4 = 1;
    LODWORD(v64[0]) = -1;
    WORD2(v64[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v4 = v50;
    if (v49)
    {
      if (*(_DWORD *)v49 == 2)
        WTF::StringImpl::destroy(v49, v51);
      else
        *(_DWORD *)v49 -= 2;
    }
  }
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v16 && *(_BYTE *)(v16 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C2B960);
  }
  v17 = v16 - 192;
  if (!v16)
    v17 = 0;
  if ((*(_DWORD *)(*(_QWORD *)(v17 + 680) + 696) & 1) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v18 = v64[0];
    v19 = *v4;
    v13 = 1;
    *v4 = 1;
    LODWORD(v64[0]) = -1;
    WORD2(v64[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v4 = v19;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v20);
      else
        *(_DWORD *)v18 -= 2;
    }
  }
  v21 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v21 && *(_BYTE *)(v21 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C2B980);
  }
  v22 = v21 - 192;
  if (!v21)
    v22 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v22 + 680) + 672) & 0x2000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v52 = v64[0];
    v53 = *v4;
    v13 = 1;
    *v4 = 1;
    LODWORD(v64[0]) = -1;
    WORD2(v64[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v4 = v53;
    if (v52)
    {
      if (*(_DWORD *)v52 == 2)
        WTF::StringImpl::destroy(v52, v54);
      else
        *(_DWORD *)v52 -= 2;
    }
  }
  v23 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v23 && *(_BYTE *)(v23 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C2B9A0);
  }
  v24 = v23 - 192;
  if (!v23)
    v24 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v24 + 680) + 672) & 0x2000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v55 = v64[0];
    v56 = *v4;
    v13 = 1;
    *v4 = 1;
    LODWORD(v64[0]) = -1;
    WORD2(v64[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v4 = v56;
    if (v55)
    {
      if (*(_DWORD *)v55 == 2)
        WTF::StringImpl::destroy(v55, v57);
      else
        *(_DWORD *)v55 -= 2;
    }
  }
  v25 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v25 && *(_BYTE *)(v25 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C2B9C0);
  }
  v26 = v25 - 192;
  if (!v25)
    v26 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v26 + 680) + 680) & 0x80000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v27 = v64[0];
    v28 = *v4;
    v13 = 1;
    *v4 = 1;
    LODWORD(v64[0]) = -1;
    WORD2(v64[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v4 = v28;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v29);
      else
        *(_DWORD *)v27 -= 2;
    }
  }
  v30 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v30 && *(_BYTE *)(v30 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C2B9E0);
  }
  v31 = v30 - 192;
  if (!v30)
    v31 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v31 + 680) + 680) & 0x80000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v32 = v64[0];
    v33 = *v4;
    v13 = 1;
    *v4 = 1;
    LODWORD(v64[0]) = -1;
    WORD2(v64[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v4 = v33;
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, v34);
      else
        *(_DWORD *)v32 -= 2;
    }
  }
  v35 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v35 && *(_BYTE *)(v35 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C2BA00);
  }
  v36 = v35 - 192;
  if (!v35)
    v36 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v36 + 680) + 688) & 0x20000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v58 = v64[0];
    v59 = *v4;
    v13 = 1;
    *v4 = 1;
    LODWORD(v64[0]) = -1;
    WORD2(v64[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v4 = v59;
    if (v58)
    {
      if (*(_DWORD *)v58 == 2)
        WTF::StringImpl::destroy(v58, v60);
      else
        *(_DWORD *)v58 -= 2;
    }
  }
  v37 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v37 && *(_BYTE *)(v37 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C2BA20);
  }
  v38 = v37 - 192;
  if (!v37)
    v38 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v38 + 680) + 688) & 0x20000000) != 0)
  {
    if (!v13)
      goto LABEL_72;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v61 = v64[0];
    v62 = *v4;
    *v4 = 1;
    LODWORD(v64[0]) = -1;
    WORD2(v64[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v4 = v62;
    if (v61)
    {
      if (*(_DWORD *)v61 == 2)
        WTF::StringImpl::destroy(v61, v63);
      else
        *(_DWORD *)v61 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), a2, this);
LABEL_72:
  v39 = *(_QWORD *)(*(_QWORD *)v5 + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v41 = JSC::JSString::create((uint64_t)a2, v64);
  v42 = v64[0];
  v64[0] = 0;
  if (v42)
  {
    if (*(_DWORD *)v42 == 2)
      WTF::StringImpl::destroy(v42, v40);
    else
      *(_DWORD *)v42 -= 2;
  }
  v43 = (JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE));
  v68 = *(_DWORD *)this;
  v67 = v43;
  v44 = JSC::Structure::outOfLineCapacity(v43);
  v65 = 0;
  v66 = v44;
  v64[0] = (WTF::StringImpl *)&v66;
  v64[1] = this;
  v64[2] = a2;
  v64[3] = (WTF::StringImpl *)&v68;
  v64[4] = (WTF::StringImpl *)&v67;
  v64[5] = (WTF::StringImpl *)&v65;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v43, a2, v39, 6, (uint64_t)v64);
  if ((*(_BYTE *)((16 * *(unsigned int *)this) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  result = JSC::JSObject::putDirectOffset((uint64_t)this, (uint64_t)a2, v65, v41);
  *((_DWORD *)v43 + 4) |= 0x10u;
  return result;
}

uint64_t WebCore::JSHTMLInputElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLInputElement::visitChildren(WebCore::JSHTMLInputElement *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;
  _QWORD v10[2];
  _QWORD *v11;
  char v12;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    v10[0] = a2;
    v10[1] = this;
    v12 = 0;
    v11 = v7;
    *((_QWORD *)a2 + 11) = v10;
    result = WebCore::JSNode::visitChildren(this, a2, a3);
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v10[0] + 88) = v11;
    if ((*((_QWORD *)this + 5) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

_QWORD *WebCore::JSHTMLInputElement::JSHTMLInputElement(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  _QWORD *result;

  v4 = *a4;
  *a4 = 0;
  result = (_QWORD *)WebCore::JSDOMObject::JSDOMObject(a1, a2);
  result[4] = 0;
  result[5] = 0;
  result[3] = v4;
  return result;
}

{
  uint64_t v4;
  _QWORD *result;

  v4 = *a4;
  *a4 = 0;
  result = (_QWORD *)WebCore::JSDOMObject::JSDOMObject(a1, a2);
  result[4] = 0;
  result[5] = 0;
  result[3] = v4;
  return result;
}

uint64_t WebCore::JSHTMLInputElement::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_DWORD *)(v2 + 24) += 2;
  *a2 = v2;
  return this;
}

unint64_t WebCore::JSHTMLInputElement::createPrototype(WebCore::JSHTMLInputElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  Structure = WebCore::JSHTMLInputElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSHTMLInputElementPrototype::create(this, Structure, v7, v8);
}

uint64_t WebCore::JSHTMLInputElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLInputElementPrototype::create(WebCore::JSHTMLInputElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  uint64_t *v4;
  unint64_t v5;
  int v6;
  unint64_t v8;
  JSC::VM *v10;
  uint64_t SlowCase;

  v4 = (uint64_t *)this;
  v5 = *((_QWORD *)this + 4863);
  if (v5 >= *((_QWORD *)this + 4864))
  {
    v5 = *((_QWORD *)this + 4865);
    if ((v5 & 1) != 0)
    {
      v10 = (JSC::VM *)a2;
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      a2 = (unint64_t)v10;
      v4 = (uint64_t *)this;
      v5 = SlowCase;
      goto LABEL_3;
    }
    v8 = *(_QWORD *)(v5 + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = v5 + HIDWORD(v8);
    *((_QWORD *)this + 4865) = v5 + (int)v8;
  }
  *((_QWORD *)this + 4863) = v5 + 16;
LABEL_3:
  *(_DWORD *)v5 = 0;
  v6 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v5 = a2 >> 4;
  *(_DWORD *)(v5 + 4) = v6;
  *(_QWORD *)(v5 + 8) = 0;
  WebCore::JSHTMLInputElementPrototype::finishCreation(v4, (WebCore::JSHTMLInputElementPrototype *)v5, (JSC::VM *)v4);
  return v5;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLInputElement>,(WebCore::DOMConstructorID)543>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  unint64_t v17;
  WebCore::JSDOMGlobalObject *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4344);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v8 = v7;
  LODWORD(v22) = 67099;
  if ((v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v20);
    v6[2] = SlowCase + (int)v20;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v8, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLInputElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v6[165];
  v2 = v11[2846];
  if (v2 >= v11[2847])
  {
    v2 = v11[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_12;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v21);
    v11[2848] = v2 + (int)v21;
  }
  v11[2846] = v2 + 48;
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v6[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v22);
  v15 = v22;
  v22 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v6[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v22);
  v17 = *(_QWORD *)(v6[227] + 2160);
  v19 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLInputElement>((WebCore::JSElement *)a1, (JSC::VM *)a2, v18)
                  + 48);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v19, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4344) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLInputElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLInputElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLInputElement>,(WebCore::DOMConstructorID)543>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLInputElement_accept(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::acceptAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::acceptAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::acceptAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_accept(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::acceptAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::acceptAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::acceptAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::acceptAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_alt(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::altAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::altAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::altAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_alt(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::altAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::altAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::altAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::altAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_autocomplete(uint64_t a1, const WebCore::HTMLFormControlElement *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  WTF::StringImpl *v14;
  uint64_t v15;

  WebCore::AutofillData::createFromHTMLFormControlElement(*((_QWORD **)a2 + 3), a2, (uint64_t)&v14);
  v4 = v14;
  v5 = v15;
  v14 = 0;
  v15 = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, v3);
    else
      *(_DWORD *)v4 -= 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = (uint64_t *)(v6 + 41968);
  if (!v5)
    return *v7;
  v8 = *(_DWORD *)(v5 + 4);
  if (v8)
  {
    if (v8 != 1)
    {
LABEL_7:
      v9 = *(_QWORD *)(v6 + 64760);
      if (!v9 || v5 != *(_QWORD *)(v9 + 8))
        v9 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_10;
    }
    v11 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_7;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v6 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *v7;
  }
LABEL_10:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, v3);
  else
    *(_DWORD *)v5 -= 2;
  return v9;
}

BOOL WebCore::IDLAttribute<WebCore::JSHTMLInputElement>::set<&WebCore::setJSHTMLInputElement_autocompleteSetter,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLInputElement *>(a2);
  if (v5)
    return WebCore::setJSHTMLInputElement_autocompleteSetter(a1, *(WebCore::Element **)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsHTMLInputElement_defaultChecked(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::checkedAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::checkedAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::checkedAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLInputElement_defaultChecked(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl **v10;
  double v11;
  int v12;
  JSC::VM *v15;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WTF::StringImpl ***)(a2 + 24);
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = a3 != 0;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      a4.n128_u64[0] = a3 - 0x2000000000000;
      v12 = v11 > 0.0 || v11 < 0.0;
    }
    else if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
    }
    else
    {
      v15 = v5;
      v12 = JSC::JSCell::toBoolean(a3, a1);
      v5 = v15;
    }
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v10, (const WebCore::QualifiedName *)&WebCore::HTMLNames::checkedAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_checked(uint64_t a1, uint64_t a2)
{
  if ((*(_WORD *)(*(_QWORD *)(a2 + 24) + 230) & 1) != 0)
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsHTMLInputElement_dirName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::dirnameAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::dirnameAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::dirnameAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_dirName(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::dirnameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::dirnameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::dirnameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::dirnameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_disabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
  }
  if (!(_DWORD)v5)
    return 6;
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::disabledAttr)
      break;
    if (*(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 32))
    {
      return 7;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLInputElement_disabled(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl **v10;
  double v11;
  int v12;
  JSC::VM *v15;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WTF::StringImpl ***)(a2 + 24);
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = a3 != 0;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      a4.n128_u64[0] = a3 - 0x2000000000000;
      v12 = v11 > 0.0 || v11 < 0.0;
    }
    else if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
    }
    else
    {
      v15 = v5;
      v12 = JSC::JSCell::toBoolean(a3, a1);
      v5 = v15;
    }
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v10, (const WebCore::QualifiedName *)&WebCore::HTMLNames::disabledAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_form(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  uint64_t v4;
  WebCore::JSDOMGlobalObject *v6;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 120);
  if (v4 && (v6 = *(WebCore::JSDOMGlobalObject **)(v4 + 8)) != 0)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v6, a4);
  else
    return 2;
}

unint64_t WebCore::jsHTMLInputElement_files(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WTF *v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 240);
  if (*(_DWORD *)(v2 + 12) == 64 && (v4 = *(WTF **)(v2 + 72)) != 0)
    return WebCore::wrap<WebCore::FileList>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v4);
  else
    return 2;
}

uint64_t WebCore::setJSHTMLInputElement_files(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  _DWORD *v9;
  unsigned int *v10;
  uint64_t v12;
  _BOOL4 v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  _DWORD **v18;
  uint64_t v19;
  _DWORD *v20;
  WTF *v21;
  _DWORD *v22;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v9 = 0;
  }
  else
  {
    v22 = *(_DWORD **)(a1 + 56);
    if ((a3 & 0xFFFE000000000002) != 0)
      goto LABEL_31;
    v12 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
    v13 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
    v14 = (char **)(16 * v12);
    if ((_DWORD)v12)
      v15 = v14 == &WebCore::JSFileList::s_info;
    else
      v15 = 1;
    if (!v15)
    {
      do
      {
        v14 = (char **)v14[2];
        v13 = v14 != 0;
      }
      while (v14 != &WebCore::JSFileList::s_info && v14 != 0);
    }
    if (!v13 || (v9 = *(_DWORD **)(a3 + 24)) == 0)
    {
LABEL_31:
      WebCore::throwAttributeTypeError(a1, (int)&v22, "HTMLInputElement", 17, "files", 6, "FileList", 9);
      return 0;
    }
    ++v9[2];
  }
  v22 = v9;
  v10 = *(unsigned int **)(v8 + 240);
  if (v10[3] == 64)
  {
    WebCore::FileInputType::setFiles(v10, (uint64_t *)&v22, (const WTF::StringImpl *)1, 1);
    v9 = v22;
  }
  v22 = 0;
  if (v9)
  {
    if (v9[2] == 1)
    {
      v17 = v9[7];
      if ((_DWORD)v17)
      {
        v18 = (_DWORD **)*((_QWORD *)v9 + 2);
        v19 = 8 * v17;
        do
        {
          v20 = *v18;
          *v18 = 0;
          if (v20)
          {
            if (v20[4] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v20 + 8))(v20);
            else
              --v20[4];
          }
          ++v18;
          v19 -= 8;
        }
        while (v19);
      }
      v21 = (WTF *)*((_QWORD *)v9 + 2);
      if (v21)
      {
        *((_QWORD *)v9 + 2) = 0;
        v9[6] = 0;
        WTF::fastFree(v21, (void *)a2);
      }
      if (*(_QWORD *)v9)
      {
        *(_QWORD *)(*(_QWORD *)v9 + 8) = 3;
        *(_QWORD *)v9 = 0;
      }
      bmalloc::api::isoDeallocate((bmalloc::api *)v9, (void *)a2);
    }
    else
    {
      --v9[2];
    }
  }
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_formAction(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v13;

  WebCore::HTMLFormControlElement::formAction(*(WTF::StringImpl **)(a2 + 24), &v13);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = v13;
  if (!v13)
    return *v5;
  v7 = *((_DWORD *)v13 + 1);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_4:
      v8 = *(_QWORD *)(v4 + 64760);
      if (!v8 || v13 != *(WTF::StringImpl **)(v8 + 8))
        v8 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v10 = (unsigned __int8 *)*((_QWORD *)v13 + 1);
    if ((*((_BYTE *)v13 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_4;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v4 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v5;
  }
LABEL_7:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v3);
  else
    *(_DWORD *)v6 -= 2;
  return v8;
}

BOOL WebCore::setJSHTMLInputElement_formAction(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::formactionAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::formactionAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::formactionAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::formactionAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_formEnctype(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v16;
  WTF::StringImpl *v17;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::formenctypeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::formenctypeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::formenctypeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  if (*v7)
  {
    WebCore::FormSubmission::Attributes::parseEncodingType(v7, (uint64_t *)&v17);
    v9 = v17;
  }
  else
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v9 += 2;
    v17 = v9;
  }
  v10 = *(_QWORD *)(a1 + 56);
  if (!v9 || (v11 = *((_DWORD *)v9 + 1)) == 0)
  {
    v12 = *(_QWORD *)(v10 + 41968);
LABEL_24:
    v17 = 0;
    if (!v9)
      return v12;
    goto LABEL_31;
  }
  if (v11 != 1)
    goto LABEL_21;
  v13 = (unsigned __int8 *)*((_QWORD *)v9 + 1);
  if ((*((_BYTE *)v9 + 16) & 4) != 0)
  {
    v14 = *v13;
LABEL_29:
    v12 = *(_QWORD *)(v10 + 8 * v14 + 42216);
    goto LABEL_30;
  }
  v16 = *(unsigned __int16 *)v13;
  if (v16 <= 0xFF)
  {
    v14 = v16;
    goto LABEL_29;
  }
LABEL_21:
  v12 = *(_QWORD *)(v10 + 64760);
  if (!v12 || v9 != *(WTF::StringImpl **)(v12 + 8))
  {
    v12 = JSC::jsStringWithCacheSlowCase();
    v9 = v17;
    goto LABEL_24;
  }
LABEL_30:
  v17 = 0;
LABEL_31:
  if (*(_DWORD *)v9 == 2)
    WTF::StringImpl::destroy(v9, v9);
  else
    *(_DWORD *)v9 -= 2;
  return v12;
}

BOOL WebCore::setJSHTMLInputElement_formEnctype(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::formenctypeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::formenctypeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::formenctypeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::formenctypeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_formMethod(uint64_t a1, WebCore::HTMLFormControlElement **a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v13;

  WebCore::HTMLFormControlElement::formMethod(a2[3], (const WTF::String *)a2, &v13);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = v13;
  if (!v13)
    return *v5;
  v7 = *((_DWORD *)v13 + 1);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_4:
      v8 = *(_QWORD *)(v4 + 64760);
      if (!v8 || v13 != *(WTF::StringImpl **)(v8 + 8))
        v8 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v10 = (unsigned __int8 *)*((_QWORD *)v13 + 1);
    if ((*((_BYTE *)v13 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_4;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v4 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v5;
  }
LABEL_7:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v3);
  else
    *(_DWORD *)v6 -= 2;
  return v8;
}

BOOL WebCore::setJSHTMLInputElement_formMethod(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::formmethodAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::formmethodAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::formmethodAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::formmethodAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_formNoValidate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::formnovalidateAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::formnovalidateAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::formnovalidateAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLInputElement_formNoValidate(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::formnovalidateAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_formTarget(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::formtargetAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::formtargetAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::formtargetAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_formTarget(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::formtargetAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::formtargetAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::formtargetAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::formtargetAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLInputElement_height(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a2 + 24) + 240) + 872))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 240));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLInputElement_height(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::heightAttr, v11);
  return v9;
}

uint64_t WebCore::jsHTMLInputElement_indeterminate(uint64_t a1, uint64_t a2)
{
  if ((*(_WORD *)(*(_QWORD *)(a2 + 24) + 230) & 8) != 0)
    return 7;
  else
    return 6;
}

uint64_t WebCore::setJSHTMLInputElement_indeterminate(uint64_t a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  double v10;
  _BOOL8 v11;
  unsigned __int8 *v12;
  BOOL v14;
  int v15;
  uint64_t v16;
  int *v17;
  int v18;

  v4 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLInputElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLInputElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v14 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v10 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v11 = a3 == 7;
      goto LABEL_16;
    }
    v15 = *(unsigned __int8 *)(a3 + 5);
    if (v15 == 3)
    {
      v18 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v15 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v11 = 1;
          goto LABEL_16;
        }
        v14 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v16 = *(_QWORD *)(a3 + 8);
      if ((v16 & 1) != 0)
        v17 = (int *)(a3 + 16);
      else
        v17 = (int *)(v16 + 4);
      v18 = *v17;
    }
    v14 = v18 == 0;
LABEL_37:
    v11 = !v14;
    goto LABEL_16;
  }
  v11 = v10 > 0.0 || v10 < 0.0;
LABEL_16:
  v12 = *(unsigned __int8 **)(a2 + 24);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  WebCore::HTMLInputElement::setIndeterminate(v12, (void *)v11);
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_list(WebCore *a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::HTMLElement *v4;
  uint64_t result;
  WebCore *v6;
  WebCore::JSDOMGlobalObject *v7;
  void *v8;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLInputElement::dataList(*(_QWORD *)(a2 + 24), &v10);
  if (!v10)
    return 2;
  v6 = a1;
  v7 = v10;
  result = WebCore::toJS(v6, v3, v10, v4);
  if (*((_DWORD *)v7 + 6) == 2)
  {
    v9 = result;
    if ((*((_WORD *)v7 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v7, v8);
    return v9;
  }
  else
  {
    *((_DWORD *)v7 + 6) -= 2;
  }
  return result;
}

uint64_t WebCore::jsHTMLInputElement_max(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::maxAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::maxAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::maxAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_max(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v7;
  int v8;
  _BOOL8 v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v8 = v22;
  v9 = v22 == 0;
  if (!v22)
  {
    v10 = v21;
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v7 + 13);
    if (v11
      && ((v12 = *(_DWORD *)(v11 + 4), (v12 & 1) != 0)
        ? (v13 = *(uint64_t **)(v11 + 40), v14 = *(_DWORD *)(v11 + 52))
        : (v13 = (uint64_t *)(v11 + 32), v14 = v12 >> 5),
          v14))
    {
      v15 = 0;
      while (1)
      {
        v16 = *v13;
        if (*v13 == WebCore::HTMLNames::maxAttr
          || *(_QWORD *)(v16 + 24) == *(_QWORD *)(WebCore::HTMLNames::maxAttr + 24)
          && *(_QWORD *)(v16 + 32) == *(_QWORD *)(WebCore::HTMLNames::maxAttr + 32))
        {
          break;
        }
        ++v15;
        v13 += 2;
        if (v14 == v15)
          goto LABEL_17;
      }
    }
    else
    {
LABEL_17:
      v15 = 0xFFFFFFFFLL;
    }
    WebCore::Element::setAttributeInternal(v7, v15, (WebCore::TreeScope *)&WebCore::HTMLNames::maxAttr, &v23, 0);
    v18 = v23;
    v23 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    v8 = v22;
  }
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v8])(&v23, &v21);
  return v9;
}

unint64_t WebCore::jsHTMLInputElement_minLength(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 176) | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLInputElement_minLength(JSC *this, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  WTF::AtomString *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::Element *v11;
  int v12;
  JSValue v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  WTF::StringImpl *v25;

  v4 = *((_QWORD *)this + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = (WTF::AtomString *)a3;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::Element **)(a2 + 24);
  v24 = a3;
  if (a3 < 0xFFFE000000000000)
  {
    v17 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v24, this);
      v17 = v23;
    }
    v18 = (v17 >> 52) & 0x7FF;
    v19 = v18 - 1023;
    v20 = v17 >> (51 - (v17 >> 52));
    if (v18 > 0x433)
      LODWORD(v20) = v17 << ((v17 >> 52) - 51);
    if (v18 >= 0x41F)
      v21 = v20;
    else
      v21 = (((1 << ((v17 >> 52) + 1)) - 1) & v20) + (1 << ((v17 >> 52) + 1));
    if ((v17 & 0x8000000000000000) == 0)
      v22 = v21;
    else
      v22 = -v21;
    if (v19 <= 0x53)
      v5 = (WTF::AtomString *)v22;
    else
      v5 = 0;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    return 0;
  if ((v5 & 0x80000000) == 0 && ((v12 = *((_DWORD *)v11 + 43), v12 < 0) || v12 >= (int)v5))
  {
    WebCore::Element::setIntegralAttribute(v11, (const WebCore::QualifiedName *)&WebCore::HTMLNames::minlengthAttr, v5);
  }
  else
  {
    LOBYTE(v24) = 0;
    v25 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v13.super.isa = (Class)WebCore::createDOMException(this, 0, (JSC::JSGlobalObject *)&v25);
      JSC::VM::throwException((JSC::VM *)v4, this, v13);
      v15 = v25;
      v25 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v14);
        else
          *(_DWORD *)v15 -= 2;
      }
    }
  }
  return 1;
}

unint64_t WebCore::jsHTMLInputElement_maxLength(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 172) | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLInputElement_maxLength(JSC *this, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  WTF::AtomString *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::Element *v11;
  int v12;
  JSValue v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  WTF::StringImpl *v25;

  v4 = *((_QWORD *)this + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = (WTF::AtomString *)a3;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::Element **)(a2 + 24);
  v24 = a3;
  if (a3 < 0xFFFE000000000000)
  {
    v17 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v24, this);
      v17 = v23;
    }
    v18 = (v17 >> 52) & 0x7FF;
    v19 = v18 - 1023;
    v20 = v17 >> (51 - (v17 >> 52));
    if (v18 > 0x433)
      LODWORD(v20) = v17 << ((v17 >> 52) - 51);
    if (v18 >= 0x41F)
      v21 = v20;
    else
      v21 = (((1 << ((v17 >> 52) + 1)) - 1) & v20) + (1 << ((v17 >> 52) + 1));
    if ((v17 & 0x8000000000000000) == 0)
      v22 = v21;
    else
      v22 = -v21;
    if (v19 <= 0x53)
      v5 = (WTF::AtomString *)v22;
    else
      v5 = 0;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    return 0;
  if ((v5 & 0x80000000) == 0 && ((v12 = *((_DWORD *)v11 + 44), v12 < 0) || v12 <= (int)v5))
  {
    WebCore::Element::setIntegralAttribute(v11, (const WebCore::QualifiedName *)&WebCore::HTMLNames::maxlengthAttr, v5);
  }
  else
  {
    LOBYTE(v24) = 0;
    v25 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v13.super.isa = (Class)WebCore::createDOMException(this, 0, (JSC::JSGlobalObject *)&v25);
      JSC::VM::throwException((JSC::VM *)v4, this, v13);
      v15 = v25;
      v25 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v14);
        else
          *(_DWORD *)v15 -= 2;
      }
    }
  }
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_min(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3
    && ((v4 = *(_DWORD *)(v3 + 4), (v4 & 1) != 0)
      ? (v5 = *(_QWORD *)(v3 + 40), LODWORD(v6) = *(_DWORD *)(v3 + 52))
      : (v5 = v3 + 32, LODWORD(v6) = v4 >> 5),
        (_DWORD)v6))
  {
    v6 = v6;
    v7 = (uint64_t *)(v5 + 8);
    while (1)
    {
      v8 = *(v7 - 1);
      if (v8 == WebCore::HTMLNames::minAttr
        || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::minAttr + 24)
        && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::minAttr + 32))
      {
        break;
      }
      v7 += 2;
      if (!--v6)
      {
        v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
        break;
      }
    }
  }
  else
  {
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_13;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_13:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_min(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v7;
  int v8;
  _BOOL8 v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v8 = v22;
  v9 = v22 == 0;
  if (!v22)
  {
    v10 = v21;
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v7 + 13);
    if (v11
      && ((v12 = *(_DWORD *)(v11 + 4), (v12 & 1) != 0)
        ? (v13 = *(uint64_t **)(v11 + 40), v14 = *(_DWORD *)(v11 + 52))
        : (v13 = (uint64_t *)(v11 + 32), v14 = v12 >> 5),
          v14))
    {
      v15 = 0;
      while (1)
      {
        v16 = *v13;
        if (*v13 == WebCore::HTMLNames::minAttr
          || *(_QWORD *)(v16 + 24) == *(_QWORD *)(WebCore::HTMLNames::minAttr + 24)
          && *(_QWORD *)(v16 + 32) == *(_QWORD *)(WebCore::HTMLNames::minAttr + 32))
        {
          break;
        }
        ++v15;
        v13 += 2;
        if (v14 == v15)
          goto LABEL_17;
      }
    }
    else
    {
LABEL_17:
      v15 = 0xFFFFFFFFLL;
    }
    WebCore::Element::setAttributeInternal(v7, v15, (WebCore::TreeScope *)&WebCore::HTMLNames::minAttr, &v23, 0);
    v18 = v23;
    v23 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    v8 = v22;
  }
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v8])(&v23, &v21);
  return v9;
}

uint64_t WebCore::jsHTMLInputElement_multiple(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::multipleAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::multipleAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::multipleAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLInputElement_multiple(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::multipleAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_24;
      }
    }
    else
    {
LABEL_24:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLInputElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_pattern(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3
    && ((v4 = *(_DWORD *)(v3 + 4), (v4 & 1) != 0)
      ? (v5 = *(_QWORD *)(v3 + 40), LODWORD(v6) = *(_DWORD *)(v3 + 52))
      : (v5 = v3 + 32, LODWORD(v6) = v4 >> 5),
        (_DWORD)v6))
  {
    v6 = v6;
    v7 = (uint64_t *)(v5 + 8);
    while (1)
    {
      v8 = *(v7 - 1);
      if (v8 == WebCore::HTMLNames::patternAttr
        || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::patternAttr + 24)
        && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::patternAttr + 32))
      {
        break;
      }
      v7 += 2;
      if (!--v6)
      {
        v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
        break;
      }
    }
  }
  else
  {
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_13;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_13:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_pattern(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::patternAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::patternAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::patternAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::patternAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_placeholder(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3
    && ((v4 = *(_DWORD *)(v3 + 4), (v4 & 1) != 0)
      ? (v5 = *(_QWORD *)(v3 + 40), LODWORD(v6) = *(_DWORD *)(v3 + 52))
      : (v5 = v3 + 32, LODWORD(v6) = v4 >> 5),
        (_DWORD)v6))
  {
    v6 = v6;
    v7 = (uint64_t *)(v5 + 8);
    while (1)
    {
      v8 = *(v7 - 1);
      if (v8 == WebCore::HTMLNames::placeholderAttr
        || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::placeholderAttr + 24)
        && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::placeholderAttr + 32))
      {
        break;
      }
      v7 += 2;
      if (!--v6)
      {
        v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
        break;
      }
    }
  }
  else
  {
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_13;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_13:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::IDLAttribute<WebCore::JSHTMLInputElement>::set<&WebCore::setJSHTMLInputElement_placeholderSetter,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLInputElement *>(a2);
  if (v5)
    return WebCore::setJSHTMLInputElement_placeholderSetter(a1, *(WebCore::Element **)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsHTMLInputElement_readOnly(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
  }
  if (!(_DWORD)v5)
    return 6;
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::readonlyAttr)
      break;
    if (*(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::readonlyAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::readonlyAttr + 32))
    {
      return 7;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLInputElement_readOnly(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::readonlyAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_required(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::requiredAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::requiredAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::requiredAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLInputElement_required(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::requiredAttr, v12, a4);
  return 1;
}

unint64_t WebCore::jsHTMLInputElement_size(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 224);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLInputElement_size(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::Element *v10;
  _BOOL8 v11;
  int v12;
  JSValue v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  int v17;
  int v18;
  char v19;
  WTF::StringImpl *v20;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLInputElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLInputElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v17);
  v11 = v18 == 0;
  if (!v18)
  {
    if (v17)
    {
      if (v17 <= 0)
        v12 = 20;
      else
        v12 = v17;
      WebCore::Element::setUnsignedIntegralAttribute(v10, (const WebCore::QualifiedName *)&WebCore::HTMLNames::sizeAttr, v12);
    }
    else
    {
      v19 = 0;
      v20 = 0;
      if (!*((_QWORD *)v4 + 2))
      {
        v13.super.isa = (Class)WebCore::createDOMException(a1, 0, (JSC::JSGlobalObject *)&v20);
        JSC::VM::throwException(v4, a1, v13);
        v15 = v20;
        v20 = 0;
        if (v15)
        {
          if (*(_DWORD *)v15 == 2)
            WTF::StringImpl::destroy(v15, v14);
          else
            *(_DWORD *)v15 -= 2;
        }
      }
    }
  }
  return v11;
}

uint64_t WebCore::jsHTMLInputElement_src(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  __int128 v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  unint64_t v18;
  WTF::StringImpl *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  char v24;
  char v25;
  WTF::StringImpl **v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v22 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::srcAttr, a3, a4, a5);
  v9 = &v23;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v23);
  if ((v24 & 2) == 0)
  {
    v9 = &v23;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v23))
    {
      v18 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v18 != -1)
      {
        v19 = (WTF::StringImpl *)&v25;
        v26 = &v19;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v26, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (*v9)
    *(_DWORD *)v11 += 2;
  v19 = v11;
  v12 = *(_OWORD *)(v9 + 3);
  v20 = *(_OWORD *)(v9 + 1);
  v21 = v12;
  v13 = v23;
  v23 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v10);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v15 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>(a1, (uint64_t)&v22, (uint64_t *)&v19);
  v16 = v19;
  v19 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  return v15;
}

BOOL WebCore::setJSHTMLInputElement_src(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::srcAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::srcAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_step(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::stepAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::stepAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::stepAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_step(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v7;
  int v8;
  _BOOL8 v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v8 = v22;
  v9 = v22 == 0;
  if (!v22)
  {
    v10 = v21;
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v7 + 13);
    if (v11
      && ((v12 = *(_DWORD *)(v11 + 4), (v12 & 1) != 0)
        ? (v13 = *(uint64_t **)(v11 + 40), v14 = *(_DWORD *)(v11 + 52))
        : (v13 = (uint64_t *)(v11 + 32), v14 = v12 >> 5),
          v14))
    {
      v15 = 0;
      while (1)
      {
        v16 = *v13;
        if (*v13 == WebCore::HTMLNames::stepAttr
          || *(_QWORD *)(v16 + 24) == *(_QWORD *)(WebCore::HTMLNames::stepAttr + 24)
          && *(_QWORD *)(v16 + 32) == *(_QWORD *)(WebCore::HTMLNames::stepAttr + 32))
        {
          break;
        }
        ++v15;
        v13 += 2;
        if (v14 == v15)
          goto LABEL_17;
      }
    }
    else
    {
LABEL_17:
      v15 = 0xFFFFFFFFLL;
    }
    WebCore::Element::setAttributeInternal(v7, v15, (WebCore::TreeScope *)&WebCore::HTMLNames::stepAttr, &v23, 0);
    v18 = v23;
    v23 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    v8 = v22;
  }
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v8])(&v23, &v21);
  return v9;
}

uint64_t WebCore::jsHTMLInputElement_switch(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::switchAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::switchAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::switchAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLInputElement_switch(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::switchAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 328))(*(_QWORD *)(a2 + 24) + 112);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSHTMLInputElement_type(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v7;
  int v8;
  _BOOL8 v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v8 = v22;
  v9 = v22 == 0;
  if (!v22)
  {
    v10 = v21;
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v7 + 13);
    if (v11
      && ((v12 = *(_DWORD *)(v11 + 4), (v12 & 1) != 0)
        ? (v13 = *(uint64_t **)(v11 + 40), v14 = *(_DWORD *)(v11 + 52))
        : (v13 = (uint64_t *)(v11 + 32), v14 = v12 >> 5),
          v14))
    {
      v15 = 0;
      while (1)
      {
        v16 = *v13;
        if (*v13 == WebCore::HTMLNames::typeAttr
          || *(_QWORD *)(v16 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
          && *(_QWORD *)(v16 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
        {
          break;
        }
        ++v15;
        v13 += 2;
        if (v14 == v15)
          goto LABEL_17;
      }
    }
    else
    {
LABEL_17:
      v15 = 0xFFFFFFFFLL;
    }
    WebCore::Element::setAttributeInternal(v7, v15, (WebCore::TreeScope *)&WebCore::HTMLNames::typeAttr, &v23, 0);
    v18 = v23;
    v23 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    v8 = v22;
  }
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v8])(&v23, &v21);
  return v9;
}

uint64_t WebCore::jsHTMLInputElement_defaultValue(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v2
    && ((v3 = *(_DWORD *)(v2 + 4), (v3 & 1) != 0)
      ? (v4 = *(_QWORD *)(v2 + 40), LODWORD(v5) = *(_DWORD *)(v2 + 52))
      : (v4 = v2 + 32, LODWORD(v5) = v3 >> 5),
        (_DWORD)v5))
  {
    v5 = v5;
    v6 = (uint64_t *)(v4 + 8);
    while (1)
    {
      v7 = *(v6 - 1);
      if (v7 == WebCore::HTMLNames::valueAttr
        || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 24)
        && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 32))
      {
        break;
      }
      v6 += 2;
      if (!--v5)
      {
        v6 = (uint64_t *)MEMORY[0x1E0CBF2F8];
        break;
      }
    }
  }
  else
  {
    v6 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *v6;
  if (!*v6)
    return *(_QWORD *)(v8 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v8 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v14 = *(unsigned __int16 *)v13;
      if (v14 > 0xFF)
        goto LABEL_13;
      v14 = v14;
    }
    return *(_QWORD *)(v8 + 8 * v14 + 42216);
  }
LABEL_13:
  v11 = *(_QWORD *)(v8 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_defaultValue(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v7;
  int v8;
  _BOOL8 v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v8 = v22;
  v9 = v22 == 0;
  if (!v22)
  {
    v10 = v21;
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v7 + 13);
    if (v11
      && ((v12 = *(_DWORD *)(v11 + 4), (v12 & 1) != 0)
        ? (v13 = *(uint64_t **)(v11 + 40), v14 = *(_DWORD *)(v11 + 52))
        : (v13 = (uint64_t *)(v11 + 32), v14 = v12 >> 5),
          v14))
    {
      v15 = 0;
      while (1)
      {
        v16 = *v13;
        if (*v13 == WebCore::HTMLNames::valueAttr
          || *(_QWORD *)(v16 + 24) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 24)
          && *(_QWORD *)(v16 + 32) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 32))
        {
          break;
        }
        ++v15;
        v13 += 2;
        if (v14 == v15)
          goto LABEL_17;
      }
    }
    else
    {
LABEL_17:
      v15 = 0xFFFFFFFFLL;
    }
    WebCore::Element::setAttributeInternal(v7, v15, (WebCore::TreeScope *)&WebCore::HTMLNames::valueAttr, &v23, 0);
    v18 = v23;
    v23 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    v8 = v22;
  }
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v8])(&v23, &v21);
  return v9;
}

BOOL WebCore::setJSHTMLInputElement_value(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v9;
  int v10;
  _BOOL8 v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  int v20;
  JSC::VM *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  _BYTE v24[8];
  WTF::StringImpl *v25;
  char v26;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLInputElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLInputElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v21 = (JSC::VM *)*((_QWORD *)a1 + 7);
  WebCore::Converter<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLDOMString>>::convert(a1, (unint64_t)this, (uint64_t)&v19);
  v10 = v20;
  v11 = v20 == 0;
  if (!v20)
  {
    v12 = v19;
    v19 = 0;
    v22 = v12;
    WebCore::HTMLInputElement::setValue(v9, (uint64_t)&v22, 0, 0, (uint64_t)v24);
    v14 = v22;
    v22 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v13);
      else
        *(_DWORD *)v14 -= 2;
    }
    if (v26)
    {
      LOBYTE(v22) = v24[0];
      v17 = v25;
      v25 = 0;
      v23 = v17;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v21, (unsigned __int8 *)&v22);
        v17 = v23;
      }
      v23 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v13);
        else
          *(_DWORD *)v17 -= 2;
      }
      if (v26)
      {
        v18 = v25;
        v25 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v13);
          else
            *(_DWORD *)v18 -= 2;
        }
      }
    }
    v10 = v20;
  }
  if (v10 != -1)
    ((void (*)(_BYTE *, WTF::StringImpl **))off_1E329F280[v10])(v24, &v19);
  return v11;
}

uint64_t WebCore::jsHTMLInputElement_valueAsDate(uint64_t a1, uint64_t a2)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a2 + 24) + 240) + 80))(*(_QWORD *)(*(_QWORD *)(a2 + 24)
                                                                                                  + 240));
  return WebCore::jsDate(a1);
}

uint64_t WebCore::setJSHTMLInputElement_valueAsDate(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  JSValue v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  char v20;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLInputElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLInputElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v11 = NAN;
  }
  else
  {
    v11 = WebCore::valueToDate(a1, a3);
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
  }
  (*(void (**)(uint64_t *__return_ptr, double))(**(_QWORD **)(v10 + 240) + 88))(&v18, v11);
  if (v20)
  {
    v13 = (WTF::StringImpl *)v18;
    v14 = v19;
    v19 = 0;
    v17 = v14;
    if (!*(_QWORD *)(v4 + 16))
    {
      v15.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v17);
      JSC::VM::throwException((JSC::VM *)v4, a1, v15);
      v14 = v17;
    }
    v17 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v13);
      else
        *(_DWORD *)v14 -= 2;
    }
    if (v20)
    {
      v16 = v19;
      v19 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v13);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
  }
  return 1;
}

unint64_t WebCore::jsHTMLInputElement_valueAsNumber(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  (*(void (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a2 + 24) + 240) + 104))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 240));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLInputElement_valueAsNumber(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  JSValue v15;
  WTF::StringImpl *v16;
  double v17;
  WTF::StringImpl *v18;
  int v19[2];
  WTF::StringImpl *v20;
  char v21;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLInputElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLInputElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)v19 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v19, a1);
    v11 = v17;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*(_DWORD *)(v4 + 80) || !JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      LOBYTE(v19[0]) = 6;
      v20 = 0;
      v21 = 1;
    }
    else
    {
      (*(void (**)(int *__return_ptr, _QWORD, _QWORD, double))(**(_QWORD **)(v10 + 240) + 112))(v19, *(_QWORD *)(v10 + 240), 0, v11);
      if (!v21)
        return 1;
    }
    v13 = (WTF::StringImpl *)LOBYTE(v19[0]);
    v14 = v20;
    v20 = 0;
    v18 = v14;
    if (!*(_QWORD *)(v4 + 16))
    {
      v15.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v19[0]), (JSC::JSGlobalObject *)&v18);
      JSC::VM::throwException((JSC::VM *)v4, a1, v15);
      v14 = v18;
    }
    v18 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v13);
      else
        *(_DWORD *)v14 -= 2;
    }
    if (v21)
    {
      v16 = v20;
      v20 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v13);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    return 1;
  }
  return 0;
}

unint64_t WebCore::jsHTMLInputElement_width(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a2 + 24) + 240) + 880))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 240));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLInputElement_width(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::widthAttr, v11);
  return v9;
}

uint64_t WebCore::jsHTMLInputElement_willValidate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v5;
  char v6;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_BYTE *)(v2 + 160);
  if ((v3 & 4) == 0 || (*(_BYTE *)(v2 + 162) & 3) == 2)
  {
    *(_BYTE *)(v2 + 160) = v3 | 4;
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 112) + 336))(v2 + 112);
    v3 = *(_BYTE *)(v2 + 160);
    if (((v5 ^ ((v3 & 2) == 0)) & 1) == 0)
    {
      if (v5)
        v6 = 2;
      else
        v6 = 0;
      v3 = v3 & 0xFD | v6;
      *(_BYTE *)(v2 + 160) = v3;
    }
  }
  if ((v3 & 2) != 0)
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsHTMLInputElement_validity(uint64_t a1, uint64_t a2)
{
  return WebCore::toJS(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WTF *)(*(_QWORD *)(a2 + 24) + 112));
}

uint64_t WebCore::jsHTMLInputElement_validationMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned __int8 *v10;
  unsigned int v11;
  int v12;
  char v13;
  WTF::StringImpl *v14;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_BYTE *)(v3 + 160);
  if ((v4 & 4) == 0 || (*(_BYTE *)(v3 + 162) & 3) == 2)
  {
    *(_BYTE *)(v3 + 160) = v4 | 4;
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 112) + 336))(v3 + 112);
    v4 = *(_BYTE *)(v3 + 160);
    if (((v12 ^ ((v4 & 2) == 0)) & 1) == 0)
    {
      if (v12)
        v13 = 2;
      else
        v13 = 0;
      v4 = v4 & 0xFD | v13;
      *(_BYTE *)(v3 + 160) = v4;
    }
  }
  if ((v4 & 2) == 0)
  {
    v5 = 0;
    v6 = *(_QWORD *)(a1 + 56);
LABEL_5:
    v7 = *(_QWORD *)(v6 + 41968);
    goto LABEL_13;
  }
  v5 = *(WTF::StringImpl **)(v3 + 144);
  if (v5 && (v8 = *((_DWORD *)v5 + 1)) != 0)
  {
    *(_DWORD *)v5 += 2;
    v14 = v5;
    v6 = *(_QWORD *)(a1 + 56);
  }
  else
  {
    (*(void (**)(WTF::StringImpl **__return_ptr))(**(_QWORD **)(v3 + 240) + 128))(&v14);
    v5 = v14;
    v6 = *(_QWORD *)(a1 + 56);
    if (!v14)
      goto LABEL_5;
    v8 = *((_DWORD *)v14 + 1);
    if (!v8)
      goto LABEL_5;
  }
  if (v8 != 1)
    goto LABEL_10;
  v10 = (unsigned __int8 *)*((_QWORD *)v5 + 1);
  if ((*((_BYTE *)v5 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_22:
    v7 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_23;
  }
  v11 = *(unsigned __int16 *)v10;
  if (v11 <= 0xFF)
  {
    v11 = v11;
    goto LABEL_22;
  }
LABEL_10:
  v7 = *(_QWORD *)(v6 + 64760);
  if (!v7 || v5 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v5 = v14;
LABEL_13:
    v14 = 0;
    if (!v5)
      return v7;
    goto LABEL_14;
  }
LABEL_23:
  v14 = 0;
LABEL_14:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy(v5, v5);
  else
    *(_DWORD *)v5 -= 2;
  return v7;
}

uint64_t WebCore::jsHTMLInputElement_labels(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t Wrapper;
  uint64_t v17;
  _DWORD *v18;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLElement::labels(*(WebCore::HTMLElement **)(a2 + 24), &v17);
  v3 = (_DWORD *)v17;
  if (!v17)
    return 2;
  v5 = *(_QWORD *)(v2 + 3320);
  if (!*(_DWORD *)(v5 + 48))
  {
    v6 = *(_QWORD *)(v17 + 8);
    if (v6)
      goto LABEL_5;
LABEL_7:
    ++*(_DWORD *)(v17 + 16);
    v18 = v3;
    Wrapper = WebCore::createWrapper(v2, (uint64_t *)&v18);
    v7 = v18;
    v18 = 0;
    if (v7)
    {
      if (v7[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
      else
        --v7[4];
    }
    v3 = (_DWORD *)v17;
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(v5 + 32);
  if (!v8)
    goto LABEL_7;
  v9 = *(_DWORD *)(v8 - 8);
  v10 = (~(v17 << 32) + v17) ^ ((unint64_t)(~(v17 << 32) + v17) >> 22);
  v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
  v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
  v13 = v9 & ((v12 >> 31) ^ v12);
  v14 = *(_QWORD *)(v8 + 16 * v13);
  if (v14 != v17)
  {
    v15 = 1;
    while (v14)
    {
      v13 = ((_DWORD)v13 + v15) & v9;
      v14 = *(_QWORD *)(v8 + 16 * v13);
      ++v15;
      if (v14 == v17)
        goto LABEL_22;
    }
    goto LABEL_7;
  }
LABEL_22:
  v6 = *(_QWORD *)(v8 + 16 * v13 + 8);
  if (!v6)
    goto LABEL_7;
LABEL_5:
  if ((*(_BYTE *)(v6 + 8) & 3) != 0)
    goto LABEL_7;
  Wrapper = *(_QWORD *)v6;
  if (!*(_QWORD *)v6)
    goto LABEL_7;
LABEL_11:
  v17 = 0;
  if (v3)
  {
    if (v3[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
    else
      --v3[4];
  }
  return Wrapper;
}

unint64_t WebCore::jsHTMLInputElement_selectionStart(uint64_t a1, uint64_t a2)
{
  WebCore::HTMLTextFormControlElement *v2;
  _DWORD *v3;
  unsigned int v4;

  v2 = *(WebCore::HTMLTextFormControlElement **)(a2 + 24);
  v3 = (_DWORD *)*((_QWORD *)v2 + 30);
  if ((v3[3] & 0x2A8C20) == 0 || !(*(unsigned int (**)(_DWORD *))(*(_QWORD *)v3 + 824))(v3))
    return 2;
  v4 = WebCore::HTMLTextFormControlElement::selectionStart(v2);
  if ((v4 & 0x80000000) != 0)
    return COERCE__INT64((double)v4) + 0x2000000000000;
  else
    return v4 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLInputElement_selectionStart(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::HTMLTextFormControlElement *v10;
  uint64_t v11;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  JSValue v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  char v19;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLInputElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLInputElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::HTMLTextFormControlElement **)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v11 = 0;
  }
  else
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v17);
    if (HIDWORD(v17))
      return 0;
    v11 = v17 | 0x100000000;
  }
  WebCore::HTMLInputElement::setSelectionStartForBindings(v10, v11, &v17);
  if (v19)
  {
    v13 = (WTF::StringImpl *)v17;
    v14 = v18;
    v16 = v18;
    if (!*((_QWORD *)v4 + 2))
    {
      v15.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v17, (JSC::JSGlobalObject *)&v16);
      JSC::VM::throwException(v4, a1, v15);
      v14 = v16;
    }
    v16 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v13);
      else
        *(_DWORD *)v14 -= 2;
    }
  }
  return 1;
}

unint64_t WebCore::jsHTMLInputElement_selectionEnd(uint64_t a1, uint64_t a2)
{
  WebCore::HTMLTextFormControlElement *v2;
  _DWORD *v3;
  unsigned int v4;

  v2 = *(WebCore::HTMLTextFormControlElement **)(a2 + 24);
  v3 = (_DWORD *)*((_QWORD *)v2 + 30);
  if ((v3[3] & 0x2A8C20) == 0 || !(*(unsigned int (**)(_DWORD *))(*(_QWORD *)v3 + 824))(v3))
    return 2;
  v4 = WebCore::HTMLTextFormControlElement::selectionEnd(v2);
  if ((v4 & 0x80000000) != 0)
    return COERCE__INT64((double)v4) + 0x2000000000000;
  else
    return v4 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLInputElement_selectionEnd(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::HTMLTextFormControlElement *v10;
  uint64_t v11;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  JSValue v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  char v19;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLInputElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLInputElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::HTMLTextFormControlElement **)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v11 = 0;
  }
  else
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v17);
    if (HIDWORD(v17))
      return 0;
    v11 = v17 | 0x100000000;
  }
  WebCore::HTMLInputElement::setSelectionEndForBindings(v10, v11, &v17);
  if (v19)
  {
    v13 = (WTF::StringImpl *)v17;
    v14 = v18;
    v16 = v18;
    if (!*((_QWORD *)v4 + 2))
    {
      v15.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v17, (JSC::JSGlobalObject *)&v16);
      JSC::VM::throwException(v4, a1, v15);
      v14 = v16;
    }
    v16 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v13);
      else
        *(_DWORD *)v14 -= 2;
    }
  }
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_selectionDirection(uint64_t a1, uint64_t a2)
{
  WebCore::HTMLTextFormControlElement *v3;
  _DWORD *v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;

  v3 = *(WebCore::HTMLTextFormControlElement **)(a2 + 24);
  v4 = (_DWORD *)*((_QWORD *)v3 + 30);
  if ((v4[3] & 0x2A8C20) == 0)
    return 2;
  if (!(*(unsigned int (**)(_DWORD *))(*(_QWORD *)v4 + 824))(v4))
    return 2;
  v6 = *WebCore::HTMLTextFormControlElement::selectionDirection(v3);
  if (!v6)
    return 2;
  v7 = *(_DWORD *)v6;
  v8 = *(_DWORD *)(v6 + 4);
  *(_DWORD *)v6 += 2;
  v9 = *(_QWORD *)(a1 + 56);
  if (v8)
  {
    if (v8 != 1)
    {
LABEL_6:
      v10 = *(_QWORD *)(v9 + 64760);
      if (!v10 || v6 != *(_QWORD *)(v10 + 8))
      {
        v10 = JSC::jsStringWithCacheSlowCase();
        v7 = *(_DWORD *)v6 - 2;
      }
      goto LABEL_9;
    }
    v12 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v13 = *v12;
    }
    else
    {
      v14 = *(unsigned __int16 *)v12;
      if (v14 > 0xFF)
        goto LABEL_6;
      v13 = v14;
    }
    v10 = *(_QWORD *)(v9 + 8 * v13 + 42216);
  }
  else
  {
    v10 = *(_QWORD *)(v9 + 41968);
  }
LABEL_9:
  if (v7)
    *(_DWORD *)v6 = v7;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v6, v5);
  return v10;
}

BOOL WebCore::setJSHTMLInputElement_selectionDirection(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::HTMLInputElement *v10;
  int v11;
  _BOOL8 v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  JSValue v19;
  WTF::StringImpl *v20;
  int v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  char v26;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLInputElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLInputElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::HTMLInputElement **)(a2 + 24);
  WebCore::Converter<WebCore::IDLNullable<WebCore::IDLDOMString>>::convert(a1, (unint64_t)this, (uint64_t)&v20);
  v11 = v21;
  v12 = v21 == 0;
  if (!v21)
  {
    v13 = v20;
    v20 = 0;
    v22 = v13;
    WebCore::HTMLInputElement::setSelectionDirectionForBindings(v10, (const WTF::String *)&v22, &v24);
    v15 = v22;
    v22 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v14);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (v26)
    {
      v17 = (WTF::StringImpl *)v24;
      LOBYTE(v22) = v24;
      v18 = v25;
      v23 = v25;
      if (!*((_QWORD *)v4 + 2))
      {
        v19.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v24, (JSC::JSGlobalObject *)&v23);
        JSC::VM::throwException(v4, a1, v19);
        v18 = v23;
      }
      v23 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v17);
        else
          *(_DWORD *)v18 -= 2;
      }
    }
    v11 = v21;
  }
  if (v11 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E329F280[v11])(&v24, &v20);
  return v12;
}

uint64_t WebCore::jsHTMLInputElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_useMap(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::usemapAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_useMap(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::usemapAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::usemapAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_incremental(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::incrementalAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::incrementalAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::incrementalAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLInputElement_incremental(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::incrementalAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_capture(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::captureAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::captureAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::captureAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_capture(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::captureAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::captureAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::captureAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::captureAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_webkitdirectory(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::webkitdirectoryAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::webkitdirectoryAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::webkitdirectoryAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLInputElement_webkitdirectory(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::webkitdirectoryAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_webkitEntries(WebCore::JSDOMGlobalObject *a1, uint64_t a2)
{
  uint64_t v2;
  JSC::VM *v5;
  WebCore::ScriptExecutionContext *v6;
  JSC::VM *v7;
  JSC::VM *v8;
  unsigned int v9;
  uint64_t *v10;
  uint64_t v11;
  objc_class *v12;
  int v13;
  BOOL v14;
  JSValue v15;
  void *v16;
  JSC::VM *v17;
  JSC::JSObject *v18;
  JSC::JSGlobalObject *v19;
  uint64_t *v20;
  WTF *v21;
  uint64_t v22;
  _DWORD *v23;
  WTF *v24;
  uint64_t v25;
  _QWORD *v27;
  WTF *v28;
  int v29;
  _DWORD v30[5];
  BOOL v31;
  uint64_t v32;
  WTF *v33;
  _OWORD v34[4];
  uint64_t v35;
  JSC::VM *v36;

  v2 = *(_QWORD *)(a2 + 40);
  if (v2)
    return v2;
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
  if (!v6)
    return 10;
  v7 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLInputElementEntriesAPI::webkitEntries(v6, *(WebCore::ScriptExecutionContext **)(a2 + 24), (uint64_t)&v28);
  v8 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v36 = v8;
  v31 = 0;
  v32 = 0x800000000;
  v33 = (WTF *)((char *)v34 + 8);
  memset(v34, 0, sizeof(v34));
  v35 = 0;
  v9 = v30[0];
  if (v30[0] >= 9u)
  {
    v31 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v32) == 1;
    v9 = v30[0];
    if (v30[0])
    {
LABEL_5:
      v10 = (uint64_t *)v28;
      v11 = 8 * v9;
      do
      {
        v12 = (objc_class *)WebCore::wrap<WebCore::FileSystemEntry>((uint64_t)a1, v7, *v10);
        if (*((_DWORD *)v8 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
            goto LABEL_50;
        }
        v13 = v32;
        if ((_DWORD)v32 != HIDWORD(v32) && (v33 != (WTF *)((char *)v34 + 8) ? (v14 = v33 == 0) : (v14 = 1), v14))
        {
          *((_QWORD *)v33 + v32) = v12;
          LODWORD(v32) = v13 + 1;
        }
        else
        {
          v15.super.isa = v12;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v32, v15) == 1)
            v31 = 1;
        }
        ++v10;
        v11 -= 8;
      }
      while (v11);
    }
  }
  else if (v30[0])
  {
    goto LABEL_5;
  }
  if (v31)
  {
    JSC::throwOutOfMemoryError();
LABEL_50:
    v2 = 0;
    goto LABEL_26;
  }
  *(_QWORD *)&v30[1] = v33;
  v30[3] = v32;
  v17 = (JSC::VM *)*((_QWORD *)v7 + 7);
  if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
    v19 = 0;
  else
    v19 = (JSC::JSGlobalObject *)JSC::constructArray();
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
    goto LABEL_50;
  v2 = JSC::objectConstructorFreeze(a1, v19, v18);
LABEL_26:
  v20 = *(uint64_t **)&v34[0];
  if (*(_QWORD *)&v34[0])
  {
    *(_QWORD *)&v30[1] = &v32;
    v27 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v34[0], (uint64_t *)&v30[1]);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v20, v27);
  }
  if (v33 != (WTF *)((char *)v34 + 8) && v33)
    WTF::fastFree(v33, v16);
  if (v30[0])
  {
    v21 = v28;
    v22 = 8 * v30[0];
    do
    {
      v23 = *(_DWORD **)v21;
      *(_QWORD *)v21 = 0;
      if (v23)
      {
        if (v23[8] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v23 + 16))(v23);
        else
          --v23[8];
      }
      v21 = (WTF *)((char *)v21 + 8);
      v22 -= 8;
    }
    while (v22);
  }
  v24 = v28;
  if (v28)
  {
    v28 = 0;
    v29 = 0;
    WTF::fastFree(v24, v16);
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  v25 = *((_QWORD *)a1 + 7);
  *(_QWORD *)(a2 + 40) = v2;
  if ((v2 & 0xFFFE000000000002) == 0 && v2 && *(_DWORD *)(v25 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v25 + 192), (const JSCell *)a2);
  return v2;
}

uint64_t WebCore::jsHTMLInputElement_invokeTargetElement(WebCore *a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::Element *v4;
  void *v5;
  unint64_t v6;
  WebCore::Node *v7;
  WebCore::Node *v9;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Element::getElementAttribute(*(WebCore::Element **)(a2 + 24), (WebCore::QualifiedName::QualifiedNameImpl **)&WebCore::HTMLNames::invoketargetAttr, (uint64_t *)&v9);
  if (!v9)
    return 2;
  v6 = WebCore::toJS(a1, v3, v9, v4);
  v7 = v9;
  v9 = 0;
  if (v7)
  {
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v7, v5);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
  }
  return v6;
}

uint64_t WebCore::setJSHTMLInputElement_invokeTargetElement(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::Element *v9;
  WebCore::Element *v10;
  uint64_t v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLInputElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLInputElement::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::Element **)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
  }
  else
  {
    v12 = *(_QWORD *)(a1 + 56);
    if ((a3 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(a3 + 5) != 241
      || (v10 = *(WebCore::Element **)(a3 + 24)) == 0)
    {
      WebCore::throwAttributeTypeError(a1, (int)&v12, "HTMLInputElement", 17, "invokeTargetElement", 20, "Element", 8);
      return 0;
    }
  }
  WebCore::Element::setElementAttribute(v9, (const WebCore::QualifiedName *)&WebCore::HTMLNames::invoketargetAttr, v10, a4);
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_invokeAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::invokeactionAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::invokeactionAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::invokeactionAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLInputElement_invokeAction(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::invokeactionAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::invokeactionAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::invokeactionAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::invokeactionAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLInputElement_popoverTargetElement(WebCore *a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::Element *v4;
  void *v5;
  unint64_t v6;
  WebCore::Node *v7;
  WebCore::Node *v9;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Element::getElementAttribute(*(WebCore::Element **)(a2 + 24), (WebCore::QualifiedName::QualifiedNameImpl **)&WebCore::HTMLNames::popovertargetAttr, (uint64_t *)&v9);
  if (!v9)
    return 2;
  v6 = WebCore::toJS(a1, v3, v9, v4);
  v7 = v9;
  v9 = 0;
  if (v7)
  {
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v7, v5);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
  }
  return v6;
}

uint64_t WebCore::setJSHTMLInputElement_popoverTargetElement(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::Element *v9;
  WebCore::Element *v10;
  uint64_t v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLInputElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLInputElement::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::Element **)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
  }
  else
  {
    v12 = *(_QWORD *)(a1 + 56);
    if ((a3 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(a3 + 5) != 241
      || (v10 = *(WebCore::Element **)(a3 + 24)) == 0)
    {
      WebCore::throwAttributeTypeError(a1, (int)&v12, "HTMLInputElement", 17, "popoverTargetElement", 21, "Element", 8);
      return 0;
    }
  }
  WebCore::Element::setElementAttribute(v9, (const WebCore::QualifiedName *)&WebCore::HTMLNames::popovertargetAttr, v10, a4);
  return 1;
}

uint64_t WebCore::jsHTMLInputElement_popoverTargetAction(uint64_t a1, uint64_t a2, const WTF::StringImpl *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;

  v4 = WebCore::HTMLFormControlElement::popoverTargetAction(*(WebCore::HTMLFormControlElement **)(a2 + 24), a2, a3);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *v4;
  if (!*v4)
    return *(_QWORD *)(v5 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v5 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v11 = *(unsigned __int16 *)v10;
      if (v11 > 0xFF)
        goto LABEL_4;
      v11 = v11;
    }
    return *(_QWORD *)(v5 + 8 * v11 + 42216);
  }
LABEL_4:
  v8 = *(_QWORD *)(v5 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLInputElement_popoverTargetAction(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLInputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLInputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::popovertargetactionAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::popovertargetactionAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::popovertargetactionAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::popovertargetactionAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLInputElement::subspaceForImpl(WebCore::JSHTMLInputElement *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  WTF *v11;
  void *v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4424);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v20 = *(_QWORD *)(v9 + 4424);
  if (!v20)
  {
    v14 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v14, &v22, (char *)this + 192, (char *)this + 1872, 48, 8, &v21);
    v16 = v21;
    v21 = 0;
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v22;
    v22 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 1)
        WTF::fastFree(v17, v15);
      else
        --*(_DWORD *)v17;
    }
    v20 = v14;
    v18 = *(_QWORD *)(v9 + 4424);
    *(_QWORD *)(v9 + 4424) = v14;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v19 == *(_DWORD *)(v7 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v7 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v19) = v14;
      *(_DWORD *)(v7 + 2844) = v19 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v10 = *(_QWORD *)(v3 + 4424);
  *(_QWORD *)(v3 + 4424) = v4;
  if (v10)
  {
    v11 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v11, v12);
  }
  v13 = __ldxr((unsigned __int8 *)v7);
  if (v13 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

unint64_t WebCore::JSHTMLInputElement::toWrapped(uint64_t a1, unint64_t a2)
{
  unint64_t result;

  result = JSC::jsDynamicCast<WebCore::JSHTMLInputElement *>(a2);
  if (result)
    return *(_QWORD *)(result + 24);
  return result;
}

unint64_t JSC::jsDynamicCast<WebCore::JSHTMLInputElement *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSHTMLInputElement::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSHTMLInputElement::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

uint64_t WebCore::JSHTMLLIElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLIElement>,(WebCore::DOMConstructorID)544>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4352);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v21) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v21, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLIElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v20);
    v10[2848] = v2 + (int)v20;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v21);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLLIElement>((WebCore::JSElement *)a1, (JSC::VM *)a2) + 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4352) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLLIElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLLIElementPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLIElement>,(WebCore::DOMConstructorID)544>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLLIElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3
    && ((v4 = *(_DWORD *)(v3 + 4), (v4 & 1) != 0)
      ? (v5 = *(_QWORD *)(v3 + 40), LODWORD(v6) = *(_DWORD *)(v3 + 52))
      : (v5 = v3 + 32, LODWORD(v6) = v4 >> 5),
        (_DWORD)v6))
  {
    v6 = v6;
    v7 = (uint64_t *)(v5 + 8);
    while (1)
    {
      v8 = *(v7 - 1);
      if (v8 == WebCore::HTMLNames::typeAttr
        || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
        && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
      {
        break;
      }
      v7 += 2;
      if (!--v6)
      {
        v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
        break;
      }
    }
  }
  else
  {
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_13;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_13:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLIElement_type(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLIElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLIElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::typeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::typeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLLIElement_value(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a2 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::valueAttr);
  if (v2)
  {
    v3 = *(uint64_t **)(v2 + 8);
    v4 = *(unsigned int *)(v2 + 4) | ((unint64_t)((*(_DWORD *)(v2 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v3 = 0;
    v4 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v3, v4, &v7);
  if (HIDWORD(v7))
    v5 = 0;
  else
    v5 = v7;
  return v5 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLLIElement_value(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  WTF::AtomString *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::Element *v11;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;
  JSC::VM *v18;
  unint64_t v19;
  unint64_t v20;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = (WTF::AtomString *)a3;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLLIElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLLIElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::Element **)(a2 + 24);
  v20 = a3;
  if (a3 < 0xFFFE000000000000)
  {
    v13 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v18 = v4;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v20, a1);
      v4 = v18;
      v13 = v19;
    }
    v14 = (v13 >> 52) & 0x7FF;
    v15 = v14 - 1023;
    v16 = v13 >> (51 - (v13 >> 52));
    if (v14 > 0x433)
      LODWORD(v16) = v13 << ((v13 >> 52) - 51);
    if (v14 >= 0x41F)
      v17 = v16;
    else
      v17 = (((1 << ((v13 >> 52) + 1)) - 1) & v16) + (1 << ((v13 >> 52) + 1));
    if ((v13 & 0x8000000000000000) != 0)
      v17 = -v17;
    if (v15 <= 0x53)
      v5 = (WTF::AtomString *)v17;
    else
      v5 = 0;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  WebCore::Element::setIntegralAttribute(v11, (const WebCore::QualifiedName *)&WebCore::HTMLNames::valueAttr, v5);
  return 1;
}

uint64_t WebCore::JSHTMLLabelElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLLabelElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLLabelElementPrototype::create(WebCore::JSHTMLLabelElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSHTMLLabelElement::s_info, &WebCore::JSHTMLLabelElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLabelElement>,(WebCore::DOMConstructorID)545>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char **v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4360);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v8 = v7;
  LODWORD(v37) = 67099;
  if ((v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v35);
    v6[2] = SlowCase + (int)v35;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v8, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLabelElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v6[165];
  v2 = v11[2846];
  if (v2 < v11[2847])
    goto LABEL_11;
  v2 = v11[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v36);
    v11[2848] = v2 + (int)v36;
LABEL_11:
    v11[2846] = v2 + 48;
    goto LABEL_12;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v6[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v37);
  v15 = v37;
  v37 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v6[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v37);
  v18 = *(_QWORD *)(v6[227] + 2160);
  v19 = *(_QWORD *)(a2 + 3296);
  if (v19)
  {
    v20 = *(_DWORD *)(v19 - 8);
    v21 = ((unint64_t)&WebCore::JSHTMLLabelElement::s_info + ~((_QWORD)&WebCore::JSHTMLLabelElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLLabelElement::s_info + ~((_QWORD)&WebCore::JSHTMLLabelElement::s_info << 32)) >> 22);
    v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
    v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
    v24 = v20 & ((v23 >> 31) ^ v23);
    v25 = *(char ***)(v19 + 16 * v24);
    if (v25 == &WebCore::JSHTMLLabelElement::s_info)
    {
LABEL_18:
      v26 = *(_QWORD *)(v19 + 16 * v24 + 8);
      if (v26)
        goto LABEL_20;
    }
    else
    {
      v34 = 1;
      while (v25)
      {
        v24 = ((_DWORD)v24 + v34) & v20;
        v25 = *(char ***)(v19 + 16 * v24);
        ++v34;
        if (v25 == &WebCore::JSHTMLLabelElement::s_info)
          goto LABEL_18;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v17);
  Structure = WebCore::JSHTMLLabelElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLLabelElementPrototype::create((WebCore::JSHTMLLabelElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLLabelElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLLabelElement::s_info);
LABEL_20:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v18, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4360) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLLabelElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLLabelElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLabelElement>,(WebCore::DOMConstructorID)545>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLLabelElement_form(WebCore *a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  WebCore::HTMLElement *v7;
  uint64_t v8;
  WebCore::JSDOMGlobalObject *v9;
  uint64_t v11;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLLabelElement::control(*(_QWORD *)(a2 + 24), &v11);
  v4 = v11;
  if (v11)
  {
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 464))(v11);
    if (v5)
    {
      v8 = *(_QWORD *)(v5 + 8);
      if (v8)
        v9 = *(WebCore::JSDOMGlobalObject **)(v8 + 8);
      else
        v9 = 0;
      if (*(_DWORD *)(v4 + 24) == 2)
      {
        if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v4, v6);
      }
      else
      {
        *(_DWORD *)(v4 + 24) -= 2;
      }
      if (v9)
        return WebCore::toJS(a1, v3, v9, v7);
    }
    else if (*(_DWORD *)(v4 + 24) == 2)
    {
      if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v4, v6);
    }
    else
    {
      *(_DWORD *)(v4 + 24) -= 2;
    }
  }
  return 2;
}

uint64_t WebCore::jsHTMLLabelElement_htmlFor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::forAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::forAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::forAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::IDLAttribute<WebCore::JSHTMLLabelElement>::set<&WebCore::setJSHTMLLabelElement_htmlForSetter,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, unint64_t a2, JSC::JSRopeString *a3)
{
  unint64_t v5;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLLabelElement *>(a2);
  if (v5)
    return WebCore::setJSHTMLLabelElement_htmlForSetter(a1, *(WebCore::Element **)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsHTMLLabelElement_control(WebCore *a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::HTMLElement *v4;
  void *v6;
  WebCore::Node *v7;
  uint64_t v8;
  WebCore::Node *v9;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLLabelElement::control(*(_QWORD *)(a2 + 24), (uint64_t *)&v9);
  if (!v9)
    return 2;
  v8 = WebCore::toJS(a1, v3, v9, v4);
  v7 = v9;
  v9 = 0;
  if (v7)
  {
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v7, v6);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
  }
  return v8;
}

uint64_t WebCore::JSHTMLLegendElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLLegendElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLLegendElementPrototype::create(WebCore::JSHTMLLegendElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSHTMLLegendElement::s_info, &WebCore::JSHTMLLegendElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLegendElement>,(WebCore::DOMConstructorID)546>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4368);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLegendElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLLegendElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLLegendElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLLegendElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLLegendElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLLegendElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLLegendElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLLegendElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLLegendElementPrototype::create((WebCore::JSHTMLLegendElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLLegendElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLLegendElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4368) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLLegendElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLLegendElementPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLegendElement>,(WebCore::DOMConstructorID)546>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLLegendElement_form(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  uint64_t v5;
  JSC::JSGlobalObject *v6;
  int v7;
  uint64_t v8;
  WebCore::JSDOMGlobalObject *v9;

  v5 = *(_QWORD *)(a2[3] + 32);
  if (!v5
    || (*(_WORD *)(v5 + 28) & 0x10) == 0
    || *(_QWORD *)(*(_QWORD *)(v5 + 96) + 24) != *(_QWORD *)(WebCore::HTMLNames::fieldsetTag + 24))
  {
    return 2;
  }
  v6 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v7 = *(_DWORD *)(v5 + 24);
  *(_DWORD *)(v5 + 24) = v7 + 2;
  v8 = *(_QWORD *)(v5 + 120);
  if (v8)
  {
    v9 = *(WebCore::JSDOMGlobalObject **)(v8 + 8);
    if (v7)
      goto LABEL_6;
  }
  else
  {
    v9 = 0;
    if (v7)
    {
LABEL_6:
      *(_DWORD *)(v5 + 24) = v7;
      goto LABEL_7;
    }
  }
  if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
    WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
LABEL_7:
  if (!v9)
    return 2;
  return WebCore::toJS(a1, v6, v9, a4);
}

uint64_t WebCore::jsHTMLLegendElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLegendElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLegendElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLegendElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLLinkElement::prototype(WebCore::JSHTMLLinkElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v16;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSHTMLLinkElement::s_info + ~((_QWORD)&WebCore::JSHTMLLinkElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLLinkElement::s_info + ~((_QWORD)&WebCore::JSHTMLLinkElement::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSHTMLLinkElement::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSHTMLLinkElement::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    v14 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
    Structure = WebCore::JSHTMLLinkElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v18 = (JSC::JSCell *)WebCore::JSHTMLLinkElementPrototype::create(this, Structure, v16, v17);
    v19 = WebCore::JSHTMLLinkElement::createStructure((uint64_t *)this, (uint64_t)a2, v18);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v19, (uint64_t)&WebCore::JSHTMLLinkElement::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

uint64_t WebCore::JSHTMLLinkElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLLinkElement::JSHTMLLinkElement(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t WebCore::JSHTMLLinkElement::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_DWORD *)(v2 + 24) += 2;
  *a2 = v2;
  return this;
}

unint64_t WebCore::JSHTMLLinkElement::createPrototype(WebCore::JSHTMLLinkElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  Structure = WebCore::JSHTMLLinkElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSHTMLLinkElementPrototype::create(this, Structure, v7, v8);
}

uint64_t WebCore::JSHTMLLinkElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLLinkElementPrototype::create(WebCore::JSHTMLLinkElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSC::Structure *v22;
  int v23;
  WTF::StringImpl *v25;
  int v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  int v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  int v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  WTF::StringImpl *v35[6];
  int v36;
  int v37;
  JSC::Structure *v38;
  int v39;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v34);
    *((_QWORD *)this + 4865) = SlowCase + (int)v34;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<20u>(this, (uint64_t)&WebCore::JSHTMLLinkElement::s_info, (uint64_t)&WebCore::JSHTMLLinkElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C360ECLL);
  }
  v10 = (int *)((char *)this + 93124);
  v11 = v9 - 192;
  if (!v9)
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 680) + 680);
  v13 = (v12 & 0x200000000000000) == 0;
  if ((v12 & 0x200000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v25 = v35[0];
    v26 = *v10;
    *v10 = 1;
    LODWORD(v35[0]) = -1;
    WORD2(v35[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v26;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v27);
      else
        *(_DWORD *)v25 -= 2;
    }
  }
  v14 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v14 && *(_BYTE *)(v14 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C3610CLL);
  }
  v15 = v14 - 192;
  if (!v14)
    v15 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v15 + 680) + 680) & 0x200000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v28 = v35[0];
    v29 = *v10;
    v13 = 1;
    *v10 = 1;
    LODWORD(v35[0]) = -1;
    WORD2(v35[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v29;
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, v30);
      else
        *(_DWORD *)v28 -= 2;
    }
  }
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v16 && *(_BYTE *)(v16 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C3612CLL);
  }
  v17 = v16 - 192;
  if (!v16)
    v17 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v17 + 680) + 672) & 0x8000000000000000) != 0)
  {
    if (!v13)
      goto LABEL_21;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v31 = v35[0];
    v32 = *v10;
    *v10 = 1;
    LODWORD(v35[0]) = -1;
    WORD2(v35[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v32;
    if (v31)
    {
      if (*(_DWORD *)v31 == 2)
        WTF::StringImpl::destroy(v31, v33);
      else
        *(_DWORD *)v31 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
LABEL_21:
  v18 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v20 = JSC::JSString::create((uint64_t)this, v35);
  v21 = v35[0];
  v35[0] = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v19);
    else
      *(_DWORD *)v21 -= 2;
  }
  v22 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v39 = *(_DWORD *)SlowCase;
  v38 = v22;
  v23 = JSC::Structure::outOfLineCapacity(v22);
  v36 = 0;
  v37 = v23;
  v35[0] = (WTF::StringImpl *)&v37;
  v35[1] = (WTF::StringImpl *)SlowCase;
  v35[2] = this;
  v35[3] = (WTF::StringImpl *)&v39;
  v35[4] = (WTF::StringImpl *)&v38;
  v35[5] = (WTF::StringImpl *)&v36;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v22, this, v18, 6, (uint64_t)v35);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v36, v20);
  *((_DWORD *)v22 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLinkElement>,(WebCore::DOMConstructorID)547>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4376);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLinkElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSHTMLLinkElement::prototype((WebCore::JSHTMLLinkElement *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4376) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLLinkElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLLinkElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLLinkElement>,(WebCore::DOMConstructorID)547>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLLinkElement_disabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::disabledAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLLinkElement_disabled(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLLinkElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::disabledAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLLinkElement_charset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::charsetAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::charsetAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::charsetAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLinkElement_charset(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::charsetAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::charsetAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::charsetAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::charsetAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_href(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  __int128 v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  unint64_t v18;
  WTF::StringImpl *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  char v24;
  char v25;
  WTF::StringImpl **v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v22 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::hrefAttr, a3, a4, a5);
  v9 = &v23;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v23);
  if ((v24 & 2) == 0)
  {
    v9 = &v23;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v23))
    {
      v18 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v18 != -1)
      {
        v19 = (WTF::StringImpl *)&v25;
        v26 = &v19;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v26, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (*v9)
    *(_DWORD *)v11 += 2;
  v19 = v11;
  v12 = *(_OWORD *)(v9 + 3);
  v20 = *(_OWORD *)(v9 + 1);
  v21 = v12;
  v13 = v23;
  v23 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v10);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v15 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>(a1, (uint64_t)&v22, (uint64_t *)&v19);
  v16 = v19;
  v19 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  return v15;
}

BOOL WebCore::setJSHTMLLinkElement_href(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::hrefAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::hrefAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::hrefAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::hrefAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_hreflang(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::hreflangAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::hreflangAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::hreflangAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLinkElement_hreflang(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::hreflangAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::hreflangAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::hreflangAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::hreflangAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_media(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::mediaAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLinkElement_media(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::mediaAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::mediaAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_rel(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::relAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::relAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::relAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLinkElement_rel(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::relAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::relAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::relAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::relAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_rev(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::revAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::revAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::revAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLinkElement_rev(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::revAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::revAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::revAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::revAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLLinkElement_sizes(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WTF *)WebCore::HTMLLinkElement::sizes(*(WebCore::HTMLLinkElement **)(a2 + 24));
  return WebCore::wrap<WebCore::DOMTokenList>(a1, v3, v4);
}

BOOL WebCore::setJSHTMLLinkElement_sizes(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLLinkElement::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

uint64_t WebCore::jsHTMLLinkElement_target(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::targetAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLinkElement_target(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::targetAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::targetAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::targetAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::typeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLinkElement_type(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::typeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::typeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_as(uint64_t a1, WebCore::HTMLLinkElement **a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLLinkElement::as(a2[3], (WTF::StringImpl *)a2, &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLLinkElement_as(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::asAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::asAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::asAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::asAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_crossOrigin(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  WebCore::HTMLLinkElement::crossOrigin(*(WebCore::HTMLLinkElement **)(a2 + 24), &v12);
  v3 = v12;
  if (!v12)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = *((_DWORD *)v12 + 1);
  if (!v6)
    goto LABEL_14;
  if (v6 == 1)
  {
    v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
    if ((*((_BYTE *)v12 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v5 = (uint64_t *)(v4 + 8 * v9 + 42216);
LABEL_14:
    v7 = *v5;
    goto LABEL_15;
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v3 = v12;
    v12 = 0;
    if (!v3)
      return v7;
    goto LABEL_16;
  }
LABEL_15:
  v12 = 0;
LABEL_16:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v7;
}

BOOL WebCore::setJSHTMLLinkElement_crossOrigin(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if ((this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
    v22 = 0;
LABEL_18:
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_31;
LABEL_24:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::crossoriginAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::crossoriginAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::crossoriginAttr + 32))
          {
            goto LABEL_32;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_31;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_24;
    }
LABEL_31:
    v16 = 0xFFFFFFFFLL;
LABEL_32:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::crossoriginAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v9 = v22;
    goto LABEL_36;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v9 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v9;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v9 = v22;
  }
  if (!v9)
  {
    v10 = v21;
    goto LABEL_18;
  }
  v15 = 0;
LABEL_36:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLLinkElement_imageSrcset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::imagesrcsetAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::imagesrcsetAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::imagesrcsetAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLinkElement_imageSrcset(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::imagesrcsetAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::imagesrcsetAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::imagesrcsetAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::imagesrcsetAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_imageSizes(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::imagesizesAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::imagesizesAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::imagesizesAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLinkElement_imageSizes(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::imagesizesAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::imagesizesAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::imagesizesAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::imagesizesAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_referrerPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF::StringImpl *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  v3 = WebCore::HTMLLinkElement::referrerPolicy(*(WebCore::HTMLLinkElement **)(a2 + 24));
  WebCore::convertEnumerationToString(v3, &v12);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = v12;
  if (!v12 || (v6 = *((_DWORD *)v12 + 1)) == 0)
  {
    v7 = *(_QWORD *)(v4 + 41968);
LABEL_7:
    v12 = 0;
    if (!v5)
      return v7;
    goto LABEL_16;
  }
  if (v6 != 1)
    goto LABEL_4;
  v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
  if ((*((_BYTE *)v12 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_14:
    v7 = *(_QWORD *)(v4 + 8 * v9 + 42216);
    goto LABEL_15;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_14;
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v5 = v12;
    goto LABEL_7;
  }
LABEL_15:
  v12 = 0;
LABEL_16:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy(v5, v5);
  else
    *(_DWORD *)v5 -= 2;
  return v7;
}

BOOL WebCore::setJSHTMLLinkElement_referrerPolicy(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::referrerpolicyAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::referrerpolicyAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::referrerpolicyAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::referrerpolicyAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_fetchPriority(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLImageElement::fetchPriorityForBindings(*(_QWORD *)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLLinkElement_fetchPriority(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::fetchpriorityAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::fetchpriorityAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::fetchpriorityAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::fetchpriorityAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLLinkElement_sheet(int a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 200);
  if (v2)
    return WebCore::wrap<WebCore::CSSStyleSheet>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

unint64_t WebCore::jsHTMLLinkElement_relList(WebCore *a1, WebCore::JSHTMLLinkElement **a2)
{
  return WebCore::jsHTMLLinkElement_relListGetter(a1, (JSC::JSGlobalObject *)*(unsigned int *)a2, a2[3]);
}

BOOL WebCore::setJSHTMLLinkElement_relList(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLLinkElement::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

uint64_t WebCore::jsHTMLLinkElement_integrity(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::integrityAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::integrityAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::integrityAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLLinkElement_integrity(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLLinkElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::integrityAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::integrityAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::integrityAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::integrityAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLLinkElement::subspaceForImpl(WebCore::JSHTMLLinkElement *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  WTF *v11;
  void *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4456);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v19 = *(_QWORD *)(v9 + 4456);
  if (!v19)
  {
    v17 = 40;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v17, JSC::JSCell::numberOfLowerTierCells, &v18);
    v14 = v18;
    v19 = v18;
    v15 = *(_QWORD *)(v9 + 4456);
    *(_QWORD *)(v9 + 4456) = v18;
    if (v15)
      (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
    v16 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v16 == *(_DWORD *)(v7 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v7 + 2832, (unint64_t)&v19);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v16) = v14;
      *(_DWORD *)(v7 + 2844) = v16 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v10 = *(_QWORD *)(v3 + 4456);
  *(_QWORD *)(v3 + 4456) = v4;
  if (v10)
  {
    v11 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v11, v12);
  }
  v13 = __ldxr((unsigned __int8 *)v7);
  if (v13 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSHTMLLinkElement::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSHTMLLinkElement::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSHTMLLinkElement::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

uint64_t WebCore::JSHTMLMapElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLMapElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLMapElementPrototype::create(WebCore::JSHTMLMapElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSHTMLMapElement::s_info, &WebCore::JSHTMLMapElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMapElement>,(WebCore::DOMConstructorID)548>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4384);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMapElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLMapElement::s_info + ~((_QWORD)&WebCore::JSHTMLMapElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLMapElement::s_info + ~((_QWORD)&WebCore::JSHTMLMapElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLMapElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLMapElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLMapElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLMapElementPrototype::create((WebCore::JSHTMLMapElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLMapElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLMapElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4384) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLMapElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLMapElementPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMapElement>,(WebCore::DOMConstructorID)548>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLMapElement_areas(int a1, WebCore::HTMLMapElement **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLMapElement::areas(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

uint64_t WebCore::jsHTMLMapElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLMapElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMapElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMapElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMarqueeElement>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSHTMLMarqueeElement>((WebCore::JSHTMLMarqueeElement *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

WTF::StringImpl *WebCore::JSHTMLMarqueeElementPrototype::finishCreation(WebCore::JSHTMLMarqueeElementPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<14u>(a2, (uint64_t)&WebCore::JSHTMLMarqueeElement::s_info, (uint64_t)&WebCore::JSHTMLMarqueeElementPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLMarqueeElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLMarqueeElement::createPrototype(WebCore::JSHTMLMarqueeElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLMarqueeElementPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSHTMLMarqueeElementPrototype::create(WebCore::JSHTMLMarqueeElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLMarqueeElementPrototype::finishCreation((WebCore::JSHTMLMarqueeElementPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMarqueeElement>,(WebCore::DOMConstructorID)549>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4392);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMarqueeElement>::createStructure((uint64_t *)a1, a2, v5);
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMarqueeElement>::create(a1, Structure, (JSC::VM *)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4392) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v7 = (JSC::Heap *)(a1 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)a2);
        return v8;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsHTMLMarqueeElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLMarqueeElementPrototype::s_info != (char **)(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                    + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMarqueeElement>,(WebCore::DOMConstructorID)549>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLMarqueeElement_behavior(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::behaviorAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::behaviorAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::behaviorAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLMarqueeElement_behavior(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMarqueeElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::behaviorAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::behaviorAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::behaviorAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::behaviorAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLMarqueeElement_bgColor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::bgcolorAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLMarqueeElement_bgColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMarqueeElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::bgcolorAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::bgcolorAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLMarqueeElement_direction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::directionAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::directionAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::directionAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLMarqueeElement_direction(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMarqueeElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::directionAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::directionAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::directionAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::directionAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLMarqueeElement_height(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::heightAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLMarqueeElement_height(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMarqueeElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::heightAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::heightAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLMarqueeElement_hspace(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::hspaceAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    v8 = 0;
  else
    v8 = v10 & ~((int)v10 >> 31);
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLMarqueeElement_hspace(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMarqueeElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::hspaceAttr, v11);
  return v9;
}

unint64_t WebCore::jsHTMLMarqueeElement_loop(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::loopAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    LODWORD(v8) = 0;
  else
    LODWORD(v8) = v10;
  if ((int)v8 <= 0)
    v8 = 0xFFFFFFFFLL;
  else
    v8 = v8;
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLMarqueeElement_loop(JSC *this, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  WTF::AtomString *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::Element *v11;
  JSValue v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  unint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  unsigned int v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  WTF::StringImpl *v24;

  v4 = *((_QWORD *)this + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = (WTF::AtomString *)a3;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMarqueeElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::Element **)(a2 + 24);
  v23 = a3;
  if (a3 < 0xFFFE000000000000)
  {
    v16 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v23, this);
      v16 = v22;
    }
    v17 = (v16 >> 52) & 0x7FF;
    v18 = v17 - 1023;
    v19 = v16 >> (51 - (v16 >> 52));
    if (v17 > 0x433)
      LODWORD(v19) = v16 << ((v16 >> 52) - 51);
    if (v17 >= 0x41F)
      v20 = v19;
    else
      v20 = (((1 << ((v16 >> 52) + 1)) - 1) & v19) + (1 << ((v16 >> 52) + 1));
    if ((v16 & 0x8000000000000000) == 0)
      v21 = v20;
    else
      v21 = -v20;
    if (v18 <= 0x53)
      v5 = (WTF::AtomString *)v21;
    else
      v5 = 0;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    return 0;
  if ((int)v5 > 0 || (_DWORD)v5 == -1)
  {
    WebCore::Element::setIntegralAttribute(v11, (const WebCore::QualifiedName *)&WebCore::HTMLNames::loopAttr, v5);
  }
  else
  {
    LOBYTE(v23) = 0;
    v24 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v12.super.isa = (Class)WebCore::createDOMException(this, 0, (JSC::JSGlobalObject *)&v24);
      JSC::VM::throwException((JSC::VM *)v4, this, v12);
      v14 = v24;
      v24 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v13);
        else
          *(_DWORD *)v14 -= 2;
      }
    }
  }
  return 1;
}

unint64_t WebCore::jsHTMLMarqueeElement_scrollAmount(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = WebCore::HTMLMarqueeElement::scrollAmount(*(WebCore::HTMLMarqueeElement **)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLMarqueeElement_scrollAmount(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  int v10;
  int v12;
  int v13;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMarqueeElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v12);
  v9 = v13 == 0;
  if (!v13)
  {
    if (v12 >= 0)
      v10 = v12;
    else
      v10 = 6;
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::scrollamountAttr, v10);
  }
  return v9;
}

unint64_t WebCore::jsHTMLMarqueeElement_scrollDelay(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = WebCore::HTMLMarqueeElement::scrollDelay(*(WebCore::HTMLMarqueeElement **)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLMarqueeElement_scrollDelay(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  int v10;
  int v12;
  int v13;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMarqueeElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v12);
  v9 = v13 == 0;
  if (!v13)
  {
    if (v12 >= 0)
      v10 = v12;
    else
      v10 = 85;
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::scrolldelayAttr, v10);
  }
  return v9;
}

uint64_t WebCore::jsHTMLMarqueeElement_trueSpeed(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::truespeedAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::truespeedAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::truespeedAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLMarqueeElement_trueSpeed(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMarqueeElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::truespeedAttr, v12, a4);
  return 1;
}

unint64_t WebCore::jsHTMLMarqueeElement_vspace(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::vspaceAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    v8 = 0;
  else
    v8 = v10 & ~((int)v10 >> 31);
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLMarqueeElement_vspace(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMarqueeElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::vspaceAttr, v11);
  return v9;
}

uint64_t WebCore::jsHTMLMarqueeElement_width(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::widthAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLMarqueeElement_width(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMarqueeElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::widthAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::widthAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLMarqueeElementOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v10 = v9[15];
  if (!v10)
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  v11 = *(_QWORD *)(v10 + 8);
  if (!v11 || *(_BYTE *)(v11 + 180) || !v9[16] && !(*(unsigned int (**)(_QWORD *))(v9[14] + 64))(v9 + 14))
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  if (a5)
  {
    *a5 = "ActiveDOMObject with pending activity";
    a5[1] = 38;
  }
  return 1;
}

unsigned int *WebCore::JSHTMLMarqueeElementOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned int *result;
  int v4;
  unsigned int *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int *v26;

  result = *(unsigned int **)(*(_QWORD *)a2 + 24);
  v4 = result[6];
  result[6] = v4 + 2;
  v5 = result + 2;
  if (!result)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v8 = *(_QWORD *)(a3 + 32);
    v6 = (uint64_t *)(a3 + 32);
    v7 = v8;
    if (v8)
    {
      v9 = *(_DWORD *)(v7 - 8);
      v10 = ((unint64_t)result + ~((_QWORD)result << 32)) ^ (((unint64_t)result + ~((_QWORD)result << 32)) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(unsigned int **)(v7 + 16 * v13);
      if (v14 != result)
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(unsigned int **)(v7 + 16 * v13);
          ++v15;
          if (v14 == result)
            goto LABEL_16;
        }
        v13 = *(unsigned int *)(v7 - 4);
      }
LABEL_16:
      if (v13 != *(_DWORD *)(v7 - 4))
      {
        v16 = (_QWORD *)(v7 + 16 * v13);
        *v16 = -1;
        v19 = v16[1];
        v18 = v16 + 1;
        v17 = v19;
        if (v19)
        {
          *(_QWORD *)(v17 + 8) = 3;
          *v18 = 0;
        }
        ++*(_DWORD *)(*v6 - 16);
        v20 = *v6;
        if (*v6)
          v21 = *(_DWORD *)(v20 - 12) - 1;
        else
          v21 = -1;
        *(_DWORD *)(v20 - 12) = v21;
        v22 = *v6;
        if (*v6)
        {
          v23 = 6 * *(_DWORD *)(v22 - 12);
          v24 = *(_DWORD *)(v22 - 4);
          if (v23 < v24 && v24 >= 9)
          {
            v26 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v24 >> 1, 0);
            result = v26;
          }
        }
      }
    }
    v4 = result[6] - 2;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (v4)
  {
    result[6] = v4;
  }
  else if ((*((_WORD *)result + 15) & 0x400) == 0)
  {
    return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
  }
  return result;
}

JSC::VM *WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMediaElement>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSHTMLMediaElement>((WebCore::JSHTMLMediaElement *)a2, a3);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
  return JSC::reifyStaticProperties<9u>((JSC::VM *)a2, (uint64_t)&WebCore::JSHTMLMediaElement::s_info, (uint64_t)&WebCore::JSHTMLMediaElementConstructorTableValues, (JSC::JSObject *)a1);
}

uint64_t WebCore::JSHTMLMediaElement::prototype(WebCore::JSHTMLMediaElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  return *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLMediaElement>(this, a2) + 48);
}

JSC::VM *JSC::reifyStaticProperties<62u>(JSC::VM *result, JSC::JSObject *this)
{
  JSC::VM *v3;
  uint64_t i;
  char *v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;

  v3 = result;
  if ((*(_BYTE *)((16 * *(unsigned int *)this) | 0x10) & 3) == 0)
    result = (JSC::VM *)JSC::JSObject::convertToDictionary(this, result);
  for (i = 0; i != 310; i += 5)
  {
    v5 = (&WebCore::JSHTMLMediaElementPrototypeTableValues)[i + 1];
    if (v5)
    {
      if (v5 == (char *)2)
        JSC::SmallStrings::singleCharacterStringRep((JSC::VM *)((char *)v3 + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v6 = v8;
      result = (JSC::VM *)JSC::reifyStaticProperty(v3, (uint64_t)&WebCore::JSHTMLMediaElement::s_info, (unint64_t *)&v8, (uint64_t)&(&WebCore::JSHTMLMediaElementPrototypeTableValues)[i], (unsigned __int8 *)this);
      if (v6)
      {
        if (*(_DWORD *)v6 == 2)
          result = (JSC::VM *)WTF::StringImpl::destroy(v6, v7);
        else
          *(_DWORD *)v6 -= 2;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSHTMLMediaElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLMediaElement::JSHTMLMediaElement(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t WebCore::JSHTMLMediaElement::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_DWORD *)(v2 + 24) += 2;
  *a2 = v2;
  return this;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMediaElement>,(WebCore::DOMConstructorID)550>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4400);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMediaElement>::createStructure((uint64_t *)a1, a2, v5);
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMediaElement>::create(a1, Structure, (JSC::VM *)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4400) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v7 = (JSC::Heap *)(a1 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)a2);
        return v8;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsHTMLMediaElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLMediaElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMediaElement>,(WebCore::DOMConstructorID)550>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLMediaElement_error(uint64_t a1, uint64_t a2)
{
  WTF *v2;

  v2 = *(WTF **)(*(_QWORD *)(a2 + 24) + 960);
  if (v2)
    return WebCore::wrap<WebCore::MediaError>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::jsHTMLMediaElement_src(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  __int128 v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  unint64_t v18;
  WTF::StringImpl *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  char v24;
  char v25;
  WTF::StringImpl **v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v22 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::srcAttr, a3, a4, a5);
  v9 = &v23;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v23);
  if ((v24 & 2) == 0)
  {
    v9 = &v23;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v23))
    {
      v18 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v18 != -1)
      {
        v19 = (WTF::StringImpl *)&v25;
        v26 = &v19;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v26, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (*v9)
    *(_DWORD *)v11 += 2;
  v19 = v11;
  v12 = *(_OWORD *)(v9 + 3);
  v20 = *(_OWORD *)(v9 + 1);
  v21 = v12;
  v13 = v23;
  v23 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v10);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v15 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>(a1, (uint64_t)&v22, (uint64_t *)&v19);
  v16 = v19;
  v19 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  return v15;
}

BOOL WebCore::setJSHTMLMediaElement_src(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMediaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::srcAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::srcAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLMediaElement_srcObject(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  JSC::VM *v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  WTF *v11;
  int v12;
  char v13;

  v2 = *(_QWORD *)(a2 + 24);
  if (!*(_BYTE *)(v2 + 1544))
    return 2;
  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  LOBYTE(v11) = 0;
  v12 = -1;
  v4 = *(unsigned int *)(v2 + 1536);
  if ((_DWORD)v4 != -1)
  {
    ((void (*)(char *, WTF **, uint64_t))off_1E32A0FD0[v4])(&v13, &v11, v2 + 1528);
    v12 = v4;
    switch((int)v4)
    {
      case 0:
        if (v11)
        {
          v6 = WebCore::wrap<WebCore::MediaStream>(a1, v3, (uint64_t)v11);
          goto LABEL_13;
        }
        v8 = 0;
        goto LABEL_19;
      case 1:
        if (v11)
        {
          v6 = WebCore::wrap<WebCore::MediaSource>(a1, v3, (uint64_t)v11);
          goto LABEL_13;
        }
        v8 = 1;
        goto LABEL_19;
      case 2:
        if (v11)
        {
          v6 = WebCore::wrap<WebCore::MediaSourceHandle>(a1, (uint64_t)v3, v11);
          goto LABEL_13;
        }
        v7 = 2;
        v8 = 2;
        goto LABEL_20;
      case 3:
        if (v11)
        {
          v6 = WebCore::wrap<WebCore::Blob>(a1, (uint64_t)v3, (uint64_t)v11);
LABEL_13:
          v7 = v6;
          v8 = v12;
          if (v12 == -1)
            return v7;
        }
        else
        {
          v8 = 3;
LABEL_19:
          v7 = 2;
        }
LABEL_20:
        ((void (*)(char *, WTF **))off_1E32A0FB0[v8])(&v13, &v11);
        return v7;
      default:
        break;
    }
  }
  v10 = std::__throw_bad_optional_access[abi:sn180100]();
  return WebCore::setJSHTMLMediaElement_srcObject(v10);
}

BOOL WebCore::setJSHTMLMediaElement_srcObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::HTMLMediaElement *v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  uint64_t v13;
  _DWORD *v15;
  int v16;
  _DWORD *v17;
  int v18;
  uint64_t v19;
  char **v21;
  uint64_t v23;
  int v24;
  uint64_t (*v25)();
  int v26;
  int v27;
  uint64_t v28;
  char v31[8];
  int v32;
  uint64_t v33;
  int v34;
  char v35;
  char v36;
  _DWORD *v37;
  int v38;
  int v39;
  char v40;
  int v41;
  char v42[8];
  int v43;
  int v44;
  int v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMediaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::HTMLMediaElement **)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    LOBYTE(v38) = 0;
    v40 = 0;
    v41 = 0;
    v42[0] = 0;
    LOBYTE(v44) = 0;
LABEL_70:
    WebCore::HTMLMediaElement::setSrcObject(v8, (uint64_t)v42);
    if ((_BYTE)v44 && v43 != -1)
      ((void (*)(uint64_t *, char *))off_1E32A0FB0[v43])(&v33, v42);
    v28 = 1;
    v26 = v41;
    goto LABEL_74;
  }
  v33 = *(_QWORD *)(a1 + 56);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_31;
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSMediaStream::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    v13 = 16 * v9;
    do
    {
      v13 = *(_QWORD *)(v13 + 16);
      v10 = v13 != 0;
    }
    while ((char **)v13 != &WebCore::JSMediaStream::s_info && v13 != 0);
  }
  if (!v10 || (v15 = *(_DWORD **)(a3 + 24)) == 0)
  {
    if ((_DWORD)v9 && v11 != &WebCore::JSMediaSource::s_info)
    {
      v19 = 16 * v9;
      do
        v19 = *(_QWORD *)(v19 + 16);
      while ((char **)v19 != &WebCore::JSMediaSource::s_info && v19 != 0);
      if (!v19)
      {
        if (v11 == &WebCore::JSMediaSourceHandle::s_info)
          goto LABEL_90;
        v21 = v11;
        do
          v21 = (char **)v21[2];
        while (v21 != &WebCore::JSMediaSourceHandle::s_info && v21 != 0);
        if (v21)
        {
LABEL_90:
          v15 = *(_DWORD **)(a3 + 24);
          if (v15)
          {
            v17 = v15 + 2;
            v16 = 2;
            goto LABEL_50;
          }
        }
        if (v11 == &WebCore::JSBlob::s_info)
          goto LABEL_91;
        do
          v11 = (char **)v11[2];
        while (v11 != &WebCore::JSBlob::s_info && v11 != 0);
        if (v11)
        {
LABEL_91:
          v15 = *(_DWORD **)(a3 + 24);
          if (v15)
          {
            v17 = v15 + 4;
            v16 = 3;
            goto LABEL_50;
          }
        }
LABEL_31:
        JSC::throwTypeError();
        v18 = 1;
        v45 = 1;
LABEL_53:
        v41 = 1;
        goto LABEL_63;
      }
    }
    else if (!(_DWORD)v9)
    {
      goto LABEL_31;
    }
    v23 = *(_QWORD *)(a3 + 24);
    v15 = (_DWORD *)(v23 - 40);
    v17 = (_DWORD *)(v23 - 16);
    v16 = 1;
    goto LABEL_50;
  }
  v16 = 0;
  v17 = v15 + 22;
LABEL_50:
  ++*v17;
  v37 = v15;
  v38 = v16;
  LOBYTE(v39) = 1;
  LOBYTE(v43) = 0;
  v44 = -1;
  ((void (*)(char *, int *, _DWORD **))off_1E32A0FF0[v16])(v31, &v43, &v37);
  v44 = v16;
  v45 = 0;
  if ((_BYTE)v39)
  {
    if (v38 != -1)
    {
      ((void (*)(char *, _DWORD **))off_1E32A0FB0[v38])(v31, &v37);
      v18 = v45;
      if (v45)
        goto LABEL_53;
    }
  }
  v31[0] = 0;
  v32 = -1;
  v24 = v44;
  if (v44 == -1)
  {
    LOBYTE(v33) = 0;
    v35 = 1;
    LOBYTE(v38) = 0;
    v39 = -1;
    v40 = 1;
    v41 = 0;
LABEL_59:
    v34 = -1;
    goto LABEL_60;
  }
  v25 = off_1E32A0FF0[v44];
  ((void (*)(_DWORD **, char *, int *))v25)(&v37, v31, &v43);
  v32 = v24;
  LOBYTE(v33) = 0;
  v34 = -1;
  ((void (*)(_DWORD **, uint64_t *, char *))v25)(&v37, &v33, v31);
  v34 = v24;
  v35 = 1;
  LOBYTE(v38) = 0;
  v40 = 0;
  v39 = -1;
  ((void (*)(char *, int *, uint64_t *))v25)(&v36, &v38, &v33);
  v39 = v24;
  v40 = 1;
  v41 = 0;
  if (v35)
  {
    if (v34 != -1)
      ((void (*)(char *, uint64_t *))off_1E32A0FB0[v34])(&v36, &v33);
    goto LABEL_59;
  }
LABEL_60:
  if (v32 != -1)
    ((void (*)(char *, char *))off_1E32A0FB0[v32])(&v36, v31);
  v18 = v45;
LABEL_63:
  if (v18 != -1)
    ((void (*)(uint64_t *, int *))off_1E32A1010[v18])(&v33, &v43);
  v26 = v41;
  if (!v41)
  {
    v42[0] = 0;
    LOBYTE(v44) = 0;
    if (v40)
    {
      v43 = -1;
      v27 = v39;
      if (v39 != -1)
      {
        ((void (*)(uint64_t *, char *, int *))off_1E32A0FF0[v39])(&v33, v42, &v38);
        v43 = v27;
      }
      LOBYTE(v44) = 1;
    }
    goto LABEL_70;
  }
  v28 = 0;
LABEL_74:
  if (v26 != -1)
    ((void (*)(char *, int *))off_1E32A1020[v26])(v42, &v38);
  return v28;
}

unint64_t WebCore::jsHTMLMediaElement_currentSrc(uint64_t a1, uint64_t a2, const WTF::String *a3)
{
  return JSC::jsOwnedString(*(JSC **)(a1 + 56), (JSC::VM *)(*(_QWORD *)(a2 + 24) + 912), a3);
}

uint64_t WebCore::jsHTMLMediaElement_crossOrigin(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  WebCore::HTMLMediaElement::crossOrigin(*(WebCore::HTMLMediaElement **)(a2 + 24), &v12);
  v3 = v12;
  if (!v12)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = *((_DWORD *)v12 + 1);
  if (!v6)
    goto LABEL_14;
  if (v6 == 1)
  {
    v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
    if ((*((_BYTE *)v12 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v5 = (uint64_t *)(v4 + 8 * v9 + 42216);
LABEL_14:
    v7 = *v5;
    goto LABEL_15;
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v3 = v12;
    v12 = 0;
    if (!v3)
      return v7;
    goto LABEL_16;
  }
LABEL_15:
  v12 = 0;
LABEL_16:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v7;
}

BOOL WebCore::setJSHTMLMediaElement_crossOrigin(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMediaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if ((this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
    v22 = 0;
LABEL_18:
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_31;
LABEL_24:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::crossoriginAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::crossoriginAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::crossoriginAttr + 32))
          {
            goto LABEL_32;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_31;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_24;
    }
LABEL_31:
    v16 = 0xFFFFFFFFLL;
LABEL_32:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::crossoriginAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v9 = v22;
    goto LABEL_36;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v9 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v9;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v9 = v22;
  }
  if (!v9)
  {
    v10 = v21;
    goto LABEL_18;
  }
  v15 = 0;
LABEL_36:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v15;
}

unint64_t WebCore::jsHTMLMediaElement_networkState(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int16 *)(*(_QWORD *)(a2 + 24) + 900) | 0xFFFE000000000000;
}

uint64_t WebCore::jsHTMLMediaElement_preload(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  v3 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(v3 + 1632))
  {
    v8 = *(unsigned __int8 *)(v3 + 1144);
    if (v8 == 2)
    {
      v4 = WebCore::autoAtomData;
      if (!WebCore::autoAtomData)
        goto LABEL_4;
      goto LABEL_3;
    }
    if (v8 == 1)
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v4 = (uint64_t)v12;
      goto LABEL_5;
    }
    if (v8)
    {
      v4 = 0;
      v5 = *(_QWORD *)(a1 + 56);
LABEL_15:
      v7 = *(_QWORD *)(v5 + 41968);
LABEL_16:
      if (!v4)
        return v7;
      goto LABEL_24;
    }
  }
  v4 = WebCore::noneAtomData;
  if (WebCore::noneAtomData)
LABEL_3:
    *(_DWORD *)v4 += 2;
LABEL_4:
  v12 = (WTF::StringImpl *)v4;
LABEL_5:
  v5 = *(_QWORD *)(a1 + 56);
  if (!v4)
    goto LABEL_15;
  v6 = *(_DWORD *)(v4 + 4);
  if (!v6)
    goto LABEL_15;
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_8;
      v10 = v10;
    }
    v7 = *(_QWORD *)(v5 + 8 * v10 + 42216);
    goto LABEL_24;
  }
LABEL_8:
  v7 = *(_QWORD *)(v5 + 64760);
  if (!v7 || v4 != *(_QWORD *)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v4 = (uint64_t)v12;
    goto LABEL_16;
  }
LABEL_24:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, (WTF::StringImpl *)v4);
  else
    *(_DWORD *)v4 -= 2;
  return v7;
}

BOOL WebCore::setJSHTMLMediaElement_preload(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v15;
  int v16;
  WTF::StringImpl *v17;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMediaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v15);
  v9 = v16;
  v10 = v16 == 0;
  if (!v16)
  {
    v11 = v15;
    v15 = 0;
    v17 = v11;
    WebCore::HTMLMediaElement::setPreload(v8, (const WTF::AtomString *)&v17);
    v13 = v17;
    v17 = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v9 = v16;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v17, &v15);
  return v10;
}

unint64_t WebCore::jsHTMLMediaElement_buffered(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  WTF *v6;
  WTF *v8;
  WTF *v9;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  (*(void (**)(WTF **__return_ptr))(**(_QWORD **)(a2 + 24) + 1344))(&v9);
  v5 = WebCore::wrap<WebCore::TimeRanges>(a1, v3, (uint64_t)v9);
  v6 = v9;
  v9 = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 1)
    {
      v8 = (WTF *)*((_QWORD *)v6 + 1);
      if (v8)
      {
        *((_QWORD *)v6 + 1) = 0;
        *((_DWORD *)v6 + 4) = 0;
        WTF::fastFree(v8, v4);
      }
      WTF::fastFree(v6, v4);
    }
    else
    {
      --*(_DWORD *)v6;
    }
  }
  return v5;
}

unint64_t WebCore::jsHTMLMediaElement_readyState(uint64_t a1, uint64_t a2)
{
  return (*(unsigned __int16 (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 1352))(*(_QWORD *)(a2 + 24)) | 0xFFFE000000000000;
}

uint64_t WebCore::jsHTMLMediaElement_seeking(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 + 24) + 1265) & 0x800) != 0)
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsHTMLMediaElement_currentTime(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  (*(void (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 1360))(*(_QWORD *)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLMediaElement_currentTime(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  JSValue v15;
  double v16;
  WTF::StringImpl *v17;
  int v18[2];
  WTF::StringImpl *v19;
  char v20;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMediaElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)v18 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v18, a1);
    v11 = v16;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    return 0;
  WebCore::HTMLMediaElement::setCurrentTimeForBindings(v10, v11, (uint64_t)v18);
  if (v20)
  {
    v13 = (WTF::StringImpl *)LOBYTE(v18[0]);
    v14 = v19;
    v17 = v19;
    if (!*(_QWORD *)(v4 + 16))
    {
      v15.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v18[0]), (JSC::JSGlobalObject *)&v17);
      JSC::VM::throwException((JSC::VM *)v4, a1, v15);
      v14 = v17;
    }
    v17 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v13);
      else
        *(_DWORD *)v14 -= 2;
    }
  }
  return 1;
}

unint64_t WebCore::jsHTMLMediaElement_duration(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  (*(void (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 1376))(*(_QWORD *)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

uint64_t WebCore::jsHTMLMediaElement_paused(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 1384))(*(_QWORD *)(a2 + 24)))
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsHTMLMediaElement_defaultPlaybackRate(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = (*(double (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 1392))(*(_QWORD *)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLMediaElement_defaultPlaybackRate(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMediaElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      (*(void (**)(uint64_t, double))(*(_QWORD *)v10 + 1400))(v10, v11);
      return 1;
    }
    JSC::throwTypeError();
  }
  return 0;
}

unint64_t WebCore::jsHTMLMediaElement_playbackRate(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = (*(double (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 1408))(*(_QWORD *)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLMediaElement_playbackRate(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMediaElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      (*(void (**)(uint64_t, double))(*(_QWORD *)v10 + 1416))(v10, v11);
      return 1;
    }
    JSC::throwTypeError();
  }
  return 0;
}

uint64_t WebCore::jsHTMLMediaElement_preservesPitch(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 896))
    return 7;
  else
    return 6;
}

uint64_t WebCore::setJSHTMLMediaElement_preservesPitch(uint64_t a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  double v10;
  char v11;
  unsigned __int8 *v12;
  BOOL v14;
  int v15;
  uint64_t v16;
  int *v17;
  int v18;

  v4 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMediaElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v14 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v10 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v11 = a3 == 7;
      goto LABEL_16;
    }
    v15 = *(unsigned __int8 *)(a3 + 5);
    if (v15 == 3)
    {
      v18 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v15 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v11 = 1;
          goto LABEL_16;
        }
        v14 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v16 = *(_QWORD *)(a3 + 8);
      if ((v16 & 1) != 0)
        v17 = (int *)(a3 + 16);
      else
        v17 = (int *)(v16 + 4);
      v18 = *v17;
    }
    v14 = v18 == 0;
LABEL_37:
    v11 = !v14;
    goto LABEL_16;
  }
  v11 = v10 > 0.0 || v10 < 0.0;
LABEL_16:
  v12 = *(unsigned __int8 **)(a2 + 24);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  WebCore::HTMLMediaElement::setPreservesPitch(v12, v11);
  return 1;
}

unint64_t WebCore::jsHTMLMediaElement_played(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  WTF *v6;
  WTF *v8;
  WTF *v9;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  (*(void (**)(WTF **__return_ptr))(**(_QWORD **)(a2 + 24) + 1424))(&v9);
  v5 = WebCore::wrap<WebCore::TimeRanges>(a1, v3, (uint64_t)v9);
  v6 = v9;
  v9 = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 1)
    {
      v8 = (WTF *)*((_QWORD *)v6 + 1);
      if (v8)
      {
        *((_QWORD *)v6 + 1) = 0;
        *((_DWORD *)v6 + 4) = 0;
        WTF::fastFree(v8, v4);
      }
      WTF::fastFree(v6, v4);
    }
    else
    {
      --*(_DWORD *)v6;
    }
  }
  return v5;
}

unint64_t WebCore::jsHTMLMediaElement_seekable(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  WTF *v6;
  WTF *v8;
  WTF *v9;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  (*(void (**)(WTF **__return_ptr))(**(_QWORD **)(a2 + 24) + 1432))(&v9);
  v5 = WebCore::wrap<WebCore::TimeRanges>(a1, v3, (uint64_t)v9);
  v6 = v9;
  v9 = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 1)
    {
      v8 = (WTF *)*((_QWORD *)v6 + 1);
      if (v8)
      {
        *((_QWORD *)v6 + 1) = 0;
        *((_DWORD *)v6 + 4) = 0;
        WTF::fastFree(v8, v4);
      }
      WTF::fastFree(v6, v4);
    }
    else
    {
      --*(_DWORD *)v6;
    }
  }
  return v5;
}

uint64_t WebCore::jsHTMLMediaElement_ended(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(v2 + 1632))
  {
    v3 = *(_QWORD *)(v2 + 1136);
    if (v3)
    {
      if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 72) + 1048))(*(_QWORD *)(v3 + 72)) & 1) != 0)
        return 7;
    }
  }
  if (!WebCore::HTMLMediaElement::endedPlayback((WebCore::HTMLMediaElement *)v2))
    return 6;
  v4 = *(_QWORD *)(v2 + 1416);
  if (v4)
    (*(void (**)(_QWORD))(**(_QWORD **)(v4 + 256) + 40))(*(_QWORD *)(v4 + 256));
  else
    v5 = *(double *)(v2 + 872);
  if (v5 > 0.0)
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsHTMLMediaElement_autoplay(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::autoplayAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::autoplayAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::autoplayAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLMediaElement_autoplay(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMediaElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::autoplayAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLMediaElement_loop(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::loopAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::loopAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::loopAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLMediaElement_loop(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMediaElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::loopAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLMediaElement_controls(uint64_t a1, uint64_t a2)
{
  if (WebCore::HTMLMediaElement::controls(*(WebCore::HTMLMediaElement **)(a2 + 24)))
    return 7;
  else
    return 6;
}

uint64_t WebCore::setJSHTMLMediaElement_controls(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v17;
  int v18;
  uint64_t v19;
  int *v20;
  int v21;
  _QWORD v22[4];
  BOOL v23;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMediaElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v17 = (_DWORD)a3 == 0;
    goto LABEL_39;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v18 = *(unsigned __int8 *)(a3 + 5);
    if (v18 == 3)
    {
      v21 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v18 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v17 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_39;
      }
      v19 = *(_QWORD *)(a3 + 8);
      if ((v19 & 1) != 0)
        v20 = (int *)(a3 + 16);
      else
        v20 = (int *)(v19 + 4);
      v21 = *v20;
    }
    v17 = v21 == 0;
LABEL_39:
    v12 = !v17;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(_QWORD *)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  v23 = v12;
  v14 = *(_QWORD *)(v13 + 1824);
  v15 = *(_QWORD *)(v13 + 1832);
  v22[0] = "HTMLMediaElement";
  v22[1] = 17;
  v22[2] = "setControls";
  v22[3] = v15;
  if (*(_BYTE *)(v14 + 12))
  {
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier,BOOL>((uint64_t)&WebCore::LogMedia, 0, (WTF::Logger::LogSiteIdentifier *)v22);
    v12 = v23;
  }
  WebCore::Element::setBooleanAttribute((WTF::StringImpl **)v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::controlsAttr, v12, a4);
  return 1;
}

unint64_t WebCore::jsHTMLMediaElement_volume(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = (*(double (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 1456))(*(_QWORD *)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLMediaElement_volume(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  JSValue v15;
  WTF::StringImpl *v16;
  double v17;
  WTF::StringImpl *v18;
  int v19[2];
  WTF::StringImpl *v20;
  char v21;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMediaElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)v19 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v19, a1);
    v11 = v17;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  (*(void (**)(int *__return_ptr, uint64_t, double))(*(_QWORD *)v10 + 1464))(v19, v10, v11);
  if (v21)
  {
    v13 = (WTF::StringImpl *)LOBYTE(v19[0]);
    v14 = v20;
    v20 = 0;
    v18 = v14;
    if (!*(_QWORD *)(v4 + 16))
    {
      v15.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v19[0]), (JSC::JSGlobalObject *)&v18);
      JSC::VM::throwException((JSC::VM *)v4, a1, v15);
      v14 = v18;
    }
    v18 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v13);
      else
        *(_DWORD *)v14 -= 2;
    }
    if (v21)
    {
      v16 = v20;
      v20 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v13);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
  }
  return 1;
}

uint64_t WebCore::jsHTMLMediaElement_muted(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 1472))(*(_QWORD *)(a2 + 24)))
    return 7;
  else
    return 6;
}

uint64_t WebCore::setJSHTMLMediaElement_muted(uint64_t a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  double v10;
  _BOOL8 v11;
  uint64_t v12;
  BOOL v14;
  int v15;
  uint64_t v16;
  int *v17;
  int v18;

  v4 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMediaElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v14 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v10 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v11 = a3 == 7;
      goto LABEL_16;
    }
    v15 = *(unsigned __int8 *)(a3 + 5);
    if (v15 == 3)
    {
      v18 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v15 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v11 = 1;
          goto LABEL_16;
        }
        v14 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v16 = *(_QWORD *)(a3 + 8);
      if ((v16 & 1) != 0)
        v17 = (int *)(a3 + 16);
      else
        v17 = (int *)(v16 + 4);
      v18 = *v17;
    }
    v14 = v18 == 0;
LABEL_37:
    v11 = !v14;
    goto LABEL_16;
  }
  v11 = v10 > 0.0 || v10 < 0.0;
LABEL_16:
  v12 = *(_QWORD *)(a2 + 24);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  (*(void (**)(uint64_t, _BOOL8))(*(_QWORD *)v12 + 1480))(v12, v11);
  return 1;
}

uint64_t WebCore::jsHTMLMediaElement_defaultMuted(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::mutedAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::mutedAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::mutedAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLMediaElement_defaultMuted(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMediaElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::mutedAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLMediaElement_webkitKeys(uint64_t a1, uint64_t a2)
{
  WebCore::WebKitMediaKeys *v2;

  v2 = *(WebCore::WebKitMediaKeys **)(*(_QWORD *)(a2 + 24) + 1576);
  if (v2)
    return WebCore::wrap<WebCore::WebKitMediaKeys>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::jsHTMLMediaElement_mediaKeys(uint64_t a1, uint64_t a2)
{
  WebCore::MediaKeys *v2;

  v2 = *(WebCore::MediaKeys **)(*(_QWORD *)(a2 + 24) + 1584);
  if (v2)
    return WebCore::wrap<WebCore::MediaKeys>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::jsHTMLMediaElement_onencrypted(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 728), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLMediaElement_onencrypted(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMediaElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 728), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsHTMLMediaElement_onwaitingforkey(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2280), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSHTMLMediaElement_onwaitingforkey(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMediaElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v11 + 24) += 2;
  v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
    v13 = WebCore::threadGlobalDataSlow(a1);
  v14 = *(_QWORD *)(v13 + 40);
  if (!v14)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
    v14 = *(_QWORD *)(v13 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 2280), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, v15);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

unint64_t WebCore::jsHTMLMediaElement_audioTracks(int a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v4;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = WebCore::HTMLMediaElement::ensureAudioTracks(*(WebCore::HTMLMediaElement **)(a2 + 24));
  return WebCore::wrap<WebCore::AudioTrackList>(a1, v3, v4);
}

unint64_t WebCore::jsHTMLMediaElement_textTracks(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = WebCore::HTMLMediaElement::ensureTextTracks(*(WebCore::HTMLMediaElement **)(a2 + 24));
  return WebCore::wrap<WebCore::TextTrackList>(a1, v3, v4);
}

unint64_t WebCore::jsHTMLMediaElement_videoTracks(int a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v4;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = WebCore::HTMLMediaElement::ensureVideoTracks(*(WebCore::HTMLMediaElement **)(a2 + 24));
  return WebCore::wrap<WebCore::VideoTrackList>(a1, v3, v4);
}

uint64_t WebCore::jsHTMLMediaElement_mediaGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::mediagroupAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::mediagroupAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::mediagroupAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLMediaElement_mediaGroup(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMediaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::mediagroupAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::mediagroupAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::mediagroupAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::mediagroupAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLMediaElement_controller(int a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 1416);
  if (v2)
    return WebCore::wrap<WebCore::MediaController>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::setJSHTMLMediaElement_controller(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF **v8;
  WebCore::MediaController *v9;
  uint64_t v10;
  BOOL v11;
  char **v12;
  BOOL v13;
  uint64_t v16;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMediaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF ***)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v9 = 0;
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 56);
    if ((a3 & 0xFFFE000000000002) != 0)
      goto LABEL_25;
    v10 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
    v11 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
    v12 = (char **)(16 * v10);
    if ((_DWORD)v10)
      v13 = v12 == &WebCore::JSMediaController::s_info;
    else
      v13 = 1;
    if (!v13)
    {
      do
      {
        v12 = (char **)v12[2];
        v11 = v12 != 0;
      }
      while (v12 != &WebCore::JSMediaController::s_info && v12 != 0);
    }
    if (!v11)
    {
LABEL_25:
      WebCore::throwAttributeTypeError(a1, (int)&v16, "HTMLMediaElement", 17, "controller", 11, "MediaController", 16);
      return 0;
    }
    v9 = (WebCore::MediaController *)(*(_QWORD *)(a3 + 24) - 32);
  }
  WebCore::HTMLMediaElement::setControllerForBindings(v8, v9, (const WTF::StringImpl *)a3);
  return 1;
}

uint64_t WebCore::jsHTMLMediaElement_webkitCurrentPlaybackTargetIsWireless(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _QWORD v8[4];

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 1824);
  v4 = *(_QWORD *)(v2 + 1832);
  v8[0] = "HTMLMediaElement";
  v8[1] = 17;
  v8[2] = "webkitCurrentPlaybackTargetIsWireless";
  v8[3] = v4;
  v5 = (_BYTE *)(v2 + 1697);
  if (*(_BYTE *)(v3 + 12))
  {
    if (WebCore::LogMedia && byte_1ECE7C490 >= 3u)
      WTF::Logger::log<WTF::Logger::LogSiteIdentifier,BOOL>((uint64_t)&WebCore::LogMedia, 3, (WTF::Logger::LogSiteIdentifier *)v8);
  }
  if (*v5)
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsHTMLMediaElement_remote(int a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::RemotePlayback>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 1840));
}

uint64_t WebCore::jsHTMLMediaElement_disableRemotePlayback(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::disableremoteplaybackAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::disableremoteplaybackAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::disableremoteplaybackAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLMediaElement_disableRemotePlayback(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMediaElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::disableremoteplaybackAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLMediaElement_sinkId(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 1712);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::JSHTMLMediaElement::subspaceForImpl(WebCore::JSHTMLMediaElement *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4480);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 4480);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 40, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 4480);
    *(_QWORD *)(v8 + 4480) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 4480);
  *(_QWORD *)(v3 + 4480) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSHTMLMediaElementOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v10 = v9[15];
  if (!v10)
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  v11 = *(_QWORD *)(v10 + 8);
  if (!v11 || *(_BYTE *)(v11 + 180) || !v9[16] && !(*(unsigned int (**)(_QWORD *))(v9[14] + 64))(v9 + 14))
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  if (a5)
  {
    *a5 = "ActiveDOMObject with pending activity";
    a5[1] = 38;
  }
  return 1;
}

unsigned int *WebCore::JSHTMLMediaElementOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned int *result;
  int v4;
  unsigned int *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int *v26;

  result = *(unsigned int **)(*(_QWORD *)a2 + 24);
  v4 = result[6];
  result[6] = v4 + 2;
  v5 = result + 2;
  if (!result)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v8 = *(_QWORD *)(a3 + 32);
    v6 = (uint64_t *)(a3 + 32);
    v7 = v8;
    if (v8)
    {
      v9 = *(_DWORD *)(v7 - 8);
      v10 = ((unint64_t)result + ~((_QWORD)result << 32)) ^ (((unint64_t)result + ~((_QWORD)result << 32)) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(unsigned int **)(v7 + 16 * v13);
      if (v14 != result)
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(unsigned int **)(v7 + 16 * v13);
          ++v15;
          if (v14 == result)
            goto LABEL_16;
        }
        v13 = *(unsigned int *)(v7 - 4);
      }
LABEL_16:
      if (v13 != *(_DWORD *)(v7 - 4))
      {
        v16 = (_QWORD *)(v7 + 16 * v13);
        *v16 = -1;
        v19 = v16[1];
        v18 = v16 + 1;
        v17 = v19;
        if (v19)
        {
          *(_QWORD *)(v17 + 8) = 3;
          *v18 = 0;
        }
        ++*(_DWORD *)(*v6 - 16);
        v20 = *v6;
        if (*v6)
          v21 = *(_DWORD *)(v20 - 12) - 1;
        else
          v21 = -1;
        *(_DWORD *)(v20 - 12) = v21;
        v22 = *v6;
        if (*v6)
        {
          v23 = 6 * *(_DWORD *)(v22 - 12);
          v24 = *(_DWORD *)(v22 - 4);
          if (v23 < v24 && v24 >= 9)
          {
            v26 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v24 >> 1, 0);
            result = v26;
          }
        }
      }
    }
    v4 = result[6] - 2;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (v4)
  {
    result[6] = v4;
  }
  else if ((*((_WORD *)result + 15) & 0x400) == 0)
  {
    return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
  }
  return result;
}

uint64_t WebCore::JSHTMLMediaElement::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSHTMLMediaElement::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

uint64_t WebCore::JSHTMLMenuElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLMenuElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLMenuElementPrototype::create(WebCore::JSHTMLMenuElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSHTMLMenuElement::s_info, (uint64_t)&WebCore::JSHTMLMenuElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMenuElement>,(WebCore::DOMConstructorID)551>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4408);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMenuElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLMenuElement::s_info + ~((_QWORD)&WebCore::JSHTMLMenuElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLMenuElement::s_info + ~((_QWORD)&WebCore::JSHTMLMenuElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLMenuElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLMenuElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLMenuElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLMenuElementPrototype::create((WebCore::JSHTMLMenuElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLMenuElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLMenuElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4408) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLMenuElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLMenuElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMenuElement>,(WebCore::DOMConstructorID)551>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLMenuElement_compact(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::compactAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::compactAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::compactAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLMenuElement_compact(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMenuElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMenuElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::compactAttr, v12, a4);
  return 1;
}

uint64_t WebCore::JSHTMLMetaElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLMetaElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLMetaElementPrototype::create(WebCore::JSHTMLMetaElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(this, (uint64_t)&WebCore::JSHTMLMetaElement::s_info, &WebCore::JSHTMLMetaElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMetaElement>,(WebCore::DOMConstructorID)552>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4416);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMetaElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLMetaElement::s_info + ~((_QWORD)&WebCore::JSHTMLMetaElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLMetaElement::s_info + ~((_QWORD)&WebCore::JSHTMLMetaElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLMetaElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLMetaElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLMetaElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLMetaElementPrototype::create((WebCore::JSHTMLMetaElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLMetaElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLMetaElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4416) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLMetaElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLMetaElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMetaElement>,(WebCore::DOMConstructorID)552>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLMetaElement_content(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3
    && ((v4 = *(_DWORD *)(v3 + 4), (v4 & 1) != 0)
      ? (v5 = *(_QWORD *)(v3 + 40), LODWORD(v6) = *(_DWORD *)(v3 + 52))
      : (v5 = v3 + 32, LODWORD(v6) = v4 >> 5),
        (_DWORD)v6))
  {
    v6 = v6;
    v7 = (uint64_t *)(v5 + 8);
    while (1)
    {
      v8 = *(v7 - 1);
      if (v8 == WebCore::HTMLNames::contentAttr
        || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::contentAttr + 24)
        && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::contentAttr + 32))
      {
        break;
      }
      v7 += 2;
      if (!--v6)
      {
        v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
        break;
      }
    }
  }
  else
  {
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_13;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_13:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLMetaElement_content(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v7;
  int v8;
  _BOOL8 v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMetaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMetaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v8 = v22;
  v9 = v22 == 0;
  if (!v22)
  {
    v10 = v21;
    v21 = 0;
    v23 = v10;
    v11 = *((_QWORD *)v7 + 13);
    if (v11
      && ((v12 = *(_DWORD *)(v11 + 4), (v12 & 1) != 0)
        ? (v13 = *(uint64_t **)(v11 + 40), v14 = *(_DWORD *)(v11 + 52))
        : (v13 = (uint64_t *)(v11 + 32), v14 = v12 >> 5),
          v14))
    {
      v15 = 0;
      while (1)
      {
        v16 = *v13;
        if (*v13 == WebCore::HTMLNames::contentAttr
          || *(_QWORD *)(v16 + 24) == *(_QWORD *)(WebCore::HTMLNames::contentAttr + 24)
          && *(_QWORD *)(v16 + 32) == *(_QWORD *)(WebCore::HTMLNames::contentAttr + 32))
        {
          break;
        }
        ++v15;
        v13 += 2;
        if (v14 == v15)
          goto LABEL_17;
      }
    }
    else
    {
LABEL_17:
      v15 = 0xFFFFFFFFLL;
    }
    WebCore::Element::setAttributeInternal(v7, v15, (WebCore::TreeScope *)&WebCore::HTMLNames::contentAttr, &v23, 0);
    v18 = v23;
    v23 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    v8 = v22;
  }
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v8])(&v23, &v21);
  return v9;
}

uint64_t WebCore::jsHTMLMetaElement_httpEquiv(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::http_equivAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::http_equivAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::http_equivAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLMetaElement_httpEquiv(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMetaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMetaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::http_equivAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::http_equivAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::http_equivAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::http_equivAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLMetaElement_media(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::mediaAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLMetaElement_media(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMetaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMetaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::mediaAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::mediaAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLMetaElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLMetaElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMetaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMetaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLMetaElement_scheme(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::schemeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::schemeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::schemeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLMetaElement_scheme(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLMetaElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLMetaElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::schemeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::schemeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::schemeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::schemeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLMeterElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLMeterElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLMeterElementPrototype::create(WebCore::JSHTMLMeterElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<8u>(this, (uint64_t)&WebCore::JSHTMLMeterElement::s_info, (uint64_t)&WebCore::JSHTMLMeterElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMeterElement>,(WebCore::DOMConstructorID)553>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4424);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMeterElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLMeterElement::s_info + ~((_QWORD)&WebCore::JSHTMLMeterElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLMeterElement::s_info + ~((_QWORD)&WebCore::JSHTMLMeterElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLMeterElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLMeterElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLMeterElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLMeterElementPrototype::create((WebCore::JSHTMLMeterElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLMeterElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLMeterElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4424) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLMeterElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLMeterElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMeterElement>,(WebCore::DOMConstructorID)553>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLMeterElement_value(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  WebCore::HTMLMeterElement::value(*(WebCore::HTMLMeterElement **)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLMeterElement_value(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::HTMLMeterElement *v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMeterElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMeterElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::HTMLMeterElement **)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      WebCore::HTMLMeterElement::setValue(v10, v11);
      return 1;
    }
    JSC::throwTypeError();
  }
  return 0;
}

unint64_t WebCore::jsHTMLMeterElement_min(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = WebCore::HTMLMeterElement::min(*(WebCore::HTMLMeterElement **)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLMeterElement_min(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::HTMLMeterElement *v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMeterElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMeterElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::HTMLMeterElement **)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      WebCore::HTMLMeterElement::setMin(v10, v11);
      return 1;
    }
    JSC::throwTypeError();
  }
  return 0;
}

unint64_t WebCore::jsHTMLMeterElement_max(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  WebCore::HTMLMeterElement::max(*(WebCore::HTMLMeterElement **)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLMeterElement_max(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::HTMLMeterElement *v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMeterElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMeterElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::HTMLMeterElement **)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      WebCore::HTMLMeterElement::setMax(v10, v11);
      return 1;
    }
    JSC::throwTypeError();
  }
  return 0;
}

unint64_t WebCore::jsHTMLMeterElement_low(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  WebCore::HTMLMeterElement::low(*(WebCore::HTMLMeterElement **)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLMeterElement_low(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::HTMLMeterElement *v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMeterElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMeterElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::HTMLMeterElement **)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      WebCore::HTMLMeterElement::setLow(v10, v11);
      return 1;
    }
    JSC::throwTypeError();
  }
  return 0;
}

unint64_t WebCore::jsHTMLMeterElement_high(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  WebCore::HTMLMeterElement::high(*(WebCore::HTMLMeterElement **)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLMeterElement_high(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::HTMLMeterElement *v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMeterElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMeterElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::HTMLMeterElement **)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      WebCore::HTMLMeterElement::setHigh(v10, v11);
      return 1;
    }
    JSC::throwTypeError();
  }
  return 0;
}

unint64_t WebCore::jsHTMLMeterElement_optimum(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  WebCore::HTMLMeterElement::optimum(*(WebCore::HTMLMeterElement **)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLMeterElement_optimum(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::HTMLMeterElement *v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMeterElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMeterElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::HTMLMeterElement **)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      WebCore::HTMLMeterElement::setOptimum(v10, v11);
      return 1;
    }
    JSC::throwTypeError();
  }
  return 0;
}

uint64_t WebCore::jsHTMLMeterElement_labels(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t Wrapper;
  uint64_t v17;
  _DWORD *v18;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLElement::labels(*(WebCore::HTMLElement **)(a2 + 24), &v17);
  v3 = (_DWORD *)v17;
  if (!v17)
    return 2;
  v5 = *(_QWORD *)(v2 + 3320);
  if (!*(_DWORD *)(v5 + 48))
  {
    v6 = *(_QWORD *)(v17 + 8);
    if (v6)
      goto LABEL_5;
LABEL_7:
    ++*(_DWORD *)(v17 + 16);
    v18 = v3;
    Wrapper = WebCore::createWrapper(v2, (uint64_t *)&v18);
    v7 = v18;
    v18 = 0;
    if (v7)
    {
      if (v7[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
      else
        --v7[4];
    }
    v3 = (_DWORD *)v17;
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(v5 + 32);
  if (!v8)
    goto LABEL_7;
  v9 = *(_DWORD *)(v8 - 8);
  v10 = (~(v17 << 32) + v17) ^ ((unint64_t)(~(v17 << 32) + v17) >> 22);
  v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
  v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
  v13 = v9 & ((v12 >> 31) ^ v12);
  v14 = *(_QWORD *)(v8 + 16 * v13);
  if (v14 != v17)
  {
    v15 = 1;
    while (v14)
    {
      v13 = ((_DWORD)v13 + v15) & v9;
      v14 = *(_QWORD *)(v8 + 16 * v13);
      ++v15;
      if (v14 == v17)
        goto LABEL_22;
    }
    goto LABEL_7;
  }
LABEL_22:
  v6 = *(_QWORD *)(v8 + 16 * v13 + 8);
  if (!v6)
    goto LABEL_7;
LABEL_5:
  if ((*(_BYTE *)(v6 + 8) & 3) != 0)
    goto LABEL_7;
  Wrapper = *(_QWORD *)v6;
  if (!*(_QWORD *)v6)
    goto LABEL_7;
LABEL_11:
  v17 = 0;
  if (v3)
  {
    if (v3[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
    else
      --v3[4];
  }
  return Wrapper;
}

uint64_t WebCore::JSHTMLModElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLModElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLModElementPrototype::create(WebCore::JSHTMLModElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSHTMLModElement::s_info, &WebCore::JSHTMLModElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLModElement>,(WebCore::DOMConstructorID)554>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4432);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLModElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLModElement::s_info + ~((_QWORD)&WebCore::JSHTMLModElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLModElement::s_info + ~((_QWORD)&WebCore::JSHTMLModElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLModElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLModElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLModElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLModElementPrototype::create((WebCore::JSHTMLModElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLModElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLModElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4432) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLModElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLModElementPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLModElement>,(WebCore::DOMConstructorID)554>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLModElement_cite(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  char v23;
  char v24;
  char **v25;
  char *v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::citeAttr, a3, a4, a5);
  v9 = &v22;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v22);
  if ((v23 & 2) == 0)
  {
    v9 = &v22;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v22))
    {
      v21 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v21 != -1)
      {
        v26 = &v24;
        v25 = &v26;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (v11)
    *(_DWORD *)v11 += 2;
  v12 = v22;
  v22 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v13 = *(_QWORD *)(a1 + 56);
  v14 = (uint64_t *)(v13 + 41968);
  if (!v11)
    return *v14;
  v15 = *((_DWORD *)v11 + 1);
  if (v15)
  {
    if (v15 != 1)
    {
LABEL_12:
      v16 = *(_QWORD *)(v13 + 64760);
      if (!v16 || v11 != *(WTF::StringImpl **)(v16 + 8))
        v16 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_15;
    }
    v18 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
    if ((*((_BYTE *)v11 + 16) & 4) != 0)
    {
      v19 = *v18;
    }
    else
    {
      v20 = *(unsigned __int16 *)v18;
      if (v20 > 0xFF)
        goto LABEL_12;
      v19 = v20;
    }
    v16 = *(_QWORD *)(v13 + 8 * v19 + 42216);
  }
  else
  {
    v16 = *v14;
  }
LABEL_15:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(v11, v10);
  else
    *(_DWORD *)v11 -= 2;
  return v16;
}

BOOL WebCore::setJSHTMLModElement_cite(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLModElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLModElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::citeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::citeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::citeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::citeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLModElement_dateTime(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::datetimeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::datetimeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::datetimeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLModElement_dateTime(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLModElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLModElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::datetimeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::datetimeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::datetimeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::datetimeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLModelElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLModelElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLModelElementPrototype::create(WebCore::JSHTMLModelElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<23u>(this, (uint64_t)&WebCore::JSHTMLModelElement::s_info, (uint64_t)&WebCore::JSHTMLModelElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLModelElement>,(WebCore::DOMConstructorID)173>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1384);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLModelElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLModelElement::s_info + ~((_QWORD)&WebCore::JSHTMLModelElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLModelElement::s_info + ~((_QWORD)&WebCore::JSHTMLModelElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLModelElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLModelElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLModelElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLModelElementPrototype::create((WebCore::JSHTMLModelElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLModelElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLModelElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1384) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLModelElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLModelElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLModelElement>,(WebCore::DOMConstructorID)173>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLModelElement_width(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::widthAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    v8 = 0;
  else
    v8 = v10 & ~((int)v10 >> 31);
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLModelElement_width(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLModelElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLModelElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::widthAttr, v11);
  return v9;
}

unint64_t WebCore::jsHTMLModelElement_height(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::heightAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    v8 = 0;
  else
    v8 = v10 & ~((int)v10 >> 31);
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLModelElement_height(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLModelElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLModelElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::heightAttr, v11);
  return v9;
}

uint64_t WebCore::jsHTMLModelElement_src(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  __int128 v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  unint64_t v18;
  WTF::StringImpl *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  char v24;
  char v25;
  WTF::StringImpl **v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v22 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::srcAttr, a3, a4, a5);
  v9 = &v23;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v23);
  if ((v24 & 2) == 0)
  {
    v9 = &v23;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v23))
    {
      v18 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v18 != -1)
      {
        v19 = (WTF::StringImpl *)&v25;
        v26 = &v19;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v26, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (*v9)
    *(_DWORD *)v11 += 2;
  v19 = v11;
  v12 = *(_OWORD *)(v9 + 3);
  v20 = *(_OWORD *)(v9 + 1);
  v21 = v12;
  v13 = v23;
  v23 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v10);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v15 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>(a1, (uint64_t)&v22, (uint64_t *)&v19);
  v16 = v19;
  v19 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  return v15;
}

BOOL WebCore::setJSHTMLModelElement_src(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLModelElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLModelElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::srcAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::srcAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLModelElement_currentSrc(uint64_t a1, uint64_t a2, const WTF::String *a3)
{
  return JSC::jsOwnedString(*(JSC **)(a1 + 56), (JSC::VM *)(*(_QWORD *)(a2 + 24) + 168), a3);
}

uint64_t WebCore::jsHTMLModelElement_complete(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 240))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsHTMLModelElement_ready(JSC::JSGlobalObject *a1, uint64_t a2, JSC::Structure *a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  JSC::VM *v15;
  unint64_t v16;
  uint64_t v17;
  WebCore::DOMGuardedObject *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unsigned __int8 v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  WebCore::JSDOMGlobalObject *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v38[8];
  WTF::StringImpl *v39;
  objc_class *v40;

  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v5 = (char **)(16 * v3);
    if ((_DWORD)v3)
      v6 = v5 == &WebCore::JSHTMLModelElement::s_info;
    else
      v6 = 1;
    if (!v6)
    {
      do
      {
        v5 = (char **)v5[2];
        v4 = v5 != 0;
      }
      while (v5 != &WebCore::JSHTMLModelElement::s_info && v5 != 0);
    }
    if (v4)
    {
      v8 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
      v9 = *(_QWORD **)(*(_QWORD *)(a2 + 24) + 232);
      v10 = *((unsigned int *)v9 + 13);
      if ((_DWORD)v10)
      {
        v11 = v9[5];
        v12 = 8 * v10;
        while (1)
        {
          v13 = *(_QWORD *)(*(_QWORD *)v11 + 32);
          if (v13)
          {
            if ((*(_BYTE *)(v13 + 8) & 3) == 0 && *(_QWORD *)v13 == v8)
              break;
          }
          v11 += 8;
          v12 -= 8;
          if (!v12)
            goto LABEL_18;
        }
        v26 = *(_BYTE **)(*(_QWORD *)v11 + 24);
        if (!v26)
          return 10;
        v27 = *(_QWORD *)v26;
        if (!*(_QWORD *)v26 || (v26[8] & 3) != 0)
          return 10;
        if ((v27 & 0xFFFE000000000002) != 0)
          return 0;
        if (*(_BYTE *)(v27 + 5) == 68)
          return *(_QWORD *)v26;
        return 0;
      }
LABEL_18:
      v14 = *(_DWORD *)(v8 + 1164);
      if (v14)
        v15 = (JSC::VM *)(16 * (v14 & 0xFFFFFFFE));
      else
        v15 = 0;
      v16 = JSC::JSPromise::create(*(JSC::JSPromise **)(v8 + 56), v15, a3);
      v17 = WTF::fastMalloc((WTF *)0x30);
      v18 = WebCore::DOMGuardedObject::DOMGuardedObject((WebCore::DOMGuardedObject *)v17, v8, v16);
      *(_QWORD *)v18 = &off_1E3226868;
      *((_DWORD *)v18 + 10) = 1;
      *((_BYTE *)v18 + 44) = 0;
      v19 = *((unsigned int *)v9 + 13);
      if ((_DWORD)v19 == *((_DWORD *)v9 + 12))
      {
        v20 = v19 + (v19 >> 2);
        if (v20 >= 0x10)
          v21 = v20 + 1;
        else
          v21 = 16;
        if (v21 <= v19 + 1)
          v22 = v19 + 1;
        else
          v22 = v21;
        v23 = (_QWORD *)v9[5];
        if (v22 < 2)
        {
          v24 = v9 + 7;
          v9[5] = v9 + 7;
          *((_DWORD *)v9 + 12) = 1;
        }
        else
        {
          if (v22 >> 29)
          {
            __break(0xC471u);
            JUMPOUT(0x194C457D8);
          }
          v24 = (void *)WTF::fastMalloc((WTF *)(8 * v22));
          *((_DWORD *)v9 + 12) = v22;
          v9[5] = v24;
        }
        memcpy(v24, v23, 8 * v19);
        if (v9 + 7 != v23 && v23)
        {
          if ((_QWORD *)v9[5] == v23)
          {
            v9[5] = 0;
            *((_DWORD *)v9 + 12) = 0;
          }
          WTF::fastFree((WTF *)v23, v29);
        }
        v19 = *((unsigned int *)v9 + 13);
        v25 = (uint64_t *)(v9[5] + 8 * v19);
      }
      else
      {
        v25 = (uint64_t *)(v9[5] + 8 * v19);
      }
      ++*(_DWORD *)(v17 + 16);
      *v25 = v17;
      *((_DWORD *)v9 + 13) = v19 + 1;
      if (!*((_BYTE *)v9 + 32))
        goto LABEL_50;
      if (!*((_BYTE *)v9 + 24))
      {
        v34 = (WebCore::JSDOMGlobalObject *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)*v9 + 16))(*v9);
        WebCore::DeferredPromise::resolve<WebCore::IDLInterface<WebCore::HTMLModelElement>>(v17, v34);
        goto LABEL_50;
      }
      v30 = *((_BYTE *)v9 + 8);
      v31 = (WTF::StringImpl *)v9[2];
      if (v31)
        *(_DWORD *)v31 += 4;
      v39 = v31;
      v40 = 0;
      v38[0] = v30;
      WebCore::DeferredPromise::reject(v17, v38, 0, &v40);
      v33 = v39;
      v39 = 0;
      if (v33)
      {
        if (*(_DWORD *)v33 == 2)
        {
          WTF::StringImpl::destroy(v33, v32);
          if (v31)
          {
LABEL_47:
            if (*(_DWORD *)v31 == 2)
              WTF::StringImpl::destroy(v31, v32);
            else
              *(_DWORD *)v31 -= 2;
          }
LABEL_50:
          v35 = *(_QWORD *)(v17 + 24);
          if (v35 && (v36 = *(_QWORD *)v35) != 0 && (*(_BYTE *)(v35 + 8) & 3) == 0)
          {
            if ((v36 & 0xFFFE000000000002) != 0)
            {
              v28 = 0;
            }
            else if (*(_BYTE *)(v36 + 5) == 68)
            {
              v28 = *(_QWORD *)v35;
            }
            else
            {
              v28 = 0;
            }
          }
          else
          {
            v28 = 10;
          }
          if (*(_DWORD *)(v17 + 16) == 1)
            (*(void (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
          else
            --*(_DWORD *)(v17 + 16);
          return v28;
        }
        *(_DWORD *)v33 -= 2;
      }
      if (v31)
        goto LABEL_47;
      goto LABEL_50;
    }
  }
  return WebCore::rejectPromiseWithGetterTypeError(a1, (JSC **)&WebCore::JSHTMLModelElement::s_info, a3);
}

uint64_t WebCore::jsHTMLModelElement_interactive(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::interactiveAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::interactiveAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::interactiveAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLModelElement_interactive(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLModelElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLModelElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::interactiveAttr, v12, a4);
  return 1;
}

uint64_t WebCore::JSHTMLModelElement::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSHTMLModelElement::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSHTMLModelElement::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

unint64_t WebCore::convertDictionaryToJS(uint64_t a1, uint64_t a2, double *a3)
{
  uint64_t v4;
  unint64_t v5;
  size_t v6;
  unint64_t v7;
  int v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v25;
  unint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v6 = 8 * *(unsigned __int8 *)(v5 + 14);
  v7 = JSC::allocateCell<JSC::JSFinalObject>(v4, v6 + 16);
  v8 = *(_DWORD *)(v5 + 8);
  *(_DWORD *)v7 = v5 >> 4;
  *(_DWORD *)(v7 + 4) = v8;
  *(_QWORD *)(v7 + 8) = 0;
  bzero((void *)(v7 + 16), v6);
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  v9 = *a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v10 = (int)v9, v9 == (double)(int)v10)
    && ((_DWORD)v10 || (*(_QWORD *)&v9 & 0x8000000000000000) == 0))
  {
    v11 = v10 | 0xFFFE000000000000;
  }
  else
  {
    v11 = *(_QWORD *)&v9 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v12 = v25;
  v25 = 0;
  v26 = v7;
  v27 = -1;
  v28 = 0x1000000;
  v29 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v12, v11, 0, (uint64_t)&v25);
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v13);
    else
      *(_DWORD *)v12 -= 2;
  }
  v14 = a3[2];
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v15 = (int)v14, v14 == (double)(int)v15)
    && ((_DWORD)v15 || (*(_QWORD *)&v14 & 0x8000000000000000) == 0))
  {
    v16 = v15 | 0xFFFE000000000000;
  }
  else
  {
    v16 = *(_QWORD *)&v14 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v17 = v25;
  v25 = 0;
  v26 = v7;
  v27 = -1;
  v28 = 0x1000000;
  v29 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v17, v16, 0, (uint64_t)&v25);
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v18);
    else
      *(_DWORD *)v17 -= 2;
  }
  v19 = a3[1];
  if ((*(_QWORD *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v20 = (int)v19, v19 == (double)(int)v20)
    && ((_DWORD)v20 || (*(_QWORD *)&v19 & 0x8000000000000000) == 0))
  {
    v21 = v20 | 0xFFFE000000000000;
  }
  else
  {
    v21 = *(_QWORD *)&v19 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v22 = v25;
  v25 = 0;
  v26 = v7;
  v27 = -1;
  v28 = 0x1000000;
  v29 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v22, v21, 0, (uint64_t)&v25);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  return v7;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  double v23;
  uint64_t v24;
  unint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  double v28;
  uint64_t v29;
  unint64_t v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  unsigned __int8 *v34;
  unsigned int v35;
  unsigned int v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v11 = *(unsigned __int8 *)a3;
  v12 = *(_QWORD *)(a1 + 56);
  v13 = (uint64_t *)(v12 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_2::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_3::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_4::operator() const(void)::impl += 2;
    v10 = (WTF::StringImpl *)(WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_5::operator() const(void)::impl
                                          + 2);
    WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_5::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_0::operator() const(void)::impl;
    unk_1EE2F47F0 = &WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_1::operator() const(void)::impl;
    qword_1EE2F47F8 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_2::operator() const(void)::impl;
    unk_1EE2F4800 = &WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_3::operator() const(void)::impl;
    qword_1EE2F4808 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_4::operator() const(void)::impl;
    unk_1EE2F4810 = &WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_5::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_6::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_7::operator() const(void)::impl += 2;
    qword_1EE2F4818 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_6::operator() const(void)::impl;
    unk_1EE2F4820 = &WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_7::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_8::operator() const(void)::impl += 2;
    qword_1EE2F4828 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::$_8::operator() const(void)::impl;
  }
  v14 = WebCore::convertEnumerationToString(WebCore::MediaSessionAction)::values[v11];
  if (!v14)
  {
    v17 = *v13;
    goto LABEL_13;
  }
  v15 = *(_DWORD *)v14;
  v16 = *(_DWORD *)(v14 + 4);
  *(_DWORD *)v14 += 2;
  if (v16)
  {
    if (v16 != 1)
    {
LABEL_8:
      v17 = *(_QWORD *)(v12 + 64760);
      if (!v17 || v14 != *(_QWORD *)(v17 + 8))
      {
        v17 = JSC::jsStringWithCacheSlowCase();
        v15 = *(_DWORD *)v14 - 2;
      }
      goto LABEL_11;
    }
    v34 = *(unsigned __int8 **)(v14 + 8);
    if ((*(_BYTE *)(v14 + 16) & 4) != 0)
    {
      v35 = *v34;
    }
    else
    {
      v36 = *(unsigned __int16 *)v34;
      if (v36 > 0xFF)
        goto LABEL_8;
      v35 = v36;
    }
    v17 = *(_QWORD *)(v12 + 8 * v35 + 42216);
  }
  else
  {
    v17 = *v13;
  }
LABEL_11:
  if (v15)
    *(_DWORD *)v14 = v15;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v14, v10);
LABEL_13:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v18 = v37;
  v37 = 0;
  v38 = v8;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v18, v17, 0, (uint64_t)&v37);
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v19);
    else
      *(_DWORD *)v18 -= 2;
  }
  if (*((_BYTE *)a3 + 41))
  {
    if (*((_BYTE *)a3 + 40))
      v20 = 7;
    else
      v20 = 6;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v21 = v37;
    v37 = 0;
    v38 = v8;
    v39 = -1;
    v40 = 0x1000000;
    v41 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v21, v20, 0, (uint64_t)&v37);
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v22);
      else
        *(_DWORD *)v21 -= 2;
    }
  }
  if (*((_BYTE *)a3 + 16))
  {
    v23 = a3[1];
    if ((*(_QWORD *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v24 = (int)v23, v23 == (double)(int)v24)
      && ((_DWORD)v24 || (*(_QWORD *)&v23 & 0x8000000000000000) == 0))
    {
      v25 = v24 | 0xFFFE000000000000;
    }
    else
    {
      v25 = *(_QWORD *)&v23 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v26 = v37;
    v37 = 0;
    v38 = v8;
    v39 = -1;
    v40 = 0x1000000;
    v41 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v26, v25, 0, (uint64_t)&v37);
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v27);
      else
        *(_DWORD *)v26 -= 2;
    }
  }
  if (*((_BYTE *)a3 + 32))
  {
    v28 = a3[3];
    if ((*(_QWORD *)&v28 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v29 = (int)v28, v28 == (double)(int)v29)
      && ((_DWORD)v29 || (*(_QWORD *)&v28 & 0x8000000000000000) == 0))
    {
      v30 = v29 | 0xFFFE000000000000;
    }
    else
    {
      v30 = *(_QWORD *)&v28 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v31 = v37;
    v37 = 0;
    v38 = v8;
    v39 = -1;
    v40 = 0x1000000;
    v41 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v31, v30, 0, (uint64_t)&v37);
    if (v31)
    {
      if (*(_DWORD *)v31 == 2)
        WTF::StringImpl::destroy(v31, v32);
      else
        *(_DWORD *)v31 -= 2;
    }
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  double v18;
  uint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v27;
  unint64_t v28;
  int v29;
  int v30;
  uint64_t v31;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  if (*((_BYTE *)a3 + 1))
  {
    v10 = WebCore::convertEnumerationToJS<WebCore::FillLightMode>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned __int8 *)a3);
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v11 = v27;
    v27 = 0;
    v28 = v8;
    v29 = -1;
    v30 = 0x1000000;
    v31 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v11, v10, 0, (uint64_t)&v27);
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v12);
      else
        *(_DWORD *)v11 -= 2;
    }
  }
  if (*((_BYTE *)a3 + 16))
  {
    v13 = a3[1];
    if ((*(_QWORD *)&v13 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v14 = (int)v13, v13 == (double)(int)v14)
      && ((_DWORD)v14 || (*(_QWORD *)&v13 & 0x8000000000000000) == 0))
    {
      v15 = v14 | 0xFFFE000000000000;
    }
    else
    {
      v15 = *(_QWORD *)&v13 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v16 = v27;
    v27 = 0;
    v28 = v8;
    v29 = -1;
    v30 = 0x1000000;
    v31 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v16, v15, 0, (uint64_t)&v27);
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v17);
      else
        *(_DWORD *)v16 -= 2;
    }
  }
  if (*((_BYTE *)a3 + 32))
  {
    v18 = a3[3];
    if ((*(_QWORD *)&v18 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v19 = (int)v18, v18 == (double)(int)v19)
      && ((_DWORD)v19 || (*(_QWORD *)&v18 & 0x8000000000000000) == 0))
    {
      v20 = v19 | 0xFFFE000000000000;
    }
    else
    {
      v20 = *(_QWORD *)&v18 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v21 = v27;
    v27 = 0;
    v28 = v8;
    v29 = -1;
    v30 = 0x1000000;
    v31 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v21, v20, 0, (uint64_t)&v27);
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v22);
      else
        *(_DWORD *)v21 -= 2;
    }
  }
  if (*((_BYTE *)a3 + 41))
  {
    if (*((_BYTE *)a3 + 40))
      v23 = 7;
    else
      v23 = 6;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v24 = v27;
    v27 = 0;
    v28 = v8;
    v29 = -1;
    v30 = 0x1000000;
    v31 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v24, v23, 0, (uint64_t)&v27);
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v25);
      else
        *(_DWORD *)v24 -= 2;
    }
  }
  return v8;
}

{
  uint64_t v4;
  unint64_t v5;
  size_t v6;
  unint64_t v7;
  int v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v6 = 8 * *(unsigned __int8 *)(v5 + 14);
  v7 = JSC::allocateCell<JSC::JSFinalObject>(v4, v6 + 16);
  v8 = *(_DWORD *)(v5 + 8);
  *(_DWORD *)v7 = v5 >> 4;
  *(_DWORD *)(v7 + 4) = v8;
  *(_QWORD *)(v7 + 8) = 0;
  bzero((void *)(v7 + 16), v6);
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  v9 = *a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v10 = (int)v9, v9 == (double)(int)v10)
    && ((_DWORD)v10 || (*(_QWORD *)&v9 & 0x8000000000000000) == 0))
  {
    v11 = v10 | 0xFFFE000000000000;
  }
  else
  {
    v11 = *(_QWORD *)&v9 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 41968));
  v12 = v20;
  v20 = 0;
  v21 = v7;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v12, v11, 0, (uint64_t)&v20);
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v13);
    else
      *(_DWORD *)v12 -= 2;
  }
  v14 = a3[1];
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v15 = (int)v14, v14 == (double)(int)v15)
    && ((_DWORD)v15 || (*(_QWORD *)&v14 & 0x8000000000000000) == 0))
  {
    v16 = v15 | 0xFFFE000000000000;
  }
  else
  {
    v16 = *(_QWORD *)&v14 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 41968));
  v17 = v20;
  v20 = 0;
  v21 = v7;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v17, v16, 0, (uint64_t)&v20);
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v18);
    else
      *(_DWORD *)v17 -= 2;
  }
  return v7;
}

uint64_t WebCore::JSHTMLOListElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLOListElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOListElement>,(WebCore::DOMConstructorID)555>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4440);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOListElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLOListElement::s_info + ~((_QWORD)&WebCore::JSHTMLOListElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLOListElement::s_info + ~((_QWORD)&WebCore::JSHTMLOListElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLOListElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLOListElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLOListElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLOListElementPrototype::create((WebCore::JSHTMLOListElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLOListElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLOListElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4440) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLOListElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLOListElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOListElement>,(WebCore::DOMConstructorID)555>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLOListElement_compact(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::compactAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::compactAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::compactAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLOListElement_compact(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLOListElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLOListElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::compactAttr, v12, a4);
  return 1;
}

unint64_t WebCore::jsHTMLOListElement_start(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 116))
    return *(unsigned int *)(v2 + 112) | 0xFFFE000000000000;
  else
    return 0xFFFE000000000001;
}

BOOL WebCore::setJSHTMLOListElement_start(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  WTF::AtomString *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::Element *v11;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;
  JSC::VM *v18;
  unint64_t v19;
  unint64_t v20;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = (WTF::AtomString *)a3;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLOListElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLOListElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::Element **)(a2 + 24);
  v20 = a3;
  if (a3 < 0xFFFE000000000000)
  {
    v13 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v18 = v4;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v20, a1);
      v4 = v18;
      v13 = v19;
    }
    v14 = (v13 >> 52) & 0x7FF;
    v15 = v14 - 1023;
    v16 = v13 >> (51 - (v13 >> 52));
    if (v14 > 0x433)
      LODWORD(v16) = v13 << ((v13 >> 52) - 51);
    if (v14 >= 0x41F)
      v17 = v16;
    else
      v17 = (((1 << ((v13 >> 52) + 1)) - 1) & v16) + (1 << ((v13 >> 52) + 1));
    if ((v13 & 0x8000000000000000) != 0)
      v17 = -v17;
    if (v15 <= 0x53)
      v5 = (WTF::AtomString *)v17;
    else
      v5 = 0;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  WebCore::Element::setIntegralAttribute(v11, (const WebCore::QualifiedName *)&WebCore::HTMLNames::startAttr, v5);
  return 1;
}

uint64_t WebCore::jsHTMLOListElement_reversed(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::reversedAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::reversedAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::reversedAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLOListElement_reversed(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLOListElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLOListElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::reversedAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLOListElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::typeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLOListElement_type(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLOListElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLOListElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::typeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::typeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

_QWORD *WebCore::JSHTMLObjectElement::getCallData@<X0>(WebCore::JSHTMLObjectElement *this@<X0>, JSC::JSCell *a2@<X1>, uint64_t a3@<X8>)
{
  WebCore::HTMLPlugInElement *v4;
  _QWORD *result;
  uint64_t v6;

  *(_BYTE *)a3 = 0;
  v4 = (WebCore::HTMLPlugInElement *)*((_QWORD *)this + 3);
  result = (_QWORD *)(*(uint64_t (**)(WebCore::HTMLPlugInElement *, JSC::JSCell *))(*(_QWORD *)v4 + 200))(v4, a2);
  if ((_DWORD)result)
  {
    result = (_QWORD *)WebCore::HTMLPlugInElement::bindingsInstance(v4);
    if (result)
    {
      v6 = result[2];
      if (v6)
      {
        if (*(_BYTE *)(v6 + 12))
        {
          result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 32))(result);
          if ((_DWORD)result)
          {
            *(_BYTE *)a3 = 1;
            *(_QWORD *)(a3 + 8) = WebCore::callPlugin;
            *(_BYTE *)(a3 + 16) = 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t WebCore::JSHTMLObjectElement::put(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  JSC::VM *v21;
  WebCore::HTMLPlugInElement *v22;
  JSC::Bindings::Instance *v23;
  uint64_t v24;
  _DWORD *RuntimeObject;
  int v26;

  if (*(_QWORD *)(a5 + 8) != a1)
    return JSC::JSObject::put();
  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_23;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_23;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_23;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_23;
  v20 = *(_QWORD *)(v19 + 680);
  if (!*(_BYTE *)(v20 + 243))
  {
    if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
      goto LABEL_23;
LABEL_22:
    if (!v18[65])
      goto LABEL_23;
    return JSC::JSObject::put();
  }
  if (*(_BYTE *)(v20 + 242))
    goto LABEL_22;
LABEL_23:
  v21 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v22 = *(WebCore::HTMLPlugInElement **)(a1 + 24);
  if (!(*(unsigned int (**)(WebCore::HTMLPlugInElement *))(*(_QWORD *)v22 + 200))(v22))
    goto LABEL_32;
  if (WebCore::DOMTimerFireState::current)
    *(_BYTE *)(WebCore::DOMTimerFireState::current + 10) = 1;
  v23 = (JSC::Bindings::Instance *)WebCore::HTMLPlugInElement::bindingsInstance(v22);
  if (!v23)
    goto LABEL_32;
  v24 = *((_QWORD *)v23 + 2);
  if (!v24 || !*(_BYTE *)(v24 + 12))
    goto LABEL_32;
  RuntimeObject = (_DWORD *)JSC::Bindings::Instance::createRuntimeObject(v23, a2);
  if (!RuntimeObject)
  {
LABEL_33:
    v26 = 0;
    goto LABEL_34;
  }
  if (!JSC::JSObject::hasProperty())
  {
LABEL_32:
    LODWORD(RuntimeObject) = 0;
    goto LABEL_33;
  }
  LODWORD(RuntimeObject) = (*(uint64_t (**)(_DWORD *, WebCore::JSDOMGlobalObject *, uint64_t, uint64_t, uint64_t))(16 * *(unsigned int *)(16 * (*RuntimeObject & 0xFFFFFFFE) + 0x4C) + 0x48))(RuntimeObject, a2, a3, a4, a5);
  v26 = 1;
LABEL_34:
  if (!*((_DWORD *)v21 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) == 0)
  {
    if (v26)
      return (_DWORD)RuntimeObject != 0;
    return JSC::JSObject::put();
  }
  return 0;
}

uint64_t WebCore::JSHTMLObjectElement::putByIndex(JSC::JSObject *a1, WebCore::JSDOMGlobalObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  JSC::VM *v21;
  WTF::StringImpl *v22;
  WebCore::HTMLPlugInElement *v23;
  WTF::StringImpl *v24;
  JSC::Bindings::Instance *v25;
  uint64_t v26;
  _DWORD *RuntimeObject;
  int v28;
  uint64_t v29;
  JSValue v30;
  WTF::StringImpl *v31;
  JSValue v33;
  _QWORD v34[2];
  int v35;
  char v36;
  __int16 v37;
  char v38;
  uint64_t v39;
  WTF::StringImpl *v40;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (v16)
  {
    v17 = v16;
    if (!*(_BYTE *)(v16 + 274))
    {
      v18 = *(_BYTE **)(v16 + 496);
      if (!v18)
        v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
      if (*(_QWORD *)v18)
      {
        v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
        if (v19)
        {
          v20 = *(_QWORD *)(v19 + 680);
          if (*(_BYTE *)(v20 + 243))
          {
            if (!*(_BYTE *)(v20 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v18[65])
          {
            v33.super.isa = a5;
            return JSC::JSObject::putByIndex(a1, a2, a3, a4, v33);
          }
        }
      }
    }
  }
LABEL_22:
  v21 = (JSC::VM *)*((_QWORD *)a2 + 7);
  JSC::Identifier::from();
  v34[0] = 0;
  v34[1] = a1;
  v35 = -1;
  v36 = (char)a5;
  v37 = 0;
  v38 = 1;
  v39 = 0;
  v22 = v40;
  v23 = (WebCore::HTMLPlugInElement *)*((_QWORD *)a1 + 3);
  if (!(*(unsigned int (**)(WebCore::HTMLPlugInElement *))(*(_QWORD *)v23 + 200))(v23))
    goto LABEL_31;
  if (WebCore::DOMTimerFireState::current)
    *(_BYTE *)(WebCore::DOMTimerFireState::current + 10) = 1;
  v25 = (JSC::Bindings::Instance *)WebCore::HTMLPlugInElement::bindingsInstance(v23);
  if (!v25 || (v26 = *((_QWORD *)v25 + 2)) == 0 || !*(_BYTE *)(v26 + 12))
  {
LABEL_31:
    v28 = 0;
    LODWORD(RuntimeObject) = 0;
    goto LABEL_32;
  }
  RuntimeObject = (_DWORD *)JSC::Bindings::Instance::createRuntimeObject(v25, a2);
  if (RuntimeObject)
  {
    if (JSC::JSObject::hasProperty())
    {
      v28 = (*(uint64_t (**)(_DWORD *, WebCore::JSDOMGlobalObject *, WTF::StringImpl *, uint64_t, _QWORD *))(16 * *(unsigned int *)(16 * (*RuntimeObject & 0xFFFFFFFE) + 0x4C) + 0x48))(RuntimeObject, a2, v22, a4, v34);
      LODWORD(RuntimeObject) = 1;
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  v28 = 0;
LABEL_32:
  if (*((_DWORD *)v21 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
  {
    v29 = 0;
  }
  else if ((_DWORD)RuntimeObject)
  {
    v29 = v28 != 0;
  }
  else
  {
    v30.super.isa = a5;
    v29 = JSC::JSObject::putByIndex(a1, a2, a3, a4, v30);
  }
  v31 = v40;
  v40 = 0;
  if (v31)
  {
    if (*(_DWORD *)v31 == 2)
      WTF::StringImpl::destroy(v31, v24);
    else
      *(_DWORD *)v31 -= 2;
  }
  return v29;
}

uint64_t WebCore::JSHTMLObjectElement::getOwnPropertySlot(uint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  _BYTE *v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned __int16 *v21;
  uint64_t v22;
  unsigned int v23;
  BOOL v24;
  BOOL v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  unint64_t v36;

  if (WebCore::pluginElementCustomGetOwnPropertySlot(a1, (JSC::JSGlobalObject *)a2, a3, a4))
    return 1;
  if (*(_BYTE *)(a4 + 50) == 3)
    return 0;
  if (!(a3 >> 4)
    || (v9 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v9 + 0x20)) != 0)
    || (v10 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7])) == 0|| (v36 = a3, v11 = JSC::PropertyTable::get(v10, (uint64_t *)&v36), (_DWORD)v11 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      return 1;
    if (!a3)
      return 0;
    v12 = *(_DWORD *)(a3 + 16);
    if ((v12 & 0x20) != 0)
      return 0;
    v13 = *(_BYTE **)(a3 + 8);
    v14 = *(unsigned int *)(a3 + 4);
    if ((v12 & 4) != 0)
    {
      if (!(_DWORD)v14 || (v31 = *v13 - 48, v31 > 9) || v14 >= 2 && *v13 == 48)
      {
LABEL_48:
        v32 = 0;
      }
      else
      {
        v33 = v14 - 1;
        v34 = v13 + 1;
        while (v33)
        {
          if (v31 > 0x19999999)
            goto LABEL_48;
          v35 = *v34 - 48;
          if (v35 > 9)
            goto LABEL_48;
          v32 = 0;
          v24 = __CFADD__(v35, 10 * v31);
          v31 = v35 + 10 * v31;
          --v33;
          ++v34;
          if (v24)
            goto LABEL_49;
        }
        v32 = 0x100000000;
        if (v31 == -1)
          v32 = 0;
      }
LABEL_49:
      if ((v32 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      if ((_DWORD)v14
        && (v15 = *(unsigned __int16 *)v13 - 48, v15 <= 9)
        && (v14 < 2 || *(_WORD *)v13 != 48))
      {
        v21 = (unsigned __int16 *)(v13 + 2);
        v22 = v14 - 1;
        while (v22)
        {
          if (v15 <= 0x19999999)
          {
            v23 = *v21 - 48;
            if (v23 <= 9)
            {
              v24 = __CFADD__(v23, 10 * v15);
              v15 = v23 + 10 * v15;
              ++v21;
              --v22;
              if (!v24)
                continue;
            }
          }
          goto LABEL_16;
        }
        v25 = v15 == -1;
        v16 = 0x100000000;
        if (v25)
          v16 = 0;
      }
      else
      {
LABEL_16:
        v16 = 0;
      }
      if ((v16 & 0x100000000) == 0)
        return 0;
    }
    return JSC::JSObject::getOwnPropertySlotByIndex();
  }
  if ((int)v11 > 63)
  {
    v17 = *(_QWORD *)(a1 + 8) - 8;
    v18 = 0x3F00000000 - (v11 << 32);
  }
  else
  {
    v17 = a1 + 16;
    v18 = v11 << 32;
  }
  v19 = *(_QWORD *)(v17 + (v18 >> 29));
  if ((v19 & 0xFFFE000000000002) != 0)
  {
LABEL_25:
    *(_QWORD *)a4 = v19;
    *(_QWORD *)(a4 + 32) = a1;
    *(_DWORD *)(a4 + 16) = HIDWORD(v11);
    *(_DWORD *)(a4 + 20) = v11;
    result = 1;
    *(_WORD *)(a4 + 48) = 257;
    return result;
  }
  v20 = *(unsigned __int8 *)(v19 + 5);
  if (v20 != 6)
  {
    if (v20 == 5)
    {
      JSC::JSObject::fillGetterPropertySlot();
      return 1;
    }
    goto LABEL_25;
  }
  v26 = *(_DWORD *)(v9 + 16) & 3;
  v28 = *(_QWORD *)(v19 + 8);
  v27 = *(_QWORD *)(v19 + 16);
  if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C))
  {
    v30 = *(_QWORD *)(v19 + 24);
    v29 = *(_QWORD *)(v19 + 32);
    *(_QWORD *)a4 = v28;
    *(_QWORD *)(a4 + 8) = v27;
    *(_DWORD *)(a4 + 16) = HIDWORD(v11);
    *(_QWORD *)(a4 + 32) = a1;
    *(_BYTE *)(a4 + 49) = 3;
    result = 1;
    if (v26 != 2)
      *(_BYTE *)(a4 + 48) = 1;
    *(_BYTE *)(a4 + 51) = 1;
    *(_QWORD *)(a4 + 72) = v30;
    *(_QWORD *)(a4 + 80) = v29;
  }
  else
  {
    *(_QWORD *)a4 = v28;
    *(_QWORD *)(a4 + 8) = v27;
    *(_DWORD *)(a4 + 16) = HIDWORD(v11);
    *(_QWORD *)(a4 + 32) = a1;
    result = 1;
    *(_BYTE *)(a4 + 49) = 3;
    if (v26 != 2)
      *(_BYTE *)(a4 + 48) = 1;
  }
  return result;
}

uint64_t WebCore::JSHTMLObjectElement::getOwnPropertySlotByIndex(WebCore::JSHTMLObjectElement *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  WTF::StringImpl *v8;
  uint64_t OwnPropertySlotByIndex;
  WTF::StringImpl *v11;

  JSC::Identifier::from();
  if (WebCore::pluginElementCustomGetOwnPropertySlot((uint64_t)this, a2, (uint64_t)v11, a4))
  {
    OwnPropertySlotByIndex = 1;
  }
  else if (*(_BYTE *)(a4 + 50) == 3)
  {
    OwnPropertySlotByIndex = 0;
  }
  else
  {
    OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
  }
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v8);
    else
      *(_DWORD *)v11 -= 2;
  }
  return OwnPropertySlotByIndex;
}

uint64_t WebCore::JSHTMLObjectElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLObjectElement::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  JSC::JSObject::visitChildren();
  WebCore::JSEventTarget::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
  result = WebCore::JSNode::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  v5 = *(_QWORD *)(a1 + 32);
  if ((v5 & 0xFFFE000000000002) == 0 && v5 != 0)
  {
    if ((v5 & 8) != 0)
    {
      if ((*(_BYTE *)(v5 - 79) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    else
    {
      v7 = v5 & 0xFFFFFFFFFFFFC000;
      if (*(_DWORD *)(v5 & 0xFFFFFFFFFFFFC000 | 0x20) != *(_DWORD *)(a2 + 132))
      {
        v8 = *(_QWORD *)(a1 + 32);
        v9 = v5 & 0xFFFFFFFFFFFFC000;
        result = JSC::MarkedBlock::aboutToMarkSlow((JSC::MarkedBlock *)(v5 & 0xFFFFFFFFFFFFC000));
        v5 = v8;
        v7 = v9;
      }
      if (((*(_QWORD *)(v7 + 8 * ((v5 >> 10) & 0xF) + 40) >> (v5 >> 4)) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    if (*(_QWORD *)(a2 + 168))
      return JSC::SlotVisitor::appendSlow();
  }
  return result;
}

uint64_t WebCore::JSHTMLObjectElement::visitChildren(WebCore::JSHTMLObjectElement *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;
  _QWORD v10[2];
  _QWORD *v11;
  char v12;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    v10[0] = a2;
    v10[1] = this;
    v12 = 0;
    v11 = v7;
    *((_QWORD *)a2 + 11) = v10;
    result = WebCore::JSNode::visitChildren(this, a2, a3);
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v10[0] + 88) = v11;
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSHTMLObjectElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLObjectElementPrototype::create(WebCore::JSHTMLObjectElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  JSC::Structure *v18;
  int v19;
  unint64_t v21;
  WTF::StringImpl *v22[6];
  int v23;
  int v24;
  JSC::Structure *v25;
  int v26;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v21 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v21);
    *((_QWORD *)this + 4865) = SlowCase + (int)v21;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<27u>(this, (uint64_t)&WebCore::JSHTMLObjectElement::s_info, (uint64_t)&WebCore::JSHTMLObjectElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C47CD0);
  }
  v10 = v9 - 192;
  if (!v9)
    v10 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v10 + 680) + 680) & 0x20000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v11 = v22[0];
    v12 = *((_DWORD *)this + 23281);
    *((_DWORD *)this + 23281) = 1;
    LODWORD(v22[0]) = -1;
    WORD2(v22[0]) = 1;
    JSC::JSObject::deleteProperty();
    *((_DWORD *)this + 23281) = v12;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v13);
      else
        *(_DWORD *)v11 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v14 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = JSC::JSString::create((uint64_t)this, v22);
  v17 = v22[0];
  v22[0] = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v15);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v26 = *(_DWORD *)SlowCase;
  v25 = v18;
  v19 = JSC::Structure::outOfLineCapacity(v18);
  v23 = 0;
  v24 = v19;
  v22[0] = (WTF::StringImpl *)&v24;
  v22[1] = (WTF::StringImpl *)SlowCase;
  v22[2] = this;
  v22[3] = (WTF::StringImpl *)&v26;
  v22[4] = (WTF::StringImpl *)&v25;
  v22[5] = (WTF::StringImpl *)&v23;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v18, this, v14, 6, (uint64_t)v22);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v23, v16);
  *((_DWORD *)v18 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLObjectElement>,(WebCore::DOMConstructorID)556>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4448);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLObjectElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLObjectElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLObjectElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLObjectElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLObjectElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLObjectElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLObjectElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLObjectElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLObjectElementPrototype::create((WebCore::JSHTMLObjectElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLObjectElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLObjectElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4448) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLObjectElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLObjectElementPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLObjectElement>,(WebCore::DOMConstructorID)556>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLObjectElement_form(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  uint64_t v4;
  WebCore::JSDOMGlobalObject *v6;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 256);
  if (v4 && (v6 = *(WebCore::JSDOMGlobalObject **)(v4 + 8)) != 0)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v6, a4);
  else
    return 2;
}

uint64_t WebCore::jsHTMLObjectElement_code(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::codeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::codeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::codeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLObjectElement_code(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::codeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::codeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::codeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::codeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLObjectElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLObjectElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLObjectElement_archive(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::archiveAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::archiveAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::archiveAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLObjectElement_archive(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::archiveAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::archiveAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::archiveAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::archiveAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLObjectElement_border(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::borderAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLObjectElement_border(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::borderAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::borderAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLObjectElement_codeBase(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  __int128 v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  unint64_t v18;
  WTF::StringImpl *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  char v24;
  char v25;
  WTF::StringImpl **v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v22 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::codebaseAttr, a3, a4, a5);
  v9 = &v23;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v23);
  if ((v24 & 2) == 0)
  {
    v9 = &v23;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v23))
    {
      v18 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v18 != -1)
      {
        v19 = (WTF::StringImpl *)&v25;
        v26 = &v19;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v26, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (*v9)
    *(_DWORD *)v11 += 2;
  v19 = v11;
  v12 = *(_OWORD *)(v9 + 3);
  v20 = *(_OWORD *)(v9 + 1);
  v21 = v12;
  v13 = v23;
  v23 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v10);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v15 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>(a1, (uint64_t)&v22, (uint64_t *)&v19);
  v16 = v19;
  v19 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  return v15;
}

BOOL WebCore::setJSHTMLObjectElement_codeBase(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::codebaseAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::codebaseAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::codebaseAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::codebaseAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLObjectElement_codeType(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::codetypeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::codetypeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::codetypeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLObjectElement_codeType(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::codetypeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::codetypeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::codetypeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::codetypeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLObjectElement_data(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  __int128 v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  unint64_t v18;
  WTF::StringImpl *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  char v24;
  char v25;
  WTF::StringImpl **v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v22 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::dataAttr, a3, a4, a5);
  v9 = &v23;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v23);
  if ((v24 & 2) == 0)
  {
    v9 = &v23;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v23))
    {
      v18 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v18 != -1)
      {
        v19 = (WTF::StringImpl *)&v25;
        v26 = &v19;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v26, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (*v9)
    *(_DWORD *)v11 += 2;
  v19 = v11;
  v12 = *(_OWORD *)(v9 + 3);
  v20 = *(_OWORD *)(v9 + 1);
  v21 = v12;
  v13 = v23;
  v23 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v10);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v15 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>(a1, (uint64_t)&v22, (uint64_t *)&v19);
  v16 = v19;
  v19 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  return v15;
}

BOOL WebCore::setJSHTMLObjectElement_data(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::dataAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::dataAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::dataAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::dataAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLObjectElement_declare(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::declareAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::declareAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::declareAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLObjectElement_declare(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLObjectElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::declareAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLObjectElement_height(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::heightAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLObjectElement_height(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::heightAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::heightAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLObjectElement_hspace(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::hspaceAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    v8 = 0;
  else
    v8 = v10 & ~((int)v10 >> 31);
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLObjectElement_hspace(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::hspaceAttr, v11);
  return v9;
}

uint64_t WebCore::jsHTMLObjectElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLObjectElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLObjectElement_standby(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::standbyAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::standbyAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::standbyAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLObjectElement_standby(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::standbyAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::standbyAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::standbyAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::standbyAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLObjectElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::typeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLObjectElement_type(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::typeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::typeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLObjectElement_useMap(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::usemapAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLObjectElement_useMap(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::usemapAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::usemapAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::usemapAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLObjectElement_vspace(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::vspaceAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    v8 = 0;
  else
    v8 = v10 & ~((int)v10 >> 31);
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLObjectElement_vspace(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::vspaceAttr, v11);
  return v9;
}

uint64_t WebCore::jsHTMLObjectElement_width(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::widthAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLObjectElement_width(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLObjectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::widthAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::widthAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLObjectElement_willValidate()
{
  return 6;
}

unint64_t WebCore::jsHTMLObjectElement_validity(uint64_t a1, uint64_t a2)
{
  return WebCore::toJS(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WTF *)(*(_QWORD *)(a2 + 24) + 248));
}

uint64_t WebCore::jsHTMLObjectElement_validationMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v3 + 248) + 272))(v3 + 248))
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v5 = *(_QWORD *)(v3 + 280);
  if (!v5)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  v8 = *(_QWORD *)(a1 + 56);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_5:
      v9 = *(_QWORD *)(v8 + 64760);
      if (!v9 || v5 != *(_QWORD *)(v9 + 8))
      {
        v9 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_8;
    }
    v11 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_5;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v8 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *(_QWORD *)(v8 + 41968);
  }
LABEL_8:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, v4);
  return v9;
}

uint64_t WebCore::jsHTMLObjectElement_contentDocument(WebCore::DOMWrapperWorld **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  JSC::JSGlobalObject *v6;
  WebCore::Document *v7;
  uint64_t result;
  void *v9;
  unint64_t v10;
  WebCore::Node *v11;
  WebCore::Node *v12;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 112);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(v2 + 8);
  if (!v3)
    return 2;
  if (*(_BYTE *)(v3 + 144))
    return 2;
  v4 = *(_QWORD *)(v3 + 296);
  if (!v4)
    return 2;
  v6 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (!WebCore::canAccessDocument((uint64_t)a1, *(WTF::StringImpl **)(*(_QWORD *)(v4 + 40) + 8), 1))
    return 2;
  result = WebCore::cachedDocumentWrapper(a1, v6, (WebCore::JSDOMGlobalObject *)v4, v7);
  if (!result)
  {
    *(_DWORD *)(v4 + 24) += 2;
    v12 = (WebCore::Node *)v4;
    v10 = WebCore::toJSNewlyCreated((uint64_t)a1, v6, &v12);
    v11 = v12;
    v12 = 0;
    if (v11)
    {
      if (*((_DWORD *)v11 + 6) == 2)
      {
        if ((*((_WORD *)v11 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v11, v9);
      }
      else
      {
        *((_DWORD *)v11 + 6) -= 2;
      }
    }
    return v10;
  }
  return result;
}

uint64_t WebCore::jsHTMLObjectElement_contentWindow(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  WebCore::WindowProxy *v4;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 112);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(v2 + 8);
  if (!v3)
    return 2;
  v4 = *(WebCore::WindowProxy **)(v3 + 112);
  if (!v4)
    return 2;
  result = (uint64_t)WebCore::WindowProxy::jsWindowProxy(v4, *(WebCore::DOMWrapperWorld **)(a1 + 3320));
  if (!result)
    return 2;
  return result;
}

uint64_t WebCore::JSHTMLOptGroupElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLOptGroupElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLOptGroupElementPrototype::create(WebCore::JSHTMLOptGroupElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSHTMLOptGroupElement::s_info, &WebCore::JSHTMLOptGroupElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOptGroupElement>,(WebCore::DOMConstructorID)557>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4456);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOptGroupElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLOptGroupElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLOptGroupElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLOptGroupElement::s_info
                                                                       + ~((_QWORD)&WebCore::JSHTMLOptGroupElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLOptGroupElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLOptGroupElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLOptGroupElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLOptGroupElementPrototype::create((WebCore::JSHTMLOptGroupElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLOptGroupElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLOptGroupElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4456) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLOptGroupElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLOptGroupElementPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOptGroupElement>,(WebCore::DOMConstructorID)557>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLOptGroupElement_disabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::disabledAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLOptGroupElement_disabled(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLOptGroupElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLOptGroupElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::disabledAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLOptGroupElement_label(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::labelAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::labelAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::labelAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLOptGroupElement_label(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLOptGroupElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLOptGroupElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::labelAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::labelAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::labelAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::labelAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLOptionElement::prototype(WebCore::JSHTMLOptionElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v16;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSHTMLOptionElement::s_info + ~((_QWORD)&WebCore::JSHTMLOptionElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLOptionElement::s_info + ~((_QWORD)&WebCore::JSHTMLOptionElement::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSHTMLOptionElement::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSHTMLOptionElement::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    v14 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
    Structure = WebCore::JSHTMLOptionElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v18 = (JSC::JSCell *)WebCore::JSHTMLOptionElementPrototype::create(this, Structure, v16, v17);
    v19 = WebCore::JSHTMLOptionElement::createStructure((uint64_t *)this, (uint64_t)a2, v18);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v19, (uint64_t)&WebCore::JSHTMLOptionElement::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

JSCell *WebCore::JSDOMLegacyFactoryFunction<WebCore::JSHTMLOptionElement>::construct(JSC *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  JSC::VM *v10;
  WTF *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  int v19;
  uint64_t v20;
  int *v21;
  int v22;
  _BOOL4 v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  int v27;
  uint64_t v28;
  int *v29;
  int v30;
  WTF *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  WebCore::JSDOMGlobalObject *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  JSC::VM *v37;
  int v38;
  JSC::VM *v39;
  WTF *v40;
  void *v41;
  JSCell *v42;
  JSC::JSCell *v43;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v45;
  JSC::JSGlobalObject *v46;
  WebCore::JSHTMLElement *v47;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v49;
  JSC::Structure *v50;
  unint64_t SubclassStructure;
  int v52;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  JSValue v56;
  WTF::StringImpl *v57;
  int hasExceptionsAfterHandlingTraps;
  BOOL i;
  BOOL v60;
  WTF::StringImpl *v61;
  int v62[2];
  WTF::StringImpl *v63;
  int v64;
  WTF::StringImpl *v65;
  int v66;
  WTF::StringImpl *v67;
  int v68;
  JSC::VM *v69;
  WTF *v70;
  WTF::StringImpl *v71;

  v69 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v4 + 40));
  if (!v5)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(a1, &v69, (uint64_t)"HTMLOptionElement", 18);
  v6 = v5;
  if (*(_BYTE *)(v5 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C4C2E8);
  }
  v7 = 0xFFFE000000000002;
  if (*(_DWORD *)(a2 + 32) == 1 || (v8 = *(_QWORD *)(a2 + 48), v8 == 10))
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v9 += 2;
    v67 = v9;
    v68 = 0;
    goto LABEL_17;
  }
  *(_QWORD *)v62 = *(_QWORD *)(a2 + 48);
  v10 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((v8 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v8 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v62, a1);
    goto LABEL_14;
  }
  v11 = *(WTF **)(v8 + 8);
  if ((v11 & 1) != 0)
  {
    v11 = *(WTF **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, a1);
    if (!v11)
      goto LABEL_13;
    goto LABEL_12;
  }
  if (v11)
LABEL_12:
    *(_DWORD *)v11 += 2;
LABEL_13:
  v70 = v11;
LABEL_14:
  if (*((_DWORD *)v10 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v10);
    v12 = v70;
    if (hasExceptionsAfterHandlingTraps)
    {
      v68 = 1;
      v70 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v57);
        else
          *(_DWORD *)v12 -= 2;
      }
      v42 = 0;
      v52 = 1;
LABEL_74:
      ((void (*)(int *, WTF::StringImpl **))off_1E329F280[v52])(v62, &v67);
      return v42;
    }
  }
  else
  {
    v12 = v70;
  }
  v67 = v12;
  v68 = 0;
LABEL_17:
  if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL || *(_QWORD *)(a2 + 56) == 10)
  {
    v13 = (WTF::StringImpl *)*MEMORY[0x1E0CBF2F8];
    if (*MEMORY[0x1E0CBF2F8])
      *(_DWORD *)v13 += 2;
    v65 = v13;
    v66 = 0;
LABEL_23:
    v15 = *(int *)(a2 + 32);
    if ((unint64_t)(v15 - 4) >= 0xFFFFFFFFFFFFFFFDLL)
    {
      v17 = (JSC::VM *)*((_QWORD *)a1 + 7);
      v16 = 10;
    }
    else
    {
      v16 = *(_QWORD *)(a2 + 64);
      v17 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v16 >= 0xFFFE000000000000)
        goto LABEL_120;
      *(_QWORD *)&v18 = v16 - 0x2000000000000;
      if (v16 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        if (v18 <= 0.0)
        {
          v23 = v18 < 0.0;
          goto LABEL_35;
        }
        goto LABEL_129;
      }
      if ((v16 & 0xFFFE000000000002) == 0)
      {
        v19 = *(unsigned __int8 *)(v16 + 5);
        if (v19 == 3)
        {
          v22 = *(_DWORD *)(v16 + 8);
LABEL_127:
          i = v22 == 0;
          goto LABEL_138;
        }
        if (v19 == 2)
        {
          v20 = *(_QWORD *)(v16 + 8);
          if ((v20 & 1) != 0)
            v21 = (int *)(v16 + 16);
          else
            v21 = (int *)(v20 + 4);
          v22 = *v21;
          goto LABEL_127;
        }
        if ((*(_BYTE *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
LABEL_129:
          v23 = 1;
          goto LABEL_35;
        }
        for (i = *(_QWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1; ; i = (_DWORD)v16 == 0)
        {
LABEL_138:
          v23 = !i;
LABEL_35:
          if (*((_DWORD *)v17 + 20))
          {
            if ((JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
            {
              v42 = 0;
              goto LABEL_70;
            }
            v15 = *(int *)(a2 + 32);
          }
          if ((unint64_t)(v15 - 5) >= 0xFFFFFFFFFFFFFFFCLL)
          {
            v25 = (JSC::VM *)*((_QWORD *)a1 + 7);
            v24 = 10;
LABEL_47:
            v7 = v24 == 7;
            goto LABEL_48;
          }
          v24 = *(_QWORD *)(a2 + 72);
          v25 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v24 >= 0xFFFE000000000000)
            break;
          *(_QWORD *)&v26 = v24 - 0x2000000000000;
          if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            if ((v24 & v7) != 0)
              goto LABEL_47;
            v27 = *(unsigned __int8 *)(v24 + 5);
            if (v27 == 3)
            {
              v30 = *(_DWORD *)(v24 + 8);
              goto LABEL_131;
            }
            if (v27 == 2)
            {
              v28 = *(_QWORD *)(v24 + 8);
              if ((v28 & 1) != 0)
                v29 = (int *)(v24 + 16);
              else
                v29 = (int *)(v28 + 4);
              v30 = *v29;
LABEL_131:
              v60 = v30 == 0;
            }
            else
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0xA) & 1) == 0)
              {
LABEL_136:
                v7 = 1;
                goto LABEL_48;
              }
              v60 = *(_QWORD *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            }
LABEL_132:
            v7 = !v60;
            goto LABEL_48;
          }
          if (v26 > 0.0)
            goto LABEL_136;
          v7 = v26 < 0.0;
LABEL_48:
          if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
          {
            v42 = 0;
            goto LABEL_70;
          }
          if (!v68)
          {
            v31 = v67;
            v67 = 0;
            v70 = v31;
            if (!v66)
            {
              v32 = v65;
              v65 = 0;
              v61 = v32;
              WebCore::HTMLOptionElement::createForLegacyFactoryFunction(v6 - 192, (uint64_t)&v70, &v61, v23, (void *)v7, (uint64_t)v62);
              v35 = v61;
              v61 = 0;
              v7 = 0xFFFE000000000002;
              if (v35)
              {
                if (*(_DWORD *)v35 == 2)
                  WTF::StringImpl::destroy(v35, v33);
                else
                  *(_DWORD *)v35 -= 2;
              }
              v36 = v70;
              v70 = 0;
              if (v36)
              {
                if (*(_DWORD *)v36 == 2)
                  WTF::StringImpl::destroy(v36, v33);
                else
                  *(_DWORD *)v36 -= 2;
              }
              v37 = v69;
              if (*((_DWORD *)v69 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v69) & 1) != 0)
              {
                v42 = 0;
                v38 = v64;
                if (v64 == -1)
                {
LABEL_70:
                  v14 = v66;
                  goto LABEL_71;
                }
LABEL_69:
                ((void (*)(WTF **, int *))off_1E329F270[v38])(&v70, v62);
                goto LABEL_70;
              }
              v38 = v64;
              if (!v64)
              {
                v39 = *(JSC::VM **)(v4 + 40);
                v40 = *(WTF **)v62;
                *(_QWORD *)v62 = 0;
                v70 = v40;
                if (*(uint64_t (***)(WebCore::Node *__hidden))v40 != off_1E33C6620)
                {
                  __break(0xC471u);
                  JUMPOUT(0x194C4C3B8);
                }
                v42 = (JSCell *)WebCore::createWrapper<WebCore::HTMLOptionElement,WebCore::HTMLOptionElement>(v39, &v70, v34);
                if (v70)
                {
                  if (*((_DWORD *)v70 + 6) == 2)
                  {
                    if ((*((_WORD *)v70 + 15) & 0x400) == 0)
                      WebCore::Node::removedLastRef(v70, v41);
                  }
                  else
                  {
                    *((_DWORD *)v70 + 6) -= 2;
                  }
                }
LABEL_61:
                if (*((_DWORD *)v37 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v37) & 1) != 0)
                  goto LABEL_102;
                v43 = *(JSC::JSCell **)(a2 + 40);
                if (((unint64_t)v43 & 0xFFFE000000000002) == 0)
                {
                  Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v43);
                  if (Object)
                  {
                    v46 = Object;
                    if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
                    {
                      v47 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
                      FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v45);
                      if (!*((_DWORD *)v47 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v47) & 1) == 0)
                      {
                        v49 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSHTMLOptionElement>(v47, FunctionRealm);
                        SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v46, v49, v50);
                        if (!*((_DWORD *)v47 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v47) & 1) == 0)
                          JSC::JSObject::setStructure(v42, v47, SubclassStructure);
                      }
                    }
                  }
                }
                if (*((_DWORD *)v37 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v37) & 1) != 0)
LABEL_102:
                  v42 = 0;
                goto LABEL_69;
              }
              if (v64 == 1)
              {
                v54 = (WTF::StringImpl *)LOBYTE(v62[0]);
                LOBYTE(v70) = v62[0];
                v55 = v63;
                v63 = 0;
                v71 = v55;
                if (!*((_QWORD *)v37 + 2))
                {
                  v56.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v62[0]), (JSC::JSGlobalObject *)&v71);
                  JSC::VM::throwException(v37, a1, v56);
                  v55 = v71;
                }
                v71 = 0;
                if (v55)
                {
                  if (*(_DWORD *)v55 == 2)
                    WTF::StringImpl::destroy(v55, v54);
                  else
                    *(_DWORD *)v55 -= 2;
                }
                v42 = 0;
                goto LABEL_61;
              }
            }
          }
          v17 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_120:
          ;
        }
        v60 = (_DWORD)v24 == 0;
        goto LABEL_132;
      }
    }
    v23 = v16 == 7;
    goto LABEL_35;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 56), (uint64_t)&v65);
  v14 = v66;
  if (!v66)
    goto LABEL_23;
  v42 = 0;
LABEL_71:
  if (v14 != -1)
    ((void (*)(int *, WTF::StringImpl **))off_1E3299910[v14])(v62, &v65);
  v52 = v68;
  if (v68 != -1)
    goto LABEL_74;
  return v42;
}

uint64_t WebCore::JSHTMLOptionElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLOptionElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLOptionElementPrototype::create(WebCore::JSHTMLOptionElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<9u>(this, (uint64_t)&WebCore::JSHTMLOptionElement::s_info, (uint64_t)&WebCore::JSHTMLOptionElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOptionElement>,(WebCore::DOMConstructorID)558>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4464);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOptionElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSHTMLOptionElement::prototype((WebCore::JSHTMLOptionElement *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4464) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMLegacyFactoryFunction<WebCore::JSHTMLOptionElement>,(WebCore::DOMConstructorID)559>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4472);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v21) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v21, &WebCore::JSDOMLegacyFactoryFunction<WebCore::JSHTMLOptionElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v20);
    v9[2848] = v2 + (int)v20;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(*(_QWORD *)(a2 + 56) + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v21);
  v13 = v21;
  v21 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v21);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v17 = WebCore::JSHTMLOptionElement::prototype((WebCore::JSHTMLOptionElement *)a1, (JSC::VM *)a2, v16);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4472) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLOptionElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLOptionElementPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOptionElement>,(WebCore::DOMConstructorID)558>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLOptionElement_disabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::disabledAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::setJSHTMLOptionElement_disabled(uint64_t a1, unint64_t a2, unint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  __n128 v7;
  double v8;
  _BOOL4 v9;
  WTF::StringImpl **v10;
  BOOL v12;
  int v13;
  uint64_t v14;
  int *v15;
  int v16;

  v5 = *(JSC::VM **)(a1 + 56);
  v6 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (_DWORD)a3 == 0;
    goto LABEL_27;
  }
  *(_QWORD *)&v8 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v9 = a3 == 7;
      goto LABEL_6;
    }
    v13 = *(unsigned __int8 *)(a3 + 5);
    if (v13 == 3)
    {
      v16 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v13 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v9 = 1;
          goto LABEL_6;
        }
        v12 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_27;
      }
      v14 = *(_QWORD *)(a3 + 8);
      if ((v14 & 1) != 0)
        v15 = (int *)(a3 + 16);
      else
        v15 = (int *)(v14 + 4);
      v16 = *v15;
    }
    v12 = v16 == 0;
LABEL_27:
    v9 = !v12;
    goto LABEL_6;
  }
  v7.n128_u64[0] = a3 - 0x2000000000000;
  v9 = v8 > 0.0 || v8 < 0.0;
LABEL_6:
  v10 = *(WTF::StringImpl ***)(v6 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v10, (const WebCore::QualifiedName *)&WebCore::HTMLNames::disabledAttr, v9, v7);
  return 1;
}

uint64_t WebCore::jsHTMLOptionElement_form(WebCore *a1, _QWORD *a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  uint64_t v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  WebCore::JSDOMGlobalObject *v11;

  v5 = *(_QWORD *)(a2[3] + 32);
  if (!v5)
    return 2;
  if ((~*(unsigned __int16 *)(v5 + 28) & 0x18) != 0)
    return 2;
  v6 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v7 = *(_QWORD *)(*(_QWORD *)(v5 + 96) + 24);
  v8 = *(_QWORD *)(WebCore::HTMLNames::selectTag + 24);
  if (v7 != v8)
  {
    if (v7 != *(_QWORD *)(WebCore::HTMLNames::optgroupTag + 24))
      return 2;
    v5 = *(_QWORD *)(v5 + 32);
    if (!v5 || (*(_WORD *)(v5 + 28) & 0x10) == 0 || *(_QWORD *)(*(_QWORD *)(v5 + 96) + 24) != v8)
      return 2;
  }
  v9 = *(_DWORD *)(v5 + 24);
  *(_DWORD *)(v5 + 24) = v9 + 2;
  v10 = *(_QWORD *)(v5 + 120);
  if (v10)
  {
    v11 = *(WebCore::JSDOMGlobalObject **)(v10 + 8);
    if (v9)
      goto LABEL_10;
  }
  else
  {
    v11 = 0;
    if (v9)
    {
LABEL_10:
      *(_DWORD *)(v5 + 24) = v9;
      goto LABEL_11;
    }
  }
  if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
    WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
LABEL_11:
  if (!v11)
    return 2;
  return WebCore::toJS(a1, v6, v11, a4);
}

uint64_t WebCore::jsHTMLOptionElement_label(uint64_t a1, WebCore::HTMLOptionElement **a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLOptionElement::label(a2[3], (WTF::StringImpl *)a2);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    if (!v4)
      return v6;
    goto LABEL_15;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLOptionElement_label(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v21 = v9;
    v10 = *((_QWORD *)v6 + 13);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) == 0)
      {
        v12 = (uint64_t *)(v10 + 32);
        v13 = v11 >> 5;
        if (!v13)
          goto LABEL_15;
LABEL_8:
        v14 = 0;
        while (1)
        {
          v15 = *v12;
          if (*v12 == WebCore::HTMLNames::labelAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::labelAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::labelAttr + 32))
          {
            goto LABEL_16;
          }
          ++v14;
          v12 += 2;
          if (v13 == v14)
            goto LABEL_15;
        }
      }
      v12 = *(uint64_t **)(v10 + 40);
      v13 = *(_DWORD *)(v10 + 52);
      if (v13)
        goto LABEL_8;
    }
LABEL_15:
    v14 = 0xFFFFFFFFLL;
LABEL_16:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::labelAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v8;
}

uint64_t WebCore::jsHTMLOptionElement_defaultSelected(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::selectedAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::selectedAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::selectedAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::setJSHTMLOptionElement_defaultSelected(uint64_t a1, unint64_t a2, unint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  __n128 v7;
  double v8;
  _BOOL4 v9;
  WTF::StringImpl **v10;
  BOOL v12;
  int v13;
  uint64_t v14;
  int *v15;
  int v16;

  v5 = *(JSC::VM **)(a1 + 56);
  v6 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (_DWORD)a3 == 0;
    goto LABEL_27;
  }
  *(_QWORD *)&v8 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v9 = a3 == 7;
      goto LABEL_6;
    }
    v13 = *(unsigned __int8 *)(a3 + 5);
    if (v13 == 3)
    {
      v16 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v13 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v9 = 1;
          goto LABEL_6;
        }
        v12 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_27;
      }
      v14 = *(_QWORD *)(a3 + 8);
      if ((v14 & 1) != 0)
        v15 = (int *)(a3 + 16);
      else
        v15 = (int *)(v14 + 4);
      v16 = *v15;
    }
    v12 = v16 == 0;
LABEL_27:
    v9 = !v12;
    goto LABEL_6;
  }
  v7.n128_u64[0] = a3 - 0x2000000000000;
  v9 = v8 > 0.0 || v8 < 0.0;
LABEL_6:
  v10 = *(WTF::StringImpl ***)(v6 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v10, (const WebCore::QualifiedName *)&WebCore::HTMLNames::selectedAttr, v9, v7);
  return 1;
}

BOOL WebCore::IDLAttribute<WebCore::JSHTMLOptionElement>::set<&WebCore::setJSHTMLOptionElement_selectedSetter,(WebCore::CastedThisErrorBehavior)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(a2);
  if (v5)
    return WebCore::setJSHTMLOptionElement_selectedSetter(a1, *(WebCore::HTMLOptionElement **)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsHTMLOptionElement_value(WebCore *a1, uint64_t a2, WebCore::JSHTMLOptionElement *a3)
{
  return WebCore::jsHTMLOptionElement_valueGetter(a1, *(JSC::JSGlobalObject **)(a2 + 24), a3);
}

BOOL WebCore::setJSHTMLOptionElement_value(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v21 = v9;
    v10 = *((_QWORD *)v6 + 13);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) == 0)
      {
        v12 = (uint64_t *)(v10 + 32);
        v13 = v11 >> 5;
        if (!v13)
          goto LABEL_15;
LABEL_8:
        v14 = 0;
        while (1)
        {
          v15 = *v12;
          if (*v12 == WebCore::HTMLNames::valueAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 32))
          {
            goto LABEL_16;
          }
          ++v14;
          v12 += 2;
          if (v13 == v14)
            goto LABEL_15;
        }
      }
      v12 = *(uint64_t **)(v10 + 40);
      v13 = *(_DWORD *)(v10 + 52);
      if (v13)
        goto LABEL_8;
    }
LABEL_15:
    v14 = 0xFFFFFFFFLL;
LABEL_16:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::valueAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v8;
}

uint64_t WebCore::jsHTMLOptionElement_text(uint64_t a1, WebCore::HTMLOptionElement **a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLOptionElement::text(a2[3], (WTF::StringImpl *)a2);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    if (!v4)
      return v6;
    goto LABEL_15;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLOptionElement_text(JSC::JSGlobalObject *a1, unint64_t a2, uint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  WebCore::ContainerNode *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  WTF *v15;
  WTF::StringImpl *v18;
  int hasExceptionsAfterHandlingTraps;
  WTF *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  WTF *v25;
  uint64_t v26;
  _BYTE v27[40];
  uint64_t v28;
  JSC::JSGlobalObject *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v6 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WebCore::ContainerNode **)(v6 + 24);
  v25 = (WTF *)v27;
  v26 = 4;
  v27[32] = 0;
  v28 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v29 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v25;
  v31 = (WTF::StringImpl *)a3;
  if ((a3 & 0xFFFE000000000002) == 0 && *(_BYTE *)(a3 + 5) == 2)
  {
    v8 = *(WTF::StringImpl **)(a3 + 8);
    if ((v8 & 1) != 0)
    {
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)a3, a1);
      if (!v8)
        goto LABEL_7;
    }
    else if (!v8)
    {
LABEL_7:
      v30 = v8;
      goto LABEL_8;
    }
    *(_DWORD *)v8 += 2;
    goto LABEL_7;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v31, a1);
LABEL_8:
  if (*((_DWORD *)v5 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v9 = v30;
    if (hasExceptionsAfterHandlingTraps)
    {
      v24 = 1;
      v30 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v18);
        else
          *(_DWORD *)v9 -= 2;
      }
      v13 = 0;
      v12 = 1;
      goto LABEL_14;
    }
  }
  else
  {
    v9 = v30;
  }
  v24 = 0;
  v23 = 0;
  v31 = v9;
  WebCore::HTMLOptionElement::setText(v7, (WTF::StringImpl *)&v31);
  v11 = v31;
  v31 = 0;
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v10);
    else
      *(_DWORD *)v11 -= 2;
  }
  v12 = 0;
  v13 = 1;
LABEL_14:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E329F280[v12])(&v31, &v23);
  if (HIDWORD(v26))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v25, v29);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
    if (HIDWORD(v26))
    {
      v20 = v25;
      v21 = 8 * HIDWORD(v26);
      do
      {
        v22 = *(_QWORD *)v20;
        *(_QWORD *)v20 = 0;
        if (v22)
        {
          if (*(_DWORD *)(v22 + 24) == 2)
          {
            if ((*(_WORD *)(v22 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v22, v14);
          }
          else
          {
            *(_DWORD *)(v22 + 24) -= 2;
          }
        }
        v20 = (WTF *)((char *)v20 + 8);
        v21 -= 8;
      }
      while (v21);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
  }
  v15 = v25;
  if (v27 != (_BYTE *)v25 && v25 != 0)
  {
    v25 = 0;
    LODWORD(v26) = 0;
    WTF::fastFree(v15, v14);
  }
  return v13;
}

unint64_t WebCore::jsHTMLOptionElement_index(uint64_t a1, uint64_t a2)
{
  return WebCore::HTMLOptionElement::index(*(WebCore::HTMLOptionElement **)(a2 + 24)) | 0xFFFE000000000000;
}

unint64_t WebCore::toJSNewlyCreated(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t result;

  if (*(uint64_t (***)(WebCore::Node *__hidden))*a2 == off_1E33C6620)
    return WebCore::createWrapper<WebCore::HTMLOptionElement,WebCore::HTMLOptionElement>(a1, a2, a3);
  result = 523;
  __break(0xC471u);
  return result;
}

unint64_t WebCore::createWrapper<WebCore::HTMLOptionElement,WebCore::HTMLOptionElement>(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t SlowCase;
  WTF *v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *Allocator;
  uint64_t v32;
  int v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  WTF *v39;
  void *v40;
  int v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  WTF *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  WTF *v51;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSHTMLOptionElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLOptionElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLOptionElement::s_info
                                                                    + ~((_QWORD)&WebCore::JSHTMLOptionElement::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSHTMLOptionElement::s_info)
    {
LABEL_3:
      v13 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v13)
        goto LABEL_5;
    }
    else
    {
      v34 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v34) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v34;
        if (v12 == &WebCore::JSHTMLOptionElement::s_info)
          goto LABEL_3;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLOptionElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLOptionElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLOptionElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLOptionElement::s_info);
LABEL_5:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4544);
  if (v24)
    goto LABEL_6;
  v35 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v35))
  {
    __clrex();
LABEL_31:
    MEMORY[0x19AEA534C](v35);
    goto LABEL_32;
  }
  if (__stxr(1u, (unsigned __int8 *)v35))
    goto LABEL_31;
LABEL_32:
  v37 = *(_QWORD *)(v35 + 2824);
  v49 = *(_QWORD *)(v37 + 4544);
  if (!v49)
  {
    v42 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v51, "IsoSpace T");
    v50 = 0;
    MEMORY[0x19AEA3204](v42, &v51, v21 + 192, v21 + 1872, 40, 8, &v50);
    v44 = v50;
    v50 = 0;
    if (v44)
      (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
    v45 = v51;
    v51 = 0;
    if (v45)
    {
      if (*(_DWORD *)v45 == 1)
        WTF::fastFree(v45, v43);
      else
        --*(_DWORD *)v45;
    }
    v49 = v42;
    v46 = *(_QWORD *)(v37 + 4544);
    *(_QWORD *)(v37 + 4544) = v42;
    if (v46)
      (*(void (**)(uint64_t))(*(_QWORD *)v46 + 8))(v46);
    v47 = *(unsigned int *)(v35 + 2844);
    if ((_DWORD)v47 == *(_DWORD *)(v35 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v35 + 2832, (unint64_t)&v49);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v35 + 2832) + 8 * v47) = v42;
      *(_DWORD *)(v35 + 2844) = v47 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v38 = *(_QWORD *)(v23 + 4544);
  *(_QWORD *)(v23 + 4544) = v24;
  if (v38)
  {
    v39 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v39, v40);
  }
  v41 = __ldxr((unsigned __int8 *)v35);
  if (v41 != 1)
  {
    __clrex();
    goto LABEL_39;
  }
  if (__stlxr(0, (unsigned __int8 *)v35))
LABEL_39:
    WTF::Lock::unlockSlow((WTF::Lock *)v35);
LABEL_6:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_7:
    v24[3] = SlowCase + 48;
    goto LABEL_8;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v48 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v48);
    v24[5] = SlowCase + (int)v48;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  v26 = *a2;
  *a2 = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v26;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v27 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v5)
    v28 = (uint64_t *)((char *)v5 + 8);
  else
    v28 = 0;
  if (*(_DWORD *)(v27 + 48))
  {
    v51 = v5;
    JSC::Weak<JSC::JSObject>::Weak(&v50, SlowCase, (uint64_t)&WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner, v27);
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v27 + 32), (uint64_t *)&v51, &v50);
    v32 = v50;
    if (!v50)
      return SlowCase;
LABEL_52:
    *(_QWORD *)(v32 + 8) = 3;
    return SlowCase;
  }
  if ((SlowCase & 8) != 0)
    v29 = (SlowCase - 112) | 1;
  else
    v29 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v29 & 1) != 0)
    v30 = v29 + 47;
  else
    v30 = *(_QWORD *)v29 + 32;
  Allocator = *(_QWORD **)(v30 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v30 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  Allocator[2] = v27;
  v32 = *v28;
  *v28 = (uint64_t)Allocator;
  if (v32)
    goto LABEL_52;
  return SlowCase;
}

unint64_t WebCore::wrap<WebCore::HTMLOptionElement>(uint64_t *a1, WTF *a2)
{
  uint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  unint64_t v6;
  WTF *v8;

  v4 = WebCore::getCachedWrapper<WebCore::HTMLOptionElement>(a1[415], (uint64_t)a2);
  if (v4)
    return v4;
  *((_DWORD *)a2 + 6) += 2;
  v8 = a2;
  v6 = WebCore::toJSNewlyCreated((JSC::VM *)a1, &v8, v5);
  WTF::Ref<WebCore::HTMLProgressElement,WTF::RawPtrTraits<WebCore::HTMLProgressElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLProgressElement>>::~Ref(&v8);
  return v6;
}

unint64_t JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSHTMLOptionElement::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSHTMLOptionElement::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

WTF::StringImpl *WebCore::JSHTMLOptionsCollectionPrototype::finishCreation(WebCore::JSHTMLOptionsCollectionPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t Direct;
  WTF::StringImpl *v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *result;
  WTF::StringImpl *v13;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(a2, (uint64_t)&WebCore::JSHTMLOptionsCollection::s_info, &WebCore::JSHTMLOptionsCollectionPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2712);
  v5 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28) + 672);
  v6 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v5, a2, (unint64_t)v6);
  JSC::JSObject::putDirect((unsigned __int8 *)this, a2, v4, Direct, 4);
  if (*v6 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v8);
  else
    *v6 -= 2;
  v9 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v10 = JSC::jsNontrivialString((uint64_t)a2, &v13);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v9, v10, 6);
  result = v13;
  v13 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v11);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLOptionsCollection::put(uint64_t a1, JSC::JSGlobalObject *a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  _WORD *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  WebCore::HTMLOptionElement *v16;
  unint64_t v17;
  uint64_t **v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  unsigned int v23;
  BOOL v24;
  BOOL v25;
  unsigned int v26;
  WTF::StringImpl *v28;
  JSValue v29;
  WTF::StringImpl *v30;
  unsigned int v31;
  uint64_t v32;
  int OwnProperty;
  int v34;
  WTF *v35;
  WTF *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  int v43[2];
  WTF::StringImpl *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  WTF::StringImpl *v56[3];
  WTF *v57;
  uint64_t v58;
  _BYTE v59[40];
  uint64_t v60;
  JSC::JSGlobalObject *v61;

  v7 = *(_QWORD *)(a5 + 8);
  if (v7 != a1)
    return JSC::JSObject::put();
  v8 = *((_QWORD *)a2 + 7);
  v57 = (WTF *)v59;
  v58 = 4;
  v59[32] = 0;
  v60 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v61 = a2;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v57;
  if (!a3)
    goto LABEL_49;
  v9 = *(_DWORD *)(a3 + 16);
  if ((v9 & 0x20) != 0)
    goto LABEL_49;
  v10 = *(_WORD **)(a3 + 8);
  v11 = *(unsigned int *)(a3 + 4);
  if ((v9 & 4) == 0)
  {
    if ((_DWORD)v11 && (v12 = (unsigned __int16)*v10 - 48, v12 <= 9))
    {
      if (v11 < 2 || *v10 != 48)
      {
        v21 = v10 + 1;
        v22 = v11 - 1;
        while (v22)
        {
          if (v12 <= 0x19999999)
          {
            v23 = *v21 - 48;
            if (v23 <= 9)
            {
              v24 = __CFADD__(v23, 10 * v12);
              v12 = v23 + 10 * v12;
              ++v21;
              --v22;
              if (!v24)
                continue;
            }
          }
          goto LABEL_7;
        }
        v25 = v12 == -1;
        v26 = v12 & 0xFFFFFF00;
        v13 = 0x100000000;
        if (v12 == -1)
        {
          v13 = 0;
          LOBYTE(v12) = 0;
        }
        if (v25)
          v14 = 0;
        else
          v14 = v26;
LABEL_9:
        v15 = v12;
        if ((v13 & 0x100000000) != 0)
          goto LABEL_10;
LABEL_49:
        v55 = 0;
        v56[0] = 0;
        v56[1] = 0;
        v56[2] = (WTF::StringImpl *)14;
        v45 = 0xFFFFFFFF00000000;
        v47 = 0;
        v48 = 0;
        v46 = v7;
        v49 = 0x20000;
        v50 = 0;
        LOBYTE(v51) = 0;
        v52 = 0;
        v53 = 0;
        v54 = 0;
        OwnProperty = WebCore::JSHTMLOptionsCollection::legacyPlatformObjectGetOwnProperty(a1, (uint64_t)a2, a3, (uint64_t)v43, 1);
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0
          || OwnProperty
          && (JSC::PropertyDescriptor::setPropertySlot(), *(_DWORD *)(v8 + 80))
          && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
        {
          v20 = 0;
        }
        else
        {
          v20 = JSC::ordinarySetWithOwnDescriptor();
        }
        if (v52)
        {
          v34 = *(_DWORD *)(v51 + 4);
          if (!v34)
          {
            __break(0xC471u);
            JUMPOUT(0x194C4E7B4);
          }
          *(_DWORD *)(v51 + 4) = v34 - 1;
        }
        goto LABEL_56;
      }
      v13 = 0;
    }
    else
    {
LABEL_7:
      v13 = 0;
      LOBYTE(v12) = 0;
    }
    v14 = 0;
    goto LABEL_9;
  }
  if (!(_DWORD)v11)
  {
    v15 = 0;
    goto LABEL_47;
  }
  v31 = *(unsigned __int8 *)v10 - 48;
  if (v31 > 9 || v11 >= 2 && *(_BYTE *)v10 == 48)
  {
LABEL_46:
    v15 = 0;
    LOBYTE(v11) = 0;
LABEL_47:
    v32 = 0;
    goto LABEL_48;
  }
  v40 = v11 - 1;
  v41 = (unsigned __int8 *)v10 + 1;
  while (v40)
  {
    if (v31 > 0x19999999)
      goto LABEL_46;
    v42 = *v41 - 48;
    if (v42 > 9)
      goto LABEL_46;
    v15 = 0;
    LOBYTE(v11) = 0;
    v32 = 0;
    v24 = __CFADD__(v42, 10 * v31);
    v31 = v42 + 10 * v31;
    --v40;
    ++v41;
    if (v24)
      goto LABEL_48;
  }
  if (v31 == -1)
    v15 = 0;
  else
    v15 = v31 & 0xFFFFFF00;
  if (v31 == -1)
    LOBYTE(v11) = 0;
  else
    LOBYTE(v11) = v31;
  if (v31 == -1)
    v32 = 0;
  else
    v32 = 0x100000000;
LABEL_48:
  v14 = v11;
  if ((v32 & 0x100000000) == 0)
    goto LABEL_49;
LABEL_10:
  if ((a4 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v16 = 0;
    goto LABEL_14;
  }
  *(_QWORD *)v43 = v8;
  v17 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(a4);
  if (v17)
  {
    v16 = *(WebCore::HTMLOptionElement **)(v17 + 24);
    if (v16)
    {
LABEL_14:
      v18 = (uint64_t **)WTF::downcast<WebCore::HTMLSelectElement,WebCore::ContainerNode>(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 24));
      WebCore::HTMLSelectElement::setItem(v18, v16, (void *)(v14 | v15), v43);
      if ((_BYTE)v45)
      {
        v19 = (WTF::StringImpl *)LOBYTE(v43[0]);
        LOBYTE(v55) = v43[0];
        v28 = v44;
        v44 = 0;
        v56[0] = v28;
        if (!*(_QWORD *)(v8 + 16))
        {
          v29.super.isa = (Class)WebCore::createDOMException(a2, (JSC::JSGlobalObject *)LOBYTE(v43[0]), (JSC::JSGlobalObject *)v56);
          JSC::VM::throwException((JSC::VM *)v8, a2, v29);
          v28 = v56[0];
        }
        v56[0] = 0;
        if (v28)
        {
          if (*(_DWORD *)v28 == 2)
            WTF::StringImpl::destroy(v28, v19);
          else
            *(_DWORD *)v28 -= 2;
        }
        if ((_BYTE)v45)
        {
          v30 = v44;
          v44 = 0;
          if (v30)
          {
            if (*(_DWORD *)v30 == 2)
              WTF::StringImpl::destroy(v30, v19);
            else
              *(_DWORD *)v30 -= 2;
          }
        }
      }
      goto LABEL_15;
    }
  }
  JSC::throwTypeError();
LABEL_15:
  v20 = 1;
LABEL_56:
  if (HIDWORD(v58))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v57, v61);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v60;
    if (HIDWORD(v58))
    {
      v37 = v57;
      v38 = 8 * HIDWORD(v58);
      do
      {
        v39 = *(_QWORD *)v37;
        *(_QWORD *)v37 = 0;
        if (v39)
        {
          if (*(_DWORD *)(v39 + 24) == 2)
          {
            if ((*(_WORD *)(v39 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v39, v19);
          }
          else
          {
            *(_DWORD *)(v39 + 24) -= 2;
          }
        }
        v37 = (WTF *)((char *)v37 + 8);
        v38 -= 8;
      }
      while (v38);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v60;
  }
  v35 = v57;
  if (v59 != (_BYTE *)v57 && v57 != 0)
  {
    v57 = 0;
    LODWORD(v58) = 0;
    WTF::fastFree(v35, v19);
  }
  return v20;
}

uint64_t WebCore::JSHTMLOptionsCollection::putByIndex(uint64_t a1, JSC::JSGlobalObject *a2, void *a3, unint64_t a4)
{
  WTF::StringImpl *v6;
  WebCore::HTMLOptionElement *v8;
  unint64_t v9;
  uint64_t **v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF *v13;
  WTF::StringImpl *v16;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WTF::StringImpl *v22;
  WTF *v23;
  uint64_t v24;
  _BYTE v25[40];
  uint64_t v26;
  JSC::JSGlobalObject *v27;
  char v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  char v32;

  v6 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
  v23 = (WTF *)v25;
  v24 = 4;
  v25[32] = 0;
  v26 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v27 = a2;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v23;
  if ((_DWORD)a3 != -1)
  {
    if ((a4 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v8 = 0;
    }
    else
    {
      v30 = v6;
      v9 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(a4);
      if (!v9 || (v8 = *(WebCore::HTMLOptionElement **)(v9 + 24)) == 0)
      {
        JSC::throwTypeError();
LABEL_7:
        v12 = 1;
        goto LABEL_8;
      }
    }
    v10 = (uint64_t **)WTF::downcast<WebCore::HTMLSelectElement,WebCore::ContainerNode>(*(_QWORD *)(*(_QWORD *)(a1 + 24)
                                                                                                 + 24));
    WebCore::HTMLSelectElement::setItem(v10, v8, a3, &v30);
    if (v32)
    {
      v11 = (WTF::StringImpl *)v30;
      v28 = (char)v30;
      v20 = v31;
      v31 = 0;
      v29 = v20;
      if (!*((_QWORD *)v6 + 2))
      {
        v21.super.isa = (Class)WebCore::createDOMException(a2, (JSC::JSGlobalObject *)v30, (JSC::JSGlobalObject *)&v29);
        JSC::VM::throwException(v6, a2, v21);
        v20 = v29;
      }
      v29 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 == 2)
          WTF::StringImpl::destroy(v20, v11);
        else
          *(_DWORD *)v20 -= 2;
      }
      if (v32)
      {
        v22 = v31;
        v31 = 0;
        if (v22)
        {
          if (*(_DWORD *)v22 == 2)
            WTF::StringImpl::destroy(v22, v11);
          else
            *(_DWORD *)v22 -= 2;
        }
      }
    }
    goto LABEL_7;
  }
  JSC::Identifier::from();
  v12 = JSC::ordinarySetSlow();
  v16 = v30;
  v30 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v11);
    else
      *(_DWORD *)v16 -= 2;
  }
LABEL_8:
  if (HIDWORD(v24))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v23, v27);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v26;
    if (HIDWORD(v24))
    {
      v17 = v23;
      v18 = 8 * HIDWORD(v24);
      do
      {
        v19 = *(_QWORD *)v17;
        *(_QWORD *)v17 = 0;
        if (v19)
        {
          if (*(_DWORD *)(v19 + 24) == 2)
          {
            if ((*(_WORD *)(v19 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v19, v11);
          }
          else
          {
            *(_DWORD *)(v19 + 24) -= 2;
          }
        }
        v17 = (WTF *)((char *)v17 + 8);
        v18 -= 8;
      }
      while (v18);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v26;
  }
  v13 = v23;
  if (v25 != (_BYTE *)v23 && v23 != 0)
  {
    v23 = 0;
    LODWORD(v24) = 0;
    WTF::fastFree(v13, v11);
  }
  return v12;
}

uint64_t WebCore::JSHTMLOptionsCollection::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _WORD *v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t result;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  int isSupportedPropertyName;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  _BYTE *v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  unsigned __int16 *v50;
  uint64_t v51;
  unsigned int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 *v60;
  unsigned int v61;
  uint64_t v62;
  unsigned __int8 *v63;
  unsigned int v64;
  WTF::StringImpl *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  char v72;
  JSC::VM *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;

  v6 = *(_QWORD **)(a1 + 24);
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMGlobalObject::s_info && v9 != 0);
  }
  if (v8)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (v13)
  {
    v14 = v13;
    if (!*(_BYTE *)(v13 + 274))
    {
      v15 = *(_BYTE **)(v13 + 496);
      if (!v15)
        v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
      if (*(_QWORD *)v15)
      {
        v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
        if (v16)
        {
          v17 = *(_QWORD *)(v16 + 680);
          if (*(_BYTE *)(v17 + 243))
          {
            if (!*(_BYTE *)(v17 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v15[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (a3)
  {
    v18 = *(_DWORD *)(a3 + 16);
    if ((v18 & 0x20) != 0)
      return JSC::JSObject::deleteProperty();
    v19 = *(_WORD **)(a3 + 8);
    v20 = *(unsigned int *)(a3 + 4);
    if ((v18 & 4) == 0)
    {
      if ((_DWORD)v20 && (v21 = (unsigned __int16)*v19 - 48, v21 <= 9))
      {
        if (v20 < 2 || *v19 != 48)
        {
          v25 = v19 + 1;
          v26 = v20 - 1;
          while (v26)
          {
            if (v21 <= 0x19999999)
            {
              v27 = *v25 - 48;
              if (v27 <= 9)
              {
                v28 = __CFADD__(v27, 10 * v21);
                v21 = v27 + 10 * v21;
                ++v25;
                --v26;
                if (!v28)
                  continue;
              }
            }
            goto LABEL_27;
          }
          v29 = v21 == -1;
          v23 = v21 & 0xFFFFFF00;
          v22 = 0x100000000;
          if (v21 == -1)
          {
            v22 = 0;
            LOBYTE(v21) = 0;
          }
          if (v29)
            v23 = 0;
LABEL_29:
          v21 = v21;
          if ((v22 & 0x100000000) != 0)
            return (*(unsigned int (**)(_QWORD *))(*v6 + 16))(v6) <= (v23 | v21);
          goto LABEL_54;
        }
        v22 = 0;
      }
      else
      {
LABEL_27:
        v22 = 0;
        LOBYTE(v21) = 0;
      }
      v23 = 0;
      goto LABEL_29;
    }
    if ((_DWORD)v20)
    {
      v30 = *(unsigned __int8 *)v19 - 48;
      if (v30 <= 9 && (v20 < 2 || *(_BYTE *)v19 != 48))
      {
        v59 = v20 - 1;
        v60 = (unsigned __int8 *)v19 + 1;
        while (v59)
        {
          if (v30 > 0x19999999)
            goto LABEL_51;
          v61 = *v60 - 48;
          if (v61 > 9)
            goto LABEL_51;
          v21 = 0;
          LOBYTE(v20) = 0;
          v31 = 0;
          v28 = __CFADD__(v61, 10 * v30);
          v30 = v61 + 10 * v30;
          --v59;
          ++v60;
          if (v28)
            goto LABEL_53;
        }
        if (v30 == -1)
          v21 = 0;
        else
          v21 = v30 & 0xFFFFFF00;
        if (v30 == -1)
          LOBYTE(v20) = 0;
        else
          LOBYTE(v20) = v30;
        if (v30 == -1)
          v31 = 0;
        else
          v31 = 0x100000000;
LABEL_53:
        v23 = v20;
        if ((v31 & 0x100000000) != 0)
          return (*(unsigned int (**)(_QWORD *))(*v6 + 16))(v6) <= (v23 | v21);
LABEL_54:
        *(_DWORD *)a3 += 2;
        v32 = (WTF::StringImpl *)a3;
        goto LABEL_55;
      }
LABEL_51:
      v21 = 0;
      LOBYTE(v20) = 0;
    }
    else
    {
      v21 = 0;
    }
    v31 = 0;
    goto LABEL_53;
  }
  v32 = 0;
LABEL_55:
  v65 = v32;
  isSupportedPropertyName = WebCore::HTMLCollection::isSupportedPropertyName(v6, (uint64_t *)&v65);
  v35 = v65;
  v65 = 0;
  if (!v35)
    goto LABEL_58;
  if (*(_DWORD *)v35 == 2)
  {
    WTF::StringImpl::destroy(v35, v33);
    if (isSupportedPropertyName)
      goto LABEL_59;
    return JSC::JSObject::deleteProperty();
  }
  *(_DWORD *)v35 -= 2;
LABEL_58:
  if (!isSupportedPropertyName)
    return JSC::JSObject::deleteProperty();
LABEL_59:
  v36 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v67 = 0xFFFFFFFF00000000;
  v69 = 0;
  v70 = 0;
  v68 = a1;
  v71 = 196608;
  v72 = 0;
  v75 = 0;
  v76 = 0;
  v73 = v36;
  ++*((_DWORD *)v36 + 1);
  v74 = 1;
  if ((a3 >> 4))
  {
    v37 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((a3 >> 4) & ~*(_DWORD *)(v37 + 0x20)) == 0)
    {
      v38 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v36);
      if (v38)
      {
        v77 = a3;
        v39 = JSC::PropertyTable::get(v38, (uint64_t *)&v77);
        if ((_DWORD)v39 != -1)
        {
          if ((int)v39 > 63)
          {
            v46 = *(_QWORD *)(a1 + 8) - 8;
            v47 = 0x3F00000000 - (v39 << 32);
          }
          else
          {
            v46 = a1 + 16;
            v47 = v39 << 32;
          }
          v48 = *(_QWORD *)(v46 + (v47 >> 29));
          if ((v48 & 0xFFFE000000000002) == 0)
          {
            v49 = *(unsigned __int8 *)(v48 + 5);
            if (v49 == 6)
            {
              v53 = *(_DWORD *)(v37 + 16) & 3;
              v54 = *(_QWORD *)(v48 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x4C))
              {
                v56 = *(_QWORD *)(v48 + 24);
                v55 = *(_QWORD *)(v48 + 32);
                v65 = *(WTF::StringImpl **)(v48 + 8);
                v66 = v54;
                LODWORD(v67) = HIDWORD(v39);
                v69 = a1;
                BYTE1(v71) = 3;
                result = 1;
                if (v53 != 2)
                  LOBYTE(v71) = 1;
                HIBYTE(v71) = 1;
                v75 = v56;
                v76 = v55;
              }
              else
              {
                v65 = *(WTF::StringImpl **)(v48 + 8);
                v66 = v54;
                LODWORD(v67) = HIDWORD(v39);
                v69 = a1;
                result = 1;
                BYTE1(v71) = 3;
                if (v53 != 2)
                  LOBYTE(v71) = 1;
              }
              goto LABEL_74;
            }
            if (v49 == 5)
            {
              JSC::JSObject::fillGetterPropertySlot();
              result = 1;
              goto LABEL_74;
            }
          }
          v65 = (WTF::StringImpl *)v48;
          v69 = a1;
          v67 = __PAIR64__(v39, HIDWORD(v39));
          result = 1;
          LOWORD(v71) = 257;
          goto LABEL_74;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
  {
    result = JSC::JSObject::getOwnStaticPropertySlot();
    if (!a3 || (result & 1) != 0)
      goto LABEL_74;
  }
  else if (!a3)
  {
LABEL_73:
    result = 0;
    goto LABEL_74;
  }
  v40 = *(_DWORD *)(a3 + 16);
  if ((v40 & 0x20) != 0)
    goto LABEL_73;
  v41 = *(_BYTE **)(a3 + 8);
  v42 = *(unsigned int *)(a3 + 4);
  if ((v40 & 4) != 0)
  {
    if (!(_DWORD)v42 || (v57 = *v41 - 48, v57 > 9) || v42 >= 2 && *v41 == 48)
    {
LABEL_113:
      v58 = 0;
    }
    else
    {
      v62 = v42 - 1;
      v63 = v41 + 1;
      while (v62)
      {
        if (v57 > 0x19999999)
          goto LABEL_113;
        v64 = *v63 - 48;
        if (v64 > 9)
          goto LABEL_113;
        v58 = 0;
        v28 = __CFADD__(v64, 10 * v57);
        v57 = v64 + 10 * v57;
        --v62;
        ++v63;
        if (v28)
          goto LABEL_114;
      }
      v58 = 0x100000000;
      if (v57 == -1)
        v58 = 0;
    }
LABEL_114:
    if ((v58 & 0x100000000) == 0)
      goto LABEL_73;
  }
  else
  {
    if ((_DWORD)v42
      && (v43 = *(unsigned __int16 *)v41 - 48, v43 <= 9)
      && (v42 < 2 || *(_WORD *)v41 != 48))
    {
      v50 = (unsigned __int16 *)(v41 + 2);
      v51 = v42 - 1;
      while (v51)
      {
        if (v43 <= 0x19999999)
        {
          v52 = *v50 - 48;
          if (v52 <= 9)
          {
            v28 = __CFADD__(v52, 10 * v43);
            v43 = v52 + 10 * v43;
            ++v50;
            --v51;
            if (!v28)
              continue;
          }
        }
        goto LABEL_71;
      }
      v10 = v43 == -1;
      v44 = 0x100000000;
      if (v10)
        v44 = 0;
    }
    else
    {
LABEL_71:
      v44 = 0;
    }
    if ((v44 & 0x100000000) == 0)
      goto LABEL_73;
  }
  result = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_74:
  if (v74)
  {
    v45 = *((_DWORD *)v73 + 1);
    if (!v45)
    {
      __break(0xC471u);
      JUMPOUT(0x194C4EFC4);
    }
    *((_DWORD *)v73 + 1) = v45 - 1;
  }
  if ((_DWORD)result)
    return JSC::JSObject::deleteProperty();
  return result;
}

uint64_t WebCore::JSHTMLOptionsCollection::deletePropertyByIndex(WebCore::JSHTMLOptionsCollection *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  }
  if (!v15[65])
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSHTMLOptionsCollection::getOwnPropertySlot(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return WebCore::JSHTMLOptionsCollection::legacyPlatformObjectGetOwnProperty(a1, a2, a3, a4, 0);
}

uint64_t WebCore::JSHTMLOptionsCollection::getOwnPropertySlotByIndex(WebCore::HTMLOptionsCollection **this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  JSC::VM *v8;
  WTF *v9;
  unint64_t v10;
  uint64_t OwnPropertySlotByIndex;
  void *v13;
  WTF *v14;
  unint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF *v18;
  char v19;
  WTF::StringImpl *v20;

  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((_DWORD)a3 == -1)
  {
    JSC::Identifier::from();
    _ZN7WebCoreL26accessVisibleNamedPropertyILNS_22LegacyOverrideBuiltInsE0ENS_23JSHTMLOptionsCollectionERZNS_L39visibleNamedPropertyItemAccessorFunctorINS_12IDLInterfaceINS_17HTMLOptionElementEEES2_ZNS2_34legacyPlatformObjectGetOwnPropertyEPN3JSC8JSObjectEPNS7_14JSGlobalObjectENS7_12PropertyNameERNS7_12PropertySlotEbE3__0EEDcOT1_EUlRS2_SC_E_EEDTclfp2_fp0_fp1_EERSA_RT0_SC_SI_((unint64_t)&v18, (uint64_t)a2, (uint64_t)this, (unint64_t)v20);
    if (v19)
    {
      v14 = v18;
      if (v18)
        v15 = WebCore::wrap<WebCore::HTMLOptionElement>(*(uint64_t **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v18);
      else
        v15 = 2;
      if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
      {
        OwnPropertySlotByIndex = 0;
      }
      else
      {
        *(_QWORD *)a4 = v15;
        *(_DWORD *)(a4 + 16) = 2;
        *(_QWORD *)(a4 + 32) = this;
        OwnPropertySlotByIndex = 1;
        *(_BYTE *)(a4 + 49) = 1;
      }
      std::optional<WTF::RefPtr<WebCore::HTMLOptionElement,WTF::RawPtrTraits<WebCore::HTMLOptionElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLOptionElement>>>::~optional((uint64_t *)&v18, v14);
    }
    else
    {
      std::optional<WTF::RefPtr<WebCore::HTMLOptionElement,WTF::RawPtrTraits<WebCore::HTMLOptionElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLOptionElement>>>::~optional((uint64_t *)&v18, v13);
      OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
    }
    v17 = v20;
    v20 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    return OwnPropertySlotByIndex;
  }
  v9 = (WTF *)WebCore::HTMLOptionsCollection::item(this[3], a3);
  if (v9)
  {
    v10 = WebCore::wrap<WebCore::HTMLOptionElement>(*(uint64_t **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v9);
    if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
      return 0;
    *(_QWORD *)a4 = v10;
    *(_DWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 32) = this;
    OwnPropertySlotByIndex = 1;
    *(_BYTE *)(a4 + 49) = 1;
    return OwnPropertySlotByIndex;
  }
  return JSC::JSObject::getOwnPropertySlotByIndex();
}

uint64_t WebCore::JSHTMLOptionsCollection::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v5;
  int v6;
  int v7;
  uint64_t *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl **v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  int v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  _QWORD *v44;
  WTF::StringImpl *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  WTF::StringImpl *v56;
  int v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unsigned int v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t *v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  unint64_t v76;
  unsigned int v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v86;
  WTF::StringImpl *v87[2];
  char v88;
  WTF::StringImpl *v89;

  v5 = WebCore::CollectionIndexCache<WebCore::HTMLOptionsCollection,WebCore::ElementDescendantIterator<WebCore::Element>>::nodeCount(*(_QWORD *)(a1 + 24) + 40, *(WebCore::HTMLCollection **)(a1 + 24));
  if (v5)
  {
    v6 = v5;
    v7 = 0;
    v8 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v10 = v86;
      v89 = v86;
      v11 = *((_DWORD *)v86 + 4);
      if ((v11 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v86 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v12 = *a3;
      v13 = *(unsigned int *)(*a3 + 20);
      if (v13 <= 0x13)
      {
        if ((_DWORD)v13)
        {
          v14 = *(WTF::StringImpl ***)(v12 + 8);
          while (*v14 != v86)
          {
            ++v14;
            if (!--v13)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v11 & 0x20) != 0)
        {
          v35 = *(_DWORD *)v10 + 2;
        }
        else
        {
          if ((v11 & 0x10) != 0)
          {
            *(_DWORD *)v10 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v10 = v87[0];
          }
          v35 = *(_DWORD *)v10;
          *(_DWORD *)v10 += 2;
          if (!v35)
          {
            WTF::StringImpl::destroy(v10, v9);
LABEL_54:
            v36 = (uint64_t *)(v12 + 8);
            v87[0] = v10;
            v37 = *(unsigned int *)(v12 + 20);
            if ((_DWORD)v37 == *(_DWORD *)(v12 + 16))
            {
              v38 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v36, v37 + 1, (unint64_t)v87);
              v37 = *(unsigned int *)(v12 + 20);
              v39 = *(_QWORD *)(v12 + 8);
              v40 = *v38;
              *v38 = 0;
              *(_QWORD *)(v39 + 8 * v37) = v40;
            }
            else
            {
              v41 = *v36;
              v87[0] = 0;
              *(_QWORD *)(v41 + 8 * v37) = v10;
            }
            *(_DWORD *)(v12 + 20) = v37 + 1;
            v42 = v87[0];
            v87[0] = 0;
            if (v42)
            {
              if (*(_DWORD *)v42 == 2)
                WTF::StringImpl::destroy(v42, v9);
              else
                *(_DWORD *)v42 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v10 = v35;
        goto LABEL_54;
      }
      if (!*v8 || !*(_DWORD *)(*v8 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v89, (uint64_t)v87);
      if (v88)
      {
        v10 = v89;
        v12 = *a3;
        v11 = *((_DWORD *)v89 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v43 = v86;
      v86 = 0;
      if (v43)
      {
        if (*(_DWORD *)v43 == 2)
          WTF::StringImpl::destroy(v43, v9);
        else
          *(_DWORD *)v43 -= 2;
      }
      if (++v7 == v6)
        goto LABEL_69;
    }
    v15 = *(uint64_t **)(v12 + 8);
    v16 = &v15[v13];
    while (1)
    {
      v17 = *v15;
      v18 = *v8;
      if (*v8
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v18 = *v8) != 0))
      {
        v19 = *(_DWORD *)(v18 - 8);
      }
      else
      {
        v19 = 0;
      }
      v20 = (~(v17 << 32) + v17) ^ ((unint64_t)(~(v17 << 32) + v17) >> 22);
      v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
      v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
      v23 = v19 & ((v22 >> 31) ^ v22);
      v24 = (uint64_t *)(v18 + 8 * v23);
      v25 = *v24;
      if (*v24)
      {
        v26 = 0;
        v27 = 1;
        while (v25 != v17)
        {
          if (v25 == -1)
            v26 = v24;
          v23 = (v23 + v27) & v19;
          v24 = (uint64_t *)(v18 + 8 * v23);
          v25 = *v24;
          ++v27;
          if (!*v24)
          {
            if (v26)
            {
              *v26 = 0;
              --*(_DWORD *)(*v8 - 16);
              v24 = v26;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v24 = v17;
      v28 = *v8;
      v29 = *v8 ? *(_DWORD *)(v28 - 12) + 1 : 1;
      *(_DWORD *)(v28 - 12) = v29;
      v30 = *v8;
      v31 = *v8 ? *(_DWORD *)(v30 - 12) : 0;
      v32 = (*(_DWORD *)(v30 - 16) + v31);
      v33 = *(unsigned int *)(v30 - 4);
      if (v33 > 0x400)
        break;
      if (3 * v33 <= 4 * v32)
      {
        if ((_DWORD)v33)
          goto LABEL_43;
        v34 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v15 == v16)
        goto LABEL_17;
    }
    if (v33 > 2 * v32)
      goto LABEL_47;
LABEL_43:
    v34 = (_DWORD)v33 << (6 * *(_DWORD *)(v30 - 12) >= (2 * v33));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v34, v24);
    goto LABEL_47;
  }
LABEL_69:
  v44 = *(_QWORD **)(a1 + 24);
  (*(void (**)(_QWORD *))(*v44 + 80))(v44);
  v46 = v44[4];
  v47 = *(unsigned int *)(v46 + 28);
  if ((_DWORD)v47)
  {
    v48 = *(uint64_t **)(v46 + 16);
    v49 = &v48[v47];
    v50 = a3 + 1;
    while (1)
    {
      v51 = *v48;
      if (*v48)
        *(_DWORD *)v51 += 2;
      v89 = (WTF::StringImpl *)v51;
      v52 = *(_DWORD *)(v51 + 16);
      if ((v52 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*(_BYTE *)(v51 + 36) & 4) != 0)
        {
LABEL_131:
          if (*(_DWORD *)v51 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v51, v45);
          else
            *(_DWORD *)v51 -= 2;
          goto LABEL_133;
        }
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_131;
      }
      v53 = *a3;
      v54 = *(unsigned int *)(*a3 + 20);
      if (v54 > 0x13)
        break;
      if ((_DWORD)v54)
      {
        v55 = *(_QWORD **)(v53 + 8);
        while (*v55 != v51)
        {
          ++v55;
          if (!--v54)
            goto LABEL_84;
        }
LABEL_130:
        if (v51)
          goto LABEL_131;
        goto LABEL_133;
      }
LABEL_84:
      v56 = (WTF::StringImpl *)v51;
      if ((v52 & 0x20) != 0)
      {
LABEL_91:
        v57 = *(_DWORD *)v56 + 2;
LABEL_123:
        *(_DWORD *)v56 = v57;
        goto LABEL_124;
      }
LABEL_85:
      if ((v52 & 0x10) != 0)
      {
        *(_DWORD *)v56 += 2;
      }
      else
      {
        WTF::AtomStringImpl::addSlowCase();
        v56 = v87[0];
      }
      v57 = *(_DWORD *)v56;
      *(_DWORD *)v56 += 2;
      if (v57)
        goto LABEL_123;
      WTF::StringImpl::destroy(v56, v45);
LABEL_124:
      v78 = (uint64_t *)(v53 + 8);
      v87[0] = v56;
      v79 = *(unsigned int *)(v53 + 20);
      if ((_DWORD)v79 == *(_DWORD *)(v53 + 16))
      {
        v80 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v78, v79 + 1, (unint64_t)v87);
        v79 = *(unsigned int *)(v53 + 20);
        v81 = *(_QWORD *)(v53 + 8);
        v82 = *v80;
        *v80 = 0;
        *(_QWORD *)(v81 + 8 * v79) = v82;
      }
      else
      {
        v83 = *v78;
        v87[0] = 0;
        *(_QWORD *)(v83 + 8 * v79) = v56;
      }
      *(_DWORD *)(v53 + 20) = v79 + 1;
      v84 = v87[0];
      v87[0] = 0;
      if (!v84)
        goto LABEL_130;
      if (*(_DWORD *)v84 != 2)
      {
        *(_DWORD *)v84 -= 2;
        goto LABEL_130;
      }
      WTF::StringImpl::destroy(v84, v45);
      if (v51)
        goto LABEL_131;
LABEL_133:
      if (++v48 == v49)
        return JSC::JSObject::getOwnPropertyNames();
    }
    if (*v50 && *(_DWORD *)(*v50 - 12))
    {
LABEL_89:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v89, (uint64_t)v87);
      if (!v88)
        goto LABEL_130;
      v56 = v89;
      v53 = *a3;
      v52 = *((_DWORD *)v89 + 4);
      if ((v52 & 0x20) != 0)
        goto LABEL_91;
      goto LABEL_85;
    }
    v58 = *(uint64_t **)(v53 + 8);
    v59 = &v58[v54];
    while (1)
    {
      v60 = *v58;
      v61 = *v50;
      if (*v50
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v61 = *v50) != 0))
      {
        v62 = *(_DWORD *)(v61 - 8);
      }
      else
      {
        v62 = 0;
      }
      v63 = (~(v60 << 32) + v60) ^ ((unint64_t)(~(v60 << 32) + v60) >> 22);
      v64 = 9 * ((v63 + ~(v63 << 13)) ^ ((v63 + ~(v63 << 13)) >> 8));
      v65 = (v64 ^ (v64 >> 15)) + ~((v64 ^ (v64 >> 15)) << 27);
      v66 = v62 & ((v65 >> 31) ^ v65);
      v67 = (uint64_t *)(v61 + 8 * v66);
      v68 = *v67;
      if (*v67)
      {
        v69 = 0;
        v70 = 1;
        while (v68 != v60)
        {
          if (v68 == -1)
            v69 = v67;
          v66 = (v66 + v70) & v62;
          v67 = (uint64_t *)(v61 + 8 * v66);
          v68 = *v67;
          ++v70;
          if (!*v67)
          {
            if (v69)
            {
              *v69 = 0;
              --*(_DWORD *)(*v50 - 16);
              v67 = v69;
            }
            goto LABEL_104;
          }
        }
        goto LABEL_117;
      }
LABEL_104:
      *v67 = v60;
      v71 = *v50;
      v72 = *v50 ? *(_DWORD *)(v71 - 12) + 1 : 1;
      *(_DWORD *)(v71 - 12) = v72;
      v73 = *v50;
      v74 = *v50 ? *(_DWORD *)(v73 - 12) : 0;
      v75 = (*(_DWORD *)(v73 - 16) + v74);
      v76 = *(unsigned int *)(v73 - 4);
      if (v76 > 0x400)
        break;
      if (3 * v76 <= 4 * v75)
      {
        if ((_DWORD)v76)
          goto LABEL_113;
        v77 = 8;
        goto LABEL_116;
      }
LABEL_117:
      if (++v58 == v59)
        goto LABEL_89;
    }
    if (v76 > 2 * v75)
      goto LABEL_117;
LABEL_113:
    v77 = (_DWORD)v76 << (6 * *(_DWORD *)(v73 - 12) >= (2 * v76));
LABEL_116:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v77, v67);
    goto LABEL_117;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSHTMLOptionsCollection::defineOwnProperty(uint64_t a1, WTF::StringImpl **a2, unint64_t a3, JSC::PropertyDescriptor *this, int a5)
{
  WTF::StringImpl **v8;
  JSC::VM *v10;
  int v11;
  _BYTE *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unint64_t v18;
  WebCore::HTMLOptionElement *v19;
  unint64_t v20;
  uint64_t **v21;
  uint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;
  unsigned int v25;
  BOOL v26;
  BOOL v27;
  unsigned int v28;
  WTF::StringImpl *v29;
  JSValue v30;
  WTF::StringImpl *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BYTE *v38;
  uint64_t v39;
  unsigned int v40;
  unsigned __int16 *v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int OwnPropertySlotByIndex;
  int OwnStaticPropertySlot;
  int v50;
  WTF::StringImpl *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  unsigned int v56;
  int v57;
  int v58;
  int hasExceptionsAfterHandlingTraps;
  _QWORD *v60;
  uint64_t v61;
  int isSupportedPropertyName;
  WTF::StringImpl *v63;
  int v64;
  __int128 v65;
  WTF *v66;
  WTF *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 *v73;
  unsigned int v74;
  WTF::StringImpl *v75[2];
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  char v80;
  JSC::VM *v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  WTF *v85;
  uint64_t v86;
  _BYTE v87[40];
  uint64_t v88;
  JSC::JSGlobalObject *v89;
  JSC::VM *v90;
  WTF::StringImpl *v91;
  WTF::StringImpl *v92;

  v8 = a2;
  v10 = a2[7];
  v90 = v10;
  v85 = (WTF *)v87;
  v86 = 4;
  v87[32] = 0;
  v88 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v89 = (JSC::JSGlobalObject *)a2;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v85;
  if (!a3)
    goto LABEL_50;
  v11 = *(_DWORD *)(a3 + 16);
  if ((v11 & 0x20) != 0)
  {
LABEL_117:
    v65 = *((_OWORD *)this + 1);
    *(_OWORD *)v75 = *(_OWORD *)this;
    v76 = v65;
    v22 = JSC::JSObject::defineOwnProperty();
    goto LABEL_119;
  }
  v12 = *(_BYTE **)(a3 + 8);
  v13 = *(unsigned int *)(a3 + 4);
  if ((v11 & 4) != 0)
  {
    if ((_DWORD)v13)
    {
      v32 = *v12 - 48;
      if (v32 <= 9 && (v13 < 2 || *v12 != 48))
      {
        v72 = v13 - 1;
        v73 = v12 + 1;
        while (v72)
        {
          if (v32 > 0x19999999)
            goto LABEL_47;
          v74 = *v73 - 48;
          if (v74 > 9)
            goto LABEL_47;
          v17 = 0;
          LOBYTE(v13) = 0;
          v33 = 0;
          v26 = __CFADD__(v74, 10 * v32);
          v32 = v74 + 10 * v32;
          --v72;
          ++v73;
          if (v26)
            goto LABEL_49;
        }
        if (v32 == -1)
          v17 = 0;
        else
          v17 = v32 & 0xFFFFFF00;
        if (v32 == -1)
          LOBYTE(v13) = 0;
        else
          LOBYTE(v13) = v32;
        if (v32 == -1)
          v33 = 0;
        else
          v33 = 0x100000000;
LABEL_49:
        v16 = v13;
        if ((v33 & 0x100000000) != 0)
          goto LABEL_9;
        goto LABEL_50;
      }
LABEL_47:
      v17 = 0;
      LOBYTE(v13) = 0;
    }
    else
    {
      v17 = 0;
    }
    v33 = 0;
    goto LABEL_49;
  }
  if (!(_DWORD)v13 || (v14 = *(unsigned __int16 *)v12 - 48, v14 > 9))
  {
LABEL_6:
    v15 = 0;
    LOBYTE(v14) = 0;
LABEL_7:
    v16 = 0;
    goto LABEL_8;
  }
  if (v13 >= 2 && *(_WORD *)v12 == 48)
  {
    v15 = 0;
    goto LABEL_7;
  }
  v23 = (unsigned __int16 *)(v12 + 2);
  v24 = v13 - 1;
  while (v24)
  {
    if (v14 <= 0x19999999)
    {
      v25 = *v23 - 48;
      if (v25 <= 9)
      {
        v26 = __CFADD__(v25, 10 * v14);
        v14 = v25 + 10 * v14;
        ++v23;
        --v24;
        if (!v26)
          continue;
      }
    }
    goto LABEL_6;
  }
  v27 = v14 == -1;
  v28 = v14 & 0xFFFFFF00;
  v15 = 0x100000000;
  if (v14 == -1)
  {
    v15 = 0;
    LOBYTE(v14) = 0;
  }
  if (v27)
    v16 = 0;
  else
    v16 = v28;
LABEL_8:
  v17 = v14;
  if ((v15 & 0x100000000) != 0)
  {
LABEL_9:
    if ((JSC::PropertyDescriptor::isDataDescriptor(this) & 1) != 0)
    {
      v18 = *(_QWORD *)this;
      if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v19 = 0;
      }
      else
      {
        v75[0] = v8[7];
        v20 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(v18);
        if (!v20 || (v19 = *(WebCore::HTMLOptionElement **)(v20 + 24)) == 0)
        {
          JSC::throwTypeError();
LABEL_20:
          v22 = 1;
          goto LABEL_119;
        }
      }
      v21 = (uint64_t **)WTF::downcast<WebCore::HTMLSelectElement,WebCore::ContainerNode>(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 24));
      WebCore::HTMLSelectElement::setItem(v21, v19, (void *)(v16 | v17), v75);
      if ((_BYTE)v76)
      {
        a2 = (WTF::StringImpl **)LOBYTE(v75[0]);
        LOBYTE(v91) = v75[0];
        v29 = v75[1];
        v75[1] = 0;
        v92 = v29;
        if (!*((_QWORD *)v90 + 2))
        {
          v30.super.isa = (Class)WebCore::createDOMException((JSC *)v8, (JSC::JSGlobalObject *)LOBYTE(v75[0]), (JSC::JSGlobalObject *)&v92);
          JSC::VM::throwException(v90, (JSC::JSGlobalObject *)v8, v30);
          v29 = v92;
        }
        v92 = 0;
        if (v29)
        {
          if (*(_DWORD *)v29 == 2)
            WTF::StringImpl::destroy(v29, (WTF::StringImpl *)a2);
          else
            *(_DWORD *)v29 -= 2;
        }
        if ((_BYTE)v76)
        {
          v31 = v75[1];
          v75[1] = 0;
          if (v31)
          {
            if (*(_DWORD *)v31 == 2)
              WTF::StringImpl::destroy(v31, (WTF::StringImpl *)a2);
            else
              *(_DWORD *)v31 -= 2;
          }
        }
      }
      goto LABEL_20;
    }
    if (a5)
      JSC::throwTypeError();
    goto LABEL_118;
  }
LABEL_50:
  *(_QWORD *)&v76 = 0xFFFFFFFF00000000;
  v77 = 0;
  v78 = 0;
  *((_QWORD *)&v76 + 1) = a1;
  v79 = 196608;
  v80 = 0;
  v83 = 0;
  v84 = 0;
  v81 = v10;
  ++*((_DWORD *)v10 + 1);
  v82 = 1;
  if ((a3 >> 4))
  {
    v34 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((a3 >> 4) & ~*(_DWORD *)(v34 + 0x20)) == 0)
    {
      v35 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v10);
      if (v35)
      {
        v91 = (WTF::StringImpl *)a3;
        v36 = JSC::PropertyTable::get(v35, (uint64_t *)&v91);
        if ((_DWORD)v36 != -1)
        {
          if ((int)v36 > 63)
          {
            v44 = *(_QWORD *)(a1 + 8) - 8;
            v45 = 0x3F00000000 - (v36 << 32);
          }
          else
          {
            v44 = a1 + 16;
            v45 = v36 << 32;
          }
          v46 = *(_QWORD *)(v44 + (v45 >> 29));
          if ((v46 & 0xFFFE000000000002) == 0)
          {
            v47 = *(unsigned __int8 *)(v46 + 5);
            if (v47 == 6)
            {
              v50 = *(_DWORD *)(v34 + 16) & 3;
              v51 = *(WTF::StringImpl **)(v46 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v46 & 0xFFFFFFFE) + 0x4C))
              {
                v53 = *(_QWORD *)(v46 + 24);
                v52 = *(_QWORD *)(v46 + 32);
                v75[0] = *(WTF::StringImpl **)(v46 + 8);
                v75[1] = v51;
                LODWORD(v76) = HIDWORD(v36);
                v77 = a1;
                BYTE1(v79) = 3;
                OwnPropertySlotByIndex = 1;
                if (v50 != 2)
                  LOBYTE(v79) = 1;
                HIBYTE(v79) = 1;
                v83 = v53;
                v84 = v52;
              }
              else
              {
                v75[0] = *(WTF::StringImpl **)(v46 + 8);
                v75[1] = v51;
                LODWORD(v76) = HIDWORD(v36);
                v77 = a1;
                OwnPropertySlotByIndex = 1;
                BYTE1(v79) = 3;
                if (v50 != 2)
                  LOBYTE(v79) = 1;
              }
              goto LABEL_99;
            }
            if (v47 == 5)
            {
              JSC::JSObject::fillGetterPropertySlot();
              OwnPropertySlotByIndex = 1;
              goto LABEL_99;
            }
          }
          v75[0] = (WTF::StringImpl *)v46;
          v77 = a1;
          *(_QWORD *)&v76 = __PAIR64__(v36, HIDWORD(v36));
          OwnPropertySlotByIndex = 1;
          LOWORD(v79) = 257;
          goto LABEL_99;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
  {
    OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
    OwnPropertySlotByIndex = OwnStaticPropertySlot;
    if (!a3 || (OwnStaticPropertySlot & 1) != 0)
      goto LABEL_99;
  }
  else if (!a3)
  {
    goto LABEL_98;
  }
  v37 = *(_DWORD *)(a3 + 16);
  if ((v37 & 0x20) != 0)
    goto LABEL_98;
  v38 = *(_BYTE **)(a3 + 8);
  v39 = *(unsigned int *)(a3 + 4);
  if ((v37 & 4) != 0)
  {
    if (!(_DWORD)v39)
      goto LABEL_98;
    v40 = *v38 - 48;
    if (v40 > 9 || v39 >= 2 && *v38 == 48)
      goto LABEL_98;
    v54 = v39 - 1;
    v55 = v38 + 1;
    while (v54)
    {
      if (v40 > 0x19999999)
        goto LABEL_98;
      v56 = *v55 - 48;
      if (v56 > 9)
        goto LABEL_98;
      OwnPropertySlotByIndex = 0;
      v26 = __CFADD__(v56, 10 * v40);
      v40 = v56 + 10 * v40;
      --v54;
      ++v55;
      if (v26)
        goto LABEL_99;
    }
  }
  else
  {
    if (!(_DWORD)v39)
      goto LABEL_98;
    v40 = *(unsigned __int16 *)v38 - 48;
    if (v40 > 9 || v39 >= 2 && *(_WORD *)v38 == 48)
      goto LABEL_98;
    v41 = (unsigned __int16 *)(v38 + 2);
    v42 = v39 - 1;
    while (v42)
    {
      if (v40 <= 0x19999999)
      {
        v43 = *v41 - 48;
        if (v43 <= 9)
        {
          v26 = __CFADD__(v43, 10 * v40);
          v40 = v43 + 10 * v40;
          ++v41;
          --v42;
          if (!v26)
            continue;
        }
      }
      goto LABEL_98;
    }
  }
  if (v40 == -1)
  {
LABEL_98:
    OwnPropertySlotByIndex = 0;
    goto LABEL_99;
  }
  OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_99:
  v57 = *((_DWORD *)v81 + 1);
  if (!v57)
  {
    __break(0xC471u);
    JUMPOUT(0x194C501D4);
  }
  *((_DWORD *)v81 + 1) = v57 - 1;
  v81 = 0;
  v82 = 0;
  if (*((_DWORD *)v90 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v90);
    if (((hasExceptionsAfterHandlingTraps | OwnPropertySlotByIndex) & 1) != 0)
    {
      v58 = hasExceptionsAfterHandlingTraps ^ 1;
      goto LABEL_113;
    }
  }
  else if ((OwnPropertySlotByIndex & 1) != 0)
  {
    v58 = 1;
    goto LABEL_113;
  }
  v60 = *(_QWORD **)(a1 + 24);
  if (a3)
  {
    *(_DWORD *)a3 += 2;
    v61 = a3;
  }
  else
  {
    v61 = 0;
  }
  v91 = (WTF::StringImpl *)v61;
  isSupportedPropertyName = WebCore::HTMLCollection::isSupportedPropertyName(v60, (uint64_t *)&v91);
  v63 = v91;
  v91 = 0;
  if (v63)
  {
    if (*(_DWORD *)v63 == 2)
      WTF::StringImpl::destroy(v63, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v63 -= 2;
  }
  if ((isSupportedPropertyName & a5) == 1)
  {
    JSC::throwTypeError();
    v58 = 0;
  }
  else
  {
    v58 = isSupportedPropertyName ^ 1;
  }
LABEL_113:
  if (v82)
  {
    v64 = *((_DWORD *)v81 + 1);
    if (!v64)
    {
      __break(0xC471u);
      JUMPOUT(0x194C501F4);
    }
    *((_DWORD *)v81 + 1) = v64 - 1;
  }
  if (v58)
    goto LABEL_117;
LABEL_118:
  v22 = 0;
LABEL_119:
  if (HIDWORD(v86))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v85, v89);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v88;
    if (HIDWORD(v86))
    {
      v69 = v85;
      v70 = 8 * HIDWORD(v86);
      do
      {
        v71 = *(_QWORD *)v69;
        *(_QWORD *)v69 = 0;
        if (v71)
        {
          if (*(_DWORD *)(v71 + 24) == 2)
          {
            if ((*(_WORD *)(v71 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v71, a2);
          }
          else
          {
            *(_DWORD *)(v71 + 24) -= 2;
          }
        }
        v69 = (WTF *)((char *)v69 + 8);
        v70 -= 8;
      }
      while (v70);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v88;
  }
  v66 = v85;
  if (v87 != (_BYTE *)v85 && v85 != 0)
  {
    v85 = 0;
    LODWORD(v86) = 0;
    WTF::fastFree(v66, a2);
  }
  return v22;
}

uint64_t WebCore::JSHTMLOptionsCollection::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLCollection::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLCollection::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLCollection::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLOptionsCollection::createPrototype(WebCore::JSHTMLOptionsCollection *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  uint64_t v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = WebCore::getDOMStructure<WebCore::JSHTMLCollection>((uint64_t *)this, (uint64_t)a2);
  v6 = JSC::Structure::create((uint64_t *)this, v3, *(JSC::JSCell **)(v5 + 48));
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLOptionsCollectionPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSHTMLOptionsCollectionPrototype::create(WebCore::JSHTMLOptionsCollectionPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLOptionsCollectionPrototype::finishCreation((WebCore::JSHTMLOptionsCollectionPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOptionsCollection>,(WebCore::DOMConstructorID)560>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4480);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCollection>,(WebCore::DOMConstructorID)519>(a1, a2);
  v7 = v6;
  LODWORD(v21) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v21, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOptionsCollection>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v20);
    v10[2848] = v2 + (int)v20;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v21);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLOptionsCollection>((WebCore::JSHTMLOptionsCollection *)a1, (JSC::VM *)a2)+ 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4480) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

uint64_t WebCore::JSHTMLOptionsCollection::legacyPlatformObjectGetOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  JSC::VM *v9;
  int v10;
  _WORD *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BYTE *v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 *v27;
  uint64_t v28;
  unsigned int v29;
  BOOL v30;
  unsigned __int16 *v31;
  uint64_t v32;
  unsigned int v33;
  BOOL v34;
  uint64_t OwnStaticPropertySlot;
  WTF *v36;
  unint64_t v37;
  WTF *v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  _BYTE *v42;
  uint64_t v43;
  unsigned int v44;
  unsigned __int16 *v45;
  uint64_t i;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  unsigned int v58;
  uint64_t v59;
  unsigned __int8 *v60;
  unsigned int v61;
  uint64_t v62;
  unsigned __int8 *v63;
  unsigned int v64;
  unsigned __int8 *v65;
  uint64_t v66;
  unsigned int v67;
  WTF *v68;
  char v69;

  v9 = *(JSC::VM **)(a2 + 56);
  if (!a3)
    goto LABEL_10;
  v10 = *(_DWORD *)(a3 + 16);
  if ((v10 & 0x20) != 0)
    goto LABEL_10;
  v11 = *(_WORD **)(a3 + 8);
  v12 = *(unsigned int *)(a3 + 4);
  if ((v10 & 4) == 0)
  {
    if ((_DWORD)v12 && (v13 = (unsigned __int16)*v11 - 48, v13 <= 9))
    {
      if (v12 < 2 || *v11 != 48)
      {
        v31 = v11 + 1;
        v32 = v12 - 1;
        while (v32)
        {
          if (v13 <= 0x19999999)
          {
            v33 = *v31 - 48;
            if (v33 <= 9)
            {
              v30 = __CFADD__(v33, 10 * v13);
              v13 = v33 + 10 * v13;
              ++v31;
              --v32;
              if (!v30)
                continue;
            }
          }
          goto LABEL_6;
        }
        v34 = v13 == -1;
        v15 = v13 & 0xFFFFFF00;
        v14 = 0x100000000;
        if (v13 == -1)
        {
          v14 = 0;
          LOBYTE(v13) = 0;
        }
        if (v34)
          v15 = 0;
        goto LABEL_8;
      }
      v14 = 0;
    }
    else
    {
LABEL_6:
      v14 = 0;
      LOBYTE(v13) = 0;
    }
    v15 = 0;
LABEL_8:
    v13 = v13;
    goto LABEL_9;
  }
  if ((_DWORD)v12)
  {
    v57 = *(unsigned __int8 *)v11 - 48;
    if (v57 <= 9 && (v12 < 2 || *(_BYTE *)v11 != 48))
    {
      v62 = v12 - 1;
      v63 = (unsigned __int8 *)v11 + 1;
      while (v62)
      {
        if (v57 > 0x19999999)
          goto LABEL_108;
        v64 = *v63 - 48;
        if (v64 > 9)
          goto LABEL_108;
        v13 = 0;
        LOBYTE(v12) = 0;
        v14 = 0;
        v30 = __CFADD__(v64, 10 * v57);
        v57 = v64 + 10 * v57;
        --v62;
        ++v63;
        if (v30)
          goto LABEL_110;
      }
      if (v57 == -1)
        v13 = 0;
      else
        v13 = v57 & 0xFFFFFF00;
      if (v57 == -1)
        LOBYTE(v12) = 0;
      else
        LOBYTE(v12) = v57;
      if (v57 == -1)
        v14 = 0;
      else
        v14 = 0x100000000;
      goto LABEL_110;
    }
LABEL_108:
    v13 = 0;
    LOBYTE(v12) = 0;
  }
  else
  {
    v13 = 0;
  }
  v14 = 0;
LABEL_110:
  v15 = v12;
LABEL_9:
  if ((v14 & 0x100000000) != 0)
  {
    v36 = (WTF *)WebCore::HTMLOptionsCollection::item(*(WebCore::HTMLOptionsCollection **)(a1 + 24), v15 | v13);
    if (v36)
    {
      v37 = WebCore::wrap<WebCore::HTMLOptionElement>(*(uint64_t **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v36);
      if (!*((_DWORD *)v9 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) == 0)
      {
        *(_QWORD *)a4 = v37;
        *(_DWORD *)(a4 + 16) = 0;
        *(_QWORD *)(a4 + 32) = a1;
        v25 = 1;
        *(_BYTE *)(a4 + 49) = 1;
        return v25;
      }
      return 0;
    }
    if (!(a3 >> 4)
      || (v17 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v17 + 0x20)) != 0)
      || (v40 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), *(JSC::VM **)(a2 + 56))) == 0|| (v68 = (WTF *)a3, v19 = JSC::PropertyTable::get(v40, (uint64_t *)&v68), (_DWORD)v19 == -1))
    {
      if ((*(_BYTE *)(a1 + 6) & 0x20) == 0 || (JSC::JSObject::getOwnStaticPropertySlot() & 1) == 0)
      {
        v41 = *(_DWORD *)(a3 + 16);
        if ((v41 & 0x20) == 0)
        {
          v42 = *(_BYTE **)(a3 + 8);
          v43 = *(unsigned int *)(a3 + 4);
          if ((v41 & 4) != 0)
          {
            if (!(_DWORD)v43)
              return 0;
            v44 = *v42 - 48;
            if (v44 > 9 || v43 >= 2 && *v42 == 48)
              return 0;
            v59 = v43 - 1;
            v60 = v42 + 1;
            while (v59)
            {
              if (v44 > 0x19999999)
                return 0;
              v61 = *v60 - 48;
              if (v61 > 9)
                return 0;
              v25 = 0;
              v30 = __CFADD__(v61, 10 * v44);
              v44 = v61 + 10 * v44;
              --v59;
              ++v60;
              if (v30)
                return v25;
            }
          }
          else
          {
            if (!(_DWORD)v43)
              return 0;
            v44 = *(unsigned __int16 *)v42 - 48;
            if (v44 > 9 || v43 >= 2 && *(_WORD *)v42 == 48)
              return 0;
            v45 = (unsigned __int16 *)(v42 + 2);
            for (i = v43 - 1; i; --i)
            {
              if (v44 > 0x19999999)
                return 0;
              v47 = *v45 - 48;
              if (v47 > 9)
                return 0;
              v25 = 0;
              v30 = __CFADD__(v47, 10 * v44);
              v44 = v47 + 10 * v44;
              ++v45;
              if (v30)
                return v25;
            }
          }
          if (v44 != -1)
            return JSC::JSObject::getOwnPropertySlotByIndex();
        }
        return 0;
      }
      return 1;
    }
LABEL_85:
    if ((int)v19 > 63)
    {
      v48 = *(_QWORD *)(a1 + 8) - 8;
      v49 = 0x3F00000000 - (v19 << 32);
    }
    else
    {
      v48 = a1 + 16;
      v49 = v19 << 32;
    }
    v50 = *(_QWORD *)(v48 + (v49 >> 29));
    if ((v50 & 0xFFFE000000000002) != 0)
      goto LABEL_88;
    v51 = *(unsigned __int8 *)(v50 + 5);
    if (v51 == 6)
    {
      v52 = *(_DWORD *)(v17 + 16) & 3;
      v54 = *(_QWORD *)(v50 + 8);
      v53 = *(_QWORD *)(v50 + 16);
      if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v50 & 0xFFFFFFFE) + 0x4C))
      {
        v56 = *(_QWORD *)(v50 + 24);
        v55 = *(_QWORD *)(v50 + 32);
        *(_QWORD *)a4 = v54;
        *(_QWORD *)(a4 + 8) = v53;
        *(_DWORD *)(a4 + 16) = HIDWORD(v19);
        *(_QWORD *)(a4 + 32) = a1;
        *(_BYTE *)(a4 + 49) = 3;
        v25 = 1;
        if (v52 != 2)
          *(_BYTE *)(a4 + 48) = 1;
        *(_BYTE *)(a4 + 51) = 1;
        *(_QWORD *)(a4 + 72) = v56;
        *(_QWORD *)(a4 + 80) = v55;
      }
      else
      {
        *(_QWORD *)a4 = v54;
        *(_QWORD *)(a4 + 8) = v53;
        *(_DWORD *)(a4 + 16) = HIDWORD(v19);
        *(_QWORD *)(a4 + 32) = a1;
        v25 = 1;
        *(_BYTE *)(a4 + 49) = 3;
        if (v52 != 2)
          *(_BYTE *)(a4 + 48) = 1;
      }
      return v25;
    }
    if (v51 != 5)
    {
LABEL_88:
      *(_QWORD *)a4 = v50;
      *(_QWORD *)(a4 + 32) = a1;
      *(_DWORD *)(a4 + 16) = HIDWORD(v19);
      *(_DWORD *)(a4 + 20) = v19;
      v25 = 1;
      *(_WORD *)(a4 + 48) = 257;
      return v25;
    }
    JSC::JSObject::fillGetterPropertySlot();
    return 1;
  }
LABEL_10:
  if ((a5 & 1) == 0)
  {
    _ZN7WebCoreL26accessVisibleNamedPropertyILNS_22LegacyOverrideBuiltInsE0ENS_23JSHTMLOptionsCollectionERZNS_L39visibleNamedPropertyItemAccessorFunctorINS_12IDLInterfaceINS_17HTMLOptionElementEEES2_ZNS2_34legacyPlatformObjectGetOwnPropertyEPN3JSC8JSObjectEPNS7_14JSGlobalObjectENS7_12PropertyNameERNS7_12PropertySlotEbE3__0EEDcOT1_EUlRS2_SC_E_EEDTclfp2_fp0_fp1_EERSA_RT0_SC_SI_((unint64_t)&v68, a2, a1, a3);
    if (v69)
    {
      v38 = v68;
      if (v68)
        v39 = WebCore::wrap<WebCore::HTMLOptionElement>(*(uint64_t **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v68);
      else
        v39 = 2;
      if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
      {
        v25 = 0;
      }
      else
      {
        *(_QWORD *)a4 = v39;
        *(_DWORD *)(a4 + 16) = 2;
        *(_QWORD *)(a4 + 32) = a1;
        v25 = 1;
        *(_BYTE *)(a4 + 49) = 1;
      }
      std::optional<WTF::RefPtr<WebCore::HTMLOptionElement,WTF::RawPtrTraits<WebCore::HTMLOptionElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLOptionElement>>>::~optional((uint64_t *)&v68, v38);
      return v25;
    }
    std::optional<WTF::RefPtr<WebCore::HTMLOptionElement,WTF::RawPtrTraits<WebCore::HTMLOptionElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLOptionElement>>>::~optional((uint64_t *)&v68, v16);
    v9 = *(JSC::VM **)(a2 + 56);
  }
  if ((a3 >> 4))
  {
    v17 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((a3 >> 4) & ~*(_DWORD *)(v17 + 0x20)) == 0)
    {
      v18 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v9);
      if (v18)
      {
        v68 = (WTF *)a3;
        v19 = JSC::PropertyTable::get(v18, (uint64_t *)&v68);
        if ((_DWORD)v19 != -1)
          goto LABEL_85;
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) == 0)
  {
    if (a3)
    {
LABEL_19:
      v20 = *(_DWORD *)(a3 + 16);
      if ((v20 & 0x20) != 0)
        return 0;
      v21 = *(_BYTE **)(a3 + 8);
      v22 = *(unsigned int *)(a3 + 4);
      if ((v20 & 4) != 0)
      {
        if ((_DWORD)v22)
        {
          v58 = *v21 - 48;
          if (v58 > 9 || v22 >= 2 && *v21 == 48)
          {
LABEL_113:
            v24 = 0;
          }
          else
          {
            v65 = v21 + 1;
            v66 = v22 - 1;
            while (v66)
            {
              if (v58 > 0x19999999)
                goto LABEL_113;
              v67 = *v65 - 48;
              if (v67 > 9)
                goto LABEL_113;
              v24 = 0;
              v30 = __CFADD__(v67, 10 * v58);
              v58 = v67 + 10 * v58;
              ++v65;
              --v66;
              if (v30)
                goto LABEL_24;
            }
            v24 = 0x100000000;
            if (v58 == -1)
              v24 = 0;
          }
        }
        else
        {
          v24 = 0;
        }
      }
      else if ((_DWORD)v22)
      {
        v23 = *(unsigned __int16 *)v21 - 48;
        if (v23 > 9 || v22 >= 2 && *(_WORD *)v21 == 48)
        {
LABEL_23:
          v24 = 0;
        }
        else
        {
          v27 = (unsigned __int16 *)(v21 + 2);
          v28 = v22 - 1;
          while (v28)
          {
            if (v23 <= 0x19999999)
            {
              v29 = *v27 - 48;
              if (v29 <= 9)
              {
                v30 = __CFADD__(v29, 10 * v23);
                v23 = v29 + 10 * v23;
                ++v27;
                --v28;
                if (!v30)
                  continue;
              }
            }
            goto LABEL_23;
          }
          v34 = v23 == -1;
          v24 = 0x100000000;
          if (v34)
            v24 = 0;
        }
      }
      else
      {
        v24 = 0;
      }
LABEL_24:
      if ((v24 & 0x100000000) == 0)
        return 0;
      return JSC::JSObject::getOwnPropertySlotByIndex();
    }
    return 0;
  }
  OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
  v25 = OwnStaticPropertySlot;
  if (a3 && (OwnStaticPropertySlot & 1) == 0)
    goto LABEL_19;
  return v25;
}

unint64_t _ZN7WebCoreL26accessVisibleNamedPropertyILNS_22LegacyOverrideBuiltInsE0ENS_23JSHTMLOptionsCollectionERZNS_L39visibleNamedPropertyItemAccessorFunctorINS_12IDLInterfaceINS_17HTMLOptionElementEEES2_ZNS2_34legacyPlatformObjectGetOwnPropertyEPN3JSC8JSObjectEPNS7_14JSGlobalObjectENS7_12PropertyNameERNS7_12PropertySlotEbE3__0EEDcOT1_EUlRS2_SC_E_EEDTclfp2_fp0_fp1_EERSA_RT0_SC_SI_(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  _BYTE *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  JSC::VM *v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  _BYTE *v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned __int16 *v23;
  unsigned int v24;
  BOOL v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned int v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  _WORD *v44;
  uint64_t v45;
  unsigned int v46;
  unsigned __int16 *v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  _BYTE *v56;
  uint64_t v57;
  unsigned int v58;
  unsigned __int16 *v59;
  uint64_t v60;
  unsigned int v61;
  unsigned __int8 *v62;
  uint64_t v63;
  unsigned int v64;
  int v65;
  unint64_t v66;
  JSC::VM *v67;
  uint64_t v68;
  char v69;
  int v70;
  int v71;
  unint64_t v72;
  unint64_t v73;
  unsigned __int8 *v74;
  uint64_t v75;
  unsigned int v76;
  JSC::VM *v77;
  uint64_t v78;
  int v79;
  unint64_t v80;
  char v81;
  int v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  int v86;
  int v87;
  BOOL v88;
  const WTF::StringImpl *v89;
  const unsigned __int8 *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  unint64_t v96;
  JSC::VM *v97;
  uint64_t v98;
  int v99;
  int v100;
  int v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  char v111;
  JSC::VM *v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  WTF::StringImpl *v116;
  char v117;
  uint64_t v118;

  v8 = (_BYTE *)result;
  v118 = *MEMORY[0x1E0C80C00];
  if (a4)
  {
    if ((*(_BYTE *)(a4 + 16) & 0x20) != 0)
      goto LABEL_34;
    v9 = *(_QWORD *)(a3 + 24);
    *(_DWORD *)a4 += 2;
    v10 = (WTF::StringImpl *)a4;
  }
  else
  {
    v10 = 0;
    v9 = *(_QWORD *)(a3 + 24);
  }
  v116 = v10;
  v11 = WebCore::CachedHTMLCollection<WebCore::HTMLOptionsCollection,(WebCore::CollectionTraversalType)0>::namedItem(v9, (uint64_t *)&v116);
  v13 = WTF::downcast<WebCore::HTMLOptionElement,WebCore::Element>(v11);
  result = (unint64_t)v116;
  v116 = 0;
  if (!result)
    goto LABEL_7;
  if (*(_DWORD *)result == 2)
  {
    result = WTF::StringImpl::destroy((WTF::StringImpl *)result, v12);
    if (v13)
      goto LABEL_8;
LABEL_34:
    *v8 = 0;
    v8[8] = 0;
    return result;
  }
  *(_DWORD *)result -= 2;
LABEL_7:
  if (!v13)
    goto LABEL_34;
LABEL_8:
  *(_DWORD *)(v13 + 24) += 2;
  v14 = *(JSC::VM **)(a2 + 56);
  v106 = 0xFFFFFFFF00000000;
  v108 = 0;
  v109 = 0;
  v107 = a3;
  v110 = 196608;
  v111 = 0;
  v114 = 0;
  v115 = 0;
  v112 = v14;
  ++*((_DWORD *)v14 + 1);
  v113 = 1;
  v15 = a4 >> 4;
  if ((a4 >> 4))
  {
    v16 = 16 * (*(_DWORD *)a3 & 0xFFFFFFFE);
    if ((v15 & ~*(_DWORD *)(v16 + 0x20)) == 0)
    {
      result = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE)), v14);
      if (result)
      {
        v116 = (WTF::StringImpl *)a4;
        result = JSC::PropertyTable::get(result, (uint64_t *)&v116);
        v17 = result;
        if ((_DWORD)result != -1)
        {
          v26 = HIDWORD(result);
          v27 = (uint64_t *)(a3 + 8 * (int)result + 16);
          if ((int)result >= 64)
            v27 = (uint64_t *)(*(_QWORD *)(a3 + 8) + ((uint64_t)(0x3F00000000 - (result << 32)) >> 29) - 8);
          v28 = *v27;
          if ((*v27 & 0xFFFE000000000002) == 0)
          {
            v29 = *(unsigned __int8 *)(v28 + 5);
            if (v29 == 6)
            {
              v30 = *(_DWORD *)(v16 + 16) & 3;
              v31 = *(_QWORD *)(v28 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x4C))
              {
                v33 = *(_QWORD *)(v28 + 24);
                v32 = *(_QWORD *)(v28 + 32);
                v104 = *(_QWORD *)(v28 + 8);
                v105 = v31;
                LODWORD(v106) = HIDWORD(result);
                v108 = a3;
LABEL_98:
                BYTE1(v110) = 3;
                if (v30 != 2)
                  LOBYTE(v110) = 1;
                HIBYTE(v110) = 1;
                v114 = v33;
                v115 = v32;
                goto LABEL_94;
              }
              v104 = *(_QWORD *)(v28 + 8);
              v105 = v31;
              LODWORD(v106) = HIDWORD(result);
              v108 = a3;
LABEL_118:
              BYTE1(v110) = 3;
              if (v30 != 2)
                LOBYTE(v110) = 1;
              goto LABEL_94;
            }
            if (v29 == 5)
              goto LABEL_101;
          }
          v104 = v28;
          v108 = a3;
LABEL_93:
          v106 = __PAIR64__(v17, v26);
          LOWORD(v110) = 257;
          goto LABEL_94;
        }
      }
    }
  }
  if ((*(_BYTE *)(a3 + 6) & 0x20) != 0)
  {
    result = JSC::JSObject::getOwnStaticPropertySlot();
    if ((result & 1) != 0)
      goto LABEL_94;
  }
  if (a4)
  {
    v18 = *(_DWORD *)(a4 + 16);
    if ((v18 & 0x20) == 0)
    {
      v19 = *(_BYTE **)(a4 + 8);
      v20 = *(unsigned int *)(a4 + 4);
      if ((v18 & 4) != 0)
      {
        if (!(_DWORD)v20)
          goto LABEL_54;
        v21 = *v19 - 48;
        if (v21 > 9 || v20 >= 2 && *v19 == 48)
          goto LABEL_54;
        v34 = v20 - 1;
        v35 = v19 + 1;
        while (v34)
        {
          if (v21 <= 0x19999999)
          {
            v36 = *v35 - 48;
            if (v36 <= 9)
            {
              v25 = __CFADD__(v36, 10 * v21);
              v21 = v36 + 10 * v21;
              --v34;
              ++v35;
              if (!v25)
                continue;
            }
          }
          goto LABEL_54;
        }
      }
      else
      {
        if (!(_DWORD)v20)
          goto LABEL_54;
        v21 = *(unsigned __int16 *)v19 - 48;
        if (v21 > 9 || v20 >= 2 && *(_WORD *)v19 == 48)
          goto LABEL_54;
        v22 = v20 - 1;
        v23 = (unsigned __int16 *)(v19 + 2);
        while (v22)
        {
          if (v21 <= 0x19999999)
          {
            v24 = *v23 - 48;
            if (v24 <= 9)
            {
              v25 = __CFADD__(v24, 10 * v21);
              v21 = v24 + 10 * v21;
              --v22;
              ++v23;
              if (!v25)
                continue;
            }
          }
          goto LABEL_54;
        }
      }
      if (v21 != -1)
      {
        result = JSC::JSObject::getOwnPropertySlotByIndex();
        if ((_DWORD)result)
          goto LABEL_94;
      }
    }
  }
LABEL_54:
  v37 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x30);
  if (!v37)
    v37 = *(_QWORD *)(a3 + 16);
  if ((v37 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v37 + 5) < 0x17u)
    goto LABEL_135;
  v38 = (_BYTE *)(v37 + 6);
  if ((*(_BYTE *)(v37 + 6) & 8) == 0)
  {
    v4 = *(_QWORD *)(a2 + 56);
    v39 = v37;
    while (1)
    {
      v40 = *(_DWORD *)v39 & 0xFFFFFFFE;
      v41 = 16 * v40;
      if ((_DWORD)v15)
      {
        if ((v15 & ~*(_DWORD *)(16 * v40 + 0x20)) == 0)
        {
          result = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v41, (JSC::VM *)v4);
          if (result)
          {
            v116 = (WTF::StringImpl *)a4;
            result = JSC::PropertyTable::get(result, (uint64_t *)&v116);
            v17 = result;
            if ((_DWORD)result != -1)
              break;
          }
        }
      }
      if ((*v38 & 0x20) != 0)
      {
        result = JSC::JSObject::getOwnStaticPropertySlot();
        if ((result & 1) != 0)
          goto LABEL_94;
      }
      v42 = *(_QWORD *)(v41 + 48);
      if (!v42)
        v42 = *(_QWORD *)(v39 + 16);
      if ((v42 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v42 + 5) < 0x17u)
      {
        if (!a4)
          goto LABEL_135;
        v43 = *(_DWORD *)(a4 + 16);
        if ((v43 & 0x20) != 0)
          goto LABEL_135;
        v44 = *(_WORD **)(a4 + 8);
        v45 = *(unsigned int *)(a4 + 4);
        if ((v43 & 4) == 0)
        {
          if ((_DWORD)v45)
          {
            v46 = (unsigned __int16)*v44 - 48;
            if (v46 <= 9 && (v45 < 2 || *v44 != 48))
            {
              v47 = v44 + 1;
              v48 = v45 - 1;
              while (v48)
              {
                if (v46 <= 0x19999999)
                {
                  v49 = *v47 - 48;
                  if (v49 <= 9)
                  {
                    v25 = __CFADD__(v49, 10 * v46);
                    v46 = v49 + 10 * v46;
                    ++v47;
                    --v48;
                    if (!v25)
                      continue;
                  }
                }
                goto LABEL_135;
              }
              goto LABEL_134;
            }
          }
          goto LABEL_135;
        }
        if (!(_DWORD)v45)
          goto LABEL_135;
        v46 = *(unsigned __int8 *)v44 - 48;
        if (v46 > 9 || v45 >= 2 && *(_BYTE *)v44 == 48)
          goto LABEL_135;
        v62 = (unsigned __int8 *)v44 + 1;
        v63 = v45 - 1;
        while (v63)
        {
          if (v46 <= 0x19999999)
          {
            v64 = *v62 - 48;
            if (v64 <= 9)
            {
              v25 = __CFADD__(v64, 10 * v46);
              v46 = v64 + 10 * v46;
              ++v62;
              --v63;
              if (!v25)
                continue;
            }
          }
          goto LABEL_135;
        }
LABEL_134:
        if (v46 == -1)
        {
LABEL_135:
          *(_QWORD *)v8 = v13;
          v8[8] = 1;
          v13 = 0;
          goto LABEL_136;
        }
        v66 = v46;
        v67 = *(JSC::VM **)(a2 + 56);
        while (2)
        {
          v68 = 16 * (*(_DWORD *)v37 & 0xFFFFFFFE);
          result = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t *))(16
                                                                                            * *(unsigned int *)(v68 + 0x4C)
                                                                                            + 0x70))(v37, a2, v66, &v104);
          v69 = result;
          if (*((_DWORD *)v67 + 20))
          {
            result = JSC::VM::hasExceptionsAfterHandlingTraps(v67);
            if ((result & 1) != 0)
              goto LABEL_135;
          }
          if ((v69 & 1) != 0)
            goto LABEL_94;
          v70 = BYTE2(v110);
          if (BYTE2(v110) == 3)
          {
            if (v111)
              goto LABEL_135;
            v71 = *(unsigned __int8 *)(v37 + 5);
            if (v71 == 61)
            {
LABEL_163:
              v73 = *(_QWORD *)(16 * (*(_DWORD *)v37 & 0xFFFFFFFE) + 0x30);
              if (!v73)
                v73 = *(_QWORD *)(v37 + 16);
              goto LABEL_165;
            }
LABEL_156:
            if ((v71 - 39) <= 0xA)
            {
              if ((*(_BYTE *)(v37 + 40) & 7u) > 2)
              {
                LOBYTE(v116) = 0;
                v117 = 0;
                result = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v37, (WTF *)&v116);
                if ((_BYTE)v12)
                  v72 = result;
                else
                  v72 = 0;
              }
              else
              {
                v72 = *(_QWORD *)(v37 + 24);
              }
              if (v72 <= v66)
                goto LABEL_135;
              v70 = BYTE2(v110);
            }
          }
          else
          {
            v71 = *(unsigned __int8 *)(v37 + 5);
            if (v71 != 61)
              goto LABEL_156;
            if (BYTE2(v110) == 1)
              goto LABEL_135;
          }
          if ((*(_WORD *)(v68 + 12) & 0x800) == 0 || v70 == 3)
            goto LABEL_163;
          if ((*(_WORD *)(16 * (*(_DWORD *)v37 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
          {
            result = (*(uint64_t (**)(uint64_t, uint64_t))(16
                                                                 * *(unsigned int *)(16
                                                                                   * (*(_DWORD *)v37 & 0xFFFFFFFE)
                                                                                   + 0x4C)
                                                                 + 0xB0))(v37, a2);
            v73 = result;
          }
          else
          {
            v73 = *(_QWORD *)(16 * (*(_DWORD *)v37 & 0xFFFFFFFE) + 0x30);
            if (!v73)
              v73 = *(_QWORD *)(v37 + 16);
          }
          if (*((_DWORD *)v67 + 20))
          {
            result = JSC::VM::hasExceptionsAfterHandlingTraps(v67);
            if ((result & 1) != 0)
              goto LABEL_135;
          }
LABEL_165:
          if ((v73 & 0xFFFE000000000002) != 0)
            goto LABEL_135;
          v37 = v73;
          if (*(unsigned __int8 *)(v73 + 5) <= 0x16u)
            goto LABEL_135;
          continue;
        }
      }
      v38 = (_BYTE *)(v42 + 6);
      v39 = v42;
      if ((*(_BYTE *)(v42 + 6) & 8) != 0)
        goto LABEL_103;
    }
    v26 = HIDWORD(result);
    if ((int)result > 63)
    {
      v50 = *(_QWORD *)(v39 + 8) - 8;
      v51 = 0x3F00000000 - (result << 32);
    }
    else
    {
      v50 = v39 + 16;
      v51 = result << 32;
    }
    v52 = *(_QWORD *)(v50 + (v51 >> 29));
    if ((v52 & 0xFFFE000000000002) != 0)
      goto LABEL_92;
    v53 = *(unsigned __int8 *)(v52 + 5);
    if (v53 != 6)
    {
      if (v53 == 5)
        goto LABEL_101;
LABEL_92:
      v104 = v52;
      v108 = v39;
      goto LABEL_93;
    }
    v30 = *(_DWORD *)(v41 + 16) & 3;
    v54 = *(_QWORD *)(v52 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v52 & 0xFFFFFFFE) + 0x4C))
    {
      v33 = *(_QWORD *)(v52 + 24);
      v32 = *(_QWORD *)(v52 + 32);
      v104 = *(_QWORD *)(v52 + 8);
      v105 = v54;
      LODWORD(v106) = HIDWORD(result);
      v108 = v39;
      goto LABEL_98;
    }
    v104 = *(_QWORD *)(v52 + 8);
    v105 = v54;
    LODWORD(v106) = HIDWORD(result);
    v108 = v39;
    goto LABEL_118;
  }
  v42 = v37;
LABEL_103:
  if (!a4)
    goto LABEL_193;
  v55 = *(_DWORD *)(a4 + 16);
  if ((v55 & 0x20) != 0)
    goto LABEL_193;
  v56 = *(_BYTE **)(a4 + 8);
  v57 = *(unsigned int *)(a4 + 4);
  if ((v55 & 4) != 0)
  {
    if (!(_DWORD)v57)
      goto LABEL_193;
    v58 = *v56 - 48;
    if (v58 > 9 || v57 >= 2 && *v56 == 48)
      goto LABEL_193;
    v74 = v56 + 1;
    v75 = v57 - 1;
    while (v75)
    {
      if (v58 <= 0x19999999)
      {
        v76 = *v74 - 48;
        if (v76 <= 9)
        {
          v25 = __CFADD__(v76, 10 * v58);
          v58 = v76 + 10 * v58;
          ++v74;
          --v75;
          if (!v25)
            continue;
        }
      }
      goto LABEL_193;
    }
  }
  else
  {
    if (!(_DWORD)v57)
      goto LABEL_193;
    v58 = *(unsigned __int16 *)v56 - 48;
    if (v58 > 9 || v57 >= 2 && *(_WORD *)v56 == 48)
      goto LABEL_193;
    v59 = (unsigned __int16 *)(v56 + 2);
    v60 = v57 - 1;
    while (v60)
    {
      if (v58 <= 0x19999999)
      {
        v61 = *v59 - 48;
        if (v61 <= 9)
        {
          v25 = __CFADD__(v61, 10 * v58);
          v58 = v61 + 10 * v58;
          ++v59;
          --v60;
          if (!v25)
            continue;
        }
      }
      goto LABEL_193;
    }
  }
  if (v58 != -1)
  {
    v96 = v58;
    v97 = *(JSC::VM **)(a2 + 56);
    while (1)
    {
      v98 = 16 * (*(_DWORD *)v37 & 0xFFFFFFFE);
      result = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t *))(16
                                                                                        * *(unsigned int *)(v98 + 0x4C)
                                                                                        + 0x70))(v37, a2, v96, &v104);
      v99 = result;
      if (*((_DWORD *)v97 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v97);
        if (((result | v99) & 1) != 0)
        {
          if ((result & 1) == 0)
            goto LABEL_94;
          goto LABEL_135;
        }
      }
      else if ((result & 1) != 0)
      {
        goto LABEL_94;
      }
      v100 = BYTE2(v110);
      if (BYTE2(v110) == 3)
      {
        if (v111)
          goto LABEL_135;
        v101 = *(unsigned __int8 *)(v37 + 5);
        if (v101 == 61)
        {
LABEL_285:
          v103 = *(_QWORD *)(16 * (*(_DWORD *)v37 & 0xFFFFFFFE) + 0x30);
          if (!v103)
            v103 = *(_QWORD *)(v37 + 16);
          goto LABEL_287;
        }
      }
      else
      {
        v101 = *(unsigned __int8 *)(v37 + 5);
        if (v101 == 61)
        {
          if (BYTE2(v110) == 1)
            goto LABEL_135;
          goto LABEL_283;
        }
      }
      if ((v101 - 39) <= 0xA)
      {
        if ((*(_BYTE *)(v37 + 40) & 7u) > 2)
        {
          LOBYTE(v116) = 0;
          v117 = 0;
          result = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v37, (WTF *)&v116);
          if ((_BYTE)v12)
            v102 = result;
          else
            v102 = 0;
        }
        else
        {
          v102 = *(_QWORD *)(v37 + 24);
        }
        if (v102 <= v96)
          goto LABEL_135;
        v100 = BYTE2(v110);
      }
LABEL_283:
      if ((*(_WORD *)(v98 + 12) & 0x800) == 0 || v100 == 3)
        goto LABEL_285;
      if ((*(_WORD *)(16 * (*(_DWORD *)v37 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
      {
        result = (*(uint64_t (**)(uint64_t, uint64_t))(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)v37 & 0xFFFFFFFE)
                                                                               + 0x4C)
                                                             + 0xB0))(v37, a2);
        v103 = result;
      }
      else
      {
        v103 = *(_QWORD *)(16 * (*(_DWORD *)v37 & 0xFFFFFFFE) + 0x30);
        if (!v103)
          v103 = *(_QWORD *)(v37 + 16);
      }
      if (*((_DWORD *)v97 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v97);
        if ((result & 1) != 0)
          goto LABEL_135;
      }
LABEL_287:
      if ((v103 & 0xFFFE000000000002) == 0)
      {
        v37 = v103;
        if (*(unsigned __int8 *)(v103 + 5) > 0x16u)
          continue;
      }
      goto LABEL_135;
    }
  }
LABEL_193:
  v77 = *(JSC::VM **)(a2 + 56);
  while (1)
  {
    v78 = 16 * (*(_DWORD *)v42 & 0xFFFFFFFE);
    if ((*(_BYTE *)(v42 + 6) & 8) != 0)
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t *))(16
                                                                                        * *(unsigned int *)(16 * (*(_DWORD *)v42 & 0xFFFFFFFE) + 0x4C)
                                                                                        + 0x68))(v42, a2, a4, &v104);
      v81 = result;
      if (*((_DWORD *)v77 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v77);
        if ((result & 1) != 0)
          goto LABEL_135;
      }
      if ((v81 & 1) != 0)
        goto LABEL_94;
      if (BYTE2(v110) == 3)
      {
        if (v111)
          goto LABEL_135;
        v82 = *(unsigned __int8 *)(v42 + 5);
        if (v82 == 61)
          goto LABEL_200;
      }
      else
      {
        v82 = *(unsigned __int8 *)(v42 + 5);
        if (v82 == 61)
        {
          if (BYTE2(v110) == 1)
            goto LABEL_135;
          goto LABEL_200;
        }
      }
      if (!a4)
        goto LABEL_200;
      if ((v82 - 50) < 0xFFFFFFF5)
        goto LABEL_200;
      v84 = *(_DWORD *)(a4 + 16);
      if ((v84 & 0x20) != 0)
        goto LABEL_200;
      v85 = *(unsigned int *)(a4 + 4);
      if (!(_DWORD)v85)
        goto LABEL_200;
      result = *(_QWORD *)(a4 + 8);
      if ((v84 & 4) != 0)
      {
        v86 = *(unsigned __int8 *)result;
        if ((_DWORD)v85 == 1)
        {
LABEL_236:
          if ((v86 - 48) < 0xA)
            goto LABEL_135;
          goto LABEL_200;
        }
        if (v86 == 45)
        {
          v87 = *(unsigned __int8 *)(result + 1);
          goto LABEL_240;
        }
      }
      else
      {
        v86 = *(unsigned __int16 *)result;
        if ((_DWORD)v85 == 1)
          goto LABEL_236;
        if (v86 == 45)
        {
          v87 = *(unsigned __int16 *)(result + 2);
LABEL_240:
          if ((v87 - 48) < 0xA)
          {
            if ((_DWORD)v85 == 2)
              goto LABEL_135;
LABEL_252:
            v4 = v4 & 0xFFFFFF0000000000 | v85 | ((unint64_t)((v84 >> 2) & 1) << 32);
            JSC::jsToNumber();
            v89 = (const WTF::StringImpl *)WTF::numberToString();
            result = WTF::equal((WTF *)a4, v89, v90);
            if ((result & 1) != 0)
              goto LABEL_135;
            goto LABEL_200;
          }
          if ((_DWORD)v85 != 9)
            goto LABEL_200;
          v88 = v87 == 73;
LABEL_250:
          if (!v88)
            goto LABEL_200;
          goto LABEL_252;
        }
      }
      if ((v86 - 48) < 0xA || (_DWORD)v85 == 8 && v86 == 73)
        goto LABEL_252;
      if ((_DWORD)v85 != 3)
        goto LABEL_200;
      v88 = v86 == 78;
      goto LABEL_250;
    }
    if ((_DWORD)v15)
    {
      if ((v15 & ~*(_DWORD *)(16 * (*(_DWORD *)v42 & 0xFFFFFFFE) + 0x20)) == 0)
      {
        result = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v42 & 0xFFFFFFFE)), v77);
        if (result)
        {
          v116 = (WTF::StringImpl *)a4;
          result = JSC::PropertyTable::get(result, (uint64_t *)&v116);
          v17 = result;
          if ((_DWORD)result != -1)
            break;
        }
      }
    }
    if ((*(_BYTE *)(v42 + 6) & 0x20) != 0)
    {
      result = JSC::JSObject::getOwnStaticPropertySlot();
      if ((result & 1) != 0)
        goto LABEL_94;
    }
LABEL_200:
    if ((*(_WORD *)(v78 + 12) & 0x800) == 0)
    {
      v79 = *(_DWORD *)v42;
LABEL_202:
      v80 = *(_QWORD *)(16 * (v79 & 0xFFFFFFFE) + 0x30);
      if (!v80)
        v80 = *(_QWORD *)(v42 + 16);
      goto LABEL_204;
    }
    v79 = *(_DWORD *)v42;
    if (BYTE2(v110) == 3)
      goto LABEL_202;
    v83 = 16 * (v79 & 0xFFFFFFFE);
    if ((*(_WORD *)(v83 + 12) & 0x800) != 0)
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t))(16 * *(unsigned int *)(v83 + 76) + 0xB0))(v42, a2);
      v80 = result;
    }
    else
    {
      v80 = *(_QWORD *)(v83 + 48);
      if (!v80)
        v80 = *(_QWORD *)(v42 + 16);
    }
    if (*((_DWORD *)v77 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v77);
      if ((result & 1) != 0)
        goto LABEL_135;
    }
LABEL_204:
    if ((v80 & 0xFFFE000000000002) == 0)
    {
      v42 = v80;
      if (*(unsigned __int8 *)(v80 + 5) > 0x16u)
        continue;
    }
    goto LABEL_135;
  }
  v26 = HIDWORD(result);
  if ((int)result > 63)
  {
    v91 = *(_QWORD *)(v42 + 8) - 8;
    v92 = 0x3F00000000 - (result << 32);
  }
  else
  {
    v91 = v42 + 16;
    v92 = result << 32;
  }
  v93 = *(_QWORD *)(v91 + (v92 >> 29));
  if ((v93 & 0xFFFE000000000002) != 0)
  {
LABEL_262:
    v104 = v93;
    v108 = v42;
    goto LABEL_93;
  }
  v94 = *(unsigned __int8 *)(v93 + 5);
  if (v94 == 6)
  {
    v30 = *(_DWORD *)(v78 + 16) & 3;
    v95 = *(_QWORD *)(v93 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v93 & 0xFFFFFFFE) + 0x4C))
    {
      v33 = *(_QWORD *)(v93 + 24);
      v32 = *(_QWORD *)(v93 + 32);
      v104 = *(_QWORD *)(v93 + 8);
      v105 = v95;
      LODWORD(v106) = HIDWORD(result);
      v108 = v42;
      goto LABEL_98;
    }
    v104 = *(_QWORD *)(v93 + 8);
    v105 = v95;
    LODWORD(v106) = HIDWORD(result);
    v108 = v42;
    goto LABEL_118;
  }
  if (v94 != 5)
    goto LABEL_262;
LABEL_101:
  result = JSC::JSObject::fillGetterPropertySlot();
LABEL_94:
  *v8 = 0;
  v8[8] = 0;
LABEL_136:
  if (v113)
  {
    v65 = *((_DWORD *)v112 + 1);
    if (!v65)
    {
      __break(0xC471u);
      JUMPOUT(0x194C51650);
    }
    *((_DWORD *)v112 + 1) = v65 - 1;
  }
  if (v13)
  {
    if (*(_DWORD *)(v13 + 24) == 2)
    {
      if ((*(_WORD *)(v13 + 30) & 0x400) == 0)
        return (unint64_t)WebCore::Node::removedLastRef((WebCore::Node *)v13, v12);
    }
    else
    {
      *(_DWORD *)(v13 + 24) -= 2;
    }
  }
  return result;
}

uint64_t *std::optional<WTF::RefPtr<WebCore::HTMLOptionElement,WTF::RawPtrTraits<WebCore::HTMLOptionElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLOptionElement>>>::~optional(uint64_t *a1, void *a2)
{
  uint64_t v3;

  if (*((_BYTE *)a1 + 8))
  {
    v3 = *a1;
    *a1 = 0;
    if (v3)
    {
      if (*(_DWORD *)(v3 + 24) == 2)
      {
        if ((*(_WORD *)(v3 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v3, a2);
      }
      else
      {
        *(_DWORD *)(v3 + 24) -= 2;
      }
    }
  }
  return a1;
}

unint64_t WebCore::convert<WebCore::IDLNullable<WebCore::IDLInterface<WebCore::HTMLOptionElement>>>(unint64_t result, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  int v5;

  v3 = result;
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)(result + 8) = 0;
  }
  else
  {
    result = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(a3);
    if (result && (v4 = *(_QWORD *)(result + 24)) != 0)
    {
      v5 = 0;
    }
    else
    {
      result = JSC::throwTypeError();
      v5 = 1;
    }
    *(_QWORD *)v3 = v4;
    *(_DWORD *)(v3 + 8) = v5;
  }
  return result;
}

unint64_t WebCore::jsHTMLOptionsCollectionConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLOptionsCollectionPrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLOptionsCollection>,(WebCore::DOMConstructorID)560>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLOptionsCollection_length(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = WebCore::CollectionIndexCache<WebCore::HTMLOptionsCollection,WebCore::ElementDescendantIterator<WebCore::Element>>::nodeCount(*(_QWORD *)(a2 + 24) + 40, *(WebCore::HTMLCollection **)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLOptionsCollection_length(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  WTF::StringImpl *v11;
  _BOOL8 v12;
  unint64_t v13;
  _BYTE *v14;
  WTF *v15;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WTF::StringImpl *v23;
  unsigned int v24;
  int v25;
  WTF *v26;
  uint64_t v27;
  _BYTE v28[40];
  uint64_t v29;
  JSC::JSGlobalObject *v30;
  char v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  char v35;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLOptionsCollection::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLOptionsCollection::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v26 = (WTF *)v28;
  v27 = 4;
  v28[32] = 0;
  v29 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v30 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v26;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v24);
  v12 = v25 == 0;
  if (!v25)
  {
    v13 = v24;
    v14 = (_BYTE *)WTF::downcast<WebCore::HTMLSelectElement,WebCore::ContainerNode>(*(_QWORD *)(v10 + 24));
    WebCore::HTMLSelectElement::setLength(v14, (void *)v13, &v33);
    if (v35)
    {
      v11 = (WTF::StringImpl *)v33;
      v31 = v33;
      v21 = v34;
      v34 = 0;
      v32 = v21;
      if (!*((_QWORD *)v4 + 2))
      {
        v22.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v33, (JSC::JSGlobalObject *)&v32);
        JSC::VM::throwException(v4, a1, v22);
        v21 = v32;
      }
      v32 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, v11);
        else
          *(_DWORD *)v21 -= 2;
      }
      if (v35)
      {
        v23 = v34;
        v34 = 0;
        if (v23)
        {
          if (*(_DWORD *)v23 == 2)
            WTF::StringImpl::destroy(v23, v11);
          else
            *(_DWORD *)v23 -= 2;
        }
      }
    }
  }
  if (HIDWORD(v27))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v26, v30);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
    if (HIDWORD(v27))
    {
      v18 = v26;
      v19 = 8 * HIDWORD(v27);
      do
      {
        v20 = *(_QWORD *)v18;
        *(_QWORD *)v18 = 0;
        if (v20)
        {
          if (*(_DWORD *)(v20 + 24) == 2)
          {
            if ((*(_WORD *)(v20 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v20, v11);
          }
          else
          {
            *(_DWORD *)(v20 + 24) -= 2;
          }
        }
        v18 = (WTF *)((char *)v18 + 8);
        v19 -= 8;
      }
      while (v19);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
  }
  v15 = v26;
  if (v28 != (_BYTE *)v26 && v26 != 0)
  {
    v26 = 0;
    LODWORD(v27) = 0;
    WTF::fastFree(v15, v11);
  }
  return v12;
}

unint64_t WebCore::jsHTMLOptionsCollection_selectedIndex(uint64_t a1, uint64_t a2)
{
  WebCore::HTMLSelectElement *v2;

  v2 = (WebCore::HTMLSelectElement *)WTF::downcast<WebCore::HTMLSelectElement,WebCore::ContainerNode>(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 24));
  return WebCore::HTMLSelectElement::selectedIndex(v2) | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLOptionsCollection_selectedIndex(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  void *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::HTMLSelectElement *v12;
  uint64_t v13;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unsigned int v19;
  JSC::VM *v20;
  unint64_t v21;
  unint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = (void *)a3;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLOptionsCollection::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLOptionsCollection::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  v22 = a3;
  if (a3 < 0xFFFE000000000000)
  {
    v15 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v20 = v4;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v22, a1);
      v4 = v20;
      v15 = v21;
    }
    v16 = (v15 >> 52) & 0x7FF;
    v17 = v16 - 1023;
    v18 = v15 >> (51 - (v15 >> 52));
    if (v16 > 0x433)
      LODWORD(v18) = v15 << ((v15 >> 52) - 51);
    if (v16 >= 0x41F)
      v19 = v18;
    else
      v19 = (((1 << ((v15 >> 52) + 1)) - 1) & v18) + (1 << ((v15 >> 52) + 1));
    if ((v15 & 0x8000000000000000) != 0)
      v19 = -v19;
    if (v17 <= 0x53)
      v5 = (void *)v19;
    else
      v5 = 0;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  v12 = (WebCore::HTMLSelectElement *)WTF::downcast<WebCore::HTMLSelectElement,WebCore::ContainerNode>(*(_QWORD *)(v11 + 24));
  v13 = 1;
  WebCore::HTMLSelectElement::selectOption(v12, v5, 1);
  return v13;
}

uint64_t WebCore::JSHTMLOptionsCollection::subspaceForImpl(WebCore::JSHTMLOptionsCollection *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4552);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 4552))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 4552);
    *(_QWORD *)(v9 + 4552) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSHTMLOptionsCollection::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSHTMLOptionsCollectionOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  WebCore::Node *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  WebCore::Node *v15;
  uint64_t result;
  WebCore::Node *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 24);
  if (a5)
  {
    *a5 = "Reachable from HTMLOptionsCollection ownerNode";
    a5[1] = 47;
  }
  if (v5)
  {
    v19 = a4;
    if ((*(_BYTE *)(v5 + 22) & 8) != 0)
      v6 = *(WebCore::Node **)(*(_QWORD *)(v5 + 40) + 8);
    else
      v6 = WebCore::Node::traverseToOpaqueRoot((WebCore::Node *)v5);
    a4 = v19;
  }
  else
  {
    v6 = 0;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = v6;
    v18 = a4;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
    v6 = v17;
    a4 = v18;
    if ((_DWORD)result)
    {
LABEL_14:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, WebCore::Node *))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(WebCore::Node **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194C524DCLL);
      }
    }
  }
  return result;
}

uint64_t *WebCore::JSHTMLOptionsCollectionOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  int v4;
  _DWORD *v5;
  uint64_t *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  v4 = v3[4];
  v3[4] = v4 + 1;
  v5 = v3 + 2;
  if (!v3)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    result = JSC::weakRemove<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,WebCore::JSBlob *>((uint64_t *)(a3 + 32), (uint64_t)v3);
    v4 = v3[4] - 1;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (!v4)
    return (uint64_t *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  v3[4] = v4;
  return result;
}

uint64_t WebCore::JSHTMLOptionsCollection::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSHTMLOptionsCollection::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSHTMLOptionsCollection::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSHTMLOutputElement>::construct(JSC *a1, uint64_t a2)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore::JSDOMGlobalObject *v9;
  uint64_t v10;
  void *v11;
  JSCell *v12;
  JSC::JSCell *v13;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v15;
  JSC::JSGlobalObject *v16;
  JSC::VM *v17;
  JSC::JSObject *v18;
  JSC::Structure *v19;
  JSC::VM *FunctionRealm;
  uint64_t v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char **v27;
  int v28;
  JSC::JSCell *v29;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v31;
  JSC::Structure *v32;
  JSC::JSCell *v33;
  uint64_t v34;
  unint64_t SubclassStructure;
  WebCore::Node *v37;
  JSC::VM *v38;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v38 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(a1, &v38, (uint64_t)"HTMLOutputElement", 18);
  v7 = v6;
  if (*(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C52944);
  }
  v8 = bmalloc::api::isoAllocate();
  *(_OWORD *)(v8 + 8) = xmmword_1968BC9D0;
  *(_QWORD *)(v8 + 24) = 0x1C1C00000002;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = v7 - 96;
  *(_OWORD *)(v8 + 48) = 0u;
  *(_OWORD *)(v8 + 64) = 0u;
  ++*(_DWORD *)(v7 + 3132);
  *(_QWORD *)(v8 + 80) = 0;
  *(_QWORD *)(v8 + 88) = 0;
  v10 = WebCore::HTMLNames::outputTag;
  if (WebCore::HTMLNames::outputTag)
    ++*(_DWORD *)WebCore::HTMLNames::outputTag;
  *(_QWORD *)(v8 + 96) = v10;
  *(_QWORD *)(v8 + 104) = 0;
  *(_OWORD *)(v8 + 120) = 0uLL;
  *(_OWORD *)(v8 + 136) = 0uLL;
  *(_QWORD *)(v8 + 152) = 0;
  *(_WORD *)(v8 + 160) = 3;
  *(_BYTE *)(v8 + 162) = *(_BYTE *)(v8 + 162) & 0xFC | 2;
  *(_DWORD *)(v8 + 164) = 0;
  *(_BYTE *)(v8 + 168) &= 0xF8u;
  *(_QWORD *)v8 = off_1E33C9700;
  *(_QWORD *)(v8 + 112) = &unk_1E33C9C88;
  *(_QWORD *)(v8 + 176) = 0;
  *(_QWORD *)(v8 + 184) = 0;
  v37 = (WebCore::Node *)v8;
  v12 = (JSCell *)WebCore::createWrapper<WebCore::HTMLOutputElement,WebCore::HTMLOutputElement>(*(JSC::VM **)(v5 + 40), &v37, v9);
  v13 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v13 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v13);
    if (Object)
    {
      v16 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v17 = (JSC::VM *)*((_QWORD *)a1 + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v15);
        if (!*((_DWORD *)v17 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) == 0)
        {
          v21 = *((_QWORD *)FunctionRealm + 412);
          if (v21)
          {
            v22 = *(_DWORD *)(v21 - 8);
            v23 = ((unint64_t)&WebCore::JSHTMLOutputElement::s_info
                 + ~((_QWORD)&WebCore::JSHTMLOutputElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLOutputElement::s_info
                                                                             + ~((_QWORD)&WebCore::JSHTMLOutputElement::s_info << 32)) >> 22);
            v24 = 9 * ((v23 + ~(v23 << 13)) ^ ((v23 + ~(v23 << 13)) >> 8));
            v25 = (v24 ^ (v24 >> 15)) + ~((v24 ^ (v24 >> 15)) << 27);
            v26 = v22 & ((v25 >> 31) ^ v25);
            v27 = *(char ***)(v21 + 16 * v26);
            if (v27 == &WebCore::JSHTMLOutputElement::s_info)
            {
LABEL_14:
              v18 = *(JSC::JSObject **)(v21 + 16 * v26 + 8);
              if (v18)
              {
LABEL_16:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v16, v18, v19);
                if (!*((_DWORD *)v17 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) == 0)
                  JSC::JSObject::setStructure(v12, v17, SubclassStructure);
                goto LABEL_18;
              }
            }
            else
            {
              v28 = 1;
              while (v27)
              {
                v26 = ((_DWORD)v26 + v28) & v22;
                v27 = *(char ***)(v21 + 16 * v26);
                ++v28;
                if (v27 == &WebCore::JSHTMLOutputElement::s_info)
                  goto LABEL_14;
              }
            }
          }
          v29 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v17, FunctionRealm, v18);
          Structure = WebCore::JSHTMLOutputElementPrototype::createStructure((uint64_t *)v17, (uint64_t)FunctionRealm, v29);
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v33 = (JSC::JSCell *)WebCore::JSHTMLOutputElementPrototype::create(v17, Structure, v31, v32);
          v34 = WebCore::JSHTMLOutputElement::createStructure((uint64_t *)v17, (uint64_t)FunctionRealm, v33);
          v18 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v34, (uint64_t)&WebCore::JSHTMLOutputElement::s_info);
          goto LABEL_16;
        }
      }
    }
  }
LABEL_18:
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    v12 = 0;
  if (v37)
  {
    if (*((_DWORD *)v37 + 6) == 2)
    {
      if ((*((_WORD *)v37 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v37, v11);
    }
    else
    {
      *((_DWORD *)v37 + 6) -= 2;
    }
  }
  return v12;
}

uint64_t WebCore::JSHTMLOutputElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLOutputElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLOutputElementPrototype::create(WebCore::JSHTMLOutputElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  JSC::Structure *v18;
  int v19;
  unint64_t v21;
  WTF::StringImpl *v22[6];
  int v23;
  int v24;
  JSC::Structure *v25;
  int v26;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v21 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v21);
    *((_QWORD *)this + 4865) = SlowCase + (int)v21;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<14u>(this, (uint64_t)&WebCore::JSHTMLOutputElement::s_info, (uint64_t)&WebCore::JSHTMLOutputElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C52E88);
  }
  v10 = v9 - 192;
  if (!v9)
    v10 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v10 + 680) + 680) & 0x20000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v11 = v22[0];
    v12 = *((_DWORD *)this + 23281);
    *((_DWORD *)this + 23281) = 1;
    LODWORD(v22[0]) = -1;
    WORD2(v22[0]) = 1;
    JSC::JSObject::deleteProperty();
    *((_DWORD *)this + 23281) = v12;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v13);
      else
        *(_DWORD *)v11 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v14 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = JSC::JSString::create((uint64_t)this, v22);
  v17 = v22[0];
  v22[0] = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v15);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v26 = *(_DWORD *)SlowCase;
  v25 = v18;
  v19 = JSC::Structure::outOfLineCapacity(v18);
  v23 = 0;
  v24 = v19;
  v22[0] = (WTF::StringImpl *)&v24;
  v22[1] = (WTF::StringImpl *)SlowCase;
  v22[2] = this;
  v22[3] = (WTF::StringImpl *)&v26;
  v22[4] = (WTF::StringImpl *)&v25;
  v22[5] = (WTF::StringImpl *)&v23;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v18, this, v14, 6, (uint64_t)v22);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v23, v16);
  *((_DWORD *)v18 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLOutputElement>,(WebCore::DOMConstructorID)561>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4488);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSHTMLOutputElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLOutputElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLOutputElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLOutputElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLOutputElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLOutputElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLOutputElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLOutputElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLOutputElementPrototype::create((WebCore::JSHTMLOutputElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLOutputElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLOutputElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4488) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLOutputElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLOutputElementPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLOutputElement>,(WebCore::DOMConstructorID)561>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLOutputElement_htmlFor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WTF *)WebCore::HTMLOutputElement::htmlFor(*(WebCore::HTMLOutputElement **)(a2 + 24));
  return WebCore::wrap<WebCore::DOMTokenList>(a1, v3, v4);
}

BOOL WebCore::setJSHTMLOutputElement_htmlFor(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v18[2];
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLOutputElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLOutputElement::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v22 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v18[0];
  v13 = JSC::JSObject::get(a2, a1, v18[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_20;
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = (WTF::StringImpl *)v18[0];
  v18[0] = 0;
  v18[1] = v13;
  v19 = -1;
  v20 = 0x1000000;
  v21 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) + 0x48))(v13, a1, v14, a3, v18);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v16 = 0;
    if (!v14)
      goto LABEL_21;
  }
  else
  {
    v16 = 1;
    if (!v14)
      goto LABEL_21;
  }
  if (*(_DWORD *)v14 == 2)
    WTF::StringImpl::destroy(v14, v15);
  else
    *(_DWORD *)v14 -= 2;
LABEL_21:
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return v16;
}

uint64_t WebCore::jsHTMLOutputElement_form(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  uint64_t v4;
  WebCore::JSDOMGlobalObject *v6;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 120);
  if (v4 && (v6 = *(WebCore::JSDOMGlobalObject **)(v4 + 8)) != 0)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v6, a4);
  else
    return 2;
}

uint64_t WebCore::jsHTMLOutputElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLOutputElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLOutputElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLOutputElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLOutputElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 328))(*(_QWORD *)(a2 + 24) + 112);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

uint64_t WebCore::jsHTMLOutputElement_defaultValue(uint64_t a1, WTF::StringImpl *a2, __n128 a3, uint64_t a4, uint64_t a5, WTF::StringBuilder *a6)
{
  WebCore::Node *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;
  WTF::StringImpl *v16;

  v7 = (WebCore::Node *)*((_QWORD *)a2 + 3);
  v8 = (WTF::StringImpl *)*((_QWORD *)v7 + 22);
  if (v8)
  {
    *(_DWORD *)v8 += 2;
    v9 = *(_QWORD *)(a1 + 56);
  }
  else
  {
    WebCore::Node::textContent(v7, 0, a6, &v16, a3);
    v8 = v16;
    v9 = *(_QWORD *)(a1 + 56);
    if (!v16)
      return *(_QWORD *)(v9 + 41968);
  }
  v10 = *((_DWORD *)v8 + 1);
  if (v10)
  {
    if (v10 != 1)
    {
LABEL_6:
      v11 = *(_QWORD *)(v9 + 64760);
      if (!v11 || v8 != *(WTF::StringImpl **)(v11 + 8))
        v11 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_9;
    }
    v13 = (unsigned __int8 *)*((_QWORD *)v8 + 1);
    if ((*((_BYTE *)v8 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_6;
      v14 = v15;
    }
    v11 = *(_QWORD *)(v9 + 8 * v14 + 42216);
  }
  else
  {
    v11 = *(_QWORD *)(v9 + 41968);
  }
LABEL_9:
  if (*(_DWORD *)v8 == 2)
    WTF::StringImpl::destroy(v8, a2);
  else
    *(_DWORD *)v8 -= 2;
  return v11;
}

BOOL WebCore::setJSHTMLOutputElement_defaultValue(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::ContainerNode *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  WTF *v17;
  int hasExceptionsAfterHandlingTraps;
  WTF *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  WTF *v26;
  uint64_t v27;
  _BYTE v28[40];
  uint64_t v29;
  JSC::JSGlobalObject *v30;
  WTF::StringImpl *v31;
  unint64_t v32;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLOutputElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLOutputElement::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::ContainerNode **)(a2 + 24);
  v26 = (WTF *)v28;
  v27 = 4;
  v28[32] = 0;
  v29 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v30 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v26;
  v32 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v10 = *(WTF::StringImpl **)(this + 8);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v31 = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v32, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v31;
    if (hasExceptionsAfterHandlingTraps)
    {
      v25 = 1;
      v31 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, (WTF::StringImpl *)a2);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_27;
    }
  }
  else
  {
    v11 = v31;
  }
  v25 = 0;
  v24 = 0;
  v32 = (unint64_t)v11;
  v12 = (WTF::StringImpl *)*((_QWORD *)v9 + 22);
  if (!v12)
  {
    WebCore::ContainerNode::stringReplaceAll(v9, (uint64_t)&v32);
    v13 = (WTF::StringImpl *)v32;
    v32 = 0;
    if (!v13)
      goto LABEL_26;
    if (*(_DWORD *)v13 != 2)
    {
      *(_DWORD *)v13 -= 2;
      goto LABEL_26;
    }
LABEL_38:
    WTF::StringImpl::destroy(v13, (WTF::StringImpl *)a2);
    goto LABEL_26;
  }
  *((_QWORD *)v9 + 22) = v11;
  if (*(_DWORD *)v12 == 2)
  {
    v13 = v12;
    goto LABEL_38;
  }
  *(_DWORD *)v12 -= 2;
LABEL_26:
  v14 = 0;
  v15 = 1;
LABEL_27:
  ((void (*)(unint64_t *, uint64_t *))off_1E329F280[v14])(&v32, &v24);
  if (HIDWORD(v27))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v26, v30);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
    if (HIDWORD(v27))
    {
      v21 = v26;
      v22 = 8 * HIDWORD(v27);
      do
      {
        v23 = *(_QWORD *)v21;
        *(_QWORD *)v21 = 0;
        if (v23)
        {
          if (*(_DWORD *)(v23 + 24) == 2)
          {
            if ((*(_WORD *)(v23 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v23, v16);
          }
          else
          {
            *(_DWORD *)(v23 + 24) -= 2;
          }
        }
        v21 = (WTF *)((char *)v21 + 8);
        v22 -= 8;
      }
      while (v22);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
  }
  v17 = v26;
  if (v28 != (_BYTE *)v26 && v26 != 0)
  {
    v26 = 0;
    LODWORD(v27) = 0;
    WTF::fastFree(v17, v16);
  }
  return v15;
}

uint64_t WebCore::jsHTMLOutputElement_value(uint64_t a1, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, WTF::StringBuilder *a6)
{
  WTF::StringImpl *v7;
  uint64_t v8;
  uint64_t *v9;
  WTF::StringImpl *v10;
  int v11;
  uint64_t v12;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;
  WTF::StringImpl *v17;

  WebCore::Node::textContent(*(WebCore::Node **)(a2 + 24), 0, a6, &v17, a3);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = (uint64_t *)(v8 + 41968);
  v10 = v17;
  if (!v17)
    return *v9;
  v11 = *((_DWORD *)v17 + 1);
  if (v11)
  {
    if (v11 != 1)
    {
LABEL_4:
      v12 = *(_QWORD *)(v8 + 64760);
      if (!v12 || v17 != *(WTF::StringImpl **)(v12 + 8))
        v12 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v14 = (unsigned __int8 *)*((_QWORD *)v17 + 1);
    if ((*((_BYTE *)v17 + 16) & 4) != 0)
    {
      v15 = *v14;
    }
    else
    {
      v16 = *(unsigned __int16 *)v14;
      if (v16 > 0xFF)
        goto LABEL_4;
      v15 = v16;
    }
    v12 = *(_QWORD *)(v8 + 8 * v15 + 42216);
  }
  else
  {
    v12 = *v9;
  }
LABEL_7:
  if (*(_DWORD *)v10 == 2)
    WTF::StringImpl::destroy(v10, v7);
  else
    *(_DWORD *)v10 -= 2;
  return v12;
}

BOOL WebCore::setJSHTMLOutputElement_value(JSC::JSGlobalObject *a1, unint64_t a2, WTF::StringImpl **this, __n128 a4, uint64_t a5, WTF::StringBuilder *a6)
{
  JSC::VM *v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::Node *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  int v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  WTF *v22;
  int hasExceptionsAfterHandlingTraps;
  WTF *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  WTF *v31;
  uint64_t v32;
  _BYTE v33[40];
  uint64_t v34;
  JSC::JSGlobalObject *v35;
  WTF::StringImpl *v36;
  WTF::StringImpl **v37;

  v6 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLOutputElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLOutputElement::s_info && v9 != 0);
  }
  if (!v8)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v12 = *(WebCore::Node **)(a2 + 24);
  v31 = (WTF *)v33;
  a4.n128_u64[0] = 4;
  v32 = 4;
  v33[32] = 0;
  v34 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v35 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v31;
  v37 = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v13 = this[1];
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
      if (!v13)
        goto LABEL_17;
    }
    else if (!v13)
    {
LABEL_17:
      v36 = v13;
      goto LABEL_18;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v37, a1);
LABEL_18:
  if (*((_DWORD *)v6 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v6);
    v14 = v36;
    if (hasExceptionsAfterHandlingTraps)
    {
      v30 = 1;
      v36 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, (WTF::StringImpl *)a2);
        else
          *(_DWORD *)v14 -= 2;
      }
      v20 = 0;
      v19 = 1;
      goto LABEL_27;
    }
  }
  else
  {
    v14 = v36;
  }
  v30 = 0;
  v29 = 0;
  v36 = v14;
  v15 = (WTF::StringImpl *)*((_QWORD *)v12 + 22);
  if (v15)
  {
    v16 = *(_DWORD *)v15;
    *(_DWORD *)v15 += 2;
    if (v16)
      goto LABEL_22;
LABEL_37:
    WTF::StringImpl::destroy(v15, (WTF::StringImpl *)a2);
    goto LABEL_23;
  }
  WebCore::Node::textContent(v12, 0, a6, (WTF::StringImpl **)&v37, a4);
  v15 = (WTF::StringImpl *)*((_QWORD *)v12 + 22);
  *((_QWORD *)v12 + 22) = v37;
  if (!v15)
    goto LABEL_23;
  v16 = *(_DWORD *)v15 - 2;
  if (*(_DWORD *)v15 == 2)
    goto LABEL_37;
LABEL_22:
  *(_DWORD *)v15 = v16;
LABEL_23:
  WebCore::ContainerNode::stringReplaceAll(v12, (uint64_t)&v36);
  v18 = v36;
  v36 = 0;
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v17);
    else
      *(_DWORD *)v18 -= 2;
  }
  v19 = 0;
  v20 = 1;
LABEL_27:
  ((void (*)(WTF::StringImpl ***, uint64_t *))off_1E329F280[v19])(&v37, &v29);
  if (HIDWORD(v32))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v31, v35);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v34;
    if (HIDWORD(v32))
    {
      v26 = v31;
      v27 = 8 * HIDWORD(v32);
      do
      {
        v28 = *(_QWORD *)v26;
        *(_QWORD *)v26 = 0;
        if (v28)
        {
          if (*(_DWORD *)(v28 + 24) == 2)
          {
            if ((*(_WORD *)(v28 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v28, v21);
          }
          else
          {
            *(_DWORD *)(v28 + 24) -= 2;
          }
        }
        v26 = (WTF *)((char *)v26 + 8);
        v27 -= 8;
      }
      while (v27);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v34;
  }
  v22 = v31;
  if (v33 != (_BYTE *)v31 && v31 != 0)
  {
    v31 = 0;
    LODWORD(v32) = 0;
    WTF::fastFree(v22, v21);
  }
  return v20;
}

uint64_t WebCore::jsHTMLOutputElement_willValidate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v5;
  char v6;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_BYTE *)(v2 + 160);
  if ((v3 & 4) == 0 || (*(_BYTE *)(v2 + 162) & 3) == 2)
  {
    *(_BYTE *)(v2 + 160) = v3 | 4;
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 112) + 336))(v2 + 112);
    v3 = *(_BYTE *)(v2 + 160);
    if (((v5 ^ ((v3 & 2) == 0)) & 1) == 0)
    {
      if (v5)
        v6 = 2;
      else
        v6 = 0;
      v3 = v3 & 0xFD | v6;
      *(_BYTE *)(v2 + 160) = v3;
    }
  }
  if ((v3 & 2) != 0)
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsHTMLOutputElement_validity(uint64_t a1, uint64_t a2)
{
  return WebCore::toJS(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WTF *)(*(_QWORD *)(a2 + 24) + 112));
}

uint64_t WebCore::jsHTMLOutputElement_validationMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v3 + 112) + 272))(v3 + 112))
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v5 = *(_QWORD *)(v3 + 144);
  if (!v5)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  v8 = *(_QWORD *)(a1 + 56);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_5:
      v9 = *(_QWORD *)(v8 + 64760);
      if (!v9 || v5 != *(_QWORD *)(v9 + 8))
      {
        v9 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_8;
    }
    v11 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_5;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v8 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *(_QWORD *)(v8 + 41968);
  }
LABEL_8:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, v4);
  return v9;
}

uint64_t WebCore::jsHTMLOutputElement_labels(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t Wrapper;
  uint64_t v17;
  _DWORD *v18;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLElement::labels(*(WebCore::HTMLElement **)(a2 + 24), &v17);
  v3 = (_DWORD *)v17;
  if (!v17)
    return 2;
  v5 = *(_QWORD *)(v2 + 3320);
  if (!*(_DWORD *)(v5 + 48))
  {
    v6 = *(_QWORD *)(v17 + 8);
    if (v6)
      goto LABEL_5;
LABEL_7:
    ++*(_DWORD *)(v17 + 16);
    v18 = v3;
    Wrapper = WebCore::createWrapper(v2, (uint64_t *)&v18);
    v7 = v18;
    v18 = 0;
    if (v7)
    {
      if (v7[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
      else
        --v7[4];
    }
    v3 = (_DWORD *)v17;
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(v5 + 32);
  if (!v8)
    goto LABEL_7;
  v9 = *(_DWORD *)(v8 - 8);
  v10 = (~(v17 << 32) + v17) ^ ((unint64_t)(~(v17 << 32) + v17) >> 22);
  v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
  v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
  v13 = v9 & ((v12 >> 31) ^ v12);
  v14 = *(_QWORD *)(v8 + 16 * v13);
  if (v14 != v17)
  {
    v15 = 1;
    while (v14)
    {
      v13 = ((_DWORD)v13 + v15) & v9;
      v14 = *(_QWORD *)(v8 + 16 * v13);
      ++v15;
      if (v14 == v17)
        goto LABEL_22;
    }
    goto LABEL_7;
  }
LABEL_22:
  v6 = *(_QWORD *)(v8 + 16 * v13 + 8);
  if (!v6)
    goto LABEL_7;
LABEL_5:
  if ((*(_BYTE *)(v6 + 8) & 3) != 0)
    goto LABEL_7;
  Wrapper = *(_QWORD *)v6;
  if (!*(_QWORD *)v6)
    goto LABEL_7;
LABEL_11:
  v17 = 0;
  if (v3)
  {
    if (v3[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
    else
      --v3[4];
  }
  return Wrapper;
}

unint64_t WebCore::createWrapper<WebCore::HTMLOutputElement,WebCore::HTMLOutputElement>(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSHTMLElement *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v18;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  unint64_t SlowCase;
  WTF *v40;
  uint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *Allocator;
  uint64_t v46;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  WTF *v54;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSHTMLOutputElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLOutputElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLOutputElement::s_info
                                                                    + ~((_QWORD)&WebCore::JSHTMLOutputElement::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSHTMLOutputElement::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSHTMLOutputElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v16 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v15, a1, a3);
  Structure = WebCore::JSHTMLOutputElementPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSHTMLOutputElementPrototype::create(v15, Structure, v18, v19);
  v21 = WebCore::JSHTMLOutputElement::createStructure((uint64_t *)v15, (uint64_t)a1, v20);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v21, (uint64_t)&WebCore::JSHTMLOutputElement::s_info);
LABEL_8:
  v22 = *((_QWORD *)a1 + 7);
  v23 = *(_QWORD *)(v22 + 41456);
  v24 = *(_QWORD *)(v23 + 23536);
  v25 = *(_QWORD **)(v24 + 4560);
  if (v25)
    goto LABEL_30;
  v26 = *(_QWORD *)(v23 + 22648);
  if (__ldaxr((unsigned __int8 *)v26))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v26))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v26);
LABEL_13:
  v28 = *(_QWORD *)(v26 + 2824);
  v52 = *(_QWORD *)(v28 + 4560);
  if (!v52)
  {
    v29 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v54, "IsoSpace T");
    v53 = 0;
    MEMORY[0x19AEA3204](v29, &v54, v22 + 192, v22 + 1872, 40, 8, &v53);
    v31 = (uint64_t)v53;
    v53 = 0;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = v54;
    v54 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 1)
        WTF::fastFree(v32, v30);
      else
        --*(_DWORD *)v32;
    }
    v52 = v29;
    v33 = *(_QWORD *)(v28 + 4560);
    *(_QWORD *)(v28 + 4560) = v29;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = *(unsigned int *)(v26 + 2844);
    if ((_DWORD)v34 == *(_DWORD *)(v26 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v26 + 2832, (unint64_t)&v52);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v26 + 2832) + 8 * v34) = v29;
      *(_DWORD *)(v26 + 2844) = v34 + 1;
    }
  }
  v25 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v24 + 4560);
  *(_QWORD *)(v24 + 4560) = v25;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v26);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_29;
  }
  if (__stlxr(0, (unsigned __int8 *)v26))
LABEL_29:
    WTF::Lock::unlockSlow((WTF::Lock *)v26);
LABEL_30:
  SlowCase = v25[3];
  if (SlowCase < v25[4])
  {
LABEL_31:
    v25[3] = SlowCase + 48;
    goto LABEL_32;
  }
  SlowCase = v25[5];
  if ((SlowCase & 1) == 0)
  {
    v51 = *(_QWORD *)(SlowCase + 8) ^ v25[6];
    v25[4] = SlowCase + HIDWORD(v51);
    v25[5] = SlowCase + (int)v51;
    goto LABEL_31;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_32:
  *(_DWORD *)SlowCase = 0;
  v40 = *a2;
  *a2 = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  *(_QWORD *)(SlowCase + 24) = v40;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v22 + 755))
    __dmb(0xAu);
  v41 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v5)
    v42 = (uint64_t *)((char *)v5 + 8);
  else
    v42 = 0;
  if (!*(_DWORD *)(v41 + 48))
  {
    if ((SlowCase & 8) != 0)
      v43 = (SlowCase - 112) | 1;
    else
      v43 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v43 & 1) != 0)
      v44 = v43 + 47;
    else
      v44 = *(_QWORD *)v43 + 32;
    Allocator = *(_QWORD **)(v44 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v44 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v41;
    v46 = *v42;
    *v42 = (uint64_t)Allocator;
    if (!v46)
      return SlowCase;
LABEL_57:
    *(_QWORD *)(v46 + 8) = 3;
    return SlowCase;
  }
  v54 = v5;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  v50 = *(_QWORD **)(v49 + 16);
  if (!v50)
    v50 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *v50;
  *v50 = SlowCase;
  v50[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v50[2] = v41;
  v53 = v50;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v41 + 32), (uint64_t *)&v54, (uint64_t *)&v53);
  v46 = (uint64_t)v53;
  if (v53)
    goto LABEL_57;
  return SlowCase;
}

uint64_t WebCore::JSHTMLParagraphElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLParagraphElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLParagraphElementPrototype::create(WebCore::JSHTMLParagraphElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSHTMLParagraphElement::s_info, (uint64_t)&WebCore::JSHTMLParagraphElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLParagraphElement>,(WebCore::DOMConstructorID)562>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4496);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLParagraphElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLParagraphElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLParagraphElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLParagraphElement::s_info
                                                                        + ~((_QWORD)&WebCore::JSHTMLParagraphElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLParagraphElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLParagraphElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLParagraphElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLParagraphElementPrototype::create((WebCore::JSHTMLParagraphElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLParagraphElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLParagraphElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4496) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLParagraphElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLParagraphElementPrototype::s_info != (char **)(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                      + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLParagraphElement>,(WebCore::DOMConstructorID)562>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLParagraphElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLParagraphElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLParagraphElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLParagraphElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLParamElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLParamElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLParamElementPrototype::create(WebCore::JSHTMLParamElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSHTMLParamElement::s_info, &WebCore::JSHTMLParamElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLParamElement>,(WebCore::DOMConstructorID)563>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4504);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLParamElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLParamElement::s_info + ~((_QWORD)&WebCore::JSHTMLParamElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLParamElement::s_info + ~((_QWORD)&WebCore::JSHTMLParamElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLParamElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLParamElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLParamElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLParamElementPrototype::create((WebCore::JSHTMLParamElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLParamElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLParamElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4504) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLParamElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLParamElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLParamElement>,(WebCore::DOMConstructorID)563>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLParamElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLParamElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLParamElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLParamElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLParamElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::typeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLParamElement_type(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLParamElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLParamElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::typeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::typeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLParamElement_value(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::valueAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLParamElement_value(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLParamElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLParamElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::valueAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::valueAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLParamElement_valueType(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::valuetypeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::valuetypeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::valuetypeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLParamElement_valueType(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLParamElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLParamElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::valuetypeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::valuetypeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::valuetypeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::valuetypeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLPictureElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLPictureElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLPictureElementPrototype::create(WebCore::JSHTMLPictureElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSHTMLPictureElement::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSHTMLPictureElementPrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLPictureElement>,(WebCore::DOMConstructorID)564>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4512);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLPictureElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLPictureElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLPictureElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLPictureElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLPictureElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLPictureElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLPictureElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLPictureElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLPictureElementPrototype::create((WebCore::JSHTMLPictureElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLPictureElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLPictureElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4512) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLPictureElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLPictureElementPrototype::s_info != (char **)(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                    + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLPictureElement>,(WebCore::DOMConstructorID)564>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSHTMLPreElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLPreElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLPreElementPrototype::create(WebCore::JSHTMLPreElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSHTMLPreElement::s_info, (uint64_t)&WebCore::JSHTMLPreElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLPreElement>,(WebCore::DOMConstructorID)565>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4520);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLPreElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLPreElement::s_info + ~((_QWORD)&WebCore::JSHTMLPreElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLPreElement::s_info + ~((_QWORD)&WebCore::JSHTMLPreElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLPreElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLPreElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLPreElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLPreElementPrototype::create((WebCore::JSHTMLPreElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLPreElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLPreElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4520) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLPreElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLPreElementPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLPreElement>,(WebCore::DOMConstructorID)565>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLPreElement_width(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::widthAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    v8 = 0;
  else
    v8 = v10;
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLPreElement_width(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  WTF::AtomString *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::Element *v11;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;
  JSC::VM *v18;
  unint64_t v19;
  unint64_t v20;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = (WTF::AtomString *)a3;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLPreElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLPreElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::Element **)(a2 + 24);
  v20 = a3;
  if (a3 < 0xFFFE000000000000)
  {
    v13 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v18 = v4;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v20, a1);
      v4 = v18;
      v13 = v19;
    }
    v14 = (v13 >> 52) & 0x7FF;
    v15 = v14 - 1023;
    v16 = v13 >> (51 - (v13 >> 52));
    if (v14 > 0x433)
      LODWORD(v16) = v13 << ((v13 >> 52) - 51);
    if (v14 >= 0x41F)
      v17 = v16;
    else
      v17 = (((1 << ((v13 >> 52) + 1)) - 1) & v16) + (1 << ((v13 >> 52) + 1));
    if ((v13 & 0x8000000000000000) != 0)
      v17 = -v17;
    if (v15 <= 0x53)
      v5 = (WTF::AtomString *)v17;
    else
      v5 = 0;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  WebCore::Element::setIntegralAttribute(v11, (const WebCore::QualifiedName *)&WebCore::HTMLNames::widthAttr, v5);
  return 1;
}

uint64_t WebCore::JSHTMLProgressElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLProgressElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLProgressElementPrototype::create(WebCore::JSHTMLProgressElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSHTMLProgressElement::s_info, &WebCore::JSHTMLProgressElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLProgressElement>,(WebCore::DOMConstructorID)566>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4528);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLProgressElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLProgressElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLProgressElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLProgressElement::s_info
                                                                       + ~((_QWORD)&WebCore::JSHTMLProgressElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLProgressElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLProgressElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLProgressElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLProgressElementPrototype::create((WebCore::JSHTMLProgressElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLProgressElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLProgressElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4528) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLProgressElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLProgressElementPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLProgressElement>,(WebCore::DOMConstructorID)566>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLProgressElement_value(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  WebCore::HTMLProgressElement::value(*(WebCore::HTMLProgressElement **)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSHTMLProgressElement_value(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::HTMLProgressElement *v9;
  double v10;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLProgressElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLProgressElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(WebCore::HTMLProgressElement **)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v10 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v10 = v13;
  }
  else
  {
    *(_QWORD *)&v10 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      WebCore::HTMLProgressElement::setValue(v9, v10);
      return 1;
    }
    JSC::throwTypeError();
  }
  return 0;
}

unint64_t WebCore::jsHTMLProgressElement_max(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = WebCore::HTMLProgressElement::max(*(WebCore::HTMLProgressElement **)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::IDLAttribute<WebCore::JSHTMLProgressElement>::set<&WebCore::setJSHTMLProgressElement_maxSetter,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;

  v5 = WebCore::castThisValue<WebCore::JSHTMLProgressElement>(a2);
  if (v5)
    return WebCore::setJSHTMLProgressElement_maxSetter(a1, *(WTF::AtomString **)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

unint64_t WebCore::jsHTMLProgressElement_position(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  WebCore::HTMLProgressElement::position(*(WebCore::HTMLProgressElement **)(a2 + 24));
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

uint64_t WebCore::jsHTMLProgressElement_labels(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t Wrapper;
  uint64_t v17;
  _DWORD *v18;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLElement::labels(*(WebCore::HTMLElement **)(a2 + 24), &v17);
  v3 = (_DWORD *)v17;
  if (!v17)
    return 2;
  v5 = *(_QWORD *)(v2 + 3320);
  if (!*(_DWORD *)(v5 + 48))
  {
    v6 = *(_QWORD *)(v17 + 8);
    if (v6)
      goto LABEL_5;
LABEL_7:
    ++*(_DWORD *)(v17 + 16);
    v18 = v3;
    Wrapper = WebCore::createWrapper(v2, (uint64_t *)&v18);
    v7 = v18;
    v18 = 0;
    if (v7)
    {
      if (v7[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
      else
        --v7[4];
    }
    v3 = (_DWORD *)v17;
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(v5 + 32);
  if (!v8)
    goto LABEL_7;
  v9 = *(_DWORD *)(v8 - 8);
  v10 = (~(v17 << 32) + v17) ^ ((unint64_t)(~(v17 << 32) + v17) >> 22);
  v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
  v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
  v13 = v9 & ((v12 >> 31) ^ v12);
  v14 = *(_QWORD *)(v8 + 16 * v13);
  if (v14 != v17)
  {
    v15 = 1;
    while (v14)
    {
      v13 = ((_DWORD)v13 + v15) & v9;
      v14 = *(_QWORD *)(v8 + 16 * v13);
      ++v15;
      if (v14 == v17)
        goto LABEL_22;
    }
    goto LABEL_7;
  }
LABEL_22:
  v6 = *(_QWORD *)(v8 + 16 * v13 + 8);
  if (!v6)
    goto LABEL_7;
LABEL_5:
  if ((*(_BYTE *)(v6 + 8) & 3) != 0)
    goto LABEL_7;
  Wrapper = *(_QWORD *)v6;
  if (!*(_QWORD *)v6)
    goto LABEL_7;
LABEL_11:
  v17 = 0;
  if (v3)
  {
    if (v3[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
    else
      --v3[4];
  }
  return Wrapper;
}

WTF::StringImpl *WebCore::JSHTMLQuoteElementPrototype::finishCreation(WebCore::JSHTMLQuoteElementPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(a2, (uint64_t)&WebCore::JSHTMLQuoteElement::s_info, (uint64_t)&WebCore::JSHTMLQuoteElementPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLQuoteElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLQuoteElement::JSHTMLQuoteElement(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = *a4;
  *a4 = 0;
  v8 = 0;
  v6 = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(v6 + 24) = v5;
  *(_QWORD *)(v6 + 32) = 0;
  WTF::Ref<WebCore::HTMLElement,WTF::RawPtrTraits<WebCore::HTMLElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLElement>>::~Ref(&v8);
  return a1;
}

unint64_t WebCore::JSHTMLQuoteElement::createPrototype(WebCore::JSHTMLQuoteElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLQuoteElementPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSHTMLQuoteElementPrototype::create(WebCore::JSHTMLQuoteElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLQuoteElementPrototype::finishCreation((WebCore::JSHTMLQuoteElementPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLQuoteElement>,(WebCore::DOMConstructorID)567>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4536);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v21) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v21, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLQuoteElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v20);
    v10[2848] = v2 + (int)v20;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v21);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLQuoteElement>((WebCore::JSHTMLQuoteElement *)a1, (JSC::VM *)a2)+ 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4536) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLQuoteElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLQuoteElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLQuoteElement>,(WebCore::DOMConstructorID)567>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLQuoteElement_cite(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  _QWORD *Attribute;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  char v23;
  char v24;
  char **v25;
  char *v26;

  v6 = *(WebCore::Element **)(a2 + 24);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  Attribute = (_QWORD *)WebCore::Element::getAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::citeAttr, a3, a4, a5);
  v9 = &v22;
  WebCore::Document::completeURL((WebCore::Document *)v7, Attribute, v7 + 848, 0, (WTF::URL *)&v22);
  if ((v23 & 2) == 0)
  {
    v9 = &v22;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v22))
    {
      v21 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v21 != -1)
      {
        v26 = &v24;
        v25 = &v26;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v9 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v11 = *v9;
  if (v11)
    *(_DWORD *)v11 += 2;
  v12 = v22;
  v22 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v10);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v13 = *(_QWORD *)(a1 + 56);
  v14 = (uint64_t *)(v13 + 41968);
  if (!v11)
    return *v14;
  v15 = *((_DWORD *)v11 + 1);
  if (v15)
  {
    if (v15 != 1)
    {
LABEL_12:
      v16 = *(_QWORD *)(v13 + 64760);
      if (!v16 || v11 != *(WTF::StringImpl **)(v16 + 8))
        v16 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_15;
    }
    v18 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
    if ((*((_BYTE *)v11 + 16) & 4) != 0)
    {
      v19 = *v18;
    }
    else
    {
      v20 = *(unsigned __int16 *)v18;
      if (v20 > 0xFF)
        goto LABEL_12;
      v19 = v20;
    }
    v16 = *(_QWORD *)(v13 + 8 * v19 + 42216);
  }
  else
  {
    v16 = *v14;
  }
LABEL_15:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(v11, v10);
  else
    *(_DWORD *)v11 -= 2;
  return v16;
}

BOOL WebCore::setJSHTMLQuoteElement_cite(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLQuoteElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLQuoteElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::citeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::citeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::citeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::citeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLQuoteElement::subspaceForImpl(WebCore::JSHTMLQuoteElement *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4608);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v16 = *(_QWORD *)(v9 + 4608);
  if (!v16)
  {
    v14 = 40;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v14, JSC::JSCell::numberOfLowerTierCells, &v15);
    v11 = v15;
    v16 = v15;
    v12 = *(_QWORD *)(v9 + 4608);
    *(_QWORD *)(v9 + 4608) = v15;
    if (v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
    v13 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v13 == *(_DWORD *)(v7 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v7 + 2832, (unint64_t)&v16);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v13) = v11;
      *(_DWORD *)(v7 + 2844) = v13 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v15 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSHTMLQuoteElement::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v15);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v15);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSHTMLScriptElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLScriptElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLScriptElement>,(WebCore::DOMConstructorID)568>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  unint64_t v37;
  unint64_t v38;
  WTF::StringImpl *v39;
  unint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4544);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v39) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v37 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v37);
    v5[2] = SlowCase + (int)v37;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v39, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLScriptElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v38 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v38);
    v10[2848] = v2 + (int)v38;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v39);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v39);
  v14 = v39;
  v39 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v39);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (!v18)
    goto LABEL_21;
  v19 = *(_DWORD *)(v18 - 8);
  v20 = ((unint64_t)&WebCore::JSHTMLScriptElement::s_info + ~((_QWORD)&WebCore::JSHTMLScriptElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLScriptElement::s_info + ~((_QWORD)&WebCore::JSHTMLScriptElement::s_info << 32)) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(char ***)(v18 + 16 * v23);
  if (v24 != &WebCore::JSHTMLScriptElement::s_info)
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(char ***)(v18 + 16 * v23);
      ++v25;
      if (v24 == &WebCore::JSHTMLScriptElement::s_info)
        goto LABEL_20;
    }
    goto LABEL_21;
  }
LABEL_20:
  v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
  if (!v26)
  {
LABEL_21:
    v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
    Structure = WebCore::JSHTMLScriptElementPrototype::createStructure((uint64_t *)a1, a2, v27);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v31 = (JSC::JSCell *)WebCore::JSHTMLScriptElementPrototype::create((WebCore::JSHTMLScriptElementPrototype *)a1, Structure, v29, v30);
    v32 = WebCore::JSHTMLScriptElement::createStructure((uint64_t *)a1, a2, v31);
    v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLScriptElement::s_info);
  }
  v33 = *(_QWORD *)(v26 + 48);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v39);
  if ((*(_BYTE *)((16 * *(unsigned int *)v2) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v2, (JSC::VM *)a1);
  WTF::AtomStringImpl::addLiteral();
  v34 = v39;
  JSC::reifyStaticProperty((JSC::VM *)a1, (uint64_t)&WebCore::JSHTMLScriptElement::s_info, (unint64_t *)&v39, (uint64_t)&WebCore::JSHTMLScriptElementConstructorTableValues, (unsigned __int8 *)v2);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4544) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLScriptElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLScriptElementPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLScriptElement>,(WebCore::DOMConstructorID)568>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLScriptElement_text(uint64_t a1, const WebCore::ContainerNode *a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v13;
  char v14;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::ScriptElement::scriptContent((WebCore::ScriptElement *)(*((_QWORD *)a2 + 3) + 112), a2, &v11);
  v4 = v11;
  v11 = 0;
  v12 = v4;
  v13 = 1;
  v6 = WebCore::JSConverter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedScript>,WebCore::IDLDOMString>>::convert(a1, v3, (uint64_t)&v12);
  v8 = v7;
  if (v13 != -1)
    ((void (*)(char *, WTF::StringImpl **, double))off_1E32A1030[v13])(&v14, &v12, v6);
  v9 = v11;
  v11 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v5);
    else
      *(_DWORD *)v9 -= 2;
  }
  return v8;
}

BOOL WebCore::setJSHTMLScriptElement_text(JSC::JSGlobalObject *a1, unint64_t a2, JSC::JSRopeString *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t *v7;
  int v8;
  _BOOL8 v9;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  JSValue v13;
  int v14;
  WTF::StringImpl *v15;
  char v16;
  _BYTE v17[8];
  WTF::StringImpl *v18;
  char v19;
  _BYTE v20[8];
  uint64_t v21;
  int v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v6 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(uint64_t **)(v6 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedScript>,WebCore::IDLDOMString>>::convert((uint64_t)v20, a1, a3);
  v8 = v22;
  v9 = v22 == 0;
  if (!v22)
  {
    WebCore::Detail::ConversionResultStorage<std::variant<WTF::RefPtr<WebCore::TrustedScript,WTF::RawPtrTraits<WebCore::TrustedScript>,WTF::DefaultRefDerefTraits<WebCore::TrustedScript>>,WTF::String>>::releaseReturnValue((uint64_t)v17, (uint64_t)v20);
    WebCore::HTMLScriptElement::setText(v7, (uint64_t)v17, (uint64_t)&v14);
    if ((_DWORD)v18 != -1)
      ((void (*)(char *, _BYTE *))off_1E32A1030[v18])(&v19, v17);
    if (v16)
    {
      v11 = (WTF::StringImpl *)v14;
      v17[0] = v14;
      v12 = v15;
      v18 = v15;
      if (!*((_QWORD *)v5 + 2))
      {
        v13.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v14, (JSC::JSGlobalObject *)&v18);
        JSC::VM::throwException(v5, a1, v13);
        v12 = v18;
      }
      v18 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v11);
        else
          *(_DWORD *)v12 -= 2;
      }
    }
    v8 = v22;
  }
  if (v8 != -1)
    ((void (*)(int *, uint64_t *))off_1E32A1060[v8])(&v14, &v21);
  return v9;
}

uint64_t WebCore::jsHTMLScriptElement_innerText(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  WTF::StringImpl *v14;

  WebCore::Element::innerText(*(WebCore::Element **)(a2 + 24), &v14);
  v4 = v14;
  v14 = 0;
  v5 = *(_QWORD *)(a1 + 56);
  v6 = (uint64_t *)(v5 + 41968);
  if (!v4)
  {
    v8 = *v6;
    goto LABEL_9;
  }
  v7 = *((_DWORD *)v4 + 1);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_4:
      v8 = *(_QWORD *)(v5 + 64760);
      if (!v8 || v4 != *(WTF::StringImpl **)(v8 + 8))
        v8 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v11 = (unsigned __int8 *)*((_QWORD *)v4 + 1);
    if ((*((_BYTE *)v4 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_4;
      v12 = v13;
    }
    v8 = *(_QWORD *)(v5 + 8 * v12 + 42216);
  }
  else
  {
    v8 = *v6;
  }
LABEL_7:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v3);
  else
    *(_DWORD *)v4 -= 2;
LABEL_9:
  v9 = v14;
  v14 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v3);
    else
      *(_DWORD *)v9 -= 2;
  }
  return v8;
}

BOOL WebCore::setJSHTMLScriptElement_innerText(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _BOOL4 v9;
  char **v10;
  BOOL v11;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  JSValue v20;
  uint64_t v21;
  int v22[2];
  WTF::StringImpl *v23;
  char v24;
  _BYTE v25[8];
  WTF::StringImpl *v26;
  char v27;
  _BYTE v28[8];
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v6 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(uint64_t **)(v6 + 24);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_13;
  v8 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSTrustedScript::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSTrustedScript::s_info && v10 != 0);
  }
  if (!v9 || (v21 = *(_QWORD *)(a3 + 24)) == 0)
  {
LABEL_13:
    WebCore::Converter<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLDOMString>>::convert(a1, a3, (uint64_t)v22);
    v13 = (int)v23;
    if ((_DWORD)v23)
    {
      v15 = 1;
      v31 = 1;
      if ((_DWORD)v23 == -1)
      {
        v16 = 0;
        goto LABEL_20;
      }
    }
    else
    {
      v14 = *(_QWORD *)v22;
      *(_QWORD *)v22 = 0;
      v29 = v14;
      v30 = 1;
      v31 = 0;
    }
    ((void (*)(_BYTE *, int *))off_1E329F280[v23])(v25, v22);
    if (!v13)
      goto LABEL_16;
    v16 = 0;
    v15 = 1;
LABEL_20:
    ((void (*)(int *, uint64_t *))off_1E32A1060[v15])(v22, &v29);
    return v16;
  }
  ++*(_DWORD *)(v21 + 8);
  v29 = v21;
  v30 = 0;
  v31 = 0;
LABEL_16:
  WebCore::Detail::ConversionResultStorage<std::variant<WTF::RefPtr<WebCore::TrustedScript,WTF::RawPtrTraits<WebCore::TrustedScript>,WTF::DefaultRefDerefTraits<WebCore::TrustedScript>>,WTF::String>>::releaseReturnValue((uint64_t)v25, (uint64_t)v28);
  WebCore::HTMLScriptElement::setInnerText(v7, (uint64_t)v25, (uint64_t)v22);
  if ((_DWORD)v26 != -1)
    ((void (*)(char *, _BYTE *))off_1E32A1030[v26])(&v27, v25);
  if (v24)
  {
    v18 = (WTF::StringImpl *)LOBYTE(v22[0]);
    v25[0] = v22[0];
    v19 = v23;
    v26 = v23;
    if (!*((_QWORD *)v5 + 2))
    {
      v20.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v22[0]), (JSC::JSGlobalObject *)&v26);
      JSC::VM::throwException(v5, a1, v20);
      v19 = v26;
    }
    v26 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
  }
  v15 = v31;
  v16 = 1;
  if (v31 != -1)
    goto LABEL_20;
  return v16;
}

uint64_t WebCore::jsHTMLScriptElement_textContent(uint64_t a1, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, WTF::StringBuilder *a6)
{
  return WebCore::jsHTMLScriptElement_textContentGetter(a1, *(_DWORD *)a2, *(WebCore::Node **)(a2 + 24), a3, a5, a6);
}

BOOL WebCore::IDLAttribute<WebCore::JSHTMLScriptElement>::set<&WebCore::setJSHTMLScriptElement_textContentSetter,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, unint64_t a2, JSC::JSRopeString *a3)
{
  unint64_t v5;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (v5)
    return WebCore::setJSHTMLScriptElement_textContentSetter(a1, *(uint64_t **)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsHTMLScriptElement_htmlFor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::forAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::forAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::forAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLScriptElement_htmlFor(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v21 = v9;
    v10 = *((_QWORD *)v6 + 13);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) == 0)
      {
        v12 = (uint64_t *)(v10 + 32);
        v13 = v11 >> 5;
        if (!v13)
          goto LABEL_15;
LABEL_8:
        v14 = 0;
        while (1)
        {
          v15 = *v12;
          if (*v12 == WebCore::HTMLNames::forAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::forAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::forAttr + 32))
          {
            goto LABEL_16;
          }
          ++v14;
          v12 += 2;
          if (v13 == v14)
            goto LABEL_15;
        }
      }
      v12 = *(uint64_t **)(v10 + 40);
      v13 = *(_DWORD *)(v10 + 52);
      if (v13)
        goto LABEL_8;
    }
LABEL_15:
    v14 = 0xFFFFFFFFLL;
LABEL_16:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::forAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v8;
}

uint64_t WebCore::jsHTMLScriptElement_event(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::eventAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::eventAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::eventAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLScriptElement_event(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v21 = v9;
    v10 = *((_QWORD *)v6 + 13);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) == 0)
      {
        v12 = (uint64_t *)(v10 + 32);
        v13 = v11 >> 5;
        if (!v13)
          goto LABEL_15;
LABEL_8:
        v14 = 0;
        while (1)
        {
          v15 = *v12;
          if (*v12 == WebCore::HTMLNames::eventAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::eventAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::eventAttr + 32))
          {
            goto LABEL_16;
          }
          ++v14;
          v12 += 2;
          if (v13 == v14)
            goto LABEL_15;
        }
      }
      v12 = *(uint64_t **)(v10 + 40);
      v13 = *(_DWORD *)(v10 + 52);
      if (v13)
        goto LABEL_8;
    }
LABEL_15:
    v14 = 0xFFFFFFFFLL;
LABEL_16:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::eventAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v8;
}

uint64_t WebCore::jsHTMLScriptElement_charset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::charsetAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::charsetAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::charsetAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLScriptElement_charset(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v21 = v9;
    v10 = *((_QWORD *)v6 + 13);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) == 0)
      {
        v12 = (uint64_t *)(v10 + 32);
        v13 = v11 >> 5;
        if (!v13)
          goto LABEL_15;
LABEL_8:
        v14 = 0;
        while (1)
        {
          v15 = *v12;
          if (*v12 == WebCore::HTMLNames::charsetAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::charsetAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::charsetAttr + 32))
          {
            goto LABEL_16;
          }
          ++v14;
          v12 += 2;
          if (v13 == v14)
            goto LABEL_15;
        }
      }
      v12 = *(uint64_t **)(v10 + 40);
      v13 = *(_DWORD *)(v10 + 52);
      if (v13)
        goto LABEL_8;
    }
LABEL_15:
    v14 = 0xFFFFFFFFLL;
LABEL_16:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::charsetAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v8;
}

uint64_t WebCore::jsHTMLScriptElement_async(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 104);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 + 4);
    if ((v4 & 1) != 0)
    {
      v5 = *(uint64_t **)(v3 + 40);
      LODWORD(v6) = *(_DWORD *)(v3 + 52);
      if (!(_DWORD)v6)
        goto LABEL_13;
    }
    else
    {
      v5 = (uint64_t *)(v3 + 32);
      LODWORD(v6) = v4 >> 5;
      if (!(_DWORD)v6)
        goto LABEL_13;
    }
    v6 = v6;
    do
    {
      v7 = *v5;
      if (*v5 == WebCore::HTMLNames::asyncAttr
        || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::asyncAttr + 24)
        && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::asyncAttr + 32))
      {
        return 7;
      }
      v5 += 2;
    }
    while (--v6);
  }
LABEL_13:
  if ((*(_WORD *)(v2 + 133) & 0x100) == 0)
    return 6;
  return 7;
}

BOOL WebCore::setJSHTMLScriptElement_async(uint64_t a1, unint64_t a2, unint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  __n128 v7;
  double v8;
  _BOOL4 v9;
  uint64_t v10;
  BOOL v12;
  int v13;
  uint64_t v14;
  int *v15;
  int v16;

  v5 = *(JSC::VM **)(a1 + 56);
  v6 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (_DWORD)a3 == 0;
    goto LABEL_27;
  }
  *(_QWORD *)&v8 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v9 = a3 == 7;
      goto LABEL_6;
    }
    v13 = *(unsigned __int8 *)(a3 + 5);
    if (v13 == 3)
    {
      v16 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v13 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v9 = 1;
          goto LABEL_6;
        }
        v12 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_27;
      }
      v14 = *(_QWORD *)(a3 + 8);
      if ((v14 & 1) != 0)
        v15 = (int *)(a3 + 16);
      else
        v15 = (int *)(v14 + 4);
      v16 = *v15;
    }
    v12 = v16 == 0;
LABEL_27:
    v9 = !v12;
    goto LABEL_6;
  }
  v7.n128_u64[0] = a3 - 0x2000000000000;
  v9 = v8 > 0.0 || v8 < 0.0;
LABEL_6:
  v10 = *(_QWORD *)(v6 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute((WTF::StringImpl **)v10, (const WebCore::QualifiedName *)&WebCore::HTMLNames::asyncAttr, v9, v7);
  *(_WORD *)(v10 + 133) &= ~0x100u;
  return 1;
}

uint64_t WebCore::jsHTMLScriptElement_defer(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::deferAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::deferAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::deferAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::setJSHTMLScriptElement_defer(uint64_t a1, unint64_t a2, unint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  __n128 v7;
  double v8;
  _BOOL4 v9;
  WTF::StringImpl **v10;
  BOOL v12;
  int v13;
  uint64_t v14;
  int *v15;
  int v16;

  v5 = *(JSC::VM **)(a1 + 56);
  v6 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (_DWORD)a3 == 0;
    goto LABEL_27;
  }
  *(_QWORD *)&v8 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v9 = a3 == 7;
      goto LABEL_6;
    }
    v13 = *(unsigned __int8 *)(a3 + 5);
    if (v13 == 3)
    {
      v16 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v13 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v9 = 1;
          goto LABEL_6;
        }
        v12 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_27;
      }
      v14 = *(_QWORD *)(a3 + 8);
      if ((v14 & 1) != 0)
        v15 = (int *)(a3 + 16);
      else
        v15 = (int *)(v14 + 4);
      v16 = *v15;
    }
    v12 = v16 == 0;
LABEL_27:
    v9 = !v12;
    goto LABEL_6;
  }
  v7.n128_u64[0] = a3 - 0x2000000000000;
  v9 = v8 > 0.0 || v8 < 0.0;
LABEL_6:
  v10 = *(WTF::StringImpl ***)(v6 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v10, (const WebCore::QualifiedName *)&WebCore::HTMLNames::deferAttr, v9, v7);
  return 1;
}

uint64_t WebCore::jsHTMLScriptElement_src(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;
  WTF::StringImpl *v16;

  WebCore::HTMLScriptElement::src(*(WebCore::HTMLScriptElement **)(a2 + 24), a3, a4, &v16, a5);
  v7 = v16;
  v8 = *(_QWORD *)(a1 + 56);
  v9 = (uint64_t *)(v8 + 41968);
  if (!v16)
    return *v9;
  v10 = *((_DWORD *)v16 + 1);
  if (v10)
  {
    if (v10 != 1)
    {
LABEL_4:
      v11 = *(_QWORD *)(v8 + 64760);
      if (!v11 || v16 != *(WTF::StringImpl **)(v11 + 8))
        v11 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_7;
    }
    v13 = (unsigned __int8 *)*((_QWORD *)v16 + 1);
    if ((*((_BYTE *)v16 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_4;
      v14 = v15;
    }
    v11 = *(_QWORD *)(v8 + 8 * v14 + 42216);
  }
  else
  {
    v11 = *v9;
  }
LABEL_7:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v6);
  else
    *(_DWORD *)v7 -= 2;
  return v11;
}

BOOL WebCore::setJSHTMLScriptElement_src(JSC::JSGlobalObject *a1, unint64_t a2, uint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  _BOOL8 v9;
  int v10;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSValue v14;
  WTF::StringImpl *v15;
  int v16;
  WTF::StringImpl *v17;
  char v18;
  _BYTE v19[8];
  WTF::StringImpl *v20;
  char v21;
  _BYTE v22[8];
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v6 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WTF::StringImpl **)(v6 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedScriptURL>,WebCore::IDLUSVString>>::convert(a1, a3, (uint64_t)v22);
  v8 = v25;
  v9 = v25 == 0;
  if (!v25)
  {
    v19[0] = 0;
    LODWORD(v20) = -1;
    v10 = v24;
    if (v24 != -1)
    {
      ((void (*)(int *, _BYTE *, uint64_t *))off_1E32A10B0[v24])(&v16, v19, &v23);
      LODWORD(v20) = v10;
    }
    WebCore::HTMLScriptElement::setSrc(v7, (uint64_t)v19, (uint64_t)&v16);
    if ((_DWORD)v20 != -1)
      ((void (*)(char *, _BYTE *))off_1E32A1090[v20])(&v21, v19);
    if (v18)
    {
      v12 = (WTF::StringImpl *)v16;
      v19[0] = v16;
      v13 = v17;
      v17 = 0;
      v20 = v13;
      if (!*((_QWORD *)v5 + 2))
      {
        v14.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v16, (JSC::JSGlobalObject *)&v20);
        JSC::VM::throwException(v5, a1, v14);
        v13 = v20;
      }
      v20 = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v12);
        else
          *(_DWORD *)v13 -= 2;
      }
      if (v18)
      {
        v15 = v17;
        v17 = 0;
        if (v15)
        {
          if (*(_DWORD *)v15 == 2)
            WTF::StringImpl::destroy(v15, v12);
          else
            *(_DWORD *)v15 -= 2;
        }
      }
    }
    v8 = v25;
  }
  if (v8 != -1)
    ((void (*)(int *, uint64_t *))off_1E32A10C0[v8])(&v16, &v23);
  return v9;
}

uint64_t WebCore::jsHTMLScriptElement_type(uint64_t a1, uint64_t a2)
{
  return WebCore::jsHTMLScriptElement_typeGetter(a1, *(_QWORD *)(a2 + 24));
}

BOOL WebCore::setJSHTMLScriptElement_type(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v21 = v9;
    v10 = *((_QWORD *)v6 + 13);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) == 0)
      {
        v12 = (uint64_t *)(v10 + 32);
        v13 = v11 >> 5;
        if (!v13)
          goto LABEL_15;
LABEL_8:
        v14 = 0;
        while (1)
        {
          v15 = *v12;
          if (*v12 == WebCore::HTMLNames::typeAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
          {
            goto LABEL_16;
          }
          ++v14;
          v12 += 2;
          if (v13 == v14)
            goto LABEL_15;
        }
      }
      v12 = *(uint64_t **)(v10 + 40);
      v13 = *(_DWORD *)(v10 + 52);
      if (v13)
        goto LABEL_8;
    }
LABEL_15:
    v14 = 0xFFFFFFFFLL;
LABEL_16:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::typeAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v8;
}

uint64_t WebCore::jsHTMLScriptElement_crossOrigin(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  WebCore::HTMLScriptElement::crossOrigin(*(WebCore::HTMLScriptElement **)(a2 + 24), &v12);
  v3 = v12;
  if (!v12)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = *((_DWORD *)v12 + 1);
  if (!v6)
    goto LABEL_14;
  if (v6 == 1)
  {
    v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
    if ((*((_BYTE *)v12 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v5 = (uint64_t *)(v4 + 8 * v9 + 42216);
LABEL_14:
    v7 = *v5;
    goto LABEL_15;
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v3 = v12;
    v12 = 0;
    if (!v3)
      return v7;
    goto LABEL_16;
  }
LABEL_15:
  v12 = 0;
LABEL_16:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v7;
}

BOOL WebCore::setJSHTMLScriptElement_crossOrigin(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;
  int v22;
  char v23;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v8 = 0;
    v20 = 0;
LABEL_8:
    v19 = 0;
    v21 = v8;
    v9 = *((_QWORD *)v6 + 13);
    if (v9)
    {
      v10 = *(_DWORD *)(v9 + 4);
      if ((v10 & 1) == 0)
      {
        v11 = (uint64_t *)(v9 + 32);
        v12 = v10 >> 5;
        if (!v12)
          goto LABEL_21;
LABEL_14:
        v14 = 0;
        while (1)
        {
          v15 = *v11;
          if (*v11 == WebCore::HTMLNames::crossoriginAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::crossoriginAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::crossoriginAttr + 32))
          {
            goto LABEL_22;
          }
          ++v14;
          v11 += 2;
          if (v12 == v14)
            goto LABEL_21;
        }
      }
      v11 = *(uint64_t **)(v9 + 40);
      v12 = *(_DWORD *)(v9 + 52);
      if (v12)
        goto LABEL_14;
    }
LABEL_21:
    v14 = 0xFFFFFFFFLL;
LABEL_22:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::crossoriginAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v13 = 1;
    v7 = v20;
    goto LABEL_26;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v21);
  LOBYTE(v19) = 0;
  v20 = -1;
  v7 = v22;
  if (v22 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v22])(&v23, &v19, &v21);
  v20 = v7;
  if (v22 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v22])(&v23, &v21);
    v7 = v20;
  }
  if (!v7)
  {
    v8 = v19;
    goto LABEL_8;
  }
  v13 = 0;
LABEL_26:
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v13;
}

uint64_t WebCore::jsHTMLScriptElement_noModule(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::nomoduleAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::nomoduleAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::nomoduleAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::setJSHTMLScriptElement_noModule(uint64_t a1, unint64_t a2, unint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  __n128 v7;
  double v8;
  _BOOL4 v9;
  WTF::StringImpl **v10;
  BOOL v12;
  int v13;
  uint64_t v14;
  int *v15;
  int v16;

  v5 = *(JSC::VM **)(a1 + 56);
  v6 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (_DWORD)a3 == 0;
    goto LABEL_27;
  }
  *(_QWORD *)&v8 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v9 = a3 == 7;
      goto LABEL_6;
    }
    v13 = *(unsigned __int8 *)(a3 + 5);
    if (v13 == 3)
    {
      v16 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v13 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v9 = 1;
          goto LABEL_6;
        }
        v12 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_27;
      }
      v14 = *(_QWORD *)(a3 + 8);
      if ((v14 & 1) != 0)
        v15 = (int *)(a3 + 16);
      else
        v15 = (int *)(v14 + 4);
      v16 = *v15;
    }
    v12 = v16 == 0;
LABEL_27:
    v9 = !v12;
    goto LABEL_6;
  }
  v7.n128_u64[0] = a3 - 0x2000000000000;
  v9 = v8 > 0.0 || v8 < 0.0;
LABEL_6:
  v10 = *(WTF::StringImpl ***)(v6 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v10, (const WebCore::QualifiedName *)&WebCore::HTMLNames::nomoduleAttr, v9, v7);
  return 1;
}

uint64_t WebCore::jsHTMLScriptElement_integrity(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::integrityAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::integrityAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::integrityAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLScriptElement_integrity(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v21 = v9;
    v10 = *((_QWORD *)v6 + 13);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) == 0)
      {
        v12 = (uint64_t *)(v10 + 32);
        v13 = v11 >> 5;
        if (!v13)
          goto LABEL_15;
LABEL_8:
        v14 = 0;
        while (1)
        {
          v15 = *v12;
          if (*v12 == WebCore::HTMLNames::integrityAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::integrityAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::integrityAttr + 32))
          {
            goto LABEL_16;
          }
          ++v14;
          v12 += 2;
          if (v13 == v14)
            goto LABEL_15;
        }
      }
      v12 = *(uint64_t **)(v10 + 40);
      v13 = *(_DWORD *)(v10 + 52);
      if (v13)
        goto LABEL_8;
    }
LABEL_15:
    v14 = 0xFFFFFFFFLL;
LABEL_16:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::integrityAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v8;
}

uint64_t WebCore::jsHTMLScriptElement_referrerPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLAnchorElement::referrerPolicyForBindings(*(WebCore::HTMLAnchorElement **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLScriptElement_referrerPolicy(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v21 = v9;
    v10 = *((_QWORD *)v6 + 13);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) == 0)
      {
        v12 = (uint64_t *)(v10 + 32);
        v13 = v11 >> 5;
        if (!v13)
          goto LABEL_15;
LABEL_8:
        v14 = 0;
        while (1)
        {
          v15 = *v12;
          if (*v12 == WebCore::HTMLNames::referrerpolicyAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::referrerpolicyAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::referrerpolicyAttr + 32))
          {
            goto LABEL_16;
          }
          ++v14;
          v12 += 2;
          if (v13 == v14)
            goto LABEL_15;
        }
      }
      v12 = *(uint64_t **)(v10 + 40);
      v13 = *(_DWORD *)(v10 + 52);
      if (v13)
        goto LABEL_8;
    }
LABEL_15:
    v14 = 0xFFFFFFFFLL;
LABEL_16:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::referrerpolicyAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v8;
}

uint64_t WebCore::jsHTMLScriptElement_fetchPriority(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLImageElement::fetchPriorityForBindings(*(_QWORD *)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLScriptElement_fetchPriority(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLScriptElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v21 = v9;
    v10 = *((_QWORD *)v6 + 13);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) == 0)
      {
        v12 = (uint64_t *)(v10 + 32);
        v13 = v11 >> 5;
        if (!v13)
          goto LABEL_15;
LABEL_8:
        v14 = 0;
        while (1)
        {
          v15 = *v12;
          if (*v12 == WebCore::HTMLNames::fetchpriorityAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::fetchpriorityAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::fetchpriorityAttr + 32))
          {
            goto LABEL_16;
          }
          ++v14;
          v12 += 2;
          if (v13 == v14)
            goto LABEL_15;
        }
      }
      v12 = *(uint64_t **)(v10 + 40);
      v13 = *(_DWORD *)(v10 + 52);
      if (v13)
        goto LABEL_8;
    }
LABEL_15:
    v14 = 0xFFFFFFFFLL;
LABEL_16:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::fetchpriorityAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v8;
}

uint64_t WebCore::JSHTMLSelectElement::prototype(WebCore::JSHTMLSelectElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t v12;
  JSC::JSCell *v13;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v15;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;
  int v20;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_4;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSHTMLSelectElement::s_info + ~((_QWORD)&WebCore::JSHTMLSelectElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLSelectElement::s_info + ~((_QWORD)&WebCore::JSHTMLSelectElement::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSHTMLSelectElement::s_info)
  {
    v20 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v20) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v20;
      if (v11 == &WebCore::JSHTMLSelectElement::s_info)
        goto LABEL_3;
    }
    goto LABEL_4;
  }
LABEL_3:
  v12 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v12)
  {
LABEL_4:
    v13 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
    Structure = WebCore::JSHTMLSelectElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v13);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSHTMLSelectElementPrototype::create(this, Structure, v15, v16);
    v18 = WebCore::JSHTMLSelectElement::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    v12 = WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSHTMLSelectElement::s_info);
  }
  return *(_QWORD *)(v12 + 48);
}

uint64_t WebCore::JSHTMLSelectElement::put(uint64_t a1, JSC::JSGlobalObject *a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  int v6;
  _BYTE *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  void *v14;
  uint64_t v15;
  WTF *v16;
  BOOL v17;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned int v21;
  BOOL v22;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  _QWORD v31[3];
  _BYTE v32[8];
  int v33;
  uint64_t v34;
  WTF *v35;
  uint64_t v36;
  _BYTE v37[40];
  uint64_t v38;
  JSC::JSGlobalObject *v39;
  JSC::VM *v40;
  uint64_t v41;

  v41 = a1;
  if (*(_QWORD *)(a5 + 8) != a1)
    return JSC::JSObject::put();
  v40 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v35 = (WTF *)v37;
  v36 = 4;
  v37[32] = 0;
  v38 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v39 = a2;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v35;
  if (!a3)
    goto LABEL_10;
  v6 = *(_DWORD *)(a3 + 16);
  if ((v6 & 0x20) != 0)
    goto LABEL_10;
  v7 = *(_BYTE **)(a3 + 8);
  v8 = *(unsigned int *)(a3 + 4);
  if ((v6 & 4) != 0)
  {
    if ((_DWORD)v8)
    {
      v26 = *v7 - 48;
      if (v26 <= 9 && (v8 < 2 || *v7 != 48))
      {
        v28 = v8 - 1;
        v29 = v7 + 1;
        while (v28)
        {
          if (v26 > 0x19999999)
            goto LABEL_44;
          v30 = *v29 - 48;
          if (v30 > 9)
            goto LABEL_44;
          v27 = 0;
          LODWORD(v8) = 0;
          v10 = 0;
          v22 = __CFADD__(v30, 10 * v26);
          v26 = v30 + 10 * v26;
          --v28;
          ++v29;
          if (v22)
            goto LABEL_46;
        }
        if (v26 == -1)
          v27 = 0;
        else
          v27 = v26 & 0xFFFFFF00;
        if (v26 == -1)
          LODWORD(v8) = 0;
        else
          LODWORD(v8) = v26;
        if (v26 == -1)
          v10 = 0;
        else
          v10 = 0x100000000;
        goto LABEL_46;
      }
LABEL_44:
      v27 = 0;
      LODWORD(v8) = 0;
    }
    else
    {
      v27 = 0;
    }
    v10 = 0;
LABEL_46:
    v13 = v8 | v27;
    goto LABEL_9;
  }
  if (!(_DWORD)v8 || (v9 = *(unsigned __int16 *)v7 - 48, v9 > 9) || v8 >= 2 && *(_WORD *)v7 == 48)
  {
LABEL_7:
    v10 = 0;
    v11 = 0;
    v12 = 0;
  }
  else
  {
    v19 = (unsigned __int16 *)(v7 + 2);
    v20 = v8 - 1;
    while (v20)
    {
      if (v9 <= 0x19999999)
      {
        v21 = *v19 - 48;
        if (v21 <= 9)
        {
          v22 = __CFADD__(v21, 10 * v9);
          v9 = v21 + 10 * v9;
          ++v19;
          --v20;
          if (!v22)
            continue;
        }
      }
      goto LABEL_7;
    }
    v17 = v9 == -1;
    v12 = v9 & 0xFFFFFF00;
    v11 = v9;
    v10 = 0x100000000;
    if (v17)
    {
      v10 = 0;
      v11 = 0;
      v12 = 0;
    }
  }
  v13 = v12 | v11;
LABEL_9:
  v34 = v10 & 0x100000000 | v13;
  if ((v10 & 0x100000000) != 0)
  {
    WebCore::convert<WebCore::IDLNullable<WebCore::IDLInterface<WebCore::HTMLOptionElement>>>((unint64_t)v32, (uint64_t)a2, a4);
    if (!v33)
    {
      v31[0] = &v41;
      v31[1] = &v34;
      v31[2] = v32;
      WebCore::invokeFunctorPropagatingExceptionIfNecessary<WebCore::JSHTMLSelectElement::put(JSC::JSCell *,JSC::JSGlobalObject *,JSC::PropertyName,JSC::JSValue,JSC::PutPropertySlot &)::$_0>(a2, &v40, v31);
    }
    v15 = 1;
    goto LABEL_11;
  }
LABEL_10:
  v15 = JSC::JSObject::put();
LABEL_11:
  if (HIDWORD(v36))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v35, v39);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v38;
    if (HIDWORD(v36))
    {
      v23 = v35;
      v24 = 8 * HIDWORD(v36);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v14);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v38;
  }
  v16 = v35;
  v17 = v37 == (_BYTE *)v35 || v35 == 0;
  if (!v17)
  {
    v35 = 0;
    LODWORD(v36) = 0;
    WTF::fastFree(v16, v14);
  }
  return v15;
}

uint64_t WebCore::JSHTMLSelectElement::putByIndex(uint64_t a1, JSC::JSGlobalObject *a2, void *a3, unint64_t a4)
{
  WTF::StringImpl *v6;
  WebCore::HTMLOptionElement *v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF *v12;
  WTF::StringImpl *v15;
  WTF *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  JSValue v20;
  WTF::StringImpl *v21;
  WTF *v22;
  uint64_t v23;
  _BYTE v24[40];
  uint64_t v25;
  JSC::JSGlobalObject *v26;
  char v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  char v31;

  v6 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
  v22 = (WTF *)v24;
  v23 = 4;
  v24[32] = 0;
  v25 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v26 = a2;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v22;
  if ((_DWORD)a3 != -1)
  {
    if ((a4 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v8 = 0;
    }
    else
    {
      v29 = v6;
      v9 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(a4);
      if (!v9 || (v8 = *(WebCore::HTMLOptionElement **)(v9 + 24)) == 0)
      {
        JSC::throwTypeError();
LABEL_7:
        v11 = 1;
        goto LABEL_8;
      }
    }
    WebCore::HTMLSelectElement::setItem(*(uint64_t ***)(a1 + 24), v8, a3, &v29);
    if (v31)
    {
      v10 = (WTF::StringImpl *)v29;
      v27 = (char)v29;
      v19 = v30;
      v30 = 0;
      v28 = v19;
      if (!*((_QWORD *)v6 + 2))
      {
        v20.super.isa = (Class)WebCore::createDOMException(a2, (JSC::JSGlobalObject *)v29, (JSC::JSGlobalObject *)&v28);
        JSC::VM::throwException(v6, a2, v20);
        v19 = v28;
      }
      v28 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v10);
        else
          *(_DWORD *)v19 -= 2;
      }
      if (v31)
      {
        v21 = v30;
        v30 = 0;
        if (v21)
        {
          if (*(_DWORD *)v21 == 2)
            WTF::StringImpl::destroy(v21, v10);
          else
            *(_DWORD *)v21 -= 2;
        }
      }
    }
    goto LABEL_7;
  }
  JSC::Identifier::from();
  v11 = JSC::ordinarySetSlow();
  v15 = v29;
  v29 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v10);
    else
      *(_DWORD *)v15 -= 2;
  }
LABEL_8:
  if (HIDWORD(v23))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v22, v26);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v25;
    if (HIDWORD(v23))
    {
      v16 = v22;
      v17 = 8 * HIDWORD(v23);
      do
      {
        v18 = *(_QWORD *)v16;
        *(_QWORD *)v16 = 0;
        if (v18)
        {
          if (*(_DWORD *)(v18 + 24) == 2)
          {
            if ((*(_WORD *)(v18 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v18, v10);
          }
          else
          {
            *(_DWORD *)(v18 + 24) -= 2;
          }
        }
        v16 = (WTF *)((char *)v16 + 8);
        v17 -= 8;
      }
      while (v17);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v25;
  }
  v12 = v22;
  if (v24 != (_BYTE *)v22 && v22 != 0)
  {
    v22 = 0;
    LODWORD(v23) = 0;
    WTF::fastFree(v12, v10);
  }
  return v11;
}

uint64_t WebCore::JSHTMLSelectElement::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  WebCore::HTMLSelectElement *v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  _DWORD *v25;
  unsigned __int16 *v27;
  uint64_t v28;
  unsigned int v29;
  BOOL v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned int v36;
  _DWORD *v37;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(WebCore::HTMLSelectElement **)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (!*(_BYTE *)(v15 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v13[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (!a3)
    return JSC::JSObject::deleteProperty();
  v16 = *(_DWORD *)(a3 + 16);
  if ((v16 & 0x20) != 0)
    return JSC::JSObject::deleteProperty();
  v17 = *(_WORD **)(a3 + 8);
  v18 = *(unsigned int *)(a3 + 4);
  if ((v16 & 4) == 0)
  {
    if ((_DWORD)v18 && (v19 = (unsigned __int16)*v17 - 48, v19 <= 9) && (v18 < 2 || *v17 != 48))
    {
      v27 = v17 + 1;
      v28 = v18 - 1;
      while (v28)
      {
        if (v19 <= 0x19999999)
        {
          v29 = *v27 - 48;
          if (v29 <= 9)
          {
            v30 = __CFADD__(v29, 10 * v19);
            v19 = v29 + 10 * v19;
            ++v27;
            --v28;
            if (!v30)
              continue;
          }
        }
        goto LABEL_29;
      }
      v7 = v19 == -1;
      v22 = v19 & 0xFFFFFF00;
      v21 = v19;
      v20 = 0x100000000;
      if (v7)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
      }
    }
    else
    {
LABEL_29:
      v20 = 0;
      v21 = 0;
      v22 = 0;
    }
    v23 = v22 | v21;
    if ((v20 & 0x100000000) != 0)
      goto LABEL_31;
    return JSC::JSObject::deleteProperty();
  }
  if (!(_DWORD)v18)
  {
    v32 = 0;
    goto LABEL_51;
  }
  v31 = *(unsigned __int8 *)v17 - 48;
  if (v31 > 9 || v18 >= 2 && *(_BYTE *)v17 == 48)
  {
LABEL_50:
    v32 = 0;
    LODWORD(v18) = 0;
LABEL_51:
    v33 = 0;
    goto LABEL_52;
  }
  v34 = v18 - 1;
  v35 = (unsigned __int8 *)v17 + 1;
  while (v34)
  {
    if (v31 > 0x19999999)
      goto LABEL_50;
    v36 = *v35 - 48;
    if (v36 > 9)
      goto LABEL_50;
    v32 = 0;
    LODWORD(v18) = 0;
    v33 = 0;
    v30 = __CFADD__(v36, 10 * v31);
    v31 = v36 + 10 * v31;
    --v34;
    ++v35;
    if (v30)
      goto LABEL_52;
  }
  if (v31 == -1)
    v32 = 0;
  else
    v32 = v31 & 0xFFFFFF00;
  if (v31 == -1)
    LODWORD(v18) = 0;
  else
    LODWORD(v18) = v31;
  if (v31 == -1)
    v33 = 0;
  else
    v33 = 0x100000000;
LABEL_52:
  v23 = v18 | v32;
  if ((v33 & 0x100000000) == 0)
    return JSC::JSObject::deleteProperty();
LABEL_31:
  WebCore::HTMLSelectElement::options(v9, (uint64_t *)&v37);
  v24 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v37 + 16))(v37);
  v25 = v37;
  v37 = 0;
  if (v25)
  {
    if (v25[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v25 + 8))(v25);
    else
      --v25[4];
  }
  return v24 <= v23;
}

uint64_t WebCore::JSHTMLSelectElement::deletePropertyByIndex(WebCore::JSHTMLSelectElement *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLSelectElement *v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  _DWORD *v19;
  _DWORD *v21;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = (WebCore::HTMLSelectElement *)*((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    goto LABEL_22;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    goto LABEL_22;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    goto LABEL_22;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    goto LABEL_22;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v15[65])
    return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
LABEL_22:
  WebCore::HTMLSelectElement::options(v11, (uint64_t *)&v21);
  v18 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v21 + 16))(v21);
  v19 = v21;
  v21 = 0;
  if (v19)
  {
    if (v19[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v19 + 8))(v19);
    else
      --v19[4];
  }
  return v18 <= a3;
}

uint64_t WebCore::JSHTMLSelectElement::getOwnPropertySlot(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return WebCore::JSHTMLSelectElement::legacyPlatformObjectGetOwnProperty(a1, a2, a3, a4);
}

uint64_t WebCore::JSHTMLSelectElement::getOwnPropertySlotByIndex(WebCore::HTMLSelectElement **this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  unsigned int v6;
  JSC::VM *v8;
  uint64_t v9;
  WTF *v10;
  WebCore::HTMLOptionsCollection *v11;
  unint64_t v12;
  uint64_t result;
  WebCore::HTMLOptionsCollection *v14;

  v6 = a3;
  if ((_DWORD)a3 == -1)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  WebCore::HTMLSelectElement::options(this[3], (uint64_t *)&v14);
  v9 = WebCore::CollectionIndexCache<WebCore::HTMLOptionsCollection,WebCore::ElementDescendantIterator<WebCore::Element>>::nodeAt((uint64_t)v14 + 40, v14, v6);
  v10 = (WTF *)v9;
  if (v9
    && ((*(_WORD *)(v9 + 28) & 0x10) == 0
     || *(_QWORD *)(*(_QWORD *)(v9 + 96) + 24) != *(_QWORD *)(WebCore::HTMLNames::optionTag + 24)))
  {
    __break(0xC471u);
    JUMPOUT(0x194C5CAE4);
  }
  v11 = v14;
  v14 = 0;
  if (v11)
  {
    if (*((_DWORD *)v11 + 4) == 1)
    {
      (*(void (**)(WebCore::HTMLOptionsCollection *))(*(_QWORD *)v11 + 8))(v11);
      if (v10)
        goto LABEL_9;
      return JSC::JSObject::getOwnPropertySlotByIndex();
    }
    --*((_DWORD *)v11 + 4);
  }
  if (!v10)
    return JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_9:
  v12 = WebCore::wrap<WebCore::HTMLOptionElement>(*(uint64_t **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v10);
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
    return 0;
  *(_QWORD *)a4 = v12;
  *(_DWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 32) = this;
  result = 1;
  *(_BYTE *)(a4 + 49) = 1;
  return result;
}

uint64_t WebCore::JSHTMLSelectElement::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  uint64_t *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl **v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  unsigned int v36;
  int v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48[2];
  char v49;
  WTF::StringImpl *v50;

  v4 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v4 + 300))
    WebCore::HTMLSelectElement::recalcListItems(*(_QWORD *)(a1 + 24), (void *)1, 1u);
  v5 = *(unsigned int *)(v4 + 196);
  if ((_DWORD)v5)
  {
    v6 = 0;
    v7 = *(uint64_t **)(v4 + 184);
    do
    {
      v8 = *v7++;
      if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) + 96) + 24) == *(_QWORD *)(WebCore::HTMLNames::optionTag + 24))
        ++v6;
      --v5;
    }
    while (v5);
    if (v6)
    {
      v9 = 0;
      v10 = a3 + 1;
      while (1)
      {
        JSC::Identifier::from();
        v12 = v47;
        v50 = v47;
        v13 = *((_DWORD *)v47 + 4);
        if ((v13 & 0x20) != 0)
        {
          if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v47 + 36) & 4) != 0)
            goto LABEL_67;
        }
        else if ((a3[3] & 2) == 0)
        {
          goto LABEL_67;
        }
        v14 = *a3;
        v15 = *(unsigned int *)(*a3 + 20);
        if (v15 <= 0x13)
        {
          if ((_DWORD)v15)
          {
            v16 = *(WTF::StringImpl ***)(v14 + 8);
            while (*v16 != v47)
            {
              ++v16;
              if (!--v15)
                goto LABEL_26;
            }
            goto LABEL_67;
          }
LABEL_26:
          if ((v13 & 0x20) != 0)
          {
            v37 = *(_DWORD *)v12 + 2;
          }
          else
          {
            if ((v13 & 0x10) != 0)
            {
              *(_DWORD *)v12 += 2;
            }
            else
            {
              WTF::AtomStringImpl::addSlowCase();
              v12 = v48[0];
            }
            v37 = *(_DWORD *)v12;
            *(_DWORD *)v12 += 2;
            if (!v37)
            {
              WTF::StringImpl::destroy(v12, v11);
LABEL_61:
              v38 = (uint64_t *)(v14 + 8);
              v48[0] = v12;
              v39 = *(unsigned int *)(v14 + 20);
              if ((_DWORD)v39 == *(_DWORD *)(v14 + 16))
              {
                v40 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v38, v39 + 1, (unint64_t)v48);
                v39 = *(unsigned int *)(v14 + 20);
                v41 = *(_QWORD *)(v14 + 8);
                v42 = *v40;
                *v40 = 0;
                *(_QWORD *)(v41 + 8 * v39) = v42;
              }
              else
              {
                v43 = *v38;
                v48[0] = 0;
                *(_QWORD *)(v43 + 8 * v39) = v12;
              }
              *(_DWORD *)(v14 + 20) = v39 + 1;
              v44 = v48[0];
              v48[0] = 0;
              if (v44)
              {
                if (*(_DWORD *)v44 == 2)
                  WTF::StringImpl::destroy(v44, v11);
                else
                  *(_DWORD *)v44 -= 2;
              }
              goto LABEL_67;
            }
          }
          *(_DWORD *)v12 = v37;
          goto LABEL_61;
        }
        if (!*v10 || !*(_DWORD *)(*v10 - 12))
          break;
LABEL_24:
        WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v50, (uint64_t)v48);
        if (v49)
        {
          v12 = v50;
          v14 = *a3;
          v13 = *((_DWORD *)v50 + 4);
          goto LABEL_26;
        }
LABEL_67:
        v45 = v47;
        v47 = 0;
        if (v45)
        {
          if (*(_DWORD *)v45 == 2)
            WTF::StringImpl::destroy(v45, v11);
          else
            *(_DWORD *)v45 -= 2;
        }
        if (++v9 == v6)
          return JSC::JSObject::getOwnPropertyNames();
      }
      v17 = *(uint64_t **)(v14 + 8);
      v18 = &v17[v15];
      while (1)
      {
        v19 = *v17;
        v20 = *v10;
        if (*v10
          || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v20 = *v10) != 0))
        {
          v21 = *(_DWORD *)(v20 - 8);
        }
        else
        {
          v21 = 0;
        }
        v22 = (~(v19 << 32) + v19) ^ ((unint64_t)(~(v19 << 32) + v19) >> 22);
        v23 = 9 * ((v22 + ~(v22 << 13)) ^ ((v22 + ~(v22 << 13)) >> 8));
        v24 = (v23 ^ (v23 >> 15)) + ~((v23 ^ (v23 >> 15)) << 27);
        v25 = v21 & ((v24 >> 31) ^ v24);
        v26 = (uint64_t *)(v20 + 8 * v25);
        v27 = *v26;
        if (*v26)
        {
          v28 = 0;
          v29 = 1;
          while (v27 != v19)
          {
            if (v27 == -1)
              v28 = v26;
            v25 = (v25 + v29) & v21;
            v26 = (uint64_t *)(v20 + 8 * v25);
            v27 = *v26;
            ++v29;
            if (!*v26)
            {
              if (v28)
              {
                *v28 = 0;
                --*(_DWORD *)(*v10 - 16);
                v26 = v28;
              }
              goto LABEL_41;
            }
          }
          goto LABEL_54;
        }
LABEL_41:
        *v26 = v19;
        v30 = *v10;
        v31 = *v10 ? *(_DWORD *)(v30 - 12) + 1 : 1;
        *(_DWORD *)(v30 - 12) = v31;
        v32 = *v10;
        v33 = *v10 ? *(_DWORD *)(v32 - 12) : 0;
        v34 = (*(_DWORD *)(v32 - 16) + v33);
        v35 = *(unsigned int *)(v32 - 4);
        if (v35 > 0x400)
          break;
        if (3 * v35 <= 4 * v34)
        {
          if ((_DWORD)v35)
            goto LABEL_50;
          v36 = 8;
          goto LABEL_53;
        }
LABEL_54:
        if (++v17 == v18)
          goto LABEL_24;
      }
      if (v35 > 2 * v34)
        goto LABEL_54;
LABEL_50:
      v36 = (_DWORD)v35 << (6 * *(_DWORD *)(v32 - 12) >= (2 * v35));
LABEL_53:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v36, v26);
      goto LABEL_54;
    }
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSHTMLSelectElement::defineOwnProperty(uint64_t a1, JSC::JSGlobalObject *a2, uint64_t a3, JSC::PropertyDescriptor *this, int a5)
{
  JSC::VM *v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  WTF::StringImpl *v17;
  unint64_t v18;
  WebCore::HTMLOptionElement *v19;
  uint64_t v20;
  unint64_t v21;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned int v24;
  BOOL v25;
  BOOL v26;
  unsigned int v27;
  WTF::StringImpl *v28;
  JSValue v29;
  WTF::StringImpl *v30;
  unsigned int v31;
  uint64_t v32;
  __int128 v33;
  WTF *v34;
  WTF *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  WTF::StringImpl *v43[2];
  __int128 v44;
  WTF *v45;
  uint64_t v46;
  _BYTE v47[40];
  uint64_t v48;
  JSC::JSGlobalObject *v49;
  JSC::VM *v50;
  char v51;
  WTF::StringImpl *v52;

  v9 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v50 = v9;
  v45 = (WTF *)v47;
  v46 = 4;
  v47[32] = 0;
  v48 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v49 = a2;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v45;
  if (!a3)
    goto LABEL_51;
  v10 = *(_DWORD *)(a3 + 16);
  if ((v10 & 0x20) != 0)
    goto LABEL_51;
  v11 = *(_BYTE **)(a3 + 8);
  v12 = *(unsigned int *)(a3 + 4);
  if ((v10 & 4) != 0)
  {
    if ((_DWORD)v12)
    {
      v31 = *v11 - 48;
      if (v31 <= 9 && (v12 < 2 || *v11 != 48))
      {
        v40 = v12 - 1;
        v41 = v11 + 1;
        while (v40)
        {
          if (v31 > 0x19999999)
            goto LABEL_48;
          v42 = *v41 - 48;
          if (v42 > 9)
            goto LABEL_48;
          v16 = 0;
          LOBYTE(v12) = 0;
          v32 = 0;
          v25 = __CFADD__(v42, 10 * v31);
          v31 = v42 + 10 * v31;
          --v40;
          ++v41;
          if (v25)
            goto LABEL_50;
        }
        if (v31 == -1)
          v16 = 0;
        else
          v16 = v31 & 0xFFFFFF00;
        if (v31 == -1)
          LOBYTE(v12) = 0;
        else
          LOBYTE(v12) = v31;
        if (v31 == -1)
          v32 = 0;
        else
          v32 = 0x100000000;
LABEL_50:
        v15 = v12;
        if ((v32 & 0x100000000) != 0)
          goto LABEL_9;
LABEL_51:
        v33 = *((_OWORD *)this + 1);
        *(_OWORD *)v43 = *(_OWORD *)this;
        v44 = v33;
        v20 = JSC::JSObject::defineOwnProperty();
        goto LABEL_52;
      }
LABEL_48:
      v16 = 0;
      LOBYTE(v12) = 0;
    }
    else
    {
      v16 = 0;
    }
    v32 = 0;
    goto LABEL_50;
  }
  if (!(_DWORD)v12 || (v13 = *(unsigned __int16 *)v11 - 48, v13 > 9))
  {
LABEL_6:
    v14 = 0;
    LOBYTE(v13) = 0;
LABEL_7:
    v15 = 0;
    goto LABEL_8;
  }
  if (v12 >= 2 && *(_WORD *)v11 == 48)
  {
    v14 = 0;
    goto LABEL_7;
  }
  v22 = (unsigned __int16 *)(v11 + 2);
  v23 = v12 - 1;
  while (v23)
  {
    if (v13 <= 0x19999999)
    {
      v24 = *v22 - 48;
      if (v24 <= 9)
      {
        v25 = __CFADD__(v24, 10 * v13);
        v13 = v24 + 10 * v13;
        ++v22;
        --v23;
        if (!v25)
          continue;
      }
    }
    goto LABEL_6;
  }
  v26 = v13 == -1;
  v27 = v13 & 0xFFFFFF00;
  v14 = 0x100000000;
  if (v13 == -1)
  {
    v14 = 0;
    LOBYTE(v13) = 0;
  }
  if (v26)
    v15 = 0;
  else
    v15 = v27;
LABEL_8:
  v16 = v13;
  if ((v14 & 0x100000000) == 0)
    goto LABEL_51;
LABEL_9:
  if ((JSC::PropertyDescriptor::isDataDescriptor(this) & 1) != 0)
  {
    v18 = *(_QWORD *)this;
    if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v19 = 0;
    }
    else
    {
      v43[0] = *((WTF::StringImpl **)a2 + 7);
      v21 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(v18);
      if (!v21 || (v19 = *(WebCore::HTMLOptionElement **)(v21 + 24)) == 0)
      {
        JSC::throwTypeError();
LABEL_21:
        v20 = 1;
        goto LABEL_52;
      }
    }
    WebCore::HTMLSelectElement::setItem(*(uint64_t ***)(a1 + 24), v19, (void *)(v15 | v16), v43);
    if ((_BYTE)v44)
    {
      v17 = (WTF::StringImpl *)LOBYTE(v43[0]);
      v51 = (char)v43[0];
      v28 = v43[1];
      v43[1] = 0;
      v52 = v28;
      if (!*((_QWORD *)v9 + 2))
      {
        v29.super.isa = (Class)WebCore::createDOMException(a2, (JSC::JSGlobalObject *)LOBYTE(v43[0]), (JSC::JSGlobalObject *)&v52);
        JSC::VM::throwException(v9, a2, v29);
        v28 = v52;
      }
      v52 = 0;
      if (v28)
      {
        if (*(_DWORD *)v28 == 2)
          WTF::StringImpl::destroy(v28, v17);
        else
          *(_DWORD *)v28 -= 2;
      }
      if ((_BYTE)v44)
      {
        v30 = v43[1];
        v43[1] = 0;
        if (v30)
        {
          if (*(_DWORD *)v30 == 2)
            WTF::StringImpl::destroy(v30, v17);
          else
            *(_DWORD *)v30 -= 2;
        }
      }
    }
    goto LABEL_21;
  }
  if (a5)
    JSC::throwTypeError();
  v20 = 0;
LABEL_52:
  if (HIDWORD(v46))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v45, v49);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v48;
    if (HIDWORD(v46))
    {
      v37 = v45;
      v38 = 8 * HIDWORD(v46);
      do
      {
        v39 = *(_QWORD *)v37;
        *(_QWORD *)v37 = 0;
        if (v39)
        {
          if (*(_DWORD *)(v39 + 24) == 2)
          {
            if ((*(_WORD *)(v39 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v39, v17);
          }
          else
          {
            *(_DWORD *)(v39 + 24) -= 2;
          }
        }
        v37 = (WTF *)((char *)v37 + 8);
        v38 -= 8;
      }
      while (v38);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v48;
  }
  v34 = v45;
  if (v47 != (_BYTE *)v45 && v45 != 0)
  {
    v45 = 0;
    LODWORD(v46) = 0;
    WTF::fastFree(v34, v17);
  }
  return v20;
}

uint64_t WebCore::JSHTMLSelectElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLSelectElement::JSHTMLSelectElement(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t WebCore::JSHTMLSelectElement::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_DWORD *)(v2 + 24) += 2;
  *a2 = v2;
  return this;
}

unint64_t WebCore::JSHTMLSelectElement::createPrototype(WebCore::JSHTMLSelectElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  Structure = WebCore::JSHTMLSelectElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSHTMLSelectElementPrototype::create(this, Structure, v7, v8);
}

uint64_t WebCore::JSHTMLSelectElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLSelectElementPrototype::create(WebCore::JSHTMLSelectElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  int v16;
  WTF::StringImpl *v17;
  unint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t Direct;
  WTF::StringImpl *v22;
  unint64_t v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  JSC::Structure *v27;
  int v28;
  WTF::StringImpl *v30;
  int v31;
  WTF::StringImpl *v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  uint64_t v36;
  int *v37;
  JSC::Structure **v38;
  int *v39;
  int v40;
  int v41;
  JSC::Structure *v42;
  int v43;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v33);
    *((_QWORD *)this + 4865) = SlowCase + (int)v33;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<26u>(this, (uint64_t)&WebCore::JSHTMLSelectElement::s_info, (uint64_t)&WebCore::JSHTMLSelectElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C5D9D0);
  }
  v10 = (int *)((char *)this + 93124);
  v11 = v9 - 192;
  if (!v9)
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 680) + 680);
  if ((v12 & 0x20000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v30 = v34;
    v31 = *v10;
    *v10 = 1;
    LODWORD(v34) = -1;
    WORD2(v34) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v31;
    if (v30)
    {
      if (*(_DWORD *)v30 == 2)
        WTF::StringImpl::destroy(v30, v32);
      else
        *(_DWORD *)v30 -= 2;
    }
  }
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v13 && *(_BYTE *)(v13 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194C5D9F0);
  }
  v14 = v13 - 192;
  if (!v13)
    v14 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v14 + 680) + 696) & 4) != 0)
  {
    if ((v12 & 0x20000000) != 0)
      goto LABEL_20;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v15 = v34;
    v16 = *v10;
    *v10 = 1;
    LODWORD(v34) = -1;
    WORD2(v34) = 1;
    JSC::JSObject::deleteProperty();
    *v10 = v16;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v17);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
LABEL_20:
  v18 = *(_QWORD *)(v6[381] + 2712);
  v19 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) + 672);
  v20 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v19, this, (unint64_t)v20);
  v34 = 0;
  v35 = SlowCase;
  v36 = 0x1000000FFFFFFFFLL;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v18, Direct, 4, (uint64_t)&v34);
  if (*v20 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v22);
  else
    *v20 -= 2;
  v23 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v25 = JSC::JSString::create((uint64_t)this, &v34);
  v26 = v34;
  v34 = 0;
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
      WTF::StringImpl::destroy(v26, v24);
    else
      *(_DWORD *)v26 -= 2;
  }
  v27 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v43 = *(_DWORD *)SlowCase;
  v42 = v27;
  v28 = JSC::Structure::outOfLineCapacity(v27);
  v40 = 0;
  v41 = v28;
  v34 = (WTF::StringImpl *)&v41;
  v35 = SlowCase;
  v36 = (uint64_t)this;
  v37 = &v43;
  v38 = &v42;
  v39 = &v40;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v27, this, v23, 6, (uint64_t)&v34);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v40, v25);
  *((_DWORD *)v27 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSelectElement>,(WebCore::DOMConstructorID)569>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  unint64_t v17;
  WebCore::JSDOMGlobalObject *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4552);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v8 = v7;
  LODWORD(v22) = 67099;
  if ((v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v20);
    v6[2] = SlowCase + (int)v20;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v8, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSelectElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v6[165];
  v2 = v11[2846];
  if (v2 >= v11[2847])
  {
    v2 = v11[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_12;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v21);
    v11[2848] = v2 + (int)v21;
  }
  v11[2846] = v2 + 48;
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v6[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v22);
  v15 = v22;
  v22 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v6[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v22);
  v17 = *(_QWORD *)(v6[227] + 2160);
  v19 = WebCore::JSHTMLSelectElement::prototype((WebCore::JSHTMLSelectElement *)a1, (JSC::VM *)a2, v18);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v19, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4552) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

uint64_t WebCore::JSHTMLSelectElement::legacyPlatformObjectGetOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  JSC::VM *v6;
  int v9;
  _WORD *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  _BYTE *v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t result;
  unsigned __int16 *v24;
  uint64_t v25;
  unsigned int v26;
  BOOL v27;
  unsigned __int16 *v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  BOOL v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  WTF *v41;
  unint64_t v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  unsigned __int8 *v46;
  unsigned int v47;
  uint64_t v48;
  unsigned __int8 *v49;
  unsigned int v50;
  unint64_t v51;

  v6 = *(JSC::VM **)(a2 + 56);
  if (!a3)
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
      return JSC::JSObject::getOwnStaticPropertySlot();
    return 0;
  }
  v9 = *(_DWORD *)(a3 + 16);
  if ((v9 & 0x20) != 0)
    goto LABEL_10;
  v10 = *(_WORD **)(a3 + 8);
  v11 = *(unsigned int *)(a3 + 4);
  if ((v9 & 4) == 0)
  {
    if ((_DWORD)v11 && (v12 = (unsigned __int16)*v10 - 48, v12 <= 9))
    {
      if (v11 < 2 || *v10 != 48)
      {
        v28 = v10 + 1;
        v29 = v11 - 1;
        while (v29)
        {
          if (v12 <= 0x19999999)
          {
            v30 = *v28 - 48;
            if (v30 <= 9)
            {
              v27 = __CFADD__(v30, 10 * v12);
              v12 = v30 + 10 * v12;
              ++v28;
              --v29;
              if (!v27)
                continue;
            }
          }
          goto LABEL_6;
        }
        v35 = v12 == -1;
        v14 = v12 & 0xFFFFFF00;
        v13 = 0x100000000;
        if (v12 == -1)
        {
          v13 = 0;
          LOBYTE(v12) = 0;
        }
        if (v35)
          v14 = 0;
        goto LABEL_8;
      }
      v13 = 0;
    }
    else
    {
LABEL_6:
      v13 = 0;
      LOBYTE(v12) = 0;
    }
    v14 = 0;
LABEL_8:
    v12 = v12;
    goto LABEL_9;
  }
  if ((_DWORD)v11)
  {
    v43 = *(unsigned __int8 *)v10 - 48;
    if (v43 <= 9 && (v11 < 2 || *(_BYTE *)v10 != 48))
    {
      v45 = v11 - 1;
      v46 = (unsigned __int8 *)v10 + 1;
      while (v45)
      {
        if (v43 > 0x19999999)
          goto LABEL_76;
        v47 = *v46 - 48;
        if (v47 > 9)
          goto LABEL_76;
        v12 = 0;
        LOBYTE(v11) = 0;
        v13 = 0;
        v27 = __CFADD__(v47, 10 * v43);
        v43 = v47 + 10 * v43;
        --v45;
        ++v46;
        if (v27)
          goto LABEL_78;
      }
      if (v43 == -1)
        v12 = 0;
      else
        v12 = v43 & 0xFFFFFF00;
      if (v43 == -1)
        LOBYTE(v11) = 0;
      else
        LOBYTE(v11) = v43;
      if (v43 == -1)
        v13 = 0;
      else
        v13 = 0x100000000;
      goto LABEL_78;
    }
LABEL_76:
    v12 = 0;
    LOBYTE(v11) = 0;
  }
  else
  {
    v12 = 0;
  }
  v13 = 0;
LABEL_78:
  v14 = v11;
LABEL_9:
  if ((v13 & 0x100000000) != 0)
  {
    v41 = (WTF *)WebCore::HTMLSelectElement::item(*(WebCore::HTMLSelectElement **)(a1 + 24), v14 | v12);
    if (v41)
    {
      v42 = WebCore::wrap<WebCore::HTMLOptionElement>(*(uint64_t **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v41);
      if (!*((_DWORD *)v6 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) == 0)
      {
        *(_QWORD *)a4 = v42;
        *(_DWORD *)(a4 + 16) = 0;
        *(_QWORD *)(a4 + 32) = a1;
        result = 1;
        *(_BYTE *)(a4 + 49) = 1;
        return result;
      }
      return 0;
    }
    v6 = *(JSC::VM **)(a2 + 56);
  }
LABEL_10:
  if (!(a3 >> 4)
    || (v15 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v15 + 0x20)) != 0)
    || (v16 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v6)) == 0
    || (v51 = a3, v17 = JSC::PropertyTable::get(v16, (uint64_t *)&v51), (_DWORD)v17 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      return 1;
    v18 = *(_DWORD *)(a3 + 16);
    if ((v18 & 0x20) == 0)
    {
      v19 = *(_BYTE **)(a3 + 8);
      v20 = *(unsigned int *)(a3 + 4);
      if ((v18 & 4) != 0)
      {
        if (!(_DWORD)v20 || (v44 = *v19 - 48, v44 > 9) || v20 >= 2 && *v19 == 48)
        {
LABEL_83:
          v22 = 0;
        }
        else
        {
          v48 = v20 - 1;
          v49 = v19 + 1;
          while (v48)
          {
            if (v44 > 0x19999999)
              goto LABEL_83;
            v50 = *v49 - 48;
            if (v50 > 9)
              goto LABEL_83;
            v22 = 0;
            v27 = __CFADD__(v50, 10 * v44);
            v44 = v50 + 10 * v44;
            --v48;
            ++v49;
            if (v27)
              goto LABEL_20;
          }
          v22 = 0x100000000;
          if (v44 == -1)
            v22 = 0;
        }
      }
      else if (!(_DWORD)v20
             || (v21 = *(unsigned __int16 *)v19 - 48, v21 > 9)
             || v20 >= 2 && *(_WORD *)v19 == 48)
      {
LABEL_19:
        v22 = 0;
      }
      else
      {
        v24 = (unsigned __int16 *)(v19 + 2);
        v25 = v20 - 1;
        while (v25)
        {
          if (v21 <= 0x19999999)
          {
            v26 = *v24 - 48;
            if (v26 <= 9)
            {
              v27 = __CFADD__(v26, 10 * v21);
              v21 = v26 + 10 * v21;
              ++v24;
              --v25;
              if (!v27)
                continue;
            }
          }
          goto LABEL_19;
        }
        v35 = v21 == -1;
        v22 = 0x100000000;
        if (v35)
          v22 = 0;
      }
LABEL_20:
      if ((v22 & 0x100000000) != 0)
        return JSC::JSObject::getOwnPropertySlotByIndex();
    }
    return 0;
  }
  if ((int)v17 > 63)
  {
    v31 = *(_QWORD *)(a1 + 8) - 8;
    v32 = 0x3F00000000 - (v17 << 32);
  }
  else
  {
    v31 = a1 + 16;
    v32 = v17 << 32;
  }
  v33 = *(_QWORD *)(v31 + (v32 >> 29));
  if ((v33 & 0xFFFE000000000002) != 0)
  {
LABEL_45:
    *(_QWORD *)a4 = v33;
    *(_QWORD *)(a4 + 32) = a1;
    *(_DWORD *)(a4 + 16) = HIDWORD(v17);
    *(_DWORD *)(a4 + 20) = v17;
    result = 1;
    *(_WORD *)(a4 + 48) = 257;
    return result;
  }
  v34 = *(unsigned __int8 *)(v33 + 5);
  if (v34 != 6)
  {
    if (v34 == 5)
    {
      JSC::JSObject::fillGetterPropertySlot();
      return 1;
    }
    goto LABEL_45;
  }
  v36 = *(_DWORD *)(v15 + 16) & 3;
  v38 = *(_QWORD *)(v33 + 8);
  v37 = *(_QWORD *)(v33 + 16);
  if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x4C))
  {
    v40 = *(_QWORD *)(v33 + 24);
    v39 = *(_QWORD *)(v33 + 32);
    *(_QWORD *)a4 = v38;
    *(_QWORD *)(a4 + 8) = v37;
    *(_DWORD *)(a4 + 16) = HIDWORD(v17);
    *(_QWORD *)(a4 + 32) = a1;
    *(_BYTE *)(a4 + 49) = 3;
    result = 1;
    if (v36 != 2)
      *(_BYTE *)(a4 + 48) = 1;
    *(_BYTE *)(a4 + 51) = 1;
    *(_QWORD *)(a4 + 72) = v40;
    *(_QWORD *)(a4 + 80) = v39;
  }
  else
  {
    *(_QWORD *)a4 = v38;
    *(_QWORD *)(a4 + 8) = v37;
    *(_DWORD *)(a4 + 16) = HIDWORD(v17);
    *(_QWORD *)(a4 + 32) = a1;
    result = 1;
    *(_BYTE *)(a4 + 49) = 3;
    if (v36 != 2)
      *(_BYTE *)(a4 + 48) = 1;
  }
  return result;
}

void WebCore::invokeFunctorPropagatingExceptionIfNecessary<WebCore::JSHTMLSelectElement::put(JSC::JSCell *,JSC::JSGlobalObject *,JSC::PropertyName,JSC::JSValue,JSC::PutPropertySlot &)::$_0>(JSC *a1, JSC::VM **a2, _QWORD *a3)
{
  unsigned int *v3;
  uint64_t v4;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  JSValue v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  char v15;

  v3 = (unsigned int *)a3[1];
  if (!*((_BYTE *)v3 + 4))
  {
    std::__throw_bad_optional_access[abi:sn180100]();
    goto LABEL_17;
  }
  v4 = a3[2];
  if (*(_DWORD *)(v4 + 8))
  {
LABEL_17:
    v11 = std::__throw_bad_variant_access[abi:sn180100]();
    WebCore::jsHTMLSelectElementConstructor(v11);
    return;
  }
  WebCore::HTMLSelectElement::setItem(*(uint64_t ***)(*(_QWORD *)*a3 + 24), *(WebCore::HTMLOptionElement **)v4, (void *)*v3, &v13);
  if (v15)
  {
    v7 = (WTF::StringImpl *)v13;
    v8 = v14;
    v14 = 0;
    v12 = v8;
    if (!*((_QWORD *)*a2 + 2))
    {
      v9.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v13, (JSC::JSGlobalObject *)&v12);
      JSC::VM::throwException(*a2, a1, v9);
      v8 = v12;
    }
    v12 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v7);
      else
        *(_DWORD *)v8 -= 2;
    }
    if (v15)
    {
      v10 = v14;
      v14 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v7);
        else
          *(_DWORD *)v10 -= 2;
      }
    }
  }
}

unint64_t WebCore::jsHTMLSelectElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLSelectElementPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSelectElement>,(WebCore::DOMConstructorID)569>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLSelectElement_autocomplete(uint64_t a1, const WebCore::HTMLFormControlElement *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  WTF::StringImpl *v14;
  uint64_t v15;

  WebCore::AutofillData::createFromHTMLFormControlElement(*((_QWORD **)a2 + 3), a2, (uint64_t)&v14);
  v4 = v14;
  v5 = v15;
  v14 = 0;
  v15 = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, v3);
    else
      *(_DWORD *)v4 -= 2;
  }
  v6 = *(_QWORD *)(a1 + 56);
  v7 = (uint64_t *)(v6 + 41968);
  if (!v5)
    return *v7;
  v8 = *(_DWORD *)(v5 + 4);
  if (v8)
  {
    if (v8 != 1)
    {
LABEL_7:
      v9 = *(_QWORD *)(v6 + 64760);
      if (!v9 || v5 != *(_QWORD *)(v9 + 8))
        v9 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_10;
    }
    v11 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_7;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v6 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *v7;
  }
LABEL_10:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, v3);
  else
    *(_DWORD *)v5 -= 2;
  return v9;
}

BOOL WebCore::setJSHTMLSelectElement_autocomplete(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLSelectElement *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v21 = v9;
    v10 = *((_QWORD *)v6 + 13);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) == 0)
      {
        v12 = (uint64_t *)(v10 + 32);
        v13 = v11 >> 5;
        if (!v13)
          goto LABEL_15;
LABEL_8:
        v14 = 0;
        while (1)
        {
          v15 = *v12;
          if (*v12 == WebCore::HTMLNames::autocompleteAttr
            || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::autocompleteAttr + 24)
            && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::autocompleteAttr + 32))
          {
            goto LABEL_16;
          }
          ++v14;
          v12 += 2;
          if (v13 == v14)
            goto LABEL_15;
        }
      }
      v12 = *(uint64_t **)(v10 + 40);
      v13 = *(_DWORD *)(v10 + 52);
      if (v13)
        goto LABEL_8;
    }
LABEL_15:
    v14 = 0xFFFFFFFFLL;
LABEL_16:
    WebCore::Element::setAttributeInternal(v6, v14, (WebCore::TreeScope *)&WebCore::HTMLNames::autocompleteAttr, &v21, 0);
    v17 = v21;
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v7])(&v21, &v19);
  return v8;
}

uint64_t WebCore::jsHTMLSelectElement_disabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::disabledAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::disabledAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLSelectElement_disabled(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl **v10;
  double v11;
  int v12;
  JSC::VM *v15;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLSelectElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WTF::StringImpl ***)(a2 + 24);
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = a3 != 0;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      a4.n128_u64[0] = a3 - 0x2000000000000;
      v12 = v11 > 0.0 || v11 < 0.0;
    }
    else if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
    }
    else
    {
      v15 = v5;
      v12 = JSC::JSCell::toBoolean(a3, a1);
      v5 = v15;
    }
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v10, (const WebCore::QualifiedName *)&WebCore::HTMLNames::disabledAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLSelectElement_form(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  uint64_t v4;
  WebCore::JSDOMGlobalObject *v6;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 120);
  if (v4 && (v6 = *(WebCore::JSDOMGlobalObject **)(v4 + 8)) != 0)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v6, a4);
  else
    return 2;
}

uint64_t WebCore::jsHTMLSelectElement_multiple(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::multipleAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::multipleAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::multipleAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

BOOL WebCore::IDLAttribute<WebCore::JSHTMLSelectElement>::set<&WebCore::setJSHTMLSelectElement_multipleSetter,(WebCore::CastedThisErrorBehavior)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;

  v5 = JSC::jsDynamicCast<WebCore::JSHTMLSelectElement *>(a2);
  if (v5)
    return WebCore::setJSHTMLSelectElement_multipleSetter(a1, *(WTF::StringImpl ***)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsHTMLSelectElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLSelectElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLSelectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLSelectElement_required(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::requiredAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::requiredAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::requiredAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLSelectElement_required(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLSelectElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::requiredAttr, v12, a4);
  return 1;
}

unint64_t WebCore::jsHTMLSelectElement_size(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 280);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLSelectElement_size(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLSelectElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::sizeAttr, v11 & ~(v11 >> 31));
  return v9;
}

uint64_t WebCore::jsHTMLSelectElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 328))(*(_QWORD *)(a2 + 24) + 112);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

unint64_t WebCore::jsHTMLSelectElement_options(WebCore *a1, WebCore::JSHTMLSelectElement **a2)
{
  return WebCore::jsHTMLSelectElement_optionsGetter(a1, (JSC::JSGlobalObject *)*(unsigned int *)a2, a2[3]);
}

unint64_t WebCore::jsHTMLSelectElement_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 300))
    WebCore::HTMLSelectElement::recalcListItems(*(_QWORD *)(a2 + 24), (void *)1, 1u);
  v3 = *(unsigned int *)(v2 + 196);
  if ((_DWORD)v3)
  {
    v4 = 0;
    v5 = *(uint64_t **)(v2 + 184);
    do
    {
      v6 = *v5++;
      if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 8) + 96) + 24) == *(_QWORD *)(WebCore::HTMLNames::optionTag + 24))
        ++v4;
      --v3;
    }
    while (v3);
    if ((v4 & 0x80000000) != 0)
      return COERCE__INT64((double)v4) + 0x2000000000000;
  }
  else
  {
    v4 = 0;
  }
  return v4 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLSelectElement_length(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  _BYTE *v10;
  WTF::StringImpl *v11;
  _BOOL8 v12;
  WTF *v13;
  WTF *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  JSValue v20;
  WTF::StringImpl *v21;
  unsigned int v22;
  int v23;
  WTF *v24;
  uint64_t v25;
  _BYTE v26[40];
  uint64_t v27;
  JSC::JSGlobalObject *v28;
  char v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  char v33;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLSelectElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_BYTE **)(a2 + 24);
  v24 = (WTF *)v26;
  v25 = 4;
  v26[32] = 0;
  v27 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v28 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v24;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v22);
  v12 = v23 == 0;
  if (!v23)
  {
    WebCore::HTMLSelectElement::setLength(v10, (void *)v22, &v31);
    if (v33)
    {
      v11 = (WTF::StringImpl *)v31;
      v29 = v31;
      v19 = v32;
      v32 = 0;
      v30 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v20.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v31, (JSC::JSGlobalObject *)&v30);
        JSC::VM::throwException(v4, a1, v20);
        v19 = v30;
      }
      v30 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v11);
        else
          *(_DWORD *)v19 -= 2;
      }
      if (v33)
      {
        v21 = v32;
        v32 = 0;
        if (v21)
        {
          if (*(_DWORD *)v21 == 2)
            WTF::StringImpl::destroy(v21, v11);
          else
            *(_DWORD *)v21 -= 2;
        }
      }
    }
  }
  if (HIDWORD(v25))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v24, v28);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v27;
    if (HIDWORD(v25))
    {
      v16 = v24;
      v17 = 8 * HIDWORD(v25);
      do
      {
        v18 = *(_QWORD *)v16;
        *(_QWORD *)v16 = 0;
        if (v18)
        {
          if (*(_DWORD *)(v18 + 24) == 2)
          {
            if ((*(_WORD *)(v18 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v18, v11);
          }
          else
          {
            *(_DWORD *)(v18 + 24) -= 2;
          }
        }
        v16 = (WTF *)((char *)v16 + 8);
        v17 -= 8;
      }
      while (v17);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v27;
  }
  v13 = v24;
  if (v26 != (_BYTE *)v24 && v24 != 0)
  {
    v24 = 0;
    LODWORD(v25) = 0;
    WTF::fastFree(v13, v11);
  }
  return v12;
}

unint64_t WebCore::jsHTMLSelectElement_selectedOptions(int a1, WebCore::HTMLSelectElement **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLSelectElement::selectedOptions(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

unint64_t WebCore::jsHTMLSelectElement_selectedIndex(uint64_t a1, uint64_t a2)
{
  return WebCore::HTMLSelectElement::selectedIndex(*(WebCore::HTMLSelectElement **)(a2 + 24)) | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLSelectElement_selectedIndex(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  void *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLSelectElement *v11;
  uint64_t v12;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unsigned int v18;
  JSC::VM *v19;
  unint64_t v20;
  unint64_t v21;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = (void *)a3;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLSelectElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(WebCore::HTMLSelectElement **)(a2 + 24);
  v21 = a3;
  if (a3 < 0xFFFE000000000000)
  {
    v14 = a3 - 0x2000000000000;
    if (a3 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v19 = v4;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v21, a1);
      v4 = v19;
      v14 = v20;
    }
    v15 = (v14 >> 52) & 0x7FF;
    v16 = v15 - 1023;
    v17 = v14 >> (51 - (v14 >> 52));
    if (v15 > 0x433)
      LODWORD(v17) = v14 << ((v14 >> 52) - 51);
    if (v15 >= 0x41F)
      v18 = v17;
    else
      v18 = (((1 << ((v14 >> 52) + 1)) - 1) & v17) + (1 << ((v14 >> 52) + 1));
    if ((v14 & 0x8000000000000000) != 0)
      v18 = -v18;
    if (v16 <= 0x53)
      v5 = (void *)v18;
    else
      v5 = 0;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  v12 = 1;
  WebCore::HTMLSelectElement::selectOption(v11, v5, 1);
  return v12;
}

uint64_t WebCore::jsHTMLSelectElement_value(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::HTMLSelectElement::value(*(unsigned int **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSHTMLSelectElement_value(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::HTMLSelectElement *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  uint64_t v13;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v17;
  uint64_t v18;
  int v19;
  WTF::StringImpl *v20;
  unint64_t v21;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLSelectElement::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::HTMLSelectElement **)(a2 + 24);
  v21 = this;
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v21, a1);
  }
  else
  {
    v9 = *(WTF::StringImpl **)(this + 8);
    if ((v9 & 1) != 0)
      v9 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
    if (v9)
      *(_DWORD *)v9 += 2;
    v20 = v9;
  }
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v10 = v20;
    if (hasExceptionsAfterHandlingTraps)
    {
      v19 = 1;
      v20 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v17);
        else
          *(_DWORD *)v10 -= 2;
      }
      v13 = 0;
      v12 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    v10 = v20;
  }
  v19 = 0;
  v18 = 0;
  v21 = (unint64_t)v10;
  WebCore::HTMLSelectElement::setValue(v8, (const WTF::String *)&v21);
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
      WTF::StringImpl::destroy(v10, v11);
    else
      *(_DWORD *)v10 -= 2;
  }
  v12 = 0;
  v13 = 1;
LABEL_21:
  ((void (*)(unint64_t *, uint64_t *))off_1E329F280[v12])(&v21, &v18);
  return v13;
}

uint64_t WebCore::jsHTMLSelectElement_willValidate(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 272))(*(_QWORD *)(a2 + 24) + 112))
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsHTMLSelectElement_validity(uint64_t a1, uint64_t a2)
{
  return WebCore::toJS(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WTF *)(*(_QWORD *)(a2 + 24) + 112));
}

uint64_t WebCore::jsHTMLSelectElement_validationMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  int v11;
  WTF::StringImpl *v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v3 + 112) + 272))(v3 + 112))
    goto LABEL_4;
  v4 = *(_QWORD *)(v3 + 144);
  if (v4)
  {
    v8 = *(_DWORD *)(v4 + 4);
    if (v8)
    {
      *(_DWORD *)v4 += 2;
      v13 = v4;
      v5 = *(_QWORD *)(a1 + 56);
      goto LABEL_12;
    }
  }
  if ((*(_BYTE *)(v3 + 168) & 1) == 0
    || (v11 = WebCore::HTMLSelectElement::selectedIndex((WebCore::HTMLSelectElement *)v3), (v11 & 0x80000000) == 0)
    && (v11 || !WebCore::HTMLSelectElement::hasPlaceholderLabelOption((WebCore::HTMLSelectElement *)v3, v12)))
  {
LABEL_4:
    v4 = 0;
    v5 = *(_QWORD *)(a1 + 56);
LABEL_5:
    v6 = *(_QWORD *)(v5 + 41968);
    goto LABEL_6;
  }
  WebCore::validationMessageValueMissingForSelectText((uint64_t)&v13);
  v4 = v13;
  v5 = *(_QWORD *)(a1 + 56);
  if (!v13)
    goto LABEL_5;
  v8 = *(_DWORD *)(v13 + 4);
  if (!v8)
    goto LABEL_5;
LABEL_12:
  if (v8 == 1)
  {
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_13;
      v10 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v10 + 42216);
    goto LABEL_20;
  }
LABEL_13:
  v6 = *(_QWORD *)(v5 + 64760);
  if (!v6 || v4 != *(_QWORD *)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v13;
LABEL_6:
    v13 = 0;
    if (!v4)
      return v6;
    goto LABEL_7;
  }
LABEL_20:
  v13 = 0;
LABEL_7:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, (WTF::StringImpl *)v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsHTMLSelectElement_labels(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t Wrapper;
  uint64_t v17;
  _DWORD *v18;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLElement::labels(*(WebCore::HTMLElement **)(a2 + 24), &v17);
  v3 = (_DWORD *)v17;
  if (!v17)
    return 2;
  v5 = *(_QWORD *)(v2 + 3320);
  if (!*(_DWORD *)(v5 + 48))
  {
    v6 = *(_QWORD *)(v17 + 8);
    if (v6)
      goto LABEL_5;
LABEL_7:
    ++*(_DWORD *)(v17 + 16);
    v18 = v3;
    Wrapper = WebCore::createWrapper(v2, (uint64_t *)&v18);
    v7 = v18;
    v18 = 0;
    if (v7)
    {
      if (v7[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
      else
        --v7[4];
    }
    v3 = (_DWORD *)v17;
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(v5 + 32);
  if (!v8)
    goto LABEL_7;
  v9 = *(_DWORD *)(v8 - 8);
  v10 = (~(v17 << 32) + v17) ^ ((unint64_t)(~(v17 << 32) + v17) >> 22);
  v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
  v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
  v13 = v9 & ((v12 >> 31) ^ v12);
  v14 = *(_QWORD *)(v8 + 16 * v13);
  if (v14 != v17)
  {
    v15 = 1;
    while (v14)
    {
      v13 = ((_DWORD)v13 + v15) & v9;
      v14 = *(_QWORD *)(v8 + 16 * v13);
      ++v15;
      if (v14 == v17)
        goto LABEL_22;
    }
    goto LABEL_7;
  }
LABEL_22:
  v6 = *(_QWORD *)(v8 + 16 * v13 + 8);
  if (!v6)
    goto LABEL_7;
LABEL_5:
  if ((*(_BYTE *)(v6 + 8) & 3) != 0)
    goto LABEL_7;
  Wrapper = *(_QWORD *)v6;
  if (!*(_QWORD *)v6)
    goto LABEL_7;
LABEL_11:
  v17 = 0;
  if (v3)
  {
    if (v3[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
    else
      --v3[4];
  }
  return Wrapper;
}

unint64_t WebCore::JSHTMLSelectElement::toWrapped(uint64_t a1, unint64_t a2)
{
  unint64_t result;

  result = JSC::jsDynamicCast<WebCore::JSHTMLSelectElement *>(a2);
  if (result)
    return *(_QWORD *)(result + 24);
  return result;
}

unint64_t JSC::jsDynamicCast<WebCore::JSHTMLSelectElement *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSHTMLSelectElement::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

uint64_t WebCore::convertDictionary<WebCore::HTMLSlotElement::AssignedNodesOptions>(uint64_t result, JSC::JSGlobalObject *a2, JSC::JSCell *this)
{
  uint64_t v3;
  JSC::VM *v4;
  uint64_t Object;
  JSC::Structure *v7;
  WTF::StringImpl *v8;
  unint64_t v9;
  BOOL v10;
  double v11;
  int v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  int *v16;
  int v17;
  WTF::StringImpl *v18;

  v3 = result;
  v4 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      result = JSC::throwTypeError();
      goto LABEL_19;
    }
    v7 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    result = JSC::JSObject::get(v7, a2, (unint64_t)v18);
    v9 = result;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        result = WTF::StringImpl::destroy(v18, v8);
      else
        *(_DWORD *)v18 -= 2;
    }
    if (*((_DWORD *)v4 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
      if ((result & 1) != 0)
        goto LABEL_19;
    }
    if (v9 == 10)
      goto LABEL_9;
    result = *((_QWORD *)a2 + 7);
    if (v9 >= 0xFFFE000000000000)
    {
      v13 = (_DWORD)v9 == 0;
    }
    else
    {
      *(_QWORD *)&v11 = v9 - 0x2000000000000;
      if (v9 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        v10 = v11 > 0.0 || v11 < 0.0;
LABEL_14:
        if (!*(_DWORD *)(result + 80))
          goto LABEL_15;
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result);
        if ((result & 1) == 0)
          goto LABEL_15;
LABEL_19:
        v12 = 1;
        goto LABEL_16;
      }
      if ((v9 & 0xFFFE000000000002) != 0)
      {
        v10 = v9 == 7;
        goto LABEL_14;
      }
      v14 = *(unsigned __int8 *)(v9 + 5);
      if (v14 == 3)
      {
        v17 = *(_DWORD *)(v9 + 8);
      }
      else
      {
        if (v14 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            v10 = 1;
            goto LABEL_14;
          }
          v13 = *(_QWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x28) == (_QWORD)a2;
          goto LABEL_39;
        }
        v15 = *(_QWORD *)(v9 + 8);
        if ((v15 & 1) != 0)
          v16 = (int *)(v9 + 16);
        else
          v16 = (int *)(v15 + 4);
        v17 = *v16;
      }
      v13 = v17 == 0;
    }
LABEL_39:
    v10 = !v13;
    goto LABEL_14;
  }
LABEL_9:
  v10 = 0;
LABEL_15:
  v12 = 0;
  *(_BYTE *)v3 = v10;
LABEL_16:
  *(_DWORD *)(v3 + 4) = v12;
  return result;
}

uint64_t WebCore::JSHTMLSlotElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLSlotElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLSlotElementPrototype::create(WebCore::JSHTMLSlotElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSHTMLSlotElement::s_info, &WebCore::JSHTMLSlotElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSlotElement>,(WebCore::DOMConstructorID)570>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4560);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSlotElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLSlotElement::s_info + ~((_QWORD)&WebCore::JSHTMLSlotElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLSlotElement::s_info + ~((_QWORD)&WebCore::JSHTMLSlotElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLSlotElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLSlotElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLSlotElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLSlotElementPrototype::create((WebCore::JSHTMLSlotElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLSlotElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLSlotElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4560) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLSlotElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLSlotElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSlotElement>,(WebCore::DOMConstructorID)570>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLSlotElement_name(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v3 && (v4 = *(_DWORD *)(v3 + 4), (v4 & 2) != 0))
  {
    if ((v4 & 1) != 0)
    {
      v13 = *(uint64_t **)(v3 + 40);
      LODWORD(v14) = *(_DWORD *)(v3 + 52);
    }
    else
    {
      v13 = (uint64_t *)(v3 + 32);
      LODWORD(v14) = v4 >> 5;
    }
    if ((_DWORD)v14)
    {
      v14 = v14;
      while (1)
      {
        v15 = *v13;
        if (*v13 == WebCore::HTMLNames::nameAttr
          || *(_QWORD *)(v15 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
          && *(_QWORD *)(v15 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
        {
          break;
        }
        v13 += 2;
        if (!--v14)
          goto LABEL_28;
      }
    }
    else
    {
LABEL_28:
      v13 = 0;
    }
    v5 = v13 + 1;
  }
  else
  {
    v5 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v6 = *v5;
  if (!*v5)
    return *(_QWORD *)(v2 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v2 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_7;
      v11 = v12;
    }
    return *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
LABEL_7:
  v8 = *(_QWORD *)(v2 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLSlotElement_name(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLSlotElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLSlotElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::nameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::nameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLSourceElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLSourceElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLSourceElementPrototype::create(WebCore::JSHTMLSourceElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  int v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  JSC::Structure *v16;
  int v17;
  unint64_t v19;
  WTF::StringImpl *v20[6];
  int v21;
  int v22;
  JSC::Structure *v23;
  int v24;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v19);
    *((_QWORD *)this + 4865) = SlowCase + (int)v19;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<9u>(this, (uint64_t)&WebCore::JSHTMLSourceElement::s_info, (uint64_t)&WebCore::JSHTMLSourceElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  {
    if (byte_1ECE90A59)
      goto LABEL_12;
  }
  else
  {
    WebCore::DeprecatedGlobalSettings::shared(void)::deprecatedGlobalSettings = 0u;
    *(_OWORD *)&byte_1ECE90A50 = 0u;
    qword_1ECE90A60 = 0;
    LOBYTE(WebCore::DeprecatedGlobalSettings::shared(void)::deprecatedGlobalSettings) = 1;
    *((_QWORD *)&WebCore::DeprecatedGlobalSettings::shared(void)::deprecatedGlobalSettings + 1) = 0;
    *(_QWORD *)((char *)&WebCore::DeprecatedGlobalSettings::shared(void)::deprecatedGlobalSettings + 14) = 0;
    byte_1ECE90A56 = 1;
    *(_DWORD *)&algn_1ECE90A57 = 0;
    unk_1ECE90A5B = 0;
    byte_1ECE90A5D = 1;
    byte_1ECE90A5F = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v9 = v20[0];
  v10 = *((_DWORD *)this + 23281);
  *((_DWORD *)this + 23281) = 1;
  LODWORD(v20[0]) = -1;
  WORD2(v20[0]) = 1;
  JSC::JSObject::deleteProperty();
  *((_DWORD *)this + 23281) = v10;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v11);
    else
      *(_DWORD *)v9 -= 2;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
LABEL_12:
  v12 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create((uint64_t)this, v20);
  v15 = v20[0];
  v20[0] = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  v16 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v24 = *(_DWORD *)SlowCase;
  v23 = v16;
  v17 = JSC::Structure::outOfLineCapacity(v16);
  v21 = 0;
  v22 = v17;
  v20[0] = (WTF::StringImpl *)&v22;
  v20[1] = (WTF::StringImpl *)SlowCase;
  v20[2] = this;
  v20[3] = (WTF::StringImpl *)&v24;
  v20[4] = (WTF::StringImpl *)&v23;
  v20[5] = (WTF::StringImpl *)&v21;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v16, this, v12, 6, (uint64_t)v20);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v21, v14);
  *((_DWORD *)v16 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSourceElement>,(WebCore::DOMConstructorID)571>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4568);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSourceElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLSourceElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLSourceElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLSourceElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLSourceElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLSourceElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLSourceElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLSourceElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLSourceElementPrototype::create((WebCore::JSHTMLSourceElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLSourceElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLSourceElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4568) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLSourceElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLSourceElementPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSourceElement>,(WebCore::DOMConstructorID)571>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLSourceElement_src(uint64_t a1, uint64_t a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  WebCore::Element *v6;
  uint64_t v7;
  WTF::StringImpl **v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  __int128 v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v17;
  WTF::StringImpl *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  char v23;
  char v24;
  WTF::StringImpl **v25;

  v6 = *(WebCore::Element **)(a2 + 24);
  v21 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 8);
  *(_DWORD *)(v7 + 24) += 2;
  v8 = &v22;
  WebCore::Element::getURLAttribute(v6, (const WebCore::QualifiedName *)&WebCore::HTMLNames::srcAttr, a3, a4, (WTF::URL *)&v22, a5);
  if ((v23 & 2) == 0)
  {
    v8 = &v22;
    if (WebCore::Document::shouldMaskURLForBindingsInternal((WebCore::Document *)v7, (const WTF::URL *)&v22))
    {
      v17 = atomic_load(&WebCore::Document::maskedURLForBindings(void)::onceFlag);
      if (v17 != -1)
      {
        v18 = (WTF::StringImpl *)&v24;
        v25 = &v18;
        std::__call_once(&WebCore::Document::maskedURLForBindings(void)::onceFlag, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:sn180100]<std::tuple<WebCore::Document::maskedURLForBindings(void)::$_0 &&>>);
      }
      v8 = (WTF::StringImpl **)&WebCore::Document::maskedURLForBindings(void)::url;
    }
  }
  v10 = *v8;
  if (*v8)
    *(_DWORD *)v10 += 2;
  v18 = v10;
  v11 = *(_OWORD *)(v8 + 3);
  v19 = *(_OWORD *)(v8 + 1);
  v20 = v11;
  v12 = v22;
  v22 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v9);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*(_DWORD *)(v7 + 24) == 2)
  {
    if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v7, v9);
  }
  else
  {
    *(_DWORD *)(v7 + 24) -= 2;
  }
  v14 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>(a1, (uint64_t)&v21, (uint64_t *)&v18);
  v15 = v18;
  v18 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  return v14;
}

BOOL WebCore::setJSHTMLSourceElement_src(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLSourceElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLSourceElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::srcAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::srcAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLSourceElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::typeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLSourceElement_type(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLSourceElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLSourceElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::typeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::typeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLSourceElement_srcset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::srcsetAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcsetAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcsetAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLSourceElement_srcset(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLSourceElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLSourceElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::valueToUSVAtomString(a1, a3, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::srcsetAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::srcsetAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::srcsetAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::srcsetAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLSourceElement_sizes(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::sizesAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::sizesAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::sizesAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLSourceElement_sizes(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLSourceElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLSourceElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::sizesAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::sizesAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::sizesAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::sizesAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLSourceElement_media(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::mediaAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLSourceElement_media(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLSourceElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLSourceElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::mediaAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::mediaAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLSourceElement_width(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::widthAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    v8 = 0;
  else
    v8 = v10 & ~((int)v10 >> 31);
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLSourceElement_width(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLSourceElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLSourceElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::widthAttr, v11);
  return v9;
}

unint64_t WebCore::jsHTMLSourceElement_height(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)WebCore::Element::getAttribute(*(WebCore::Element **)(a3 + 24), (const WebCore::QualifiedName *)&WebCore::HTMLNames::heightAttr, a4, a5, a1);
  if (v5)
  {
    v6 = *(uint64_t **)(v5 + 8);
    v7 = *(unsigned int *)(v5 + 4) | ((unint64_t)((*(_DWORD *)(v5 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v6 = 0;
    v7 = 0x100000000;
  }
  WebCore::parseHTMLInteger(v6, v7, &v10);
  if (HIDWORD(v10))
    v8 = 0;
  else
    v8 = v10 & ~((int)v10 >> 31);
  return v8 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLSourceElement_height(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLSourceElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLSourceElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::Element::setUnsignedIntegralAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::heightAttr, v11);
  return v9;
}

uint64_t WebCore::jsHTMLSourceElement_attachmentIdentifier(uint64_t a1, uint64_t a2)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = WebCore::AttachmentAssociatedElement::attachmentIdentifier((WebCore::AttachmentAssociatedElement *)(*(_QWORD *)(a2 + 24) + 112));
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)v3;
  if (!*(_QWORD *)v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

uint64_t WebCore::JSHTMLSourceElementOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v10 = v9[17];
  if (!v10)
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  v11 = *(_QWORD *)(v10 + 8);
  if (!v11 || *(_BYTE *)(v11 + 180) || !v9[18] && !(*(unsigned int (**)(_QWORD *))(v9[16] + 64))(v9 + 16))
    return WebCore::JSNodeOwner::isReachableFromOpaqueRoots(a1, a2, 0, a4, a5);
  if (a5)
  {
    *a5 = "ActiveDOMObject with pending activity";
    a5[1] = 38;
  }
  return 1;
}

unsigned int *WebCore::JSHTMLSourceElementOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned int *result;
  int v4;
  unsigned int *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int *v26;

  result = *(unsigned int **)(*(_QWORD *)a2 + 24);
  v4 = result[6];
  result[6] = v4 + 2;
  v5 = result + 2;
  if (!result)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v8 = *(_QWORD *)(a3 + 32);
    v6 = (uint64_t *)(a3 + 32);
    v7 = v8;
    if (v8)
    {
      v9 = *(_DWORD *)(v7 - 8);
      v10 = ((unint64_t)result + ~((_QWORD)result << 32)) ^ (((unint64_t)result + ~((_QWORD)result << 32)) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(unsigned int **)(v7 + 16 * v13);
      if (v14 != result)
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(unsigned int **)(v7 + 16 * v13);
          ++v15;
          if (v14 == result)
            goto LABEL_16;
        }
        v13 = *(unsigned int *)(v7 - 4);
      }
LABEL_16:
      if (v13 != *(_DWORD *)(v7 - 4))
      {
        v16 = (_QWORD *)(v7 + 16 * v13);
        *v16 = -1;
        v19 = v16[1];
        v18 = v16 + 1;
        v17 = v19;
        if (v19)
        {
          *(_QWORD *)(v17 + 8) = 3;
          *v18 = 0;
        }
        ++*(_DWORD *)(*v6 - 16);
        v20 = *v6;
        if (*v6)
          v21 = *(_DWORD *)(v20 - 12) - 1;
        else
          v21 = -1;
        *(_DWORD *)(v20 - 12) = v21;
        v22 = *v6;
        if (*v6)
        {
          v23 = 6 * *(_DWORD *)(v22 - 12);
          v24 = *(_DWORD *)(v22 - 4);
          if (v23 < v24 && v24 >= 9)
          {
            v26 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v24 >> 1, 0);
            result = v26;
          }
        }
      }
    }
    v4 = result[6] - 2;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (v4)
  {
    result[6] = v4;
  }
  else if ((*((_WORD *)result + 15) & 0x400) == 0)
  {
    return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
  }
  return result;
}

uint64_t WebCore::JSHTMLSpanElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLSpanElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLSpanElementPrototype::create(WebCore::JSHTMLSpanElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSHTMLSpanElement::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSHTMLSpanElementPrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSpanElement>,(WebCore::DOMConstructorID)572>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4576);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSpanElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLSpanElement::s_info + ~((_QWORD)&WebCore::JSHTMLSpanElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLSpanElement::s_info + ~((_QWORD)&WebCore::JSHTMLSpanElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLSpanElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLSpanElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLSpanElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLSpanElementPrototype::create((WebCore::JSHTMLSpanElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLSpanElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLSpanElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4576) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLSpanElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLSpanElementPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLSpanElement>,(WebCore::DOMConstructorID)572>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSHTMLStyleElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLStyleElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLStyleElementPrototype::create(WebCore::JSHTMLStyleElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSHTMLStyleElement::s_info, &WebCore::JSHTMLStyleElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLStyleElement>,(WebCore::DOMConstructorID)573>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4584);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLStyleElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLStyleElement::s_info + ~((_QWORD)&WebCore::JSHTMLStyleElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLStyleElement::s_info + ~((_QWORD)&WebCore::JSHTMLStyleElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLStyleElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLStyleElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLStyleElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLStyleElementPrototype::create((WebCore::JSHTMLStyleElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLStyleElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLStyleElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4584) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLStyleElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLStyleElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLStyleElement>,(WebCore::DOMConstructorID)573>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLStyleElement_disabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 144);
  if (!v2)
    return 6;
  if (*(_BYTE *)(v2 + 33))
    return 7;
  return 6;
}

uint64_t WebCore::setJSHTMLStyleElement_disabled(uint64_t a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  double v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v16;
  int v17;
  uint64_t v18;
  int *v19;
  int v20;
  uint64_t v21;

  v4 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLStyleElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLStyleElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v16 = (_DWORD)a3 == 0;
    goto LABEL_40;
  }
  *(_QWORD *)&v10 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v11 = a3 == 7;
      goto LABEL_16;
    }
    v17 = *(unsigned __int8 *)(a3 + 5);
    if (v17 == 3)
    {
      v20 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v17 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v11 = 1;
          goto LABEL_16;
        }
        v16 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_40;
      }
      v18 = *(_QWORD *)(a3 + 8);
      if ((v18 & 1) != 0)
        v19 = (int *)(a3 + 16);
      else
        v19 = (int *)(v18 + 4);
      v20 = *v19;
    }
    v16 = v20 == 0;
LABEL_40:
    v11 = !v16;
    goto LABEL_16;
  }
  v11 = v10 > 0.0 || v10 < 0.0;
LABEL_16:
  v12 = *(_QWORD *)(a2 + 24);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  v13 = *(_QWORD *)(v12 + 144);
  if (v13)
  {
    if (*(unsigned __int8 *)(v13 + 33) != v11)
    {
      *(_BYTE *)(v13 + 33) = v11;
      v14 = WTF::fastMalloc((WTF *)0x10);
      *(_QWORD *)v14 = off_1E3398D48;
      v21 = v14;
      WebCore::CSSStyleSheet::forEachStyleScope(v13, &v21);
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
    }
  }
  return 1;
}

uint64_t WebCore::jsHTMLStyleElement_media(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::mediaAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLStyleElement_media(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLStyleElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLStyleElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::mediaAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::mediaAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::mediaAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLStyleElement_type(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::typeAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLStyleElement_type(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLStyleElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLStyleElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::typeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::typeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::typeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLStyleElement_sheet(int a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 144);
  if (v2)
    return WebCore::wrap<WebCore::CSSStyleSheet>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

WTF::StringImpl *WebCore::JSHTMLTableCaptionElementPrototype::finishCreation(WebCore::JSHTMLTableCaptionElementPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(a2, (uint64_t)&WebCore::JSHTMLTableCaptionElement::s_info, (uint64_t)&WebCore::JSHTMLTableCaptionElementPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLTableCaptionElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLTableCaptionElement::createPrototype(WebCore::JSHTMLTableCaptionElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLTableCaptionElementPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSHTMLTableCaptionElementPrototype::create(WebCore::JSHTMLTableCaptionElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLTableCaptionElementPrototype::finishCreation((WebCore::JSHTMLTableCaptionElementPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableCaptionElement>,(WebCore::DOMConstructorID)574>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  unint64_t Prototype;
  unint64_t v28;
  JSC::JSObject *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4592);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v33);
    v5[2] = SlowCase + (int)v33;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableCaptionElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v34 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v34);
    v10[2848] = v2 + (int)v34;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (!v18)
    goto LABEL_21;
  v19 = *(_DWORD *)(v18 - 8);
  v20 = ((unint64_t)&WebCore::JSHTMLTableCaptionElement::s_info
       + ~((_QWORD)&WebCore::JSHTMLTableCaptionElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLTableCaptionElement::s_info
                                                                         + ~((_QWORD)&WebCore::JSHTMLTableCaptionElement::s_info << 32)) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(char ***)(v18 + 16 * v23);
  if (v24 != &WebCore::JSHTMLTableCaptionElement::s_info)
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(char ***)(v18 + 16 * v23);
      ++v25;
      if (v24 == &WebCore::JSHTMLTableCaptionElement::s_info)
        goto LABEL_20;
    }
LABEL_21:
    Prototype = WebCore::JSHTMLTableCaptionElement::createPrototype((WebCore::JSHTMLTableCaptionElement *)a1, (JSC::VM *)a2, v16);
    v28 = Prototype;
    LODWORD(v36) = 241;
    if ((Prototype & 0xFFFE000000000002) == 0)
    {
      v29 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)Prototype);
      if (v29)
        JSC::JSObject::didBecomePrototype(v29, (JSC::VM *)a1);
    }
    v30 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v30 = v5[2];
      if ((v30 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v30 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_26;
      }
      v35 = *(_QWORD *)(v30 + 8) ^ v5[3];
      v5[1] = v30 + HIDWORD(v35);
      v5[2] = v30 + (int)v35;
    }
    *v5 = v30 + 128;
LABEL_26:
    *(_DWORD *)v30 = 0;
    MEMORY[0x19AEA4278](v30, a1, a2, v28, &v36, &WebCore::JSHTMLTableCaptionElement::s_info, 0, 0);
    if (*(_BYTE *)(a1 + 755))
      __dmb(0xAu);
    v26 = WebCore::cacheDOMStructure((JSCell *)a2, v30, (uint64_t)&WebCore::JSHTMLTableCaptionElement::s_info);
    goto LABEL_29;
  }
LABEL_20:
  v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
  if (!v26)
    goto LABEL_21;
LABEL_29:
  v31 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v31, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4592) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLTableCaptionElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLTableCaptionElementPrototype::s_info != (char **)(16
                                                                       * *(unsigned int *)(16
                                                                                         * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                         + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableCaptionElement>,(WebCore::DOMConstructorID)574>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLTableCaptionElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableCaptionElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCaptionElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCaptionElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

WTF::StringImpl *WebCore::JSHTMLTableCellElementPrototype::finishCreation(WebCore::JSHTMLTableCellElementPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<16u>(a2, (uint64_t)&WebCore::JSHTMLTableCellElement::s_info, (uint64_t)&WebCore::JSHTMLTableCellElementPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLTableCellElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLTableCellElement::createPrototype(WebCore::JSHTMLTableCellElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLTableCellElementPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSHTMLTableCellElementPrototype::create(WebCore::JSHTMLTableCellElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLTableCellElementPrototype::finishCreation((WebCore::JSHTMLTableCellElementPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableCellElement>,(WebCore::DOMConstructorID)575>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4600);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableCellElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLTableCellElement>(a1, (JSC::VM *)a2, v17) + 48);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4600) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLTableCellElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLTableCellElementPrototype::s_info != (char **)(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                      + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableCellElement>,(WebCore::DOMConstructorID)575>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLTableCellElement_cellIndex(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 32);
  if (v3
    && (~*(unsigned __int16 *)(v3 + 28) & 0x18) == 0
    && *(_QWORD *)(*(_QWORD *)(v3 + 96) + 24) == *(_QWORD *)(WebCore::HTMLNames::trTag + 24))
  {
    v6 = *(_QWORD *)(v2 + 48) & 0xFFFFFFFFFFFFLL;
    if (v6)
    {
      v4 = 0;
      do
      {
        if ((*(_WORD *)(v6 + 28) & 0x10) != 0)
        {
          v7 = *(_QWORD *)(*(_QWORD *)(v6 + 96) + 24);
          if (v7 == *(_QWORD *)(WebCore::HTMLNames::tdTag + 24) || v7 == *(_QWORD *)(WebCore::HTMLNames::thTag + 24))
            ++v4;
        }
        v6 = *(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFLL;
      }
      while (v6);
    }
    else
    {
      v4 = 0;
    }
  }
  else
  {
    v4 = -1;
  }
  return v4 | 0xFFFE000000000000;
}

uint64_t WebCore::jsHTMLTableCellElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableCellElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableCellElement_axis(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::axisAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::axisAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::axisAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableCellElement_axis(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::axisAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::axisAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::axisAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::axisAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableCellElement_bgColor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::bgcolorAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableCellElement_bgColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::bgcolorAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::bgcolorAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLTableCellElement_ch(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::charAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableCellElement_ch(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::charAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::charAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableCellElement_chOff(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::charoffAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableCellElement_chOff(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::charoffAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::charoffAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLTableCellElement_colSpan(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = WebCore::HTMLTableCellElement::colSpan(*(WebCore::HTMLTableCellElement **)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLTableCellElement_colSpan(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::HTMLTableCellElement *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::HTMLTableCellElement **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::HTMLTableCellElement::setColSpan(v8, v11);
  return v9;
}

unint64_t WebCore::jsHTMLTableCellElement_rowSpan(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = WebCore::HTMLTableCellElement::rowSpanForBindings(*(WebCore::HTMLTableCellElement **)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLTableCellElement_rowSpan(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::HTMLTableCellElement *v8;
  _BOOL8 v9;
  unsigned int v11;
  int v12;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::HTMLTableCellElement **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v11);
  v9 = v12 == 0;
  if (!v12)
    WebCore::HTMLTableCellElement::setRowSpanForBindings(v8, v11);
  return v9;
}

uint64_t WebCore::jsHTMLTableCellElement_headers(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::headersAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::headersAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::headersAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableCellElement_headers(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::headersAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::headersAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::headersAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::headersAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableCellElement_height(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::heightAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableCellElement_height(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::heightAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::heightAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::heightAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableCellElement_noWrap(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v2)
    return 6;
  v3 = *(_DWORD *)(v2 + 4);
  if ((v3 & 1) != 0)
  {
    v4 = *(uint64_t **)(v2 + 40);
    LODWORD(v5) = *(_DWORD *)(v2 + 52);
    if (!(_DWORD)v5)
      return 6;
  }
  else
  {
    v4 = (uint64_t *)(v2 + 32);
    LODWORD(v5) = v3 >> 5;
    if (!(_DWORD)v5)
      return 6;
  }
  v5 = v5;
  result = 7;
  while (1)
  {
    v7 = *v4;
    if (*v4 == WebCore::HTMLNames::nowrapAttr
      || *(_QWORD *)(v7 + 24) == *(_QWORD *)(WebCore::HTMLNames::nowrapAttr + 24)
      && *(_QWORD *)(v7 + 32) == *(_QWORD *)(WebCore::HTMLNames::nowrapAttr + 32))
    {
      break;
    }
    v4 += 2;
    if (!--v5)
      return 6;
  }
  return result;
}

uint64_t WebCore::setJSHTMLTableCellElement_noWrap(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double v11;
  _BOOL4 v12;
  WTF::StringImpl **v13;
  BOOL v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;

  v5 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLTableCellElement::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v15 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v11 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v12 = a3 == 7;
      goto LABEL_16;
    }
    v16 = *(unsigned __int8 *)(a3 + 5);
    if (v16 == 3)
    {
      v19 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v16 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        v15 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v17 = *(_QWORD *)(a3 + 8);
      if ((v17 & 1) != 0)
        v18 = (int *)(a3 + 16);
      else
        v18 = (int *)(v17 + 4);
      v19 = *v18;
    }
    v15 = v19 == 0;
LABEL_37:
    v12 = !v15;
    goto LABEL_16;
  }
  a4.n128_u64[0] = a3 - 0x2000000000000;
  v12 = v11 > 0.0 || v11 < 0.0;
LABEL_16:
  v13 = *(WTF::StringImpl ***)(a2 + 24);
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  WebCore::Element::setBooleanAttribute(v13, (const WebCore::QualifiedName *)&WebCore::HTMLNames::nowrapAttr, v12, a4);
  return 1;
}

uint64_t WebCore::jsHTMLTableCellElement_vAlign(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::valignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableCellElement_vAlign(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::valignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::valignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableCellElement_width(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::widthAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableCellElement_width(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::widthAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::widthAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableCellElement_abbr(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::abbrAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::abbrAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::abbrAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableCellElement_abbr(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::abbrAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::abbrAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::abbrAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::abbrAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableCellElement_scope(uint64_t a1, uint64_t a2, const WTF::StringImpl *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;

  v4 = WebCore::HTMLTableCellElement::scope(*(WebCore::HTMLTableCellElement **)(a2 + 24), a2, a3);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *v4;
  if (!*v4)
    return *(_QWORD *)(v5 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v5 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v11 = *(unsigned __int16 *)v10;
      if (v11 > 0xFF)
        goto LABEL_4;
      v11 = v11;
    }
    return *(_QWORD *)(v5 + 8 * v11 + 42216);
  }
LABEL_4:
  v8 = *(_QWORD *)(v5 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSHTMLTableCellElement_scope(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableCellElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableCellElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::scopeAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::scopeAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::scopeAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::scopeAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLTableColElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSHTMLTableColElementPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSHTMLTableColElementPrototype::create(WebCore::JSHTMLTableColElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(this, (uint64_t)&WebCore::JSHTMLTableColElement::s_info, &WebCore::JSHTMLTableColElementPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableColElement>,(WebCore::DOMConstructorID)576>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4608);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableColElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSHTMLTableColElement::s_info
         + ~((_QWORD)&WebCore::JSHTMLTableColElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLTableColElement::s_info
                                                                       + ~((_QWORD)&WebCore::JSHTMLTableColElement::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSHTMLTableColElement::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSHTMLTableColElement::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype((WebCore::JSHTMLElement *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSHTMLTableColElementPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSHTMLTableColElementPrototype::create((WebCore::JSHTMLTableColElementPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSHTMLTableColElement::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSHTMLTableColElement::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4608) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLTableColElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLTableColElementPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableColElement>,(WebCore::DOMConstructorID)576>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLTableColElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableColElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableColElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableColElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableColElement_ch(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::charAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableColElement_ch(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableColElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableColElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::charAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::charAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableColElement_chOff(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::charoffAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableColElement_chOff(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableColElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableColElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::charoffAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::charoffAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

unint64_t WebCore::jsHTMLTableColElement_span(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 112);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

BOOL WebCore::setJSHTMLTableColElement_span(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::Element *v8;
  _BOOL8 v9;
  uint64_t v10;
  __n128 v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  int v15;
  int v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  char v20;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableColElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableColElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::Element **)(a2 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, a3, &v15);
  v9 = v16 == 0;
  if (!v16)
  {
    if (v15 < 0)
      v10 = 1;
    else
      v10 = v15;
    WTF::AtomString::number((WTF::AtomString *)v10);
    WebCore::Element::setAttribute(v8, (const WebCore::QualifiedName *)&WebCore::HTMLNames::spanAttr, &v17, 0, &v18, v11);
    if (v20 && v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v12);
      else
        *(_DWORD *)v19 -= 2;
    }
    v13 = v17;
    v17 = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
  }
  return v9;
}

uint64_t WebCore::jsHTMLTableColElement_vAlign(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::valignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableColElement_vAlign(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableColElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableColElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::valignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::valignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableColElement_width(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::widthAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableColElement_width(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableColElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableColElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::widthAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::widthAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::JSHTMLTableElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableElement>,(WebCore::DOMConstructorID)577>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4616);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLTableElement>((WebCore::JSHTMLTableElement *)a1, (JSC::VM *)a2, v17)+ 48);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4616) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLTableElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLTableElementPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableElement>,(WebCore::DOMConstructorID)577>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsHTMLTableElement_caption(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  uint64_t v4;
  JSC::JSGlobalObject *v5;
  uint64_t v6;
  void *v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  if (!v4)
    return 2;
  v5 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v6 = 2;
  while ((*(_WORD *)(v4 + 28) & 0x10) == 0
       || *(_QWORD *)(*(_QWORD *)(v4 + 96) + 24) != *(_QWORD *)(WebCore::HTMLNames::captionTag + 24))
  {
    v4 = *(_QWORD *)(v4 + 56);
    if (!v4)
      return v6;
  }
  *(_DWORD *)(v4 + 24) += 2;
  v6 = WebCore::toJS(a1, v5, (WebCore::JSDOMGlobalObject *)v4, a4);
  if (*(_DWORD *)(v4 + 24) == 2)
  {
    if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v4, v7);
  }
  else
  {
    *(_DWORD *)(v4 + 24) -= 2;
  }
  return v6;
}

BOOL WebCore::setJSHTMLTableElement_caption(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  WebCore::Node *v19;
  WebCore::Node *v20;
  WTF *v21;
  WTF *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  JSValue v28;
  WTF::StringImpl *v29;
  WTF *v30;
  uint64_t v31;
  _BYTE v32[40];
  uint64_t v33;
  JSC::JSGlobalObject *v34;
  WebCore::Node *v35;
  WTF::StringImpl *v36;
  JSC::VM *v37;
  WTF::StringImpl *v38;
  uint64_t v39;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLTableElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLTableElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v30 = (WTF *)v32;
  v31 = 4;
  v32[32] = 0;
  v33 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v34 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v30;
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    WebCore::HTMLTableElement::deleteCaption((unsigned int *)v10);
    v37 = 0;
    v38 = 0;
    v39 = 0;
LABEL_33:
    if ((_BYTE)v39)
    {
      v16 = (WTF::StringImpl *)v37;
      LOBYTE(v35) = (_BYTE)v37;
      v27 = v38;
      v38 = 0;
      v36 = v27;
      if (!*((_QWORD *)v4 + 2))
      {
        v28.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v37, (JSC::JSGlobalObject *)&v36);
        JSC::VM::throwException(v4, a1, v28);
        v27 = v36;
      }
      v36 = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          WTF::StringImpl::destroy(v27, v16);
        else
          *(_DWORD *)v27 -= 2;
      }
      if ((_BYTE)v39)
      {
        v29 = v38;
        v38 = 0;
        if (v29)
        {
          if (*(_DWORD *)v29 == 2)
            WTF::StringImpl::destroy(v29, v16);
          else
            *(_DWORD *)v29 -= 2;
        }
      }
    }
    v17 = 1;
    goto LABEL_35;
  }
  v37 = v4;
  if ((a3 & 0xFFFE000000000002) == 0)
  {
    v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSHTMLTableCaptionElement::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSHTMLTableCaptionElement::s_info && v13 != 0);
    }
    if (v12)
    {
      v18 = *(_QWORD *)(a3 + 24);
      if (v18)
      {
        *(_DWORD *)(v18 + 24) += 2;
        WebCore::HTMLTableElement::deleteCaption((unsigned int *)v10);
        v19 = *(WebCore::Node **)(v10 + 80);
        if (v19)
          *((_DWORD *)v19 + 6) += 2;
        v35 = v19;
        WebCore::ContainerNode::insertBefore(v10, (uint64_t *)v18, &v35, (uint64_t)&v37);
        v20 = v35;
        v35 = 0;
        if (v20)
        {
          if (*((_DWORD *)v20 + 6) == 2)
          {
            if ((*((_WORD *)v20 + 15) & 0x400) == 0)
              WebCore::Node::removedLastRef(v20, v16);
          }
          else
          {
            *((_DWORD *)v20 + 6) -= 2;
          }
        }
        if (*(_DWORD *)(v18 + 24) == 2)
        {
          if ((*(_WORD *)(v18 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v18, v16);
        }
        else
        {
          *(_DWORD *)(v18 + 24) -= 2;
        }
        goto LABEL_33;
      }
    }
  }
  WebCore::throwAttributeTypeError((int)a1, (int)&v37, "HTMLTableElement", 17, "caption", 8, "HTMLTableCaptionElement", 24);
  v17 = 0;
LABEL_35:
  if (HIDWORD(v31))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v30, v34);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v33;
    if (HIDWORD(v31))
    {
      v24 = v30;
      v25 = 8 * HIDWORD(v31);
      do
      {
        v26 = *(_QWORD *)v24;
        *(_QWORD *)v24 = 0;
        if (v26)
        {
          if (*(_DWORD *)(v26 + 24) == 2)
          {
            if ((*(_WORD *)(v26 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v26, v16);
          }
          else
          {
            *(_DWORD *)(v26 + 24) -= 2;
          }
        }
        v24 = (WTF *)((char *)v24 + 8);
        v25 -= 8;
      }
      while (v25);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v33;
  }
  v21 = v30;
  if (v32 != (_BYTE *)v30 && v30 != 0)
  {
    v30 = 0;
    LODWORD(v31) = 0;
    WTF::fastFree(v21, v16);
  }
  return v17;
}

uint64_t WebCore::jsHTMLTableElement_tHead(WebCore *a1, unsigned int **a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::HTMLElement *v4;
  void *v5;
  uint64_t v6;
  WebCore::Node *v7;
  WebCore::Node *v9;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLTableElement::tHead(a2[3], a2, &v9);
  if (!v9)
    return 2;
  v6 = WebCore::toJS(a1, v3, v9, v4);
  v7 = v9;
  v9 = 0;
  if (v7)
  {
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v7, v5);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
  }
  return v6;
}

BOOL WebCore::setJSHTMLTableElement_tHead(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  char **v14;
  BOOL v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  WTF *v20;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  JSValue v27;
  WTF::StringImpl *v28;
  WTF *v29;
  uint64_t v30;
  _BYTE v31[40];
  uint64_t v32;
  JSC::JSGlobalObject *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  WTF::StringImpl *v37;
  char v38;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLTableElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLTableElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(unsigned int **)(a2 + 24);
  v29 = (WTF *)v31;
  v30 = 4;
  v31[32] = 0;
  v32 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v33 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v29;
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v11 = 0;
LABEL_28:
    v34 = v11;
    WebCore::HTMLTableElement::setTHead(v10, &v34, (uint64_t)&v36);
    v19 = v34;
    v34 = 0;
    if (v19)
    {
      if (*(_DWORD *)(v19 + 24) == 2)
      {
        if ((*(_WORD *)(v19 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v19, (void *)v17);
      }
      else
      {
        *(_DWORD *)(v19 + 24) -= 2;
      }
    }
    if (v38)
    {
      v17 = v36;
      LOBYTE(v34) = (_BYTE)v36;
      v26 = v37;
      v37 = 0;
      v35 = v26;
      if (!*((_QWORD *)v4 + 2))
      {
        v27.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v36, (JSC::JSGlobalObject *)&v35);
        JSC::VM::throwException(v4, a1, v27);
        v26 = v35;
      }
      v35 = 0;
      if (v26)
      {
        if (*(_DWORD *)v26 == 2)
          WTF::StringImpl::destroy(v26, (WTF::StringImpl *)v17);
        else
          *(_DWORD *)v26 -= 2;
      }
      if (v38)
      {
        v28 = v37;
        v37 = 0;
        if (v28)
        {
          if (*(_DWORD *)v28 == 2)
            WTF::StringImpl::destroy(v28, (WTF::StringImpl *)v17);
          else
            *(_DWORD *)v28 -= 2;
        }
      }
    }
    v18 = 1;
    goto LABEL_33;
  }
  v36 = v4;
  if ((a3 & 0xFFFE000000000002) == 0)
  {
    v12 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
    v13 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
    v14 = (char **)(16 * v12);
    if ((_DWORD)v12)
      v15 = v14 == &WebCore::JSHTMLTableSectionElement::s_info;
    else
      v15 = 1;
    if (!v15)
    {
      do
      {
        v14 = (char **)v14[2];
        v13 = v14 != 0;
      }
      while (v14 != &WebCore::JSHTMLTableSectionElement::s_info && v14 != 0);
    }
    if (v13)
    {
      v11 = *(_QWORD *)(a3 + 24);
      if (v11)
      {
        *(_DWORD *)(v11 + 24) += 2;
        goto LABEL_28;
      }
    }
  }
  WebCore::throwAttributeTypeError((int)a1, (int)&v36, "HTMLTableElement", 17, "tHead", 6, "HTMLTableSectionElement", 24);
  v18 = 0;
LABEL_33:
  if (HIDWORD(v30))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v29, v33);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v32;
    if (HIDWORD(v30))
    {
      v23 = v29;
      v24 = 8 * HIDWORD(v30);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, (void *)v17);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v32;
  }
  v20 = v29;
  if (v31 != (_BYTE *)v29 && v29 != 0)
  {
    v29 = 0;
    LODWORD(v30) = 0;
    WTF::fastFree(v20, (void *)v17);
  }
  return v18;
}

uint64_t WebCore::jsHTMLTableElement_tFoot(WebCore *a1, unsigned int **a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::HTMLElement *v4;
  void *v5;
  uint64_t v6;
  WebCore::Node *v7;
  WebCore::Node *v9;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLTableElement::tFoot(a2[3], a2, &v9);
  if (!v9)
    return 2;
  v6 = WebCore::toJS(a1, v3, v9, v4);
  v7 = v9;
  v9 = 0;
  if (v7)
  {
    if (*((_DWORD *)v7 + 6) == 2)
    {
      if ((*((_WORD *)v7 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v7, v5);
    }
    else
    {
      *((_DWORD *)v7 + 6) -= 2;
    }
  }
  return v6;
}

BOOL WebCore::setJSHTMLTableElement_tFoot(JSC::JSGlobalObject *a1, unint64_t a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::HTMLTableElement *v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  int v18;
  WTF *v19;
  WTF *v22;
  uint64_t v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  JSValue v26;
  WTF::StringImpl *v27;
  WTF *v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;
  JSC::JSGlobalObject *v32;
  char v33;
  WTF::StringImpl *v34;
  JSC::VM *v35;
  WTF::StringImpl *v36;
  uint64_t v37;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLTableElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLTableElement::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::HTMLTableElement **)(a2 + 24);
  v28 = (WTF *)v30;
  v29 = 4;
  v30[32] = 0;
  v31 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v32 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v28;
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    WebCore::HTMLTableElement::deleteTFoot(v10, (void *)a2);
    v35 = 0;
    v36 = 0;
    v37 = 0;
    goto LABEL_29;
  }
  v35 = v4;
  if ((a3 & 0xFFFE000000000002) == 0)
  {
    v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSHTMLTableSectionElement::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSHTMLTableSectionElement::s_info && v13 != 0);
    }
    if (v12)
    {
      v17 = *(_QWORD *)(a3 + 24);
      if (v17)
      {
        v18 = *(_DWORD *)(v17 + 24);
        *(_DWORD *)(v17 + 24) = v18 + 2;
        if (*(_QWORD *)(*(_QWORD *)(v17 + 96) + 24) == *(_QWORD *)(WebCore::HTMLNames::tfootTag + 24))
        {
          WebCore::HTMLTableElement::deleteTFoot(v10, (void *)a2);
          WebCore::ContainerNode::appendChild((uint64_t)v10, (WebCore::Node *)v17, (uint64_t)&v35);
          v18 = *(_DWORD *)(v17 + 24) - 2;
          if (*(_DWORD *)(v17 + 24) != 2)
          {
LABEL_28:
            *(_DWORD *)(v17 + 24) = v18;
LABEL_29:
            if ((_BYTE)v37)
            {
              a2 = v35;
              v33 = (char)v35;
              v25 = v36;
              v36 = 0;
              v34 = v25;
              if (!*((_QWORD *)v4 + 2))
              {
                v26.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)v35, (JSC::JSGlobalObject *)&v34);
                JSC::VM::throwException(v4, a1, v26);
                v25 = v34;
              }
              v34 = 0;
              if (v25)
              {
                if (*(_DWORD *)v25 == 2)
                  WTF::StringImpl::destroy(v25, (WTF::StringImpl *)a2);
                else
                  *(_DWORD *)v25 -= 2;
              }
              if ((_BYTE)v37)
              {
                v27 = v36;
                v36 = 0;
                if (v27)
                {
                  if (*(_DWORD *)v27 == 2)
                    WTF::StringImpl::destroy(v27, (WTF::StringImpl *)a2);
                  else
                    *(_DWORD *)v27 -= 2;
                }
              }
            }
            v16 = 1;
            goto LABEL_31;
          }
        }
        else
        {
          LOBYTE(v35) = 1;
          v36 = 0;
          LOBYTE(v37) = 1;
          if (v18)
            goto LABEL_28;
        }
        if ((*(_WORD *)(v17 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v17, (void *)a2);
        goto LABEL_29;
      }
    }
  }
  WebCore::throwAttributeTypeError((int)a1, (int)&v35, "HTMLTableElement", 17, "tFoot", 6, "HTMLTableSectionElement", 24);
  v16 = 0;
LABEL_31:
  if (HIDWORD(v29))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v28, v32);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
    if (HIDWORD(v29))
    {
      v22 = v28;
      v23 = 8 * HIDWORD(v29);
      do
      {
        v24 = *(_QWORD *)v22;
        *(_QWORD *)v22 = 0;
        if (v24)
        {
          if (*(_DWORD *)(v24 + 24) == 2)
          {
            if ((*(_WORD *)(v24 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v24, (void *)a2);
          }
          else
          {
            *(_DWORD *)(v24 + 24) -= 2;
          }
        }
        v22 = (WTF *)((char *)v22 + 8);
        v23 -= 8;
      }
      while (v23);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v31;
  }
  v19 = v28;
  if (v30 != (_BYTE *)v28 && v28 != 0)
  {
    v28 = 0;
    LODWORD(v29) = 0;
    WTF::fastFree(v19, (void *)a2);
  }
  return v16;
}

unint64_t WebCore::jsHTMLTableElement_tBodies(int a1, WebCore::HTMLTableElement **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLTableElement::tBodies(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

unint64_t WebCore::jsHTMLTableElement_rows(int a1, WebCore::HTMLTableElement **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLTableElement::rows(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

uint64_t WebCore::jsHTMLTableElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableElement_border(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::borderAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableElement_border(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::borderAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::borderAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::borderAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableElement_frame(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::frameAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::frameAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::frameAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableElement_frame(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::frameAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::frameAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::frameAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::frameAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableElement_rules(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::rulesAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::rulesAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::rulesAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableElement_rules(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::rulesAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::rulesAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::rulesAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::rulesAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableElement_summary(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::summaryAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::summaryAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::summaryAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableElement_summary(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::summaryAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::summaryAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::summaryAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::summaryAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableElement_width(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::widthAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableElement_width(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::widthAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::widthAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::widthAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableElement_bgColor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::bgcolorAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableElement_bgColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::bgcolorAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::bgcolorAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLTableElement_cellPadding(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::cellpaddingAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::cellpaddingAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::cellpaddingAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableElement_cellPadding(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::cellpaddingAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::cellpaddingAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::cellpaddingAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::cellpaddingAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLTableElement_cellSpacing(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::cellspacingAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::cellspacingAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::cellspacingAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableElement_cellSpacing(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::cellspacingAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::cellspacingAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::cellspacingAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::cellspacingAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

WTF::StringImpl *WebCore::JSHTMLTableRowElementPrototype::finishCreation(WebCore::JSHTMLTableRowElementPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<11u>(a2, (uint64_t)&WebCore::JSHTMLTableRowElement::s_info, (uint64_t)&WebCore::JSHTMLTableRowElementPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLTableRowElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLTableRowElement::createPrototype(WebCore::JSHTMLTableRowElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLTableRowElementPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSHTMLTableRowElementPrototype::create(WebCore::JSHTMLTableRowElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLTableRowElementPrototype::finishCreation((WebCore::JSHTMLTableRowElementPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableRowElement>,(WebCore::DOMConstructorID)578>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4624);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableRowElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLTableRowElement>((WebCore::JSHTMLTableRowElement *)a1, (JSC::VM *)a2, v17)+ 48);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4624) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLTableRowElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLTableRowElementPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableRowElement>,(WebCore::DOMConstructorID)578>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLTableRowElement_rowIndex(uint64_t a1, WebCore::HTMLTableRowElement **a2)
{
  return WebCore::HTMLTableRowElement::rowIndex(a2[3], (WTF::StringImpl *)a2) | 0xFFFE000000000000;
}

unint64_t WebCore::jsHTMLTableRowElement_sectionRowIndex(uint64_t a1, WebCore::HTMLTableRowElement **a2)
{
  return WebCore::HTMLTableRowElement::sectionRowIndex(a2[3], (WTF::StringImpl *)a2) | 0xFFFE000000000000;
}

unint64_t WebCore::jsHTMLTableRowElement_cells(int a1, WebCore::HTMLTableRowElement **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLTableRowElement::cells(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

uint64_t WebCore::jsHTMLTableRowElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableRowElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableRowElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableRowElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableRowElement_bgColor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::bgcolorAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableRowElement_bgColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  int v24;
  char v25;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableRowElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableRowElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v9 += 2;
    v22 = 0;
LABEL_21:
    v21 = 0;
    v23 = v9;
    v11 = *((_QWORD *)v8 + 13);
    if (v11)
    {
      v12 = *(_DWORD *)(v11 + 4);
      if ((v12 & 1) == 0)
      {
        v13 = (uint64_t *)(v11 + 32);
        v14 = v12 >> 5;
        if (!v14)
          goto LABEL_34;
LABEL_27:
        v16 = 0;
        while (1)
        {
          v17 = *v13;
          if (*v13 == WebCore::HTMLNames::bgcolorAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::bgcolorAttr + 32))
          {
            goto LABEL_35;
          }
          ++v16;
          v13 += 2;
          if (v14 == v16)
            goto LABEL_34;
        }
      }
      v13 = *(uint64_t **)(v11 + 40);
      v14 = *(_DWORD *)(v11 + 52);
      if (v14)
        goto LABEL_27;
    }
LABEL_34:
    v16 = 0xFFFFFFFFLL;
LABEL_35:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::bgcolorAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v15 = 1;
    v10 = v22;
    goto LABEL_39;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v23);
  LOBYTE(v21) = 0;
  v22 = -1;
  v10 = v24;
  if (v24 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32A0F60[v24])(&v25, &v21, &v23);
  v22 = v10;
  if (v24 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E3299910[v24])(&v25, &v23);
    v10 = v22;
  }
  if (!v10)
  {
    v9 = v21;
    goto LABEL_21;
  }
  v15 = 0;
LABEL_39:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v10])(&v23, &v21);
  return v15;
}

uint64_t WebCore::jsHTMLTableRowElement_ch(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::charAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableRowElement_ch(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableRowElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableRowElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::charAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::charAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableRowElement_chOff(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::charoffAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableRowElement_chOff(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableRowElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableRowElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::charoffAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::charoffAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableRowElement_vAlign(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::valignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableRowElement_vAlign(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableRowElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableRowElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::valignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::valignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

WTF::StringImpl *WebCore::JSHTMLTableSectionElementPrototype::finishCreation(WebCore::JSHTMLTableSectionElementPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<8u>(a2, (uint64_t)&WebCore::JSHTMLTableSectionElement::s_info, (uint64_t)&WebCore::JSHTMLTableSectionElementPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSHTMLTableSectionElement::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSHTMLElement::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSHTMLTableSectionElement::createPrototype(WebCore::JSHTMLTableSectionElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSHTMLTableSectionElementPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSHTMLTableSectionElementPrototype::create(WebCore::JSHTMLTableSectionElementPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSHTMLTableSectionElementPrototype::finishCreation((WebCore::JSHTMLTableSectionElementPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableSectionElement>,(WebCore::DOMConstructorID)579>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4632);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSHTMLElement>,(WebCore::DOMConstructorID)528>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableSectionElement>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSHTMLTableSectionElement>((WebCore::JSHTMLTableSectionElement *)a1, (JSC::VM *)a2, v17)+ 48);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4632) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsHTMLTableSectionElementConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSHTMLTableSectionElementPrototype::s_info != (char **)(16
                                                                       * *(unsigned int *)(16
                                                                                         * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                         + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLTableSectionElement>,(WebCore::DOMConstructorID)579>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsHTMLTableSectionElement_rows(int a1, WebCore::HTMLTableSectionElement **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLTableSectionElement::rows(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

uint64_t WebCore::jsHTMLTableSectionElement_align(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::alignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableSectionElement_align(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableSectionElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableSectionElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::alignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::alignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::alignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableSectionElement_ch(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::charAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableSectionElement_ch(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableSectionElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableSectionElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::charAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::charAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::charAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableSectionElement_chOff(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::charoffAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableSectionElement_chOff(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableSectionElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableSectionElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::charoffAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::charoffAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::charoffAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

uint64_t WebCore::jsHTMLTableSectionElement_vAlign(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    goto LABEL_12;
  v4 = *(_DWORD *)(v3 + 4);
  if ((v4 & 1) == 0)
  {
    v5 = v3 + 32;
    LODWORD(v6) = v4 >> 5;
    if ((_DWORD)v6)
      goto LABEL_4;
LABEL_12:
    v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
    goto LABEL_13;
  }
  v5 = *(_QWORD *)(v3 + 40);
  LODWORD(v6) = *(_DWORD *)(v3 + 52);
  if (!(_DWORD)v6)
    goto LABEL_12;
LABEL_4:
  v6 = v6;
  v7 = (uint64_t *)(v5 + 8);
  while (1)
  {
    v8 = *(v7 - 1);
    if (v8 == WebCore::HTMLNames::valignAttr
      || *(_QWORD *)(v8 + 24) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 24)
      && *(_QWORD *)(v8 + 32) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 32))
    {
      break;
    }
    v7 += 2;
    if (!--v6)
    {
      v7 = (uint64_t *)MEMORY[0x1E0CBF2F8];
      break;
    }
  }
LABEL_13:
  v9 = *v7;
  if (!*v7)
    return *(_QWORD *)(v2 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v2 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_16;
      v14 = v15;
    }
    return *(_QWORD *)(v2 + 8 * v14 + 42216);
  }
LABEL_16:
  v11 = *(_QWORD *)(v2 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

BOOL WebCore::setJSHTMLTableSectionElement_vAlign(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSHTMLTableSectionElement::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSHTMLTableSectionElement::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WTF::StringImpl **)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v21);
  v9 = v22;
  v10 = v22 == 0;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v23 = v11;
    v12 = *((_QWORD *)v8 + 13);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 4);
      if ((v13 & 1) == 0)
      {
        v14 = (uint64_t *)(v12 + 32);
        v15 = v13 >> 5;
        if (!v15)
          goto LABEL_25;
LABEL_18:
        v16 = 0;
        while (1)
        {
          v17 = *v14;
          if (*v14 == WebCore::HTMLNames::valignAttr
            || *(_QWORD *)(v17 + 24) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 24)
            && *(_QWORD *)(v17 + 32) == *(_QWORD *)(WebCore::HTMLNames::valignAttr + 32))
          {
            goto LABEL_26;
          }
          ++v16;
          v14 += 2;
          if (v15 == v16)
            goto LABEL_25;
        }
      }
      v14 = *(uint64_t **)(v12 + 40);
      v15 = *(_DWORD *)(v12 + 52);
      if (v15)
        goto LABEL_18;
    }
LABEL_25:
    v16 = 0xFFFFFFFFLL;
LABEL_26:
    WebCore::Element::setAttributeInternal(v8, v16, (WebCore::TreeScope *)&WebCore::HTMLNames::valignAttr, &v23, 0);
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    v9 = v22;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3299910[v9])(&v23, &v21);
  return v10;
}

void WebCore::JSHTMLCollectionOwner::~JSHTMLCollectionOwner(WebCore::JSHTMLCollectionOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSHTMLFormControlsCollectionOwner::~JSHTMLFormControlsCollectionOwner(WebCore::JSHTMLFormControlsCollectionOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSHTMLImageElementOwner::~JSHTMLImageElementOwner(WebCore::JSHTMLImageElementOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSHTMLMarqueeElementOwner::~JSHTMLMarqueeElementOwner(WebCore::JSHTMLMarqueeElementOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSHTMLMediaElementOwner::~JSHTMLMediaElementOwner(WebCore::JSHTMLMediaElementOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSHTMLOptionsCollectionOwner::~JSHTMLOptionsCollectionOwner(WebCore::JSHTMLOptionsCollectionOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSHTMLSourceElementOwner::~JSHTMLSourceElementOwner(WebCore::JSHTMLSourceElementOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

unint64_t WebCore::jsHTMLCollectionPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSC::JSGlobalObject *v12;
  WebCore::JSDOMGlobalObject *v13;
  WebCore::Element *v14;
  JSValue v16;
  JSC::VM *v17;
  _DWORD v18[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v17 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLCollection", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLCollection::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLCollection::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLCollection", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v16);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v18);
    if (v18[1])
    {
      return 0;
    }
    else
    {
      v12 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      v13 = (WebCore::JSDOMGlobalObject *)(*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v11 + 24))(v11, v18[0]);
      if (v13)
        return WebCore::toJS(this, v12, v13, v14);
      else
        return 2;
    }
  }
}

_BYTE *WebCore::jsHTMLCollectionPrototypeFunction_namedItem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSC::JSRopeString *v12;
  JSC::JSRopeString *v13;
  WTF::StringImpl *v14;
  JSC::JSGlobalObject *v15;
  WebCore::JSDOMGlobalObject *v16;
  WTF::StringImpl *v17;
  WebCore::Element *v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  JSValue v23;
  JSC::VM *v24;
  JSC::JSRopeString *v25;
  WTF::StringImpl *v26;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "HTMLCollection", "namedItem");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLCollection::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLCollection::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "HTMLCollection", "namedItem");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v23);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = (JSC::JSRopeString *)*((_QWORD *)a2 + 6);
  v25 = v12;
  if (((unint64_t)v12 & 0xFFFE000000000002) != 0 || (v13 = v12, *((_BYTE *)v12 + 5) != 2))
    v13 = (JSC::JSRopeString *)JSC::JSValue::toStringSlowCase((JSC::JSValue *)&v25, this);
  v14 = (WTF::StringImpl *)*((_QWORD *)v13 + 1);
  if ((v14 & 1) != 0)
  {
    JSC::JSRopeString::resolveRopeToExistingAtomString(v13, this);
  }
  else
  {
    if ((*((_BYTE *)v14 + 16) & 0x10) != 0)
    {
      *(_DWORD *)v14 += 2;
      goto LABEL_20;
    }
    WTF::AtomStringImpl::lookUpSlowCase(v14, a2);
  }
  v14 = v26;
LABEL_20:
  v15 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v26 = v14;
  v16 = (WebCore::JSDOMGlobalObject *)(*(uint64_t (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v11 + 64))(v11, &v26);
  if (v16)
    v19 = WebCore::toJS(this, v15, v16, v18);
  else
    v19 = 2;
  v20 = v26;
  v26 = 0;
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v17);
    else
      *(_DWORD *)v20 -= 2;
  }
  return (_BYTE *)v19;
}

_BYTE *WebCore::jsHTMLDialogElementPrototypeFunction_show(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WTF::String *a4, __n128 a5)
{
  uint64_t v6;
  JSC::VM *v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  WebCore::HTMLDialogElement *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF *v16;
  WTF::StringImpl *v19;
  JSValue v20;
  WTF::StringImpl *v21;
  WTF *v22;
  uint64_t v23;
  uint64_t v24;
  JSC::VM *v25;
  WTF *v26;
  uint64_t v27;
  _BYTE v28[40];
  uint64_t v29;
  JSC::JSGlobalObject *v30;
  char v31;
  WTF::StringImpl *v32;
  _BYTE v33[8];
  WTF::StringImpl *v34;
  char v35;

  v6 = *((_QWORD *)a2 + 5);
  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v7;
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "HTMLDialogElement", "show");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSHTMLDialogElement::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSHTMLDialogElement::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "HTMLDialogElement", "show");
  v13 = *(WebCore::HTMLDialogElement **)(v6 + 24);
  v26 = (WTF *)v28;
  a5.n128_u64[0] = 4;
  v27 = 4;
  v28[32] = 0;
  v29 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v30 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v26;
  WebCore::HTMLDialogElement::show(v13, (uint64_t)a3, a4, (uint64_t)v33, a5);
  if (v35)
  {
    v14 = (WTF::StringImpl *)v33[0];
    v31 = v33[0];
    v19 = v34;
    v34 = 0;
    v32 = v19;
    if (!*((_QWORD *)v7 + 2))
    {
      v20.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v33[0], (JSC::JSGlobalObject *)&v32);
      JSC::VM::throwException(v7, this, v20);
      v19 = v32;
    }
    v32 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v14);
      else
        *(_DWORD *)v19 -= 2;
    }
    if (v35)
    {
      v21 = v34;
      v34 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 != 2)
        {
          v15 = 0;
          *(_DWORD *)v21 -= 2;
          goto LABEL_14;
        }
        WTF::StringImpl::destroy(v21, v14);
      }
    }
    v15 = 0;
    goto LABEL_14;
  }
  v15 = 10;
LABEL_14:
  if (HIDWORD(v27))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v26, v30);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
    if (HIDWORD(v27))
    {
      v22 = v26;
      v23 = 8 * HIDWORD(v27);
      do
      {
        v24 = *(_QWORD *)v22;
        *(_QWORD *)v22 = 0;
        if (v24)
        {
          if (*(_DWORD *)(v24 + 24) == 2)
          {
            if ((*(_WORD *)(v24 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v24, v14);
          }
          else
          {
            *(_DWORD *)(v24 + 24) -= 2;
          }
        }
        v22 = (WTF *)((char *)v22 + 8);
        v23 -= 8;
      }
      while (v23);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
  }
  v16 = v26;
  if (v28 != (_BYTE *)v26 && v26 != 0)
  {
    v26 = 0;
    LODWORD(v27) = 0;
    WTF::fastFree(v16, v14);
  }
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsHTMLDialogElementPrototypeFunction_showModal(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WTF::String *a4, __n128 a5)
{
  uint64_t v6;
  JSC::VM *v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  WebCore::HTMLDialogElement *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF *v16;
  WTF::StringImpl *v19;
  JSValue v20;
  WTF::StringImpl *v21;
  WTF *v22;
  uint64_t v23;
  uint64_t v24;
  JSC::VM *v25;
  WTF *v26;
  uint64_t v27;
  _BYTE v28[40];
  uint64_t v29;
  JSC::JSGlobalObject *v30;
  char v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  char v35;

  v6 = *((_QWORD *)a2 + 5);
  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v7;
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "HTMLDialogElement", "showModal");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSHTMLDialogElement::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSHTMLDialogElement::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "HTMLDialogElement", "showModal");
  v13 = *(WebCore::HTMLDialogElement **)(v6 + 24);
  v26 = (WTF *)v28;
  a5.n128_u64[0] = 4;
  v27 = 4;
  v28[32] = 0;
  v29 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v30 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v26;
  WebCore::HTMLDialogElement::showModal(v13, (uint64_t)a3, a4, &v33, a5);
  if (v35)
  {
    v14 = (WTF::StringImpl *)v33;
    v31 = v33;
    v19 = v34;
    v34 = 0;
    v32 = v19;
    if (!*((_QWORD *)v7 + 2))
    {
      v20.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v33, (JSC::JSGlobalObject *)&v32);
      JSC::VM::throwException(v7, this, v20);
      v19 = v32;
    }
    v32 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v14);
      else
        *(_DWORD *)v19 -= 2;
    }
    if (v35)
    {
      v21 = v34;
      v34 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 != 2)
        {
          v15 = 0;
          *(_DWORD *)v21 -= 2;
          goto LABEL_14;
        }
        WTF::StringImpl::destroy(v21, v14);
      }
    }
    v15 = 0;
    goto LABEL_14;
  }
  v15 = 10;
LABEL_14:
  if (HIDWORD(v27))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v26, v30);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
    if (HIDWORD(v27))
    {
      v22 = v26;
      v23 = 8 * HIDWORD(v27);
      do
      {
        v24 = *(_QWORD *)v22;
        *(_QWORD *)v22 = 0;
        if (v24)
        {
          if (*(_DWORD *)(v24 + 24) == 2)
          {
            if ((*(_WORD *)(v24 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v24, v14);
          }
          else
          {
            *(_DWORD *)(v24 + 24) -= 2;
          }
        }
        v22 = (WTF *)((char *)v22 + 8);
        v23 -= 8;
      }
      while (v23);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
  }
  v16 = v26;
  if (v28 != (_BYTE *)v26 && v26 != 0)
  {
    v26 = 0;
    LODWORD(v27) = 0;
    WTF::fastFree(v16, v14);
  }
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsHTMLDialogElementPrototypeFunction_close(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WTF::String *a4, __n128 a5)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::HTMLDialogElement *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  WTF *v21;
  WTF *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v29;
  uint64_t v30;
  int v31;
  WTF *v32;
  uint64_t v33;
  _BYTE v34[40];
  uint64_t v35;
  JSC::JSGlobalObject *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLDialogElement", "close");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLDialogElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLDialogElement::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLDialogElement", "close");
  v12 = *(WebCore::HTMLDialogElement **)(v6 + 24);
  v32 = (WTF *)v34;
  a5.n128_u64[0] = 4;
  v33 = 4;
  v34[32] = 0;
  v35 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v36 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v32;
  if (*((_DWORD *)a2 + 8) == 1 || (v13 = *((_QWORD *)a2 + 6), v13 == 10))
  {
    v14 = 0;
    v31 = 0;
    goto LABEL_24;
  }
  v38 = (WTF::StringImpl *)*((_QWORD *)a2 + 6);
  if ((v13 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v13 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v38, this);
    goto LABEL_21;
  }
  v15 = *(WTF::StringImpl **)(v13 + 8);
  if ((v15 & 1) != 0)
  {
    v15 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v13, this);
    if (!v15)
      goto LABEL_20;
    goto LABEL_19;
  }
  if (v15)
LABEL_19:
    *(_DWORD *)v15 += 2;
LABEL_20:
  v37 = v15;
LABEL_21:
  if (*((_DWORD *)v5 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v14 = v37;
    if (hasExceptionsAfterHandlingTraps)
    {
      v31 = 1;
      v37 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v27);
        else
          *(_DWORD *)v14 -= 2;
      }
      v19 = 0;
      v18 = 1;
      goto LABEL_28;
    }
  }
  else
  {
    v14 = v37;
  }
  v31 = 0;
LABEL_24:
  v30 = 0;
  v38 = v14;
  WebCore::HTMLDialogElement::close(v12, (const WTF::String *)&v38, (uint64_t)a3, a4, a5);
  v17 = v38;
  v38 = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v16);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = 0;
  v19 = 10;
LABEL_28:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E329F280[v18])(&v38, &v30);
  if (HIDWORD(v33))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v32, v36);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v35;
    if (HIDWORD(v33))
    {
      v24 = v32;
      v25 = 8 * HIDWORD(v33);
      do
      {
        v26 = *(_QWORD *)v24;
        *(_QWORD *)v24 = 0;
        if (v26)
        {
          if (*(_DWORD *)(v26 + 24) == 2)
          {
            if ((*(_WORD *)(v26 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v26, v20);
          }
          else
          {
            *(_DWORD *)(v26 + 24) -= 2;
          }
        }
        v24 = (WTF *)((char *)v24 + 8);
        v25 -= 8;
      }
      while (v25);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v35;
  }
  v21 = v32;
  if (v34 != (_BYTE *)v32 && v32 != 0)
  {
    v32 = 0;
    LODWORD(v33) = 0;
    WTF::fastFree(v21, v20);
  }
  return (_BYTE *)v19;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_14HTMLCollectionENSC_ISL_EENSE_ISL_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSG_SK_SO_EEEEEEDcSS_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF *v2;
  uint64_t *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;

  v2 = *(WTF **)a2;
  *(_QWORD *)a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (uint64_t *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (*v3)
          WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v3, a2);
        WTF::fastFree((WTF *)v3, a2);
      }
      v4 = (unsigned int *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        do
        {
          v5 = __ldaxr(v4);
          v6 = v5 - 1;
        }
        while (__stlxr(v6, v4));
        if (!v6)
        {
          atomic_store(1u, v4);
          WTF::fastFree((WTF *)v4, a2);
        }
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_14HTMLCollectionENSC_ISL_EENSE_ISL_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSG_SK_SO_EEEEEEDcSS_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_14HTMLCollectionENSC_ISL_EENSE_ISL_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSG_SK_SO_EEEEEEDcSS_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::jsHTMLElementPrototypeFunction_click(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLElement", "click");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLElement", "click");
  WebCore::simulateClick(*(WebCore **)(v3 + 24), 0, 0, 0, 0);
  return 10;
}

_BYTE *WebCore::jsHTMLElementPrototypeFunction_attachInternals(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  _DWORD *v12;
  unint64_t v13;
  void *v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WebCore *v19;
  JSC::JSGlobalObject *v20;
  JSC::CallFrame *v21;
  JSC::VM *v22;
  int v23[2];
  WTF::StringImpl *v24;
  int v25;
  _DWORD *v26;
  WTF::StringImpl *v27;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "HTMLElement", "attachInternals");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "HTMLElement", "attachInternals");
  v11 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLElement::attachInternals(*(WebCore::HTMLElement **)(v4 + 24), (uint64_t)v23);
  if (!v25)
  {
    v12 = *(_DWORD **)v23;
    *(_QWORD *)v23 = 0;
    v26 = v12;
    v13 = WebCore::wrap<WebCore::ElementInternals>((uint64_t)this, v11, v12);
    WTF::Ref<WebCore::BarProp,WTF::RawPtrTraits<WebCore::BarProp>,WTF::DefaultRefDerefTraits<WebCore::BarProp>>::~Ref(&v26, v14);
LABEL_14:
    if (v25 != -1)
      ((void (*)(_DWORD **, int *))off_1E329B350[v25])(&v26, v23);
    return (_BYTE *)v13;
  }
  if (v25 == 1)
  {
    v16 = (WTF::StringImpl *)LOBYTE(v23[0]);
    LOBYTE(v26) = v23[0];
    v17 = v24;
    v24 = 0;
    v27 = v17;
    if (!*((_QWORD *)v5 + 2))
    {
      v18.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v23[0]), (JSC::JSGlobalObject *)&v27);
      JSC::VM::throwException(v5, this, v18);
      v17 = v27;
    }
    v27 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v13 = 0;
    goto LABEL_14;
  }
  v19 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsHTMLElementPrototypeFunction_showPopover(v19, v20, v21);
}

uint64_t WebCore::jsHTMLElementPrototypeFunction_showPopover(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t result;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSValue v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  char v17;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  char v21;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLElement", "showPopover");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLElement", "showPopover");
  WebCore::HTMLElement::showPopover(*(WebCore::HTMLElement **)(v4 + 24), 0, (uint64_t)&v19);
  if (!v21)
    return 10;
  v12 = (WTF::StringImpl *)v19;
  v17 = v19;
  v13 = v20;
  v20 = 0;
  v18 = v13;
  if (!*((_QWORD *)v5 + 2))
  {
    v14.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v19, (JSC::JSGlobalObject *)&v18);
    JSC::VM::throwException(v5, this, v14);
    v13 = v18;
  }
  v18 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (v21)
  {
    v15 = v20;
    v20 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 != 2)
      {
        result = 0;
        *(_DWORD *)v15 -= 2;
        return result;
      }
      WTF::StringImpl::destroy(v15, v12);
    }
  }
  return 0;
}

uint64_t WebCore::jsHTMLElementPrototypeFunction_hidePopover(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSValue v14;
  JSC::VM *v15;
  char v16;
  WTF::StringImpl *v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v15 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "HTMLElement", "hidePopover");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "HTMLElement", "hidePopover");
  WebCore::HTMLElement::hidePopoverInternal(*(_QWORD *)(v4 + 24), 1, 1, (uint64_t)&v18);
  if (!v20)
    return 10;
  v12 = (WTF::StringImpl *)v18;
  v16 = v18;
  v13 = v19;
  v17 = v19;
  if (!*((_QWORD *)v5 + 2))
  {
    v14.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v17);
    JSC::VM::throwException(v5, this, v14);
    v13 = v17;
  }
  v17 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  return 0;
}

_BYTE *WebCore::jsHTMLElementPrototypeFunction_togglePopover(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLElement *v11;
  unint64_t v12;
  double v13;
  __int16 v14;
  __int16 i;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  JSValue v21;
  BOOL v22;
  BOOL v23;
  __int16 v24;
  int v25;
  uint64_t v26;
  int *v27;
  int v28;
  uint64_t v29;
  int v30;
  WTF::StringImpl *v31;
  int v32;
  _BYTE v33[8];
  WTF::StringImpl *v34;

  v4 = *((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLElement", "togglePopover");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLElement", "togglePopover");
  v11 = *(WebCore::HTMLElement **)(v5 + 24);
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v12 = *((_QWORD *)a2 + 6);
    if (v12 == 10)
      goto LABEL_57;
    if (v12 >= 0xFFFE000000000000)
    {
      v22 = (_DWORD)v12 == 0;
      goto LABEL_53;
    }
    *(_QWORD *)&v13 = v12 - 0x2000000000000;
    if (v12 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      v23 = v13 <= 0.0;
      v24 = v13 < 0.0;
      if (v23)
        v14 = v24;
      else
        v14 = 1;
      goto LABEL_18;
    }
    if ((v12 & 0xFFFE000000000002) != 0)
    {
      v14 = v12 == 7;
      goto LABEL_18;
    }
    v25 = *(unsigned __int8 *)(v12 + 5);
    if (v25 == 3)
    {
      v28 = *(_DWORD *)(v12 + 8);
    }
    else
    {
      if (v25 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v14 = 1;
LABEL_18:
          if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
          {
            i = v14 | 0x100;
            goto LABEL_21;
          }
          return 0;
        }
        v22 = *(_QWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_53:
        v14 = !v22;
        goto LABEL_18;
      }
      v26 = *(_QWORD *)(v12 + 8);
      if ((v26 & 1) != 0)
        v27 = (int *)(v12 + 16);
      else
        v27 = (int *)(v26 + 4);
      v28 = *v27;
    }
    v22 = v28 == 0;
    goto LABEL_53;
  }
  for (i = 0; ; i = 0)
  {
LABEL_21:
    WebCore::HTMLElement::togglePopover(v11, i, (uint64_t)&v30);
    if (!v32)
    {
      v16 = 0;
      if ((_BYTE)v30)
        v17 = 7;
      else
        v17 = 6;
      goto LABEL_25;
    }
    if (v32 == 1)
      break;
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_57:
    ;
  }
  v19 = (WTF::StringImpl *)v30;
  v33[0] = v30;
  v20 = v31;
  v31 = 0;
  v34 = v20;
  if (!*(_QWORD *)(v4 + 16))
  {
    v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v30, (JSC::JSGlobalObject *)&v34);
    JSC::VM::throwException((JSC::VM *)v4, this, v21);
    v20 = v34;
  }
  v34 = 0;
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v19);
    else
      *(_DWORD *)v20 -= 2;
  }
  v17 = 0;
  v16 = 1;
LABEL_25:
  off_1E329B360[v16](v33, &v30);
  return (_BYTE *)v17;
}

uint64_t WebCore::jsHTMLElementPrototypeFunction_focus(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  int v13;
  __int16 v14;
  int v15;
  int v16;
  __int16 v17;

  v12 = *((_QWORD *)this + 7);
  v3 = *((_QWORD *)a2 + 5);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "HTMLElement", "focus");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "HTMLElement", "focus");
  if (*((_DWORD *)a2 + 8) == 1)
    v8 = 10;
  else
    v8 = *((_QWORD *)a2 + 6);
  v9 = *(_QWORD *)(v3 + 24);
  WebCore::convertDictionary<WebCore::FocusOptions>((JSC::JSCell *)v8, (uint64_t)this, (uint64_t)&v13);
  if (v15)
    return 0;
  v17 = v14;
  v16 = v13;
  (*(void (**)(uint64_t, int *))(*(_QWORD *)v9 + 664))(v9, &v16);
  return 10;
}

uint64_t WebCore::jsHTMLElementPrototypeFunction_blur(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLElement", "blur");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLElement", "blur");
  (*(void (**)(_QWORD))(**(_QWORD **)(v3 + 24) + 688))(*(_QWORD *)(v3 + 24));
  return 10;
}

unint64_t WebCore::castThisValue<WebCore::JSHTMLElement>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSHTMLElement::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSHTMLElement::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

_DWORD **_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore16ElementInternalsENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  return WTF::Ref<WebCore::BarProp,WTF::RawPtrTraits<WebCore::BarProp>,WTF::DefaultRefDerefTraits<WebCore::BarProp>>::~Ref(a2, a2);
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore16ElementInternalsENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::createWrapper<WebCore::HTMLAreaElement,WebCore::HTMLElement>(JSC::VM *a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  WebCore::JSHTMLAreaElement *v20;
  _QWORD *v21;
  unint64_t SlowCase;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *Allocator;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v4 = *(_QWORD *)a2;
  *(_QWORD *)a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLAreaElement::s_info + ~((_QWORD)&WebCore::JSHTMLAreaElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLAreaElement::s_info + ~((_QWORD)&WebCore::JSHTMLAreaElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLAreaElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLAreaElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLAreaElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v18 = (JSC::JSCell *)WebCore::JSHTMLAreaElementPrototype::create(v14, a1, Structure, v17);
  v19 = WebCore::JSHTMLAreaElement::createStructure((uint64_t *)v14, (uint64_t)a1, v18);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSHTMLAreaElement::s_info);
LABEL_8:
  v20 = (WebCore::JSHTMLAreaElement *)*((_QWORD *)a1 + 7);
  v21 = (_QWORD *)WebCore::JSHTMLAreaElement::subspaceForImpl(v20, a2);
  SlowCase = v21[3];
  if (SlowCase < v21[4])
  {
LABEL_9:
    v21[3] = SlowCase + 48;
    goto LABEL_10;
  }
  SlowCase = v21[5];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v21[6];
    v21[4] = SlowCase + HIDWORD(v33);
    v21[5] = SlowCase + (int)v33;
    goto LABEL_9;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_10:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v20 + 755))
    __dmb(0xAu);
  v23 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v24 = (uint64_t *)(v4 + 8);
  else
    v24 = 0;
  if (!*(_DWORD *)(v23 + 48))
  {
    if ((SlowCase & 8) != 0)
      v25 = (SlowCase - 112) | 1;
    else
      v25 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v23;
    v28 = *v24;
    *v24 = (uint64_t)Allocator;
    if (!v28)
      return SlowCase;
LABEL_35:
    *(_QWORD *)(v28 + 8) = 3;
    return SlowCase;
  }
  v35 = v4;
  if ((SlowCase & 8) != 0)
    v30 = (SlowCase - 112) | 1;
  else
    v30 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v30 & 1) != 0)
    v31 = v30 + 47;
  else
    v31 = *(_QWORD *)v30 + 32;
  v32 = *(_QWORD **)(v31 + 16);
  if (!v32)
    v32 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v31 + 16) = *v32;
  *v32 = SlowCase;
  v32[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v32[2] = v23;
  v34 = v32;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v23 + 32), &v35, (uint64_t *)&v34);
  v28 = (uint64_t)v34;
  if (v34)
    goto LABEL_35;
  return SlowCase;
}

unint64_t WebCore::createWrapper<WebCore::HTMLBaseElement,WebCore::HTMLElement>(JSC::VM *a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  WebCore::JSHTMLBaseElement *v20;
  _QWORD *v21;
  unint64_t SlowCase;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *Allocator;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v4 = *(_QWORD *)a2;
  *(_QWORD *)a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLBaseElement::s_info + ~((_QWORD)&WebCore::JSHTMLBaseElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLBaseElement::s_info + ~((_QWORD)&WebCore::JSHTMLBaseElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLBaseElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLBaseElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLBaseElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v18 = (JSC::JSCell *)WebCore::JSHTMLBaseElementPrototype::create(v14, a1, Structure, v17);
  v19 = WebCore::JSHTMLBaseElement::createStructure((uint64_t *)v14, (uint64_t)a1, v18);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSHTMLBaseElement::s_info);
LABEL_8:
  v20 = (WebCore::JSHTMLBaseElement *)*((_QWORD *)a1 + 7);
  v21 = (_QWORD *)WebCore::JSHTMLBaseElement::subspaceForImpl(v20, a2);
  SlowCase = v21[3];
  if (SlowCase < v21[4])
  {
LABEL_9:
    v21[3] = SlowCase + 48;
    goto LABEL_10;
  }
  SlowCase = v21[5];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v21[6];
    v21[4] = SlowCase + HIDWORD(v33);
    v21[5] = SlowCase + (int)v33;
    goto LABEL_9;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_10:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v20 + 755))
    __dmb(0xAu);
  v23 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v24 = (uint64_t *)(v4 + 8);
  else
    v24 = 0;
  if (!*(_DWORD *)(v23 + 48))
  {
    if ((SlowCase & 8) != 0)
      v25 = (SlowCase - 112) | 1;
    else
      v25 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v23;
    v28 = *v24;
    *v24 = (uint64_t)Allocator;
    if (!v28)
      return SlowCase;
LABEL_35:
    *(_QWORD *)(v28 + 8) = 3;
    return SlowCase;
  }
  v35 = v4;
  if ((SlowCase & 8) != 0)
    v30 = (SlowCase - 112) | 1;
  else
    v30 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v30 & 1) != 0)
    v31 = v30 + 47;
  else
    v31 = *(_QWORD *)v30 + 32;
  v32 = *(_QWORD **)(v31 + 16);
  if (!v32)
    v32 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v31 + 16) = *v32;
  *v32 = SlowCase;
  v32[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v32[2] = v23;
  v34 = v32;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v23 + 32), &v35, (uint64_t *)&v34);
  v28 = (uint64_t)v34;
  if (v34)
    goto LABEL_35;
  return SlowCase;
}

uint64_t WebCore::createWrapper<WebCore::HTMLQuoteElement,WebCore::HTMLElement>(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *a2;
  *a2 = 0;
  v5 = v2;
  v3 = WebCore::createWrapper<WebCore::HTMLQuoteElement,WebCore::HTMLQuoteElement>(a1, &v5);
  WTF::Ref<WebCore::HTMLElement,WTF::RawPtrTraits<WebCore::HTMLElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLElement>>::~Ref(&v5);
  return v3;
}

uint64_t WebCore::createWrapper<WebCore::HTMLQuoteElement,WebCore::HTMLQuoteElement>(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a2;
  v5 = WebCore::getDOMStructure<WebCore::JSHTMLQuoteElement>(*(WebCore::JSHTMLQuoteElement **)(a1 + 56), (JSC::VM *)a1);
  v6 = WebCore::JSHTMLQuoteElement::create(v5, (JSC::VM *)a1, a2);
  WebCore::cacheWrapper<WebCore::HTMLQuoteElement,WebCore::JSHTMLQuoteElement>(*(_QWORD *)(a1 + 3320), v4, v6);
  return v6;
}

uint64_t WebCore::JSHTMLQuoteElement::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSHTMLQuoteElement *v6;
  unint64_t v7;
  uint64_t result;

  v6 = (WebCore::JSHTMLQuoteElement *)*((_QWORD *)a2 + 7);
  v7 = JSC::allocateCell<WebCore::JSHTMLQuoteElement>(v6, a2);
  result = WebCore::JSHTMLQuoteElement::JSHTMLQuoteElement(v7, a1, (uint64_t)a2, a3);
  if (*((_BYTE *)v6 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLQuoteElement>(WebCore::JSHTMLQuoteElement *a1, JSC::VM *a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSHTMLQuoteElement::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSHTMLQuoteElement::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSHTMLQuoteElement::s_info);
  }
  return result;
}

uint64_t *WebCore::cacheWrapper<WebCore::HTMLQuoteElement,WebCore::JSHTMLQuoteElement>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t *result;
  uint64_t v8;
  uint64_t v9;

  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (a2)
    v6 = (_QWORD *)(a2 + 8);
  else
    v6 = 0;
  result = (uint64_t *)WebCore::setInlineCachedWrapper(a1, v6, a3, (uint64_t)&WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner);
  if ((result & 1) == 0)
  {
    v9 = a2;
    JSC::Weak<JSC::JSObject>::Weak(&v8, a3, (uint64_t)&WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner, a1);
    result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(a1 + 32), &v9, &v8);
    if (v8)
      *(_QWORD *)(v8 + 8) = 3;
  }
  return result;
}

unint64_t JSC::allocateCell<WebCore::JSHTMLQuoteElement>(WebCore::JSHTMLQuoteElement *a1, JSC::VM *a2)
{
  _QWORD *v2;
  unint64_t result;
  unint64_t v4;

  v2 = (_QWORD *)WebCore::JSHTMLQuoteElement::subspaceForImpl(a1, a2);
  result = v2[3];
  if (result >= v2[4])
  {
    result = v2[5];
    if ((result & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      result = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_3;
    }
    v4 = *(_QWORD *)(result + 8) ^ v2[6];
    v2[4] = result + HIDWORD(v4);
    v2[5] = result + (int)v4;
  }
  v2[3] = result + 48;
LABEL_3:
  *(_DWORD *)result = 0;
  return result;
}

uint64_t WebCore::JSHTMLTableColElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLDataElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLDataListElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLModElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLDetailsElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLDialogElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLDirectoryElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLDListElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLEmbedElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLFieldSetElement>(WebCore::JSHTMLFieldSetElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  int v13;
  uint64_t *v14;
  unint64_t Prototype;
  unint64_t v16;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  unint64_t v19;
  int v20;

  v5 = *((_QWORD *)a2 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLFieldSetElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLFieldSetElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLFieldSetElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLFieldSetElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLFieldSetElement::s_info)
    {
LABEL_3:
      result = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (result)
        return result;
    }
    else
    {
      v13 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v13) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v13;
        if (v11 == &WebCore::JSHTMLFieldSetElement::s_info)
          goto LABEL_3;
      }
    }
  }
  v14 = (uint64_t *)((char *)this + 40136);
  Prototype = WebCore::JSHTMLFieldSetElement::createPrototype(this, a2, a3);
  v16 = Prototype;
  v20 = 241;
  if ((Prototype & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)Prototype);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, this);
  }
  SlowCase = *v14;
  if ((unint64_t)*v14 >= *((_QWORD *)this + 5018))
  {
    SlowCase = *((_QWORD *)this + 5019);
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_14;
    }
    v19 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 5020);
    *((_QWORD *)this + 5018) = SlowCase + HIDWORD(v19);
    *((_QWORD *)this + 5019) = SlowCase + (int)v19;
  }
  *v14 = SlowCase + 128;
LABEL_14:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, this, a2, v16, &v20, &WebCore::JSHTMLFieldSetElement::s_info, 0, 0);
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  return WebCore::cacheDOMStructure((JSCell *)a2, SlowCase, (uint64_t)&WebCore::JSHTMLFieldSetElement::s_info);
}

uint64_t WebCore::JSHTMLFontElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLFormElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLFrameElement>(WebCore::JSHTMLFrameElement *a1, JSC::VM *a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSHTMLFrameElement::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSHTMLFrameElement::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSHTMLFrameElement::s_info);
  }
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLFrameSetElement>(WebCore::JSHTMLFrameSetElement *a1, JSC::VM *a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSHTMLFrameSetElement::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSHTMLFrameSetElement::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSHTMLFrameSetElement::s_info);
  }
  return result;
}

unint64_t WebCore::createWrapper<WebCore::HTMLHeadingElement,WebCore::HTMLHeadingElement>(JSC::VM *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v17;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t SlowCase;
  WTF *v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *Allocator;
  uint64_t v32;
  int v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  WTF *v39;
  void *v40;
  int v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  WTF *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  WTF *v54;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSHTMLHeadingElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLHeadingElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLHeadingElement::s_info
                                                                     + ~((_QWORD)&WebCore::JSHTMLHeadingElement::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSHTMLHeadingElement::s_info)
    {
LABEL_3:
      v13 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v13)
        goto LABEL_5;
    }
    else
    {
      v34 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v34) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v34;
        if (v12 == &WebCore::JSHTMLHeadingElement::s_info)
          goto LABEL_3;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLHeadingElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v19 = (JSC::JSCell *)WebCore::JSHTMLHeadingElementPrototype::create(v14, Structure, v17, v18);
  v20 = WebCore::JSHTMLHeadingElement::createStructure((uint64_t *)v14, (uint64_t)a1, v19);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSHTMLHeadingElement::s_info);
LABEL_5:
  v21 = *((_QWORD *)a1 + 7);
  v22 = *(_QWORD *)(v21 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 4392);
  if (v24)
    goto LABEL_6;
  v35 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v35))
  {
    __clrex();
LABEL_31:
    MEMORY[0x19AEA534C](v35);
    goto LABEL_32;
  }
  if (__stxr(1u, (unsigned __int8 *)v35))
    goto LABEL_31;
LABEL_32:
  v37 = *(_QWORD *)(v35 + 2824);
  v52 = *(_QWORD *)(v37 + 4392);
  if (!v52)
  {
    v42 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v54, "IsoSpace T");
    v53 = 0;
    MEMORY[0x19AEA3204](v42, &v54, v21 + 192, v21 + 1872, 40, 8, &v53);
    v44 = (uint64_t)v53;
    v53 = 0;
    if (v44)
      (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
    v45 = v54;
    v54 = 0;
    if (v45)
    {
      if (*(_DWORD *)v45 == 1)
        WTF::fastFree(v45, v43);
      else
        --*(_DWORD *)v45;
    }
    v52 = v42;
    v46 = *(_QWORD *)(v37 + 4392);
    *(_QWORD *)(v37 + 4392) = v42;
    if (v46)
      (*(void (**)(uint64_t))(*(_QWORD *)v46 + 8))(v46);
    v47 = *(unsigned int *)(v35 + 2844);
    if ((_DWORD)v47 == *(_DWORD *)(v35 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v35 + 2832, (unint64_t)&v52);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v35 + 2832) + 8 * v47) = v42;
      *(_DWORD *)(v35 + 2844) = v47 + 1;
    }
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v38 = *(_QWORD *)(v23 + 4392);
  *(_QWORD *)(v23 + 4392) = v24;
  if (v38)
  {
    v39 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v39, v40);
  }
  v41 = __ldxr((unsigned __int8 *)v35);
  if (v41 != 1)
  {
    __clrex();
    goto LABEL_39;
  }
  if (__stlxr(0, (unsigned __int8 *)v35))
LABEL_39:
    WTF::Lock::unlockSlow((WTF::Lock *)v35);
LABEL_6:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_7:
    v24[3] = SlowCase + 48;
    goto LABEL_8;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v51 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v51);
    v24[5] = SlowCase + (int)v51;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  v26 = *a2;
  *a2 = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v26;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v21 + 755))
    __dmb(0xAu);
  v27 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v5)
    v28 = (uint64_t *)((char *)v5 + 8);
  else
    v28 = 0;
  if (!*(_DWORD *)(v27 + 48))
  {
    if ((SlowCase & 8) != 0)
      v29 = (SlowCase - 112) | 1;
    else
      v29 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v29 & 1) != 0)
      v30 = v29 + 47;
    else
      v30 = *(_QWORD *)v29 + 32;
    Allocator = *(_QWORD **)(v30 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v30 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v27;
    v32 = *v28;
    *v28 = (uint64_t)Allocator;
    if (!v32)
      return SlowCase;
LABEL_59:
    *(_QWORD *)(v32 + 8) = 3;
    return SlowCase;
  }
  v54 = v5;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  v50 = *(_QWORD **)(v49 + 16);
  if (!v50)
    v50 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *v50;
  *v50 = SlowCase;
  v50[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v50[2] = v27;
  v53 = v50;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v27 + 32), (uint64_t *)&v54, (uint64_t *)&v53);
  v32 = (uint64_t)v53;
  if (v53)
    goto LABEL_59;
  return SlowCase;
}

uint64_t WebCore::JSHTMLHeadingElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLHeadElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLHRElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLHtmlElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLInputElement>(WebCore::JSElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char **v18;
  uint64_t v19;
  JSC::JSCell *v20;
  unint64_t Structure;
  JSC::Structure *v22;
  JSC::JSCell *v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  JSC::JSObject *v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int v39;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_11;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSHTMLInputElement::s_info + ~((_QWORD)&WebCore::JSHTMLInputElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLInputElement::s_info + ~((_QWORD)&WebCore::JSHTMLInputElement::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 == &WebCore::JSHTMLInputElement::s_info)
  {
LABEL_3:
    result = *(_QWORD *)(v5 + 16 * v10 + 8);
    if (result)
      return result;
  }
  else
  {
    v13 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v13) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v13;
      if (v11 == &WebCore::JSHTMLInputElement::s_info)
        goto LABEL_3;
    }
  }
  v14 = ((unint64_t)&WebCore::JSHTMLElement::s_info + ~((_QWORD)&WebCore::JSHTMLElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLElement::s_info + ~((_QWORD)&WebCore::JSHTMLElement::s_info << 32)) >> 22);
  v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
  v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
  v17 = v6 & ((v16 >> 31) ^ v16);
  v18 = *(char ***)(v5 + 16 * v17);
  if (v18 != &WebCore::JSHTMLElement::s_info)
  {
    v34 = 1;
    while (v18)
    {
      v17 = ((_DWORD)v17 + v34) & v6;
      v18 = *(char ***)(v5 + 16 * v17);
      ++v34;
      if (v18 == &WebCore::JSHTMLElement::s_info)
        goto LABEL_10;
    }
    goto LABEL_11;
  }
LABEL_10:
  v19 = *(_QWORD *)(v5 + 16 * v17 + 8);
  if (!v19)
  {
LABEL_11:
    v20 = (JSC::JSCell *)WebCore::JSElement::prototype(this, a2, a3);
    Structure = WebCore::JSHTMLElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v20);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v23 = (JSC::JSCell *)WebCore::JSHTMLElementPrototype::create(this, a2, Structure, v22);
    v24 = WebCore::JSHTMLElement::createStructure((uint64_t *)this, (uint64_t)a2, v23);
    v19 = WebCore::cacheDOMStructure((JSCell *)a2, v24, (uint64_t)&WebCore::JSHTMLElement::s_info);
  }
  v25 = (unint64_t *)((char *)this + 40136);
  v26 = *(JSC::JSCell **)(v19 + 48);
  v39 = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, this);
  }
  v28 = (uint64_t *)((char *)this + 38904);
  SlowCase = *v25;
  if (*v25 < *((_QWORD *)this + 5018))
    goto LABEL_16;
  SlowCase = *((_QWORD *)this + 5019);
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 5020);
    *((_QWORD *)this + 5018) = SlowCase + HIDWORD(v35);
    *((_QWORD *)this + 5019) = SlowCase + (int)v35;
LABEL_16:
    *v25 = SlowCase + 128;
    goto LABEL_17;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_17:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, this, a2, v26, &v39, &WebCore::JSHTMLInputElementPrototype::s_info, 0, 0);
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*((_QWORD *)this + 4863) >= *((_QWORD *)this + 4864))
  {
    v30 = *((_QWORD *)this + 4865);
    if ((v30 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v30 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_21;
    }
    v36 = *(_QWORD *)(v30 + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = v30 + HIDWORD(v36);
    *((_QWORD *)this + 4865) = v30 + (int)v36;
  }
  *v28 = v30 + 16;
LABEL_21:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v38 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  WebCore::JSHTMLInputElementPrototype::finishCreation((uint64_t *)&v38, (WebCore::JSHTMLInputElementPrototype *)v30, this);
  v39 = 241;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v32 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v32)
      JSC::JSObject::didBecomePrototype(v32, this);
  }
  v33 = *v25;
  if (*v25 >= *((_QWORD *)this + 5018))
  {
    v33 = *((_QWORD *)this + 5019);
    if ((v33 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v33 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_26;
    }
    v37 = *(_QWORD *)(v33 + 8) ^ *((_QWORD *)this + 5020);
    *((_QWORD *)this + 5018) = v33 + HIDWORD(v37);
    *((_QWORD *)this + 5019) = v33 + (int)v37;
  }
  *v25 = v33 + 128;
LABEL_26:
  *(_DWORD *)v33 = 0;
  MEMORY[0x19AEA4278](v33, this, a2, v30, &v39, &WebCore::JSHTMLInputElement::s_info, 0, 0);
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  return WebCore::cacheDOMStructure((JSCell *)a2, v33, (uint64_t)&WebCore::JSHTMLInputElement::s_info);
}

uint64_t WebCore::JSHTMLLabelElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLLegendElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLLIElement>(WebCore::JSElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char **v18;
  uint64_t v19;
  JSC::JSCell *v20;
  unint64_t Structure;
  JSC::Structure *v22;
  JSC::JSCell *v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  uint64_t *v31;
  int v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  WTF::StringImpl *v47;
  uint64_t *v48;
  unint64_t v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  int v52;
  WTF::StringImpl *v53;
  unint64_t v54;
  uint64_t v55;
  WTF::StringImpl *v56;
  uint64_t v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  int v62;
  uint64_t v63;
  unsigned __int8 *v64;
  uint64_t v66;
  uint64_t v67;
  WTF::StringImpl *v68;
  int v69;
  unsigned int v70;
  int v71;
  uint64_t v72;
  int v73;
  BOOL v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  int v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  int v87;
  int v88;
  int v89;
  char v90;
  char v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  uint64_t v100;
  JSC::JSObject *v101;
  uint64_t v102;
  int v103;
  uint64_t MoreOutOfLineStorage;
  unsigned int v105;
  unsigned int v106;
  uint64_t v107;
  int v108;
  int v109;
  unint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  uint64_t v118;
  int v119;
  int v120;
  int v121;
  unint64_t v122;
  int v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  __int16 v132;
  uint64_t v133;
  __int16 v134;
  JSC::Heap *v135;
  int v136;
  int v137;
  WTF::StringImpl *v138;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_11;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSHTMLLIElement::s_info + ~((_QWORD)&WebCore::JSHTMLLIElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLLIElement::s_info + ~((_QWORD)&WebCore::JSHTMLLIElement::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 == &WebCore::JSHTMLLIElement::s_info)
  {
LABEL_3:
    result = *(_QWORD *)(v5 + 16 * v10 + 8);
    if (result)
      return result;
  }
  else
  {
    v13 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v13) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v13;
      if (v11 == &WebCore::JSHTMLLIElement::s_info)
        goto LABEL_3;
    }
  }
  v14 = ((unint64_t)&WebCore::JSHTMLElement::s_info + ~((_QWORD)&WebCore::JSHTMLElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLElement::s_info + ~((_QWORD)&WebCore::JSHTMLElement::s_info << 32)) >> 22);
  v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
  v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
  v17 = v6 & ((v16 >> 31) ^ v16);
  v18 = *(char ***)(v5 + 16 * v17);
  if (v18 != &WebCore::JSHTMLElement::s_info)
  {
    v103 = 1;
    while (v18)
    {
      v17 = ((_DWORD)v17 + v103) & v6;
      v18 = *(char ***)(v5 + 16 * v17);
      ++v103;
      if (v18 == &WebCore::JSHTMLElement::s_info)
        goto LABEL_10;
    }
    goto LABEL_11;
  }
LABEL_10:
  v19 = *(_QWORD *)(v5 + 16 * v17 + 8);
  if (!v19)
  {
LABEL_11:
    v20 = (JSC::JSCell *)WebCore::JSElement::prototype(this, a2, a3);
    Structure = WebCore::JSHTMLElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v20);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v23 = (JSC::JSCell *)WebCore::JSHTMLElementPrototype::create(this, a2, Structure, v22);
    v24 = WebCore::JSHTMLElement::createStructure((uint64_t *)this, (uint64_t)a2, v23);
    v19 = WebCore::cacheDOMStructure((JSCell *)a2, v24, (uint64_t)&WebCore::JSHTMLElement::s_info);
  }
  v25 = (unint64_t *)((char *)this + 40136);
  v26 = *(JSC::JSCell **)(v19 + 48);
  LODWORD(v138) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, this);
  }
  v28 = (uint64_t *)((char *)this + 38904);
  v135 = (WebCore::JSElement *)((char *)this + 192);
  SlowCase = *v25;
  if (*v25 < *((_QWORD *)this + 5018))
    goto LABEL_16;
  SlowCase = *((_QWORD *)this + 5019);
  if ((SlowCase & 1) == 0)
  {
    v124 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 5020);
    *((_QWORD *)this + 5018) = SlowCase + HIDWORD(v124);
    *((_QWORD *)this + 5019) = SlowCase + (int)v124;
LABEL_16:
    *v25 = SlowCase + 128;
    goto LABEL_17;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_17:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, this, a2, v26, &v138, &WebCore::JSHTMLLIElementPrototype::s_info, 0, 0);
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*((_QWORD *)this + 4863) < *((_QWORD *)this + 4864))
    goto LABEL_20;
  v30 = *((_QWORD *)this + 4865);
  if ((v30 & 1) == 0)
  {
    v125 = *(_QWORD *)(v30 + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = v30 + HIDWORD(v125);
    *((_QWORD *)this + 4865) = v30 + (int)v125;
LABEL_20:
    *v28 = v30 + 16;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  v31 = (uint64_t *)((char *)this + 37936);
  *(_DWORD *)v30 = 0;
  v32 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v32;
  *(_QWORD *)(v30 + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v30, this);
  WTF::AtomStringImpl::addLiteral();
  v33 = v138;
  v34 = *v31;
  if ((unint64_t)*v31 < *((_QWORD *)this + 4743))
    goto LABEL_26;
  v34 = *((_QWORD *)this + 4744);
  if ((v34 & 1) == 0)
  {
    v126 = *(_QWORD *)(v34 + 8) ^ *((_QWORD *)this + 4745);
    *((_QWORD *)this + 4743) = v34 + HIDWORD(v126);
    *((_QWORD *)this + 4744) = v34 + (int)v126;
LABEL_26:
    *v31 = v34 + 32;
    goto LABEL_27;
  }
  JSC::sanitizeStackForVM();
  v34 = JSC::LocalAllocator::allocateSlowCase();
LABEL_27:
  *(_DWORD *)v34 = 0;
  v35 = *((_QWORD *)this + 5192);
  v36 = *(_DWORD *)(v35 + 8);
  *(_DWORD *)v34 = v35 >> 4;
  *(_DWORD *)(v34 + 4) = v36;
  *(_QWORD *)(v34 + 8) = WebCore::jsHTMLLIElementConstructor;
  *(_QWORD *)(v34 + 16) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  if (v33)
  {
    if (*(_DWORD *)v33 == 2)
      WTF::StringImpl::destroy(v33, v37);
    else
      *(_DWORD *)v33 -= 2;
  }
  WTF::AtomStringImpl::addLiteral();
  v38 = v138;
  v39 = *((_QWORD *)this + 4764);
  if (v39 < *((_QWORD *)this + 4765))
    goto LABEL_33;
  v39 = *((_QWORD *)this + 4766);
  if ((v39 & 1) == 0)
  {
    v127 = *(_QWORD *)(v39 + 8) ^ *((_QWORD *)this + 4767);
    *((_QWORD *)this + 4765) = v39 + HIDWORD(v127);
    *((_QWORD *)this + 4766) = v39 + (int)v127;
LABEL_33:
    *((_QWORD *)this + 4764) = v39 + 48;
    goto LABEL_34;
  }
  JSC::sanitizeStackForVM();
  v39 = JSC::LocalAllocator::allocateSlowCase();
LABEL_34:
  *(_DWORD *)v39 = 0;
  v40 = *((_QWORD *)this + 5193);
  v41 = *(_DWORD *)(v40 + 8);
  *(_DWORD *)v39 = v40 >> 4;
  *(_DWORD *)(v39 + 4) = v41;
  *(_QWORD *)(v39 + 8) = WebCore::jsHTMLLIElement_type;
  *(_QWORD *)(v39 + 16) = WebCore::setJSHTMLLIElement_type;
  *(_QWORD *)(v39 + 24) = &WebCore::JSHTMLLIElement::s_info;
  *(_QWORD *)(v39 + 32) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  if (v38)
  {
    if (*(_DWORD *)v38 == 2)
      WTF::StringImpl::destroy(v38, v42);
    else
      *(_DWORD *)v38 -= 2;
  }
  WTF::AtomStringImpl::addLiteral();
  v43 = v138;
  v44 = *((_QWORD *)this + 4764);
  if (v44 < *((_QWORD *)this + 4765))
    goto LABEL_40;
  v44 = *((_QWORD *)this + 4766);
  if ((v44 & 1) == 0)
  {
    v128 = *(_QWORD *)(v44 + 8) ^ *((_QWORD *)this + 4767);
    *((_QWORD *)this + 4765) = v44 + HIDWORD(v128);
    *((_QWORD *)this + 4766) = v44 + (int)v128;
LABEL_40:
    *((_QWORD *)this + 4764) = v44 + 48;
    goto LABEL_41;
  }
  JSC::sanitizeStackForVM();
  v44 = JSC::LocalAllocator::allocateSlowCase();
LABEL_41:
  *(_DWORD *)v44 = 0;
  v45 = *((_QWORD *)this + 5193);
  v46 = *(_DWORD *)(v45 + 8);
  *(_DWORD *)v44 = v45 >> 4;
  *(_DWORD *)(v44 + 4) = v46;
  *(_QWORD *)(v44 + 8) = WebCore::jsHTMLLIElement_value;
  *(_QWORD *)(v44 + 16) = WebCore::setJSHTMLLIElement_value;
  *(_QWORD *)(v44 + 24) = &WebCore::JSHTMLLIElement::s_info;
  *(_QWORD *)(v44 + 32) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  if (v43)
  {
    if (*(_DWORD *)v43 == 2)
      WTF::StringImpl::destroy(v43, v47);
    else
      *(_DWORD *)v43 -= 2;
  }
  v48 = (uint64_t *)((char *)this + 39696);
  v49 = *(_QWORD *)(*((_QWORD *)this + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v51 = v138;
  v52 = *((_DWORD *)v138 + 4);
  v53 = v138;
  if ((v52 & 3) == 2)
  {
    v53 = v138;
    do
    {
      v53 = (WTF::StringImpl *)*((_QWORD *)v53 + 3);
      v52 = *((_DWORD *)v53 + 4);
    }
    while ((v52 & 3) == 2);
  }
  if ((v52 & 0xC) == 4)
  {
    *((_DWORD *)v53 + 4) = v52 | 8;
    v54 = *((unsigned int *)v53 + 1);
  }
  else if ((v52 & 8) != 0)
  {
    v54 = 0;
  }
  else
  {
    *((_DWORD *)v53 + 4) = v52 | 8;
    v54 = *((unsigned int *)v53 + 1);
    if ((v52 & 4) == 0)
      v54 *= 2;
  }
  v55 = *v48;
  if ((unint64_t)*v48 < *((_QWORD *)this + 4963))
    goto LABEL_50;
  v55 = *((_QWORD *)this + 4964);
  if ((v55 & 1) == 0)
  {
    v129 = *(_QWORD *)(v55 + 8) ^ *((_QWORD *)this + 4965);
    *((_QWORD *)this + 4963) = v55 + HIDWORD(v129);
    *((_QWORD *)this + 4964) = v55 + (int)v129;
LABEL_50:
    *v48 = v55 + 16;
    goto LABEL_51;
  }
  JSC::sanitizeStackForVM();
  v55 = JSC::LocalAllocator::allocateSlowCase();
  v51 = v138;
LABEL_51:
  *(_DWORD *)v55 = *((_QWORD *)this + 5189) >> 4;
  *(_DWORD *)(v55 + 4) = 17302016;
  v138 = 0;
  *(_QWORD *)(v55 + 8) = v51;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if (v54 >= 0x101)
    JSC::Heap::reportExtraMemoryAllocatedSlowCase();
  v56 = v138;
  v138 = 0;
  if (v56)
  {
    if (*(_DWORD *)v56 == 2)
      WTF::StringImpl::destroy(v56, v50);
    else
      *(_DWORD *)v56 -= 2;
  }
  v136 = *(_DWORD *)v30;
  v57 = 16 * (*(_DWORD *)v30 & 0xFFFFFFFE);
  v58 = *(unsigned __int16 *)(v57 + 0x18);
  if (v58 == 65534)
    goto LABEL_139;
  if (v58 == 0xFFFF)
    v58 = *(_DWORD *)(*(_QWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x40) + 84);
  if (v58 < 64)
  {
LABEL_139:
    v137 = 0;
  }
  else
  {
    v59 = (v58 - 64) | ((v58 - 64) >> 1) | (((v58 - 64) | ((v58 - 64) >> 1)) >> 2);
    v60 = v59 | (v59 >> 4) | ((v59 | (v59 >> 4)) >> 8);
    v61 = v60 | HIWORD(v60);
    if ((v58 - 63) >= 5)
      v62 = v61 + 1;
    else
      v62 = 4;
    v137 = v62;
  }
  v63 = *(_QWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x58);
  if (!v63)
    v63 = JSC::Structure::materializePropertyTable((JSC::Structure *)(16 * (v136 & 0xFFFFFFFE)), this);
  v64 = (unsigned __int8 *)(v57 + 15);
  if (__ldaxr((unsigned __int8 *)(v57 + 15)))
  {
    __clrex();
LABEL_68:
    MEMORY[0x19AEA534C](v57 + 15);
    goto LABEL_69;
  }
  if (__stxr(1u, v64))
    goto LABEL_68;
LABEL_69:
  ++*((_DWORD *)this + 229);
  *(_DWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x10) |= 4u;
  if (v63)
  {
    *(_QWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x58) = v63;
    if (*((_DWORD *)this + 190) >= *(unsigned __int8 *)(16 * (v136 & 0xFFFFFFFE) + 7))
      JSC::Heap::writeBarrierSlowPath(v135, (const JSCell *)v57);
  }
  else
  {
    *(_QWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x58) = 0;
  }
  v66 = *(_QWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x40);
  if (!v66 || *(_BYTE *)(v66 + 5) == 1)
    *(_QWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x40) = 0;
  else
    *(_DWORD *)(v66 + 80) = 0;
  v67 = *(unsigned int *)(16 * (v136 & 0xFFFFFFFE) + 0x48);
  *(_DWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x48) = 0;
  if ((_DWORD)v67)
  {
    v68 = (WTF::StringImpl *)(16 * v67);
    v69 = *(_DWORD *)(16 * v67) - 2;
    if (v69)
      *(_DWORD *)v68 = v69;
    else
      WTF::StringImpl::destroy(v68, v50);
  }
  v70 = *(_DWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x10) & 0xFFFFFF9F;
  *(_DWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x10) = v70 | 0x40;
  if (*(_QWORD *)(*((_QWORD *)this + 5244) + 16) == v49)
    *(_DWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x10) = v70 | 0x20000040;
  v71 = *(unsigned __int8 *)(16 * (v136 & 0xFFFFFFFE) + 0xE);
  v72 = *(_QWORD *)(v63 + 32);
  if (v72 && (v107 = *(unsigned int *)(v72 + 12), (_DWORD)v107))
  {
    v77 = *(_DWORD *)(*(_QWORD *)v72 + 4 * v107 - 4);
    *(_DWORD *)(v72 + 12) = v107 - 1;
  }
  else
  {
    v73 = *(_DWORD *)(v63 + 24);
    v74 = __OFSUB__(v73, v71);
    v75 = v73 - v71;
    v90 = (v75 < 0) ^ v74;
    v76 = v75 + 64;
    if (v90)
      v77 = *(_DWORD *)(v63 + 24);
    else
      v77 = v76;
  }
  v78 = *(_DWORD *)(v49 + 16);
  v79 = v78;
  if ((v78 & 0x20) != 0)
    v79 = *(_DWORD *)(v49 + 32);
  v80 = *(_DWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x1C) ^ (v79 >> 8);
  v81 = *(_DWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x20) | (v49 >> 4);
  *(_DWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x1C) = v80;
  *(_DWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x20) = v81;
  v82 = *(_QWORD *)(v63 + 16);
  v83 = v82 & 0xFFFFFFFFFFFFFFFELL;
  v84 = *(unsigned int *)(v63 + 8);
  if ((v82 & 1) != 0)
  {
    if ((v78 & 0x20) != 0)
      v78 = *(_DWORD *)(v49 + 32);
    v85 = *(_DWORD *)(v63 + 12);
    v86 = (v78 >> 8) & *(_QWORD *)&v85;
    v87 = *(unsigned __int8 *)(v83 + v86);
    if (*(_BYTE *)(v83 + v86))
    {
      v88 = 1;
      while (v49 != (*(_QWORD *)(v83 + v84 + 8 * (v87 - 1)) & 0xFFFFFFFFFFFFLL))
      {
        v86 = ((_DWORD)v86 + v88) & v85;
        v87 = *(unsigned __int8 *)(v83 + v86);
        ++v88;
        if (!*(_BYTE *)(v83 + v86))
          goto LABEL_92;
      }
      goto LABEL_103;
    }
LABEL_92:
    *(_DWORD *)v49 += 2;
    v89 = *(_DWORD *)(v63 + 24);
    v90 = (v82 & 1) == 0 || v77 < 256;
    if (v90)
      v91 = 1;
    else
      v91 = 0;
    if (*(_DWORD *)(v63 + 28) + v89 >= v84 >> 1 || (v91 & 1) == 0)
    {
      JSC::PropertyTable::rehash((JSC::PropertyTable *)v63, this, v89 + 1, v77 < 256);
      v82 = *(_QWORD *)(v63 + 16);
      v83 = v82 & 0xFFFFFFFFFFFFFFFELL;
      v114 = *(unsigned int *)(v63 + 8);
      v115 = *(_DWORD *)(v49 + 16);
      if ((v82 & 1) != 0)
      {
        if ((v115 & 0x20) != 0)
          v115 = *(_DWORD *)(v49 + 32);
        v116 = *(_DWORD *)(v63 + 12);
        v86 = (v115 >> 8) & *(_QWORD *)&v116;
        v117 = *(unsigned __int8 *)(v83 + v86);
        if (*(_BYTE *)(v83 + v86))
        {
          v118 = v83 + v114;
          v119 = 1;
          do
          {
            if (v49 == (*(_QWORD *)(v118 + 8 * (v117 - 1)) & 0xFFFFFFFFFFFFLL))
              break;
            v86 = ((_DWORD)v86 + v119) & v116;
            v117 = *(unsigned __int8 *)(v83 + v86);
            ++v119;
          }
          while (*(_BYTE *)(v83 + v86));
        }
      }
      else
      {
        if ((v115 & 0x20) != 0)
          v115 = *(_DWORD *)(v49 + 32);
        v120 = *(_DWORD *)(v63 + 12);
        LODWORD(v86) = v120 & (v115 >> 8);
        v121 = *(_DWORD *)(v83 + 4 * v86);
        if (v121)
        {
          v122 = v83 + 4 * v114;
          v123 = 1;
          do
          {
            if (v49 == *(_QWORD *)(v122 + 16 * (v121 - 1)))
              break;
            LODWORD(v86) = (v86 + v123) & v120;
            v121 = *(_DWORD *)(v83 + 4 * v86);
            ++v123;
          }
          while (v121);
        }
      }
    }
    v92 = *(_DWORD *)(v63 + 28) + *(_DWORD *)(v63 + 24);
    v93 = v92 + 1;
    if ((v82 & 1) != 0)
    {
      *(_BYTE *)(v83 + v86) = v93;
      *(_QWORD *)(v83 + *(unsigned int *)(v63 + 8) + 8 * v92) = v49 | ((unint64_t)((v77 << 8) | 6u) << 48);
    }
    else
    {
      *(_DWORD *)(v83 + 4 * v86) = v93;
      v113 = v83 + 4 * *(unsigned int *)(v63 + 8) + 16 * v92;
      *(_QWORD *)v113 = v49;
      *(_DWORD *)(v113 + 8) = v77;
      *(_BYTE *)(v113 + 12) = 6;
    }
    ++*(_DWORD *)(v63 + 24);
    goto LABEL_103;
  }
  if ((v78 & 0x20) != 0)
    v78 = *(_DWORD *)(v49 + 32);
  v108 = *(_DWORD *)(v63 + 12);
  LODWORD(v86) = v108 & (v78 >> 8);
  v109 = *(_DWORD *)(v83 + 4 * v86);
  if (!v109)
    goto LABEL_92;
  v110 = v83 + 4 * v84;
  v111 = 1;
  while (1)
  {
    v112 = (v109 - 1);
    if (v49 == *(_QWORD *)(v110 + 16 * v112))
      break;
    LODWORD(v86) = (v86 + v111) & v108;
    v109 = *(_DWORD *)(v83 + 4 * v86);
    ++v111;
    if (!v109)
      goto LABEL_92;
  }
  if (*(_DWORD *)(v110 + 16 * v112 + 8) == -1)
    goto LABEL_92;
LABEL_103:
  v94 = *(unsigned __int16 *)(16 * (v136 & 0xFFFFFFFE) + 0x18);
  if (v94 == 65534)
  {
    v96 = -1;
    v95 = v137;
  }
  else
  {
    v95 = v137;
    if (v94 == 0xFFFF)
      v96 = *(_DWORD *)(*(_QWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x40) + 84);
    else
      v96 = *(unsigned __int16 *)(16 * (v136 & 0xFFFFFFFE) + 0x18);
  }
  if (v77 <= v96)
    v97 = v96;
  else
    v97 = v77;
  if (v97 < 64)
  {
    v98 = 0;
  }
  else if ((v97 - 63) >= 5)
  {
    v105 = (v97 - 64) | ((v97 - 64) >> 1) | (((v97 - 64) | ((v97 - 64) >> 1)) >> 2);
    v106 = v105 | (v105 >> 4) | ((v105 | (v105 >> 4)) >> 8);
    v98 = (v106 | HIWORD(v106)) + 1;
  }
  else
  {
    v98 = 4;
  }
  if (v98 != v95)
  {
    MoreOutOfLineStorage = JSC::JSObject::allocateMoreOutOfLineStorage((JSC::JSObject *)v30, this);
    JSC::JSObject::nukeStructureAndSetButterfly((JSCell *)v30, (uint64_t)this, v136, MoreOutOfLineStorage);
    if (v97 == -1)
    {
      v134 = -2;
    }
    else
    {
      if (v97 <= 65533)
      {
        *(_WORD *)(16 * (v136 & 0xFFFFFFFE) + 0x18) = v97;
LABEL_150:
        __dmb(0xAu);
        *(_DWORD *)v30 = v136;
        goto LABEL_116;
      }
      v133 = *(_QWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x40);
      if (*(__int16 *)(16 * (v136 & 0xFFFFFFFE) + 0x18) == -1)
      {
        *(_DWORD *)(v133 + 84) = v97;
        goto LABEL_150;
      }
      if (!v133 || *(_BYTE *)(v133 + 5) == 1)
      {
        JSC::Structure::allocateRareData((JSC::Structure *)v57, this);
        v133 = *(_QWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x40);
      }
      *(_DWORD *)(v133 + 84) = v97;
      __dmb(0xAu);
      v134 = -1;
    }
    *(_WORD *)(16 * (v136 & 0xFFFFFFFE) + 0x18) = v134;
    goto LABEL_150;
  }
  if (v97 == -1)
  {
    v132 = -2;
  }
  else
  {
    if (v97 <= 65533)
    {
      *(_WORD *)(16 * (v136 & 0xFFFFFFFE) + 0x18) = v97;
      goto LABEL_116;
    }
    v131 = *(_QWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x40);
    if (v94 == 0xFFFF)
    {
      *(_DWORD *)(v131 + 84) = v97;
      goto LABEL_116;
    }
    if (!v131 || *(_BYTE *)(v131 + 5) == 1)
    {
      JSC::Structure::allocateRareData((JSC::Structure *)v57, this);
      v131 = *(_QWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x40);
    }
    *(_DWORD *)(v131 + 84) = v97;
    __dmb(0xAu);
    v132 = -1;
  }
  *(_WORD *)(16 * (v136 & 0xFFFFFFFE) + 0x18) = v132;
LABEL_116:
  v99 = __ldxr(v64);
  if (v99 == 1)
  {
    if (!__stlxr(0, v64))
      goto LABEL_121;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)(v57 + 15));
LABEL_121:
  --*((_DWORD *)this + 229);
  if (*((_BYTE *)this + 1198) || *(_BYTE *)(MEMORY[0x1E0CC10F8] + 1489))
    JSC::Heap::decrementDeferralDepthAndGCIfNeededSlow(v135);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  if (v77 <= 63)
  {
    v100 = v30 + 16;
  }
  else
  {
    v100 = *(_QWORD *)(v30 + 8) - 8;
    v77 = 63 - v77;
  }
  *(_QWORD *)(v100 + 8 * v77) = v55;
  if ((v55 & 0xFFFE000000000002) == 0 && *((_DWORD *)this + 190) >= *(unsigned __int8 *)(v30 + 7))
    JSC::Heap::writeBarrierSlowPath(v135, (const JSCell *)v30);
  *(_DWORD *)(16 * (v136 & 0xFFFFFFFE) + 0x10) |= 0x10u;
  LODWORD(v138) = 241;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v101 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v101)
      JSC::JSObject::didBecomePrototype(v101, this);
  }
  v102 = *v25;
  if (*v25 >= *((_QWORD *)this + 5018))
  {
    v102 = *((_QWORD *)this + 5019);
    if ((v102 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v102 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_135;
    }
    v130 = *(_QWORD *)(v102 + 8) ^ *((_QWORD *)this + 5020);
    *((_QWORD *)this + 5018) = v102 + HIDWORD(v130);
    *((_QWORD *)this + 5019) = v102 + (int)v130;
  }
  *v25 = v102 + 128;
LABEL_135:
  *(_DWORD *)v102 = 0;
  MEMORY[0x19AEA4278](v102, this, a2, v30, &v138, &WebCore::JSHTMLLIElement::s_info, 0, 0);
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  return WebCore::cacheDOMStructure((JSCell *)a2, v102, (uint64_t)&WebCore::JSHTMLLIElement::s_info);
}

uint64_t WebCore::JSHTMLLinkElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLPreElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLMapElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLMarqueeElement>(WebCore::JSHTMLMarqueeElement *a1, JSC::VM *a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSHTMLMarqueeElement::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSHTMLMarqueeElement::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSHTMLMarqueeElement::s_info);
  }
  return result;
}

uint64_t WebCore::JSHTMLMenuElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLMetaElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLMeterElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLModelElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLObjectElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLOptGroupElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLParagraphElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLParamElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLPictureElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLProgressElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLSelectElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLSlotElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLSourceElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLSpanElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLStyleElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::createWrapper<WebCore::HTMLTableSectionElement,WebCore::HTMLTableSectionElement>(uint64_t a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t SlowCase;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *Allocator;
  uint64_t v18;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  WTF *v24;
  void *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *a2;
  v6 = WebCore::getDOMStructure<WebCore::JSHTMLTableSectionElement>(*(WebCore::JSHTMLTableSectionElement **)(a1 + 56), (JSC::VM *)a1, a3);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(v7 + 41456);
  v9 = *(_QWORD *)(v8 + 23536);
  v10 = *(_QWORD **)(v9 + 4704);
  if (!v10)
  {
    v20 = *(_QWORD *)(v8 + 22648);
    if (__ldaxr((unsigned __int8 *)v20))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v20))
    {
LABEL_24:
      v22 = *(_QWORD *)(v20 + 2824);
      v33 = *(_QWORD *)(v22 + 4704);
      if (!v33)
      {
        v31 = 40;
        std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", v7 + 192, v7 + 1872, &v31, JSC::JSCell::numberOfLowerTierCells, &v32);
        v27 = v32;
        v33 = v32;
        v28 = *(_QWORD *)(v22 + 4704);
        *(_QWORD *)(v22 + 4704) = v32;
        if (v28)
          (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
        v29 = *(unsigned int *)(v20 + 2844);
        if ((_DWORD)v29 == *(_DWORD *)(v20 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v20 + 2832, (unint64_t)&v33);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v20 + 2832) + 8 * v29) = v27;
          *(_DWORD *)(v20 + 2844) = v29 + 1;
        }
      }
      v10 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v23 = *(_QWORD *)(v9 + 4704);
      *(_QWORD *)(v9 + 4704) = v10;
      if (v23)
      {
        v24 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v24, v25);
      }
      v26 = __ldxr((unsigned __int8 *)v20);
      if (v26 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v20))
          goto LABEL_2;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v20);
      goto LABEL_2;
    }
    MEMORY[0x19AEA534C](v20);
    goto LABEL_24;
  }
LABEL_2:
  SlowCase = v10[3];
  if (SlowCase < v10[4])
  {
LABEL_3:
    v10[3] = SlowCase + 48;
    goto LABEL_4;
  }
  SlowCase = v10[5];
  if ((SlowCase & 1) == 0)
  {
    v30 = *(_QWORD *)(SlowCase + 8) ^ v10[6];
    v10[4] = SlowCase + HIDWORD(v30);
    v10[5] = SlowCase + (int)v30;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_4:
  *(_DWORD *)SlowCase = 0;
  v12 = *a2;
  *a2 = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v6);
  *(_QWORD *)(SlowCase + 24) = v12;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v7 + 755))
    __dmb(0xAu);
  v13 = *(_QWORD *)(a1 + 3320);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v5)
    v14 = (uint64_t *)(v5 + 8);
  else
    v14 = 0;
  if (*(_DWORD *)(v13 + 48))
  {
    v33 = v5;
    JSC::Weak<JSC::JSObject>::Weak(&v32, SlowCase, (uint64_t)&WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner, v13);
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v13 + 32), &v33, &v32);
    v18 = v32;
    if (!v32)
      return SlowCase;
LABEL_39:
    *(_QWORD *)(v18 + 8) = 3;
    return SlowCase;
  }
  if ((SlowCase & 8) != 0)
    v15 = (SlowCase - 112) | 1;
  else
    v15 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v15 & 1) != 0)
    v16 = v15 + 47;
  else
    v16 = *(_QWORD *)v15 + 32;
  Allocator = *(_QWORD **)(v16 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v16 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  Allocator[2] = v13;
  v18 = *v14;
  *v14 = (uint64_t)Allocator;
  if (v18)
    goto LABEL_39;
  return SlowCase;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLTableSectionElement>(WebCore::JSHTMLTableSectionElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  int v13;
  uint64_t *v14;
  unint64_t Prototype;
  unint64_t v16;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  unint64_t v19;
  int v20;

  v5 = *((_QWORD *)a2 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLTableSectionElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLTableSectionElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLTableSectionElement::s_info
                                                                          + ~((_QWORD)&WebCore::JSHTMLTableSectionElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLTableSectionElement::s_info)
    {
LABEL_3:
      result = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (result)
        return result;
    }
    else
    {
      v13 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v13) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v13;
        if (v11 == &WebCore::JSHTMLTableSectionElement::s_info)
          goto LABEL_3;
      }
    }
  }
  v14 = (uint64_t *)((char *)this + 40136);
  Prototype = WebCore::JSHTMLTableSectionElement::createPrototype(this, a2, a3);
  v16 = Prototype;
  v20 = 241;
  if ((Prototype & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)Prototype);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, this);
  }
  SlowCase = *v14;
  if ((unint64_t)*v14 >= *((_QWORD *)this + 5018))
  {
    SlowCase = *((_QWORD *)this + 5019);
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_14;
    }
    v19 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 5020);
    *((_QWORD *)this + 5018) = SlowCase + HIDWORD(v19);
    *((_QWORD *)this + 5019) = SlowCase + (int)v19;
  }
  *v14 = SlowCase + 128;
LABEL_14:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, this, a2, v16, &v20, &WebCore::JSHTMLTableSectionElement::s_info, 0, 0);
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  return WebCore::cacheDOMStructure((JSCell *)a2, SlowCase, (uint64_t)&WebCore::JSHTMLTableSectionElement::s_info);
}

unint64_t WebCore::createWrapper<WebCore::HTMLTableCellElement,WebCore::HTMLTableCellElement>(uint64_t *a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t SlowCase;
  WTF *v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *Allocator;
  uint64_t v18;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  WTF *v24;
  void *v25;
  int v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  WTF *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  WTF *v36;

  v5 = *a2;
  v6 = WebCore::getDOMStructure<WebCore::JSHTMLTableCellElement>(a1[7], (JSC::VM *)a1, a3);
  v7 = a1[7];
  v8 = *(_QWORD *)(v7 + 41456);
  v9 = *(_QWORD *)(v8 + 23536);
  v10 = *(_QWORD **)(v9 + 4672);
  if (!v10)
  {
    v20 = *(_QWORD *)(v8 + 22648);
    if (__ldaxr((unsigned __int8 *)v20))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v20))
    {
LABEL_24:
      v22 = *(_QWORD *)(v20 + 2824);
      v34 = *(_QWORD *)(v22 + 4672);
      if (!v34)
      {
        v27 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)&v36, "IsoSpace T");
        v35 = 0;
        MEMORY[0x19AEA3204](v27, &v36, v7 + 192, v7 + 1872, 40, 8, &v35);
        v29 = v35;
        v35 = 0;
        if (v29)
          (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
        v30 = v36;
        v36 = 0;
        if (v30)
        {
          if (*(_DWORD *)v30 == 1)
            WTF::fastFree(v30, v28);
          else
            --*(_DWORD *)v30;
        }
        v34 = v27;
        v31 = *(_QWORD *)(v22 + 4672);
        *(_QWORD *)(v22 + 4672) = v27;
        if (v31)
          (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
        v32 = *(unsigned int *)(v20 + 2844);
        if ((_DWORD)v32 == *(_DWORD *)(v20 + 2840))
        {
          WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v20 + 2832, (unint64_t)&v34);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v20 + 2832) + 8 * v32) = v27;
          *(_DWORD *)(v20 + 2844) = v32 + 1;
        }
      }
      v10 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v23 = *(_QWORD *)(v9 + 4672);
      *(_QWORD *)(v9 + 4672) = v10;
      if (v23)
      {
        v24 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v24, v25);
      }
      v26 = __ldxr((unsigned __int8 *)v20);
      if (v26 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v20))
          goto LABEL_2;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v20);
      goto LABEL_2;
    }
    MEMORY[0x19AEA534C](v20);
    goto LABEL_24;
  }
LABEL_2:
  SlowCase = v10[3];
  if (SlowCase < v10[4])
  {
LABEL_3:
    v10[3] = SlowCase + 48;
    goto LABEL_4;
  }
  SlowCase = v10[5];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v10[6];
    v10[4] = SlowCase + HIDWORD(v33);
    v10[5] = SlowCase + (int)v33;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_4:
  *(_DWORD *)SlowCase = 0;
  v12 = *a2;
  *a2 = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v6);
  *(_QWORD *)(SlowCase + 24) = v12;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*(_BYTE *)(v7 + 755))
    __dmb(0xAu);
  v13 = a1[415];
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v5)
    v14 = (uint64_t *)((char *)v5 + 8);
  else
    v14 = 0;
  if (*(_DWORD *)(v13 + 48))
  {
    v36 = v5;
    JSC::Weak<JSC::JSObject>::Weak(&v35, SlowCase, (uint64_t)&WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner, v13);
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v13 + 32), (uint64_t *)&v36, &v35);
    v18 = v35;
    if (!v35)
      return SlowCase;
LABEL_44:
    *(_QWORD *)(v18 + 8) = 3;
    return SlowCase;
  }
  if ((SlowCase & 8) != 0)
    v15 = (SlowCase - 112) | 1;
  else
    v15 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v15 & 1) != 0)
    v16 = v15 + 47;
  else
    v16 = *(_QWORD *)v15 + 32;
  Allocator = *(_QWORD **)(v16 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v16 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  Allocator[2] = v13;
  v18 = *v14;
  *v14 = (uint64_t)Allocator;
  if (v18)
    goto LABEL_44;
  return SlowCase;
}

uint64_t WebCore::JSHTMLTemplateElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::createWrapper<WebCore::HTMLTextAreaElement,WebCore::HTMLElement>(uint64_t a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *a2;
  *a2 = 0;
  v6 = v3;
  v4 = WebCore::createWrapper<WebCore::HTMLTextAreaElement,WebCore::HTMLTextAreaElement>(a1, &v6, a3);
  WTF::Ref<WebCore::HTMLElement,WTF::RawPtrTraits<WebCore::HTMLElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLElement>>::~Ref(&v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::HTMLTextAreaElement,WebCore::HTMLTextAreaElement>(uint64_t a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = WebCore::getDOMStructure<WebCore::JSHTMLTextAreaElement>(*(WebCore::JSHTMLElement **)(a1 + 56), (JSC::VM *)a1, a3);
  v7 = WebCore::JSHTMLTextAreaElement::create(v6, (JSC::VM *)a1, (uint64_t)a2);
  WebCore::cacheWrapper<WebCore::HTMLQuoteElement,WebCore::JSHTMLQuoteElement>(*(_QWORD *)(a1 + 3320), v5, v7);
  return v7;
}

uint64_t WebCore::JSHTMLTextAreaElement::create(uint64_t a1, JSC::VM *a2, uint64_t a3)
{
  WebCore::JSHTMLTextAreaElement *v6;
  unint64_t v7;
  uint64_t result;

  v6 = (WebCore::JSHTMLTextAreaElement *)*((_QWORD *)a2 + 7);
  v7 = JSC::allocateCell<WebCore::JSHTMLTextAreaElement>(v6, a2);
  result = WebCore::JSHTMLTextAreaElement::JSHTMLTextAreaElement(v7, a1, a2, a3);
  if (*((_BYTE *)v6 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLTextAreaElement>(WebCore::JSHTMLElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  int v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_9;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSHTMLTextAreaElement::s_info
      + ~((_QWORD)&WebCore::JSHTMLTextAreaElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLTextAreaElement::s_info
                                                                    + ~((_QWORD)&WebCore::JSHTMLTextAreaElement::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSHTMLTextAreaElement::s_info)
  {
    v13 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v13) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v13;
      if (v11 == &WebCore::JSHTMLTextAreaElement::s_info)
        goto LABEL_3;
    }
    goto LABEL_9;
  }
LABEL_3:
  result = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!result)
  {
LABEL_9:
    v14 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(this, a2, a3);
    Structure = WebCore::JSHTMLTextAreaElementPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSHTMLTextAreaElementPrototype::create(this, a2, Structure, v16);
    v18 = WebCore::JSHTMLTextAreaElement::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    return WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSHTMLTextAreaElement::s_info);
  }
  return result;
}

unint64_t JSC::allocateCell<WebCore::JSHTMLTextAreaElement>(WebCore::JSHTMLTextAreaElement *a1, JSC::VM *a2)
{
  _QWORD *v2;
  unint64_t result;
  unint64_t v4;

  v2 = (_QWORD *)WebCore::JSHTMLTextAreaElement::subspaceForImpl(a1, a2);
  result = v2[3];
  if (result >= v2[4])
  {
    result = v2[5];
    if ((result & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      result = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_3;
    }
    v4 = *(_QWORD *)(result + 8) ^ v2[6];
    v2[4] = result + HIDWORD(v4);
    v2[5] = result + (int)v4;
  }
  v2[3] = result + 48;
LABEL_3:
  *(_DWORD *)result = 0;
  return result;
}

uint64_t WebCore::JSHTMLTextAreaElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::createWrapper<WebCore::HTMLTimeElement,WebCore::HTMLElement>(JSC::VM *a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  WebCore::JSHTMLElement *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  WebCore::JSHTMLTimeElement *v20;
  _QWORD *v21;
  unint64_t SlowCase;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *Allocator;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v4 = *(_QWORD *)a2;
  *(_QWORD *)a2 = 0;
  v5 = *((_QWORD *)a1 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLTimeElement::s_info + ~((_QWORD)&WebCore::JSHTMLTimeElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLTimeElement::s_info + ~((_QWORD)&WebCore::JSHTMLTimeElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLTimeElement::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSHTMLTimeElement::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = (WebCore::JSHTMLElement *)*((_QWORD *)a1 + 7);
  v15 = (JSC::JSCell *)WebCore::JSHTMLElement::prototype(v14, a1, a3);
  Structure = WebCore::JSHTMLTimeElementPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v18 = (JSC::JSCell *)WebCore::JSHTMLTimeElementPrototype::create(v14, a1, Structure, v17);
  v19 = WebCore::JSHTMLTimeElement::createStructure((uint64_t *)v14, (uint64_t)a1, v18);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSHTMLTimeElement::s_info);
LABEL_8:
  v20 = (WebCore::JSHTMLTimeElement *)*((_QWORD *)a1 + 7);
  v21 = (_QWORD *)WebCore::JSHTMLTimeElement::subspaceForImpl(v20, a2);
  SlowCase = v21[3];
  if (SlowCase < v21[4])
  {
LABEL_9:
    v21[3] = SlowCase + 48;
    goto LABEL_10;
  }
  SlowCase = v21[5];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v21[6];
    v21[4] = SlowCase + HIDWORD(v33);
    v21[5] = SlowCase + (int)v33;
    goto LABEL_9;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_10:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  *(_QWORD *)(SlowCase + 24) = v4;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v20 + 755))
    __dmb(0xAu);
  v23 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner = (uint64_t)&off_1E3393950;
  }
  if (v4)
    v24 = (uint64_t *)(v4 + 8);
  else
    v24 = 0;
  if (!*(_DWORD *)(v23 + 48))
  {
    if ((SlowCase & 8) != 0)
      v25 = (SlowCase - 112) | 1;
    else
      v25 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
    Allocator[2] = v23;
    v28 = *v24;
    *v24 = (uint64_t)Allocator;
    if (!v28)
      return SlowCase;
LABEL_35:
    *(_QWORD *)(v28 + 8) = 3;
    return SlowCase;
  }
  v35 = v4;
  if ((SlowCase & 8) != 0)
    v30 = (SlowCase - 112) | 1;
  else
    v30 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v30 & 1) != 0)
    v31 = v30 + 47;
  else
    v31 = *(_QWORD *)v30 + 32;
  v32 = *(_QWORD **)(v31 + 16);
  if (!v32)
    v32 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v31 + 16) = *v32;
  *v32 = SlowCase;
  v32[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::Node *)::owner;
  v32[2] = v23;
  v34 = v32;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v23 + 32), &v35, (uint64_t *)&v34);
  v28 = (uint64_t)v34;
  if (v34)
    goto LABEL_35;
  return SlowCase;
}

uint64_t WebCore::JSHTMLTimeElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLTableRowElement>(WebCore::JSHTMLTableRowElement *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  int v13;
  uint64_t *v14;
  unint64_t Prototype;
  unint64_t v16;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  unint64_t v19;
  int v20;

  v5 = *((_QWORD *)a2 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSHTMLTableRowElement::s_info
        + ~((_QWORD)&WebCore::JSHTMLTableRowElement::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLTableRowElement::s_info
                                                                      + ~((_QWORD)&WebCore::JSHTMLTableRowElement::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSHTMLTableRowElement::s_info)
    {
LABEL_3:
      result = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (result)
        return result;
    }
    else
    {
      v13 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v13) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v13;
        if (v11 == &WebCore::JSHTMLTableRowElement::s_info)
          goto LABEL_3;
      }
    }
  }
  v14 = (uint64_t *)((char *)this + 40136);
  Prototype = WebCore::JSHTMLTableRowElement::createPrototype(this, a2, a3);
  v16 = Prototype;
  v20 = 241;
  if ((Prototype & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)Prototype);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, this);
  }
  SlowCase = *v14;
  if ((unint64_t)*v14 >= *((_QWORD *)this + 5018))
  {
    SlowCase = *((_QWORD *)this + 5019);
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_14;
    }
    v19 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 5020);
    *((_QWORD *)this + 5018) = SlowCase + HIDWORD(v19);
    *((_QWORD *)this + 5019) = SlowCase + (int)v19;
  }
  *v14 = SlowCase + 128;
LABEL_14:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, this, a2, v16, &v20, &WebCore::JSHTMLTableRowElement::s_info, 0, 0);
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  return WebCore::cacheDOMStructure((JSCell *)a2, SlowCase, (uint64_t)&WebCore::JSHTMLTableRowElement::s_info);
}

uint64_t WebCore::JSHTMLTrackElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLUListElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLVideoElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::jsHTMLEmbedElementPrototypeFunction_getSVGDocument(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  JSC::JSGlobalObject *v15;
  WebCore::Document *v16;
  void *v17;
  unint64_t v18;
  WebCore::Node *v19;
  uint64_t v20;
  WebCore::Node *v21;

  v4 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "HTMLEmbedElement", "getSVGDocument");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLEmbedElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLEmbedElement::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "HTMLEmbedElement", "getSVGDocument");
  v11 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 112);
  if (!v11)
    return 2;
  v12 = *(_QWORD *)(v11 + 8);
  if (!v12)
    return 2;
  if (*(_BYTE *)(v12 + 144))
    return 2;
  v14 = *(_QWORD *)(v12 + 296);
  if (!v14)
    return 2;
  if ((*(_WORD *)(v14 + 3358) & 0x20) == 0)
    return 2;
  v15 = *(JSC::JSGlobalObject **)(v5 + 40);
  if (!WebCore::canAccessDocument((uint64_t)this, *(WTF::StringImpl **)(*(_QWORD *)(v14 + 40) + 8), 1))
    return 2;
  result = WebCore::cachedDocumentWrapper((WebCore::DOMWrapperWorld **)this, v15, (WebCore::JSDOMGlobalObject *)v14, v16);
  if (!result)
  {
    *(_DWORD *)(v14 + 24) += 2;
    v21 = (WebCore::Node *)v14;
    v18 = WebCore::toJSNewlyCreated((uint64_t)this, v15, &v21);
    v19 = v21;
    v21 = 0;
    if (v19)
    {
      if (*((_DWORD *)v19 + 6) == 2)
      {
        if ((*((_WORD *)v19 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v19, v17);
      }
      else
      {
        *((_DWORD *)v19 + 6) -= 2;
      }
    }
    return v18;
  }
  return result;
}

uint64_t WebCore::jsHTMLFieldSetElementPrototypeFunction_checkValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v4 = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSHTMLFieldSetElement *>(v4);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v7, "HTMLFieldSetElement", "checkValidity");
  if (WebCore::ValidatedFormListedElement::checkValidity((_BYTE *)(*(_QWORD *)(v5 + 24) + 112), 0))
    return 7;
  return 6;
}

uint64_t WebCore::jsHTMLFieldSetElementPrototypeFunction_reportValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v4 = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSHTMLFieldSetElement *>(v4);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v7, "HTMLFieldSetElement", "reportValidity");
  if (WebCore::ValidatedFormListedElement::reportValidity((WebCore::ValidatedFormListedElement *)(*(_QWORD *)(v5 + 24) + 112)))
    return 7;
  return 6;
}

_BYTE *WebCore::jsHTMLFieldSetElementPrototypeFunction_setCustomValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  JSValue v18;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v20;
  uint64_t v21;
  int v22;
  WTF::StringImpl *v23;
  uint64_t v24;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSHTMLFieldSetElement *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "HTMLFieldSetElement", "setCustomValidity");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException(v5, this, v18);
  }
  v8 = *(_QWORD *)(v6 + 24);
  v9 = *((_QWORD *)a2 + 6);
  v24 = v9;
  if ((v9 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v9 + 5) == 2)
  {
    v10 = *(WTF::StringImpl **)(v9 + 8);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, this);
      if (!v10)
        goto LABEL_8;
    }
    else if (!v10)
    {
LABEL_8:
      v23 = v10;
      goto LABEL_9;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_8;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v24, this);
LABEL_9:
  if (*((_DWORD *)v5 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v11 = v23;
    if (hasExceptionsAfterHandlingTraps)
    {
      v22 = 1;
      v23 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v7);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
      goto LABEL_20;
    }
  }
  else
  {
    v11 = v23;
  }
  v22 = 0;
  v21 = 0;
  if (v11)
    *(_DWORD *)v11 += 2;
  v12 = *(WTF::StringImpl **)(v8 + 144);
  *(_QWORD *)(v8 + 144) = v11;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v7);
    else
      *(_DWORD *)v12 -= 2;
  }
  WebCore::ValidatedFormListedElement::updateValidity(v8 + 112);
  if (!v11)
    goto LABEL_26;
  if (*(_DWORD *)v11 == 2)
  {
    WTF::StringImpl::destroy(v11, v13);
LABEL_26:
    v14 = 0;
    goto LABEL_19;
  }
  v14 = 0;
  *(_DWORD *)v11 -= 2;
LABEL_19:
  v15 = 10;
LABEL_20:
  ((void (*)(uint64_t *, uint64_t *))off_1E329F280[v14])(&v24, &v21);
  return (_BYTE *)v15;
}

unint64_t JSC::jsDynamicCast<WebCore::JSHTMLFieldSetElement *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSHTMLFieldSetElement::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSHTMLFieldSetElement::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

double WebCore::jsHTMLFormControlsCollectionPrototypeFunction_namedItem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLFormControlsCollection *v11;
  JSC::JSRopeString *v12;
  JSC::JSRopeString *v13;
  WTF::AtomStringImpl *v14;
  uint64_t *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WebCore::Element *v18;
  __n128 v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSValue v22;
  uint64_t v23;
  uint64_t **v24;
  uint64_t v25;
  WebCore::Element *v26;
  JSC::VM *v28;
  WTF::StringImpl *v29;
  char v30[8];
  unsigned int v31;
  char v32;
  char v33[8];
  int v34;
  _QWORD v35[5];
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39[5];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v28 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    goto LABEL_38;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFormControlsCollection::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFormControlsCollection::s_info && v8 != 0);
  }
  if (!v7)
  {
LABEL_38:
    WebCore::throwThisTypeError((int)this, (int)&v28, "HTMLFormControlsCollection", "namedItem");
    return v19.n128_f64[0];
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    JSC::VM::throwException(v4, this, v22);
    return v19.n128_f64[0];
  }
  v11 = *(WebCore::HTMLFormControlsCollection **)(v5 + 24);
  v12 = (JSC::JSRopeString *)*((_QWORD *)a2 + 6);
  v35[0] = v12;
  if (((unint64_t)v12 & 0xFFFE000000000002) != 0 || (v13 = v12, *((_BYTE *)v12 + 5) != 2))
    v13 = (JSC::JSRopeString *)JSC::JSValue::toStringSlowCase((JSC::JSValue *)v35, this);
  v14 = (WTF::AtomStringImpl *)*((_QWORD *)v13 + 1);
  if ((v14 & 1) != 0)
  {
    JSC::JSRopeString::resolveRopeToExistingAtomString(v13, this);
  }
  else
  {
    if ((*((_BYTE *)v14 + 16) & 0x10) != 0)
    {
      *(_DWORD *)v14 += 2;
      goto LABEL_20;
    }
    WTF::AtomStringImpl::lookUpSlowCase(v14, a2);
  }
  v14 = (WTF::AtomStringImpl *)v39[0];
LABEL_20:
  v15 = *(uint64_t **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v29 = v14;
  WebCore::HTMLFormControlsCollection::namedItemOrItems(v11, (const WTF::AtomString *)&v29, (uint64_t)v30);
  if (v32)
  {
    v33[0] = 0;
    v34 = -1;
    v20 = v31;
    if (v31 == -1)
    {
      v20 = -1;
    }
    else
    {
      ((void (*)(uint64_t **, char *, char *))off_1E329B790[v31])(v39, v33, v30);
      v34 = v20;
    }
    LOBYTE(v36) = 0;
    v37 = 0;
    v38 = v20;
    v39[0] = &v38;
    v39[1] = &v36;
    v39[2] = (uint64_t *)this;
    v39[3] = v15;
    v39[4] = (uint64_t *)v33;
    v19 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_13RadioNodeListEEENS4_INS_7ElementEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSI_12RawPtrTraitsIS5_EENSI_21DefaultRefDerefTraitsIS5_EEEENSJ_IS7_NSK_IS7_EENSM_IS7_EEEEEEEEUlTyvE_JNSG_17integral_constantIlLl0EEENSW_IlLl1EEEEEET_SZ_((uint64_t)v35, v39, v17, v18);
    if (!v37)
    {
      v23 = std::__throw_bad_optional_access[abi:sn180100]();
      v19.n128_u64[0] = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_13RadioNodeListEEENS4_INS_7ElementEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSI_12RawPtrTraitsIS5_EENSI_21DefaultRefDerefTraitsIS5_EEEENSJ_IS7_NSK_IS7_EENSM_IS7_EEEEEEEEUlTyvE_JNSG_17integral_constantIlLl0EEENSW_IlLl1EEEEEET_SZ_(v23, v24, v25, v26).n128_u64[0];
      return v19.n128_f64[0];
    }
    if (v34 != -1)
      ((void (*)(uint64_t **, char *, __n128))off_1E329B780[v34])(v39, v33, v19);
    if (v32)
    {
      if (v31 != -1)
        ((void (*)(uint64_t **, char *))off_1E329B780[v31])(v39, v30);
      v31 = -1;
    }
  }
  v21 = v29;
  v29 = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v16);
    else
      *(_DWORD *)v21 -= 2;
  }
  return v19.n128_f64[0];
}

__n128 _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_13RadioNodeListEEENS4_INS_7ElementEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSI_12RawPtrTraitsIS5_EENSI_21DefaultRefDerefTraitsIS5_EEEENSJ_IS7_NSK_IS7_EENSM_IS7_EEEEEEEEUlTyvE_JNSG_17integral_constantIlLl0EEENSW_IlLl1EEEEEET_SZ_(uint64_t a1, uint64_t **a2, uint64_t a3, WebCore::Element *a4)
{
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  WebCore::JSDOMGlobalObject *v11;
  unint64_t v12;
  uint64_t *v13;
  __n128 result;
  __int128 v15;

  v6 = **a2;
  if (!v6)
  {
    v7 = a2[4];
    if (*((_DWORD *)v7 + 2))
    {
LABEL_17:
      std::__throw_bad_variant_access[abi:sn180100]();
      goto LABEL_18;
    }
    if (*v7)
      v8 = WebCore::wrap<WebCore::RadioNodeList>((int)a2[2], (JSC::VM *)a2[3], *v7);
    else
      v8 = 2;
    v9 = a2[1];
    if (!*((_BYTE *)v9 + 8))
      *((_BYTE *)v9 + 8) = 1;
    *v9 = v8;
    v6 = **a2;
  }
  if (v6 != 1)
    goto LABEL_16;
  v10 = a2[4];
  if (*((_DWORD *)v10 + 2) != 1)
    goto LABEL_17;
  v11 = (WebCore::JSDOMGlobalObject *)*v10;
  if (*v10)
  {
LABEL_18:
    v12 = WebCore::toJS((WebCore *)a2[2], (JSC::JSGlobalObject *)a2[3], v11, a4);
    goto LABEL_13;
  }
  v12 = 2;
LABEL_13:
  v13 = a2[1];
  if (!*((_BYTE *)v13 + 8))
    *((_BYTE *)v13 + 8) = 1;
  *v13 = v12;
LABEL_16:
  result = *(__n128 *)a2;
  v15 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  *(_QWORD *)(a1 + 32) = a2[4];
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore13RadioNodeListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore13RadioNodeListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore13RadioNodeListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSU_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEERKS12_EEEDcSU_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  if (*a3)
    ++*(_DWORD *)(v3 + 16);
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore13RadioNodeListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSU_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEERKS12_EEEDcSU_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  if (*a3)
    *(_DWORD *)(v3 + 24) += 2;
  *a2 = v3;
}

uint64_t WebCore::jsHTMLFormElementPrototypeFunction_submit(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  char v10;
  uint64_t v12;

  v3 = *((_QWORD *)a2 + 5);
  v12 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "HTMLFormElement", "submit");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLFormElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLFormElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "HTMLFormElement", "submit");
  v9 = *(_QWORD *)(v3 + 24);
  if (!WTF::isMainThread(this))
    goto LABEL_15;
  {
    v10 = 0;
    WebCore::currentToken(void)::token = 0;
    goto LABEL_16;
  }
  if (WebCore::currentToken(void)::token && !*(_DWORD *)(WebCore::currentToken(void)::token + 68))
    v10 = *(_BYTE *)(WebCore::currentToken(void)::token + 16) == 1;
  else
LABEL_15:
    v10 = 0;
LABEL_16:
  WebCore::HTMLFormElement::submit(v9, 0, v10, 0, 0);
  return 10;
}

uint64_t WebCore::jsHTMLFormElementPrototypeFunction_requestSubmit(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  WebCore::HTMLFormElement *v16;
  uint64_t v17;
  WebCore::HTMLElement *v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t result;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  JSValue v27;
  WTF::StringImpl *v28;
  JSC::VM *v29;
  char v30;
  WTF::StringImpl *v31;
  JSC::VM *v32;
  WTF::StringImpl *v33;
  char v34;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLFormElement", "requestSubmit");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSHTMLFormElement::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSHTMLFormElement::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLFormElement", "requestSubmit");
  v16 = *(WebCore::HTMLFormElement **)(v10 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18 = 0;
  }
  else
  {
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v32 = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_40;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSHTMLElement::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSHTMLElement::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(WebCore::HTMLElement **)(v17 + 24)) == 0)
      {
LABEL_40:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v32, 0, "submitter", 10, "HTMLFormElement", 16, a8, "requestSubmit", 14, "HTMLElement", 12);
        return 0;
      }
    }
  }
  WebCore::HTMLFormElement::requestSubmit(v16, v18, (uint64_t)&v32);
  if (!v34)
    return 10;
  v25 = (WTF::StringImpl *)v32;
  v30 = (char)v32;
  v26 = v33;
  v33 = 0;
  v31 = v26;
  if (!*((_QWORD *)v9 + 2))
  {
    v27.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v32, (JSC::JSGlobalObject *)&v31);
    JSC::VM::throwException(v9, this, v27);
    v26 = v31;
  }
  v31 = 0;
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
      WTF::StringImpl::destroy(v26, v25);
    else
      *(_DWORD *)v26 -= 2;
  }
  if (v34)
  {
    v28 = v33;
    v33 = 0;
    if (v28)
    {
      if (*(_DWORD *)v28 != 2)
      {
        result = 0;
        *(_DWORD *)v28 -= 2;
        return result;
      }
      WTF::StringImpl::destroy(v28, v25);
    }
  }
  return 0;
}

uint64_t WebCore::jsHTMLFormElementPrototypeFunction_reset(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  void *v10;
  WTF *v11;
  WTF *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;
  _BYTE v20[40];
  uint64_t v21;
  JSC::JSGlobalObject *v22;

  v3 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLFormElement", "reset");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLFormElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLFormElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLFormElement", "reset");
  v9 = *(_QWORD *)(v3 + 24);
  v18 = (WTF *)v20;
  v19 = 4;
  v20[32] = 0;
  v21 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v22 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v18;
  WebCore::HTMLFormElement::reset(v9);
  if (HIDWORD(v19))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v18, v22);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v21;
    if (HIDWORD(v19))
    {
      v14 = v18;
      v15 = 8 * HIDWORD(v19);
      do
      {
        v16 = *(_QWORD *)v14;
        *(_QWORD *)v14 = 0;
        if (v16)
        {
          if (*(_DWORD *)(v16 + 24) == 2)
          {
            if ((*(_WORD *)(v16 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v16, v10);
          }
          else
          {
            *(_DWORD *)(v16 + 24) -= 2;
          }
        }
        v14 = (WTF *)((char *)v14 + 8);
        v15 -= 8;
      }
      while (v15);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v21;
  }
  v11 = v18;
  if (v20 != (_BYTE *)v18 && v18 != 0)
  {
    v18 = 0;
    LODWORD(v19) = 0;
    WTF::fastFree(v11, v10);
  }
  return 10;
}

uint64_t WebCore::jsHTMLFormElementPrototypeFunction_checkValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  void *v10;
  int v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  WTF *v15;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;

  v3 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLFormElement", "checkValidity");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLFormElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLFormElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLFormElement", "checkValidity");
  v9 = *(_QWORD *)(v3 + 24);
  v18 = 0;
  v19 = 0;
  v11 = WebCore::HTMLFormElement::checkInvalidControlsAndCollectUnhandled(v9, (uint64_t)&v18);
  if (HIDWORD(v19))
  {
    v12 = v18;
    v13 = 8 * HIDWORD(v19);
    do
    {
      v14 = *(_QWORD *)v12;
      *(_QWORD *)v12 = 0;
      if (v14)
        (*(void (**)(uint64_t))(*(_QWORD *)v14 + 96))(v14);
      v12 = (WTF *)((char *)v12 + 8);
      v13 -= 8;
    }
    while (v13);
  }
  v15 = v18;
  if (v18)
  {
    v18 = 0;
    LODWORD(v19) = 0;
    WTF::fastFree(v15, v10);
  }
  if (v11)
    return 6;
  else
    return 7;
}

uint64_t WebCore::jsHTMLFormElementPrototypeFunction_reportValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  int v13;
  uint64_t v15;

  v3 = *((_QWORD *)a2 + 5);
  v15 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "HTMLFormElement", "reportValidity");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLFormElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLFormElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "HTMLFormElement", "reportValidity");
  v9 = *(_QWORD *)(v3 + 24);
  *(_DWORD *)(v9 + 24) += 2;
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 40) + 8);
  *(_DWORD *)(v10 + 24) += 2;
  WebCore::Document::updateLayout(v10, 2u, 0);
  if (*(_DWORD *)(v10 + 24) == 2)
  {
    if ((*(_WORD *)(v10 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v10, v11);
  }
  else
  {
    *(_DWORD *)(v10 + 24) -= 2;
  }
  v13 = WebCore::HTMLFormElement::validateInteractively((WebCore::HTMLFormElement *)v9);
  if (*(_DWORD *)(v9 + 24) == 2)
  {
    if ((*(_WORD *)(v9 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v9, v12);
  }
  else
  {
    *(_DWORD *)(v9 + 24) -= 2;
  }
  if (v13)
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsHTMLFrameElementPrototypeFunction_getSVGDocument(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  JSC::JSGlobalObject *v15;
  WebCore::Document *v16;
  void *v17;
  unint64_t v18;
  WebCore::Node *v19;
  uint64_t v20;
  WebCore::Node *v21;

  v4 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "HTMLFrameElement", "getSVGDocument");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLFrameElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLFrameElement::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "HTMLFrameElement", "getSVGDocument");
  v11 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 112);
  if (!v11)
    return 2;
  v12 = *(_QWORD *)(v11 + 8);
  if (!v12)
    return 2;
  if (*(_BYTE *)(v12 + 144))
    return 2;
  v14 = *(_QWORD *)(v12 + 296);
  if (!v14)
    return 2;
  if ((*(_WORD *)(v14 + 3358) & 0x20) == 0)
    return 2;
  v15 = *(JSC::JSGlobalObject **)(v5 + 40);
  if (!WebCore::canAccessDocument((uint64_t)this, *(WTF::StringImpl **)(*(_QWORD *)(v14 + 40) + 8), 1))
    return 2;
  result = WebCore::cachedDocumentWrapper((WebCore::DOMWrapperWorld **)this, v15, (WebCore::JSDOMGlobalObject *)v14, v16);
  if (!result)
  {
    *(_DWORD *)(v14 + 24) += 2;
    v21 = (WebCore::Node *)v14;
    v18 = WebCore::toJSNewlyCreated((uint64_t)this, v15, &v21);
    v19 = v21;
    v21 = 0;
    if (v19)
    {
      if (*((_DWORD *)v19 + 6) == 2)
      {
        if ((*((_WORD *)v19 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v19, v17);
      }
      else
      {
        *((_DWORD *)v19 + 6) -= 2;
      }
    }
    return v18;
  }
  return result;
}

uint64_t WebCore::jsHTMLIFrameElementPrototypeFunction_getSVGDocument(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  JSC::JSGlobalObject *v15;
  WebCore::Document *v16;
  void *v17;
  WebCore::Node *v18;
  uint64_t v19;
  uint64_t v20;
  WebCore::Node *v21;

  v4 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "HTMLIFrameElement", "getSVGDocument");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLIFrameElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLIFrameElement::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "HTMLIFrameElement", "getSVGDocument");
  v11 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 112);
  if (!v11)
    return 2;
  v12 = *(_QWORD *)(v11 + 8);
  if (!v12)
    return 2;
  if (*(_BYTE *)(v12 + 144))
    return 2;
  v14 = *(_QWORD *)(v12 + 296);
  if (!v14)
    return 2;
  if ((*(_WORD *)(v14 + 3358) & 0x20) == 0)
    return 2;
  v15 = *(JSC::JSGlobalObject **)(v5 + 40);
  if (!WebCore::canAccessDocument((uint64_t)this, *(WTF::StringImpl **)(*(_QWORD *)(v14 + 40) + 8), 1))
    return 2;
  result = WebCore::cachedDocumentWrapper((WebCore::DOMWrapperWorld **)this, v15, (WebCore::JSDOMGlobalObject *)v14, v16);
  if (!result)
  {
    *(_DWORD *)(v14 + 24) += 2;
    v21 = (WebCore::Node *)v14;
    result = WebCore::toJSNewlyCreated((uint64_t)this, v15, &v21);
    v18 = v21;
    v21 = 0;
    if (v18)
    {
      if (*((_DWORD *)v18 + 6) == 2)
      {
        if ((*((_WORD *)v18 + 15) & 0x400) == 0)
        {
          v19 = result;
          WebCore::Node::removedLastRef(v18, v17);
          return v19;
        }
      }
      else
      {
        *((_DWORD *)v18 + 6) -= 2;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsHTMLImageElementPrototypeFunction_decode(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v9;
  int v10;
  JSC::VM *v11;
  unint64_t v12;
  WebCore::DOMGuardedObject *v13;
  WebCore::DOMGuardedObject *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char **v19;
  BOOL v20;
  uint64_t v21;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C76FE4);
  }
  v9 = *((_QWORD *)this + 7);
  v10 = *((_DWORD *)this + 291);
  if (v10)
    v11 = (JSC::VM *)(16 * (v10 & 0xFFFFFFFE));
  else
    v11 = 0;
  v12 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v11, a3);
  v13 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v14 = WebCore::DOMGuardedObject::DOMGuardedObject(v13, (unint64_t)this, v12);
  *(_QWORD *)v14 = &off_1E3226868;
  *((_DWORD *)v14 + 10) = 0;
  *((_BYTE *)v14 + 44) = 0;
  v27 = v14;
  v16 = *((_QWORD *)a2 + 5);
  if ((v16 & 0xFFFE000000000002) != 0)
    goto LABEL_31;
  v17 = *(unsigned int *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C);
  v18 = *(_DWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C) != 0;
  v19 = (char **)(16 * v17);
  if ((_DWORD)v17)
    v20 = v19 == &WebCore::JSHTMLImageElement::s_info;
  else
    v20 = 1;
  if (!v20)
  {
    do
    {
      v19 = (char **)v19[2];
      v18 = v19 != 0;
    }
    while (v19 != &WebCore::JSHTMLImageElement::s_info && v19 != 0);
  }
  if (!v18)
  {
LABEL_31:
    WebCore::rejectPromiseWithThisTypeError(v13, (WebCore::DeferredPromise *)"HTMLImageElement", "decode", v15);
    v27 = 0;
  }
  else
  {
    WebCore::ImageLoader::decode(*(_QWORD *)(*(_QWORD *)(v16 + 24) + 176), (uint64_t *)&v27);
    v13 = v27;
    v27 = 0;
    if (!v13)
      goto LABEL_18;
  }
  if (*((_DWORD *)v13 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v13 + 16))(v13);
  else
    --*((_DWORD *)v13 + 4);
LABEL_18:
  v21 = *(_QWORD *)(v9 + 16);
  if (v21)
  {
    if (*(_QWORD *)(v9 + 24) != v21)
    {
      v25 = *(objc_class **)(v21 + 8);
      JSC::VM::clearException((JSC::VM *)v9);
      WebCore::DeferredPromise::create((unint64_t)this, v12, 0, &v27);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v27, v25, 0);
      v26 = v27;
      v27 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
    return 10;
  return v12;
}

uint64_t WebCore::jsHTMLInputElementPrototypeFunction_stepUp(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  JSValue v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  char v19;
  WTF::StringImpl *v20;
  int v21[2];
  WTF::StringImpl *v22;
  char v23;

  v4 = *((_QWORD *)this + 7);
  v18 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "HTMLInputElement", "stepUp");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "HTMLInputElement", "stepUp");
  v11 = *(_QWORD *)(v5 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
    goto LABEL_40;
  v12 = *((_QWORD *)a2 + 6);
  if (v12 == 10)
    goto LABEL_40;
  *(_QWORD *)v21 = *((_QWORD *)a2 + 6);
  if (v12 < 0xFFFE000000000000 && v12 - 0x2000000000000 >= 0xFFFC000000000000)
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v21, this);
  if (!*(_DWORD *)(v4 + 80) || !JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
  {
LABEL_40:
    (*(void (**)(int *__return_ptr))(**(_QWORD **)(v11 + 240) + 216))(v21);
    if (!v23)
      return 10;
    v14 = (WTF::StringImpl *)LOBYTE(v21[0]);
    v19 = v21[0];
    v15 = v22;
    v22 = 0;
    v20 = v15;
    if (!*(_QWORD *)(v4 + 16))
    {
      v16.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v21[0]), (JSC::JSGlobalObject *)&v20);
      JSC::VM::throwException((JSC::VM *)v4, this, v16);
      v15 = v20;
    }
    v20 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v14);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (v23)
    {
      v17 = v22;
      v22 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 != 2)
        {
          result = 0;
          *(_DWORD *)v17 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v17, v14);
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsHTMLInputElementPrototypeFunction_stepDown(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WTF::StringImpl *v22;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v24;
  int v25;
  uint64_t v26;
  char v27;
  WTF::StringImpl *v28;
  int v29[2];
  WTF::StringImpl *v30;
  char v31;

  v4 = *((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "HTMLInputElement", "stepDown");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "HTMLInputElement", "stepDown");
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_DWORD *)a2 + 8);
  if (v12 != 1)
  {
    v13 = *((_QWORD *)a2 + 6);
    if (v13 == 10)
    {
      v12 = 1;
    }
    else
    {
      *(_QWORD *)v29 = *((_QWORD *)a2 + 6);
      if (v13 < 0xFFFE000000000000)
      {
        v15 = v13 - 0x2000000000000;
        if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v29, this);
          v15 = v24;
        }
        v16 = (v15 >> 52) & 0x7FF;
        if ((v16 - 1023) <= 0x53)
        {
          v17 = v15 >> (51 - (v15 >> 52));
          if (v16 > 0x433)
            LODWORD(v17) = v15 << ((v15 >> 52) - 51);
          if (v16 >= 0x41F)
            v18 = v17;
          else
            v18 = (((1 << ((v15 >> 52) + 1)) - 1) & v17) + (1 << ((v15 >> 52) + 1));
          if ((v15 & 0x8000000000000000) == 0)
            v12 = v18;
          else
            v12 = -v18;
        }
        else
        {
          v12 = 0;
        }
      }
      else
      {
        v12 = v13;
      }
      if (*(_DWORD *)(v4 + 80))
      {
        v25 = v12;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        v12 = v25;
        if (hasExceptionsAfterHandlingTraps)
          return 0;
      }
    }
  }
  (*(void (**)(int *__return_ptr, _QWORD, _QWORD, JSC::CallFrame *))(**(_QWORD **)(v11 + 240) + 216))(v29, *(_QWORD *)(v11 + 240), -v12, a3);
  if (!v31)
    return 10;
  v19 = (WTF::StringImpl *)LOBYTE(v29[0]);
  v27 = v29[0];
  v20 = v30;
  v30 = 0;
  v28 = v20;
  if (!*(_QWORD *)(v4 + 16))
  {
    v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v29[0]), (JSC::JSGlobalObject *)&v28);
    JSC::VM::throwException((JSC::VM *)v4, this, v21);
    v20 = v28;
  }
  v28 = 0;
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v19);
    else
      *(_DWORD *)v20 -= 2;
  }
  if (v31)
  {
    v22 = v30;
    v30 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 != 2)
      {
        result = 0;
        *(_DWORD *)v22 -= 2;
        return result;
      }
      WTF::StringImpl::destroy(v22, v19);
    }
  }
  return 0;
}

uint64_t WebCore::jsHTMLInputElementPrototypeFunction_checkValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLInputElement", "checkValidity");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLInputElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLInputElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLInputElement", "checkValidity");
  if (WebCore::ValidatedFormListedElement::checkValidity((_BYTE *)(*(_QWORD *)(v3 + 24) + 112), 0))
    return 7;
  return 6;
}

uint64_t WebCore::jsHTMLInputElementPrototypeFunction_reportValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLInputElement", "reportValidity");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLInputElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLInputElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLInputElement", "reportValidity");
  if (WebCore::ValidatedFormListedElement::reportValidity((WebCore::ValidatedFormListedElement *)(*(_QWORD *)(v3 + 24) + 112)))
    return 7;
  return 6;
}

_BYTE *WebCore::jsHTMLInputElementPrototypeFunction_setCustomValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  JSValue v21;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v23;
  uint64_t v24;
  int v25;
  WTF::StringImpl *v26;
  uint64_t v27;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "HTMLInputElement", "setCustomValidity");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "HTMLInputElement", "setCustomValidity");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v21);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v27 = v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v26 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v27, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v26;
    if (hasExceptionsAfterHandlingTraps)
    {
      v25 = 1;
      v26 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, a2);
        else
          *(_DWORD *)v14 -= 2;
      }
      v18 = 0;
      v17 = 1;
      goto LABEL_30;
    }
  }
  else
  {
    v14 = v26;
  }
  v25 = 0;
  v24 = 0;
  if (v14)
    *(_DWORD *)v14 += 2;
  v15 = *(WTF::StringImpl **)(v11 + 144);
  *(_QWORD *)(v11 + 144) = v14;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, a2);
    else
      *(_DWORD *)v15 -= 2;
  }
  WebCore::ValidatedFormListedElement::updateValidity(v11 + 112);
  if (!v14)
    goto LABEL_36;
  if (*(_DWORD *)v14 == 2)
  {
    WTF::StringImpl::destroy(v14, v16);
LABEL_36:
    v17 = 0;
    goto LABEL_29;
  }
  v17 = 0;
  *(_DWORD *)v14 -= 2;
LABEL_29:
  v18 = 10;
LABEL_30:
  ((void (*)(uint64_t *, uint64_t *))off_1E329F280[v17])(&v27, &v24);
  return (_BYTE *)v18;
}

uint64_t WebCore::jsHTMLInputElementPrototypeFunction_select(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::HTMLTextFormControlElement *v9;
  uint64_t v11;
  uint64_t v12[2];

  v3 = *((_QWORD *)a2 + 5);
  v11 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "HTMLInputElement", "select");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLInputElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLInputElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "HTMLInputElement", "select");
  v9 = *(WebCore::HTMLTextFormControlElement **)(v3 + 24);
  v12[0] = 0;
  v12[1] = 0;
  if (WebCore::HTMLTextFormControlElement::setSelectionRange((uint64_t)v9, 0, 0xFFFFFFFF, 0, 3, v12, 0))
    WebCore::HTMLTextFormControlElement::scheduleSelectEvent(v9);
  return 10;
}

_BYTE *WebCore::jsHTMLInputElementPrototypeFunction_setRangeText(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSHTMLInputElement *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unint64_t v12;
  JSValue v14;
  uint64_t v15;
  WebCore::HTMLTextFormControlElement *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  JSValue v34;
  WTF::StringImpl *v35;
  _QWORD v36[2];
  uint64_t v37;
  int v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  int v41[2];
  WTF::StringImpl *v42;
  char v43;

  v5 = *((_QWORD *)this + 7);
  v36[0] = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)v36, "HTMLInputElement", "setRangeText");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLInputElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLInputElement::s_info && v9 != 0);
  }
  if (!v8)
  {
    return WebCore::throwThisTypeError((int)this, (int)v36, "HTMLInputElement", "setRangeText");
  }
  else
  {
    v36[1] = v5;
    v12 = *((int *)a2 + 8) - 1;
    if (v12 >= 4)
      v12 = 4;
    switch(v12)
    {
      case 0uLL:
        v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
        return (_BYTE *)JSC::VM::throwException((JSC::VM *)v5, this, v14);
      case 1uLL:
        v15 = *((_QWORD *)a2 + 6);
        v16 = *(WebCore::HTMLTextFormControlElement **)(v6 + 24);
        *(_QWORD *)v41 = v15;
        if ((v15 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v15 + 5) == 2)
        {
          v17 = *(WTF::StringImpl **)(v15 + 8);
          if ((v17 & 1) != 0)
          {
            v17 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v15, this);
            if (!v17)
              goto LABEL_22;
          }
          else if (!v17)
          {
LABEL_22:
            v39 = v17;
            goto LABEL_23;
          }
          *(_DWORD *)v17 += 2;
          goto LABEL_22;
        }
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v41, this);
LABEL_23:
        if (!*(_DWORD *)(v5 + 80))
        {
          v18 = v39;
          goto LABEL_25;
        }
        v18 = v39;
        if (!JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5))
        {
LABEL_25:
          v38 = 0;
          v37 = 0;
          if (v18)
          {
            v19 = *((_QWORD *)v18 + 1);
            v20 = *((unsigned int *)v18 + 1) | ((unint64_t)((*((_DWORD *)v18 + 4) >> 2) & 1) << 32);
            v21 = WebCore::HTMLTextFormControlElement::selectionStart(v16);
            v22 = WebCore::HTMLTextFormControlElement::selectionEnd(v16);
            v39 = 0;
            (*(void (**)(int *__return_ptr, WebCore::HTMLTextFormControlElement *, uint64_t, unint64_t, uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)v16 + 1384))(v41, v16, v19, v20, v21, v22, &v39);
            v24 = v39;
            v39 = 0;
            if (v24)
            {
              if (*(_DWORD *)v24 == 2)
                WTF::StringImpl::destroy(v24, v23);
              else
                *(_DWORD *)v24 -= 2;
            }
            if (*(_DWORD *)v18 != 2)
            {
              *(_DWORD *)v18 -= 2;
              goto LABEL_31;
            }
            v30 = v18;
          }
          else
          {
            v28 = WebCore::HTMLTextFormControlElement::selectionStart(v16);
            v29 = WebCore::HTMLTextFormControlElement::selectionEnd(v16);
            v39 = 0;
            (*(void (**)(int *__return_ptr, WebCore::HTMLTextFormControlElement *, _QWORD, uint64_t, uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)v16 + 1384))(v41, v16, 0, 0x100000000, v28, v29, &v39);
            v30 = v39;
            v39 = 0;
            if (!v30)
              goto LABEL_31;
            if (*(_DWORD *)v30 != 2)
            {
              *(_DWORD *)v30 -= 2;
              goto LABEL_31;
            }
          }
          WTF::StringImpl::destroy(v30, v23);
LABEL_31:
          if (!v43)
          {
            v25 = 10;
LABEL_33:
            v26 = 0;
            goto LABEL_34;
          }
          v32 = (WTF::StringImpl *)LOBYTE(v41[0]);
          LOBYTE(v39) = v41[0];
          v33 = v42;
          v42 = 0;
          v40 = v33;
          if (!*(_QWORD *)(v5 + 16))
          {
            v34.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v41[0]), (JSC::JSGlobalObject *)&v40);
            JSC::VM::throwException((JSC::VM *)v5, this, v34);
            v33 = v40;
          }
          v40 = 0;
          if (v33)
          {
            if (*(_DWORD *)v33 == 2)
              WTF::StringImpl::destroy(v33, v32);
            else
              *(_DWORD *)v33 -= 2;
          }
          if (v43)
          {
            v35 = v42;
            v42 = 0;
            if (v35)
            {
              if (*(_DWORD *)v35 != 2)
              {
                v25 = 0;
                *(_DWORD *)v35 -= 2;
                goto LABEL_33;
              }
              WTF::StringImpl::destroy(v35, v32);
            }
          }
          v25 = 0;
          goto LABEL_33;
        }
        v38 = 1;
        v39 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v31);
          else
            *(_DWORD *)v18 -= 2;
        }
        v25 = 0;
        v26 = 1;
LABEL_34:
        ((void (*)(int *, uint64_t *))off_1E329F280[v26])(v41, &v37);
        break;
      case 3uLL:
      case 4uLL:
        return (_BYTE *)WebCore::jsHTMLInputElementPrototypeFunction_setRangeText2Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
      default:
        return (_BYTE *)JSC::throwTypeError();
    }
  }
  return (_BYTE *)v25;
}

_BYTE *WebCore::jsHTMLInputElementPrototypeFunction_setSelectionRange(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::HTMLInputElement *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::VM *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  uint64_t v20;
  JSValue v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  JSValue v26;
  WTF::StringImpl *v27;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v29;
  uint64_t v30;
  int v31;
  unsigned int v32[2];
  unsigned int v33[2];
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  int v36[2];
  WTF::StringImpl *v37;
  char v38;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLInputElement", "setSelectionRange");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLInputElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLInputElement::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLInputElement", "setSelectionRange");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v23);
  }
  v12 = *(WebCore::HTMLInputElement **)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v33);
  if (v33[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v32);
  if (v32[1])
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v13 = *((_QWORD *)a2 + 8), v13 == 10))
  {
    v14 = 0;
    v31 = 0;
    goto LABEL_27;
  }
  *(_QWORD *)v36 = v13;
  v15 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v13 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v13 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v36, this);
    goto LABEL_24;
  }
  v16 = *(WTF::StringImpl **)(v13 + 8);
  if ((v16 & 1) != 0)
  {
    v16 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v13, this);
    if (!v16)
      goto LABEL_23;
    goto LABEL_22;
  }
  if (v16)
LABEL_22:
    *(_DWORD *)v16 += 2;
LABEL_23:
  v34 = v16;
LABEL_24:
  if (*((_DWORD *)v15 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v15);
    v14 = v34;
    if (hasExceptionsAfterHandlingTraps)
    {
      v31 = 1;
      v34 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v27);
        else
          *(_DWORD *)v14 -= 2;
      }
      v19 = 0;
      v20 = 1;
      goto LABEL_33;
    }
  }
  else
  {
    v14 = v34;
  }
  v31 = 0;
LABEL_27:
  v30 = 0;
  v34 = v14;
  WebCore::HTMLInputElement::setSelectionRangeForBindings(v12, (const WTF::String *)&v34, v33[0], v32[0], v36);
  v18 = v34;
  v34 = 0;
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v17);
    else
      *(_DWORD *)v18 -= 2;
  }
  if (v38)
  {
    v24 = (WTF::StringImpl *)LOBYTE(v36[0]);
    LOBYTE(v34) = v36[0];
    v25 = v37;
    v35 = v37;
    if (!*((_QWORD *)v4 + 2))
    {
      v26.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v36[0]), (JSC::JSGlobalObject *)&v35);
      JSC::VM::throwException(v4, this, v26);
      v25 = v35;
    }
    v35 = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v24);
      else
        *(_DWORD *)v25 -= 2;
    }
    v19 = 0;
  }
  else
  {
    v19 = 10;
  }
  v20 = 0;
LABEL_33:
  ((void (*)(int *, uint64_t *))off_1E329F280[v20])(v36, &v30);
  return (_BYTE *)v19;
}

uint64_t WebCore::jsHTMLInputElementPrototypeFunction_showPicker(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t result;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSValue v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  char v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  char v21;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLInputElement", "showPicker");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLInputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLInputElement::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLInputElement", "showPicker");
  WebCore::HTMLInputElement::showPicker(*(_QWORD *)(v4 + 24), &v19);
  if (!v21)
    return 10;
  v12 = (WTF::StringImpl *)v19;
  v17 = v19;
  v13 = v20;
  v20 = 0;
  v18 = v13;
  if (!*((_QWORD *)v5 + 2))
  {
    v14.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v19, (JSC::JSGlobalObject *)&v18);
    JSC::VM::throwException(v5, this, v14);
    v13 = v18;
  }
  v18 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (v21)
  {
    v15 = v20;
    v20 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 != 2)
      {
        result = 0;
        *(_DWORD *)v15 -= 2;
        return result;
      }
      WTF::StringImpl::destroy(v15, v12);
    }
  }
  return 0;
}

uint64_t WebCore::jsHTMLInputElementPrototypeFunction_setRangeText2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSHTMLInputElement *a4)
{
  JSC::VM *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::VM *v13;
  uint64_t v14;
  unint64_t v15;
  unsigned int v16;
  unsigned int v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  int v20;
  int v21;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  JSValue v26;
  WTF::StringImpl *v27;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v29;
  JSC::VM *v30;
  char *v31;
  uint64_t v32;
  int v33;
  _DWORD v34[2];
  _DWORD v35[2];
  uint64_t v36;
  int v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  WTF::StringImpl *v41;
  char v42;

  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  v8 = *((_QWORD *)a2 + 6);
  v40 = v8;
  if ((v8 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v8 + 5) == 2)
  {
    v9 = *(_QWORD *)(v8 + 8);
    if ((v9 & 1) != 0)
    {
      v9 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, this);
      if (!v9)
        goto LABEL_6;
    }
    else if (!v9)
    {
LABEL_6:
      v38 = (WTF::StringImpl *)v9;
      goto LABEL_7;
    }
    *(_DWORD *)v9 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v40, this);
LABEL_7:
  v30 = v7;
  if (*((_DWORD *)v7 + 20))
  {
    v10 = (uint64_t)v38;
    if (JSC::VM::hasExceptionsAfterHandlingTraps(v7))
    {
      v37 = 1;
      v38 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy((WTF::StringImpl *)v10, v23);
        else
          *(_DWORD *)v10 -= 2;
      }
      v19 = 0;
      v21 = 1;
      goto LABEL_40;
    }
  }
  else
  {
    v10 = (uint64_t)v38;
  }
  v36 = v10;
  v37 = 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v35);
  if (v35[1])
  {
    v19 = 0;
    v21 = 0;
    goto LABEL_40;
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v34);
  if (!v34[1])
  {
    if ((unint64_t)(*((int *)a2 + 8) - 5) >= 0xFFFFFFFFFFFFFFFCLL || (v11 = *((_QWORD *)a2 + 9), v11 == 10))
    {
      v12 = 0;
      v33 = 0;
      goto LABEL_23;
    }
    v40 = v11;
    v13 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((v11 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v11 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v40, this);
      goto LABEL_20;
    }
    v14 = *(_QWORD *)(v11 + 8);
    if ((v14 & 1) != 0)
    {
      v14 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, this);
      if (!v14)
        goto LABEL_19;
    }
    else if (!v14)
    {
LABEL_19:
      v38 = (WTF::StringImpl *)v14;
LABEL_20:
      if (*((_DWORD *)v13 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v13);
        v12 = v38;
        if (hasExceptionsAfterHandlingTraps)
        {
          v33 = 1;
          v38 = 0;
          if (v12)
          {
            if (*(_DWORD *)v12 == 2)
              WTF::StringImpl::destroy(v12, v29);
            else
              *(_DWORD *)v12 -= 2;
          }
          v19 = 0;
          v20 = 1;
          goto LABEL_37;
        }
      }
      else
      {
        v12 = v38;
      }
      v33 = 0;
LABEL_23:
      v36 = 0;
      if (v10)
      {
        v31 = *(char **)(v10 + 8);
        v15 = *(unsigned int *)(v10 + 4) | ((unint64_t)((*(_DWORD *)(v10 + 16) >> 2) & 1) << 32);
      }
      else
      {
        v31 = 0;
        v15 = 0x100000000;
      }
      v16 = v35[0];
      v17 = v34[0];
      v32 = 0;
      v38 = v12;
      if (((*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 30) + 824))(*((_QWORD *)a3 + 30)) & 1) != 0)
      {
        WebCore::HTMLTextFormControlElement::setRangeText(a3, v31, v15, v16, v17, (uint64_t *)&v38, (uint64_t)&v40);
        v12 = v38;
      }
      else
      {
        LOBYTE(v40) = 8;
        v41 = 0;
        v42 = 1;
      }
      v38 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
        {
          WTF::StringImpl::destroy(v12, v18);
          if (!v10)
            goto LABEL_34;
          goto LABEL_32;
        }
        *(_DWORD *)v12 -= 2;
      }
      if (!v10)
        goto LABEL_34;
LABEL_32:
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v10, v18);
      else
        *(_DWORD *)v10 -= 2;
LABEL_34:
      if (!v42)
      {
        v19 = 10;
        goto LABEL_36;
      }
      v24 = (WTF::StringImpl *)v40;
      LOBYTE(v38) = v40;
      v25 = v41;
      v41 = 0;
      v39 = v25;
      if (!*((_QWORD *)v30 + 2))
      {
        v26.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v40, (JSC::JSGlobalObject *)&v39);
        JSC::VM::throwException(v30, this, v26);
        v25 = v39;
      }
      v39 = 0;
      if (v25)
      {
        if (*(_DWORD *)v25 == 2)
          WTF::StringImpl::destroy(v25, v24);
        else
          *(_DWORD *)v25 -= 2;
      }
      if (v42)
      {
        v27 = v41;
        v41 = 0;
        if (v27)
        {
          if (*(_DWORD *)v27 != 2)
          {
            v19 = 0;
            *(_DWORD *)v27 -= 2;
            goto LABEL_36;
          }
          WTF::StringImpl::destroy(v27, v24);
        }
      }
      v19 = 0;
LABEL_36:
      v20 = v33;
      if (v33 == -1)
      {
LABEL_38:
        v21 = v37;
        goto LABEL_39;
      }
LABEL_37:
      ((void (*)(uint64_t *, uint64_t *))off_1E329F280[v20])(&v40, &v32);
      goto LABEL_38;
    }
    *(_DWORD *)v14 += 2;
    goto LABEL_19;
  }
  v21 = 0;
  v19 = 0;
LABEL_39:
  if (v21 != -1)
LABEL_40:
    ((void (*)(uint64_t *, uint64_t *))off_1E329F280[v21])(&v40, &v36);
  return v19;
}

uint64_t WebCore::jsHTMLMarqueeElementPrototypeFunction_start(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  WebCore::RenderMarquee *v11;
  uint64_t result;
  uint64_t v13;

  v3 = *((_QWORD *)a2 + 5);
  v13 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "HTMLMarqueeElement", "start");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLMarqueeElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "HTMLMarqueeElement", "start");
  v9 = *(_QWORD *)(*(_QWORD *)(v3 + 24) + 64) & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    if ((*(_BYTE *)(v9 + 45) & 2) != 0)
    {
      result = 105;
      __break(0xC471u);
      return result;
    }
    if ((*(_BYTE *)(v9 + 21) & 0x80) != 0)
    {
      if ((*(_BYTE *)(v9 + 45) & 8) == 0)
        v9 = 0;
      v10 = *(_QWORD *)(*(_QWORD *)(v9 + 144) + 264);
      if (v10)
      {
        v11 = *(WebCore::RenderMarquee **)(v10 + 168);
        if (v11)
          WebCore::RenderMarquee::start(v11);
      }
    }
  }
  return 10;
}

uint64_t WebCore::jsHTMLMarqueeElementPrototypeFunction_stop(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v3 = *((_QWORD *)a2 + 5);
  v13 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "HTMLMarqueeElement", "stop");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLMarqueeElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLMarqueeElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "HTMLMarqueeElement", "stop");
  v9 = *(_QWORD *)(*(_QWORD *)(v3 + 24) + 64) & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    if ((*(_BYTE *)(v9 + 45) & 2) != 0)
    {
      result = 105;
      __break(0xC471u);
      return result;
    }
    if ((*(_BYTE *)(v9 + 21) & 0x80) != 0)
    {
      if ((*(_BYTE *)(v9 + 45) & 8) == 0)
        v9 = 0;
      v10 = *(_QWORD *)(*(_QWORD *)(v9 + 144) + 264);
      if (v10)
      {
        v11 = *(_QWORD *)(v10 + 168);
        if (v11)
        {
          if ((*(_QWORD *)(v11 + 40) & 0xFFFFFFFFFFFFLL) != 0)
            WebCore::TimerBase::stopSlowCase((WebCore::TimerBase *)(v11 + 8));
          *(_BYTE *)(v11 + 95) = 1;
        }
      }
    }
  }
  return 10;
}

uint64_t WebCore::jsHTMLMediaElementPrototypeFunction_load(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLMediaElement", "load");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLMediaElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLMediaElement", "load");
  WebCore::HTMLMediaElement::load(*(WebCore::HTMLMediaElement **)(v3 + 24));
  return 10;
}

_BYTE *WebCore::jsHTMLMediaElementPrototypeFunction_canPlayType(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLMediaElement *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  int v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  unsigned int v24;
  JSValue v26;
  WTF::StringImpl *v27;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v29;
  uint64_t v30;
  int v31;
  WTF::StringImpl *v32;
  uint64_t v33;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLMediaElement", "canPlayType");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMediaElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLMediaElement", "canPlayType");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v26);
  }
  v11 = *(WebCore::HTMLMediaElement **)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v33 = v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v32 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v33, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v32;
    if (hasExceptionsAfterHandlingTraps)
    {
      v31 = 1;
      v32 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v27);
        else
          *(_DWORD *)v14 -= 2;
      }
      v18 = 0;
      v22 = 1;
      goto LABEL_43;
    }
  }
  else
  {
    v14 = v32;
  }
  v31 = 0;
  v30 = 0;
  v32 = v14;
  WebCore::HTMLMediaElement::canPlayType(v11, &v32, &v33);
  v15 = *((_QWORD *)this + 7);
  v16 = (WTF::StringImpl *)v33;
  if (v33)
  {
    v17 = *(_DWORD *)(v33 + 4);
    if (v17)
    {
      if (v17 != 1)
      {
LABEL_24:
        v18 = *(_QWORD *)(v15 + 64760);
        if (!v18 || v33 != *(_QWORD *)(v18 + 8))
        {
          v18 = JSC::jsStringWithCacheSlowCase();
          v16 = (WTF::StringImpl *)v33;
          goto LABEL_27;
        }
LABEL_36:
        v33 = 0;
LABEL_37:
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v16);
        else
          *(_DWORD *)v16 -= 2;
        goto LABEL_39;
      }
      v19 = *(unsigned __int8 **)(v33 + 8);
      if ((*(_BYTE *)(v33 + 16) & 4) != 0)
      {
        v20 = *v19;
      }
      else
      {
        v24 = *(unsigned __int16 *)v19;
        if (v24 > 0xFF)
          goto LABEL_24;
        v20 = v24;
      }
      v18 = *(_QWORD *)(v15 + 8 * v20 + 42216);
      goto LABEL_36;
    }
  }
  v18 = *(_QWORD *)(v15 + 41968);
LABEL_27:
  v33 = 0;
  if (v16)
    goto LABEL_37;
LABEL_39:
  v21 = v32;
  v32 = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v16);
    else
      *(_DWORD *)v21 -= 2;
  }
  v22 = 0;
LABEL_43:
  ((void (*)(uint64_t *, uint64_t *))off_1E329F280[v22])(&v33, &v30);
  return (_BYTE *)v18;
}

uint64_t WebCore::jsHTMLMediaElementPrototypeFunction_fastSeek(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::JSGlobalObject *v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLMediaElement *v11;
  unint64_t v12;
  double v13;
  uint64_t v14;
  JSValue v16;
  double v17;
  JSC::VM *v18;
  _QWORD v19[2];

  v3 = (JSC::JSGlobalObject *)this;
  v4 = this[7];
  v18 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "HTMLMediaElement", "fastSeek");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLMediaElement::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "HTMLMediaElement", "fastSeek");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return JSC::VM::throwException(v4, v3, v16);
  }
  else
  {
    v11 = *(WebCore::HTMLMediaElement **)(v5 + 24);
    v12 = *((_QWORD *)a2 + 6);
    v19[0] = v12;
    if (v12 >= 0xFFFE000000000000)
    {
      v13 = (double)(int)v12;
    }
    else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      this = (JSC::VM **)JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v19, (JSC::JSGlobalObject *)this);
      v13 = v17;
    }
    else
    {
      *(_QWORD *)&v13 = v12 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (this = (JSC::VM **)JSC::VM::hasExceptionsAfterHandlingTraps(v4), (_DWORD)this))
    {
      return 0;
    }
    else
    {
      v19[0] = WTF::MediaTime::createWithDouble((WTF::MediaTime *)this, v13);
      v19[1] = v14;
      WebCore::HTMLMediaElement::fastSeek(v11, (const WTF::MediaTime *)v19);
      return 10;
    }
  }
}

_BYTE *WebCore::jsHTMLMediaElementPrototypeFunction_getStartDate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v14[2];

  v4 = *((_QWORD *)a2 + 5);
  v13 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v13, "HTMLMediaElement", "getStartDate");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMediaElement::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v13, "HTMLMediaElement", "getStartDate");
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 1136);
  if (v10)
  {
    v14[0] = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 72) + 376))(*(_QWORD *)(v10 + 72));
    v14[1] = v11;
    WTF::MediaTime::toDouble((WTF::MediaTime *)v14);
  }
  return (_BYTE *)WebCore::jsDate((uint64_t)this);
}

unint64_t WebCore::jsHTMLMediaElementPrototypeFunction_play(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  WebCore::HTMLMediaElement *v23;
  WebCore::DOMGuardedObject *v24;
  uint64_t v25;
  void (*v27)(void);
  objc_class *v28;
  WebCore::DOMGuardedObject *v29;
  WebCore::DOMGuardedObject *v30;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C79018);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSHTMLMediaElement::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLMediaElement", "play", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v27 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_32;
  }
  v23 = *(WebCore::HTMLMediaElement **)(v17 + 24);
  v30 = v14;
  WebCore::HTMLMediaElement::play(v23, (uint64_t *)&v30);
  v24 = v30;
  v30 = 0;
  if (v24)
  {
    if (*((_DWORD *)v24 + 4) != 1)
    {
      --*((_DWORD *)v24 + 4);
      goto LABEL_28;
    }
    v27 = *(void (**)(void))(*(_QWORD *)v24 + 16);
LABEL_32:
    v27();
  }
LABEL_28:
  v25 = *(_QWORD *)(v10 + 16);
  if (v25)
  {
    if (*(_QWORD *)(v10 + 24) != v25)
    {
      v28 = *(objc_class **)(v25 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v30);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v30, v28, 0);
      v29 = v30;
      v30 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t WebCore::jsHTMLMediaElementPrototypeFunction_pause(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLMediaElement", "pause");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLMediaElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLMediaElement", "pause");
  (*(void (**)(_QWORD))(**(_QWORD **)(v3 + 24) + 1448))(*(_QWORD *)(v3 + 24));
  return 10;
}

uint64_t WebCore::jsHTMLMediaElementPrototypeFunction_webkitSetMediaKeys(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  WebCore::WebKitMediaKeys *v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  JSValue v25;
  JSC::VM *v26;
  JSC::VM *v27;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "HTMLMediaElement", "webkitSetMediaKeys");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSHTMLMediaElement::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "HTMLMediaElement", "webkitSetMediaKeys");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v25);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v27 = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebKitMediaKeys::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebKitMediaKeys::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(WebCore::WebKitMediaKeys **)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v27, 0, "mediaKeys", 10, "HTMLMediaElement", 17, a8, "webkitSetMediaKeys", 19, "WebKitMediaKeys", 16);
        return 0;
      }
    }
    WebCore::HTMLMediaElement::webkitSetMediaKeys(v16, v18);
    return 10;
  }
}

unint64_t WebCore::jsHTMLMediaElementPrototypeFunction_setMediaKeys(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char **v22;
  BOOL v23;
  JSC::VM *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL4 v30;
  char **v31;
  BOOL v32;
  uint64_t v34;
  JSValue v36;
  objc_class *v37;
  WebCore::DOMGuardedObject *v38;
  WebCore::DOMGuardedObject *v39;
  WebCore::DOMGuardedObject *v40;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C795B8);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v39 = v15;
  v19 = *((_QWORD *)a2 + 5);
  if ((v19 & 0xFFFE000000000002) != 0)
    goto LABEL_49;
  v20 = *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C);
  v21 = *(_DWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C) != 0;
  v22 = (char **)(16 * v20);
  if ((_DWORD)v20)
    v23 = v22 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v23 = 1;
  if (!v23)
  {
    do
    {
      v22 = (char **)v22[2];
      v21 = v22 != 0;
    }
    while (v22 != &WebCore::JSHTMLMediaElement::s_info && v22 != 0);
  }
  if (!v21)
  {
LABEL_49:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLMediaElement", "setMediaKeys", v17);
  }
  else
  {
    v25 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v26 = *(_QWORD *)(v19 + 24);
      v27 = *((_QWORD *)a2 + 6);
      if ((v27 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v28 = 0;
      }
      else
      {
        v40 = (WebCore::DOMGuardedObject *)*((_QWORD *)this + 7);
        if ((v27 & 0xFFFE000000000002) != 0)
          goto LABEL_39;
        v29 = *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C);
        v30 = *(_DWORD *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C) != 0;
        v31 = (char **)(16 * v29);
        if ((_DWORD)v29)
          v32 = v31 == &WebCore::JSMediaKeys::s_info;
        else
          v32 = 1;
        if (!v32)
        {
          do
          {
            v31 = (char **)v31[2];
            v30 = v31 != 0;
          }
          while (v31 != &WebCore::JSMediaKeys::s_info && v31 != 0);
        }
        if (!v30 || (v28 = *(_QWORD *)(v27 + 24)) == 0)
        {
LABEL_39:
          WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v40, 0, "mediaKeys", 10, "HTMLMediaElement", 17, v18, "setMediaKeys", 13, "MediaKeys", 10);
          goto LABEL_42;
        }
      }
      WebCore::HTMLMediaElement::setMediaKeys(v26, v28, (uint64_t *)&v39);
LABEL_42:
      v14 = v39;
      v39 = 0;
      if (!v14)
        goto LABEL_45;
      goto LABEL_43;
    }
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v25, this, v36);
  }
  v39 = 0;
LABEL_43:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_45:
  v34 = *(_QWORD *)(v10 + 16);
  if (v34)
  {
    if (*(_QWORD *)(v10 + 24) != v34)
    {
      v37 = *(objc_class **)(v34 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v40);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v40, v37, 0);
      v38 = v40;
      v40 = 0;
      if (v38)
      {
        if (*((_DWORD *)v38 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v38 + 16))(v38);
        else
          --*((_DWORD *)v38 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_BYTE *WebCore::jsHTMLMediaElementPrototypeFunction_addTextTrack(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::HTMLMediaElement *v12;
  int v13;
  WTF::StringImpl **v14;
  WTF::StringImpl *v15;
  int v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  int v19;
  JSC::VM *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  _DWORD *v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  JSValue v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  JSValue v36;
  WebCore *v37;
  JSC::JSGlobalObject *v38;
  JSC::CallFrame *v39;
  JSC::VM *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  int v44[2];
  WTF::StringImpl *v45;
  unsigned int v46;
  WTF::StringImpl *v47;
  int v48;
  WTF::StringImpl *v49;
  int v50;
  WTF::StringImpl *v51;
  int v52;
  char v53[8];
  WTF::StringImpl *v54;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v40 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v40, "HTMLMediaElement", "addTextTrack");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLMediaElement::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v40, "HTMLMediaElement", "addTextTrack");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v33.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v33);
  }
  v12 = *(WebCore::HTMLMediaElement **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v51);
  v13 = v52;
  if (v52)
  {
    v26 = 0;
LABEL_47:
    if (v13 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E3299910[v13])(v44, &v51);
    return (_BYTE *)v26;
  }
  v14 = (WTF::StringImpl **)MEMORY[0x1E0CBF3B8];
  if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL || *((_QWORD *)a2 + 7) == 10)
  {
    v15 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v15 += 2;
    v49 = v15;
    v50 = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 7), (uint64_t)&v49);
    v16 = v50;
    if (v50)
    {
      v26 = 0;
LABEL_44:
      if (v16 != -1)
        ((void (*)(int *, WTF::StringImpl **))off_1E3299910[v16])(v44, &v49);
      v13 = v52;
      goto LABEL_47;
    }
  }
  if ((unint64_t)(*((int *)a2 + 8) - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v17 = *((_QWORD *)a2 + 8), v17 == 10))
  {
    v18 = *v14;
    if (*v14)
      *(_DWORD *)v18 += 2;
    v47 = v18;
    v48 = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, v17, (uint64_t)&v47);
    v19 = v48;
    if (v48)
    {
      v26 = 0;
LABEL_41:
      if (v19 != -1)
        ((void (*)(int *, WTF::StringImpl **))off_1E3299910[v19])(v44, &v47);
      v16 = v50;
      goto LABEL_44;
    }
  }
  if (!v52)
  {
    v20 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v21 = v51;
    v51 = 0;
    v43 = v21;
    if (!v50)
    {
      v22 = v49;
      v49 = 0;
      v23 = v47;
      v47 = 0;
      v41 = v23;
      v42 = v22;
      WebCore::HTMLMediaElement::addTextTrack(v12, (const WTF::AtomString *)&v43, (const WTF::AtomString *)&v42, (const WTF::AtomString *)&v41, (uint64_t)v44);
      v24 = v46;
      if (!v46)
      {
        v25 = *(_DWORD **)v44;
        *(_QWORD *)v44 = 0;
        v26 = WebCore::wrap<WebCore::TextTrack>((int)this, v20, (uint64_t)v25);
        if (v25[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v25 + 16))(v25);
        else
          --v25[4];
LABEL_31:
        ((void (*)(char *, int *))off_1E329E658[v24])(v53, v44);
        v46 = -1;
        v28 = v41;
        v41 = 0;
        if (v28)
        {
          if (*(_DWORD *)v28 == 2)
            WTF::StringImpl::destroy(v28, v27);
          else
            *(_DWORD *)v28 -= 2;
        }
        v29 = v42;
        v42 = 0;
        if (v29)
        {
          if (*(_DWORD *)v29 == 2)
            WTF::StringImpl::destroy(v29, v27);
          else
            *(_DWORD *)v29 -= 2;
        }
        v30 = v43;
        v43 = 0;
        if (v30)
        {
          if (*(_DWORD *)v30 == 2)
            WTF::StringImpl::destroy(v30, v27);
          else
            *(_DWORD *)v30 -= 2;
        }
        v19 = v48;
        goto LABEL_41;
      }
      if (v46 == 1)
      {
        v34 = (WTF::StringImpl *)LOBYTE(v44[0]);
        v53[0] = v44[0];
        v35 = v45;
        v45 = 0;
        v54 = v35;
        if (!*((_QWORD *)v4 + 2))
        {
          v36.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v44[0]), (JSC::JSGlobalObject *)&v54);
          JSC::VM::throwException(v4, this, v36);
          v35 = v54;
        }
        v54 = 0;
        if (v35)
        {
          if (*(_DWORD *)v35 == 2)
            WTF::StringImpl::destroy(v35, v34);
          else
            *(_DWORD *)v35 -= 2;
        }
        v26 = 0;
        goto LABEL_31;
      }
    }
  }
  v37 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsHTMLMediaElementPrototypeFunction_getVideoPlaybackQuality(v37, v38, v39);
}

unint64_t WebCore::jsHTMLMediaElementPrototypeFunction_getVideoPlaybackQuality(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  WTF *v11;
  void *v12;
  unint64_t v13;
  uint64_t v15;
  WTF *v16;

  v4 = *((_QWORD *)a2 + 5);
  v15 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "HTMLMediaElement", "getVideoPlaybackQuality");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLMediaElement::s_info && v7 != 0);
  }
  if (!v6)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "HTMLMediaElement", "getVideoPlaybackQuality");
  v10 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLMediaElement::getVideoPlaybackQuality(*(WebCore::HTMLMediaElement **)(v4 + 24), &v16);
  v11 = v16;
  if (!v16)
    return 2;
  v13 = WebCore::wrap<WebCore::VideoPlaybackQuality>((uint64_t)this, v10, v16);
  if (*(_DWORD *)v11 == 1)
    WTF::fastFree(v11, v12);
  else
    --*(_DWORD *)v11;
  return v13;
}

uint64_t WebCore::jsHTMLMediaElementPrototypeFunction_webkitShowPlaybackTargetPicker(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLMediaElement", "webkitShowPlaybackTargetPicker");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLMediaElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLMediaElement", "webkitShowPlaybackTargetPicker");
  WebCore::HTMLMediaElement::webkitShowPlaybackTargetPicker(*(WebCore::HTMLMediaElement **)(v3 + 24));
  return 10;
}

unint64_t WebCore::jsHTMLMediaElementPrototypeFunction_setSinkId(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  uint64_t v33;
  JSValue v35;
  WTF::StringImpl *v36;
  int hasExceptionsAfterHandlingTraps;
  objc_class *v38;
  WebCore::DOMGuardedObject *v39;
  WebCore::DOMGuardedObject *v40;
  int v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C79EE4);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_53;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSHTMLMediaElement::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSHTMLMediaElement::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_53:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLMediaElement", "setSinkId", v17);
  }
  else
  {
    v24 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v25 = *(_QWORD *)(v18 + 24);
      v26 = *((_QWORD *)a2 + 6);
      v43 = (WTF::StringImpl *)v26;
      if ((v26 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v26 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v43, this);
LABEL_32:
        if (*((_DWORD *)v24 + 20))
        {
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
          v28 = v42;
          if (hasExceptionsAfterHandlingTraps)
          {
            v41 = 1;
            v42 = 0;
            if (v28)
            {
              if (*(_DWORD *)v28 == 2)
                WTF::StringImpl::destroy(v28, v36);
              else
                *(_DWORD *)v28 -= 2;
            }
            v32 = 1;
LABEL_41:
            ((void (*)(WTF::StringImpl **, WebCore::DOMGuardedObject **))off_1E329F280[v32])(&v43, &v40);
            if (!v14)
              goto LABEL_44;
            goto LABEL_42;
          }
        }
        else
        {
          v28 = v42;
        }
        v41 = 0;
        v40 = 0;
        v42 = v14;
        v43 = v28;
        WebCore::HTMLMediaElement::setAudioOutputDevice(v25, &v43, (uint64_t *)&v42);
        v30 = v42;
        v42 = 0;
        if (v30)
        {
          if (*((_DWORD *)v30 + 4) == 1)
            (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v30 + 16))(v30);
          else
            --*((_DWORD *)v30 + 4);
        }
        v31 = v43;
        v43 = 0;
        if (v31)
        {
          if (*(_DWORD *)v31 == 2)
            WTF::StringImpl::destroy(v31, v29);
          else
            *(_DWORD *)v31 -= 2;
        }
        v14 = 0;
        v32 = 0;
        goto LABEL_41;
      }
      v27 = *(WTF::StringImpl **)(v26 + 8);
      if ((v27 & 1) != 0)
      {
        v27 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v26, this);
        if (!v27)
          goto LABEL_31;
      }
      else if (!v27)
      {
LABEL_31:
        v42 = v27;
        goto LABEL_32;
      }
      *(_DWORD *)v27 += 2;
      goto LABEL_31;
    }
    v35.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v35);
  }
LABEL_42:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_44:
  v33 = *(_QWORD *)(v10 + 16);
  if (v33)
  {
    if (*(_QWORD *)(v10 + 24) != v33)
    {
      v38 = *(objc_class **)(v33 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v40);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v40, v38, 0);
      v39 = v40;
      v40 = 0;
      if (v39)
      {
        if (*((_DWORD *)v39 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v39 + 16))(v39);
        else
          --*((_DWORD *)v39 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9TextTrackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9TextTrackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::jsHTMLModelElementPrototypeFunction_enterFullscreen(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v11;

  v3 = *((_QWORD *)a2 + 5);
  v11 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "HTMLModelElement", "enterFullscreen");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLModelElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLModelElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "HTMLModelElement", "enterFullscreen");
  v9 = *(_QWORD *)(*(_QWORD *)(v3 + 24) + 248);
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 64))(v9);
  return 10;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_getCamera(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(void);
  objc_class *v27;
  WebCore::DOMGuardedObject *v28;
  WebCore::DOMGuardedObject *v29;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7A298);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSHTMLModelElement::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSHTMLModelElement::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "getCamera", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v29 = v14;
  WebCore::HTMLModelElement::getCamera(v23, (uint64_t *)&v29);
  if (v29)
  {
    if (*((_DWORD *)v29 + 4) != 1)
    {
      --*((_DWORD *)v29 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v29 + 16);
LABEL_32:
    v26();
  }
LABEL_28:
  v24 = *(_QWORD *)(v10 + 16);
  if (v24)
  {
    if (*(_QWORD *)(v10 + 24) != v24)
    {
      v27 = *(objc_class **)(v24 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v29);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v29, v27, 0);
      v28 = v29;
      v29 = 0;
      if (v28)
      {
        if (*((_DWORD *)v28 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
        else
          --*((_DWORD *)v28 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_setCamera(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  JSC::JSCell *v25;
  uint64_t Object;
  JSC::Structure *v27;
  WTF::StringImpl *v28;
  WebCore::DOMGuardedObject *v29;
  char *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  JSC::VM *v35;
  double v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  WebCore::DOMGuardedObject *v39;
  JSC::VM *v40;
  double v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  WebCore::DOMGuardedObject *v44;
  JSC::VM *v45;
  double v46;
  objc_class *v47;
  WebCore::DOMGuardedObject *v48;
  JSC::VM *v49;
  JSValue v50;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v52;
  double v53;
  JSC::VM *v54;
  double v55;
  double v56;
  double v57;
  JSC::VM *v58;
  JSC::VM *v59;
  WebCore::DOMGuardedObject *v60;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7A7F4);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_81;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSHTMLModelElement::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSHTMLModelElement::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_81:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "setCamera", v17);
    goto LABEL_37;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v49 = (JSC::VM *)*((_QWORD *)this + 7);
    v50.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v49, this, v50);
    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v18 + 24);
  v25 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
  v58 = (JSC::VM *)*((_QWORD *)this + 7);
  if (((unint64_t)v25 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
LABEL_34:
    v30 = "pitch";
LABEL_35:
    v31 = (int)this;
    v32 = 6;
LABEL_36:
    WebCore::throwRequiredMemberTypeError(v31, (int)&v58, v30, v32, "HTMLModelElementCamera", 23, "double", 7);
    goto LABEL_37;
  }
  if (((unint64_t)v25 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v25)) == 0)
  {
    JSC::throwTypeError();
    goto LABEL_37;
  }
  v27 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v29 = (WebCore::DOMGuardedObject *)JSC::JSObject::get(v27, this, (unint64_t)v60);
  if (v60)
  {
    if (*(_DWORD *)v60 == 2)
      WTF::StringImpl::destroy(v60, v28);
    else
      *(_DWORD *)v60 -= 2;
  }
  if (*((_DWORD *)v58 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v58) & 1) != 0)
    goto LABEL_37;
  if (v29 == (WebCore::DOMGuardedObject *)10)
    goto LABEL_34;
  v35 = (JSC::VM *)*((_QWORD *)this + 7);
  v59 = v35;
  v60 = v29;
  if ((unint64_t)v29 >= 0xFFFE000000000000)
  {
    v36 = (double)(int)v29;
  }
  else if ((unint64_t)v29 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v52 = v35;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v60, this);
    v35 = v52;
    v36 = v53;
  }
  else
  {
    *(_QWORD *)&v36 = (char *)v29 - 0x2000000000000;
  }
  if (*((_DWORD *)v35 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v35) & 1) != 0)
    goto LABEL_37;
  if ((*(_QWORD *)&v36 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    goto LABEL_93;
  WTF::AtomStringImpl::addLiteral();
  v37 = v60;
  v39 = (WebCore::DOMGuardedObject *)JSC::JSObject::get(v27, this, (unint64_t)v60);
  if (v37)
  {
    if (*(_DWORD *)v37 == 2)
      WTF::StringImpl::destroy(v37, v38);
    else
      *(_DWORD *)v37 -= 2;
  }
  if (*((_DWORD *)v58 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v58) & 1) != 0)
    goto LABEL_37;
  if (v39 == (WebCore::DOMGuardedObject *)10)
  {
    v30 = "scale";
    goto LABEL_35;
  }
  v40 = (JSC::VM *)*((_QWORD *)this + 7);
  v59 = v40;
  v60 = v39;
  if ((unint64_t)v39 >= 0xFFFE000000000000)
  {
    v41 = (double)(int)v39;
  }
  else if ((unint64_t)v39 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v54 = v40;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v60, this);
    v40 = v54;
    v41 = v55;
  }
  else
  {
    *(_QWORD *)&v41 = (char *)v39 - 0x2000000000000;
  }
  if (*((_DWORD *)v40 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v40) & 1) != 0)
    goto LABEL_37;
  if ((*(_QWORD *)&v41 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    goto LABEL_93;
  WTF::AtomStringImpl::addLiteral();
  v42 = v60;
  v44 = (WebCore::DOMGuardedObject *)JSC::JSObject::get(v27, this, (unint64_t)v60);
  if (v42)
  {
    if (*(_DWORD *)v42 == 2)
      WTF::StringImpl::destroy(v42, v43);
    else
      *(_DWORD *)v42 -= 2;
  }
  if (*((_DWORD *)v58 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v58) & 1) != 0)
    goto LABEL_37;
  if (v44 == (WebCore::DOMGuardedObject *)10)
  {
    v30 = "yaw";
    v31 = (int)this;
    v32 = 4;
    goto LABEL_36;
  }
  v45 = (JSC::VM *)*((_QWORD *)this + 7);
  v59 = v45;
  v60 = v44;
  if ((unint64_t)v44 >= 0xFFFE000000000000)
  {
    v46 = (double)(int)v44;
  }
  else if ((unint64_t)v44 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v60, this);
    v46 = v56;
  }
  else
  {
    *(_QWORD *)&v46 = (char *)v44 - 0x2000000000000;
  }
  if (*((_DWORD *)v45 + 20))
  {
    v57 = v46;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v45);
    v46 = v57;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      goto LABEL_37;
  }
  if ((*(_QWORD *)&v46 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
LABEL_93:
    JSC::throwTypeError();
LABEL_37:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_39;
  }
  v60 = v14;
  WebCore::HTMLModelElement::setCamera(v24, (uint64_t *)&v60, v36, v46, v41);
  if (v60)
  {
    if (*((_DWORD *)v60 + 4) == 1)
      (*(void (**)(void))(*(_QWORD *)v60 + 16))();
    else
      --*((_DWORD *)v60 + 4);
  }
LABEL_39:
  v33 = *(_QWORD *)(v10 + 16);
  if (v33)
  {
    if (*(_QWORD *)(v10 + 24) != v33)
    {
      v47 = *(objc_class **)(v33 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v60);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v60, v47, 0);
      v48 = v60;
      v60 = 0;
      if (v48)
      {
        if (*((_DWORD *)v48 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v48 + 16))(v48);
        else
          --*((_DWORD *)v48 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_isPlayingAnimation(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  _QWORD *v23;
  uint64_t v24;
  void (*v26)(void);
  objc_class *v27;
  WebCore::DOMGuardedObject *v28;
  WebCore::DOMGuardedObject *v29;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7AB1CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSHTMLModelElement::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSHTMLModelElement::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "isPlayingAnimation", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_32;
  }
  v23 = *(_QWORD **)(v17 + 24);
  v29 = v14;
  WebCore::HTMLModelElement::isPlayingAnimation(v23, (uint64_t *)&v29);
  if (v29)
  {
    if (*((_DWORD *)v29 + 4) != 1)
    {
      --*((_DWORD *)v29 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v29 + 16);
LABEL_32:
    v26();
  }
LABEL_28:
  v24 = *(_QWORD *)(v10 + 16);
  if (v24)
  {
    if (*(_QWORD *)(v10 + 24) != v24)
    {
      v27 = *(objc_class **)(v24 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v29);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v29, v27, 0);
      v28 = v29;
      v29 = 0;
      if (v28)
      {
        if (*((_DWORD *)v28 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
        else
          --*((_DWORD *)v28 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_playAnimation(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  _QWORD *v23;
  uint64_t v24;
  void (*v26)(void);
  objc_class *v27;
  WebCore::DOMGuardedObject *v28;
  WebCore::DOMGuardedObject *v29;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7AD78);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSHTMLModelElement::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSHTMLModelElement::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "playAnimation", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_32;
  }
  v23 = *(_QWORD **)(v17 + 24);
  v29 = v14;
  WebCore::HTMLModelElement::playAnimation(v23, (uint64_t *)&v29);
  if (v29)
  {
    if (*((_DWORD *)v29 + 4) != 1)
    {
      --*((_DWORD *)v29 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v29 + 16);
LABEL_32:
    v26();
  }
LABEL_28:
  v24 = *(_QWORD *)(v10 + 16);
  if (v24)
  {
    if (*(_QWORD *)(v10 + 24) != v24)
    {
      v27 = *(objc_class **)(v24 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v29);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v29, v27, 0);
      v28 = v29;
      v29 = 0;
      if (v28)
      {
        if (*((_DWORD *)v28 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
        else
          --*((_DWORD *)v28 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_pauseAnimation(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  _QWORD *v23;
  uint64_t v24;
  void (*v26)(void);
  objc_class *v27;
  WebCore::DOMGuardedObject *v28;
  WebCore::DOMGuardedObject *v29;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7AFD4);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSHTMLModelElement::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSHTMLModelElement::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "pauseAnimation", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_32;
  }
  v23 = *(_QWORD **)(v17 + 24);
  v29 = v14;
  WebCore::HTMLModelElement::pauseAnimation(v23, (uint64_t *)&v29);
  if (v29)
  {
    if (*((_DWORD *)v29 + 4) != 1)
    {
      --*((_DWORD *)v29 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v29 + 16);
LABEL_32:
    v26();
  }
LABEL_28:
  v24 = *(_QWORD *)(v10 + 16);
  if (v24)
  {
    if (*(_QWORD *)(v10 + 24) != v24)
    {
      v27 = *(objc_class **)(v24 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v29);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v29, v27, 0);
      v28 = v29;
      v29 = 0;
      if (v28)
      {
        if (*((_DWORD *)v28 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
        else
          --*((_DWORD *)v28 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_isLoopingAnimation(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  _QWORD *v23;
  uint64_t v24;
  void (*v26)(void);
  objc_class *v27;
  WebCore::DOMGuardedObject *v28;
  WebCore::DOMGuardedObject *v29;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7B230);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSHTMLModelElement::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSHTMLModelElement::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "isLoopingAnimation", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_32;
  }
  v23 = *(_QWORD **)(v17 + 24);
  v29 = v14;
  WebCore::HTMLModelElement::isLoopingAnimation(v23, (uint64_t *)&v29);
  if (v29)
  {
    if (*((_DWORD *)v29 + 4) != 1)
    {
      --*((_DWORD *)v29 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v29 + 16);
LABEL_32:
    v26();
  }
LABEL_28:
  v24 = *(_QWORD *)(v10 + 16);
  if (v24)
  {
    if (*(_QWORD *)(v10 + 24) != v24)
    {
      v27 = *(objc_class **)(v24 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v29);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v29, v27, 0);
      v28 = v29;
      v29 = 0;
      if (v28)
      {
        if (*((_DWORD *)v28 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
        else
          --*((_DWORD *)v28 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_setIsLoopingAnimation(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  unint64_t v25;
  _BOOL8 v26;
  _QWORD *v27;
  uint64_t v28;
  objc_class *v30;
  WebCore::DOMGuardedObject *v31;
  JSValue v32;
  BOOL v33;
  int v34;
  uint64_t v35;
  int *v36;
  int v37;
  WebCore::DOMGuardedObject *v38;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7B4DCLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_38;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSHTMLModelElement::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSHTMLModelElement::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_38:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "setIsLoopingAnimation", v17);
    goto LABEL_48;
  }
  v24 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v32);
LABEL_48:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_34;
  }
  v25 = *((_QWORD *)a2 + 6);
  if (v25 >= 0xFFFE000000000000)
  {
    v33 = (_DWORD)v25 == 0;
    goto LABEL_67;
  }
  if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v25 & 0xFFFE000000000002) != 0)
    {
      v26 = v25 == 7;
      goto LABEL_30;
    }
    v34 = *(unsigned __int8 *)(v25 + 5);
    if (v34 == 3)
    {
      v37 = *(_DWORD *)(v25 + 8);
    }
    else
    {
      if (v34 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v26 = 1;
          goto LABEL_30;
        }
        v33 = *(_QWORD *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_67;
      }
      v35 = *(_QWORD *)(v25 + 8);
      if ((v35 & 1) != 0)
        v36 = (int *)(v25 + 16);
      else
        v36 = (int *)(v35 + 4);
      v37 = *v36;
    }
    v33 = v37 == 0;
LABEL_67:
    v26 = !v33;
    goto LABEL_30;
  }
  v26 = COERCE_DOUBLE(v25 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v25 - 0x2000000000000) < 0.0;
LABEL_30:
  v27 = *(_QWORD **)(v18 + 24);
  if (*((_DWORD *)v24 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(*((JSC::VM **)this + 7)) & 1) != 0)
    goto LABEL_48;
  v38 = v14;
  WebCore::HTMLModelElement::setIsLoopingAnimation(v27, v26, (uint64_t *)&v38);
  if (v38)
  {
    if (*((_DWORD *)v38 + 4) == 1)
      (*(void (**)(void))(*(_QWORD *)v38 + 16))();
    else
      --*((_DWORD *)v38 + 4);
  }
LABEL_34:
  v28 = *(_QWORD *)(v10 + 16);
  if (v28)
  {
    if (*(_QWORD *)(v10 + 24) != v28)
    {
      v30 = *(objc_class **)(v28 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v38);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v38, v30, 0);
      v31 = v38;
      v38 = 0;
      if (v31)
      {
        if (*((_DWORD *)v31 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v31 + 16))(v31);
        else
          --*((_DWORD *)v31 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_animationDuration(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  _QWORD *v23;
  uint64_t v24;
  void (*v26)(void);
  objc_class *v27;
  WebCore::DOMGuardedObject *v28;
  WebCore::DOMGuardedObject *v29;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7B808);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSHTMLModelElement::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSHTMLModelElement::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "animationDuration", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_32;
  }
  v23 = *(_QWORD **)(v17 + 24);
  v29 = v14;
  WebCore::HTMLModelElement::animationDuration(v23, (uint64_t *)&v29);
  if (v29)
  {
    if (*((_DWORD *)v29 + 4) != 1)
    {
      --*((_DWORD *)v29 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v29 + 16);
LABEL_32:
    v26();
  }
LABEL_28:
  v24 = *(_QWORD *)(v10 + 16);
  if (v24)
  {
    if (*(_QWORD *)(v10 + 24) != v24)
    {
      v27 = *(objc_class **)(v24 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v29);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v29, v27, 0);
      v28 = v29;
      v29 = 0;
      if (v28)
      {
        if (*((_DWORD *)v28 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
        else
          --*((_DWORD *)v28 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_animationCurrentTime(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  _QWORD *v23;
  uint64_t v24;
  void (*v26)(void);
  objc_class *v27;
  WebCore::DOMGuardedObject *v28;
  WebCore::DOMGuardedObject *v29;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7BA64);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSHTMLModelElement::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSHTMLModelElement::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "animationCurrentTime", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_32;
  }
  v23 = *(_QWORD **)(v17 + 24);
  v29 = v14;
  WebCore::HTMLModelElement::animationCurrentTime(v23, (uint64_t *)&v29);
  if (v29)
  {
    if (*((_DWORD *)v29 + 4) != 1)
    {
      --*((_DWORD *)v29 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v29 + 16);
LABEL_32:
    v26();
  }
LABEL_28:
  v24 = *(_QWORD *)(v10 + 16);
  if (v24)
  {
    if (*(_QWORD *)(v10 + 24) != v24)
    {
      v27 = *(objc_class **)(v24 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v29);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v29, v27, 0);
      v28 = v29;
      v29 = 0;
      if (v28)
      {
        if (*((_DWORD *)v28 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
        else
          --*((_DWORD *)v28 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_setAnimationCurrentTime(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  _QWORD *v25;
  WebCore::DOMGuardedObject *v26;
  double v27;
  uint64_t v28;
  JSValue v30;
  objc_class *v31;
  WebCore::DOMGuardedObject *v32;
  double v33;
  WebCore::DOMGuardedObject *v34;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7BD2CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_39;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSHTMLModelElement::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSHTMLModelElement::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_39:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "setAnimationCurrentTime", v17);
    goto LABEL_45;
  }
  v24 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v30);
    goto LABEL_45;
  }
  v25 = *(_QWORD **)(v18 + 24);
  v26 = (WebCore::DOMGuardedObject *)*((_QWORD *)a2 + 6);
  v34 = v26;
  if ((unint64_t)v26 >= 0xFFFE000000000000)
  {
    v27 = (double)(int)v26;
  }
  else if ((unint64_t)v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v34, this);
    v27 = v33;
  }
  else
  {
    *(_QWORD *)&v27 = (char *)v26 - 0x2000000000000;
  }
  if (*((_DWORD *)v24 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v24) & 1) != 0)
    goto LABEL_45;
  if ((*(_QWORD *)&v27 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
LABEL_45:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_34;
  }
  v34 = v14;
  WebCore::HTMLModelElement::setAnimationCurrentTime(v25, (uint64_t *)&v34, v27);
  if (v34)
  {
    if (*((_DWORD *)v34 + 4) == 1)
      (*(void (**)(void))(*(_QWORD *)v34 + 16))();
    else
      --*((_DWORD *)v34 + 4);
  }
LABEL_34:
  v28 = *(_QWORD *)(v10 + 16);
  if (v28)
  {
    if (*(_QWORD *)(v10 + 24) != v28)
    {
      v31 = *(objc_class **)(v28 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v34);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v34, v31, 0);
      v32 = v34;
      v34 = 0;
      if (v32)
      {
        if (*((_DWORD *)v32 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v32 + 16))(v32);
        else
          --*((_DWORD *)v32 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_hasAudio(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  _QWORD *v23;
  uint64_t v24;
  void (*v26)(void);
  objc_class *v27;
  WebCore::DOMGuardedObject *v28;
  WebCore::DOMGuardedObject *v29;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7C000);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSHTMLModelElement::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSHTMLModelElement::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "hasAudio", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_32;
  }
  v23 = *(_QWORD **)(v17 + 24);
  v29 = v14;
  WebCore::HTMLModelElement::hasAudio(v23, (uint64_t *)&v29);
  if (v29)
  {
    if (*((_DWORD *)v29 + 4) != 1)
    {
      --*((_DWORD *)v29 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v29 + 16);
LABEL_32:
    v26();
  }
LABEL_28:
  v24 = *(_QWORD *)(v10 + 16);
  if (v24)
  {
    if (*(_QWORD *)(v10 + 24) != v24)
    {
      v27 = *(objc_class **)(v24 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v29);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v29, v27, 0);
      v28 = v29;
      v29 = 0;
      if (v28)
      {
        if (*((_DWORD *)v28 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
        else
          --*((_DWORD *)v28 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_isMuted(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  _QWORD *v23;
  uint64_t v24;
  void (*v26)(void);
  objc_class *v27;
  WebCore::DOMGuardedObject *v28;
  WebCore::DOMGuardedObject *v29;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7C25CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSHTMLModelElement::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSHTMLModelElement::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_33:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "isMuted", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_32;
  }
  v23 = *(_QWORD **)(v17 + 24);
  v29 = v14;
  WebCore::HTMLModelElement::isMuted(v23, (uint64_t *)&v29);
  if (v29)
  {
    if (*((_DWORD *)v29 + 4) != 1)
    {
      --*((_DWORD *)v29 + 4);
      goto LABEL_28;
    }
    v26 = *(void (**)(void))(*(_QWORD *)v29 + 16);
LABEL_32:
    v26();
  }
LABEL_28:
  v24 = *(_QWORD *)(v10 + 16);
  if (v24)
  {
    if (*(_QWORD *)(v10 + 24) != v24)
    {
      v27 = *(objc_class **)(v24 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v29);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v29, v27, 0);
      v28 = v29;
      v29 = 0;
      if (v28)
      {
        if (*((_DWORD *)v28 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
        else
          --*((_DWORD *)v28 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsHTMLModelElementPrototypeFunction_setIsMuted(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  unint64_t v25;
  _BOOL8 v26;
  _QWORD *v27;
  uint64_t v28;
  objc_class *v30;
  WebCore::DOMGuardedObject *v31;
  JSValue v32;
  BOOL v33;
  int v34;
  uint64_t v35;
  int *v36;
  int v37;
  WebCore::DOMGuardedObject *v38;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194C7C508);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_38;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSHTMLModelElement::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSHTMLModelElement::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_38:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"HTMLModelElement", "setIsMuted", v17);
    goto LABEL_48;
  }
  v24 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v32);
LABEL_48:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_34;
  }
  v25 = *((_QWORD *)a2 + 6);
  if (v25 >= 0xFFFE000000000000)
  {
    v33 = (_DWORD)v25 == 0;
    goto LABEL_67;
  }
  if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v25 & 0xFFFE000000000002) != 0)
    {
      v26 = v25 == 7;
      goto LABEL_30;
    }
    v34 = *(unsigned __int8 *)(v25 + 5);
    if (v34 == 3)
    {
      v37 = *(_DWORD *)(v25 + 8);
    }
    else
    {
      if (v34 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v26 = 1;
          goto LABEL_30;
        }
        v33 = *(_QWORD *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_67;
      }
      v35 = *(_QWORD *)(v25 + 8);
      if ((v35 & 1) != 0)
        v36 = (int *)(v25 + 16);
      else
        v36 = (int *)(v35 + 4);
      v37 = *v36;
    }
    v33 = v37 == 0;
LABEL_67:
    v26 = !v33;
    goto LABEL_30;
  }
  v26 = COERCE_DOUBLE(v25 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v25 - 0x2000000000000) < 0.0;
LABEL_30:
  v27 = *(_QWORD **)(v18 + 24);
  if (*((_DWORD *)v24 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(*((JSC::VM **)this + 7)) & 1) != 0)
    goto LABEL_48;
  v38 = v14;
  WebCore::HTMLModelElement::setIsMuted(v27, v26, (uint64_t *)&v38);
  if (v38)
  {
    if (*((_DWORD *)v38 + 4) == 1)
      (*(void (**)(void))(*(_QWORD *)v38 + 16))();
    else
      --*((_DWORD *)v38 + 4);
  }
LABEL_34:
  v28 = *(_QWORD *)(v10 + 16);
  if (v28)
  {
    if (*(_QWORD *)(v10 + 24) != v28)
    {
      v30 = *(objc_class **)(v28 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v38);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v38, v30, 0);
      v31 = v38;
      v38 = 0;
      if (v31)
      {
        if (*((_DWORD *)v31 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v31 + 16))(v31);
        else
          --*((_DWORD *)v31 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t WebCore::jsHTMLObjectElementPrototypeFunction_checkValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;

  v3 = *((_QWORD *)a2 + 5);
  v11 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "HTMLObjectElement", "checkValidity");
  v4 = 16 * (*(_DWORD *)v3 & 0xFFFFFFFE);
  v5 = *(unsigned int *)(v4 + 76);
  v6 = *(_DWORD *)(v4 + 76) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLObjectElement::s_info && v7 != 0);
  }
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "HTMLObjectElement", "checkValidity");
  else
    return 7;
}

uint64_t WebCore::jsHTMLObjectElementPrototypeFunction_reportValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;

  v3 = *((_QWORD *)a2 + 5);
  v11 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "HTMLObjectElement", "reportValidity");
  v4 = 16 * (*(_DWORD *)v3 & 0xFFFFFFFE);
  v5 = *(unsigned int *)(v4 + 76);
  v6 = *(_DWORD *)(v4 + 76) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLObjectElement::s_info && v7 != 0);
  }
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "HTMLObjectElement", "reportValidity");
  else
    return 7;
}

_BYTE *WebCore::jsHTMLObjectElementPrototypeFunction_setCustomValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  uint64_t v17;
  JSValue v20;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v22;
  uint64_t v23;
  int v24;
  WTF::StringImpl *v25;
  uint64_t v26;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "HTMLObjectElement", "setCustomValidity");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLObjectElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "HTMLObjectElement", "setCustomValidity");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v20);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v26 = v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v25 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v26, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v25;
    if (hasExceptionsAfterHandlingTraps)
    {
      v24 = 1;
      v25 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, a2);
        else
          *(_DWORD *)v14 -= 2;
      }
      v17 = 0;
      v16 = 1;
      goto LABEL_30;
    }
  }
  else
  {
    v14 = v25;
  }
  v24 = 0;
  v23 = 0;
  if (v14)
    *(_DWORD *)v14 += 2;
  v15 = *(WTF::StringImpl **)(v11 + 280);
  *(_QWORD *)(v11 + 280) = v14;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
    {
      WTF::StringImpl::destroy(v15, a2);
      if (!v14)
        goto LABEL_37;
      goto LABEL_27;
    }
    *(_DWORD *)v15 -= 2;
  }
  if (!v14)
  {
LABEL_37:
    v16 = 0;
    goto LABEL_29;
  }
LABEL_27:
  if (*(_DWORD *)v14 == 2)
  {
    WTF::StringImpl::destroy(v14, a2);
    goto LABEL_37;
  }
  v16 = 0;
  *(_DWORD *)v14 -= 2;
LABEL_29:
  v17 = 10;
LABEL_30:
  ((void (*)(uint64_t *, uint64_t *, JSC::CallFrame *))off_1E329F280[v16])(&v26, &v23, a3);
  return (_BYTE *)v17;
}

unint64_t WebCore::jsHTMLObjectElementPrototypeFunction_getSVGDocument(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  JSC::JSGlobalObject *v15;
  WebCore::Document *v16;
  void *v17;
  unint64_t v18;
  WebCore::Node *v19;
  uint64_t v20;
  WebCore::Node *v21;

  v4 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "HTMLObjectElement", "getSVGDocument");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLObjectElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLObjectElement::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "HTMLObjectElement", "getSVGDocument");
  v11 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 112);
  if (!v11)
    return 2;
  v12 = *(_QWORD *)(v11 + 8);
  if (!v12)
    return 2;
  if (*(_BYTE *)(v12 + 144))
    return 2;
  v14 = *(_QWORD *)(v12 + 296);
  if (!v14)
    return 2;
  if ((*(_WORD *)(v14 + 3358) & 0x20) == 0)
    return 2;
  v15 = *(JSC::JSGlobalObject **)(v5 + 40);
  if (!WebCore::canAccessDocument((uint64_t)this, *(WTF::StringImpl **)(*(_QWORD *)(v14 + 40) + 8), 1))
    return 2;
  result = WebCore::cachedDocumentWrapper((WebCore::DOMWrapperWorld **)this, v15, (WebCore::JSDOMGlobalObject *)v14, v16);
  if (!result)
  {
    *(_DWORD *)(v14 + 24) += 2;
    v21 = (WebCore::Node *)v14;
    v18 = WebCore::toJSNewlyCreated((uint64_t)this, v15, &v21);
    v19 = v21;
    v21 = 0;
    if (v19)
    {
      if (*((_DWORD *)v19 + 6) == 2)
      {
        if ((*((_WORD *)v19 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v19, v17);
      }
      else
      {
        *((_DWORD *)v19 + 6) -= 2;
      }
    }
    return v18;
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore17HTMLOptionElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore17HTMLOptionElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsHTMLOptionsCollectionPrototypeFunction_add(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  WTF::StringImpl *v13;
  int v14;
  unint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  WTF *v20;
  JSValue v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  JSValue v28;
  WTF::StringImpl *v29;
  JSC::VM *v30;
  uint64_t *v31;
  uint64_t v32;
  _BYTE v33[40];
  uint64_t v34;
  JSC::JSGlobalObject *v35;
  int v36;
  WTF::StringImpl *v37;
  char v38;
  char v39[8];
  WTF::StringImpl *v40;
  char v41;
  char v42[8];
  int v43;
  char v44;
  char v45[8];
  char v46[8];
  int v47;
  char v48;
  int v49;
  char v50[8];
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;

  v3 = (uint64_t)this;
  v54 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v30 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v30, "HTMLOptionsCollection", "add");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLOptionsCollection::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLOptionsCollection::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v30, "HTMLOptionsCollection", "add");
  v12 = *(_QWORD *)(v5 + 24);
  v31 = (uint64_t *)v33;
  v32 = 4;
  v33[32] = 0;
  v34 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v35 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v31;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v3 = JSC::VM::throwException(v4, (JSC::JSGlobalObject *)v3, v23);
    goto LABEL_38;
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLOptionElement>,WebCore::IDLInterface<WebCore::HTMLOptGroupElement>>>::convert((uint64_t)v50, (uint64_t)this, *((_QWORD *)a2 + 6));
  v14 = v53;
  if (!v53)
  {
    if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v15 = *((_QWORD *)a2 + 7), v15 == 10))
    {
      v46[0] = 0;
      v48 = 0;
      v49 = 0;
    }
    else
    {
      WebCore::Converter<WebCore::IDLNullable<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLElement>,WebCore::IDLLong>>>::convert((uint64_t)v45, (JSC::JSGlobalObject *)v3, v15);
      v16 = v49;
      if (v49)
      {
        v3 = 0;
        goto LABEL_33;
      }
      if (v53)
        goto LABEL_71;
    }
    v42[0] = 0;
    v43 = -1;
    v17 = v52;
    if (v52 == -1
      || (((void (*)(char *, char *, uint64_t *))off_1E329F520[v52])(v39, v42, &v51), v43 = v17, !v49))
    {
      v39[0] = 0;
      v41 = 0;
      if (v48)
      {
        LODWORD(v40) = -1;
        v18 = v47;
        if (v47 != -1)
        {
          ((void (*)(char *, char *, char *))off_1E329F540[v47])(&v44, v39, v46);
          LODWORD(v40) = v18;
        }
        v41 = 1;
      }
      v19 = WTF::downcast<WebCore::HTMLSelectElement,WebCore::ContainerNode>(*(_QWORD *)(v12 + 24));
      WebCore::HTMLSelectElement::add(v19, (uint64_t)v42, (uint64_t)v39, (uint64_t)&v36);
      if (v41 && (_DWORD)v40 != -1)
        ((void (*)(char *, char *))off_1E329F530[v40])(&v44, v39);
      if (v43 != -1)
        ((void (*)(char *, char *))off_1E329F510[v43])(v39, v42);
      if (!v38)
      {
        v3 = 10;
LABEL_32:
        v16 = v49;
LABEL_33:
        if (v16 != -1)
          ((void (*)(char *, char *))off_1E329F560[v16])(v39, v46);
        v14 = v53;
        goto LABEL_36;
      }
      v13 = (WTF::StringImpl *)v36;
      v39[0] = v36;
      v27 = v37;
      v37 = 0;
      v40 = v27;
      if (!*((_QWORD *)v4 + 2))
      {
        v28.super.isa = (Class)WebCore::createDOMException((JSC *)v3, (JSC::JSGlobalObject *)v36, (JSC::JSGlobalObject *)&v40);
        JSC::VM::throwException(v4, (JSC::JSGlobalObject *)v3, v28);
        v27 = v40;
      }
      v40 = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          WTF::StringImpl::destroy(v27, v13);
        else
          *(_DWORD *)v27 -= 2;
      }
      if (v38)
      {
        v29 = v37;
        v37 = 0;
        if (v29)
        {
          if (*(_DWORD *)v29 != 2)
          {
            v3 = 0;
            *(_DWORD *)v29 -= 2;
            goto LABEL_32;
          }
          WTF::StringImpl::destroy(v29, v13);
        }
      }
      v3 = 0;
      goto LABEL_32;
    }
LABEL_71:
    v20 = (WTF *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_72:
    v31 = 0;
    LODWORD(v32) = 0;
    WTF::fastFree(v20, v13);
    return (_BYTE *)v3;
  }
  v3 = 0;
LABEL_36:
  if (v14 != -1)
    ((void (*)(char *, uint64_t *))off_1E329F570[v14])(v45, &v51);
LABEL_38:
  if (HIDWORD(v32))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v31, v35);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v34;
    if (HIDWORD(v32))
    {
      v24 = v31;
      v25 = 8 * HIDWORD(v32);
      do
      {
        v26 = *v24;
        *v24 = 0;
        if (v26)
        {
          if (*(_DWORD *)(v26 + 24) == 2)
          {
            if ((*(_WORD *)(v26 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v26, v13);
          }
          else
          {
            *(_DWORD *)(v26 + 24) -= 2;
          }
        }
        ++v24;
        v25 -= 8;
      }
      while (v25);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v34;
  }
  v20 = (WTF *)v31;
  if (v33 != (_BYTE *)v31 && v31 != 0)
    goto LABEL_72;
  return (_BYTE *)v3;
}

_BYTE *WebCore::jsHTMLOptionsCollectionPrototypeFunction_remove(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  int v13;
  WebCore::HTMLSelectElement *v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  JSValue v24;
  WTF *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  JSC::VM *v29;
  WTF *v30;
  uint64_t v31;
  _BYTE v32[40];
  uint64_t v33;
  JSC::JSGlobalObject *v34;
  unint64_t v35;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLOptionsCollection", "remove");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLOptionsCollection::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLOptionsCollection::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLOptionsCollection", "remove");
  v11 = *(_QWORD *)(v5 + 24);
  v30 = (WTF *)v32;
  v31 = 4;
  v32[32] = 0;
  v33 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v34 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v30;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v16 = JSC::VM::throwException(v4, this, v24);
  }
  else
  {
    v12 = *((_QWORD *)a2 + 6);
    v35 = v12;
    if (v12 < 0xFFFE000000000000)
    {
      v20 = v12 - 0x2000000000000;
      if (v12 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
        v20 = v28;
      }
      v21 = (v20 >> 52) & 0x7FF;
      if ((v21 - 1023) <= 0x53)
      {
        v22 = v20 >> (51 - (v20 >> 52));
        if (v21 > 0x433)
          LODWORD(v22) = v20 << ((v20 >> 52) - 51);
        if (v21 >= 0x41F)
          v23 = v22;
        else
          v23 = (((1 << ((v20 >> 52) + 1)) - 1) & v22) + (1 << ((v20 >> 52) + 1));
        if ((v20 & 0x8000000000000000) == 0)
          v13 = v23;
        else
          v13 = -v23;
      }
      else
      {
        v13 = 0;
      }
    }
    else
    {
      v13 = v12;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      v16 = 0;
    }
    else
    {
      v14 = (WebCore::HTMLSelectElement *)WTF::downcast<WebCore::HTMLSelectElement,WebCore::ContainerNode>(*(_QWORD *)(v11 + 24));
      WebCore::HTMLSelectElement::remove(v14, v13);
      v16 = 10;
    }
  }
  if (HIDWORD(v31))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v30, v34);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v33;
    if (HIDWORD(v31))
    {
      v25 = v30;
      v26 = 8 * HIDWORD(v31);
      do
      {
        v27 = *(_QWORD *)v25;
        *(_QWORD *)v25 = 0;
        if (v27)
        {
          if (*(_DWORD *)(v27 + 24) == 2)
          {
            if ((*(_WORD *)(v27 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v27, v15);
          }
          else
          {
            *(_DWORD *)(v27 + 24) -= 2;
          }
        }
        v25 = (WTF *)((char *)v25 + 8);
        v26 -= 8;
      }
      while (v26);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v33;
  }
  v17 = v30;
  if (v32 != (_BYTE *)v30 && v30 != 0)
  {
    v30 = 0;
    LODWORD(v31) = 0;
    WTF::fastFree(v17, v15);
  }
  return (_BYTE *)v16;
}

unint64_t WebCore::jsHTMLOptionsCollectionPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLOptionsCollection *v11;
  uint64_t *v12;
  uint64_t v13;
  JSValue v15;
  JSC::VM *v16;
  unsigned int v17[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLOptionsCollection", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLOptionsCollection::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLOptionsCollection::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLOptionsCollection", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v15);
  }
  else
  {
    v11 = *(WebCore::HTMLOptionsCollection **)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v17);
    if (v17[1])
    {
      return 0;
    }
    else
    {
      v12 = *(uint64_t **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      v13 = WebCore::CollectionIndexCache<WebCore::HTMLOptionsCollection,WebCore::ElementDescendantIterator<WebCore::Element>>::nodeAt((uint64_t)v11 + 40, v11, v17[0]);
      if (v13)
      {
        if ((*(_WORD *)(v13 + 28) & 0x10) == 0
          || *(_QWORD *)(*(_QWORD *)(v13 + 96) + 24) != *(_QWORD *)(WebCore::HTMLNames::optionTag + 24))
        {
          __break(0xC471u);
          JUMPOUT(0x194C7D3E0);
        }
        return WebCore::wrap<WebCore::HTMLOptionElement>(v12, (WTF *)v13);
      }
      else
      {
        return 2;
      }
    }
  }
}

_BYTE *WebCore::jsHTMLOptionsCollectionPrototypeFunction_namedItem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSC::JSRopeString *v12;
  JSC::JSRopeString *v13;
  WTF::StringImpl *v14;
  uint64_t *v15;
  uint64_t v16;
  WTF *v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  JSValue v23;
  JSC::VM *v24;
  JSC::JSRopeString *v25;
  WTF::StringImpl *v26;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "HTMLOptionsCollection", "namedItem");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLOptionsCollection::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLOptionsCollection::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "HTMLOptionsCollection", "namedItem");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v23);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = (JSC::JSRopeString *)*((_QWORD *)a2 + 6);
  v25 = v12;
  if (((unint64_t)v12 & 0xFFFE000000000002) != 0 || (v13 = v12, *((_BYTE *)v12 + 5) != 2))
    v13 = (JSC::JSRopeString *)JSC::JSValue::toStringSlowCase((JSC::JSValue *)&v25, this);
  v14 = (WTF::StringImpl *)*((_QWORD *)v13 + 1);
  if ((v14 & 1) != 0)
  {
    JSC::JSRopeString::resolveRopeToExistingAtomString(v13, this);
  }
  else
  {
    if ((*((_BYTE *)v14 + 16) & 0x10) != 0)
    {
      *(_DWORD *)v14 += 2;
      goto LABEL_20;
    }
    WTF::AtomStringImpl::lookUpSlowCase(v14, a2);
  }
  v14 = v26;
LABEL_20:
  v15 = *(uint64_t **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v26 = v14;
  v16 = WebCore::CachedHTMLCollection<WebCore::HTMLOptionsCollection,(WebCore::CollectionTraversalType)0>::namedItem(v11, (uint64_t *)&v26);
  v17 = (WTF *)WTF::downcast<WebCore::HTMLOptionElement,WebCore::Element>(v16);
  if (v17)
    v19 = WebCore::wrap<WebCore::HTMLOptionElement>(v15, v17);
  else
    v19 = 2;
  v20 = v26;
  v26 = 0;
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v18);
    else
      *(_DWORD *)v20 -= 2;
  }
  return (_BYTE *)v19;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLOptionElement>,WebCore::IDLInterface<WebCore::HTMLOptGroupElement>>>::convert(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _BOOL4 v9;
  char **v10;
  BOOL v11;
  uint64_t v13;
  uint64_t result;
  int v15;
  uint64_t v16;
  int v17;
  unsigned __int8 v18;
  uint64_t v19;
  char v20;

  v19 = *(_QWORD *)(a2 + 56);
  v5 = JSC::jsDynamicCast<WebCore::JSHTMLOptionElement *>(a3);
  if (v5 && (v6 = *(_QWORD *)(v5 + 24)) != 0)
  {
    v7 = 0;
  }
  else
  {
    if ((a3 & 0xFFFE000000000002) != 0)
      goto LABEL_20;
    v8 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
    v9 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
    v10 = (char **)(16 * v8);
    if ((_DWORD)v8)
      v11 = v10 == &WebCore::JSHTMLOptGroupElement::s_info;
    else
      v11 = 1;
    if (!v11)
    {
      do
      {
        v10 = (char **)v10[2];
        v9 = v10 != 0;
      }
      while (v10 != &WebCore::JSHTMLOptGroupElement::s_info && v10 != 0);
    }
    if (!v9 || (v6 = *(_QWORD *)(a3 + 24)) == 0)
    {
LABEL_20:
      result = JSC::throwTypeError();
      *(_DWORD *)(a1 + 24) = 1;
      return result;
    }
    v7 = 1;
  }
  *(_DWORD *)(v6 + 24) += 2;
  v16 = v6;
  v17 = v7;
  v18 = 1;
  *(_BYTE *)(a1 + 8) = 0;
  v13 = a1 + 8;
  *(_DWORD *)(v13 + 8) = -1;
  result = ((uint64_t (*)(char *, uint64_t, uint64_t *))off_1E329F520[v7])(&v20, v13, &v16);
  *(_DWORD *)(v13 + 8) = v7;
  v15 = v18;
  *(_DWORD *)(v13 + 16) = 0;
  if (v15)
  {
    if (v17 != -1)
      return ((uint64_t (*)(char *, uint64_t *))off_1E329F510[v17])(&v20, &v16);
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore17HTMLOptionElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_19HTMLOptGroupElementENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore17HTMLOptionElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_19HTMLOptGroupElementENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore17HTMLOptionElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_19HTMLOptGroupElementENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSS_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEEOS10_EEEDcSS_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore17HTMLOptionElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_19HTMLOptGroupElementENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSS_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEEOS10_EEEDcSS_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11HTMLElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEiEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSI_1EJSG_iEEEEEEDcSK_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11HTMLElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEiEEEE19__generic_constructB8sn180100INS0_18__move_constructorISH_LNS0_6_TraitE1EEEEEvRSI_OT_EUlRSO_OT0_E_JRNS0_6__baseILSL_1EJSG_iEEEOSW_EEEDcSO_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11HTMLElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEEiEEEE19__generic_constructB8sn180100INS0_18__move_constructorISH_LNS0_6_TraitE1EEEEEvRSI_OT_EUlRSO_OT0_E_JRNS0_6__baseILSL_1EJSG_iEEEOSW_EEEDcSO_DpT0_(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  *a2 = *a3;
}

uint64_t WebCore::Converter<WebCore::IDLNullable<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLElement>,WebCore::IDLLong>>>::convert(uint64_t result, JSC::JSGlobalObject *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  int v10;
  JSC::VM *v11;
  int v12;
  char v13;
  JSC::VM *v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  int v19;
  int v20;
  int v21;
  uint64_t (*v22)();
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int v27;
  unint64_t v28;
  int v29;
  int v30;
  int v31;
  char v32;
  JSC::VM *v33;
  int v34;
  int hasExceptionsAfterHandlingTraps;
  char v36[8];
  int v37;
  char v38[8];
  int v39;
  unsigned __int8 v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;

  v3 = result;
  v46 = *MEMORY[0x1E0C80C00];
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    return result;
  }
  if ((a3 & 0xFFFE000000000002) == 0)
  {
    v4 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
    v5 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
    v6 = (char **)(16 * v4);
    if ((_DWORD)v4)
      v7 = v6 == &WebCore::JSHTMLElement::s_info;
    else
      v7 = 1;
    if (!v7)
    {
      do
      {
        v6 = (char **)v6[2];
        v5 = v6 != 0;
      }
      while (v6 != &WebCore::JSHTMLElement::s_info && v6 != 0);
    }
    if (v5)
    {
      v9 = *(_QWORD *)(a3 + 24);
      if (v9)
      {
        v10 = 0;
        *(_DWORD *)(v9 + 24) += 2;
        v43 = v9;
        v44 = 0;
        v45 = 0;
        goto LABEL_35;
      }
    }
  }
  if (!(a3 >> 49))
  {
    v42 = a3;
    v14 = (JSC::VM *)*((_QWORD *)a2 + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v42, a2);
    v16 = (v15 >> 52) & 0x7FF;
    v17 = v16 - 1023;
    v18 = v15 << ((v15 >> 52) - 51);
    if (v16 <= 0x433)
      LODWORD(v18) = v15 >> (51 - (v15 >> 52));
    v13 = 1;
    if (v16 >= 0x41F)
      v19 = v18;
    else
      v19 = (((1 << ((v15 >> 52) + 1)) - 1) & v18) + (1 << ((v15 >> 52) + 1));
    if ((v15 & 0x8000000000000000) == 0)
      v20 = v19;
    else
      v20 = -v19;
    if (v17 <= 0x53)
      v21 = v20;
    else
      v21 = 0;
    if (*((_DWORD *)v14 + 20))
    {
      v33 = v14;
      v34 = v21;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v33);
      v21 = v34;
      v13 = 1;
      if (hasExceptionsAfterHandlingTraps)
        goto LABEL_59;
    }
    v12 = 0;
    LODWORD(v43) = v21;
LABEL_33:
    v44 = 1;
    goto LABEL_34;
  }
  v11 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if (a3 < 0xFFFE000000000000)
  {
    v25 = a3 - 0x2000000000000;
    v26 = ((a3 - 0x2000000000000) >> 52) & 0x7FF;
    v27 = v26 - 1023;
    v28 = (unint64_t)v25 >> (51 - ((unint64_t)v25 >> 52));
    if (v26 > 0x433)
      LODWORD(v28) = a3 << (((a3 - 0x2000000000000) >> 52) - 51);
    if (v26 >= 0x41F)
      v29 = v28;
    else
      v29 = (((1 << (((a3 - 0x2000000000000) >> 52) + 1)) - 1) & v28) + (1 << (((a3 - 0x2000000000000) >> 52) + 1));
    if (v25 >= 0)
      v30 = v29;
    else
      v30 = -v29;
    if (v27 <= 0x53)
      LODWORD(a3) = v30;
    else
      LODWORD(a3) = 0;
  }
  if (!*((_DWORD *)v11 + 20)
    || (v31 = a3, v32 = JSC::VM::hasExceptionsAfterHandlingTraps(v11), LODWORD(a3) = v31, (v32 & 1) == 0))
  {
    v12 = 0;
    v13 = 1;
    LODWORD(v43) = a3;
    goto LABEL_33;
  }
LABEL_59:
  v13 = 0;
  v12 = 1;
LABEL_34:
  v45 = v12;
  v10 = 1;
  if ((v13 & 1) == 0)
  {
    *(_DWORD *)(v3 + 32) = 1;
    return ((uint64_t (*)(char *, uint64_t *))off_1E329F550[v10])(v38, &v43);
  }
LABEL_35:
  v36[0] = 0;
  v37 = -1;
  v22 = off_1E329F540[v10];
  ((void (*)(char *, char *, uint64_t *))v22)(v38, v36, &v43);
  v37 = v10;
  v38[0] = 0;
  v39 = -1;
  ((void (*)(char *, char *, char *))v22)(&v41, v38, v36);
  v39 = v10;
  v40 = 1;
  *(_BYTE *)(v3 + 8) = 0;
  v23 = v3 + 8;
  *(_BYTE *)(v23 + 16) = 0;
  *(_DWORD *)(v23 + 8) = -1;
  result = ((uint64_t (*)(char *, uint64_t, char *))v22)(&v41, v23, v38);
  *(_DWORD *)(v23 + 8) = v10;
  v24 = v40;
  *(_BYTE *)(v23 + 16) = 1;
  *(_DWORD *)(v23 + 24) = 0;
  if (v24)
  {
    if (v39 != -1)
      result = ((uint64_t (*)(char *, char *))off_1E329F530[v39])(&v41, v38);
    v39 = -1;
  }
  if (v37 != -1)
    result = ((uint64_t (*)(char *, char *))off_1E329F530[v37])(&v41, v36);
  v10 = v45;
  if (v45 != -1)
    return ((uint64_t (*)(char *, uint64_t *))off_1E329F550[v10])(v38, &v43);
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore11HTMLElementENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEEiEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSL_1EJSI_SJ_EEEEEEDcSN_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E329F530[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalINS_7variantIJN3WTF6RefPtrIN7WebCore11HTMLElementENSA_12RawPtrTraitsISD_EENSA_21DefaultRefDerefTraitsISD_EEEEiEEEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSK_SL_EEEEEEDcSP_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  if (*(_BYTE *)(a2 + 16))
  {
    v3 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E329F530[v3])(&v5, a2);
    *(_DWORD *)(a2 + 8) = -1;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore17HTMLOptionElementENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENSA_INSB_19HTMLOptGroupElementENSD_ISI_EENSF_ISI_EEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSP_1EJSM_SN_EEEEEEDcSR_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E329F510[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

void WebCore::CustomElementQueue::~CustomElementQueue(uint64_t **this, void *a2)
{
  uint64_t v2;
  WTF *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::CustomElementQueue *v8;

  v2 = *((unsigned int *)this + 3);
  if ((_DWORD)v2)
  {
    v5 = *this;
    v6 = 8 * v2;
    v8 = (WebCore::CustomElementQueue *)this;
    do
    {
      v7 = *v5;
      *v5 = 0;
      if (v7)
      {
        if (*(_DWORD *)(v7 + 24) == 2)
        {
          if ((*(_WORD *)(v7 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v7, a2);
        }
        else
        {
          *(_DWORD *)(v7 + 24) -= 2;
        }
      }
      ++v5;
      v6 -= 8;
      this = (uint64_t **)v8;
    }
    while (v6);
  }
  v3 = (WTF *)*this;
  if (this + 2 != (uint64_t **)*this && v3 != 0)
  {
    *this = 0;
    *((_DWORD *)this + 2) = 0;
    WTF::fastFree(v3, a2);
  }
}

uint64_t WebCore::jsHTMLOutputElementPrototypeFunction_checkValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLOutputElement", "checkValidity");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLOutputElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLOutputElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLOutputElement", "checkValidity");
  if (WebCore::ValidatedFormListedElement::checkValidity((_BYTE *)(*(_QWORD *)(v3 + 24) + 112), 0))
    return 7;
  return 6;
}

uint64_t WebCore::jsHTMLOutputElementPrototypeFunction_reportValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLOutputElement", "reportValidity");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLOutputElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLOutputElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLOutputElement", "reportValidity");
  if (WebCore::ValidatedFormListedElement::reportValidity((WebCore::ValidatedFormListedElement *)(*(_QWORD *)(v3 + 24) + 112)))
    return 7;
  return 6;
}

_BYTE *WebCore::jsHTMLOutputElementPrototypeFunction_setCustomValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  JSValue v21;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v23;
  uint64_t v24;
  int v25;
  WTF::StringImpl *v26;
  uint64_t v27;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "HTMLOutputElement", "setCustomValidity");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLOutputElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLOutputElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "HTMLOutputElement", "setCustomValidity");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v21);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v27 = v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v26 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v27, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v26;
    if (hasExceptionsAfterHandlingTraps)
    {
      v25 = 1;
      v26 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, a2);
        else
          *(_DWORD *)v14 -= 2;
      }
      v18 = 0;
      v17 = 1;
      goto LABEL_30;
    }
  }
  else
  {
    v14 = v26;
  }
  v25 = 0;
  v24 = 0;
  if (v14)
    *(_DWORD *)v14 += 2;
  v15 = *(WTF::StringImpl **)(v11 + 144);
  *(_QWORD *)(v11 + 144) = v14;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, a2);
    else
      *(_DWORD *)v15 -= 2;
  }
  WebCore::ValidatedFormListedElement::updateValidity(v11 + 112);
  if (!v14)
    goto LABEL_36;
  if (*(_DWORD *)v14 == 2)
  {
    WTF::StringImpl::destroy(v14, v16);
LABEL_36:
    v17 = 0;
    goto LABEL_29;
  }
  v17 = 0;
  *(_DWORD *)v14 -= 2;
LABEL_29:
  v18 = 10;
LABEL_30:
  ((void (*)(uint64_t *, uint64_t *))off_1E329F280[v17])(&v27, &v24);
  return (_BYTE *)v18;
}

uint64_t WebCore::jsHTMLScriptElementConstructorFunction_supports(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  int v8;
  const char *v9;
  int v10;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  JSValue v21;
  int hasExceptionsAfterHandlingTraps;
  uint16x8_t v23;
  uint64_t v25;
  int v26;
  WTF::StringImpl *v27;
  uint64_t v28;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  v5 = *((_QWORD *)a2 + 6);
  v28 = v5;
  if ((v5 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v5 + 5) == 2)
  {
    v6 = *(WTF::StringImpl **)(v5 + 8);
    if ((v6 & 1) != 0)
    {
      v6 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v5, this);
      if (!v6)
        goto LABEL_7;
    }
    else if (!v6)
    {
LABEL_7:
      v27 = v6;
      goto LABEL_8;
    }
    *(_DWORD *)v6 += 2;
    goto LABEL_7;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v28, this);
LABEL_8:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v7 = v27;
    if (hasExceptionsAfterHandlingTraps)
    {
      v26 = 1;
      v27 = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, a2);
        else
          *(_DWORD *)v7 -= 2;
      }
      v14 = 0;
      v16 = 1;
      goto LABEL_45;
    }
  }
  else
  {
    v7 = v27;
  }
  v26 = 0;
  v25 = 0;
  if (v7)
  {
    v8 = *((_DWORD *)v7 + 4);
    v9 = (const char *)*((_QWORD *)v7 + 1);
    v10 = *((_DWORD *)v7 + 1);
    if (v9 != "classic" && v10 == 7)
    {
      if ((v8 & 4) == 0)
      {
        if (*(_WORD *)v9 != 99)
          goto LABEL_21;
        v17 = *(_QWORD *)(v9 + 2);
        v18 = *(_QWORD *)(v9 + 6);
        if (v17 != 0x7300730061006CLL || v18 != 0x63006900730073)
          goto LABEL_21;
        goto LABEL_42;
      }
      if (*v9 != 99 || *(_DWORD *)(v9 + 1) != 1936941420)
        goto LABEL_21;
      v12 = *(_DWORD *)(v9 + 3);
      v13 = 1667855219;
    }
    else
    {
      if (v9 == "classic" && v10 == 7)
        goto LABEL_42;
      if (v9 == "module" || v10 != 6)
      {
        if (v9 == "module" && v10 == 6)
          goto LABEL_42;
        if (v9 == "importmap" || v10 != 9)
        {
          if (v10 != 9 || v9 != "importmap")
            goto LABEL_21;
          goto LABEL_42;
        }
        if ((v8 & 4) == 0)
        {
          if (*(_WORD *)v9 != 105)
            goto LABEL_21;
          v23 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v9 + 2), (int16x8_t)xmmword_1968BFF60);
          v23.i16[0] = vminvq_u16(v23);
          if (!v23.i32[0])
            goto LABEL_21;
          goto LABEL_42;
        }
        if (*v9 != 105 || *(_DWORD *)(v9 + 1) != 1919905901)
          goto LABEL_21;
        v12 = *(_DWORD *)(v9 + 5);
        v13 = 1885433204;
      }
      else
      {
        if ((v8 & 4) == 0)
        {
          if (*(_WORD *)v9 != 109)
            goto LABEL_21;
          v14 = 6;
          if (*(_QWORD *)(v9 + 2) != 0x6C00750064006FLL || *(_QWORD *)(v9 + 4) != 0x65006C00750064)
            goto LABEL_43;
          goto LABEL_42;
        }
        if (*v9 != 109 || *(_DWORD *)(v9 + 1) != 1819632751)
          goto LABEL_21;
        v12 = *(_DWORD *)(v9 + 2);
        v13 = 1701606756;
      }
    }
    if (v12 != v13)
    {
LABEL_21:
      v14 = 6;
      goto LABEL_43;
    }
LABEL_42:
    v14 = 7;
LABEL_43:
    if (*(_DWORD *)v7 == 2)
    {
      WTF::StringImpl::destroy(v7, a2);
      v16 = 0;
    }
    else
    {
      v16 = 0;
      *(_DWORD *)v7 -= 2;
    }
    goto LABEL_45;
  }
  v16 = 0;
  v14 = 6;
LABEL_45:
  ((void (*)(uint64_t *, uint64_t *, JSC::CallFrame *))off_1E329F280[v16])(&v28, &v25, a3);
  return v14;
}

uint64_t WebCore::jsHTMLSelectElementPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLSelectElement *v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  WTF *v15;
  WebCore::HTMLOptionsCollection *v16;
  JSValue v18;
  JSC::VM *v19;
  _DWORD v20[2];
  WebCore::HTMLOptionsCollection *v21;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v19 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v19, "HTMLSelectElement", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLSelectElement::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v19, "HTMLSelectElement", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v18);
  }
  else
  {
    v11 = *(WebCore::HTMLSelectElement **)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v20);
    if (!v20[1])
    {
      v12 = *(uint64_t **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      v13 = v20[0];
      WebCore::HTMLSelectElement::options(v11, (uint64_t *)&v21);
      v14 = WebCore::CollectionIndexCache<WebCore::HTMLOptionsCollection,WebCore::ElementDescendantIterator<WebCore::Element>>::nodeAt((uint64_t)v21 + 40, v21, v13);
      v15 = (WTF *)v14;
      if (v14
        && ((*(_WORD *)(v14 + 28) & 0x10) == 0
         || *(_QWORD *)(*(_QWORD *)(v14 + 96) + 24) != *(_QWORD *)(WebCore::HTMLNames::optionTag + 24)))
      {
        __break(0xC471u);
        JUMPOUT(0x194C7E560);
      }
      v16 = v21;
      v21 = 0;
      if (v16)
      {
        if (*((_DWORD *)v16 + 4) == 1)
        {
          (*(void (**)(WebCore::HTMLOptionsCollection *))(*(_QWORD *)v16 + 8))(v16);
          if (v15)
            return WebCore::wrap<WebCore::HTMLOptionElement>(v12, v15);
          return 2;
        }
        --*((_DWORD *)v16 + 4);
      }
      if (v15)
        return WebCore::wrap<WebCore::HTMLOptionElement>(v12, v15);
      return 2;
    }
    return 0;
  }
}

_BYTE *WebCore::jsHTMLSelectElementPrototypeFunction_namedItem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLSelectElement *v11;
  WTF::StringImpl *v12;
  JSC::JSRopeString *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF *v18;
  _DWORD *v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  JSValue v24;
  JSC::VM *v25;
  WTF::StringImpl *v26;
  _DWORD *v27;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "HTMLSelectElement", "namedItem");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLSelectElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "HTMLSelectElement", "namedItem");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v24);
  }
  v11 = *(WebCore::HTMLSelectElement **)(v5 + 24);
  v12 = (WTF::StringImpl *)*((_QWORD *)a2 + 6);
  v26 = v12;
  if (((unint64_t)v12 & 0xFFFE000000000002) != 0 || (v13 = v12, *((_BYTE *)v12 + 5) != 2))
    v13 = (JSC::JSRopeString *)JSC::JSValue::toStringSlowCase((JSC::JSValue *)&v26, this);
  v14 = *((_QWORD *)v13 + 1);
  if ((v14 & 1) != 0)
  {
    JSC::JSRopeString::resolveRopeToExistingAtomString(v13, this);
LABEL_17:
    v14 = (uint64_t)v27;
    goto LABEL_20;
  }
  if ((*(_BYTE *)(v14 + 16) & 0x10) == 0)
  {
    WTF::AtomStringImpl::lookUpSlowCase((WTF::AtomStringImpl *)v14, a2);
    goto LABEL_17;
  }
  *(_DWORD *)v14 += 2;
LABEL_20:
  v15 = *(uint64_t **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v26 = (WTF::StringImpl *)v14;
  WebCore::HTMLSelectElement::options(v11, (uint64_t *)&v27);
  v16 = WebCore::CachedHTMLCollection<WebCore::HTMLOptionsCollection,(WebCore::CollectionTraversalType)0>::namedItem((uint64_t)v27, (uint64_t *)&v26);
  v18 = (WTF *)WTF::downcast<WebCore::HTMLOptionElement,WebCore::Element>(v16);
  v19 = v27;
  v27 = 0;
  if (v19)
  {
    if (v19[4] == 1)
    {
      (*(void (**)(_DWORD *))(*(_QWORD *)v19 + 8))(v19);
      if (v18)
        goto LABEL_24;
      goto LABEL_32;
    }
    --v19[4];
  }
  if (v18)
  {
LABEL_24:
    v20 = WebCore::wrap<WebCore::HTMLOptionElement>(v15, v18);
    goto LABEL_25;
  }
LABEL_32:
  v20 = 2;
LABEL_25:
  v21 = v26;
  v26 = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v17);
    else
      *(_DWORD *)v21 -= 2;
  }
  return (_BYTE *)v20;
}

_BYTE *WebCore::jsHTMLSelectElementPrototypeFunction_add(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  WTF::StringImpl *v13;
  int v14;
  unint64_t v15;
  int v16;
  int v17;
  int v18;
  WTF *v19;
  JSValue v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  JSValue v27;
  WTF::StringImpl *v28;
  JSC::VM *v29;
  uint64_t *v30;
  uint64_t v31;
  _BYTE v32[40];
  uint64_t v33;
  JSC::JSGlobalObject *v34;
  int v35;
  WTF::StringImpl *v36;
  char v37;
  char v38[8];
  WTF::StringImpl *v39;
  char v40;
  char v41[8];
  int v42;
  char v43;
  char v44[8];
  char v45[8];
  int v46;
  char v47;
  int v48;
  char v49[8];
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;

  v3 = (uint64_t)this;
  v53 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLSelectElement", "add");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLSelectElement::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "HTMLSelectElement", "add");
  v12 = *(_QWORD *)(v5 + 24);
  v30 = (uint64_t *)v32;
  v31 = 4;
  v32[32] = 0;
  v33 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v34 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v30;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v3 = JSC::VM::throwException(v4, (JSC::JSGlobalObject *)v3, v22);
    goto LABEL_38;
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLOptionElement>,WebCore::IDLInterface<WebCore::HTMLOptGroupElement>>>::convert((uint64_t)v49, (uint64_t)this, *((_QWORD *)a2 + 6));
  v14 = v52;
  if (!v52)
  {
    if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v15 = *((_QWORD *)a2 + 7), v15 == 10))
    {
      v45[0] = 0;
      v47 = 0;
      v48 = 0;
    }
    else
    {
      WebCore::Converter<WebCore::IDLNullable<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLElement>,WebCore::IDLLong>>>::convert((uint64_t)v44, (JSC::JSGlobalObject *)v3, v15);
      v16 = v48;
      if (v48)
      {
        v3 = 0;
        goto LABEL_33;
      }
      if (v52)
        goto LABEL_71;
    }
    v41[0] = 0;
    v42 = -1;
    v17 = v51;
    if (v51 == -1
      || (((void (*)(char *, char *, uint64_t *))off_1E329F520[v51])(v38, v41, &v50), v42 = v17, !v48))
    {
      v38[0] = 0;
      v40 = 0;
      if (v47)
      {
        LODWORD(v39) = -1;
        v18 = v46;
        if (v46 != -1)
        {
          ((void (*)(char *, char *, char *))off_1E329F540[v46])(&v43, v38, v45);
          LODWORD(v39) = v18;
        }
        v40 = 1;
      }
      WebCore::HTMLSelectElement::add(v12, (uint64_t)v41, (uint64_t)v38, (uint64_t)&v35);
      if (v40 && (_DWORD)v39 != -1)
        ((void (*)(char *, char *))off_1E329F530[v39])(&v43, v38);
      if (v42 != -1)
        ((void (*)(char *, char *))off_1E329F510[v42])(v38, v41);
      if (!v37)
      {
        v3 = 10;
LABEL_32:
        v16 = v48;
LABEL_33:
        if (v16 != -1)
          ((void (*)(char *, char *))off_1E329F560[v16])(v38, v45);
        v14 = v52;
        goto LABEL_36;
      }
      v13 = (WTF::StringImpl *)v35;
      v38[0] = v35;
      v26 = v36;
      v36 = 0;
      v39 = v26;
      if (!*((_QWORD *)v4 + 2))
      {
        v27.super.isa = (Class)WebCore::createDOMException((JSC *)v3, (JSC::JSGlobalObject *)v35, (JSC::JSGlobalObject *)&v39);
        JSC::VM::throwException(v4, (JSC::JSGlobalObject *)v3, v27);
        v26 = v39;
      }
      v39 = 0;
      if (v26)
      {
        if (*(_DWORD *)v26 == 2)
          WTF::StringImpl::destroy(v26, v13);
        else
          *(_DWORD *)v26 -= 2;
      }
      if (v37)
      {
        v28 = v36;
        v36 = 0;
        if (v28)
        {
          if (*(_DWORD *)v28 != 2)
          {
            v3 = 0;
            *(_DWORD *)v28 -= 2;
            goto LABEL_32;
          }
          WTF::StringImpl::destroy(v28, v13);
        }
      }
      v3 = 0;
      goto LABEL_32;
    }
LABEL_71:
    v19 = (WTF *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_72:
    v30 = 0;
    LODWORD(v31) = 0;
    WTF::fastFree(v19, v13);
    return (_BYTE *)v3;
  }
  v3 = 0;
LABEL_36:
  if (v14 != -1)
    ((void (*)(char *, uint64_t *))off_1E329F570[v14])(v44, &v50);
LABEL_38:
  if (HIDWORD(v31))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v30, v34);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v33;
    if (HIDWORD(v31))
    {
      v23 = v30;
      v24 = 8 * HIDWORD(v31);
      do
      {
        v25 = *v23;
        *v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, v13);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        ++v23;
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v33;
  }
  v19 = (WTF *)v30;
  if (v32 != (_BYTE *)v30 && v30 != 0)
    goto LABEL_72;
  return (_BYTE *)v3;
}

_BYTE *WebCore::jsHTMLSelectElementPrototypeFunction_remove(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  WTF *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  WebCore::HTMLSelectElement *v18;
  int v19;
  WTF *v20;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  __int16 v27;
  __int16 v28;
  WTF::StringImpl *v29;
  JSValue v30;
  WTF::StringImpl *v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  WTF::StringImpl *v38;
  int v39[2];
  WTF::StringImpl *v40;
  uint64_t v41;
  WTF *v42;
  uint64_t v43;
  _BYTE v44[32];
  char v45;
  uint64_t v46;
  JSC::JSGlobalObject *v47;

  v4 = *((_QWORD *)this + 7);
  v36 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "HTMLSelectElement", "remove");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLSelectElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "HTMLSelectElement", "remove");
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v17 = *((_QWORD *)a2 + 6);
    v18 = *(WebCore::HTMLSelectElement **)(v5 + 24);
    v42 = (WTF *)v44;
    v43 = 4;
    v45 = 0;
    v46 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
    v47 = this;
    WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v42;
    *(_QWORD *)v39 = v17;
    if (v17 < 0xFFFE000000000000)
    {
      v23 = v17 - 0x2000000000000;
      if (v17 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v39, this);
        v23 = v35;
      }
      v24 = (v23 >> 52) & 0x7FF;
      if ((v24 - 1023) <= 0x53)
      {
        v25 = v23 >> (51 - (v23 >> 52));
        if (v24 > 0x433)
          LODWORD(v25) = v23 << ((v23 >> 52) - 51);
        if (v24 >= 0x41F)
          v26 = v25;
        else
          v26 = (((1 << ((v23 >> 52) + 1)) - 1) & v25) + (1 << ((v23 >> 52) + 1));
        if ((v23 & 0x8000000000000000) == 0)
          v19 = v26;
        else
          v19 = -v26;
      }
      else
      {
        v19 = 0;
      }
    }
    else
    {
      v19 = v17;
    }
    if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    {
      v13 = 0;
    }
    else
    {
      WebCore::HTMLSelectElement::remove(v18, v19);
      v13 = 10;
    }
    if (HIDWORD(v43))
    {
      WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v42, v47);
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v46;
      if (HIDWORD(v43))
      {
        v32 = v42;
        v33 = 8 * HIDWORD(v43);
        do
        {
          v34 = *(_QWORD *)v32;
          *(_QWORD *)v32 = 0;
          if (v34)
          {
            if (*(_DWORD *)(v34 + 24) == 2)
            {
              if ((*(_WORD *)(v34 + 30) & 0x400) == 0)
                WebCore::Node::removedLastRef((WebCore::Node *)v34, v11);
            }
            else
            {
              *(_DWORD *)(v34 + 24) -= 2;
            }
          }
          v32 = (WTF *)((char *)v32 + 8);
          v33 -= 8;
        }
        while (v33);
      }
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  v11 = *(_QWORD **)(v5 + 24);
  v42 = (WTF *)v44;
  v43 = 4;
  v45 = 0;
  v46 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v47 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v42;
  v12 = v11[4];
  if (v12)
  {
    *(_DWORD *)(v12 + 24) += 2;
    WebCore::ContainerNode::removeChild((WebCore::ContainerNode *)v12, (WebCore::Node *)v11, v39);
    if (*(_DWORD *)(v12 + 24) == 2)
    {
      v27 = *(_WORD *)(v12 + 30);
      if ((v27 & 0x400) == 0)
      {
        v28 = *(_WORD *)(v12 + 28);
        if ((v28 & 0xF000) == 0x9000)
        {
          WebCore::Document::removedLastRef((WebCore::Document *)v12, v11);
        }
        else
        {
          if ((v28 & 0x20) != 0)
          {
            (*(void (**)(_QWORD))(**(_QWORD **)(v12 + 160) + 16))(*(_QWORD *)(v12 + 160));
            v27 = *(_WORD *)(v12 + 30);
          }
          *(_WORD *)(v12 + 30) = v27 | 0x400;
          (*(void (**)(uint64_t))(*(_QWORD *)v12 + 72))(v12);
        }
      }
    }
    else
    {
      *(_DWORD *)(v12 + 24) -= 2;
    }
  }
  else
  {
    *(_QWORD *)v39 = 0;
    v40 = 0;
    v41 = 0;
  }
  if (!(_BYTE)v41)
  {
    v13 = 10;
    goto LABEL_18;
  }
  v11 = (_QWORD *)LOBYTE(v39[0]);
  v37 = v39[0];
  v29 = v40;
  v40 = 0;
  v38 = v29;
  if (!*(_QWORD *)(v4 + 16))
  {
    v30.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v39[0]), (JSC::JSGlobalObject *)&v38);
    JSC::VM::throwException((JSC::VM *)v4, this, v30);
    v29 = v38;
  }
  v38 = 0;
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, (WTF::StringImpl *)v11);
    else
      *(_DWORD *)v29 -= 2;
  }
  if ((_BYTE)v41)
  {
    v31 = v40;
    v40 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 != 2)
      {
        v13 = 0;
        *(_DWORD *)v31 -= 2;
        goto LABEL_18;
      }
      WTF::StringImpl::destroy(v31, (WTF::StringImpl *)v11);
    }
  }
  v13 = 0;
LABEL_18:
  if (HIDWORD(v43))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v42, v47);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v46;
    if (HIDWORD(v43))
    {
      v14 = v42;
      v15 = 8 * HIDWORD(v43);
      do
      {
        v16 = *(_QWORD *)v14;
        *(_QWORD *)v14 = 0;
        if (v16)
        {
          if (*(_DWORD *)(v16 + 24) == 2)
          {
            if ((*(_WORD *)(v16 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v16, v11);
          }
          else
          {
            *(_DWORD *)(v16 + 24) -= 2;
          }
        }
        v14 = (WTF *)((char *)v14 + 8);
        v15 -= 8;
      }
      while (v15);
    }
    goto LABEL_34;
  }
LABEL_33:
  WebCore::CustomElementReactionStack::s_currentProcessingStack = v46;
LABEL_34:
  v20 = v42;
  if (v44 != (_BYTE *)v42 && v42 != 0)
  {
    v42 = 0;
    LODWORD(v43) = 0;
    WTF::fastFree(v20, v11);
  }
  return (_BYTE *)v13;
}

uint64_t WebCore::jsHTMLSelectElementPrototypeFunction_checkValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLSelectElement", "checkValidity");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLSelectElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLSelectElement", "checkValidity");
  if (WebCore::ValidatedFormListedElement::checkValidity((_BYTE *)(*(_QWORD *)(v3 + 24) + 112), 0))
    return 7;
  return 6;
}

uint64_t WebCore::jsHTMLSelectElementPrototypeFunction_reportValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLSelectElement", "reportValidity");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLSelectElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "HTMLSelectElement", "reportValidity");
  if (WebCore::ValidatedFormListedElement::reportValidity((WebCore::ValidatedFormListedElement *)(*(_QWORD *)(v3 + 24) + 112)))
    return 7;
  return 6;
}

_BYTE *WebCore::jsHTMLSelectElementPrototypeFunction_setCustomValidity(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  JSValue v21;
  WTF::StringImpl *v22;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v24;
  uint64_t v25;
  int v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "HTMLSelectElement", "setCustomValidity");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLSelectElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "HTMLSelectElement", "setCustomValidity");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v21);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v28 = (WTF::StringImpl *)v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v27 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v28, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v27;
    if (hasExceptionsAfterHandlingTraps)
    {
      v26 = 1;
      v27 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v22);
        else
          *(_DWORD *)v14 -= 2;
      }
      v18 = 0;
      v17 = 1;
      goto LABEL_25;
    }
  }
  else
  {
    v14 = v27;
  }
  v26 = 0;
  v25 = 0;
  v28 = v14;
  (*(void (**)(uint64_t, WTF::StringImpl **, JSC::CallFrame *))(*(_QWORD *)(v11 + 112) + 232))(v11 + 112, &v28, a3);
  v16 = v28;
  v28 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v15);
    else
      *(_DWORD *)v16 -= 2;
  }
  v17 = 0;
  v18 = 10;
LABEL_25:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E329F280[v17])(&v28, &v25);
  return (_BYTE *)v18;
}

uint64_t WebCore::jsHTMLSelectElementPrototypeFunction_showPicker(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t result;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSValue v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  char v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  char v21;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLSelectElement", "showPicker");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLSelectElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLSelectElement::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLSelectElement", "showPicker");
  WebCore::HTMLSelectElement::showPicker(*(_QWORD *)(v4 + 24), &v19);
  if (!v21)
    return 10;
  v12 = (WTF::StringImpl *)v19;
  v17 = v19;
  v13 = v20;
  v20 = 0;
  v18 = v13;
  if (!*((_QWORD *)v5 + 2))
  {
    v14.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v19, (JSC::JSGlobalObject *)&v18);
    JSC::VM::throwException(v5, this, v14);
    v13 = v18;
  }
  v18 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  if (v21)
  {
    v15 = v20;
    v20 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 != 2)
      {
        result = 0;
        *(_DWORD *)v15 -= 2;
        return result;
      }
      WTF::StringImpl::destroy(v15, v12);
    }
  }
  return 0;
}

_BYTE *WebCore::jsHTMLSlotElementPrototypeFunction_assignedNodes(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  WebCore::Document *v13;
  void *v14;
  uint64_t v15;
  WTF *v16;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  WTF *v23;
  int v24;
  unsigned int v25;
  _BYTE v26[4];
  int v27;

  v21 = *((_QWORD *)this + 7);
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "HTMLSlotElement", "assignedNodes");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLSlotElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLSlotElement::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "HTMLSlotElement", "assignedNodes");
  if (*((_DWORD *)a2 + 8) == 1)
    v10 = 10;
  else
    v10 = *((_QWORD *)a2 + 6);
  v11 = *(unsigned int **)(v4 + 24);
  WebCore::convertDictionary<WebCore::HTMLSlotElement::AssignedNodesOptions>((uint64_t)v26, this, (JSC::JSCell *)v10);
  if (v27)
    return 0;
  v12 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v22 = v26[0];
  WebCore::HTMLSlotElement::assignedNodes(v11, &v22, (uint64_t)&v23);
  v15 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::Node>>>::convert<WTF::Ref<WebCore::Node,WTF::RawPtrTraits<WebCore::Node>,WTF::DefaultRefDerefTraits<WebCore::Node>>,0ul>((WebCore::DOMWrapperWorld **)this, v12, (uint64_t)&v23, v13);
  if (v25)
  {
    v18 = v23;
    v19 = 8 * v25;
    do
    {
      v20 = *(_QWORD *)v18;
      *(_QWORD *)v18 = 0;
      if (v20)
      {
        if (*(_DWORD *)(v20 + 24) == 2)
        {
          if ((*(_WORD *)(v20 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v20, v14);
        }
        else
        {
          *(_DWORD *)(v20 + 24) -= 2;
        }
      }
      v18 = (WTF *)((char *)v18 + 8);
      v19 -= 8;
    }
    while (v19);
  }
  v16 = v23;
  if (v23)
  {
    v23 = 0;
    v24 = 0;
    WTF::fastFree(v16, v14);
  }
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsHTMLSlotElementPrototypeFunction_assignedElements(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  unsigned int *v11;
  JSC::JSGlobalObject *v12;
  WebCore::Element *v13;
  JSC::VM *v14;
  unsigned int v15;
  WebCore::JSDOMGlobalObject **v16;
  uint64_t v17;
  objc_class *v18;
  int v19;
  BOOL v20;
  JSValue v21;
  void *v22;
  JSC::VM *v23;
  uint64_t v24;
  uint64_t *v25;
  WTF *v26;
  WTF *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  WTF *v34;
  int v35;
  unsigned int v36;
  char v37;
  int v38;
  WTF *v39;
  int v40;
  BOOL v41;
  uint64_t v42;
  WTF *v43;
  _OWORD v44[4];
  uint64_t v45;
  JSC::VM *v46;

  v32 = *((_QWORD *)this + 7);
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v32, "HTMLSlotElement", "assignedElements");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLSlotElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLSlotElement::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v32, "HTMLSlotElement", "assignedElements");
  if (*((_DWORD *)a2 + 8) == 1)
    v10 = 10;
  else
    v10 = *((_QWORD *)a2 + 6);
  v11 = *(unsigned int **)(v4 + 24);
  WebCore::convertDictionary<WebCore::HTMLSlotElement::AssignedNodesOptions>((uint64_t)&v37, this, (JSC::JSCell *)v10);
  if (v38)
    return 0;
  v12 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v33 = v37;
  WebCore::HTMLSlotElement::assignedElements(v11, &v33, (uint64_t)&v34);
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v14;
  v41 = 0;
  v42 = 0x800000000;
  v43 = (WTF *)((char *)v44 + 8);
  memset(v44, 0, sizeof(v44));
  v45 = 0;
  v15 = v36;
  if (v36 >= 9)
  {
    v41 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v42) == 1;
    v15 = v36;
    if (v36)
    {
LABEL_18:
      v16 = (WebCore::JSDOMGlobalObject **)v34;
      v17 = 8 * v15;
      do
      {
        v18 = (objc_class *)WebCore::toJS(this, v12, *v16, v13);
        if (*((_DWORD *)v14 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v14) & 1) != 0)
            goto LABEL_58;
        }
        v19 = v42;
        if ((_DWORD)v42 != HIDWORD(v42) && (v43 != (WTF *)((char *)v44 + 8) ? (v20 = v43 == 0) : (v20 = 1), v20))
        {
          *((_QWORD *)v43 + v42) = v18;
          LODWORD(v42) = v19 + 1;
        }
        else
        {
          v21.super.isa = v18;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v42, v21) == 1)
            v41 = 1;
        }
        ++v16;
        v17 -= 8;
      }
      while (v17);
    }
  }
  else if (v36)
  {
    goto LABEL_18;
  }
  if (v41)
  {
    JSC::throwOutOfMemoryError();
LABEL_58:
    v24 = 0;
    goto LABEL_37;
  }
  v39 = v43;
  v40 = v42;
  v23 = (JSC::VM *)*((_QWORD *)v12 + 7);
  if (*((_DWORD *)v23 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) != 0)
    goto LABEL_58;
  v24 = JSC::constructArray();
LABEL_37:
  v25 = *(uint64_t **)&v44[0];
  if (*(_QWORD *)&v44[0])
  {
    v39 = (WTF *)&v42;
    v31 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v44[0], (uint64_t *)&v39);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v25, v31);
  }
  if (v43 != (WTF *)((char *)v44 + 8) && v43)
    WTF::fastFree(v43, v22);
  if (v36)
  {
    v28 = v34;
    v29 = 8 * v36;
    do
    {
      v30 = *(_QWORD *)v28;
      *(_QWORD *)v28 = 0;
      if (v30)
      {
        if (*(_DWORD *)(v30 + 24) == 2)
        {
          if ((*(_WORD *)(v30 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v30, v22);
        }
        else
        {
          *(_DWORD *)(v30 + 24) -= 2;
        }
      }
      v28 = (WTF *)((char *)v28 + 8);
      v29 -= 8;
    }
    while (v29);
  }
  v26 = v34;
  if (v34)
  {
    v34 = 0;
    v35 = 0;
    WTF::fastFree(v26, v22);
  }
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsHTMLSlotElementPrototypeFunction_assign(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unsigned int *v12;
  uint64_t v13;
  int v14;
  WTF *v15;
  WTF *v16;
  unint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  char **v27;
  BOOL v28;
  int v30;
  int v31;
  _DWORD *v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  WTF *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  JSC::VM *v51;
  char v52[8];
  int v53;
  unsigned __int8 v54;
  char v55[8];
  int v56;
  char v57;
  uint64_t v58;
  int v59;
  char v60;
  uint64_t v61;
  char v62;
  WTF *v63;
  char v64[8];
  int v65;
  unsigned int v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v51 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v51, "HTMLSlotElement", "assign");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLSlotElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLSlotElement::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v51, "HTMLSlotElement", "assign");
  v12 = *(unsigned int **)(v5 + 24);
  v13 = *((int *)a2 + 8);
  v14 = v13 - 1;
  if (v13 == 1)
  {
    v63 = 0;
    goto LABEL_73;
  }
  v15 = (WTF *)WTF::fastMalloc((WTF *)((16 * (v13 - 1)) | 8));
  v16 = v15;
  *(_DWORD *)v15 = v14;
  if (!v14)
    goto LABEL_71;
  v50 = v14;
  v17 = 0;
  v18 = (_DWORD *)((char *)v15 + 8);
  while (1)
  {
    v19 = *(_QWORD *)((char *)a2 + ((uint64_t)((v17 << 32) + 0x600000000) >> 29));
    v61 = *((_QWORD *)this + 7);
    if ((v19 & 0xFFFE000000000002) != 0)
    {
LABEL_37:
      JSC::throwTypeError();
      v66 = 1;
      v24 = 1;
LABEL_38:
      v55[0] = 0;
      v57 = 0;
      goto LABEL_43;
    }
    if (*(unsigned __int8 *)(v19 + 5) == 241 && (v20 = *(_QWORD *)(v19 + 24)) != 0)
    {
      v21 = 0;
    }
    else
    {
      v25 = *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C);
      v26 = *(_DWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C) != 0;
      v27 = (char **)(16 * v25);
      if ((_DWORD)v25)
        v28 = v27 == &WebCore::JSText::s_info;
      else
        v28 = 1;
      if (!v28)
      {
        do
        {
          v27 = (char **)v27[2];
          v26 = v27 != 0;
        }
        while (v27 != &WebCore::JSText::s_info && v27 != 0);
      }
      if (!v26)
        goto LABEL_37;
      v20 = *(_QWORD *)(v19 + 24);
      if (!v20)
        goto LABEL_37;
      v21 = 1;
    }
    *(_DWORD *)(v20 + 24) += 2;
    v58 = v20;
    v59 = v21;
    v60 = 1;
    v64[0] = 0;
    v65 = -1;
    v22 = off_1E32A01F8[v21];
    ((void (*)(char *, char *, uint64_t *))v22)(&v62, v64, &v58);
    v65 = v21;
    v66 = 0;
    if (!v60 || v59 == -1)
    {
      LOBYTE(v58) = 0;
      v59 = -1;
      goto LABEL_40;
    }
    ((void (*)(char *, uint64_t *))off_1E32A01D8[v59])(&v62, &v58);
    v24 = v66;
    if (v66)
      goto LABEL_38;
    LODWORD(v21) = v65;
    LOBYTE(v58) = 0;
    v59 = -1;
    if (v65 != -1)
    {
      v22 = off_1E32A01F8[v65];
LABEL_40:
      ((void (*)(uint64_t *, uint64_t *, char *))v22)(&v61, &v58, v64);
      v59 = v21;
      v55[0] = 0;
      v56 = -1;
      ((void (*)(uint64_t *, char *, uint64_t *))v22)(&v61, v55, &v58);
      v56 = v21;
      v57 = 1;
      if (v59 != -1)
        ((void (*)(uint64_t *, uint64_t *))off_1E32A01D8[v59])(&v61, &v58);
      goto LABEL_42;
    }
    v55[0] = 0;
    v56 = -1;
    v57 = 1;
LABEL_42:
    v24 = v66;
LABEL_43:
    if (v24 != 0xFFFFFFFFLL)
      ((void (*)(uint64_t *, char *))off_1E32A01E8[v24])(&v58, v64);
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      v31 = 0;
      v52[0] = 0;
    }
    else
    {
      v52[0] = 0;
      v54 = 0;
      if (!v57)
        break;
      v53 = -1;
      v30 = v56;
      if (v56 != -1)
      {
        ((void (*)(WTF **, char *, char *))off_1E32A01F8[v56])(&v63, v52, v55);
        v53 = v30;
      }
      v31 = 1;
    }
    v54 = v31;
    if (v57 && v56 != -1)
    {
      ((void (*)(WTF **, char *))off_1E32A01D8[v56])(&v63, v55);
      v31 = v54;
    }
    if (!v31)
      break;
    v32 = &v18[4 * v17];
    *(_BYTE *)v32 = 0;
    v32[2] = -1;
    v33 = v53;
    if (v53 != -1)
    {
      ((void (*)(WTF **, _DWORD *, char *))off_1E32A01F8[v53])(&v63, &v18[4 * v17], v52);
      v32[2] = v33;
      if (v54)
      {
        if (v53 != -1)
          ((void (*)(WTF **, char *))off_1E32A01D8[v53])(&v63, v52);
      }
    }
    ++v17;
    v34 = *(unsigned int *)v16;
    if (v17 >= v34)
      goto LABEL_64;
  }
  *(_DWORD *)v16 = v17;
  LODWORD(v34) = v17;
LABEL_64:
  if ((_DWORD)v34 != v50)
  {
    if ((_DWORD)v34)
    {
      v35 = 16 * v34;
      do
      {
        v36 = v18[2];
        if ((_DWORD)v36 != -1)
          ((void (*)(WTF **, _DWORD *))off_1E32A01D8[v36])(&v63, v18);
        v18[2] = -1;
        v18 += 4;
        v35 -= 16;
      }
      while (v35);
    }
    WTF::fastFree(v16, v23);
    v16 = 0;
  }
LABEL_71:
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v63 = 0;
    if (v16)
    {
      v47 = (char *)v16 + 8;
      v46 = *(unsigned int *)v16;
      if ((_DWORD)v46)
      {
        v48 = 16 * v46;
        do
        {
          v49 = *((unsigned int *)v47 + 2);
          if ((_DWORD)v49 != -1)
            ((void (*)(uint64_t *, char *))off_1E32A01D8[v49])(&v58, v47);
          *((_DWORD *)v47 + 2) = -1;
          v47 += 16;
          v48 -= 16;
        }
        while (v48);
      }
      WTF::fastFree(v16, v45);
    }
  }
  else
  {
    v63 = v16;
  }
LABEL_73:
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v38 = 0;
  }
  else
  {
    WebCore::HTMLSlotElement::assign(v12, (unsigned int **)&v63);
    v38 = 10;
  }
  v39 = v63;
  v63 = 0;
  if (v39)
  {
    v41 = (char *)v39 + 8;
    v40 = *(unsigned int *)v39;
    if ((_DWORD)v40)
    {
      v42 = 16 * v40;
      do
      {
        v43 = *((unsigned int *)v41 + 2);
        if ((_DWORD)v43 != -1)
          ((void (*)(uint64_t *, char *))off_1E32A01D8[v43])(&v58, v41);
        *((_DWORD *)v41 + 2) = -1;
        v41 += 16;
        v42 -= 16;
      }
      while (v42);
    }
    WTF::fastFree(v39, v37);
  }
  return (_BYTE *)v38;
}

uint64_t WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::Node>>>::convert<WTF::Ref<WebCore::Node,WTF::RawPtrTraits<WebCore::Node>,WTF::DefaultRefDerefTraits<WebCore::Node>>,0ul>(WebCore::DOMWrapperWorld **a1, uint64_t a2, uint64_t a3, WebCore::Document *a4)
{
  JSC::VM *v7;
  unsigned int v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *Wrapper;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  void *v22;
  WebCore::Node *v23;
  int v24;
  JSValue v25;
  void *v26;
  JSC::VM *v27;
  uint64_t v28;
  uint64_t *v29;
  _QWORD *v31;
  WebCore::Node *v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  WTF *v36;
  _OWORD v37[4];
  uint64_t v38;
  JSC::VM *v39;

  v7 = a1[7];
  v39 = v7;
  v34 = 0;
  v35 = 0x800000000;
  v36 = (WTF *)((char *)v37 + 8);
  memset(v37, 0, sizeof(v37));
  v38 = 0;
  v8 = *(_DWORD *)(a3 + 12);
  if (v8 >= 9)
  {
    v34 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v35) == 1;
    v8 = *(_DWORD *)(a3 + 12);
    if (v8)
      goto LABEL_3;
  }
  else if (v8)
  {
LABEL_3:
    v9 = *(uint64_t **)a3;
    v10 = *(_QWORD *)a3 + 8 * v8;
    do
    {
      v11 = *v9;
      if (*(_BYTE *)(a2 + 3328))
      {
        v12 = *(_QWORD *)(v11 + 8);
        if (!v12)
          goto LABEL_15;
      }
      else
      {
        v14 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
        if (!v14)
          goto LABEL_15;
        v15 = *(_DWORD *)(v14 - 8);
        v16 = (~(v11 << 32) + v11) ^ ((unint64_t)(~(v11 << 32) + v11) >> 22);
        v17 = 9 * ((v16 + ~(v16 << 13)) ^ ((v16 + ~(v16 << 13)) >> 8));
        v18 = (v17 ^ (v17 >> 15)) + ~((v17 ^ (v17 >> 15)) << 27);
        v19 = v15 & ((v18 >> 31) ^ v18);
        v20 = *(_QWORD *)(v14 + 16 * v19);
        if (v20 != v11)
        {
          v21 = 1;
          while (v20)
          {
            v19 = ((_DWORD)v19 + v21) & v15;
            v20 = *(_QWORD *)(v14 + 16 * v19);
            ++v21;
            if (v20 == v11)
              goto LABEL_14;
          }
LABEL_15:
          *(_DWORD *)(v11 + 24) += 2;
          v32 = (WebCore::Node *)v11;
          Wrapper = (objc_class *)WebCore::createWrapper(a1, (JSC::VM *)a2, (WebCore::JSDOMGlobalObject *)&v32, a4);
          v23 = v32;
          v32 = 0;
          if (v23)
          {
            if (*((_DWORD *)v23 + 6) == 2)
            {
              if ((*((_WORD *)v23 + 15) & 0x400) == 0)
                WebCore::Node::removedLastRef(v23, v22);
            }
            else
            {
              *((_DWORD *)v23 + 6) -= 2;
            }
          }
          goto LABEL_18;
        }
LABEL_14:
        v12 = *(_QWORD *)(v14 + 16 * v19 + 8);
        if (!v12)
          goto LABEL_15;
      }
      if ((*(_BYTE *)(v12 + 8) & 3) != 0)
        goto LABEL_15;
      Wrapper = *(objc_class **)v12;
      if (!*(_QWORD *)v12)
        goto LABEL_15;
LABEL_18:
      if (*((_DWORD *)v7 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v7) & 1) != 0)
        goto LABEL_43;
      v24 = v35;
      if ((_DWORD)v35 == HIDWORD(v35) || v36 != (WTF *)((char *)v37 + 8) && v36)
      {
        v25.super.isa = Wrapper;
        if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v35, v25) == 1)
          v34 = 1;
      }
      else
      {
        *((_QWORD *)v36 + v35) = Wrapper;
        LODWORD(v35) = v24 + 1;
      }
      ++v9;
    }
    while (v9 != (uint64_t *)v10);
  }
  if (v34)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v32 = v36;
    v33 = v35;
    v27 = *(JSC::VM **)(a2 + 56);
    if (!*((_DWORD *)v27 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) == 0)
    {
      v28 = JSC::constructArray();
      goto LABEL_35;
    }
  }
LABEL_43:
  v28 = 0;
LABEL_35:
  v29 = *(uint64_t **)&v37[0];
  if (*(_QWORD *)&v37[0])
  {
    v32 = (WebCore::Node *)&v35;
    v31 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v37[0], (uint64_t *)&v32);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v29, v31);
  }
  if (v36 != (WTF *)((char *)v37 + 8) && v36)
    WTF::fastFree(v36, v26);
  return v28;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore7ElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_4TextENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore7ElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_4TextENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore7ElementENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENSA_INSB_4TextENSD_ISI_EENSF_ISI_EEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSP_1EJSM_SN_EEEEEEDcSR_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E32A01D8[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore7ElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_4TextENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSS_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEEOS10_EEEDcSS_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore7ElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_4TextENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSS_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEEOS10_EEEDcSS_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

_BYTE *WebCore::jsHTMLTableElementPrototypeFunction_createCaption(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  JSC::JSGlobalObject *v10;
  WebCore::HTMLElement *v11;
  void *v12;
  uint64_t v13;
  WebCore::Node *v14;
  uint64_t v16;
  WebCore::Node *v17;

  v4 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLTableElement", "createCaption");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLTableElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLTableElement::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLTableElement", "createCaption");
  v10 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLTableElement::createCaption(*(unsigned int **)(v4 + 24), (uint64_t *)&v17);
  v13 = WebCore::toJS(this, v10, v17, v11);
  v14 = v17;
  v17 = 0;
  if (v14)
  {
    if (*((_DWORD *)v14 + 6) == 2)
    {
      if ((*((_WORD *)v14 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v14, v12);
    }
    else
    {
      *((_DWORD *)v14 + 6) -= 2;
    }
  }
  return (_BYTE *)v13;
}

uint64_t WebCore::jsHTMLTableElementPrototypeFunction_deleteCaption(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  unsigned int *v9;
  void *v10;
  WTF *v11;
  WTF *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;
  _BYTE v20[40];
  uint64_t v21;
  JSC::JSGlobalObject *v22;

  v3 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLTableElement", "deleteCaption");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLTableElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLTableElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLTableElement", "deleteCaption");
  v9 = *(unsigned int **)(v3 + 24);
  v18 = (WTF *)v20;
  v19 = 4;
  v20[32] = 0;
  v21 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v22 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v18;
  WebCore::HTMLTableElement::deleteCaption(v9);
  if (HIDWORD(v19))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v18, v22);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v21;
    if (HIDWORD(v19))
    {
      v14 = v18;
      v15 = 8 * HIDWORD(v19);
      do
      {
        v16 = *(_QWORD *)v14;
        *(_QWORD *)v14 = 0;
        if (v16)
        {
          if (*(_DWORD *)(v16 + 24) == 2)
          {
            if ((*(_WORD *)(v16 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v16, v10);
          }
          else
          {
            *(_DWORD *)(v16 + 24) -= 2;
          }
        }
        v14 = (WTF *)((char *)v14 + 8);
        v15 -= 8;
      }
      while (v15);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v21;
  }
  v11 = v18;
  if (v20 != (_BYTE *)v18 && v18 != 0)
  {
    v18 = 0;
    LODWORD(v19) = 0;
    WTF::fastFree(v11, v10);
  }
  return 10;
}

_BYTE *WebCore::jsHTMLTableElementPrototypeFunction_createTHead(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  JSC::JSGlobalObject *v10;
  WebCore::JSDOMGlobalObject *v11;
  WebCore::HTMLElement *v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  WebCore::JSDOMGlobalObject *v17;

  v4 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLTableElement", "createTHead");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLTableElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLTableElement::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLTableElement", "createTHead");
  v10 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLTableElement::createTHead(*(WebCore::HTMLTableElement **)(v4 + 24), a2, (uint64_t *)&v17);
  v11 = v17;
  v14 = WebCore::toJS(this, v10, v17, v12);
  if (*((_DWORD *)v11 + 6) == 2)
  {
    if ((*((_WORD *)v11 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v11, v13);
  }
  else
  {
    *((_DWORD *)v11 + 6) -= 2;
  }
  return (_BYTE *)v14;
}

uint64_t WebCore::jsHTMLTableElementPrototypeFunction_deleteTHead(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::HTMLTableElement *v9;
  void *v10;
  WTF *v11;
  WTF *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;
  _BYTE v20[40];
  uint64_t v21;
  JSC::JSGlobalObject *v22;

  v3 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLTableElement", "deleteTHead");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLTableElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLTableElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLTableElement", "deleteTHead");
  v9 = *(WebCore::HTMLTableElement **)(v3 + 24);
  v18 = (WTF *)v20;
  v19 = 4;
  v20[32] = 0;
  v21 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v22 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v18;
  WebCore::HTMLTableElement::deleteTHead(v9, a2);
  if (HIDWORD(v19))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v18, v22);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v21;
    if (HIDWORD(v19))
    {
      v14 = v18;
      v15 = 8 * HIDWORD(v19);
      do
      {
        v16 = *(_QWORD *)v14;
        *(_QWORD *)v14 = 0;
        if (v16)
        {
          if (*(_DWORD *)(v16 + 24) == 2)
          {
            if ((*(_WORD *)(v16 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v16, v10);
          }
          else
          {
            *(_DWORD *)(v16 + 24) -= 2;
          }
        }
        v14 = (WTF *)((char *)v14 + 8);
        v15 -= 8;
      }
      while (v15);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v21;
  }
  v11 = v18;
  if (v20 != (_BYTE *)v18 && v18 != 0)
  {
    v18 = 0;
    LODWORD(v19) = 0;
    WTF::fastFree(v11, v10);
  }
  return 10;
}

_BYTE *WebCore::jsHTMLTableElementPrototypeFunction_createTFoot(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  JSC::JSGlobalObject *v10;
  WebCore::JSDOMGlobalObject *v11;
  WebCore::HTMLElement *v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  WebCore::JSDOMGlobalObject *v17;

  v4 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLTableElement", "createTFoot");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLTableElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLTableElement::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLTableElement", "createTFoot");
  v10 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLTableElement::createTFoot(*(WebCore::HTMLTableElement **)(v4 + 24), a2, (uint64_t *)&v17);
  v11 = v17;
  v14 = WebCore::toJS(this, v10, v17, v12);
  if (*((_DWORD *)v11 + 6) == 2)
  {
    if ((*((_WORD *)v11 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v11, v13);
  }
  else
  {
    *((_DWORD *)v11 + 6) -= 2;
  }
  return (_BYTE *)v14;
}

uint64_t WebCore::jsHTMLTableElementPrototypeFunction_deleteTFoot(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::HTMLTableElement *v9;
  void *v10;
  WTF *v11;
  WTF *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;
  _BYTE v20[40];
  uint64_t v21;
  JSC::JSGlobalObject *v22;

  v3 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLTableElement", "deleteTFoot");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSHTMLTableElement::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSHTMLTableElement::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "HTMLTableElement", "deleteTFoot");
  v9 = *(WebCore::HTMLTableElement **)(v3 + 24);
  v18 = (WTF *)v20;
  v19 = 4;
  v20[32] = 0;
  v21 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v22 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v18;
  WebCore::HTMLTableElement::deleteTFoot(v9, a2);
  if (HIDWORD(v19))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v18, v22);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v21;
    if (HIDWORD(v19))
    {
      v14 = v18;
      v15 = 8 * HIDWORD(v19);
      do
      {
        v16 = *(_QWORD *)v14;
        *(_QWORD *)v14 = 0;
        if (v16)
        {
          if (*(_DWORD *)(v16 + 24) == 2)
          {
            if ((*(_WORD *)(v16 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v16, v10);
          }
          else
          {
            *(_DWORD *)(v16 + 24) -= 2;
          }
        }
        v14 = (WTF *)((char *)v14 + 8);
        v15 -= 8;
      }
      while (v15);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v21;
  }
  v11 = v18;
  if (v20 != (_BYTE *)v18 && v18 != 0)
  {
    v18 = 0;
    LODWORD(v19) = 0;
    WTF::fastFree(v11, v10);
  }
  return 10;
}

_BYTE *WebCore::jsHTMLTableElementPrototypeFunction_createTBody(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  JSC::JSGlobalObject *v10;
  WebCore::HTMLElement *v11;
  void *v12;
  uint64_t v13;
  WebCore::Node *v14;
  uint64_t v16;
  WebCore::Node *v17;

  v4 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLTableElement", "createTBody");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSHTMLTableElement::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSHTMLTableElement::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "HTMLTableElement", "createTBody");
  v10 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLTableElement::createTBody(*(WebCore::HTMLTableElement **)(v4 + 24), (uint64_t *)&v17);
  v13 = WebCore::toJS(this, v10, v17, v11);
  v14 = v17;
  v17 = 0;
  if (v14)
  {
    if (*((_DWORD *)v14 + 6) == 2)
    {
      if ((*((_WORD *)v14 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v14, v12);
    }
    else
    {
      *((_DWORD *)v14 + 6) -= 2;
    }
  }
  return (_BYTE *)v13;
}

_BYTE *WebCore::jsHTMLTableElementPrototypeFunction_insertRow(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unsigned int *v12;
  unint64_t v13;
  uint64_t v14;
  JSC::JSGlobalObject *v15;
  WebCore::HTMLElement *v16;
  WebCore::JSDOMGlobalObject *v17;
  void *v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  JSValue v27;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v29;
  WebCore *v30;
  JSC::JSGlobalObject *v31;
  JSC::CallFrame *v32;
  unsigned int v33;
  uint64_t v34;
  WebCore::JSDOMGlobalObject *v35;
  WTF::StringImpl *v36;
  int v37;
  _BYTE v38[8];
  WTF::StringImpl *v39;

  v4 = *((_QWORD *)this + 7);
  v34 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "HTMLTableElement", "insertRow");
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLTableElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLTableElement::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "HTMLTableElement", "insertRow");
  v12 = *(unsigned int **)(v5 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14 = 0xFFFFFFFFLL;
  }
  else
  {
    v13 = *((_QWORD *)a2 + 6);
    if (v13 == 10)
    {
      v14 = 0xFFFFFFFFLL;
      goto LABEL_20;
    }
    v35 = (WebCore::JSDOMGlobalObject *)*((_QWORD *)a2 + 6);
    if (v13 < 0xFFFE000000000000)
    {
      v21 = v13 - 0x2000000000000;
      if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
        v21 = v29;
      }
      v22 = (v21 >> 52) & 0x7FF;
      if ((v22 - 1023) <= 0x53)
      {
        v23 = v21 >> (51 - (v21 >> 52));
        if (v22 > 0x433)
          LODWORD(v23) = v21 << ((v21 >> 52) - 51);
        if (v22 >= 0x41F)
          v24 = v23;
        else
          v24 = (((1 << ((v21 >> 52) + 1)) - 1) & v23) + (1 << ((v21 >> 52) + 1));
        if ((v21 & 0x8000000000000000) == 0)
          v14 = v24;
        else
          v14 = -v24;
      }
      else
      {
        v14 = 0;
      }
    }
    else
    {
      v14 = v13;
    }
    if (*(_DWORD *)(v4 + 80))
    {
      v33 = v14;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      v14 = v33;
      if (hasExceptionsAfterHandlingTraps)
        return 0;
    }
    v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  }
LABEL_20:
  v15 = *(JSC::JSGlobalObject **)(v6 + 40);
  WebCore::HTMLTableElement::insertRow(v12, (WebCore::HTMLTableElement *)v14, a3, (uint64_t)&v35);
  if (!v37)
  {
    v17 = v35;
    v35 = 0;
    v19 = WebCore::toJS(this, v15, v17, v16);
    if (*((_DWORD *)v17 + 6) == 2)
    {
      if ((*((_WORD *)v17 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v17, v18);
    }
    else
    {
      *((_DWORD *)v17 + 6) -= 2;
    }
LABEL_23:
    if (v37 != -1)
      ((void (*)(_BYTE *, WebCore::JSDOMGlobalObject **))off_1E32A0C08[v37])(v38, &v35);
    return (_BYTE *)v19;
  }
  if (v37 == 1)
  {
    v25 = (WTF::StringImpl *)v35;
    v38[0] = (_BYTE)v35;
    v26 = v36;
    v36 = 0;
    v39 = v26;
    if (!*(_QWORD *)(v4 + 16))
    {
      v27.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v35, (JSC::JSGlobalObject *)&v39);
      JSC::VM::throwException((JSC::VM *)v4, this, v27);
      v26 = v39;
    }
    v39 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v25);
      else
        *(_DWORD *)v26 -= 2;
    }
    v19 = 0;
    goto LABEL_23;
  }
  v30 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsHTMLTableElementPrototypeFunction_deleteRow(v30, v31, v32);
}

_BYTE *WebCore::jsHTMLTableElementPrototypeFunction_deleteRow(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  unsigned int *v11;
  unint64_t v12;
  unint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF *v16;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  JSValue v23;
  WTF *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  JSValue v28;
  WTF::StringImpl *v29;
  unint64_t v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  _BYTE v34[40];
  uint64_t v35;
  JSC::JSGlobalObject *v36;
  char v37;
  WTF::StringImpl *v38;
  unint64_t v39;
  WTF::StringImpl *v40;
  char v41;

  v4 = *((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "HTMLTableElement", "deleteRow");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLTableElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLTableElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "HTMLTableElement", "deleteRow");
  v11 = *(unsigned int **)(v5 + 24);
  v32 = (WTF *)v34;
  v33 = 4;
  v34[32] = 0;
  v35 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v36 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v32;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v15 = JSC::VM::throwException((JSC::VM *)v4, this, v23);
  }
  else
  {
    v12 = *((_QWORD *)a2 + 6);
    v39 = v12;
    if (v12 < 0xFFFE000000000000)
    {
      v19 = v12 - 0x2000000000000;
      if (v12 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v39, this);
        v19 = v30;
      }
      v20 = (v19 >> 52) & 0x7FF;
      if ((v20 - 1023) <= 0x53)
      {
        v21 = v19 >> (51 - (v19 >> 52));
        if (v20 > 0x433)
          LODWORD(v21) = v19 << ((v19 >> 52) - 51);
        if (v20 >= 0x41F)
          v22 = v21;
        else
          v22 = (((1 << ((v19 >> 52) + 1)) - 1) & v21) + (1 << ((v19 >> 52) + 1));
        if ((v19 & 0x8000000000000000) == 0)
          v13 = v22;
        else
          v13 = -v22;
      }
      else
      {
        v13 = 0;
      }
    }
    else
    {
      v13 = v12;
    }
    if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
      goto LABEL_62;
    WebCore::HTMLTableElement::deleteRow(v11, (WebCore::HTMLTableElement *)v13, a3, &v39);
    if (v41)
    {
      v14 = (WTF::StringImpl *)v39;
      v37 = v39;
      v27 = v40;
      v40 = 0;
      v38 = v27;
      if (!*(_QWORD *)(v4 + 16))
      {
        v28.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v39, (JSC::JSGlobalObject *)&v38);
        JSC::VM::throwException((JSC::VM *)v4, this, v28);
        v27 = v38;
      }
      v38 = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          WTF::StringImpl::destroy(v27, v14);
        else
          *(_DWORD *)v27 -= 2;
      }
      if (v41)
      {
        v29 = v40;
        v40 = 0;
        if (v29)
        {
          if (*(_DWORD *)v29 != 2)
          {
            v15 = 0;
            *(_DWORD *)v29 -= 2;
            goto LABEL_18;
          }
          WTF::StringImpl::destroy(v29, v14);
        }
      }
LABEL_62:
      v15 = 0;
      goto LABEL_18;
    }
    v15 = 10;
  }
LABEL_18:
  if (HIDWORD(v33))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v32, v36);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v35;
    if (HIDWORD(v33))
    {
      v24 = v32;
      v25 = 8 * HIDWORD(v33);
      do
      {
        v26 = *(_QWORD *)v24;
        *(_QWORD *)v24 = 0;
        if (v26)
        {
          if (*(_DWORD *)(v26 + 24) == 2)
          {
            if ((*(_WORD *)(v26 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v26, v14);
          }
          else
          {
            *(_DWORD *)(v26 + 24) -= 2;
          }
        }
        v24 = (WTF *)((char *)v24 + 8);
        v25 -= 8;
      }
      while (v25);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v35;
  }
  v16 = v32;
  if (v34 != (_BYTE *)v32 && v32 != 0)
  {
    v32 = 0;
    LODWORD(v33) = 0;
    WTF::fastFree(v16, v14);
  }
  return (_BYTE *)v15;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11HTMLElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11HTMLElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsHTMLTableRowElementPrototypeFunction_insertCell(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  JSC::JSGlobalObject *v15;
  WebCore::HTMLElement *v16;
  WebCore::JSDOMGlobalObject *v17;
  void *v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  JSValue v27;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v29;
  WebCore *v30;
  JSC::JSGlobalObject *v31;
  JSC::CallFrame *v32;
  unsigned int v33;
  uint64_t v34;
  WebCore::JSDOMGlobalObject *v35;
  WTF::StringImpl *v36;
  int v37;
  _BYTE v38[8];
  WTF::StringImpl *v39;

  v4 = *((_QWORD *)this + 7);
  v34 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "HTMLTableRowElement", "insertCell");
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLTableRowElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLTableRowElement::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "HTMLTableRowElement", "insertCell");
  v12 = *(_QWORD *)(v5 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14 = 0xFFFFFFFFLL;
  }
  else
  {
    v13 = *((_QWORD *)a2 + 6);
    if (v13 == 10)
    {
      v14 = 0xFFFFFFFFLL;
      goto LABEL_20;
    }
    v35 = (WebCore::JSDOMGlobalObject *)*((_QWORD *)a2 + 6);
    if (v13 < 0xFFFE000000000000)
    {
      v21 = v13 - 0x2000000000000;
      if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
        v21 = v29;
      }
      v22 = (v21 >> 52) & 0x7FF;
      if ((v22 - 1023) <= 0x53)
      {
        v23 = v21 >> (51 - (v21 >> 52));
        if (v22 > 0x433)
          LODWORD(v23) = v21 << ((v21 >> 52) - 51);
        if (v22 >= 0x41F)
          v24 = v23;
        else
          v24 = (((1 << ((v21 >> 52) + 1)) - 1) & v23) + (1 << ((v21 >> 52) + 1));
        if ((v21 & 0x8000000000000000) == 0)
          v14 = v24;
        else
          v14 = -v24;
      }
      else
      {
        v14 = 0;
      }
    }
    else
    {
      v14 = v13;
    }
    if (*(_DWORD *)(v4 + 80))
    {
      v33 = v14;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      v14 = v33;
      if (hasExceptionsAfterHandlingTraps)
        return 0;
    }
    v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  }
LABEL_20:
  v15 = *(JSC::JSGlobalObject **)(v6 + 40);
  WebCore::HTMLTableRowElement::insertCell(v12, (WTF::StringImpl *)v14, (uint64_t)&v35);
  if (!v37)
  {
    v17 = v35;
    v35 = 0;
    v19 = WebCore::toJS(this, v15, v17, v16);
    if (*((_DWORD *)v17 + 6) == 2)
    {
      if ((*((_WORD *)v17 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v17, v18);
    }
    else
    {
      *((_DWORD *)v17 + 6) -= 2;
    }
LABEL_23:
    if (v37 != -1)
      ((void (*)(_BYTE *, WebCore::JSDOMGlobalObject **))off_1E32A0DD0[v37])(v38, &v35);
    return (_BYTE *)v19;
  }
  if (v37 == 1)
  {
    v25 = (WTF::StringImpl *)v35;
    v38[0] = (_BYTE)v35;
    v26 = v36;
    v36 = 0;
    v39 = v26;
    if (!*(_QWORD *)(v4 + 16))
    {
      v27.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v35, (JSC::JSGlobalObject *)&v39);
      JSC::VM::throwException((JSC::VM *)v4, this, v27);
      v26 = v39;
    }
    v39 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v25);
      else
        *(_DWORD *)v26 -= 2;
    }
    v19 = 0;
    goto LABEL_23;
  }
  v30 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsHTMLTableRowElementPrototypeFunction_deleteCell(v30, v31, v32);
}

_BYTE *WebCore::jsHTMLTableRowElementPrototypeFunction_deleteCell(WebCore *this, unint64_t a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLTableRowElement *v11;
  unint64_t v12;
  unint64_t v13;
  _DWORD *v14;
  int v15;
  WebCore::Node *v16;
  uint64_t v17;
  WTF *v18;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  JSValue v25;
  WTF *v26;
  uint64_t v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  JSValue v30;
  WTF::StringImpl *v31;
  unint64_t v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  _BYTE v36[40];
  uint64_t v37;
  JSC::JSGlobalObject *v38;
  _DWORD *v39;
  WTF::StringImpl *v40;
  unint64_t v41;
  WTF::StringImpl *v42;
  uint64_t v43;

  v4 = *((_QWORD *)this + 7);
  v33 = v4;
  v5 = *(_QWORD *)(a2 + 40);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "HTMLTableRowElement", "deleteCell");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLTableRowElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLTableRowElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "HTMLTableRowElement", "deleteCell");
  v11 = *(WebCore::HTMLTableRowElement **)(v5 + 24);
  v34 = (WTF *)v36;
  v35 = 4;
  v36[32] = 0;
  v37 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v38 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v34;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    v17 = JSC::VM::throwException((JSC::VM *)v4, this, v25);
    goto LABEL_29;
  }
  v12 = *(_QWORD *)(a2 + 48);
  v41 = v12;
  if (v12 < 0xFFFE000000000000)
  {
    v21 = v12 - 0x2000000000000;
    if (v12 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, this);
      v21 = v32;
    }
    v22 = (v21 >> 52) & 0x7FF;
    if ((v22 - 1023) <= 0x53)
    {
      v23 = v21 >> (51 - (v21 >> 52));
      if (v22 > 0x433)
        LODWORD(v23) = v21 << ((v21 >> 52) - 51);
      if (v22 >= 0x41F)
        v24 = v23;
      else
        v24 = (((1 << ((v21 >> 52) + 1)) - 1) & v23) + (1 << ((v21 >> 52) + 1));
      if ((v21 & 0x8000000000000000) == 0)
        v13 = v24;
      else
        v13 = -v24;
    }
    else
    {
      v13 = 0;
    }
  }
  else
  {
    v13 = v12;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    goto LABEL_74;
  WebCore::HTMLTableRowElement::cells(v11, (WTF::StringImpl *)a2, &v39);
  v14 = v39;
  v15 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v39 + 16))(v39);
  if ((_DWORD)v13 == -1)
  {
    if (!v15)
    {
      v41 = 0;
      v42 = 0;
      v43 = 0;
      goto LABEL_25;
    }
    v13 = (v15 - 1);
    if ((v13 & 0x80000000) != 0)
      goto LABEL_23;
  }
  else if ((v13 & 0x80000000) != 0)
  {
    goto LABEL_23;
  }
  if ((int)v13 >= v15)
  {
LABEL_23:
    LOBYTE(v41) = 0;
    v42 = 0;
    LOBYTE(v43) = 1;
    goto LABEL_25;
  }
  v16 = (WebCore::Node *)(*(uint64_t (**)(_DWORD *, unint64_t))(*(_QWORD *)v14 + 24))(v14, v13);
  WebCore::ContainerNode::removeChild(v11, v16, &v41);
LABEL_25:
  if (v14[4] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v14 + 8))(v14);
  else
    --v14[4];
  if ((_BYTE)v43)
  {
    a2 = v41;
    LOBYTE(v39) = v41;
    v29 = v42;
    v42 = 0;
    v40 = v29;
    if (!*(_QWORD *)(v4 + 16))
    {
      v30.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v41, (JSC::JSGlobalObject *)&v40);
      JSC::VM::throwException((JSC::VM *)v4, this, v30);
      v29 = v40;
    }
    v40 = 0;
    if (v29)
    {
      if (*(_DWORD *)v29 == 2)
        WTF::StringImpl::destroy(v29, (WTF::StringImpl *)a2);
      else
        *(_DWORD *)v29 -= 2;
    }
    if ((_BYTE)v43)
    {
      v31 = v42;
      v42 = 0;
      if (v31)
      {
        if (*(_DWORD *)v31 != 2)
        {
          v17 = 0;
          *(_DWORD *)v31 -= 2;
          goto LABEL_29;
        }
        WTF::StringImpl::destroy(v31, (WTF::StringImpl *)a2);
      }
    }
LABEL_74:
    v17 = 0;
    goto LABEL_29;
  }
  v17 = 10;
LABEL_29:
  if (HIDWORD(v35))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v34, v38);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v37;
    if (HIDWORD(v35))
    {
      v26 = v34;
      v27 = 8 * HIDWORD(v35);
      do
      {
        v28 = *(_QWORD *)v26;
        *(_QWORD *)v26 = 0;
        if (v28)
        {
          if (*(_DWORD *)(v28 + 24) == 2)
          {
            if ((*(_WORD *)(v28 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v28, (void *)a2);
          }
          else
          {
            *(_DWORD *)(v28 + 24) -= 2;
          }
        }
        v26 = (WTF *)((char *)v26 + 8);
        v27 -= 8;
      }
      while (v27);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v37;
  }
  v18 = v34;
  if (v36 != (_BYTE *)v34 && v34 != 0)
  {
    v34 = 0;
    LODWORD(v35) = 0;
    WTF::fastFree(v18, (void *)a2);
  }
  return (_BYTE *)v17;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore20HTMLTableCellElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore20HTMLTableCellElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsHTMLTableSectionElementPrototypeFunction_insertRow(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  JSC::JSGlobalObject *v15;
  WebCore::HTMLElement *v16;
  WebCore::JSDOMGlobalObject *v17;
  void *v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  JSValue v27;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v29;
  WebCore *v30;
  JSC::JSGlobalObject *v31;
  JSC::CallFrame *v32;
  unsigned int v33;
  uint64_t v34;
  WebCore::JSDOMGlobalObject *v35;
  WTF::StringImpl *v36;
  int v37;
  _BYTE v38[8];
  WTF::StringImpl *v39;

  v4 = *((_QWORD *)this + 7);
  v34 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "HTMLTableSectionElement", "insertRow");
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSHTMLTableSectionElement::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSHTMLTableSectionElement::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "HTMLTableSectionElement", "insertRow");
  v12 = *(_QWORD *)(v5 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14 = 0xFFFFFFFFLL;
  }
  else
  {
    v13 = *((_QWORD *)a2 + 6);
    if (v13 == 10)
    {
      v14 = 0xFFFFFFFFLL;
      goto LABEL_20;
    }
    v35 = (WebCore::JSDOMGlobalObject *)*((_QWORD *)a2 + 6);
    if (v13 < 0xFFFE000000000000)
    {
      v21 = v13 - 0x2000000000000;
      if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
        v21 = v29;
      }
      v22 = (v21 >> 52) & 0x7FF;
      if ((v22 - 1023) <= 0x53)
      {
        v23 = v21 >> (51 - (v21 >> 52));
        if (v22 > 0x433)
          LODWORD(v23) = v21 << ((v21 >> 52) - 51);
        if (v22 >= 0x41F)
          v24 = v23;
        else
          v24 = (((1 << ((v21 >> 52) + 1)) - 1) & v23) + (1 << ((v21 >> 52) + 1));
        if ((v21 & 0x8000000000000000) == 0)
          v14 = v24;
        else
          v14 = -v24;
      }
      else
      {
        v14 = 0;
      }
    }
    else
    {
      v14 = v13;
    }
    if (*(_DWORD *)(v4 + 80))
    {
      v33 = v14;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
      v14 = v33;
      if (hasExceptionsAfterHandlingTraps)
        return 0;
    }
    v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  }
LABEL_20:
  v15 = *(JSC::JSGlobalObject **)(v6 + 40);
  WebCore::HTMLTableSectionElement::insertRow(v12, (WTF::StringImpl *)v14, (uint64_t)&v35);
  if (!v37)
  {
    v17 = v35;
    v35 = 0;
    v19 = WebCore::toJS(this, v15, v17, v16);
    if (*((_DWORD *)v17 + 6) == 2)
    {
      if ((*((_WORD *)v17 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v17, v18);
    }
    else
    {
      *((_DWORD *)v17 + 6) -= 2;
    }
LABEL_23:
    if (v37 != -1)
      ((void (*)(_BYTE *, WebCore::JSDOMGlobalObject **))off_1E32A0F20[v37])(v38, &v35);
    return (_BYTE *)v19;
  }
  if (v37 == 1)
  {
    v25 = (WTF::StringImpl *)v35;
    v38[0] = (_BYTE)v35;
    v26 = v36;
    v36 = 0;
    v39 = v26;
    if (!*(_QWORD *)(v4 + 16))
    {
      v27.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v35, (JSC::JSGlobalObject *)&v39);
      JSC::VM::throwException((JSC::VM *)v4, this, v27);
      v26 = v39;
    }
    v39 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v25);
      else
        *(_DWORD *)v26 -= 2;
    }
    v19 = 0;
    goto LABEL_23;
  }
  v30 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsHTMLTableSectionElementPrototypeFunction_deleteRow(v30, v31, v32);
}

_BYTE *WebCore::jsHTMLTableSectionElementPrototypeFunction_deleteRow(WebCore *this, unint64_t a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::HTMLTableSectionElement *v11;
  unint64_t v12;
  unint64_t v13;
  _DWORD *v14;
  int v15;
  WebCore::Node *v16;
  uint64_t v17;
  WTF *v18;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  JSValue v25;
  WTF *v26;
  uint64_t v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  JSValue v30;
  WTF::StringImpl *v31;
  unint64_t v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  _BYTE v36[40];
  uint64_t v37;
  JSC::JSGlobalObject *v38;
  _DWORD *v39;
  WTF::StringImpl *v40;
  unint64_t v41;
  WTF::StringImpl *v42;
  uint64_t v43;

  v4 = *((_QWORD *)this + 7);
  v33 = v4;
  v5 = *(_QWORD *)(a2 + 40);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "HTMLTableSectionElement", "deleteRow");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSHTMLTableSectionElement::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSHTMLTableSectionElement::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "HTMLTableSectionElement", "deleteRow");
  v11 = *(WebCore::HTMLTableSectionElement **)(v5 + 24);
  v34 = (WTF *)v36;
  v35 = 4;
  v36[32] = 0;
  v37 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v38 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v34;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    v17 = JSC::VM::throwException((JSC::VM *)v4, this, v25);
    goto LABEL_29;
  }
  v12 = *(_QWORD *)(a2 + 48);
  v41 = v12;
  if (v12 < 0xFFFE000000000000)
  {
    v21 = v12 - 0x2000000000000;
    if (v12 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, this);
      v21 = v32;
    }
    v22 = (v21 >> 52) & 0x7FF;
    if ((v22 - 1023) <= 0x53)
    {
      v23 = v21 >> (51 - (v21 >> 52));
      if (v22 > 0x433)
        LODWORD(v23) = v21 << ((v21 >> 52) - 51);
      if (v22 >= 0x41F)
        v24 = v23;
      else
        v24 = (((1 << ((v21 >> 52) + 1)) - 1) & v23) + (1 << ((v21 >> 52) + 1));
      if ((v21 & 0x8000000000000000) == 0)
        v13 = v24;
      else
        v13 = -v24;
    }
    else
    {
      v13 = 0;
    }
  }
  else
  {
    v13 = v12;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    goto LABEL_74;
  WebCore::HTMLTableSectionElement::rows(v11, (WTF::StringImpl *)a2, &v39);
  v14 = v39;
  v15 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v39 + 16))(v39);
  if ((_DWORD)v13 == -1)
  {
    if (!v15)
    {
      v41 = 0;
      v42 = 0;
      v43 = 0;
      goto LABEL_25;
    }
    v13 = (v15 - 1);
    if ((v13 & 0x80000000) != 0)
      goto LABEL_23;
  }
  else if ((v13 & 0x80000000) != 0)
  {
    goto LABEL_23;
  }
  if ((int)v13 >= v15)
  {
LABEL_23:
    LOBYTE(v41) = 0;
    v42 = 0;
    LOBYTE(v43) = 1;
    goto LABEL_25;
  }
  v16 = (WebCore::Node *)(*(uint64_t (**)(_DWORD *, unint64_t))(*(_QWORD *)v14 + 24))(v14, v13);
  WebCore::ContainerNode::removeChild(v11, v16, &v41);
LABEL_25:
  if (v14[4] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v14 + 8))(v14);
  else
    --v14[4];
  if ((_BYTE)v43)
  {
    a2 = v41;
    LOBYTE(v39) = v41;
    v29 = v42;
    v42 = 0;
    v40 = v29;
    if (!*(_QWORD *)(v4 + 16))
    {
      v30.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v41, (JSC::JSGlobalObject *)&v40);
      JSC::VM::throwException((JSC::VM *)v4, this, v30);
      v29 = v40;
    }
    v40 = 0;
    if (v29)
    {
      if (*(_DWORD *)v29 == 2)
        WTF::StringImpl::destroy(v29, (WTF::StringImpl *)a2);
      else
        *(_DWORD *)v29 -= 2;
    }
    if ((_BYTE)v43)
    {
      v31 = v42;
      v42 = 0;
      if (v31)
      {
        if (*(_DWORD *)v31 != 2)
        {
          v17 = 0;
          *(_DWORD *)v31 -= 2;
          goto LABEL_29;
        }
        WTF::StringImpl::destroy(v31, (WTF::StringImpl *)a2);
      }
    }
LABEL_74:
    v17 = 0;
    goto LABEL_29;
  }
  v17 = 10;
LABEL_29:
  if (HIDWORD(v35))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v34, v38);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v37;
    if (HIDWORD(v35))
    {
      v26 = v34;
      v27 = 8 * HIDWORD(v35);
      do
      {
        v28 = *(_QWORD *)v26;
        *(_QWORD *)v26 = 0;
        if (v28)
        {
          if (*(_DWORD *)(v28 + 24) == 2)
          {
            if ((*(_WORD *)(v28 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v28, (void *)a2);
          }
          else
          {
            *(_DWORD *)(v28 + 24) -= 2;
          }
        }
        v26 = (WTF *)((char *)v26 + 8);
        v27 -= 8;
      }
      while (v27);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v37;
  }
  v18 = v34;
  if (v36 != (_BYTE *)v34 && v34 != 0)
  {
    v34 = 0;
    LODWORD(v35) = 0;
    WTF::fastFree(v18, (void *)a2);
  }
  return (_BYTE *)v17;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19HTMLTableRowElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19HTMLTableRowElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLCollection>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char **v10;
  uint64_t result;
  int v12;
  unint64_t Structure;
  JSC::Structure *v14;
  JSC::JSCell *v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 3296);
  if (!v4)
    goto LABEL_9;
  v5 = *(_DWORD *)(v4 - 8);
  v6 = ((unint64_t)&WebCore::JSHTMLCollection::s_info + ~((_QWORD)&WebCore::JSHTMLCollection::s_info << 32)) ^ (((unint64_t)&WebCore::JSHTMLCollection::s_info + ~((_QWORD)&WebCore::JSHTMLCollection::s_info << 32)) >> 22);
  v7 = 9 * ((v6 + ~(v6 << 13)) ^ ((v6 + ~(v6 << 13)) >> 8));
  v8 = (v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27);
  v9 = v5 & ((v8 >> 31) ^ v8);
  v10 = *(char ***)(v4 + 16 * v9);
  if (v10 != &WebCore::JSHTMLCollection::s_info)
  {
    v12 = 1;
    while (v10)
    {
      v9 = ((_DWORD)v9 + v12) & v5;
      v10 = *(char ***)(v4 + 16 * v9);
      ++v12;
      if (v10 == &WebCore::JSHTMLCollection::s_info)
        goto LABEL_3;
    }
    goto LABEL_9;
  }
LABEL_3:
  result = *(_QWORD *)(v4 + 16 * v9 + 8);
  if (!result)
  {
LABEL_9:
    Structure = WebCore::JSHTMLCollectionPrototype::createStructure(a1, a2, *(JSC::JSCell **)(a2 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v15 = (JSC::JSCell *)WebCore::JSHTMLCollectionPrototype::create((WebCore::JSHTMLCollectionPrototype *)a1, (JSC::VM *)a2, Structure, v14);
    v16 = WebCore::JSHTMLCollection::createStructure(a1, a2, v15);
    return WebCore::cacheDOMStructure((JSCell *)a2, v16, (uint64_t)&WebCore::JSHTMLCollection::s_info);
  }
  return result;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCollection>::create(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCollection>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLCollection>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t *WebCore::Element::getNameAttribute(WebCore::Element *this)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((_QWORD *)this + 13);
  if (!v1)
    return (uint64_t *)MEMORY[0x1E0CBF2F8];
  v2 = *(_DWORD *)(v1 + 4);
  if ((v2 & 2) == 0)
    return (uint64_t *)MEMORY[0x1E0CBF2F8];
  if ((v2 & 1) != 0)
  {
    v4 = *(uint64_t **)(v1 + 40);
    LODWORD(v5) = *(_DWORD *)(v1 + 52);
  }
  else
  {
    v4 = (uint64_t *)(v1 + 32);
    LODWORD(v5) = v2 >> 5;
  }
  if ((_DWORD)v5)
  {
    v5 = v5;
    while (1)
    {
      v6 = *v4;
      if (*v4 == WebCore::HTMLNames::nameAttr
        || *(_QWORD *)(v6 + 24) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 24)
        && *(_QWORD *)(v6 + 32) == *(_QWORD *)(WebCore::HTMLNames::nameAttr + 32))
      {
        break;
      }
      v4 += 2;
      if (!--v5)
        goto LABEL_11;
    }
  }
  else
  {
LABEL_11:
    v4 = 0;
  }
  return v4 + 1;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_14HTMLCollectionENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSY_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEERKS16_EEEDcSY_DpT0_(uint64_t a1, _QWORD *a2, _DWORD **a3)
{
  _DWORD *v3;

  v3 = *a3;
  if (*a3)
    ++*v3;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_14HTMLCollectionENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSY_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEERKS16_EEEDcSY_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  if (*a3)
    *(_DWORD *)(v3 + 24) += 2;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_14HTMLCollectionENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSY_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEERKS16_EEEDcSY_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  if (*a3)
    ++*(_DWORD *)(v3 + 16);
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_14HTMLCollectionENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSW_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS14_EEEDcSW_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_14HTMLCollectionENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSW_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS14_EEEDcSW_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_14HTMLCollectionENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSW_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS14_EEEDcSW_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

__n128 _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_11WindowProxyEEENS4_INS_7ElementEEENS4_INS_14HTMLCollectionEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSK_12RawPtrTraitsIS5_EENSK_21DefaultRefDerefTraitsIS5_EEEENSL_IS7_NSM_IS7_EENSO_IS7_EEEENSL_IS9_NSM_IS9_EENSO_IS9_EEEEEEEEUlTyvE_JNSI_17integral_constantIlLl0EEENS11_IlLl1EEENS11_IlLl2EEEEEET_S15_(uint64_t a1, uint64_t **a2, uint64_t a3, WebCore::Element *a4)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  WebCore::JSDOMGlobalObject *v11;
  unint64_t i;
  uint64_t *v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t *v16;
  __n128 result;
  __int128 v18;
  WebCore::JSWindowProxy *v19;

  v6 = **a2;
  if (!v6)
  {
    v7 = a2[4];
    if (*((_DWORD *)v7 + 2))
      goto LABEL_27;
    if (*v7)
    {
      v19 = WebCore::WindowProxy::jsWindowProxy((WebCore::WindowProxy *)*v7, (WebCore::DOMWrapperWorld *)a2[2][415]);
      v8 = 2;
      if (v19)
        v8 = (uint64_t)v19;
    }
    else
    {
      v8 = 2;
    }
    v9 = a2[1];
    if (!*((_BYTE *)v9 + 8))
      *((_BYTE *)v9 + 8) = 1;
    *v9 = v8;
    v6 = **a2;
  }
  if (v6 != 1)
    goto LABEL_15;
  v10 = a2[4];
  if (*((_DWORD *)v10 + 2) != 1)
    goto LABEL_27;
  v11 = (WebCore::JSDOMGlobalObject *)*v10;
  if (*v10)
    goto LABEL_28;
  for (i = 2; ; i = WebCore::toJS((WebCore *)a2[2], (JSC::JSGlobalObject *)a2[3], v11, a4))
  {
    v13 = a2[1];
    if (!*((_BYTE *)v13 + 8))
      *((_BYTE *)v13 + 8) = 1;
    *v13 = i;
    v6 = **a2;
LABEL_15:
    if (v6 != 2)
      break;
    v14 = a2[4];
    if (*((_DWORD *)v14 + 2) == 2)
    {
      if (*v14)
        v15 = WebCore::wrap<WebCore::HTMLCollection>((int)a2[2], (JSC::VM *)a2[3], *v14);
      else
        v15 = 2;
      v16 = a2[1];
      if (!*((_BYTE *)v16 + 8))
        *((_BYTE *)v16 + 8) = 1;
      *v16 = v15;
      break;
    }
LABEL_27:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_28:
    ;
  }
  result = *(__n128 *)a2;
  v18 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  *(_QWORD *)(a1 + 32) = a2[4];
  return result;
}

BOOL WebCore::setJSHTMLElement_contentEditableSetter(JSC::JSGlobalObject *a1, WebCore::HTMLElement *a2, unint64_t a3)
{
  void *v5;
  int v6;
  _BYTE v8[8];
  int v9;
  uint64_t *v10;
  uint64_t v11;
  _BYTE v12[40];
  uint64_t v13;
  JSC::JSGlobalObject *v14;
  JSC::VM *v15;
  char v16;

  v15 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v10 = (uint64_t *)v12;
  v11 = 4;
  v12[32] = 0;
  v13 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v14 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v10;
  WebCore::Converter<WebCore::IDLDOMString>::convert(a1, a3, (uint64_t)v8);
  v6 = v9;
  if (!v9)
    WebCore::invokeFunctorPropagatingExceptionIfNecessary<WebCore::setJSHTMLElement_contentEditableSetter(JSC::JSGlobalObject &,WebCore::JSHTMLElement &,JSC::JSValue)::{lambda(void)#1}>(a1, &v15, a2, (uint64_t)v8);
  if (v9 != -1)
    ((void (*)(char *, _BYTE *))off_1E329F280[v9])(&v16, v8);
  if (HIDWORD(v11))
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v10, v14);
  WebCore::CustomElementReactionStack::s_currentProcessingStack = v13;
  WebCore::CustomElementQueue::~CustomElementQueue(&v10, v5);
  return v6 == 0;
}

uint64_t WebCore::invokeFunctorPropagatingExceptionIfNecessary<WebCore::setJSHTMLElement_contentEditableSetter(JSC::JSGlobalObject &,WebCore::JSHTMLElement &,JSC::JSValue)::{lambda(void)#1}>(JSC *a1, JSC::VM **a2, WebCore::HTMLElement *a3, uint64_t a4)
{
  WTF::StringImpl *v6;
  WTF::StringImpl *v8;
  unsigned __int8 v9[8];
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  char v13;

  WebCore::setJSHTMLElement_contentEditableSetter(JSC::JSGlobalObject &,WebCore::JSHTMLElement &,JSC::JSValue)::{lambda(void)#1}::operator()(&v11, a3, a4);
  if (v13)
  {
    v9[0] = v11;
    v8 = v12;
    v12 = 0;
    v10 = v8;
    if (!*((_QWORD *)*a2 + 2))
    {
      WebCore::propagateExceptionSlowPath(a1, a2, v9);
      v8 = v10;
    }
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v6);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  return WebCore::ExceptionOr<void>::~ExceptionOr((uint64_t)&v11, v6);
}

WTF::StringImpl *WebCore::setJSHTMLElement_contentEditableSetter(JSC::JSGlobalObject &,WebCore::JSHTMLElement &,JSC::JSValue)::{lambda(void)#1}::operator()(_QWORD *a1, WebCore::HTMLElement *a2, uint64_t a3)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *result;
  uint64_t v6;
  WTF::StringImpl *v7;

  if (*(_DWORD *)(a3 + 8))
  {
    v6 = std::__throw_bad_variant_access[abi:sn180100]();
    return (WTF::StringImpl *)WebCore::setJSHTMLElement_autofocusSetter(v6);
  }
  else
  {
    v3 = *(WTF::StringImpl **)a3;
    *(_QWORD *)a3 = 0;
    v7 = v3;
    WebCore::HTMLElement::setContentEditable(a2, (const WTF::String *)&v7, a1);
    result = v7;
    v7 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v4);
      else
        *(_DWORD *)result -= 2;
    }
  }
  return result;
}

BOOL WebCore::setJSHTMLElement_autofocusSetter(uint64_t a1, WTF::StringImpl **a2, unint64_t a3)
{
  __n128 v4;
  int v5;
  char v7[4];
  int v8;

  WebCore::convert<WebCore::IDLBoolean>(a1, a3, (uint64_t)v7);
  v5 = v8;
  if (!v8)
    WebCore::setJSHTMLElement_autofocusSetter(JSC::JSGlobalObject &,WebCore::JSHTMLElement &,JSC::JSValue)::{lambda(void)#1}::operator()(a2, v7[0], 0, v4);
  return v5 == 0;
}

WTF::StringImpl **WebCore::setJSHTMLElement_autofocusSetter(JSC::JSGlobalObject &,WebCore::JSHTMLElement &,JSC::JSValue)::{lambda(void)#1}::operator()(WTF::StringImpl **a1, char a2, int a3, __n128 a4)
{
  uint64_t v5;

  if (!a3)
    return WebCore::Element::setBooleanAttribute(a1, (const WebCore::QualifiedName *)&WebCore::HTMLNames::autofocusAttr, a2 != 0, a4);
  v5 = std::__throw_bad_variant_access[abi:sn180100]();
  return (WTF::StringImpl **)WebCore::setJSHTMLElement_tabIndexSetter(v5);
}

BOOL WebCore::setJSHTMLElement_tabIndexSetter(JSC::JSGlobalObject *a1, WebCore::Element *a2, unint64_t a3)
{
  void *v4;
  int v5;
  int v7;
  int v8;
  uint64_t *v9;
  uint64_t v10;
  _BYTE v11[40];
  uint64_t v12;
  JSC::JSGlobalObject *v13;

  v9 = (uint64_t *)v11;
  v10 = 4;
  v11[32] = 0;
  v12 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v13 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v9;
  WebCore::convertToInteger<WebCore::IDLLong>(a1, a3, &v7);
  v5 = v8;
  if (!v8)
    WebCore::Element::setTabIndexForBindings(a2, (WTF::AtomString *)v7);
  if (HIDWORD(v10))
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v9, v13);
  WebCore::CustomElementReactionStack::s_currentProcessingStack = v12;
  WebCore::CustomElementQueue::~CustomElementQueue(&v9, v4);
  return v5 == 0;
}

uint64_t WebCore::JSHTMLElement::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSHTMLElement *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSHTMLElement *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSHTMLElement::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 48;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  *(_QWORD *)(result + 32) = 0;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSHTMLUnknownElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

BOOL WebCore::setJSHTMLFieldSetElement_disabledSetter(JSC::JSGlobalObject *a1, WTF::StringImpl **a2, unint64_t a3)
{
  void *v4;
  __n128 v5;
  int v6;
  char v8[4];
  int v9;
  uint64_t *v10;
  uint64_t v11;
  _BYTE v12[40];
  uint64_t v13;
  JSC::JSGlobalObject *v14;

  v10 = (uint64_t *)v12;
  v11 = 4;
  v12[32] = 0;
  v13 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v14 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v10;
  WebCore::convert<WebCore::IDLBoolean>((uint64_t)a1, a3, (uint64_t)v8);
  v6 = v9;
  if (!v9)
    WebCore::setJSHTMLFieldSetElement_disabledSetter(JSC::JSGlobalObject &,WebCore::JSHTMLFieldSetElement &,JSC::JSValue)::{lambda(void)#1}::operator()(a2, v8[0], 0, v5);
  if (HIDWORD(v11))
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v10, v14);
  WebCore::CustomElementReactionStack::s_currentProcessingStack = v13;
  WebCore::CustomElementQueue::~CustomElementQueue(&v10, v4);
  return v6 == 0;
}

WTF::StringImpl **WebCore::setJSHTMLFieldSetElement_disabledSetter(JSC::JSGlobalObject &,WebCore::JSHTMLFieldSetElement &,JSC::JSValue)::{lambda(void)#1}::operator()(WTF::StringImpl **a1, char a2, int a3, __n128 a4)
{
  WebCore::JSHTMLFormControlsCollection *v5;
  JSC::VM *v6;

  if (!a3)
    return WebCore::Element::setBooleanAttribute(a1, (const WebCore::QualifiedName *)&WebCore::HTMLNames::disabledAttr, a2 != 0, a4);
  v5 = (WebCore::JSHTMLFormControlsCollection *)std::__throw_bad_variant_access[abi:sn180100]();
  return (WTF::StringImpl **)WebCore::getDOMStructure<WebCore::JSHTMLFormControlsCollection>(v5, v6);
}

uint64_t WebCore::getDOMStructure<WebCore::JSHTMLFormControlsCollection>(WebCore::JSHTMLFormControlsCollection *a1, JSC::VM *a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSHTMLFormControlsCollection::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSHTMLFormControlsCollection::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSHTMLFormControlsCollection::s_info);
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore13RadioNodeListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSS_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEEOS10_EEEDcSS_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore13RadioNodeListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_7ElementENSC_ISH_EENSE_ISH_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISL_LNS0_6_TraitE1EEEEEvRSM_OT_EUlRSS_OT0_E_JRNS0_6__baseILSP_1EJSG_SK_EEEOS10_EEEDcSS_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t WebCore::JSConverter<WebCore::IDLNullable<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::RadioNodeList>,WebCore::IDLInterface<WebCore::Element>>>>::convert<std::variant<WTF::RefPtr<WebCore::RadioNodeList,WTF::RawPtrTraits<WebCore::RadioNodeList>,WTF::DefaultRefDerefTraits<WebCore::RadioNodeList>>,WTF::RefPtr<WebCore::Element,WTF::RawPtrTraits<WebCore::Element>,WTF::DefaultRefDerefTraits<WebCore::Element>>>>(uint64_t a1, uint64_t a2, uint64_t a3, WebCore::Element *a4)
{
  uint64_t v6;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t *v13;
  _BYTE v14[8];
  int v15;
  char v16;
  _BYTE v17[8];
  int v18;
  _BYTE v19[40];
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;

  LOBYTE(v23) = 0;
  LODWORD(v24) = -1;
  v6 = *(unsigned int *)(a3 + 8);
  if ((_DWORD)v6 == -1)
  {
    v14[0] = 0;
    v15 = -1;
  }
  else
  {
    ((void (*)(_BYTE *, uint64_t **))off_1E329B790[v6])(v19, &v23);
    LODWORD(v24) = v6;
    LOBYTE(v25) = 1;
    ((void (*)(_BYTE *, uint64_t **))off_1E329B780[v6])(v19, &v23);
    v8 = *(unsigned int *)(a3 + 8);
    v14[0] = 0;
    v15 = -1;
    if ((_DWORD)v8 != -1)
    {
      ((void (*)(uint64_t **, _BYTE *, uint64_t))off_1E32A0F70[v8])(&v23, v14, a3);
      v15 = v8;
      v16 = 1;
      v17[0] = 0;
      v18 = -1;
      ((void (*)(uint64_t **, _BYTE *, _BYTE *))off_1E329B790[v8])(&v23, v17, v14);
      v18 = v8;
      goto LABEL_6;
    }
  }
  v16 = 1;
  v17[0] = 0;
  v18 = -1;
  v8 = -1;
LABEL_6:
  LOBYTE(v20) = 0;
  v21 = 0;
  v22 = v8;
  v23 = &v22;
  v24 = &v20;
  v25 = a1;
  v26 = a2;
  v27 = v17;
  v9 = _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_13RadioNodeListEEENS4_INS_7ElementEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSI_12RawPtrTraitsIS5_EENSI_21DefaultRefDerefTraitsIS5_EEEENSJ_IS7_NSK_IS7_EENSM_IS7_EEEEEEEEUlTyvE_JNSG_17integral_constantIlLl0EEENSW_IlLl1EEEEEET_SZ_((uint64_t)v19, &v23, a3, a4);
  if (v21)
  {
    v10 = v20;
    if (v18 != -1)
      ((void (*)(uint64_t **, _BYTE *, __n128))off_1E329B780[v18])(&v23, v17, v9);
    v18 = -1;
    if (v16)
    {
      if (v15 != -1)
        ((void (*)(uint64_t **, _BYTE *))off_1E329B780[v15])(&v23, v14);
      v15 = -1;
    }
    return v10;
  }
  else
  {
    v12 = std::__throw_bad_optional_access[abi:sn180100]();
    return WebCore::JSHTMLFormControlsCollection::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v12, v13);
  }
}

uint64_t WebCore::JSHTMLFormControlsCollection::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 4344);
  *(_QWORD *)(a1 + 4344) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::jsHTMLFormElement_actionGetter(uint64_t a1, WebCore::HTMLFormElement *this)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v7;

  WebCore::HTMLFormElement::action(this, &v7);
  v4 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>(a1, (uint64_t *)&v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v3);
    else
      *(_DWORD *)v5 -= 2;
  }
  return v4;
}

uint64_t WebCore::jsHTMLFormElement_methodGetter(uint64_t a1, WebCore::HTMLFormElement *this)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v7;

  WebCore::HTMLFormElement::method(this, this, &v7);
  v4 = WebCore::toJS<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>,WTF::AtomString>(*(_QWORD *)(a1 + 56), (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v3);
    else
      *(_DWORD *)v5 -= 2;
  }
  return v4;
}

uint64_t WebCore::jsHTMLFormElement_nameGetter(uint64_t a1, WebCore::Element *this)
{
  uint64_t *NameAttribute;
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 56);
  NameAttribute = WebCore::Element::getNameAttribute(this);
  return WebCore::toJS<WebCore::IDLUSVString,WTF::String>(a1, (uint64_t)&v5, NameAttribute);
}

unint64_t WebCore::jsHTMLFormElement_elementsGetter(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSHTMLFormElement *a3)
{
  int v3;
  JSC::VM *v4;
  unint64_t v5;
  _DWORD *v6;
  _DWORD *v8;

  v3 = (int)this;
  v4 = *(JSC::VM **)(16 * (a2 & 0xFFFFFFFE) + 0x28);
  WebCore::HTMLFormElement::elements(a3, a2, (uint64_t *)&v8);
  v5 = WebCore::wrap<WebCore::HTMLCollection>(v3, v4, (uint64_t)v8);
  v6 = v8;
  v8 = 0;
  if (v6)
  {
    if (v6[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 8))(v6);
    else
      --v6[4];
  }
  return v5;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameElement>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameElement>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameElement>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameSetElement>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameSetElement>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLFrameSetElement>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t WebCore::JSHTMLIFrameElement::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 4408);
  *(_QWORD *)(a1 + 4408) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::JSHTMLImageElement::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMLegacyFactoryFunction<WebCore::JSHTMLImageElement>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(*((_QWORD *)a3 + 7) + 755))
    __dmb(0xAu);
  WebCore::JSDOMLegacyFactoryFunction<WebCore::JSHTMLImageElement>::initializeProperties(v5, a1, a3);
  return v5;
}

BOOL WebCore::setJSHTMLInputElement_autocompleteSetter(JSC::JSGlobalObject *a1, WebCore::Element *a2, unint64_t a3)
{
  int v4;
  _BYTE v6[8];
  int v7;
  char v8;

  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)v6);
  v4 = v7;
  if (!v7)
    WebCore::setJSHTMLInputElement_autocompleteSetter(JSC::JSGlobalObject &,WebCore::JSHTMLInputElement &,JSC::JSValue)::{lambda(void)#1}::operator()(a2, (uint64_t)v6);
  if (v7 != -1)
    ((void (*)(char *, _BYTE *))off_1E3299910[v7])(&v8, v6);
  return v4 == 0;
}

WTF::StringImpl *WebCore::setJSHTMLInputElement_autocompleteSetter(JSC::JSGlobalObject &,WebCore::JSHTMLInputElement &,JSC::JSValue)::{lambda(void)#1}::operator()(WebCore::Element *a1, uint64_t a2)
{
  WTF::StringImpl *v2;
  WTF::StringImpl *v3;
  WTF::StringImpl *result;
  uint64_t v5;
  WTF::StringImpl *v6;

  if (*(_DWORD *)(a2 + 8))
  {
    v5 = std::__throw_bad_variant_access[abi:sn180100]();
    return (WTF::StringImpl *)WebCore::setJSHTMLInputElement_placeholderSetter(v5);
  }
  else
  {
    v2 = *(WTF::StringImpl **)a2;
    *(_QWORD *)a2 = 0;
    v6 = v2;
    WebCore::Element::setAttributeWithoutSynchronization(a1, (const WebCore::QualifiedName *)&WebCore::HTMLNames::autocompleteAttr, &v6);
    result = v6;
    v6 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v3);
      else
        *(_DWORD *)result -= 2;
    }
  }
  return result;
}

BOOL WebCore::setJSHTMLInputElement_placeholderSetter(JSC::JSGlobalObject *a1, WebCore::Element *a2, unint64_t a3)
{
  int v4;
  _BYTE v6[8];
  int v7;
  char v8;

  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, a3, (uint64_t)v6);
  v4 = v7;
  if (!v7)
    WebCore::setJSHTMLInputElement_placeholderSetter(JSC::JSGlobalObject &,WebCore::JSHTMLInputElement &,JSC::JSValue)::{lambda(void)#1}::operator()(a2, (uint64_t)v6);
  if (v7 != -1)
    ((void (*)(char *, _BYTE *))off_1E3299910[v7])(&v8, v6);
  return v4 == 0;
}

WTF::StringImpl *WebCore::setJSHTMLInputElement_placeholderSetter(JSC::JSGlobalObject &,WebCore::JSHTMLInputElement &,JSC::JSValue)::{lambda(void)#1}::operator()(WebCore::Element *a1, uint64_t a2)
{
  WTF::StringImpl *v2;
  WTF::StringImpl *v3;
  WTF::StringImpl *result;
  int v5;
  int v6;
  JSC::JSRopeString *v7;
  WTF::StringImpl *v8;

  if (*(_DWORD *)(a2 + 8))
  {
    v5 = std::__throw_bad_variant_access[abi:sn180100]();
    return (WTF::StringImpl *)WebCore::setJSHTMLLabelElement_htmlForSetter(v5, v6, v7);
  }
  else
  {
    v2 = *(WTF::StringImpl **)a2;
    *(_QWORD *)a2 = 0;
    v8 = v2;
    WebCore::Element::setAttributeWithoutSynchronization(a1, (const WebCore::QualifiedName *)&WebCore::HTMLNames::placeholderAttr, &v8);
    result = v8;
    v8 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v3);
      else
        *(_DWORD *)result -= 2;
    }
  }
  return result;
}

BOOL WebCore::setJSHTMLLabelElement_htmlForSetter(JSC::JSGlobalObject *a1, WebCore::Element *a2, JSC::JSRopeString *this)
{
  int v4;
  _BYTE v6[8];
  int v7;
  char v8;

  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)v6);
  v4 = v7;
  if (!v7)
    WebCore::setJSHTMLLabelElement_htmlForSetter(JSC::JSGlobalObject &,WebCore::JSHTMLLabelElement &,JSC::JSValue)::{lambda(void)#1}::operator()(a2, (uint64_t)v6);
  if (v7 != -1)
    ((void (*)(char *, _BYTE *))off_1E3299910[v7])(&v8, v6);
  return v4 == 0;
}

WTF::StringImpl *WebCore::setJSHTMLLabelElement_htmlForSetter(JSC::JSGlobalObject &,WebCore::JSHTMLLabelElement &,JSC::JSValue)::{lambda(void)#1}::operator()(WebCore::Element *a1, uint64_t a2)
{
  WTF::StringImpl *v2;
  WTF::StringImpl *v3;
  WTF::StringImpl *result;
  unint64_t v5;
  WTF::StringImpl *v6;

  if (*(_DWORD *)(a2 + 8))
  {
    v5 = std::__throw_bad_variant_access[abi:sn180100]();
    return (WTF::StringImpl *)JSC::jsDynamicCast<WebCore::JSHTMLLabelElement *>(v5);
  }
  else
  {
    v2 = *(WTF::StringImpl **)a2;
    *(_QWORD *)a2 = 0;
    v6 = v2;
    WebCore::Element::setAttributeWithoutSynchronization(a1, (const WebCore::QualifiedName *)&WebCore::HTMLNames::forAttr, &v6);
    result = v6;
    v6 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v3);
      else
        *(_DWORD *)result -= 2;
    }
  }
  return result;
}

unint64_t JSC::jsDynamicCast<WebCore::JSHTMLLabelElement *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSHTMLLabelElement::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSHTMLLabelElement::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

unint64_t WebCore::jsHTMLLinkElement_relListGetter(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSHTMLLinkElement *a3)
{
  uint64_t v4;
  WTF *v5;

  v4 = *(_QWORD *)(16 * (a2 & 0xFFFFFFFE) + 0x28);
  v5 = (WTF *)WebCore::HTMLLinkElement::relList(a3);
  return WebCore::wrap<WebCore::DOMTokenList>((uint64_t)this, v4, v5);
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMarqueeElement>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMarqueeElement>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMarqueeElement>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMediaElement>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSHTMLMediaElement>::initializeProperties(v5, a1, a3);
  return v5;
}

